b 1
\& analysis failed
.Ve
.IP "laTextOverFlowErr" 4
.IX Item "laTextOverFlowErr"
.Vb 1
\& text is too long
.Ve
.IP "laDictionaryNotOpenedErr" 4
.IX Item "laDictionaryNotOpenedErr"
.Vb 1
\& the dictionary is not opened
.Ve
.IP "laDictionaryUnknownErr" 4
.IX Item "laDictionaryUnknownErr"
.Vb 1
\& can\*(Aqt use this dictionary with this environment
.Ve
.IP "laDictionaryTooManyErr" 4
.IX Item "laDictionaryTooManyErr"
.Vb 1
\& too many dictionaries
.Ve
.IP "laPropertyValueErr" 4
.IX Item "laPropertyValueErr"
.Vb 1
\& Invalid property value
.Ve
.IP "laPropertyUnknownErr" 4
.IX Item "laPropertyUnknownErr"
.Vb 1
\& the property is unknown to this environment
.Ve
.IP "laPropertyIsReadOnlyErr" 4
.IX Item "laPropertyIsReadOnlyErr"
.Vb 1
\& the property is read only
.Ve
.IP "laPropertyNotFoundErr" 4
.IX Item "laPropertyNotFoundErr"
.Vb 1
\& can\*(Aqt find the property
.Ve
.IP "laPropertyErr" 4
.IX Item "laPropertyErr"
.Vb 1
\& Error in properties
.Ve
.IP "kUSBNoErr" 4
.IX Item "kUSBNoErr"
.PD 0
.IP "kUSBNoTran" 4
.IX Item "kUSBNoTran"
.IP "kUSBNoDelay" 4
.IX Item "kUSBNoDelay"
.IP "kUSBNotSent2Err" 4
.IX Item "kUSBNotSent2Err"
.PD
.Vb 1
\& Transaction not sent
.Ve
.IP "kUSBNotSent1Err" 4
.IX Item "kUSBNotSent1Err"
.Vb 1
\& Transaction not sent
.Ve
.IP "kUSBBufUnderRunErr" 4
.IX Item "kUSBBufUnderRunErr"
.Vb 1
\& Host hardware failure on data out, PCI busy?
.Ve
.IP "kUSBBufOvrRunErr" 4
.IX Item "kUSBBufOvrRunErr"
.Vb 1
\& Host hardware failure on data in, PCI busy?
.Ve
.IP "kUSBRes2Err" 4
.IX Item "kUSBRes2Err"
.PD 0
.IP "kUSBRes1Err" 4
.IX Item "kUSBRes1Err"
.IP "kUSBUnderRunErr" 4
.IX Item "kUSBUnderRunErr"
.PD
.Vb 1
\& Less data than buffer
.Ve
.IP "kUSBOverRunErr" 4
.IX Item "kUSBOverRunErr"
.Vb 1
\& Packet too large or more data than buffer
.Ve
.IP "kUSBWrongPIDErr" 4
.IX Item "kUSBWrongPIDErr"
.Vb 1
\& Pipe stall, Bad or wrong PID
.Ve
.IP "kUSBPIDCheckErr" 4
.IX Item "kUSBPIDCheckErr"
.Vb 1
\& Pipe stall, PID CRC error
.Ve
.IP "kUSBNotRespondingErr" 4
.IX Item "kUSBNotRespondingErr"
.Vb 1
\& Pipe stall, No device, device hung
.Ve
.IP "kUSBEndpointStallErr" 4
.IX Item "kUSBEndpointStallErr"
.Vb 1
\& Device didn\*(Aqt understand
.Ve
.IP "kUSBDataToggleErr" 4
.IX Item "kUSBDataToggleErr"
.Vb 1
\& Pipe stall, Bad data toggle
.Ve
.IP "kUSBBitstufErr" 4
.IX Item "kUSBBitstufErr"
.Vb 1
\& Pipe stall, bitstuffing
.Ve
.IP "kUSBCRCErr" 4
.IX Item "kUSBCRCErr"
.Vb 1
\& Pipe stall, bad CRC
.Ve
.IP "kUSBQueueFull" 4
.IX Item "kUSBQueueFull"
.Vb 1
\& Internal queue maxxed
.Ve
.IP "kUSBNotHandled" 4
.IX Item "kUSBNotHandled"
.Vb 1
\& Notification was not handled   (same as NotFound)
.Ve
.IP "kUSBUnknownNotification" 4
.IX Item "kUSBUnknownNotification"
.Vb 1
\& Notification type not defined
.Ve
.IP "kUSBInternalReserved10" 4
.IX Item "kUSBInternalReserved10"
.PD 0
.IP "kUSBInternalReserved9" 4
.IX Item "kUSBInternalReserved9"
.IP "kUSBInternalReserved8" 4
.IX Item "kUSBInternalReserved8"
.IP "kUSBInternalReserved7" 4
.IX Item "kUSBInternalReserved7"
.IP "kUSBInternalReserved6" 4
.IX Item "kUSBInternalReserved6"
.IP "kUSBInternalReserved5" 4
.IX Item "kUSBInternalReserved5"
.IP "kUSBInternalReserved4" 4
.IX Item "kUSBInternalReserved4"
.IP "kUSBInternalReserved3" 4
.IX Item "kUSBInternalReserved3"
.IP "kUSBInternalReserved2" 4
.IX Item "kUSBInternalReserved2"
.IP "kUSBPortDisabled" 4
.IX Item "kUSBPortDisabled"
.PD
.Vb 1
\& The port you are attached to is disabled, use USBDeviceReset.
.Ve
.IP "kUSBQueueAborted" 4
.IX Item "kUSBQueueAborted"
.Vb 1
\& Pipe zero stall cleared.
.Ve
.IP "kUSBTimedOut" 4
.IX Item "kUSBTimedOut"
.Vb 1
\& Transaction timed out.
.Ve
.IP "kUSBDeviceDisconnected" 4
.IX Item "kUSBDeviceDisconnected"
.Vb 1
\& Disconnected during suspend or reset
.Ve
.IP "kUSBDeviceNotSuspended" 4
.IX Item "kUSBDeviceNotSuspended"
.Vb 1
\& device is not suspended for resume
.Ve
.IP "kUSBDeviceSuspended" 4
.IX Item "kUSBDeviceSuspended"
.Vb 1
\& Device is suspended
.Ve
.IP "kUSBInvalidBuffer" 4
.IX Item "kUSBInvalidBuffer"
.Vb 1
\& bad buffer, usually nil
.Ve
.IP "kUSBDevicePowerProblem" 4
.IX Item "kUSBDevicePowerProblem"
.Vb 1
\& Device has a power problem
.Ve
.IP "kUSBDeviceBusy" 4
.IX Item "kUSBDeviceBusy"
.Vb 1
\& Device is already being configured
.Ve
.IP "kUSBUnknownInterfaceErr" 4
.IX Item "kUSBUnknownInterfaceErr"
.Vb 1
\& Interface ref not recognised
.Ve
.IP "kUSBPipeStalledError" 4
.IX Item "kUSBPipeStalledError"
.Vb 1
\& Pipe has stalled, error needs to be cleared
.Ve
.IP "kUSBPipeIdleError" 4
.IX Item "kUSBPipeIdleError"
.Vb 1
\& Pipe is Idle, it will not accept transactions
.Ve
.IP "kUSBNoBandwidthError" 4
.IX Item "kUSBNoBandwidthError"
.Vb 1
\& Not enough bandwidth available
.Ve
.IP "kUSBAbortedError" 4
.IX Item "kUSBAbortedError"
.Vb 1
\& Pipe aborted
.Ve
.IP "kUSBFlagsError" 4
.IX Item "kUSBFlagsError"
.Vb 1
\& Unused flags not zeroed
.Ve
.IP "kUSBCompletionError" 4
.IX Item "kUSBCompletionError"
.Vb 1
\& no completion routine specified
.Ve
.IP "kUSBPBLengthError" 4
.IX Item "kUSBPBLengthError"
.Vb 1
\& pbLength too small
.Ve
.IP "kUSBPBVersionError" 4
.IX Item "kUSBPBVersionError"
.Vb 1
\& Wrong pbVersion
.Ve
.IP "kUSBNotFound" 4
.IX Item "kUSBNotFound"
.Vb 1
\& Not found
.Ve
.IP "kUSBOutOfMemoryErr" 4
.IX Item "kUSBOutOfMemoryErr"
.Vb 1
\& Out of memory
.Ve
.IP "kUSBDeviceErr" 4
.IX Item "kUSBDeviceErr"
.Vb 1
\& Device error
.Ve
.IP "kUSBNoDeviceErr" 4
.IX Item "kUSBNoDeviceErr"
.Vb 1
\& No device
.Ve
.IP "kUSBAlreadyOpenErr" 4
.IX Item "kUSBAlreadyOpenErr"
.Vb 1
\& Already open
.Ve
.IP "kUSBTooManyTransactionsErr" 4
.IX Item "kUSBTooManyTransactionsErr"
.Vb 1
\& Too many transactions
.Ve
.IP "kUSBUnknownRequestErr" 4
.IX Item "kUSBUnknownRequestErr"
.Vb 1
\& Unknown request
.Ve
.IP "kUSBRqErr" 4
.IX Item "kUSBRqErr"
.Vb 1
\& Request error
.Ve
.IP "kUSBIncorrectTypeErr" 4
.IX Item "kUSBIncorrectTypeErr"
.Vb 1
\& Incorrect type
.Ve
.IP "kUSBTooManyPipesErr" 4
.IX Item "kUSBTooManyPipesErr"
.Vb 1
\& Too many pipes
.Ve
.IP "kUSBUnknownPipeErr" 4
.IX Item "kUSBUnknownPipeErr"
.Vb 1
\& Pipe ref not recognised
.Ve
.IP "kUSBUnknownDeviceErr" 4
.IX Item "kUSBUnknownDeviceErr"
.Vb 1
\& device ref not recognised
.Ve
.IP "dcmParamErr" 4
.IX Item "dcmParamErr"
.Vb 1
\& bad parameter
.Ve
.IP "dcmNotDictionaryErr" 4
.IX Item "dcmNotDictionaryErr"
.Vb 1
\& not dictionary
.Ve
.IP "dcmBadDictionaryErr" 4
.IX Item "dcmBadDictionaryErr"
.Vb 1
\& invalid dictionary
.Ve
.IP "dcmPermissionErr" 4
.IX Item "dcmPermissionErr"
.Vb 1
\& invalid permission
.Ve
.IP "dcmDictionaryNotOpenErr" 4
.IX Item "dcmDictionaryNotOpenErr"
.Vb 1
\& dictionary not opened
.Ve
.IP "dcmDictionaryBusyErr" 4
.IX Item "dcmDictionaryBusyErr"
.Vb 1
\& dictionary is busy
.Ve
.IP "dcmBlockFullErr" 4
.IX Item "dcmBlockFullErr"
.Vb 1
\& dictionary block full
.Ve
.IP "dcmNoRecordErr" 4
.IX Item "dcmNoRecordErr"
.Vb 1
\& no such record
.Ve
.IP "dcmDupRecordErr" 4
.IX Item "dcmDupRecordErr"
.Vb 1
\& same record already exist
.Ve
.IP "dcmNecessaryFieldErr" 4
.IX Item "dcmNecessaryFieldErr"
.Vb 1
\& lack required/identify field
.Ve
.IP "dcmBadFieldInfoErr" 4
.IX Item "dcmBadFieldInfoErr"
.Vb 1
\& incomplete information
.Ve
.IP "dcmBadFieldTypeErr" 4
.IX Item "dcmBadFieldTypeErr"
.Vb 1
\& no such field type supported
.Ve
.IP "dcmNoFieldErr" 4
.IX Item "dcmNoFieldErr"
.Vb 1
\& no such field exist
.Ve
.IP "dcmBadKeyErr" 4
.IX Item "dcmBadKeyErr"
.Vb 1
\& bad key information
.Ve
.IP "dcmTooManyKeyErr" 4
.IX Item "dcmTooManyKeyErr"
.Vb 1
\& too many key field
.Ve
.IP "dcmBadDataSizeErr" 4
.IX Item "dcmBadDataSizeErr"
.Vb 1
\& too big data size
.Ve
.IP "dcmBadFindMethodErr" 4
.IX Item "dcmBadFindMethodErr"
.Vb 1
\& no such find method supported
.Ve
.IP "dcmBadPropertyErr" 4
.IX Item "dcmBadPropertyErr"
.Vb 1
\& no such property exist
.Ve
.IP "dcmProtectedErr" 4
.IX Item "dcmProtectedErr"
.Vb 1
\& need keyword to use dictionary
.Ve
.IP "dcmNoAccessMethodErr" 4
.IX Item "dcmNoAccessMethodErr"
.Vb 1
\& no such AccessMethod
.Ve
.IP "dcmBadFeatureErr" 4
.IX Item "dcmBadFeatureErr"
.Vb 1
\& invalid AccessMethod feature
.Ve
.IP "dcmIterationCompleteErr" 4
.IX Item "dcmIterationCompleteErr"
.Vb 1
\& no more item in iterator
.Ve
.IP "kRAInvalidParameter" 4
.IX Item "kRAInvalidParameter"
.PD 0
.IP "kRAInvalidPort" 4
.IX Item "kRAInvalidPort"
.IP "kRAStartupFailed" 4
.IX Item "kRAStartupFailed"
.IP "kRAPortSetupFailed" 4
.IX Item "kRAPortSetupFailed"
.IP "kRAOutOfMemory" 4
.IX Item "kRAOutOfMemory"
.IP "kRANotSupported" 4
.IX Item "kRANotSupported"
.IP "kRAMissingResources" 4
.IX Item "kRAMissingResources"
.IP "kRAIncompatiblePrefs" 4
.IX Item "kRAIncompatiblePrefs"
.IP "kRANotConnected" 4
.IX Item "kRANotConnected"
.IP "kRAConnectionCanceled" 4
.IX Item "kRAConnectionCanceled"
.IP "kRAUnknownUser" 4
.IX Item "kRAUnknownUser"
.IP "kRAInvalidPassword" 4
.IX Item "kRAInvalidPassword"
.IP "kRAInternalError" 4
.IX Item "kRAInternalError"
.IP "kRAInstallationDamaged" 4
.IX Item "kRAInstallationDamaged"
.IP "kRAPortBusy" 4
.IX Item "kRAPortBusy"
.IP "kRAUnknownPortState" 4
.IX Item "kRAUnknownPortState"
.IP "kRAInvalidPortState" 4
.IX Item "kRAInvalidPortState"
.IP "kRAInvalidSerialProtocol" 4
.IX Item "kRAInvalidSerialProtocol"
.IP "kRAUserLoginDisabled" 4
.IX Item "kRAUserLoginDisabled"
.IP "kRAUserPwdChangeRequired" 4
.IX Item "kRAUserPwdChangeRequired"
.IP "kRAUserPwdEntryRequired" 4
.IX Item "kRAUserPwdEntryRequired"
.IP "kRAUserInteractionRequired" 4
.IX Item "kRAUserInteractionRequired"
.IP "kRAInitOpenTransportFailed" 4
.IX Item "kRAInitOpenTransportFailed"
.IP "kRARemoteAccessNotReady" 4
.IX Item "kRARemoteAccessNotReady"
.IP "kRATCPIPInactive" 4
.IX Item "kRATCPIPInactive"
.PD
.Vb 1
\& TCP/IP inactive, cannot be loaded
.Ve
.IP "kRATCPIPNotConfigured" 4
.IX Item "kRATCPIPNotConfigured"
.Vb 1
\& TCP/IP not configured, could be loaded
.Ve
.IP "kRANotPrimaryInterface" 4
.IX Item "kRANotPrimaryInterface"
.Vb 1
\& when IPCP is not primary TCP/IP intf.
.Ve
.IP "kRAConfigurationDBInitErr" 4
.IX Item "kRAConfigurationDBInitErr"
.PD 0
.IP "kRAPPPProtocolRejected" 4
.IX Item "kRAPPPProtocolRejected"
.IP "kRAPPPAuthenticationFailed" 4
.IX Item "kRAPPPAuthenticationFailed"
.IP "kRAPPPNegotiationFailed" 4
.IX Item "kRAPPPNegotiationFailed"
.IP "kRAPPPUserDisconnected" 4
.IX Item "kRAPPPUserDisconnected"
.IP "kRAPPPPeerDisconnected" 4
.IX Item "kRAPPPPeerDisconnected"
.IP "kRAPeerNotResponding" 4
.IX Item "kRAPeerNotResponding"
.IP "kRAATalkInactive" 4
.IX Item "kRAATalkInactive"
.IP "kRAExtAuthenticationFailed" 4
.IX Item "kRAExtAuthenticationFailed"
.IP "kRANCPRejectedbyPeer" 4
.IX Item "kRANCPRejectedbyPeer"
.IP "kRADuplicateIPAddr" 4
.IX Item "kRADuplicateIPAddr"
.IP "kRACallBackFailed" 4
.IX Item "kRACallBackFailed"
.IP "kATSUInvalidTextLayoutErr" 4
.IX Item "kATSUInvalidTextLayoutErr"
.PD
.Vb 2
\& An attempt was made to use a ATSUTextLayout
\&which hadn\*(Aqt been initialized or is otherwise
.Ve
.IP "kATSUInvalidStyleErr" 4
.IX Item "kATSUInvalidStyleErr"
.Vb 2
\& An attempt was made to use a ATSUStyle which
\&hadn\*(Aqt been properly allocated or is otherwise
.Ve
.IP "kATSUInvalidTextRangeErr" 4
.IX Item "kATSUInvalidTextRangeErr"
.Vb 2
\& An attempt was made to extract information
\&from or perform an operation on a ATSUTextLayout
.Ve
.IP "kATSUFontsMatched" 4
.IX Item "kATSUFontsMatched"
.Vb 2
\& This is not an error code but is returned by
\&ATSUMatchFontsToText() when changes need to
.Ve
.IP "kATSUFontsNotMatched" 4
.IX Item "kATSUFontsNotMatched"
.Vb 2
\& This value is returned by ATSUMatchFontsToText()
\&when the text contains Unicode characters which
.Ve
.IP "kATSUNoCorrespondingFontErr" 4
.IX Item "kATSUNoCorrespondingFontErr"
.Vb 2
\& This value is retrned by font ID conversion
\&routines ATSUFONDtoFontID() and ATSUFontIDtoFOND()
.Ve
.IP "kATSUInvalidFontErr" 4
.IX Item "kATSUInvalidFontErr"
.Vb 1
\& Used when an attempt was made to use an invalid font ID.
.Ve
.IP "kATSUInvalidAttributeValueErr" 4
.IX Item "kATSUInvalidAttributeValueErr"
.Vb 2
\& Used when an attempt was made to use an attribute with
\&a bad or undefined value.
.Ve
.IP "kATSUInvalidAttributeSizeErr" 4
.IX Item "kATSUInvalidAttributeSizeErr"
.Vb 2
\& Used when an attempt was made to use an attribute with a
\&bad size.
.Ve
.IP "kATSUInvalidAttributeTagErr" 4
.IX Item "kATSUInvalidAttributeTagErr"
.Vb 2
\& Used when an attempt was made to use a tag value that
\&was not appropriate for the function call it was used.
.Ve
.IP "kATSUInvalidCacheErr" 4
.IX Item "kATSUInvalidCacheErr"
.Vb 2
\& Used when an attempt was made to read in style data
\&from an invalid cache.  Either the format of the
.Ve
.IP "kATSUNotSetErr" 4
.IX Item "kATSUNotSetErr"
.Vb 2
\& Used when the client attempts to retrieve an attribute,
\&font feature, or font variation from a style when it
.Ve
.IP "kATSUNoStyleRunsAssignedErr" 4
.IX Item "kATSUNoStyleRunsAssignedErr"
.Vb 2
\& Used when an attempt was made to measure, highlight or draw
\&a ATSUTextLayout object that has no styleRuns associated with it.
.Ve
.IP "kATSUQuickDrawTextErr" 4
.IX Item "kATSUQuickDrawTextErr"
.Vb 2
\& Used when QuickDraw Text encounters an error rendering or measuring
\&a line of ATSUI text.
.Ve
.IP "kATSULowLevelErr" 4
.IX Item "kATSULowLevelErr"
.Vb 2
\& Used when an error was encountered within the low level ATS
\&mechanism performing an operation requested by ATSUI.
.Ve
.IP "kATSUNoFontCmapAvailableErr" 4
.IX Item "kATSUNoFontCmapAvailableErr"
.Vb 2
\& Used when no CMAP table can be accessed or synthesized for the
\&font passed into a SetAttributes Font call.
.Ve
.IP "kATSUNoFontScalerAvailableErr" 4
.IX Item "kATSUNoFontScalerAvailableErr"
.Vb 2
\& Used when no font scaler is available for the font passed
\&into a SetAttributes Font call.
.Ve
.IP "kATSUCoordinateOverflowErr" 4
.IX Item "kATSUCoordinateOverflowErr"
.Vb 2
\& Used to indicate the coordinates provided to an ATSUI routine caused
\&a coordinate overflow (i.e. > 32K).
.Ve
.IP "kATSULineBreakInWord" 4
.IX Item "kATSULineBreakInWord"
.Vb 2
\& This is not an error code but is returned by ATSUBreakLine to
\&indicate that the returned offset is within a word since there was
.Ve
.IP "kATSUBusyObjectErr" 4
.IX Item "kATSUBusyObjectErr"
.Vb 1
\& An ATSUI object is being used by another thread
.Ve
.IP "kATSUInvalidFontFallbacksErr" 4
.IX Item "kATSUInvalidFontFallbacksErr"
.Vb 2
\& An attempt was made to use a ATSUFontFallbacks
\&which hadn\*(Aqt been initialized or is otherwise
.Ve
.SH "general text errors"
.IX Header "general text errors"
.IP "kTextUnsupportedEncodingErr" 4
.IX Item "kTextUnsupportedEncodingErr"
.Vb 1
\& specified encoding not supported for this operation
.Ve
.IP "kTextMalformedInputErr" 4
.IX Item "kTextMalformedInputErr"
.Vb 1
\& in DBCS, for example, high byte followed by invalid low byte
.Ve
.IP "kTextUndefinedElementErr" 4
.IX Item "kTextUndefinedElementErr"
.Vb 1
\& text conversion errors
.Ve
.IP "kTECMissingTableErr" 4
.IX Item "kTECMissingTableErr"
.PD 0
.IP "kTECTableChecksumErr" 4
.IX Item "kTECTableChecksumErr"
.IP "kTECTableFormatErr" 4
.IX Item "kTECTableFormatErr"
.IP "kTECCorruptConverterErr" 4
.IX Item "kTECCorruptConverterErr"
.PD
.Vb 1
\& invalid converter object reference
.Ve
.IP "kTECNoConversionPathErr" 4
.IX Item "kTECNoConversionPathErr"
.PD 0
.IP "kTECBufferBelowMinimumSizeErr" 4
.IX Item "kTECBufferBelowMinimumSizeErr"
.PD
.Vb 1
\& output buffer too small to allow processing of first input text element
.Ve
.IP "kTECArrayFullErr" 4
.IX Item "kTECArrayFullErr"
.Vb 1
\& supplied name buffer or TextRun, TextEncoding, or UnicodeMapping array is too small
.Ve
.IP "kTECBadTextRunErr" 4
.IX Item "kTECBadTextRunErr"
.PD 0
.IP "kTECPartialCharErr" 4
.IX Item "kTECPartialCharErr"
.PD
.Vb 1
\& input buffer ends in the middle of a multibyte character, conversion stopped
.Ve
.IP "kTECUnmappableElementErr" 4
.IX Item "kTECUnmappableElementErr"
.PD 0
.IP "kTECIncompleteElementErr" 4
.IX Item "kTECIncompleteElementErr"
.PD
.Vb 1
\& text element may be incomplete or is too long for internal buffers
.Ve
.IP "kTECDirectionErr" 4
.IX Item "kTECDirectionErr"
.Vb 1
\& direction stack overflow, etc.
.Ve
.IP "kTECGlobalsUnavailableErr" 4
.IX Item "kTECGlobalsUnavailableErr"
.Vb 1
\& globals have already been deallocated (premature TERM)
.Ve
.IP "kTECItemUnavailableErr" 4
.IX Item "kTECItemUnavailableErr"
.Vb 2
\& item (e.g. name) not available for specified region (& encoding if relevant)
\&text conversion status codes
.Ve
.IP "kTECUsedFallbacksStatus" 4
.IX Item "kTECUsedFallbacksStatus"
.PD 0
.IP "kTECNeedFlushStatus" 4
.IX Item "kTECNeedFlushStatus"
.IP "kTECOutputBufferFullStatus" 4
.IX Item "kTECOutputBufferFullStatus"
.PD
.Vb 2
\& output buffer has no room for conversion of next input text element (partial conversion)
\&deprecated error & status codes for low\-level converter
.Ve
.IP "unicodeChecksumErr" 4
.IX Item "unicodeChecksumErr"
.PD 0
.IP "unicodeNoTableErr" 4
.IX Item "unicodeNoTableErr"
.IP "unicodeVariantErr" 4
.IX Item "unicodeVariantErr"
.IP "unicodeFallbacksErr" 4
.IX Item "unicodeFallbacksErr"
.IP "unicodePartConvertErr" 4
.IX Item "unicodePartConvertErr"
.IP "unicodeBufErr" 4
.IX Item "unicodeBufErr"
.IP "unicodeCharErr" 4
.IX Item "unicodeCharErr"
.IP "unicodeElementErr" 4
.IX Item "unicodeElementErr"
.IP "unicodeNotFoundErr" 4
.IX Item "unicodeNotFoundErr"
.IP "unicodeTableFormatErr" 4
.IX Item "unicodeTableFormatErr"
.IP "unicodeDirectionErr" 4
.IX Item "unicodeDirectionErr"
.IP "unicodeContextualErr" 4
.IX Item "unicodeContextualErr"
.IP "kUTCUnderflowErr" 4
.IX Item "kUTCUnderflowErr"
.IP "kUTCOverflowErr" 4
.IX Item "kUTCOverflowErr"
.IP "codecErr" 4
.IX Item "codecErr"
.IP "noCodecErr" 4
.IX Item "noCodecErr"
.IP "codecUnimpErr" 4
.IX Item "codecUnimpErr"
.IP "codecSizeErr" 4
.IX Item "codecSizeErr"
.IP "codecScreenBufErr" 4
.IX Item "codecScreenBufErr"
.IP "codecImageBufErr" 4
.IX Item "codecImageBufErr"
.IP "codecSpoolErr" 4
.IX Item "codecSpoolErr"
.IP "codecAbortErr" 4
.IX Item "codecAbortErr"
.IP "codecWouldOffscreenErr" 4
.IX Item "codecWouldOffscreenErr"
.IP "codecBadDataErr" 4
.IX Item "codecBadDataErr"
.IP "codecDataVersErr" 4
.IX Item "codecDataVersErr"
.IP "codecExtensionNotFoundErr" 4
.IX Item "codecExtensionNotFoundErr"
.IP "scTypeNotFoundErr" 4
.IX Item "scTypeNotFoundErr"
.IP "codecConditionErr" 4
.IX Item "codecConditionErr"
.IP "codecOpenErr" 4
.IX Item "codecOpenErr"
.IP "codecCantWhenErr" 4
.IX Item "codecCantWhenErr"
.IP "codecCantQueueErr" 4
.IX Item "codecCantQueueErr"
.IP "codecNothingToBlitErr" 4
.IX Item "codecNothingToBlitErr"
.IP "codecNoMemoryPleaseWaitErr" 4
.IX Item "codecNoMemoryPleaseWaitErr"
.IP "codecDisabledErr" 4
.IX Item "codecDisabledErr"
.PD
.Vb 1
\& codec disabled itself \-\- pass codecFlagReenable to reset
.Ve
.IP "codecNeedToFlushChainErr" 4
.IX Item "codecNeedToFlushChainErr"
.PD 0
.IP "lockPortBitsBadSurfaceErr" 4
.IX Item "lockPortBitsBadSurfaceErr"
.IP "lockPortBitsWindowMovedErr" 4
.IX Item "lockPortBitsWindowMovedErr"
.IP "lockPortBitsWindowResizedErr" 4
.IX Item "lockPortBitsWindowResizedErr"
.IP "lockPortBitsWindowClippedErr" 4
.IX Item "lockPortBitsWindowClippedErr"
.IP "lockPortBitsBadPortErr" 4
.IX Item "lockPortBitsBadPortErr"
.IP "lockPortBitsSurfaceLostErr" 4
.IX Item "lockPortBitsSurfaceLostErr"
.IP "codecParameterDialogConfirm" 4
.IX Item "codecParameterDialogConfirm"
.IP "codecNeedAccessKeyErr" 4
.IX Item "codecNeedAccessKeyErr"
.PD
.Vb 1
\& codec needs password in order to decompress
.Ve
.IP "codecOffscreenFailedErr" 4
.IX Item "codecOffscreenFailedErr"
.PD 0
.IP "codecDroppedFrameErr" 4
.IX Item "codecDroppedFrameErr"
.PD
.Vb 1
\& returned from ImageCodecDrawBand
.Ve
.IP "directXObjectAlreadyExists" 4
.IX Item "directXObjectAlreadyExists"
.PD 0
.IP "lockPortBitsWrongGDeviceErr" 4
.IX Item "lockPortBitsWrongGDeviceErr"
.IP "kBadAdapterErr" 4
.IX Item "kBadAdapterErr"
.PD
.Vb 1
\& invalid adapter number
.Ve
.IP "kBadAttributeErr" 4
.IX Item "kBadAttributeErr"
.Vb 1
\& specified attributes field value is invalid
.Ve
.IP "kBadBaseErr" 4
.IX Item "kBadBaseErr"
.Vb 1
\& specified base system memory address is invalid
.Ve
.IP "kBadEDCErr" 4
.IX Item "kBadEDCErr"
.Vb 1
\& specified EDC generator specified is invalid
.Ve
.IP "kBadIRQErr" 4
.IX Item "kBadIRQErr"
.Vb 1
\& specified IRQ level is invalid
.Ve
.IP "kBadOffsetErr" 4
.IX Item "kBadOffsetErr"
.Vb 1
\& specified PC card memory array offset is invalid
.Ve
.IP "kBadPageErr" 4
.IX Item "kBadPageErr"
.Vb 1
\& specified page is invalid
.Ve
.IP "kBadSizeErr" 4
.IX Item "kBadSizeErr"
.Vb 1
\& specified size is invalid
.Ve
.IP "kBadSocketErr" 4
.IX Item "kBadSocketErr"
.Vb 1
\& specified logical or physical socket number is invalid
.Ve
.IP "kBadTypeErr" 4
.IX Item "kBadTypeErr"
.Vb 1
\& specified window or interface type is invalid
.Ve
.IP "kBadVccErr" 4
.IX Item "kBadVccErr"
.Vb 1
\& specified Vcc power level index is invalid
.Ve
.IP "kBadVppErr" 4
.IX Item "kBadVppErr"
.Vb 1
\& specified Vpp1 or Vpp2 power level index is invalid
.Ve
.IP "kBadWindowErr" 4
.IX Item "kBadWindowErr"
.Vb 1
\& specified window is invalid
.Ve
.IP "kBadArgLengthErr" 4
.IX Item "kBadArgLengthErr"
.Vb 1
\& ArgLength argument is invalid
.Ve
.IP "kBadArgsErr" 4
.IX Item "kBadArgsErr"
.Vb 1
\& values in argument packet are invalid
.Ve
.IP "kBadHandleErr" 4
.IX Item "kBadHandleErr"
.Vb 1
\& clientHandle is invalid
.Ve
.IP "kBadCISErr" 4
.IX Item "kBadCISErr"
.Vb 1
\& CIS on card is invalid
.Ve
.IP "kBadSpeedErr" 4
.IX Item "kBadSpeedErr"
.Vb 1
\& specified speed is unavailable
.Ve
.IP "kReadFailureErr" 4
.IX Item "kReadFailureErr"
.Vb 1
\& unable to complete read request
.Ve
.IP "kWriteFailureErr" 4
.IX Item "kWriteFailureErr"
.Vb 1
\& unable to complete write request
.Ve
.IP "kGeneralFailureErr" 4
.IX Item "kGeneralFailureErr"
.Vb 1
\& an undefined error has occurred
.Ve
.IP "kNoCardErr" 4
.IX Item "kNoCardErr"
.Vb 1
\& no PC card in the socket
.Ve
.IP "kUnsupportedFunctionErr" 4
.IX Item "kUnsupportedFunctionErr"
.Vb 1
\& function is not supported by this implementation
.Ve
.IP "kUnsupportedModeErr" 4
.IX Item "kUnsupportedModeErr"
.Vb 1
\& mode is not supported
.Ve
.IP "kBusyErr" 4
.IX Item "kBusyErr"
.Vb 1
\& unable to process request at this time \- try later
.Ve
.IP "kWriteProtectedErr" 4
.IX Item "kWriteProtectedErr"
.Vb 1
\& media is write\-protected
.Ve
.IP "kConfigurationLockedErr" 4
.IX Item "kConfigurationLockedErr"
.Vb 1
\& a configuration has already been locked
.Ve
.IP "kInUseErr" 4
.IX Item "kInUseErr"
.Vb 1
\& requested resource is being used by a client
.Ve
.IP "kNoMoreItemsErr" 4
.IX Item "kNoMoreItemsErr"
.Vb 1
\& there are no more of the requested item
.Ve
.IP "kOutOfResourceErr" 4
.IX Item "kOutOfResourceErr"
.Vb 1
\& Card Services has exhausted the resource
.Ve
.IP "kNoCardSevicesSocketsErr" 4
.IX Item "kNoCardSevicesSocketsErr"
.PD 0
.IP "kInvalidRegEntryErr" 4
.IX Item "kInvalidRegEntryErr"
.IP "kBadLinkErr" 4
.IX Item "kBadLinkErr"
.IP "kBadDeviceErr" 4
.IX Item "kBadDeviceErr"
.IP "k16BitCardErr" 4
.IX Item "k16BitCardErr"
.IP "kCardBusCardErr" 4
.IX Item "kCardBusCardErr"
.IP "kPassCallToChainErr" 4
.IX Item "kPassCallToChainErr"
.IP "kCantConfigureCardErr" 4
.IX Item "kCantConfigureCardErr"
.IP "kPostCardEventErr" 4
.IX Item "kPostCardEventErr"
.PD
.Vb 1
\& _PCCSLPostCardEvent failed and dropped an event
.Ve
.IP "kInvalidDeviceNumber" 4
.IX Item "kInvalidDeviceNumber"
.PD 0
.IP "kUnsupportedVsErr" 4
.IX Item "kUnsupportedVsErr"
.PD
.Vb 1
\& Unsupported Voltage Sense
.Ve
.IP "kInvalidCSClientErr" 4
.IX Item "kInvalidCSClientErr"
.Vb 1
\& Card Services ClientID is not registered
.Ve
.IP "kBadTupleDataErr" 4
.IX Item "kBadTupleDataErr"
.Vb 1
\& Data in tuple is invalid
.Ve
.IP "kBadCustomIFIDErr" 4
.IX Item "kBadCustomIFIDErr"
.Vb 1
\& Custom interface ID is invalid
.Ve
.IP "kNoIOWindowRequestedErr" 4
.IX Item "kNoIOWindowRequestedErr"
.Vb 1
\& Request I/O window before calling configuration
.Ve
.IP "kNoMoreTimerClientsErr" 4
.IX Item "kNoMoreTimerClientsErr"
.Vb 1
\& All timer callbacks are in use
.Ve
.IP "kNoMoreInterruptSlotsErr" 4
.IX Item "kNoMoreInterruptSlotsErr"
.Vb 1
\& All internal Interrupt slots are in use
.Ve
.IP "kNoClientTableErr" 4
.IX Item "kNoClientTableErr"
.Vb 1
\& The client table has not be initialized yet
.Ve
.IP "kUnsupportedCardErr" 4
.IX Item "kUnsupportedCardErr"
.Vb 1
\& Card not supported by generic enabler
.Ve
.IP "kNoCardEnablersFoundErr" 4
.IX Item "kNoCardEnablersFoundErr"
.Vb 1
\& No Enablers were found
.Ve
.IP "kNoEnablerForCardErr" 4
.IX Item "kNoEnablerForCardErr"
.Vb 1
\& No Enablers were found that can support the card
.Ve
.IP "kNoCompatibleNameErr" 4
.IX Item "kNoCompatibleNameErr"
.Vb 1
\& There is no compatible driver name for this device
.Ve
.IP "kClientRequestDenied" 4
.IX Item "kClientRequestDenied"
.Vb 2
\& CS Clients should return this code inorder to
\&deny a request\-type CS Event
.Ve
.IP "kNotReadyErr" 4
.IX Item "kNotReadyErr"
.Vb 1
\& PC Card failed to go ready
.Ve
.IP "kTooManyIOWindowsErr" 4
.IX Item "kTooManyIOWindowsErr"
.Vb 1
\& device requested more than one I/O window
.Ve
.IP "kAlreadySavedStateErr" 4
.IX Item "kAlreadySavedStateErr"
.Vb 1
\& The state has been saved on previous call
.Ve
.IP "kAttemptDupCardEntryErr" 4
.IX Item "kAttemptDupCardEntryErr"
.Vb 1
\& The Enabler was asked to create a duplicate card entry
.Ve
.IP "kCardPowerOffErr" 4
.IX Item "kCardPowerOffErr"
.Vb 1
\& Power to the card has been turned off
.Ve
.IP "kNotZVCapableErr" 4
.IX Item "kNotZVCapableErr"
.Vb 1
\& This socket does not support Zoomed Video
.Ve
.IP "noDeviceForChannel" 4
.IX Item "noDeviceForChannel"
.PD 0
.IP "grabTimeComplete" 4
.IX Item "grabTimeComplete"
.IP "cantDoThatInCurrentMode" 4
.IX Item "cantDoThatInCurrentMode"
.IP "notEnoughMemoryToGrab" 4
.IX Item "notEnoughMemoryToGrab"
.IP "notEnoughDiskSpaceToGrab" 4
.IX Item "notEnoughDiskSpaceToGrab"
.IP "couldntGetRequiredComponent" 4
.IX Item "couldntGetRequiredComponent"
.IP "badSGChannel" 4
.IX Item "badSGChannel"
.IP "seqGrabInfoNotAvailable" 4
.IX Item "seqGrabInfoNotAvailable"
.IP "deviceCantMeetRequest" 4
.IX Item "deviceCantMeetRequest"
.IP "badControllerHeight" 4
.IX Item "badControllerHeight"
.IP "editingNotAllowed" 4
.IX Item "editingNotAllowed"
.IP "controllerBoundsNotExact" 4
.IX Item "controllerBoundsNotExact"
.IP "cannotSetWidthOfAttachedController" 4
.IX Item "cannotSetWidthOfAttachedController"
.IP "controllerHasFixedHeight" 4
.IX Item "controllerHasFixedHeight"
.IP "errAEBadKeyForm" 4
.IX Item "errAEBadKeyForm"
.IP "errAECantHandleClass" 4
.IX Item "errAECantHandleClass"
.IP "errAECantSupplyType" 4
.IX Item "errAECantSupplyType"
.IP "errAECantUndo" 4
.IX Item "errAECantUndo"
.IP "errAEEventFailed" 4
.IX Item "errAEEventFailed"
.IP "errAEIndexTooLarge" 4
.IX Item "errAEIndexTooLarge"
.IP "errAEInTransaction" 4
.IX Item "errAEInTransaction"
.IP "errAELocalOnly" 4
.IX Item "errAELocalOnly"
.IP "errAENoSuchTransaction" 4
.IX Item "errAENoSuchTransaction"
.IP "errAENotAnElement" 4
.IX Item "errAENotAnElement"
.IP "errAENotASingleObject" 4
.IX Item "errAENotASingleObject"
.IP "errAENotModifiable" 4
.IX Item "errAENotModifiable"
.IP "errAENoUserSelection" 4
.IX Item "errAENoUserSelection"
.IP "errAEPrivilegeError" 4
.IX Item "errAEPrivilegeError"
.IP "errAEReadDenied" 4
.IX Item "errAEReadDenied"
.IP "errAETypeError" 4
.IX Item "errAETypeError"
.IP "errAEWriteDenied" 4
.IX Item "errAEWriteDenied"
.IP "errAENotAnEnumMember" 4
.IX Item "errAENotAnEnumMember"
.PD
.Vb 1
\& enumerated value in SetData is not allowed for this property
.Ve
.IP "errAECantPutThatThere" 4
.IX Item "errAECantPutThatThere"
.Vb 1
\& in make new, duplicate, etc. class can\*(Aqt be an element of container
.Ve
.IP "telGenericError" 4
.IX Item "telGenericError"
.PD 0
.IP "telNoErr" 4
.IX Item "telNoErr"
.IP "telNoTools" 4
.IX Item "telNoTools"
.PD
.Vb 1
\& no telephone tools found in extension folder
.Ve
.IP "telBadTermErr" 4
.IX Item "telBadTermErr"
.Vb 1
\& invalid TELHandle or handle not found
.Ve
.IP "telBadDNErr" 4
.IX Item "telBadDNErr"
.Vb 1
\& TELDNHandle not found or invalid
.Ve
.IP "telBadCAErr" 4
.IX Item "telBadCAErr"
.Vb 1
\& TELCAHandle not found or invalid
.Ve
.IP "telBadHandErr" 4
.IX Item "telBadHandErr"
.Vb 1
\& bad handle specified
.Ve
.IP "telBadProcErr" 4
.IX Item "telBadProcErr"
.Vb 1
\& bad msgProc specified
.Ve
.IP "telCAUnavail" 4
.IX Item "telCAUnavail"
.Vb 1
\& a CA is not available
.Ve
.IP "telNoMemErr" 4
.IX Item "telNoMemErr"
.Vb 1
\& no memory to allocate handle
.Ve
.IP "telNoOpenErr" 4
.IX Item "telNoOpenErr"
.Vb 1
\& unable to open terminal
.Ve
.IP "telBadHTypeErr" 4
.IX Item "telBadHTypeErr"
.Vb 1
\& bad hook type specified
.Ve
.IP "telHTypeNotSupp" 4
.IX Item "telHTypeNotSupp"
.Vb 1
\& hook type not supported by this tool
.Ve
.IP "telBadLevelErr" 4
.IX Item "telBadLevelErr"
.Vb 1
\& bad volume level setting
.Ve
.IP "telBadVTypeErr" 4
.IX Item "telBadVTypeErr"
.Vb 1
\& bad volume type error
.Ve
.IP "telVTypeNotSupp" 4
.IX Item "telVTypeNotSupp"
.Vb 1
\& volume type not supported by this tool
.Ve
.IP "telBadAPattErr" 4
.IX Item "telBadAPattErr"
.Vb 1
\& bad alerting pattern specified
.Ve
.IP "telAPattNotSupp" 4
.IX Item "telAPattNotSupp"
.Vb 1
\& alerting pattern not supported by tool
.Ve
.IP "telBadIndex" 4
.IX Item "telBadIndex"
.Vb 1
\& bad index specified
.Ve
.IP "telIndexNotSupp" 4
.IX Item "telIndexNotSupp"
.Vb 1
\& index not supported by this tool
.Ve
.IP "telBadStateErr" 4
.IX Item "telBadStateErr"
.Vb 1
\& bad device state specified
.Ve
.IP "telStateNotSupp" 4
.IX Item "telStateNotSupp"
.Vb 1
\& device state not supported by tool
.Ve
.IP "telBadIntExt" 4
.IX Item "telBadIntExt"
.Vb 1
\& bad internal external error
.Ve
.IP "telIntExtNotSupp" 4
.IX Item "telIntExtNotSupp"
.Vb 1
\& internal external type not supported by this tool
.Ve
.IP "telBadDNDType" 4
.IX Item "telBadDNDType"
.Vb 1
\& bad DND type specified
.Ve
.IP "telDNDTypeNotSupp" 4
.IX Item "telDNDTypeNotSupp"
.Vb 1
\& DND type is not supported by this tool
.Ve
.IP "telFeatNotSub" 4
.IX Item "telFeatNotSub"
.Vb 1
\& feature not subscribed
.Ve
.IP "telFeatNotAvail" 4
.IX Item "telFeatNotAvail"
.Vb 1
\& feature subscribed but not available
.Ve
.IP "telFeatActive" 4
.IX Item "telFeatActive"
.Vb 1
\& feature already active
.Ve
.IP "telFeatNotSupp" 4
.IX Item "telFeatNotSupp"
.Vb 1
\& feature program call not supported by this tool
.Ve
.IP "telConfLimitErr" 4
.IX Item "telConfLimitErr"
.Vb 1
\& limit specified is too high for this configuration
.Ve
.IP "telConfNoLimit" 4
.IX Item "telConfNoLimit"
.Vb 1
\& no limit was specified but required
.Ve
.IP "telConfErr" 4
.IX Item "telConfErr"
.Vb 1
\& conference was not prepared
.Ve
.IP "telConfRej" 4
.IX Item "telConfRej"
.Vb 1
\& conference request was rejected
.Ve
.IP "telTransferErr" 4
.IX Item "telTransferErr"
.Vb 1
\& transfer not prepared
.Ve
.IP "telTransferRej" 4
.IX Item "telTransferRej"
.Vb 1
\& transfer request rejected
.Ve
.IP "telCBErr" 4
.IX Item "telCBErr"
.Vb 1
\& call back feature not set previously
.Ve
.IP "telConfLimitExceeded" 4
.IX Item "telConfLimitExceeded"
.Vb 1
\& attempt to exceed switch conference limits
.Ve
.IP "telBadDNType" 4
.IX Item "telBadDNType"
.Vb 1
\& DN type invalid
.Ve
.IP "telBadPageID" 4
.IX Item "telBadPageID"
.Vb 1
\& bad page ID specified
.Ve
.IP "telBadIntercomID" 4
.IX Item "telBadIntercomID"
.Vb 1
\& bad intercom ID specified
.Ve
.IP "telBadFeatureID" 4
.IX Item "telBadFeatureID"
.Vb 1
\& bad feature ID specified
.Ve
.IP "telBadFwdType" 4
.IX Item "telBadFwdType"
.Vb 1
\& bad fwdType specified
.Ve
.IP "telBadPickupGroupID" 4
.IX Item "telBadPickupGroupID"
.Vb 1
\& bad pickup group ID specified
.Ve
.IP "telBadParkID" 4
.IX Item "telBadParkID"
.Vb 1
\& bad park id specified
.Ve
.IP "telBadSelect" 4
.IX Item "telBadSelect"
.Vb 1
\& unable to select or deselect DN
.Ve
.IP "telBadBearerType" 4
.IX Item "telBadBearerType"
.Vb 1
\& bad bearerType specified
.Ve
.IP "telBadRate" 4
.IX Item "telBadRate"
.Vb 1
\& bad rate specified
.Ve
.IP "telDNTypeNotSupp" 4
.IX Item "telDNTypeNotSupp"
.Vb 1
\& DN type not supported by tool
.Ve
.IP "telFwdTypeNotSupp" 4
.IX Item "telFwdTypeNotSupp"
.Vb 1
\& forward type not supported by tool
.Ve
.IP "telBadDisplayMode" 4
.IX Item "telBadDisplayMode"
.Vb 1
\& bad display mode specified
.Ve
.IP "telDisplayModeNotSupp" 4
.IX Item "telDisplayModeNotSupp"
.Vb 1
\& display mode not supported by tool
.Ve
.IP "telNoCallbackRef" 4
.IX Item "telNoCallbackRef"
.Vb 1
\& no call back reference was specified, but is required
.Ve
.IP "telAlreadyOpen" 4
.IX Item "telAlreadyOpen"
.Vb 1
\& terminal already open
.Ve
.IP "telStillNeeded" 4
.IX Item "telStillNeeded"
.Vb 1
\& terminal driver still needed by someone else
.Ve
.IP "telTermNotOpen" 4
.IX Item "telTermNotOpen"
.Vb 1
\& terminal not opened via TELOpenTerm
.Ve
.IP "telCANotAcceptable" 4
.IX Item "telCANotAcceptable"
.Vb 1
\& CA not "acceptable"
.Ve
.IP "telCANotRejectable" 4
.IX Item "telCANotRejectable"
.Vb 1
\& CA not "rejectable"
.Ve
.IP "telCANotDeflectable" 4
.IX Item "telCANotDeflectable"
.Vb 1
\& CA not "deflectable"
.Ve
.IP "telPBErr" 4
.IX Item "telPBErr"
.Vb 1
\& parameter block error, bad format
.Ve
.IP "telBadFunction" 4
.IX Item "telBadFunction"
.Vb 2
\& bad msgCode specified
\&telNoTools        = \-10101,        unable to find any telephone tools
.Ve
.IP "telNoSuchTool" 4
.IX Item "telNoSuchTool"
.Vb 1
\& unable to find tool with name specified
.Ve
.IP "telUnknownErr" 4
.IX Item "telUnknownErr"
.Vb 1
\& unable to set config
.Ve
.IP "telNoCommFolder" 4
.IX Item "telNoCommFolder"
.Vb 1
\& Communications/Extensions A\*: not found
.Ve
.IP "telInitFailed" 4
.IX Item "telInitFailed"
.Vb 1
\& initialization failed
.Ve
.IP "telBadCodeResource" 4
.IX Item "telBadCodeResource"
.Vb 1
\& code resource not found
.Ve
.IP "telDeviceNotFound" 4
.IX Item "telDeviceNotFound"
.Vb 1
\& device not found
.Ve
.IP "telBadProcID" 4
.IX Item "telBadProcID"
.Vb 1
\& invalid procID
.Ve
.IP "telValidateFailed" 4
.IX Item "telValidateFailed"
.Vb 1
\& telValidate failed
.Ve
.IP "telAutoAnsNotOn" 4
.IX Item "telAutoAnsNotOn"
.Vb 1
\& autoAnswer in not turned on
.Ve
.IP "telDetAlreadyOn" 4
.IX Item "telDetAlreadyOn"
.Vb 1
\& detection is already turned on
.Ve
.IP "telBadSWErr" 4
.IX Item "telBadSWErr"
.Vb 1
\& Software not installed properly
.Ve
.IP "telBadSampleRate" 4
.IX Item "telBadSampleRate"
.Vb 1
\& incompatible sample rate
.Ve
.SH "Power Manager Errors"
.IX Header "Power Manager Errors"
.IP "pmBusyErr" 4
.IX Item "pmBusyErr"
.Vb 1
\& Power Mgr never ready to start handshake
.Ve
.IP "pmReplyTOErr" 4
.IX Item "pmReplyTOErr"
.Vb 1
\& Timed out waiting for reply
.Ve
.IP "pmSendStartErr" 4
.IX Item "pmSendStartErr"
.Vb 1
\& during send, pmgr did not start hs
.Ve
.IP "pmSendEndErr" 4
.IX Item "pmSendEndErr"
.Vb 1
\& during send, pmgr did not finish hs
.Ve
.IP "pmRecvStartErr" 4
.IX Item "pmRecvStartErr"
.Vb 1
\& during receive, pmgr did not start hs
.Ve
.IP "kPowerHandlerExistsForDeviceErr" 4
.IX Item "kPowerHandlerExistsForDeviceErr"
.PD 0
.IP "kPowerHandlerNotFoundForDeviceErr" 4
.IX Item "kPowerHandlerNotFoundForDeviceErr"
.IP "kPowerHandlerNotFoundForProcErr" 4
.IX Item "kPowerHandlerNotFoundForProcErr"
.IP "kPowerMgtMessageNotHandled" 4
.IX Item "kPowerMgtMessageNotHandled"
.IP "kPowerMgtRequestDenied" 4
.IX Item "kPowerMgtRequestDenied"
.IP "kCantReportProcessorTemperatureErr" 4
.IX Item "kCantReportProcessorTemperatureErr"
.IP "kProcessorTempRoutineRequiresMPLib2" 4
.IX Item "kProcessorTempRoutineRequiresMPLib2"
.IP "kNoSuchPowerSource" 4
.IX Item "kNoSuchPowerSource"
.IP "debuggingExecutionContextErr" 4
.IX Item "debuggingExecutionContextErr"
.PD
.Vb 1
\& routine cannot be called at this time
.Ve
.IP "debuggingDuplicateSignatureErr" 4
.IX Item "debuggingDuplicateSignatureErr"
.Vb 1
\& componentSignature already registered
.Ve
.IP "debuggingDuplicateOptionErr" 4
.IX Item "debuggingDuplicateOptionErr"
.Vb 1
\& optionSelectorNum already registered
.Ve
.IP "debuggingInvalidSignatureErr" 4
.IX Item "debuggingInvalidSignatureErr"
.Vb 1
\& componentSignature not registered
.Ve
.IP "debuggingInvalidOptionErr" 4
.IX Item "debuggingInvalidOptionErr"
.Vb 1
\& optionSelectorNum is not registered
.Ve
.IP "debuggingInvalidNameErr" 4
.IX Item "debuggingInvalidNameErr"
.Vb 1
\& componentName or optionName is invalid (NULL)
.Ve
.IP "debuggingNoCallbackErr" 4
.IX Item "debuggingNoCallbackErr"
.Vb 1
\& debugging component has no callback
.Ve
.IP "kHIDVersionIncompatibleErr" 4
.IX Item "kHIDVersionIncompatibleErr"
.PD 0
.IP "kHIDSuccess" 4
.IX Item "kHIDSuccess"
.IP "kHIDInvalidRangePageErr" 4
.IX Item "kHIDInvalidRangePageErr"
.IP "kHIDReportIDZeroErr" 4
.IX Item "kHIDReportIDZeroErr"
.IP "kHIDReportCountZeroErr" 4
.IX Item "kHIDReportCountZeroErr"
.IP "kHIDReportSizeZeroErr" 4
.IX Item "kHIDReportSizeZeroErr"
.IP "kHIDUnmatchedDesignatorRangeErr" 4
.IX Item "kHIDUnmatchedDesignatorRangeErr"
.IP "kHIDUnmatchedStringRangeErr" 4
.IX Item "kHIDUnmatchedStringRangeErr"
.IP "kHIDInvertedUsageRangeErr" 4
.IX Item "kHIDInvertedUsageRangeErr"
.IP "kHIDUnmatchedUsageRangeErr" 4
.IX Item "kHIDUnmatchedUsageRangeErr"
.IP "kHIDInvertedPhysicalRangeErr" 4
.IX Item "kHIDInvertedPhysicalRangeErr"
.IP "kHIDInvertedLogicalRangeErr" 4
.IX Item "kHIDInvertedLogicalRangeErr"
.IP "kHIDBadLogicalMaximumErr" 4
.IX Item "kHIDBadLogicalMaximumErr"
.IP "kHIDBadLogicalMinimumErr" 4
.IX Item "kHIDBadLogicalMinimumErr"
.IP "kHIDUsagePageZeroErr" 4
.IX Item "kHIDUsagePageZeroErr"
.IP "kHIDEndOfDescriptorErr" 4
.IX Item "kHIDEndOfDescriptorErr"
.IP "kHIDNotEnoughMemoryErr" 4
.IX Item "kHIDNotEnoughMemoryErr"
.IP "kHIDBadParameterErr" 4
.IX Item "kHIDBadParameterErr"
.IP "kHIDNullPointerErr" 4
.IX Item "kHIDNullPointerErr"
.IP "kHIDInvalidReportLengthErr" 4
.IX Item "kHIDInvalidReportLengthErr"
.IP "kHIDInvalidReportTypeErr" 4
.IX Item "kHIDInvalidReportTypeErr"
.IP "kHIDBadLogPhysValuesErr" 4
.IX Item "kHIDBadLogPhysValuesErr"
.IP "kHIDIncompatibleReportErr" 4
.IX Item "kHIDIncompatibleReportErr"
.IP "kHIDInvalidPreparsedDataErr" 4
.IX Item "kHIDInvalidPreparsedDataErr"
.IP "kHIDNotValueArrayErr" 4
.IX Item "kHIDNotValueArrayErr"
.IP "kHIDUsageNotFoundErr" 4
.IX Item "kHIDUsageNotFoundErr"
.IP "kHIDValueOutOfRangeErr" 4
.IX Item "kHIDValueOutOfRangeErr"
.IP "kHIDBufferTooSmallErr" 4
.IX Item "kHIDBufferTooSmallErr"
.IP "kHIDNullStateErr" 4
.IX Item "kHIDNullStateErr"
.IP "kModemOutOfMemory" 4
.IX Item "kModemOutOfMemory"
.IP "kModemPreferencesMissing" 4
.IX Item "kModemPreferencesMissing"
.IP "kTXNEndIterationErr" 4
.IX Item "kTXNEndIterationErr"
.IP "kTXNCannotAddFrameErr" 4
.IX Item "kTXNCannotAddFrameErr"
.IP "kTXNInvalidFrameIDErr" 4
.IX Item "kTXNInvalidFrameIDErr"
.IP "kTXNIllegalToCrossDataBoundariesErr" 4
.IX Item "kTXNIllegalToCrossDataBoundariesErr"
.IP "kTXNUserCanceledOperationErr" 4
.IX Item "kTXNUserCanceledOperationErr"
.IP "kTXNBadDefaultFileTypeWarning" 4
.IX Item "kTXNBadDefaultFileTypeWarning"
.IP "kTXNCannotSetAutoIndentErr" 4
.IX Item "kTXNCannotSetAutoIndentErr"
.IP "kTXNRunIndexOutofBoundsErr" 4
.IX Item "kTXNRunIndexOutofBoundsErr"
.IP "kTXNNoMatchErr" 4
.IX Item "kTXNNoMatchErr"
.IP "kTXNAttributeTagInvalidForRunErr" 4
.IX Item "kTXNAttributeTagInvalidForRunErr"
.PD
.Vb 1
\& dataValue is set to this per invalid tag
.Ve
.IP "kTXNSomeOrAllTagsInvalidForRunErr" 4
.IX Item "kTXNSomeOrAllTagsInvalidForRunErr"
.PD 0
.IP "kTXNInvalidRunIndex" 4
.IX Item "kTXNInvalidRunIndex"
.IP "kTXNAlreadyInitializedErr" 4
.IX Item "kTXNAlreadyInitializedErr"
.IP "kTXNCannotTurnTSMOffWhenUsingUnicodeErr" 4
.IX Item "kTXNCannotTurnTSMOffWhenUsingUnicodeErr"
.IP "kTXNCopyNotAllowedInEchoModeErr" 4
.IX Item "kTXNCopyNotAllowedInEchoModeErr"
.IP "kTXNDataTypeNotAllowedErr" 4
.IX Item "kTXNDataTypeNotAllowedErr"
.IP "kTXNATSUIIsNotInstalledErr" 4
.IX Item "kTXNATSUIIsNotInstalledErr"
.IP "kTXNOutsideOfLineErr" 4
.IX Item "kTXNOutsideOfLineErr"
.IP "errKCNotAvailable" 4
.IX Item "errKCNotAvailable"
.IP "errKCReadOnly" 4
.IX Item "errKCReadOnly"
.IP "errKCAuthFailed" 4
.IX Item "errKCAuthFailed"
.IP "errKCNoSuchKeychain" 4
.IX Item "errKCNoSuchKeychain"
.IP "errKCInvalidKeychain" 4
.IX Item "errKCInvalidKeychain"
.IP "errKCDuplicateKeychain" 4
.IX Item "errKCDuplicateKeychain"
.IP "errKCDuplicateCallback" 4
.IX Item "errKCDuplicateCallback"
.IP "errKCInvalidCallback" 4
.IX Item "errKCInvalidCallback"
.IP "errKCDuplicateItem" 4
.IX Item "errKCDuplicateItem"
.IP "errKCItemNotFound" 4
.IX Item "errKCItemNotFound"
.IP "errKCBufferTooSmall" 4
.IX Item "errKCBufferTooSmall"
.IP "errKCDataTooLarge" 4
.IX Item "errKCDataTooLarge"
.IP "errKCNoSuchAttr" 4
.IX Item "errKCNoSuchAttr"
.IP "errKCInvalidItemRef" 4
.IX Item "errKCInvalidItemRef"
.IP "errKCInvalidSearchRef" 4
.IX Item "errKCInvalidSearchRef"
.IP "errKCNoSuchClass" 4
.IX Item "errKCNoSuchClass"
.IP "errKCNoDefaultKeychain" 4
.IX Item "errKCNoDefaultKeychain"
.IP "errKCInteractionNotAllowed" 4
.IX Item "errKCInteractionNotAllowed"
.IP "errKCReadOnlyAttr" 4
.IX Item "errKCReadOnlyAttr"
.IP "errKCWrongKCVersion" 4
.IX Item "errKCWrongKCVersion"
.IP "errKCKeySizeNotAllowed" 4
.IX Item "errKCKeySizeNotAllowed"
.IP "errKCNoStorageModule" 4
.IX Item "errKCNoStorageModule"
.IP "errKCNoCertificateModule" 4
.IX Item "errKCNoCertificateModule"
.IP "errKCNoPolicyModule" 4
.IX Item "errKCNoPolicyModule"
.IP "errKCInteractionRequired" 4
.IX Item "errKCInteractionRequired"
.IP "errKCDataNotAvailable" 4
.IX Item "errKCDataNotAvailable"
.IP "errKCDataNotModifiable" 4
.IX Item "errKCDataNotModifiable"
.IP "kUCOutputBufferTooSmall" 4
.IX Item "kUCOutputBufferTooSmall"
.PD
.Vb 1
\& Output buffer too small for Unicode string result
.Ve
.IP "kUCTSNoKeysAddedToObjectErr" 4
.IX Item "kUCTSNoKeysAddedToObjectErr"
.PD 0
.IP "kMPIterationEndErr" 4
.IX Item "kMPIterationEndErr"
.IP "kMPPrivilegedErr" 4
.IX Item "kMPPrivilegedErr"
.IP "kMPProcessCreatedErr" 4
.IX Item "kMPProcessCreatedErr"
.IP "kMPProcessTerminatedErr" 4
.IX Item "kMPProcessTerminatedErr"
.IP "kMPTaskCreatedErr" 4
.IX Item "kMPTaskCreatedErr"
.IP "kMPTaskBlockedErr" 4
.IX Item "kMPTaskBlockedErr"
.IP "kMPTaskStoppedErr" 4
.IX Item "kMPTaskStoppedErr"
.PD
.Vb 1
\& A convention used with MPThrowException.
.Ve
.IP "kMPBlueBlockingErr" 4
.IX Item "kMPBlueBlockingErr"
.PD 0
.IP "kMPDeletedErr" 4
.IX Item "kMPDeletedErr"
.IP "kMPTimeoutErr" 4
.IX Item "kMPTimeoutErr"
.IP "kMPTaskAbortedErr" 4
.IX Item "kMPTaskAbortedErr"
.IP "kMPInsufficientResourcesErr" 4
.IX Item "kMPInsufficientResourcesErr"
.IP "kCollateAttributesNotFoundErr" 4
.IX Item "kCollateAttributesNotFoundErr"
.IP "kCollateInvalidOptions" 4
.IX Item "kCollateInvalidOptions"
.IP "kCollateMissingUnicodeTableErr" 4
.IX Item "kCollateMissingUnicodeTableErr"
.IP "kCollateUnicodeConvertFailedErr" 4
.IX Item "kCollateUnicodeConvertFailedErr"
.IP "kCollatePatternNotFoundErr" 4
.IX Item "kCollatePatternNotFoundErr"
.IP "kCollateInvalidChar" 4
.IX Item "kCollateInvalidChar"
.IP "kCollateBufferTooSmall" 4
.IX Item "kCollateBufferTooSmall"
.IP "kFNSInvalidReferenceErr" 4
.IX Item "kFNSInvalidReferenceErr"
.PD
.Vb 1
\& ref. was NULL or otherwise bad
.Ve
.IP "kFNSBadReferenceVersionErr" 4
.IX Item "kFNSBadReferenceVersionErr"
.Vb 1
\& ref. version is out of known range
.Ve
.IP "kFNSInvalidProfileErr" 4
.IX Item "kFNSInvalidProfileErr"
.Vb 1
\& profile is NULL or otherwise bad
.Ve
.IP "kFNSBadProfileVersionErr" 4
.IX Item "kFNSBadProfileVersionErr"
.Vb 1
\& profile version is out of known range
.Ve
.IP "kFNSDuplicateReferenceErr" 4
.IX Item "kFNSDuplicateReferenceErr"
.Vb 1
\& the ref. being added is already in the profile
.Ve
.IP "kFNSMismatchErr" 4
.IX Item "kFNSMismatchErr"
.Vb 1
\& reference didn\*(Aqt match or wasn\*(Aqt found in profile
.Ve
.IP "kFNSInsufficientDataErr" 4
.IX Item "kFNSInsufficientDataErr"
.Vb 1
\& insufficient data for the operation
.Ve
.IP "kFNSBadFlattenedSizeErr" 4
.IX Item "kFNSBadFlattenedSizeErr"
.Vb 1
\& flattened size didn\*(Aqt match input or was too small
.Ve
.IP "kLocalesBufferTooSmallErr" 4
.IX Item "kLocalesBufferTooSmallErr"
.PD 0
.IP "kLocalesTableFormatErr" 4
.IX Item "kLocalesTableFormatErr"
.IP "kALMInternalErr" 4
.IX Item "kALMInternalErr"
.IP "kALMGroupNotFoundErr" 4
.IX Item "kALMGroupNotFoundErr"
.IP "kALMNoSuchModuleErr" 4
.IX Item "kALMNoSuchModuleErr"
.IP "kALMModuleCommunicationErr" 4
.IX Item "kALMModuleCommunicationErr"
.IP "kALMDuplicateModuleErr" 4
.IX Item "kALMDuplicateModuleErr"
.IP "kALMInstallationErr" 4
.IX Item "kALMInstallationErr"
.IP "kALMDeferSwitchErr" 4
.IX Item "kALMDeferSwitchErr"
.IP "kSSpInternalErr" 4
.IX Item "kSSpInternalErr"
.IP "kSSpVersionErr" 4
.IX Item "kSSpVersionErr"
.IP "kSSpCantInstallErr" 4
.IX Item "kSSpCantInstallErr"
.IP "kSSpParallelUpVectorErr" 4
.IX Item "kSSpParallelUpVectorErr"
.IP "kNSpInitializationFailedErr" 4
.IX Item "kNSpInitializationFailedErr"
.IP "kNSpAlreadyInitializedErr" 4
.IX Item "kNSpAlreadyInitializedErr"
.IP "kNSpTopologyNotSupportedErr" 4
.IX Item "kNSpTopologyNotSupportedErr"
.IP "kNSpPipeFullErr" 4
.IX Item "kNSpPipeFullErr"
.IP "kNSpHostFailedErr" 4
.IX Item "kNSpHostFailedErr"
.IP "kNSpProtocolNotAvailableErr" 4
.IX Item "kNSpProtocolNotAvailableErr"
.IP "kNSpInvalidGameRefErr" 4
.IX Item "kNSpInvalidGameRefErr"
.IP "kNSpInvalidParameterErr" 4
.IX Item "kNSpInvalidParameterErr"
.IP "kNSpOTNotPresentErr" 4
.IX Item "kNSpOTNotPresentErr"
.IP "kNSpOTVersionTooOldErr" 4
.IX Item "kNSpOTVersionTooOldErr"
.IP "kNSpMemAllocationErr" 4
.IX Item "kNSpMemAllocationErr"
.IP "kNSpAlreadyAdvertisingErr" 4
.IX Item "kNSpAlreadyAdvertisingErr"
.IP "kNSpNotAdvertisingErr" 4
.IX Item "kNSpNotAdvertisingErr"
.IP "kNSpInvalidAddressErr" 4
.IX Item "kNSpInvalidAddressErr"
.IP "kNSpFreeQExhaustedErr" 4
.IX Item "kNSpFreeQExhaustedErr"
.IP "kNSpRemovePlayerFailedErr" 4
.IX Item "kNSpRemovePlayerFailedErr"
.IP "kNSpAddressInUseErr" 4
.IX Item "kNSpAddressInUseErr"
.IP "kNSpFeatureNotImplementedErr" 4
.IX Item "kNSpFeatureNotImplementedErr"
.IP "kNSpNameRequiredErr" 4
.IX Item "kNSpNameRequiredErr"
.IP "kNSpInvalidPlayerIDErr" 4
.IX Item "kNSpInvalidPlayerIDErr"
.IP "kNSpInvalidGroupIDErr" 4
.IX Item "kNSpInvalidGroupIDErr"
.IP "kNSpNoPlayersErr" 4
.IX Item "kNSpNoPlayersErr"
.IP "kNSpNoGroupsErr" 4
.IX Item "kNSpNoGroupsErr"
.IP "kNSpNoHostVolunteersErr" 4
.IX Item "kNSpNoHostVolunteersErr"
.IP "kNSpCreateGroupFailedErr" 4
.IX Item "kNSpCreateGroupFailedErr"
.IP "kNSpAddPlayerFailedErr" 4
.IX Item "kNSpAddPlayerFailedErr"
.IP "kNSpInvalidDefinitionErr" 4
.IX Item "kNSpInvalidDefinitionErr"
.IP "kNSpInvalidProtocolRefErr" 4
.IX Item "kNSpInvalidProtocolRefErr"
.IP "kNSpInvalidProtocolListErr" 4
.IX Item "kNSpInvalidProtocolListErr"
.IP "kNSpTimeoutErr" 4
.IX Item "kNSpTimeoutErr"
.IP "kNSpGameTerminatedErr" 4
.IX Item "kNSpGameTerminatedErr"
.IP "kNSpConnectFailedErr" 4
.IX Item "kNSpConnectFailedErr"
.IP "kNSpSendFailedErr" 4
.IX Item "kNSpSendFailedErr"
.IP "kNSpMessageTooBigErr" 4
.IX Item "kNSpMessageTooBigErr"
.IP "kNSpCantBlockErr" 4
.IX Item "kNSpCantBlockErr"
.IP "kISpInternalErr" 4
.IX Item "kISpInternalErr"
.IP "kISpSystemListErr" 4
.IX Item "kISpSystemListErr"
.IP "kISpBufferToSmallErr" 4
.IX Item "kISpBufferToSmallErr"
.IP "kISpElementInListErr" 4
.IX Item "kISpElementInListErr"
.IP "kISpElementNotInListErr" 4
.IX Item "kISpElementNotInListErr"
.IP "kISpSystemInactiveErr" 4
.IX Item "kISpSystemInactiveErr"
.IP "kISpDeviceInactiveErr" 4
.IX Item "kISpDeviceInactiveErr"
.IP "kISpSystemActiveErr" 4
.IX Item "kISpSystemActiveErr"
.IP "kISpDeviceActiveErr" 4
.IX Item "kISpDeviceActiveErr"
.IP "kDSpNotInitializedErr" 4
.IX Item "kDSpNotInitializedErr"
.IP "kDSpSystemSWTooOldErr" 4
.IX Item "kDSpSystemSWTooOldErr"
.IP "kDSpInvalidContextErr" 4
.IX Item "kDSpInvalidContextErr"
.IP "kDSpInvalidAttributesErr" 4
.IX Item "kDSpInvalidAttributesErr"
.IP "kDSpContextAlreadyReservedErr" 4
.IX Item "kDSpContextAlreadyReservedErr"
.IP "kDSpContextNotReservedErr" 4
.IX Item "kDSpContextNotReservedErr"
.IP "kDSpContextNotFoundErr" 4
.IX Item "kDSpContextNotFoundErr"
.IP "kDSpFrameRateNotReadyErr" 4
.IX Item "kDSpFrameRateNotReadyErr"
.IP "kDSpConfirmSwitchWarning" 4
.IX Item "kDSpConfirmSwitchWarning"
.IP "kDSpInternalErr" 4
.IX Item "kDSpInternalErr"
.IP "kFBCvTwinExceptionErr" 4
.IX Item "kFBCvTwinExceptionErr"
.PD
.Vb 1
\& no telling what it was
.Ve
.IP "kFBCnoIndexesFound" 4
.IX Item "kFBCnoIndexesFound"
.PD 0
.IP "kFBCallocFailed" 4
.IX Item "kFBCallocFailed"
.PD
.Vb 1
\& probably low memory
.Ve
.IP "kFBCbadParam" 4
.IX Item "kFBCbadParam"
.PD 0
.IP "kFBCfileNotIndexed" 4
.IX Item "kFBCfileNotIndexed"
.IP "kFBCbadIndexFile" 4
.IX Item "kFBCbadIndexFile"
.PD
.Vb 1
\& bad FSSpec, or bad data in file
.Ve
.IP "kFBCcompactionFailed" 4
.IX Item "kFBCcompactionFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCvalidationFailed" 4
.IX Item "kFBCvalidationFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCindexingFailed" 4
.IX Item "kFBCindexingFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCcommitFailed" 4
.IX Item "kFBCcommitFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCdeletionFailed" 4
.IX Item "kFBCdeletionFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCmoveFailed" 4
.IX Item "kFBCmoveFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCtokenizationFailed" 4
.IX Item "kFBCtokenizationFailed"
.Vb 1
\& couldn\*(Aqt read from document or query
.Ve
.IP "kFBCmergingFailed" 4
.IX Item "kFBCmergingFailed"
.Vb 1
\& couldn\*(Aqt merge index files
.Ve
.IP "kFBCindexCreationFailed" 4
.IX Item "kFBCindexCreationFailed"
.Vb 1
\& couldn\*(Aqt create index
.Ve
.IP "kFBCaccessorStoreFailed" 4
.IX Item "kFBCaccessorStoreFailed"
.PD 0
.IP "kFBCaddDocFailed" 4
.IX Item "kFBCaddDocFailed"
.IP "kFBCflushFailed" 4
.IX Item "kFBCflushFailed"
.IP "kFBCindexNotFound" 4
.IX Item "kFBCindexNotFound"
.IP "kFBCnoSearchSession" 4
.IX Item "kFBCnoSearchSession"
.IP "kFBCindexingCanceled" 4
.IX Item "kFBCindexingCanceled"
.IP "kFBCaccessCanceled" 4
.IX Item "kFBCaccessCanceled"
.IP "kFBCindexFileDestroyed" 4
.IX Item "kFBCindexFileDestroyed"
.IP "kFBCindexNotAvailable" 4
.IX Item "kFBCindexNotAvailable"
.IP "kFBCsearchFailed" 4
.IX Item "kFBCsearchFailed"
.IP "kFBCsomeFilesNotIndexed" 4
.IX Item "kFBCsomeFilesNotIndexed"
.IP "kFBCillegalSessionChange" 4
.IX Item "kFBCillegalSessionChange"
.PD
.Vb 2
\& tried to add/remove vols to a session
\&that has hits
.Ve
.IP "kFBCanalysisNotAvailable" 4
.IX Item "kFBCanalysisNotAvailable"
.PD 0
.IP "kFBCbadIndexFileVersion" 4
.IX Item "kFBCbadIndexFileVersion"
.IP "kFBCsummarizationCanceled" 4
.IX Item "kFBCsummarizationCanceled"
.IP "kFBCindexDiskIOFailed" 4
.IX Item "kFBCindexDiskIOFailed"
.IP "kFBCbadSearchSession" 4
.IX Item "kFBCbadSearchSession"
.IP "notAQTVRMovieErr" 4
.IX Item "notAQTVRMovieErr"
.IP "constraintReachedErr" 4
.IX Item "constraintReachedErr"
.IP "callNotSupportedByNodeErr" 4
.IX Item "callNotSupportedByNodeErr"
.IP "selectorNotSupportedByNodeErr" 4
.IX Item "selectorNotSupportedByNodeErr"
.IP "invalidNodeIDErr" 4
.IX Item "invalidNodeIDErr"
.IP "invalidViewStateErr" 4
.IX Item "invalidViewStateErr"
.IP "timeNotInViewErr" 4
.IX Item "timeNotInViewErr"
.IP "propertyNotSupportedByNodeErr" 4
.IX Item "propertyNotSupportedByNodeErr"
.IP "settingNotSupportedByNodeErr" 4
.IX Item "settingNotSupportedByNodeErr"
.IP "limitReachedErr" 4
.IX Item "limitReachedErr"
.IP "invalidNodeFormatErr" 4
.IX Item "invalidNodeFormatErr"
.IP "invalidHotSpotIDErr" 4
.IX Item "invalidHotSpotIDErr"
.IP "noMemoryNodeFailedInitialize" 4
.IX Item "noMemoryNodeFailedInitialize"
.IP "streamingNodeNotReadyErr" 4
.IX Item "streamingNodeNotReadyErr"
.IP "qtvrLibraryLoadErr" 4
.IX Item "qtvrLibraryLoadErr"
.IP "themeInvalidBrushErr" 4
.IX Item "themeInvalidBrushErr"
.PD
.Vb 1
\& pattern index invalid
.Ve
.IP "themeProcessRegisteredErr" 4
.IX Item "themeProcessRegisteredErr"
.PD 0
.IP "themeProcessNotRegisteredErr" 4
.IX Item "themeProcessNotRegisteredErr"
.IP "themeBadTextColorErr" 4
.IX Item "themeBadTextColorErr"
.IP "themeHasNoAccentsErr" 4
.IX Item "themeHasNoAccentsErr"
.IP "themeBadCursorIndexErr" 4
.IX Item "themeBadCursorIndexErr"
.IP "themeScriptFontNotFoundErr" 4
.IX Item "themeScriptFontNotFoundErr"
.PD
.Vb 1
\& theme font requested for uninstalled script system
.Ve
.SH "Control Manager Error Codes"
.IX Header "Control Manager Error Codes"
.IP "errMessageNotSupported" 4
.IX Item "errMessageNotSupported"
.PD 0
.IP "errDataNotSupported" 4
.IX Item "errDataNotSupported"
.IP "errControlDoesntSupportFocus" 4
.IX Item "errControlDoesntSupportFocus"
.IP "errUnknownControl" 4
.IX Item "errUnknownControl"
.IP "errCouldntSetFocus" 4
.IX Item "errCouldntSetFocus"
.IP "errNoRootControl" 4
.IX Item "errNoRootControl"
.IP "errRootAlreadyExists" 4
.IX Item "errRootAlreadyExists"
.IP "errInvalidPartCode" 4
.IX Item "errInvalidPartCode"
.IP "errControlsAlreadyExist" 4
.IX Item "errControlsAlreadyExist"
.IP "errControlIsNotEmbedder" 4
.IX Item "errControlIsNotEmbedder"
.IP "errDataSizeMismatch" 4
.IX Item "errDataSizeMismatch"
.IP "errControlHiddenOrDisabled" 4
.IX Item "errControlHiddenOrDisabled"
.IP "errCantEmbedIntoSelf" 4
.IX Item "errCantEmbedIntoSelf"
.IP "errCantEmbedRoot" 4
.IX Item "errCantEmbedRoot"
.IP "errItemNotControl" 4
.IX Item "errItemNotControl"
.IP "controlInvalidDataVersionErr" 4
.IX Item "controlInvalidDataVersionErr"
.IP "controlPropertyInvalid" 4
.IX Item "controlPropertyInvalid"
.IP "controlPropertyNotFoundErr" 4
.IX Item "controlPropertyNotFoundErr"
.IP "kURLInvalidURLReferenceError" 4
.IX Item "kURLInvalidURLReferenceError"
.IP "kURLProgressAlreadyDisplayedError" 4
.IX Item "kURLProgressAlreadyDisplayedError"
.IP "kURLDestinationExistsError" 4
.IX Item "kURLDestinationExistsError"
.IP "kURLInvalidURLError" 4
.IX Item "kURLInvalidURLError"
.IP "kURLUnsupportedSchemeError" 4
.IX Item "kURLUnsupportedSchemeError"
.IP "kURLServerBusyError" 4
.IX Item "kURLServerBusyError"
.IP "kURLAuthenticationError" 4
.IX Item "kURLAuthenticationError"
.IP "kURLPropertyNotYetKnownError" 4
.IX Item "kURLPropertyNotYetKnownError"
.IP "kURLUnknownPropertyError" 4
.IX Item "kURLUnknownPropertyError"
.IP "kURLPropertyBufferTooSmallError" 4
.IX Item "kURLPropertyBufferTooSmallError"
.IP "kURLUnsettablePropertyError" 4
.IX Item "kURLUnsettablePropertyError"
.IP "kURLInvalidCallError" 4
.IX Item "kURLInvalidCallError"
.IP "kURLFileEmptyError" 4
.IX Item "kURLFileEmptyError"
.IP "kURLExtensionFailureError" 4
.IX Item "kURLExtensionFailureError"
.IP "kURLInvalidConfigurationError" 4
.IX Item "kURLInvalidConfigurationError"
.IP "kURLAccessNotAvailableError" 4
.IX Item "kURLAccessNotAvailableError"
.IP "badComponentInstance" 4
.IX Item "badComponentInstance"
.PD
.Vb 1
\& when cast to an OSErr this is \-32767
.Ve
.IP "dsBusError" 4
.IX Item "dsBusError"
.Vb 1
\& bus error
.Ve
.IP "dsAddressErr" 4
.IX Item "dsAddressErr"
.Vb 1
\& address error
.Ve
.IP "dsIllInstErr" 4
.IX Item "dsIllInstErr"
.Vb 1
\& illegal instruction error
.Ve
.IP "dsZeroDivErr" 4
.IX Item "dsZeroDivErr"
.Vb 1
\& zero divide error
.Ve
.IP "dsChkErr" 4
.IX Item "dsChkErr"
.Vb 1
\& check trap error
.Ve
.IP "dsOvflowErr" 4
.IX Item "dsOvflowErr"
.Vb 1
\& overflow trap error
.Ve
.IP "dsPrivErr" 4
.IX Item "dsPrivErr"
.Vb 1
\& privilege violation error
.Ve
.IP "dsTraceErr" 4
.IX Item "dsTraceErr"
.Vb 1
\& trace mode error
.Ve
.IP "dsLineAErr" 4
.IX Item "dsLineAErr"
.Vb 1
\& line 1010 trap error
.Ve
.IP "dsLineFErr" 4
.IX Item "dsLineFErr"
.Vb 1
\& line 1111 trap error
.Ve
.IP "dsMiscErr" 4
.IX Item "dsMiscErr"
.Vb 1
\& miscellaneous hardware exception error
.Ve
.IP "dsCoreErr" 4
.IX Item "dsCoreErr"
.Vb 1
\& unimplemented core routine error
.Ve
.IP "dsIrqErr" 4
.IX Item "dsIrqErr"
.Vb 1
\& uninstalled interrupt error
.Ve
.IP "dsIOCoreErr" 4
.IX Item "dsIOCoreErr"
.Vb 1
\& IO Core Error
.Ve
.IP "dsLoadErr" 4
.IX Item "dsLoadErr"
.Vb 1
\& Segment Loader Error
.Ve
.IP "dsFPErr" 4
.IX Item "dsFPErr"
.Vb 1
\& Floating point error
.Ve
.IP "dsNoPackErr" 4
.IX Item "dsNoPackErr"
.Vb 1
\& package 0 not present
.Ve
.IP "dsNoPk1" 4
.IX Item "dsNoPk1"
.Vb 1
\& package 1 not present
.Ve
.IP "dsNoPk3" 4
.IX Item "dsNoPk3"
.Vb 1
\& package 3 not present
.Ve
.IP "dsNoPk4" 4
.IX Item "dsNoPk4"
.Vb 1
\& package 4 not present
.Ve
.IP "dsNoPk5" 4
.IX Item "dsNoPk5"
.Vb 1
\& package 5 not present
.Ve
.IP "dsNoPk6" 4
.IX Item "dsNoPk6"
.Vb 1
\& package 6 not present
.Ve
.IP "dsNoPk7" 4
.IX Item "dsNoPk7"
.Vb 1
\& package 7 not present
.Ve
.IP "dsMemFullErr" 4
.IX Item "dsMemFullErr"
.Vb 1
\& out of memory!
.Ve
.IP "dsBadLaunch" 4
.IX Item "dsBadLaunch"
.Vb 1
\& can\*(Aqt launch file
.Ve
.IP "dsFSErr" 4
.IX Item "dsFSErr"
.Vb 1
\& file system map has been trashed
.Ve
.IP "dsStknHeap" 4
.IX Item "dsStknHeap"
.Vb 1
\& stack has moved into application heap
.Ve
.IP "negZcbFreeErr" 4
.IX Item "negZcbFreeErr"
.Vb 1
\& ZcbFree has gone negative
.Ve
.IP "dsFinderErr" 4
.IX Item "dsFinderErr"
.Vb 1
\& can\*(Aqt load the Finder error
.Ve
.IP "dsBadSlotInt" 4
.IX Item "dsBadSlotInt"
.Vb 1
\& unserviceable slot interrupt
.Ve
.IP "dsBadSANEOpcode" 4
.IX Item "dsBadSANEOpcode"
.Vb 1
\& bad opcode given to SANE Pack4
.Ve
.IP "dsBadPatchHeader" 4
.IX Item "dsBadPatchHeader"
.Vb 1
\& SetTrapAddress saw the \*(Aqcome\-from\*(Aq header
.Ve
.IP "menuPrgErr" 4
.IX Item "menuPrgErr"
.Vb 1
\& happens when a menu is purged
.Ve
.IP "dsMBarNFnd" 4
.IX Item "dsMBarNFnd"
.Vb 1
\& Menu Manager Errors
.Ve
.IP "dsHMenuFindErr" 4
.IX Item "dsHMenuFindErr"
.Vb 1
\& Menu Manager Errors
.Ve
.IP "dsWDEFNotFound" 4
.IX Item "dsWDEFNotFound"
.Vb 1
\& could not load WDEF
.Ve
.IP "dsCDEFNotFound" 4
.IX Item "dsCDEFNotFound"
.Vb 1
\& could not load CDEF
.Ve
.IP "dsNoFPU" 4
.IX Item "dsNoFPU"
.Vb 1
\& an FPU instruction was executed and the machine doesn\*(Aqt have one
.Ve
.IP "dsNoPatch" 4
.IX Item "dsNoPatch"
.Vb 1
\& Can\*(Aqt patch for particular Model Mac
.Ve
.IP "dsBadPatch" 4
.IX Item "dsBadPatch"
.Vb 1
\& Can\*(Aqt load patch resource
.Ve
.IP "dsParityErr" 4
.IX Item "dsParityErr"
.Vb 1
\& memory parity error
.Ve
.IP "dsOldSystem" 4
.IX Item "dsOldSystem"
.Vb 1
\& System is too old for this ROM
.Ve
.IP "ds32BitMode" 4
.IX Item "ds32BitMode"
.Vb 1
\& booting in 32\-bit on a 24\-bit sys
.Ve
.IP "dsNeedToWriteBootBlocks" 4
.IX Item "dsNeedToWriteBootBlocks"
.Vb 1
\& need to write new boot blocks
.Ve
.IP "dsNotEnoughRAMToBoot" 4
.IX Item "dsNotEnoughRAMToBoot"
.Vb 1
\& must have at least 1.5MB of RAM to boot 7.0
.Ve
.IP "dsBufPtrTooLow" 4
.IX Item "dsBufPtrTooLow"
.Vb 1
\& bufPtr moved too far during boot
.Ve
.IP "dsVMDeferredFuncTableFull" 4
.IX Item "dsVMDeferredFuncTableFull"
.Vb 1
\& VM\*(Aqs DeferUserFn table is full
.Ve
.IP "dsVMBadBackingStore" 4
.IX Item "dsVMBadBackingStore"
.Vb 1
\& Error occurred while reading or writing the VM backing\-store file
.Ve
.IP "dsCantHoldSystemHeap" 4
.IX Item "dsCantHoldSystemHeap"
.Vb 1
\& Unable to hold the system heap during boot
.Ve
.IP "dsSystemRequiresPowerPC" 4
.IX Item "dsSystemRequiresPowerPC"
.Vb 1
\& Startup disk requires PowerPC
.Ve
.IP "dsGibblyMovedToDisabledFolder" 4
.IX Item "dsGibblyMovedToDisabledFolder"
.Vb 1
\& For debug builds only, signals that active gibbly was disabled during boot.
.Ve
.IP "dsUnBootableSystem" 4
.IX Item "dsUnBootableSystem"
.Vb 1
\& Active system file will not boot on this system because it was designed only to boot from a CD.
.Ve
.IP "dsMustUseFCBAccessors" 4
.IX Item "dsMustUseFCBAccessors"
.Vb 1
\& FCBSPtr and FSFCBLen are invalid \- must use FSM FCB accessor functions
.Ve
.IP "dsMacOSROMVersionTooOld" 4
.IX Item "dsMacOSROMVersionTooOld"
.Vb 1
\& The version of the "Mac OS ROM" file is too old to be used with the installed version of system software
.Ve
.IP "dsLostConnectionToNetworkDisk" 4
.IX Item "dsLostConnectionToNetworkDisk"
.Vb 1
\& Lost communication with Netboot server
.Ve
.IP "dsRAMDiskTooBig" 4
.IX Item "dsRAMDiskTooBig"
.Vb 1
\& The RAM disk is too big to boot safely; will be turned off
.Ve
.IP "dsWriteToSupervisorStackGuardPage" 4
.IX Item "dsWriteToSupervisorStackGuardPage"
.Vb 1
\& the supervisor stack overflowed into its guard page
.Ve
.IP "dsReinsert" 4
.IX Item "dsReinsert"
.Vb 1
\& request user to reinsert off\-line volume
.Ve
.IP "shutDownAlert" 4
.IX Item "shutDownAlert"
.Vb 1
\& handled like a shutdown error
.Ve
.IP "dsShutDownOrRestart" 4
.IX Item "dsShutDownOrRestart"
.Vb 1
\& user choice between ShutDown and Restart
.Ve
.IP "dsSwitchOffOrRestart" 4
.IX Item "dsSwitchOffOrRestart"
.Vb 1
\& user choice between switching off and Restart
.Ve
.IP "dsForcedQuit" 4
.IX Item "dsForcedQuit"
.Vb 1
\& allow the user to ExitToShell, return if Cancel
.Ve
.IP "dsRemoveDisk" 4
.IX Item "dsRemoveDisk"
.Vb 1
\& request user to remove disk from manual eject drive
.Ve
.IP "dsDirtyDisk" 4
.IX Item "dsDirtyDisk"
.Vb 1
\& request user to return a manually\-ejected dirty disk
.Ve
.IP "dsShutDownOrResume" 4
.IX Item "dsShutDownOrResume"
.Vb 1
\& allow user to return to Finder or ShutDown
.Ve
.IP "dsSCSIWarn" 4
.IX Item "dsSCSIWarn"
.Vb 1
\& Portable SCSI adapter warning.
.Ve
.IP "dsMBSysError" 4
.IX Item "dsMBSysError"
.Vb 1
\& Media Bay replace warning.
.Ve
.IP "dsMBFlpySysError" 4
.IX Item "dsMBFlpySysError"
.Vb 1
\& Media Bay, floppy replace warning.
.Ve
.IP "dsMBATASysError" 4
.IX Item "dsMBATASysError"
.Vb 1
\& Media Bay, ATA replace warning.
.Ve
.IP "dsMBATAPISysError" 4
.IX Item "dsMBATAPISysError"
.Vb 1
\& Media Bay, ATAPI replace warning...
.Ve
.IP "dsMBExternFlpySysError" 4
.IX Item "dsMBExternFlpySysError"
.Vb 1
\& Media Bay, external floppy drive reconnect warning
.Ve
.IP "dsNoExtsMacsBug" 4
.IX Item "dsNoExtsMacsBug"
.Vb 1
\& not a SysErr, just a placeholder
.Ve
.IP "dsNoExtsDisassembler" 4
.IX Item "dsNoExtsDisassembler"
.Vb 1
\& not a SysErr, just a placeholder
.Ve
.IP "dsMacsBugInstalled" 4
.IX Item "dsMacsBugInstalled"
.Vb 1
\& say \*(AqMacsBug Installed\*(Aq
.Ve
.IP "dsDisassemblerInstalled" 4
.IX Item "dsDisassemblerInstalled"
.Vb 1
\& say \*(AqDisassembler Installed\*(Aq
.Ve
.IP "dsExtensionsDisabled" 4
.IX Item "dsExtensionsDisabled"
.Vb 1
\& say \*(AqExtensions Disabled\*(Aq
.Ve
.IP "dsGreeting" 4
.IX Item "dsGreeting"
.Vb 1
\& welcome to Macintosh greeting
.Ve
.IP "dsSysErr" 4
.IX Item "dsSysErr"
.Vb 2
\& general system error
\&old names here for compatibility\*(Aqs sake
.Ve
.IP "CDEFNFnd" 4
.IX Item "CDEFNFnd"
.PD 0
.IP "dsNotThe1" 4
.IX Item "dsNotThe1"
.PD
.Vb 1
\& not the disk I wanted
.Ve
.IP "dsBadStartupDisk" 4
.IX Item "dsBadStartupDisk"
.Vb 1
\& unable to mount boot volume (sad Mac only)
.Ve
.IP "dsSystemFileErr" 4
.IX Item "dsSystemFileErr"
.Vb 1
\& can\*(Aqt find System file to open (sad Mac only)
.Ve
.IP "dsHD20Installed" 4
.IX Item "dsHD20Installed"
.Vb 1
\& say \*(AqHD20 Startup\*(Aq
.Ve
.IP "mBarNFnd" 4
.IX Item "mBarNFnd"
.Vb 1
\& system error code for MBDF not found
.Ve
.IP "fsDSIntErr" 4
.IX Item "fsDSIntErr"
.Vb 1
\& non\-hardware Internal file system error
.Ve
.IP "hMenuFindErr" 4
.IX Item "hMenuFindErr"
.Vb 1
\& could not find HMenu\*(Aqs parent in MenuKey (wrong error code \- obsolete)
.Ve
.IP "userBreak" 4
.IX Item "userBreak"
.Vb 1
\& user debugger break
.Ve
.IP "strUserBreak" 4
.IX Item "strUserBreak"
.Vb 1
\& user debugger break; display string on stack
.Ve
.SH "DS Errors which are specific to the new runtime model introduced with PowerPC"
.IX Header "DS Errors which are specific to the new runtime model introduced with PowerPC"
.IP "dsBadLibrary" 4
.IX Item "dsBadLibrary"
.Vb 1
\& Bad shared library
.Ve
.SH "TO DO"
.IX Header "TO DO"
* make some sensible export tags
.SH "SOURCE AVAILABILITY"
.IX Header "SOURCE AVAILABILITY"
This source is in Github:
.PP
.Vb 1
\&        https://github.com/briandfoy/Mac\-Errors
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
brian d foy, \f(CW\*(C`<bdfoy@cpan.org>\*(C'\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2002\-2014 brian d foy.  All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
                                                                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Errors5.16.3pm                          0100644 0001750 0001750 00000527356 12566241266 023720  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mac::Errors 3"
.TH Mac::Errors 3 "2012-07-05" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Errors \- constants for Mac error codes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use Mac::Errors qw(openErr);
\&        
\&        if( $value == openErr )
\&                {
\&                ...
\&                }
\&        
\&        my $error = $MacErrors{ $symbol };
\&        # \-\- OR \-\-
\&        my $error = $MacErrors{ $number };
\&        
\&        my $symbol = $error\->symbol;
\&        my $number = $error\->number;
\&        my $desc   = $error\->description; 
\&        
\&        # in MacPerl, $^E is meaningful, and we tie $MacError to it
\&        use Mac::Errors qw( $MacError );
\&        
\&        open FILE, $foo or die $^E;       # error number
\&        open FILE, $foo or die $MacError; # gets description from $^E
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \f(CW%MacErrors\fR hash indexes error information by the error
number or symbol.  Each value is a \f(CW\*(C`Mac::Errors\*(C'\fR object which
has the symbol, number, and description.
.PP
The \f(CW$MacError\fR scalar performs some tied magic to translate
MacPerl's \f(CW$^E\fR to the error text.
.SH "METHODS"
.IX Header "METHODS"
.IP "symbol" 4
.IX Item "symbol"
Returns the symbolic constant, (e.g. openErr)
.IP "number" 4
.IX Item "number"
Returns the error number, (e.g. \-23)
.IP "description" 4
.IX Item "description"
Returns the errror description from MacErrors.h, which may
mean something to you, and may not, (e.g. I/O System Errors).
.Sp
Descriptions of errors are not unique, and some errors do
not have a description.
.SH "CONSTANTS"
.IX Header "CONSTANTS"
All symbolic constants also have a subroutine of the same name.
The subroutine returns the error number.
.IP "paramErr" 4
.IX Item "paramErr"
.Vb 1
\& error in user parameter list
.Ve
.IP "noHardwareErr" 4
.IX Item "noHardwareErr"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "notEnoughHardwareErr" 4
.IX Item "notEnoughHardwareErr"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "userCanceledErr" 4
.IX Item "userCanceledErr"
.PD 0
.IP "qErr" 4
.IX Item "qErr"
.PD
.Vb 1
\& queue element not found during deletion
.Ve
.IP "vTypErr" 4
.IX Item "vTypErr"
.Vb 1
\& invalid queue element
.Ve
.IP "corErr" 4
.IX Item "corErr"
.Vb 1
\& core routine number out of range
.Ve
.IP "unimpErr" 4
.IX Item "unimpErr"
.Vb 1
\& unimplemented core routine
.Ve
.IP "SlpTypeErr" 4
.IX Item "SlpTypeErr"
.Vb 1
\& invalid queue element
.Ve
.IP "seNoDB" 4
.IX Item "seNoDB"
.Vb 1
\& no debugger installed to handle debugger command
.Ve
.IP "controlErr" 4
.IX Item "controlErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "statusErr" 4
.IX Item "statusErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "readErr" 4
.IX Item "readErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "writErr" 4
.IX Item "writErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "badUnitErr" 4
.IX Item "badUnitErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "unitEmptyErr" 4
.IX Item "unitEmptyErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "openErr" 4
.IX Item "openErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "closErr" 4
.IX Item "closErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "dRemovErr" 4
.IX Item "dRemovErr"
.Vb 1
\& tried to remove an open driver
.Ve
.IP "abortErr" 4
.IX Item "abortErr"
.Vb 1
\& IO call aborted by KillIO
.Ve
.IP "iIOAbortErr" 4
.IX Item "iIOAbortErr"
.Vb 1
\& IO abort error (Printing Manager)
.Ve
.IP "notOpenErr" 4
.IX Item "notOpenErr"
.Vb 1
\& Couldn\*(Aqt rd/wr/ctl/sts cause driver not opened
.Ve
.IP "unitTblFullErr" 4
.IX Item "unitTblFullErr"
.Vb 1
\& unit table has no more entries
.Ve
.IP "dceExtErr" 4
.IX Item "dceExtErr"
.Vb 1
\& dce extension error
.Ve
.IP "slotNumErr" 4
.IX Item "slotNumErr"
.Vb 1
\& invalid slot # error
.Ve
.IP "gcrOnMFMErr" 4
.IX Item "gcrOnMFMErr"
.Vb 1
\& gcr format on high density media error
.Ve
.IP "dirFulErr" 4
.IX Item "dirFulErr"
.Vb 1
\& Directory full
.Ve
.IP "dskFulErr" 4
.IX Item "dskFulErr"
.Vb 1
\& disk full
.Ve
.IP "nsvErr" 4
.IX Item "nsvErr"
.Vb 1
\& no such volume
.Ve
.IP "ioErr" 4
.IX Item "ioErr"
.Vb 1
\& I/O error (bummers)
.Ve
.IP "bdNamErr" 4
.IX Item "bdNamErr"
.Vb 1
\& there may be no bad names in the final system!
.Ve
.IP "fnOpnErr" 4
.IX Item "fnOpnErr"
.Vb 1
\& File not open
.Ve
.IP "eofErr" 4
.IX Item "eofErr"
.Vb 1
\& End of file
.Ve
.IP "posErr" 4
.IX Item "posErr"
.Vb 1
\& tried to position to before start of file (r/w)
.Ve
.IP "mFulErr" 4
.IX Item "mFulErr"
.Vb 1
\& memory full (open) or file won\*(Aqt fit (load)
.Ve
.IP "tmfoErr" 4
.IX Item "tmfoErr"
.Vb 1
\& too many files open
.Ve
.IP "fnfErr" 4
.IX Item "fnfErr"
.Vb 1
\& File not found
.Ve
.IP "wPrErr" 4
.IX Item "wPrErr"
.Vb 1
\& diskette is write protected.
.Ve
.IP "vLckdErr" 4
.IX Item "vLckdErr"
.Vb 1
\& volume is locked
.Ve
.IP "fBsyErr" 4
.IX Item "fBsyErr"
.Vb 1
\& File is busy (delete)
.Ve
.IP "dupFNErr" 4
.IX Item "dupFNErr"
.Vb 1
\& duplicate filename (rename)
.Ve
.IP "opWrErr" 4
.IX Item "opWrErr"
.Vb 1
\& file already open with with write permission
.Ve
.IP "rfNumErr" 4
.IX Item "rfNumErr"
.Vb 1
\& refnum error
.Ve
.IP "gfpErr" 4
.IX Item "gfpErr"
.Vb 1
\& get file position error
.Ve
.IP "volOffLinErr" 4
.IX Item "volOffLinErr"
.Vb 1
\& volume not on line error (was Ejected)
.Ve
.IP "permErr" 4
.IX Item "permErr"
.Vb 1
\& permissions error (on file open)
.Ve
.IP "volOnLinErr" 4
.IX Item "volOnLinErr"
.Vb 1
\& drive volume already on\-line at MountVol
.Ve
.IP "nsDrvErr" 4
.IX Item "nsDrvErr"
.Vb 1
\& no such drive (tried to mount a bad drive num)
.Ve
.IP "noMacDskErr" 4
.IX Item "noMacDskErr"
.Vb 1
\& not a mac diskette (sig bytes are wrong)
.Ve
.IP "extFSErr" 4
.IX Item "extFSErr"
.Vb 1
\& volume in question belongs to an external fs
.Ve
.IP "fsRnErr" 4
.IX Item "fsRnErr"
.Vb 1
\& file system internal error:during rename the old entry was deleted but could not be restored.
.Ve
.IP "badMDBErr" 4
.IX Item "badMDBErr"
.Vb 1
\& bad master directory block
.Ve
.IP "wrPermErr" 4
.IX Item "wrPermErr"
.Vb 1
\& write permissions error
.Ve
.IP "dirNFErr" 4
.IX Item "dirNFErr"
.Vb 1
\& Directory not found
.Ve
.IP "tmwdoErr" 4
.IX Item "tmwdoErr"
.Vb 1
\& No free WDCB available
.Ve
.IP "badMovErr" 4
.IX Item "badMovErr"
.Vb 1
\& Move into offspring error
.Ve
.IP "wrgVolTypErr" 4
.IX Item "wrgVolTypErr"
.Vb 1
\& Wrong volume type error [operation not supported for MFS]
.Ve
.IP "fidNotFound" 4
.IX Item "fidNotFound"
.Vb 1
\& no file thread exists.
.Ve
.IP "fidExists" 4
.IX Item "fidExists"
.Vb 1
\& file id already exists
.Ve
.IP "notAFileErr" 4
.IX Item "notAFileErr"
.Vb 1
\& directory specified
.Ve
.IP "diffVolErr" 4
.IX Item "diffVolErr"
.Vb 1
\& files on different volumes
.Ve
.IP "catChangedErr" 4
.IX Item "catChangedErr"
.Vb 1
\& the catalog has been modified
.Ve
.IP "desktopDamagedErr" 4
.IX Item "desktopDamagedErr"
.Vb 1
\& desktop database files are corrupted
.Ve
.IP "sameFileErr" 4
.IX Item "sameFileErr"
.Vb 1
\& can\*(Aqt exchange a file with itself
.Ve
.IP "badFidErr" 4
.IX Item "badFidErr"
.Vb 1
\& file id is dangling or doesn\*(Aqt match with the file number
.Ve
.IP "notARemountErr" 4
.IX Item "notARemountErr"
.Vb 1
\& when _Mount allows only remounts and doesn\*(Aqt get one
.Ve
.IP "fileBoundsErr" 4
.IX Item "fileBoundsErr"
.Vb 1
\& file\*(Aqs EOF, offset, mark or size is too big
.Ve
.IP "fsDataTooBigErr" 4
.IX Item "fsDataTooBigErr"
.Vb 1
\& file or volume is too big for system
.Ve
.IP "volVMBusyErr" 4
.IX Item "volVMBusyErr"
.Vb 1
\& can\*(Aqt eject because volume is in use by VM
.Ve
.IP "badFCBErr" 4
.IX Item "badFCBErr"
.Vb 1
\& FCBRecPtr is not valid
.Ve
.IP "errFSUnknownCall" 4
.IX Item "errFSUnknownCall"
.Vb 1
\& selector is not recognized by this filesystem
.Ve
.IP "errFSBadFSRef" 4
.IX Item "errFSBadFSRef"
.Vb 1
\& FSRef parameter is bad
.Ve
.IP "errFSBadForkName" 4
.IX Item "errFSBadForkName"
.Vb 1
\& Fork name parameter is bad
.Ve
.IP "errFSBadBuffer" 4
.IX Item "errFSBadBuffer"
.Vb 1
\& A buffer parameter was bad
.Ve
.IP "errFSBadForkRef" 4
.IX Item "errFSBadForkRef"
.Vb 1
\& A ForkRefNum parameter was bad
.Ve
.IP "errFSBadInfoBitmap" 4
.IX Item "errFSBadInfoBitmap"
.Vb 1
\& A CatalogInfoBitmap or VolumeInfoBitmap has reserved or invalid bits set
.Ve
.IP "errFSMissingCatInfo" 4
.IX Item "errFSMissingCatInfo"
.Vb 1
\& A CatalogInfo parameter was NULL
.Ve
.IP "errFSNotAFolder" 4
.IX Item "errFSNotAFolder"
.Vb 1
\& Expected a folder, got a file
.Ve
.IP "errFSForkNotFound" 4
.IX Item "errFSForkNotFound"
.Vb 1
\& Named fork does not exist
.Ve
.IP "errFSNameTooLong" 4
.IX Item "errFSNameTooLong"
.Vb 1
\& File/fork name is too long to create/rename
.Ve
.IP "errFSMissingName" 4
.IX Item "errFSMissingName"
.Vb 1
\& A Unicode name parameter was NULL or nameLength parameter was zero
.Ve
.IP "errFSBadPosMode" 4
.IX Item "errFSBadPosMode"
.Vb 1
\& Newline bits set in positionMode
.Ve
.IP "errFSBadAllocFlags" 4
.IX Item "errFSBadAllocFlags"
.Vb 1
\& Invalid bits set in allocationFlags
.Ve
.IP "errFSNoMoreItems" 4
.IX Item "errFSNoMoreItems"
.Vb 1
\& Iteration ran out of items to return
.Ve
.IP "errFSBadItemCount" 4
.IX Item "errFSBadItemCount"
.Vb 1
\& maximumItems was zero
.Ve
.IP "errFSBadSearchParams" 4
.IX Item "errFSBadSearchParams"
.Vb 1
\& Something wrong with CatalogSearch searchParams
.Ve
.IP "errFSRefsDifferent" 4
.IX Item "errFSRefsDifferent"
.Vb 1
\& FSCompareFSRefs; refs are for different objects
.Ve
.IP "errFSForkExists" 4
.IX Item "errFSForkExists"
.Vb 1
\& Named fork already exists.
.Ve
.IP "errFSBadIteratorFlags" 4
.IX Item "errFSBadIteratorFlags"
.Vb 1
\& Flags passed to FSOpenIterator are bad
.Ve
.IP "errFSIteratorNotFound" 4
.IX Item "errFSIteratorNotFound"
.Vb 1
\& Passed FSIterator is not an open iterator
.Ve
.IP "errFSIteratorNotSupported" 4
.IX Item "errFSIteratorNotSupported"
.Vb 1
\& The iterator\*(Aqs flags or container are not supported by this call
.Ve
.IP "envNotPresent" 4
.IX Item "envNotPresent"
.Vb 1
\& returned by glue.
.Ve
.IP "envBadVers" 4
.IX Item "envBadVers"
.Vb 1
\& Version non\-positive
.Ve
.IP "envVersTooBig" 4
.IX Item "envVersTooBig"
.Vb 1
\& Version bigger than call can handle
.Ve
.IP "fontDecError" 4
.IX Item "fontDecError"
.Vb 1
\& error during font declaration
.Ve
.IP "fontNotDeclared" 4
.IX Item "fontNotDeclared"
.Vb 1
\& font not declared
.Ve
.IP "fontSubErr" 4
.IX Item "fontSubErr"
.Vb 1
\& font substitution occurred
.Ve
.IP "fontNotOutlineErr" 4
.IX Item "fontNotOutlineErr"
.Vb 1
\& bitmap font passed to routine that does outlines only
.Ve
.IP "firstDskErr" 4
.IX Item "firstDskErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "lastDskErr" 4
.IX Item "lastDskErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "noDriveErr" 4
.IX Item "noDriveErr"
.Vb 1
\& drive not installed
.Ve
.IP "offLinErr" 4
.IX Item "offLinErr"
.Vb 1
\& r/w requested for an off\-line drive
.Ve
.IP "noAdrMkErr" 4
.IX Item "noAdrMkErr"
.Vb 1
\& couldn\*(Aqt find valid addr mark
.Ve
.IP "dataVerErr" 4
.IX Item "dataVerErr"
.Vb 1
\& read verify compare failed
.Ve
.IP "badCksmErr" 4
.IX Item "badCksmErr"
.Vb 1
\& addr mark checksum didn\*(Aqt check
.Ve
.IP "badBtSlpErr" 4
.IX Item "badBtSlpErr"
.Vb 1
\& bad addr mark bit slip nibbles
.Ve
.IP "noDtaMkErr" 4
.IX Item "noDtaMkErr"
.Vb 1
\& couldn\*(Aqt find a data mark header
.Ve
.IP "badDCksum" 4
.IX Item "badDCksum"
.Vb 1
\& bad data mark checksum
.Ve
.IP "badDBtSlp" 4
.IX Item "badDBtSlp"
.Vb 1
\& bad data mark bit slip nibbles
.Ve
.IP "wrUnderrun" 4
.IX Item "wrUnderrun"
.Vb 1
\& write underrun occurred
.Ve
.IP "cantStepErr" 4
.IX Item "cantStepErr"
.Vb 1
\& step handshake failed
.Ve
.IP "tk0BadErr" 4
.IX Item "tk0BadErr"
.Vb 1
\& track 0 detect doesn\*(Aqt change
.Ve
.IP "initIWMErr" 4
.IX Item "initIWMErr"
.Vb 1
\& unable to initialize IWM
.Ve
.IP "twoSideErr" 4
.IX Item "twoSideErr"
.Vb 1
\& tried to read 2nd side on a 1\-sided drive
.Ve
.IP "spdAdjErr" 4
.IX Item "spdAdjErr"
.Vb 1
\& unable to correctly adjust disk speed
.Ve
.IP "seekErr" 4
.IX Item "seekErr"
.Vb 1
\& track number wrong on address mark
.Ve
.IP "sectNFErr" 4
.IX Item "sectNFErr"
.Vb 1
\& sector number never found on a track
.Ve
.IP "fmt1Err" 4
.IX Item "fmt1Err"
.Vb 1
\& can\*(Aqt find sector 0 after track format
.Ve
.IP "fmt2Err" 4
.IX Item "fmt2Err"
.Vb 1
\& can\*(Aqt get enough sync
.Ve
.IP "verErr" 4
.IX Item "verErr"
.Vb 1
\& track failed to verify
.Ve
.IP "clkRdErr" 4
.IX Item "clkRdErr"
.Vb 1
\& unable to read same clock value twice
.Ve
.IP "clkWrErr" 4
.IX Item "clkWrErr"
.Vb 1
\& time written did not verify
.Ve
.IP "prWrErr" 4
.IX Item "prWrErr"
.Vb 1
\& parameter ram written didn\*(Aqt read\-verify
.Ve
.IP "prInitErr" 4
.IX Item "prInitErr"
.Vb 1
\& InitUtil found the parameter ram uninitialized
.Ve
.IP "rcvrErr" 4
.IX Item "rcvrErr"
.Vb 1
\& SCC receiver error (framing; parity; OR)
.Ve
.SH "Scrap Manager errors"
.IX Header "Scrap Manager errors"
.IP "noScrapErr" 4
.IX Item "noScrapErr"
.Vb 1
\& No scrap exists error
.Ve
.SH "ENET error codes"
.IX Header "ENET error codes"
.IP "eLenErr" 4
.IX Item "eLenErr"
.Vb 1
\& Length error ddpLenErr
.Ve
.IP "ddpSktErr" 4
.IX Item "ddpSktErr"
.Vb 1
\& error in soket number
.Ve
.IP "ddpLenErr" 4
.IX Item "ddpLenErr"
.Vb 1
\& data length too big
.Ve
.IP "noBridgeErr" 4
.IX Item "noBridgeErr"
.Vb 1
\& no network bridge for non\-local send
.Ve
.IP "lapProtErr" 4
.IX Item "lapProtErr"
.Vb 1
\& error in attaching/detaching protocol
.Ve
.IP "excessCollsns" 4
.IX Item "excessCollsns"
.Vb 1
\& excessive collisions on write
.Ve
.IP "portNotPwr" 4
.IX Item "portNotPwr"
.Vb 1
\& serial port not currently powered
.Ve
.IP "portInUse" 4
.IX Item "portInUse"
.Vb 1
\& driver Open error code (port is in use)
.Ve
.SH "Memory Manager errors"
.IX Header "Memory Manager errors"
.IP "memROZWarn" 4
.IX Item "memROZWarn"
.Vb 1
\& soft error in ROZ
.Ve
.IP "memROZError" 4
.IX Item "memROZError"
.Vb 1
\& hard error in ROZ
.Ve
.IP "memROZErr" 4
.IX Item "memROZErr"
.Vb 1
\& hard error in ROZ
.Ve
.IP "memFullErr" 4
.IX Item "memFullErr"
.Vb 1
\& Not enough room in heap zone
.Ve
.IP "nilHandleErr" 4
.IX Item "nilHandleErr"
.Vb 1
\& Master Pointer was NIL in HandleZone or other
.Ve
.IP "memWZErr" 4
.IX Item "memWZErr"
.Vb 1
\& WhichZone failed (applied to free block)
.Ve
.IP "memPurErr" 4
.IX Item "memPurErr"
.Vb 1
\& trying to purge a locked or non\-purgeable block
.Ve
.IP "memAdrErr" 4
.IX Item "memAdrErr"
.Vb 1
\& address was odd; or out of range
.Ve
.IP "memAZErr" 4
.IX Item "memAZErr"
.Vb 1
\& Address in zone check failed
.Ve
.IP "memPCErr" 4
.IX Item "memPCErr"
.Vb 1
\& Pointer Check failed
.Ve
.IP "memBCErr" 4
.IX Item "memBCErr"
.Vb 1
\& Block Check failed
.Ve
.IP "memSCErr" 4
.IX Item "memSCErr"
.Vb 1
\& Size Check failed
.Ve
.SH "Printing Errors"
.IX Header "Printing Errors"
.IP "iMemFullErr" 4
.IX Item "iMemFullErr"
.PD 0
.IP "resourceInMemory" 4
.IX Item "resourceInMemory"
.PD
.Vb 1
\& Resource already in memory
.Ve
.IP "writingPastEnd" 4
.IX Item "writingPastEnd"
.Vb 1
\& Writing past end of file
.Ve
.IP "inputOutOfBounds" 4
.IX Item "inputOutOfBounds"
.Vb 1
\& Offset of Count out of bounds
.Ve
.IP "resNotFound" 4
.IX Item "resNotFound"
.Vb 1
\& Resource not found
.Ve
.IP "resFNotFound" 4
.IX Item "resFNotFound"
.Vb 1
\& Resource file not found
.Ve
.IP "addResFailed" 4
.IX Item "addResFailed"
.Vb 1
\& AddResource failed
.Ve
.IP "addRefFailed" 4
.IX Item "addRefFailed"
.Vb 1
\& AddReference failed
.Ve
.IP "rmvResFailed" 4
.IX Item "rmvResFailed"
.Vb 1
\& RmveResource failed
.Ve
.IP "rmvRefFailed" 4
.IX Item "rmvRefFailed"
.Vb 1
\& RmveReference failed
.Ve
.IP "resAttrErr" 4
.IX Item "resAttrErr"
.Vb 1
\& attribute inconsistent with operation
.Ve
.IP "mapReadErr" 4
.IX Item "mapReadErr"
.Vb 1
\& map inconsistent with operation
.Ve
.IP "CantDecompress" 4
.IX Item "CantDecompress"
.Vb 1
\& resource bent ("the bends") \- can\*(Aqt decompress a compressed resource
.Ve
.IP "badExtResource" 4
.IX Item "badExtResource"
.Vb 1
\& extended resource has a bad format.
.Ve
.IP "noMemForPictPlaybackErr" 4
.IX Item "noMemForPictPlaybackErr"
.PD 0
.IP "rgnOverflowErr" 4
.IX Item "rgnOverflowErr"
.IP "rgnTooBigError" 4
.IX Item "rgnTooBigError"
.IP "pixMapTooDeepErr" 4
.IX Item "pixMapTooDeepErr"
.IP "insufficientStackErr" 4
.IX Item "insufficientStackErr"
.IP "cMatchErr" 4
.IX Item "cMatchErr"
.PD
.Vb 1
\& Color2Index failed to find an index
.Ve
.IP "cTempMemErr" 4
.IX Item "cTempMemErr"
.Vb 1
\& failed to allocate memory for temporary structures
.Ve
.IP "cNoMemErr" 4
.IX Item "cNoMemErr"
.Vb 1
\& failed to allocate memory for structure
.Ve
.IP "cRangeErr" 4
.IX Item "cRangeErr"
.Vb 1
\& range error on colorTable request
.Ve
.IP "cProtectErr" 4
.IX Item "cProtectErr"
.Vb 1
\& colorTable entry protection violation
.Ve
.IP "cDevErr" 4
.IX Item "cDevErr"
.Vb 1
\& invalid type of graphics device
.Ve
.IP "cResErr" 4
.IX Item "cResErr"
.Vb 1
\& invalid resolution for MakeITable
.Ve
.IP "cDepthErr" 4
.IX Item "cDepthErr"
.Vb 1
\& invalid pixel depth
.Ve
.IP "rgnTooBigErr" 4
.IX Item "rgnTooBigErr"
.PD 0
.IP "updPixMemErr" 4
.IX Item "updPixMemErr"
.PD
.Vb 1
\& insufficient memory to update a pixmap
.Ve
.IP "pictInfoVersionErr" 4
.IX Item "pictInfoVersionErr"
.Vb 1
\& wrong version of the PictInfo structure
.Ve
.IP "pictInfoIDErr" 4
.IX Item "pictInfoIDErr"
.Vb 1
\& the internal consistancy check for the PictInfoID is wrong
.Ve
.IP "pictInfoVerbErr" 4
.IX Item "pictInfoVerbErr"
.Vb 1
\& the passed verb was invalid
.Ve
.IP "cantLoadPickMethodErr" 4
.IX Item "cantLoadPickMethodErr"
.Vb 1
\& unable to load the custom pick proc
.Ve
.IP "colorsRequestedErr" 4
.IX Item "colorsRequestedErr"
.Vb 1
\& the number of colors requested was illegal
.Ve
.SH "General Errors"
.IX Header "General Errors"
.IP "cmProfileError" 4
.IX Item "cmProfileError"
.PD 0
.IP "cmMethodError" 4
.IX Item "cmMethodError"
.IP "cmMethodNotFound" 4
.IX Item "cmMethodNotFound"
.PD
.Vb 1
\& CMM not present
.Ve
.IP "cmProfileNotFound" 4
.IX Item "cmProfileNotFound"
.Vb 1
\& Responder error
.Ve
.IP "cmProfilesIdentical" 4
.IX Item "cmProfilesIdentical"
.Vb 1
\& Profiles the same
.Ve
.IP "cmCantConcatenateError" 4
.IX Item "cmCantConcatenateError"
.Vb 1
\& Profile can\*(Aqt be concatenated
.Ve
.IP "cmCantXYZ" 4
.IX Item "cmCantXYZ"
.Vb 1
\& CMM cant handle XYZ space
.Ve
.IP "cmCantDeleteProfile" 4
.IX Item "cmCantDeleteProfile"
.Vb 1
\& Responder error
.Ve
.IP "cmUnsupportedDataType" 4
.IX Item "cmUnsupportedDataType"
.Vb 1
\& Responder error
.Ve
.SH "Sound Manager errors"
.IX Header "Sound Manager errors"
.IP "noHardware" 4
.IX Item "noHardware"
.Vb 1
\& obsolete spelling
.Ve
.IP "notEnoughHardware" 4
.IX Item "notEnoughHardware"
.Vb 1
\& obsolete spelling
.Ve
.IP "queueFull" 4
.IX Item "queueFull"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "resProblem" 4
.IX Item "resProblem"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "badChannel" 4
.IX Item "badChannel"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "badFormat" 4
.IX Item "badFormat"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "notEnoughBufferSpace" 4
.IX Item "notEnoughBufferSpace"
.Vb 1
\& could not allocate enough memory
.Ve
.IP "badFileFormat" 4
.IX Item "badFileFormat"
.Vb 1
\& was not type AIFF or was of bad format,corrupt
.Ve
.IP "channelBusy" 4
.IX Item "channelBusy"
.Vb 1
\& the Channel is being used for a PFD already
.Ve
.IP "buffersTooSmall" 4
.IX Item "buffersTooSmall"
.Vb 1
\& can not operate in the memory allowed
.Ve
.IP "channelNotBusy" 4
.IX Item "channelNotBusy"
.PD 0
.IP "noMoreRealTime" 4
.IX Item "noMoreRealTime"
.PD
.Vb 1
\& not enough CPU cycles left to add another task
.Ve
.IP "siVBRCompressionNotSupported" 4
.IX Item "siVBRCompressionNotSupported"
.Vb 1
\& vbr audio compression not supported for this operation
.Ve
.IP "siNoSoundInHardware" 4
.IX Item "siNoSoundInHardware"
.Vb 1
\& no Sound Input hardware
.Ve
.IP "siBadSoundInDevice" 4
.IX Item "siBadSoundInDevice"
.Vb 1
\& invalid index passed to SoundInGetIndexedDevice
.Ve
.IP "siNoBufferSpecified" 4
.IX Item "siNoBufferSpecified"
.Vb 1
\& returned by synchronous SPBRecord if nil buffer passed
.Ve
.IP "siInvalidCompression" 4
.IX Item "siInvalidCompression"
.Vb 1
\& invalid compression type
.Ve
.IP "siHardDriveTooSlow" 4
.IX Item "siHardDriveTooSlow"
.Vb 1
\& hard drive too slow to record to disk
.Ve
.IP "siInvalidSampleRate" 4
.IX Item "siInvalidSampleRate"
.Vb 1
\& invalid sample rate
.Ve
.IP "siInvalidSampleSize" 4
.IX Item "siInvalidSampleSize"
.Vb 1
\& invalid sample size
.Ve
.IP "siDeviceBusyErr" 4
.IX Item "siDeviceBusyErr"
.Vb 1
\& input device already in use
.Ve
.IP "siBadDeviceName" 4
.IX Item "siBadDeviceName"
.Vb 1
\& input device could not be opened
.Ve
.IP "siBadRefNum" 4
.IX Item "siBadRefNum"
.Vb 1
\& invalid input device reference number
.Ve
.IP "siInputDeviceErr" 4
.IX Item "siInputDeviceErr"
.Vb 1
\& input device hardware failure
.Ve
.IP "siUnknownInfoType" 4
.IX Item "siUnknownInfoType"
.Vb 1
\& invalid info type selector (returned by driver)
.Ve
.IP "noSynthFound" 4
.IX Item "noSynthFound"
.PD 0
.IP "synthOpenFailed" 4
.IX Item "synthOpenFailed"
.IP "synthNotReady" 4
.IX Item "synthNotReady"
.IP "bufTooSmall" 4
.IX Item "bufTooSmall"
.IP "voiceNotFound" 4
.IX Item "voiceNotFound"
.IP "incompatibleVoice" 4
.IX Item "incompatibleVoice"
.IP "badDictFormat" 4
.IX Item "badDictFormat"
.IP "midiNoClientErr" 4
.IX Item "midiNoClientErr"
.PD
.Vb 1
\& no client with that ID found
.Ve
.IP "midiNoPortErr" 4
.IX Item "midiNoPortErr"
.Vb 1
\& no port with that ID found
.Ve
.IP "midiTooManyPortsErr" 4
.IX Item "midiTooManyPortsErr"
.Vb 1
\& too many ports already installed in the system
.Ve
.IP "midiTooManyConsErr" 4
.IX Item "midiTooManyConsErr"
.Vb 1
\& too many connections made
.Ve
.IP "midiVConnectErr" 4
.IX Item "midiVConnectErr"
.Vb 1
\& pending virtual connection created
.Ve
.IP "midiVConnectMade" 4
.IX Item "midiVConnectMade"
.Vb 1
\& pending virtual connection resolved
.Ve
.IP "midiVConnectRmvd" 4
.IX Item "midiVConnectRmvd"
.Vb 1
\& pending virtual connection removed
.Ve
.IP "midiNoConErr" 4
.IX Item "midiNoConErr"
.Vb 1
\& no connection exists between specified ports
.Ve
.IP "midiWriteErr" 4
.IX Item "midiWriteErr"
.Vb 1
\& MIDIWritePacket couldn\*(Aqt write to all connected ports
.Ve
.IP "midiNameLenErr" 4
.IX Item "midiNameLenErr"
.Vb 1
\& name supplied is longer than 31 characters
.Ve
.IP "midiDupIDErr" 4
.IX Item "midiDupIDErr"
.Vb 1
\& duplicate client ID
.Ve
.IP "siInitSDTblErr" 4
.IX Item "siInitSDTblErr"
.Vb 1
\& slot int dispatch table could not be initialized.
.Ve
.IP "siInitVBLQsErr" 4
.IX Item "siInitVBLQsErr"
.Vb 1
\& VBLqueues for all slots could not be initialized.
.Ve
.IP "siInitSPTblErr" 4
.IX Item "siInitSPTblErr"
.Vb 1
\& slot priority table could not be initialized.
.Ve
.IP "sdmJTInitErr" 4
.IX Item "sdmJTInitErr"
.Vb 1
\& SDM Jump Table could not be initialized.
.Ve
.IP "sdmInitErr" 4
.IX Item "sdmInitErr"
.Vb 1
\& SDM could not be initialized.
.Ve
.IP "sdmSRTInitErr" 4
.IX Item "sdmSRTInitErr"
.Vb 1
\& Slot Resource Table could not be initialized.
.Ve
.IP "sdmPRAMInitErr" 4
.IX Item "sdmPRAMInitErr"
.Vb 1
\& Slot PRAM could not be initialized.
.Ve
.IP "smSDMInitErr" 4
.IX Item "smSDMInitErr"
.Vb 1
\& Error; SDM could not be initialized.
.Ve
.IP "smSRTInitErr" 4
.IX Item "smSRTInitErr"
.Vb 1
\& Error; Slot Resource Table could not be initialized.
.Ve
.IP "smPRAMInitErr" 4
.IX Item "smPRAMInitErr"
.Vb 1
\& Error; Slot Resource Table could not be initialized.
.Ve
.IP "smPriInitErr" 4
.IX Item "smPriInitErr"
.Vb 1
\& Error; Cards could not be initialized.
.Ve
.IP "smEmptySlot" 4
.IX Item "smEmptySlot"
.Vb 1
\& No card in slot
.Ve
.IP "smCRCFail" 4
.IX Item "smCRCFail"
.Vb 1
\& CRC check failed for declaration data
.Ve
.IP "smFormatErr" 4
.IX Item "smFormatErr"
.Vb 1
\& FHeader Format is not Apple\*(Aqs
.Ve
.IP "smRevisionErr" 4
.IX Item "smRevisionErr"
.Vb 1
\& Wrong revison level
.Ve
.IP "smNoDir" 4
.IX Item "smNoDir"
.Vb 1
\& Directory offset is Nil
.Ve
.IP "smDisabledSlot" 4
.IX Item "smDisabledSlot"
.Vb 1
\& This slot is disabled (\-305 use to be smLWTstBad)
.Ve
.IP "smResrvErr" 4
.IX Item "smResrvErr"
.Vb 1
\& Fatal reserved error. Resreved field <> 0.
.Ve
.IP "smUnExBusErr" 4
.IX Item "smUnExBusErr"
.Vb 1
\& Unexpected BusError
.Ve
.IP "smBLFieldBad" 4
.IX Item "smBLFieldBad"
.Vb 1
\& ByteLanes field was bad.
.Ve
.IP "smFHBlockRdErr" 4
.IX Item "smFHBlockRdErr"
.Vb 1
\& Error occurred during _sGetFHeader.
.Ve
.IP "smFHBlkDispErr" 4
.IX Item "smFHBlkDispErr"
.Vb 1
\& Error occurred during _sDisposePtr (Dispose of FHeader block).
.Ve
.IP "smDisposePErr" 4
.IX Item "smDisposePErr"
.Vb 1
\& _DisposePointer error
.Ve
.IP "smNoBoardSRsrc" 4
.IX Item "smNoBoardSRsrc"
.Vb 1
\& No Board sResource.
.Ve
.IP "smGetPRErr" 4
.IX Item "smGetPRErr"
.Vb 1
\& Error occurred during _sGetPRAMRec (See SIMStatus).
.Ve
.IP "smNoBoardId" 4
.IX Item "smNoBoardId"
.Vb 1
\& No Board Id.
.Ve
.IP "smInitStatVErr" 4
.IX Item "smInitStatVErr"
.Vb 1
\& The InitStatusV field was negative after primary or secondary init.
.Ve
.IP "smInitTblVErr" 4
.IX Item "smInitTblVErr"
.Vb 1
\& An error occurred while trying to initialize the Slot Resource Table.
.Ve
.IP "smNoJmpTbl" 4
.IX Item "smNoJmpTbl"
.Vb 1
\& SDM jump table could not be created.
.Ve
.IP "smReservedSlot" 4
.IX Item "smReservedSlot"
.Vb 1
\& slot is reserved, VM should not use this address space.
.Ve
.IP "smBadBoardId" 4
.IX Item "smBadBoardId"
.Vb 1
\& BoardId was wrong; re\-init the PRAM record.
.Ve
.IP "smBusErrTO" 4
.IX Item "smBusErrTO"
.Vb 2
\& BusError time out.
\&These errors are logged in the  vendor status field of the sInfo record.
.Ve
.IP "svTempDisable" 4
.IX Item "svTempDisable"
.Vb 1
\& Temporarily disable card but run primary init.
.Ve
.IP "svDisabled" 4
.IX Item "svDisabled"
.Vb 1
\& Reserve range \-32640 to \-32768 for Apple temp disables.
.Ve
.IP "smBadRefId" 4
.IX Item "smBadRefId"
.Vb 1
\& Reference Id not found in List
.Ve
.IP "smBadsList" 4
.IX Item "smBadsList"
.Vb 1
\& Bad sList: Id1 < Id2 < Id3 ...format is not followed.
.Ve
.IP "smReservedErr" 4
.IX Item "smReservedErr"
.Vb 1
\& Reserved field not zero
.Ve
.IP "smCPUErr" 4
.IX Item "smCPUErr"
.Vb 1
\& Code revision is wrong
.Ve
.IP "smsPointerNil" 4
.IX Item "smsPointerNil"
.Vb 1
\& LPointer is nil From sOffsetData. If this error occurs; check sInfo rec for more information.
.Ve
.IP "smNilsBlockErr" 4
.IX Item "smNilsBlockErr"
.Vb 1
\& Nil sBlock error (Dont allocate and try to use a nil sBlock)
.Ve
.IP "smSlotOOBErr" 4
.IX Item "smSlotOOBErr"
.Vb 1
\& Slot out of bounds error
.Ve
.IP "smSelOOBErr" 4
.IX Item "smSelOOBErr"
.Vb 1
\& Selector out of bounds error
.Ve
.IP "smNewPErr" 4
.IX Item "smNewPErr"
.Vb 1
\& _NewPtr error
.Ve
.IP "smBlkMoveErr" 4
.IX Item "smBlkMoveErr"
.Vb 1
\& _BlockMove error
.Ve
.IP "smCkStatusErr" 4
.IX Item "smCkStatusErr"
.Vb 1
\& Status of slot = fail.
.Ve
.IP "smGetDrvrNamErr" 4
.IX Item "smGetDrvrNamErr"
.Vb 1
\& Error occurred during _sGetDrvrName.
.Ve
.IP "smDisDrvrNamErr" 4
.IX Item "smDisDrvrNamErr"
.Vb 1
\& Error occurred during _sDisDrvrName.
.Ve
.IP "smNoMoresRsrcs" 4
.IX Item "smNoMoresRsrcs"
.Vb 1
\& No more sResources
.Ve
.IP "smsGetDrvrErr" 4
.IX Item "smsGetDrvrErr"
.Vb 1
\& Error occurred during _sGetDriver.
.Ve
.IP "smBadsPtrErr" 4
.IX Item "smBadsPtrErr"
.Vb 1
\& Bad pointer was passed to sCalcsPointer
.Ve
.IP "smByteLanesErr" 4
.IX Item "smByteLanesErr"
.Vb 1
\& NumByteLanes was determined to be zero.
.Ve
.IP "smOffsetErr" 4
.IX Item "smOffsetErr"
.Vb 1
\& Offset was too big (temporary error
.Ve
.IP "smNoGoodOpens" 4
.IX Item "smNoGoodOpens"
.Vb 1
\& No opens were successfull in the loop.
.Ve
.IP "smSRTOvrFlErr" 4
.IX Item "smSRTOvrFlErr"
.Vb 1
\& SRT over flow.
.Ve
.SH "Dictionary Manager errors"
.IX Header "Dictionary Manager errors"
.IP "notBTree" 4
.IX Item "notBTree"
.Vb 1
\& The file is not a dictionary.
.Ve
.IP "btNoSpace" 4
.IX Item "btNoSpace"
.Vb 1
\& Can\*(Aqt allocate disk space.
.Ve
.IP "btDupRecErr" 4
.IX Item "btDupRecErr"
.Vb 1
\& Record already exists.
.Ve
.IP "btRecNotFnd" 4
.IX Item "btRecNotFnd"
.Vb 1
\& Record cannot be found.
.Ve
.IP "btKeyLenErr" 4
.IX Item "btKeyLenErr"
.Vb 1
\& Maximum key length is too long or equal to zero.
.Ve
.IP "btKeyAttrErr" 4
.IX Item "btKeyAttrErr"
.Vb 1
\& There is no such a key attribute.
.Ve
.IP "unknownInsertModeErr" 4
.IX Item "unknownInsertModeErr"
.Vb 1
\& There is no such an insert mode.
.Ve
.IP "recordDataTooBigErr" 4
.IX Item "recordDataTooBigErr"
.Vb 1
\& The record data is bigger than buffer size (1024 bytes).
.Ve
.IP "fsmFFSNotFoundErr" 4
.IX Item "fsmFFSNotFoundErr"
.Vb 1
\& Foreign File system does not exist \- new Pack2 could return this error too
.Ve
.IP "fsmBusyFFSErr" 4
.IX Item "fsmBusyFFSErr"
.Vb 1
\& File system is busy, cannot be removed
.Ve
.IP "fsmBadFFSNameErr" 4
.IX Item "fsmBadFFSNameErr"
.Vb 1
\& Name length not 1 <= length <= 31
.Ve
.IP "fsmBadFSDLenErr" 4
.IX Item "fsmBadFSDLenErr"
.Vb 1
\& FSD size incompatible with current FSM vers
.Ve
.IP "fsmDuplicateFSIDErr" 4
.IX Item "fsmDuplicateFSIDErr"
.Vb 1
\& FSID already exists on InstallFS
.Ve
.IP "fsmBadFSDVersionErr" 4
.IX Item "fsmBadFSDVersionErr"
.Vb 1
\& FSM version incompatible with FSD
.Ve
.IP "fsmNoAlternateStackErr" 4
.IX Item "fsmNoAlternateStackErr"
.Vb 1
\& no alternate stack for HFS CI
.Ve
.SH "Edition Mgr errors"
.IX Header "Edition Mgr errors"
.IP "editionMgrInitErr" 4
.IX Item "editionMgrInitErr"
.Vb 1
\& edition manager not inited by this app
.Ve
.IP "badSectionErr" 4
.IX Item "badSectionErr"
.Vb 1
\& not a valid SectionRecord
.Ve
.IP "notRegisteredSectionErr" 4
.IX Item "notRegisteredSectionErr"
.Vb 1
\& not a registered SectionRecord
.Ve
.IP "badEditionFileErr" 4
.IX Item "badEditionFileErr"
.Vb 1
\& edition file is corrupt
.Ve
.IP "badSubPartErr" 4
.IX Item "badSubPartErr"
.Vb 1
\& can not use sub parts in this release
.Ve
.IP "multiplePublisherWrn" 4
.IX Item "multiplePublisherWrn"
.Vb 1
\& A Publisher is already registered for that container
.Ve
.IP "containerNotFoundWrn" 4
.IX Item "containerNotFoundWrn"
.Vb 1
\& could not find editionContainer at this time
.Ve
.IP "containerAlreadyOpenWrn" 4
.IX Item "containerAlreadyOpenWrn"
.Vb 1
\& container already opened by this section
.Ve
.IP "teScrapSizeErr" 4
.IX Item "teScrapSizeErr"
.Vb 1
\& scrap item too big for text edit record
.Ve
.IP "hwParamErr" 4
.IX Item "hwParamErr"
.Vb 1
\& bad selector for _HWPriv
.Ve
.SH "Process Manager errors"
.IX Header "Process Manager errors"
.IP "procNotFound" 4
.IX Item "procNotFound"
.Vb 1
\& no eligible process with specified descriptor
.Ve
.IP "memFragErr" 4
.IX Item "memFragErr"
.Vb 1
\& not enough room to launch app w/special requirements
.Ve
.IP "appModeErr" 4
.IX Item "appModeErr"
.Vb 1
\& memory mode is 32\-bit, but app not 32\-bit clean
.Ve
.IP "protocolErr" 4
.IX Item "protocolErr"
.Vb 1
\& app made module calls in improper order
.Ve
.IP "hardwareConfigErr" 4
.IX Item "hardwareConfigErr"
.Vb 1
\& hardware configuration not correct for call
.Ve
.IP "appMemFullErr" 4
.IX Item "appMemFullErr"
.Vb 1
\& application SIZE not big enough for launch
.Ve
.IP "appIsDaemon" 4
.IX Item "appIsDaemon"
.Vb 1
\& app is BG\-only, and launch flags disallow this
.Ve
.IP "bufferIsSmall" 4
.IX Item "bufferIsSmall"
.Vb 1
\& error returns from Post and Accept
.Ve
.IP "noOutstandingHLE" 4
.IX Item "noOutstandingHLE"
.PD 0
.IP "connectionInvalid" 4
.IX Item "connectionInvalid"
.PD
.SH "More Process Manager errors"
.IX Header "More Process Manager errors"
.IP "wrongApplicationPlatform" 4
.IX Item "wrongApplicationPlatform"
.Vb 1
\& The application could not launch because the required platform is not available
.Ve
.IP "appVersionTooOld" 4
.IX Item "appVersionTooOld"
.Vb 1
\& The application\*(Aqs creator and version are incompatible with the current version of Mac OS.
.Ve
.IP "threadTooManyReqsErr" 4
.IX Item "threadTooManyReqsErr"
.PD 0
.IP "threadNotFoundErr" 4
.IX Item "threadNotFoundErr"
.IP "notEnoughMemoryErr" 4
.IX Item "notEnoughMemoryErr"
.PD
.Vb 1
\& insufficient physical memory
.Ve
.IP "notHeldErr" 4
.IX Item "notHeldErr"
.Vb 1
\& specified range of memory is not held
.Ve
.IP "cannotMakeContiguousErr" 4
.IX Item "cannotMakeContiguousErr"
.Vb 1
\& cannot make specified range contiguous
.Ve
.IP "notLockedErr" 4
.IX Item "notLockedErr"
.Vb 1
\& specified range of memory is not locked
.Ve
.IP "interruptsMaskedErr" 4
.IX Item "interruptsMaskedErr"
.Vb 1
\& don\*(Aqt call with interrupts masked
.Ve
.IP "cannotDeferErr" 4
.IX Item "cannotDeferErr"
.Vb 1
\& unable to defer additional functions
.Ve
.IP "vmMorePhysicalThanVirtualErr" 4
.IX Item "vmMorePhysicalThanVirtualErr"
.Vb 1
\& VM could not start because there was more physical memory than virtual memory (bad setting in VM config resource)
.Ve
.IP "vmKernelMMUInitErr" 4
.IX Item "vmKernelMMUInitErr"
.Vb 1
\& VM could not start because VM_MMUInit kernel call failed
.Ve
.IP "vmOffErr" 4
.IX Item "vmOffErr"
.Vb 1
\& VM was configured off, or command key was held down at boot
.Ve
.IP "vmMemLckdErr" 4
.IX Item "vmMemLckdErr"
.Vb 1
\& VM could not start because of a lock table conflict (only on non\-SuperMario ROMs)
.Ve
.IP "vmBadDriver" 4
.IX Item "vmBadDriver"
.Vb 1
\& VM could not start because the driver was incompatible
.Ve
.IP "vmInvalidBackingFileIDErr" 4
.IX Item "vmInvalidBackingFileIDErr"
.Vb 1
\& invalid BackingFileID
.Ve
.IP "vmMappingPrivilegesErr" 4
.IX Item "vmMappingPrivilegesErr"
.Vb 1
\& requested MappingPrivileges cannot be obtained
.Ve
.IP "vmBusyBackingFileErr" 4
.IX Item "vmBusyBackingFileErr"
.Vb 1
\& open views found on BackingFile
.Ve
.IP "vmNoMoreBackingFilesErr" 4
.IX Item "vmNoMoreBackingFilesErr"
.Vb 1
\& no more BackingFiles were found
.Ve
.IP "vmInvalidFileViewIDErr" 4
.IX Item "vmInvalidFileViewIDErr"
.Vb 1
\& invalid FileViewID
.Ve
.IP "vmFileViewAccessErr" 4
.IX Item "vmFileViewAccessErr"
.Vb 1
\& requested FileViewAccess cannot be obtained
.Ve
.IP "vmNoMoreFileViewsErr" 4
.IX Item "vmNoMoreFileViewsErr"
.Vb 1
\& no more FileViews were found
.Ve
.IP "vmAddressNotInFileViewErr" 4
.IX Item "vmAddressNotInFileViewErr"
.Vb 1
\& address is not in a FileView
.Ve
.IP "rcDBNull" 4
.IX Item "rcDBNull"
.PD 0
.IP "rcDBValue" 4
.IX Item "rcDBValue"
.IP "rcDBError" 4
.IX Item "rcDBError"
.IP "rcDBBadType" 4
.IX Item "rcDBBadType"
.IP "rcDBBreak" 4
.IX Item "rcDBBreak"
.IP "rcDBExec" 4
.IX Item "rcDBExec"
.IP "rcDBBadSessID" 4
.IX Item "rcDBBadSessID"
.IP "rcDBBadSessNum" 4
.IX Item "rcDBBadSessNum"
.PD
.Vb 1
\& bad session number for DBGetConnInfo
.Ve
.IP "rcDBBadDDEV" 4
.IX Item "rcDBBadDDEV"
.Vb 1
\& bad ddev specified on DBInit
.Ve
.IP "rcDBAsyncNotSupp" 4
.IX Item "rcDBAsyncNotSupp"
.Vb 1
\& ddev does not support async calls
.Ve
.IP "rcDBBadAsyncPB" 4
.IX Item "rcDBBadAsyncPB"
.Vb 1
\& tried to kill a bad pb
.Ve
.IP "rcDBNoHandler" 4
.IX Item "rcDBNoHandler"
.Vb 1
\& no app handler for specified data type
.Ve
.IP "rcDBWrongVersion" 4
.IX Item "rcDBWrongVersion"
.Vb 1
\& incompatible versions
.Ve
.IP "hmHelpDisabled" 4
.IX Item "hmHelpDisabled"
.Vb 1
\& Show Balloons mode was off, call to routine ignored
.Ve
.IP "hmBalloonAborted" 4
.IX Item "hmBalloonAborted"
.Vb 1
\& Returned if mouse was moving or mouse wasn\*(Aqt in window port rect
.Ve
.IP "hmSameAsLastBalloon" 4
.IX Item "hmSameAsLastBalloon"
.Vb 1
\& Returned from HMShowMenuBalloon if menu & item is same as last time
.Ve
.IP "hmHelpManagerNotInited" 4
.IX Item "hmHelpManagerNotInited"
.Vb 1
\& Returned from HMGetHelpMenuHandle if help menu not setup
.Ve
.IP "hmSkippedBalloon" 4
.IX Item "hmSkippedBalloon"
.Vb 1
\& Returned from calls if helpmsg specified a skip balloon
.Ve
.IP "hmWrongVersion" 4
.IX Item "hmWrongVersion"
.Vb 1
\& Returned if help mgr resource was the wrong version
.Ve
.IP "hmUnknownHelpType" 4
.IX Item "hmUnknownHelpType"
.Vb 1
\& Returned if help msg record contained a bad type
.Ve
.IP "hmOperationUnsupported" 4
.IX Item "hmOperationUnsupported"
.Vb 1
\& Returned from HMShowBalloon call if bad method passed to routine
.Ve
.IP "hmNoBalloonUp" 4
.IX Item "hmNoBalloonUp"
.Vb 1
\& Returned from HMRemoveBalloon if no balloon was visible when call was made
.Ve
.SH "PPC errors"
.IX Header "PPC errors"
.IP "notInitErr" 4
.IX Item "notInitErr"
.Vb 1
\& PPCToolBox not initialized
.Ve
.IP "nameTypeErr" 4
.IX Item "nameTypeErr"
.Vb 1
\& Invalid or inappropriate locationKindSelector in locationName
.Ve
.IP "noPortErr" 4
.IX Item "noPortErr"
.Vb 2
\& Unable to open port or bad portRefNum.  If you\*(Aqre calling
\&AESend, this is because your application does not have
.Ve
.IP "noGlobalsErr" 4
.IX Item "noGlobalsErr"
.Vb 1
\& The system is hosed, better re\-boot
.Ve
.IP "localOnlyErr" 4
.IX Item "localOnlyErr"
.Vb 1
\& Network activity is currently disabled
.Ve
.IP "destPortErr" 4
.IX Item "destPortErr"
.Vb 1
\& Port does not exist at destination
.Ve
.IP "sessTableErr" 4
.IX Item "sessTableErr"
.Vb 1
\& Out of session tables, try again later
.Ve
.IP "noSessionErr" 4
.IX Item "noSessionErr"
.Vb 1
\& Invalid session reference number
.Ve
.IP "badReqErr" 4
.IX Item "badReqErr"
.Vb 1
\& bad parameter or invalid state for operation
.Ve
.IP "portNameExistsErr" 4
.IX Item "portNameExistsErr"
.Vb 1
\& port is already open (perhaps in another app)
.Ve
.IP "noUserNameErr" 4
.IX Item "noUserNameErr"
.Vb 1
\& user name unknown on destination machine
.Ve
.IP "userRejectErr" 4
.IX Item "userRejectErr"
.Vb 1
\& Destination rejected the session request
.Ve
.IP "noMachineNameErr" 4
.IX Item "noMachineNameErr"
.Vb 1
\& user hasn\*(Aqt named his Macintosh in the Network Setup Control Panel
.Ve
.IP "noToolboxNameErr" 4
.IX Item "noToolboxNameErr"
.Vb 1
\& A system resource is missing, not too likely
.Ve
.IP "noResponseErr" 4
.IX Item "noResponseErr"
.Vb 1
\& unable to contact destination
.Ve
.IP "portClosedErr" 4
.IX Item "portClosedErr"
.Vb 1
\& port was closed
.Ve
.IP "sessClosedErr" 4
.IX Item "sessClosedErr"
.Vb 1
\& session was closed
.Ve
.IP "badPortNameErr" 4
.IX Item "badPortNameErr"
.Vb 1
\& PPCPortRec malformed
.Ve
.IP "noDefaultUserErr" 4
.IX Item "noDefaultUserErr"
.Vb 1
\& user hasn\*(Aqt typed in owners name in Network Setup Control Pannel
.Ve
.IP "notLoggedInErr" 4
.IX Item "notLoggedInErr"
.Vb 1
\& The default userRefNum does not yet exist
.Ve
.IP "noUserRefErr" 4
.IX Item "noUserRefErr"
.Vb 1
\& unable to create a new userRefNum
.Ve
.IP "networkErr" 4
.IX Item "networkErr"
.Vb 1
\& An error has occurred in the network, not too likely
.Ve
.IP "noInformErr" 4
.IX Item "noInformErr"
.Vb 1
\& PPCStart failed because destination did not have inform pending
.Ve
.IP "authFailErr" 4
.IX Item "authFailErr"
.Vb 1
\& unable to authenticate user at destination
.Ve
.IP "noUserRecErr" 4
.IX Item "noUserRecErr"
.Vb 1
\& Invalid user reference number
.Ve
.IP "badServiceMethodErr" 4
.IX Item "badServiceMethodErr"
.Vb 1
\& illegal service type, or not supported
.Ve
.IP "badLocNameErr" 4
.IX Item "badLocNameErr"
.Vb 1
\& location name malformed
.Ve
.SH "Font Mgr errors"
.IX Header "Font Mgr errors"
.IP "kFMIterationCompleted" 4
.IX Item "kFMIterationCompleted"
.PD 0
.IP "kFMInvalidFontFamilyErr" 4
.IX Item "kFMInvalidFontFamilyErr"
.IP "kFMInvalidFontErr" 4
.IX Item "kFMInvalidFontErr"
.IP "kFMIterationScopeModifiedErr" 4
.IX Item "kFMIterationScopeModifiedErr"
.IP "kFMFontTableAccessErr" 4
.IX Item "kFMFontTableAccessErr"
.IP "nbpBuffOvr" 4
.IX Item "nbpBuffOvr"
.PD
.Vb 1
\& Buffer overflow in LookupName
.Ve
.IP "nbpNoConfirm" 4
.IX Item "nbpNoConfirm"
.PD 0
.IP "nbpConfDiff" 4
.IX Item "nbpConfDiff"
.PD
.Vb 1
\& Name confirmed at different socket
.Ve
.IP "nbpDuplicate" 4
.IX Item "nbpDuplicate"
.Vb 1
\& Duplicate name exists already
.Ve
.IP "nbpNotFound" 4
.IX Item "nbpNotFound"
.Vb 1
\& Name not found on remove
.Ve
.IP "aspBadVersNum" 4
.IX Item "aspBadVersNum"
.Vb 1
\& Server cannot support this ASP version
.Ve
.IP "aspBufTooSmall" 4
.IX Item "aspBufTooSmall"
.Vb 1
\& Buffer too small
.Ve
.IP "aspNoMoreSess" 4
.IX Item "aspNoMoreSess"
.Vb 1
\& No more sessions on server
.Ve
.IP "aspNoServers" 4
.IX Item "aspNoServers"
.Vb 1
\& No servers at that address
.Ve
.IP "aspParamErr" 4
.IX Item "aspParamErr"
.Vb 1
\& Parameter error
.Ve
.IP "aspServerBusy" 4
.IX Item "aspServerBusy"
.Vb 1
\& Server cannot open another session
.Ve
.IP "aspSessClosed" 4
.IX Item "aspSessClosed"
.Vb 1
\& Session closed
.Ve
.IP "aspSizeErr" 4
.IX Item "aspSizeErr"
.Vb 1
\& Command block too big
.Ve
.IP "aspTooMany" 4
.IX Item "aspTooMany"
.Vb 1
\& Too many clients (server error)
.Ve
.IP "reqFailed" 4
.IX Item "reqFailed"
.PD 0
.IP "tooManyReqs" 4
.IX Item "tooManyReqs"
.IP "tooManySkts" 4
.IX Item "tooManySkts"
.IP "badATPSkt" 4
.IX Item "badATPSkt"
.IP "badBuffNum" 4
.IX Item "badBuffNum"
.IP "noRelErr" 4
.IX Item "noRelErr"
.IP "cbNotFound" 4
.IX Item "cbNotFound"
.IP "noSendResp" 4
.IX Item "noSendResp"
.IP "noDataArea" 4
.IX Item "noDataArea"
.PD
.SH "driver control ioResults"
.IX Header "driver control ioResults"
.IP "errRefNum" 4
.IX Item "errRefNum"
.Vb 1
\& bad connection refNum
.Ve
.IP "errAborted" 4
.IX Item "errAborted"
.Vb 1
\& control call was aborted
.Ve
.IP "errState" 4
.IX Item "errState"
.Vb 1
\& bad connection state for this operation
.Ve
.IP "errOpening" 4
.IX Item "errOpening"
.Vb 1
\& open connection request failed
.Ve
.IP "errAttention" 4
.IX Item "errAttention"
.Vb 1
\& attention message too long
.Ve
.IP "errFwdReset" 4
.IX Item "errFwdReset"
.Vb 1
\& read terminated by forward reset
.Ve
.IP "errDSPQueueSize" 4
.IX Item "errDSPQueueSize"
.Vb 1
\& DSP Read/Write Queue Too small
.Ve
.SH "Apple event manager error messages"
.IX Header "Apple event manager error messages"
.IP "errAECoercionFail" 4
.IX Item "errAECoercionFail"
.Vb 1
\& bad parameter data or unable to coerce the data supplied
.Ve
.IP "errAEDescNotFound" 4
.IX Item "errAEDescNotFound"
.PD 0
.IP "errAECorruptData" 4
.IX Item "errAECorruptData"
.IP "errAEWrongDataType" 4
.IX Item "errAEWrongDataType"
.IP "errAENotAEDesc" 4
.IX Item "errAENotAEDesc"
.IP "errAEBadListItem" 4
.IX Item "errAEBadListItem"
.PD
.Vb 1
\& the specified list item does not exist
.Ve
.IP "errAENewerVersion" 4
.IX Item "errAENewerVersion"
.Vb 1
\& need newer version of the AppleEvent manager
.Ve
.IP "errAENotAppleEvent" 4
.IX Item "errAENotAppleEvent"
.Vb 1
\& the event is not in AppleEvent format
.Ve
.IP "errAEEventNotHandled" 4
.IX Item "errAEEventNotHandled"
.Vb 1
\& the AppleEvent was not handled by any handler
.Ve
.IP "errAEReplyNotValid" 4
.IX Item "errAEReplyNotValid"
.Vb 1
\& AEResetTimer was passed an invalid reply parameter
.Ve
.IP "errAEUnknownSendMode" 4
.IX Item "errAEUnknownSendMode"
.Vb 1
\& mode wasn\*(Aqt NoReply, WaitReply, or QueueReply or Interaction level is unknown
.Ve
.IP "errAEWaitCanceled" 4
.IX Item "errAEWaitCanceled"
.Vb 1
\& in AESend, the user cancelled out of wait loop for reply or receipt
.Ve
.IP "errAETimeout" 4
.IX Item "errAETimeout"
.Vb 1
\& the AppleEvent timed out
.Ve
.IP "errAENoUserInteraction" 4
.IX Item "errAENoUserInteraction"
.Vb 1
\& no user interaction is allowed
.Ve
.IP "errAENotASpecialFunction" 4
.IX Item "errAENotASpecialFunction"
.Vb 1
\& there is no special function for/with this keyword
.Ve
.IP "errAEParamMissed" 4
.IX Item "errAEParamMissed"
.Vb 1
\& a required parameter was not accessed
.Ve
.IP "errAEUnknownAddressType" 4
.IX Item "errAEUnknownAddressType"
.Vb 1
\& the target address type is not known
.Ve
.IP "errAEHandlerNotFound" 4
.IX Item "errAEHandlerNotFound"
.Vb 1
\& no handler in the dispatch tables fits the parameters to AEGetEventHandler or AEGetCoercionHandler
.Ve
.IP "errAEReplyNotArrived" 4
.IX Item "errAEReplyNotArrived"
.Vb 1
\& the contents of the reply you are accessing have not arrived yet
.Ve
.IP "errAEIllegalIndex" 4
.IX Item "errAEIllegalIndex"
.Vb 1
\& index is out of range in a put operation
.Ve
.IP "errAEImpossibleRange" 4
.IX Item "errAEImpossibleRange"
.Vb 1
\& A range like 3rd to 2nd, or 1st to all.
.Ve
.IP "errAEWrongNumberArgs" 4
.IX Item "errAEWrongNumberArgs"
.Vb 1
\& Logical op kAENOT used with other than 1 term
.Ve
.IP "errAEAccessorNotFound" 4
.IX Item "errAEAccessorNotFound"
.Vb 1
\& Accessor proc matching wantClass and containerType or wildcards not found
.Ve
.IP "errAENoSuchLogical" 4
.IX Item "errAENoSuchLogical"
.Vb 1
\& Something other than AND, OR, or NOT
.Ve
.IP "errAEBadTestKey" 4
.IX Item "errAEBadTestKey"
.Vb 1
\& Test is neither typeLogicalDescriptor nor typeCompDescriptor
.Ve
.IP "errAENotAnObjSpec" 4
.IX Item "errAENotAnObjSpec"
.Vb 1
\& Param to AEResolve not of type \*(Aqobj \*(Aq
.Ve
.IP "errAENoSuchObject" 4
.IX Item "errAENoSuchObject"
.Vb 1
\& e.g.,: specifier asked for the 3rd, but there are only 2. Basically, this indicates a run\-time resolution error.
.Ve
.IP "errAENegativeCount" 4
.IX Item "errAENegativeCount"
.Vb 1
\& CountProc returned negative value
.Ve
.IP "errAEEmptyListContainer" 4
.IX Item "errAEEmptyListContainer"
.Vb 1
\& Attempt to pass empty list as container to accessor
.Ve
.IP "errAEUnknownObjectType" 4
.IX Item "errAEUnknownObjectType"
.Vb 1
\& available only in version 1.0.1 or greater
.Ve
.IP "errAERecordingIsAlreadyOn" 4
.IX Item "errAERecordingIsAlreadyOn"
.Vb 1
\& available only in version 1.0.1 or greater
.Ve
.IP "errAEReceiveTerminate" 4
.IX Item "errAEReceiveTerminate"
.Vb 1
\& break out of all levels of AEReceive to the topmost (1.1 or greater)
.Ve
.IP "errAEReceiveEscapeCurrent" 4
.IX Item "errAEReceiveEscapeCurrent"
.Vb 1
\& break out of only lowest level of AEReceive (1.1 or greater)
.Ve
.IP "errAEEventFiltered" 4
.IX Item "errAEEventFiltered"
.Vb 1
\& event has been filtered, and should not be propogated (1.1 or greater)
.Ve
.IP "errAEDuplicateHandler" 4
.IX Item "errAEDuplicateHandler"
.Vb 1
\& attempt to install handler in table for identical class and id (1.1 or greater)
.Ve
.IP "errAEStreamBadNesting" 4
.IX Item "errAEStreamBadNesting"
.Vb 1
\& nesting violation while streaming
.Ve
.IP "errAEStreamAlreadyConverted" 4
.IX Item "errAEStreamAlreadyConverted"
.Vb 1
\& attempt to convert a stream that has already been converted
.Ve
.IP "errAEDescIsNull" 4
.IX Item "errAEDescIsNull"
.Vb 1
\& attempting to perform an invalid operation on a null descriptor
.Ve
.IP "errAEBuildSyntaxError" 4
.IX Item "errAEBuildSyntaxError"
.Vb 1
\& AEBuildDesc and friends detected a syntax error
.Ve
.IP "errOSASystemError" 4
.IX Item "errOSASystemError"
.PD 0
.IP "errOSAInvalidID" 4
.IX Item "errOSAInvalidID"
.IP "errOSABadStorageType" 4
.IX Item "errOSABadStorageType"
.IP "errOSAScriptError" 4
.IX Item "errOSAScriptError"
.IP "errOSABadSelector" 4
.IX Item "errOSABadSelector"
.IP "errOSASourceNotAvailable" 4
.IX Item "errOSASourceNotAvailable"
.IP "errOSANoSuchDialect" 4
.IX Item "errOSANoSuchDialect"
.IP "errOSADataFormatObsolete" 4
.IX Item "errOSADataFormatObsolete"
.IP "errOSADataFormatTooNew" 4
.IX Item "errOSADataFormatTooNew"
.IP "errOSACorruptData" 4
.IX Item "errOSACorruptData"
.IP "errOSARecordingIsAlreadyOn" 4
.IX Item "errOSARecordingIsAlreadyOn"
.IP "errOSAComponentMismatch" 4
.IX Item "errOSAComponentMismatch"
.PD
.Vb 1
\& Parameters are from 2 different components
.Ve
.SH "AppleEvent error definitions"
.IX Header "AppleEvent error definitions"
.IP "errOffsetInvalid" 4
.IX Item "errOffsetInvalid"
.PD 0
.IP "errOffsetIsOutsideOfView" 4
.IX Item "errOffsetIsOutsideOfView"
.IP "errTopOfDocument" 4
.IX Item "errTopOfDocument"
.IP "errTopOfBody" 4
.IX Item "errTopOfBody"
.IP "errEndOfDocument" 4
.IX Item "errEndOfDocument"
.PD
.SH "Drag Manager error codes"
.IX Header "Drag Manager error codes"
.IP "badDragRefErr" 4
.IX Item "badDragRefErr"
.Vb 1
\& unknown drag reference
.Ve
.IP "badDragItemErr" 4
.IX Item "badDragItemErr"
.Vb 1
\& unknown drag item reference
.Ve
.IP "badDragFlavorErr" 4
.IX Item "badDragFlavorErr"
.Vb 1
\& unknown flavor type
.Ve
.IP "duplicateFlavorErr" 4
.IX Item "duplicateFlavorErr"
.Vb 1
\& flavor type already exists
.Ve
.IP "cantGetFlavorErr" 4
.IX Item "cantGetFlavorErr"
.Vb 1
\& error while trying to get flavor data
.Ve
.IP "duplicateHandlerErr" 4
.IX Item "duplicateHandlerErr"
.Vb 1
\& handler already exists
.Ve
.IP "handlerNotFoundErr" 4
.IX Item "handlerNotFoundErr"
.Vb 1
\& handler not found
.Ve
.IP "dragNotAcceptedErr" 4
.IX Item "dragNotAcceptedErr"
.Vb 1
\& drag was not accepted by receiver
.Ve
.IP "unsupportedForPlatformErr" 4
.IX Item "unsupportedForPlatformErr"
.Vb 1
\& call is for PowerPC only
.Ve
.IP "noSuitableDisplaysErr" 4
.IX Item "noSuitableDisplaysErr"
.Vb 1
\& no displays support translucency
.Ve
.IP "badImageRgnErr" 4
.IX Item "badImageRgnErr"
.Vb 1
\& bad translucent image region
.Ve
.IP "badImageErr" 4
.IX Item "badImageErr"
.Vb 1
\& bad translucent image PixMap
.Ve
.SH "QuickTime errors"
.IX Header "QuickTime errors"
.IP "couldNotResolveDataRef" 4
.IX Item "couldNotResolveDataRef"
.PD 0
.IP "badImageDescription" 4
.IX Item "badImageDescription"
.IP "badPublicMovieAtom" 4
.IX Item "badPublicMovieAtom"
.IP "cantFindHandler" 4
.IX Item "cantFindHandler"
.IP "cantOpenHandler" 4
.IX Item "cantOpenHandler"
.IP "badComponentType" 4
.IX Item "badComponentType"
.IP "noMediaHandler" 4
.IX Item "noMediaHandler"
.IP "noDataHandler" 4
.IX Item "noDataHandler"
.IP "invalidMedia" 4
.IX Item "invalidMedia"
.IP "invalidTrack" 4
.IX Item "invalidTrack"
.IP "invalidMovie" 4
.IX Item "invalidMovie"
.IP "invalidSampleTable" 4
.IX Item "invalidSampleTable"
.IP "invalidDataRef" 4
.IX Item "invalidDataRef"
.IP "invalidHandler" 4
.IX Item "invalidHandler"
.IP "invalidDuration" 4
.IX Item "invalidDuration"
.IP "invalidTime" 4
.IX Item "invalidTime"
.IP "cantPutPublicMovieAtom" 4
.IX Item "cantPutPublicMovieAtom"
.IP "badEditList" 4
.IX Item "badEditList"
.IP "mediaTypesDontMatch" 4
.IX Item "mediaTypesDontMatch"
.IP "progressProcAborted" 4
.IX Item "progressProcAborted"
.IP "movieToolboxUninitialized" 4
.IX Item "movieToolboxUninitialized"
.IP "noRecordOfApp" 4
.IX Item "noRecordOfApp"
.PD
.Vb 1
\& replica
.Ve
.IP "wfFileNotFound" 4
.IX Item "wfFileNotFound"
.PD 0
.IP "cantCreateSingleForkFile" 4
.IX Item "cantCreateSingleForkFile"
.PD
.Vb 1
\& happens when file already exists
.Ve
.IP "invalidEditState" 4
.IX Item "invalidEditState"
.PD 0
.IP "nonMatchingEditState" 4
.IX Item "nonMatchingEditState"
.IP "staleEditState" 4
.IX Item "staleEditState"
.IP "userDataItemNotFound" 4
.IX Item "userDataItemNotFound"
.IP "maxSizeToGrowTooSmall" 4
.IX Item "maxSizeToGrowTooSmall"
.IP "badTrackIndex" 4
.IX Item "badTrackIndex"
.IP "trackIDNotFound" 4
.IX Item "trackIDNotFound"
.IP "trackNotInMovie" 4
.IX Item "trackNotInMovie"
.IP "timeNotInTrack" 4
.IX Item "timeNotInTrack"
.IP "timeNotInMedia" 4
.IX Item "timeNotInMedia"
.IP "badEditIndex" 4
.IX Item "badEditIndex"
.IP "internalQuickTimeError" 4
.IX Item "internalQuickTimeError"
.IP "cantEnableTrack" 4
.IX Item "cantEnableTrack"
.IP "invalidRect" 4
.IX Item "invalidRect"
.IP "invalidSampleNum" 4
.IX Item "invalidSampleNum"
.IP "invalidChunkNum" 4
.IX Item "invalidChunkNum"
.IP "invalidSampleDescIndex" 4
.IX Item "invalidSampleDescIndex"
.IP "invalidChunkCache" 4
.IX Item "invalidChunkCache"
.IP "invalidSampleDescription" 4
.IX Item "invalidSampleDescription"
.IP "dataNotOpenForRead" 4
.IX Item "dataNotOpenForRead"
.IP "dataNotOpenForWrite" 4
.IX Item "dataNotOpenForWrite"
.IP "dataAlreadyOpenForWrite" 4
.IX Item "dataAlreadyOpenForWrite"
.IP "dataAlreadyClosed" 4
.IX Item "dataAlreadyClosed"
.IP "endOfDataReached" 4
.IX Item "endOfDataReached"
.IP "dataNoDataRef" 4
.IX Item "dataNoDataRef"
.IP "noMovieFound" 4
.IX Item "noMovieFound"
.IP "invalidDataRefContainer" 4
.IX Item "invalidDataRefContainer"
.IP "badDataRefIndex" 4
.IX Item "badDataRefIndex"
.IP "noDefaultDataRef" 4
.IX Item "noDefaultDataRef"
.IP "couldNotUseAnExistingSample" 4
.IX Item "couldNotUseAnExistingSample"
.IP "featureUnsupported" 4
.IX Item "featureUnsupported"
.IP "noVideoTrackInMovieErr" 4
.IX Item "noVideoTrackInMovieErr"
.PD
.Vb 1
\& QT for Windows error
.Ve
.IP "noSoundTrackInMovieErr" 4
.IX Item "noSoundTrackInMovieErr"
.Vb 1
\& QT for Windows error
.Ve
.IP "soundSupportNotAvailableErr" 4
.IX Item "soundSupportNotAvailableErr"
.Vb 1
\& QT for Windows error
.Ve
.IP "unsupportedAuxiliaryImportData" 4
.IX Item "unsupportedAuxiliaryImportData"
.PD 0
.IP "auxiliaryExportDataUnavailable" 4
.IX Item "auxiliaryExportDataUnavailable"
.IP "samplesAlreadyInMediaErr" 4
.IX Item "samplesAlreadyInMediaErr"
.IP "noSourceTreeFoundErr" 4
.IX Item "noSourceTreeFoundErr"
.IP "sourceNotFoundErr" 4
.IX Item "sourceNotFoundErr"
.IP "movieTextNotFoundErr" 4
.IX Item "movieTextNotFoundErr"
.IP "missingRequiredParameterErr" 4
.IX Item "missingRequiredParameterErr"
.IP "invalidSpriteWorldPropertyErr" 4
.IX Item "invalidSpriteWorldPropertyErr"
.IP "invalidSpritePropertyErr" 4
.IX Item "invalidSpritePropertyErr"
.IP "gWorldsNotSameDepthAndSizeErr" 4
.IX Item "gWorldsNotSameDepthAndSizeErr"
.IP "invalidSpriteIndexErr" 4
.IX Item "invalidSpriteIndexErr"
.IP "invalidImageIndexErr" 4
.IX Item "invalidImageIndexErr"
.IP "internalComponentErr" 4
.IX Item "internalComponentErr"
.IP "notImplementedMusicOSErr" 4
.IX Item "notImplementedMusicOSErr"
.IP "cantSendToSynthesizerOSErr" 4
.IX Item "cantSendToSynthesizerOSErr"
.IP "cantReceiveFromSynthesizerOSErr" 4
.IX Item "cantReceiveFromSynthesizerOSErr"
.IP "illegalVoiceAllocationOSErr" 4
.IX Item "illegalVoiceAllocationOSErr"
.IP "illegalPartOSErr" 4
.IX Item "illegalPartOSErr"
.IP "illegalChannelOSErr" 4
.IX Item "illegalChannelOSErr"
.IP "illegalKnobOSErr" 4
.IX Item "illegalKnobOSErr"
.IP "illegalKnobValueOSErr" 4
.IX Item "illegalKnobValueOSErr"
.IP "illegalInstrumentOSErr" 4
.IX Item "illegalInstrumentOSErr"
.IP "illegalControllerOSErr" 4
.IX Item "illegalControllerOSErr"
.IP "midiManagerAbsentOSErr" 4
.IX Item "midiManagerAbsentOSErr"
.IP "synthesizerNotRespondingOSErr" 4
.IX Item "synthesizerNotRespondingOSErr"
.IP "synthesizerOSErr" 4
.IX Item "synthesizerOSErr"
.IP "illegalNoteChannelOSErr" 4
.IX Item "illegalNoteChannelOSErr"
.IP "noteChannelNotAllocatedOSErr" 4
.IX Item "noteChannelNotAllocatedOSErr"
.IP "tunePlayerFullOSErr" 4
.IX Item "tunePlayerFullOSErr"
.IP "tuneParseOSErr" 4
.IX Item "tuneParseOSErr"
.IP "noExportProcAvailableErr" 4
.IX Item "noExportProcAvailableErr"
.IP "componentDllLoadErr" 4
.IX Item "componentDllLoadErr"
.PD
.Vb 1
\& Windows specific errors (when component is loading)
.Ve
.IP "componentDllEntryNotFoundErr" 4
.IX Item "componentDllEntryNotFoundErr"
.Vb 1
\& Windows specific errors (when component is loading)
.Ve
.IP "qtmlDllLoadErr" 4
.IX Item "qtmlDllLoadErr"
.Vb 1
\& Windows specific errors (when qtml is loading)
.Ve
.IP "qtmlDllEntryNotFoundErr" 4
.IX Item "qtmlDllEntryNotFoundErr"
.Vb 1
\& Windows specific errors (when qtml is loading)
.Ve
.IP "qtmlUninitialized" 4
.IX Item "qtmlUninitialized"
.PD 0
.IP "unsupportedOSErr" 4
.IX Item "unsupportedOSErr"
.IP "cannotFindAtomErr" 4
.IX Item "cannotFindAtomErr"
.IP "notLeafAtomErr" 4
.IX Item "notLeafAtomErr"
.IP "atomsNotOfSameTypeErr" 4
.IX Item "atomsNotOfSameTypeErr"
.IP "atomIndexInvalidErr" 4
.IX Item "atomIndexInvalidErr"
.IP "duplicateAtomTypeAndIDErr" 4
.IX Item "duplicateAtomTypeAndIDErr"
.IP "invalidAtomErr" 4
.IX Item "invalidAtomErr"
.IP "invalidAtomContainerErr" 4
.IX Item "invalidAtomContainerErr"
.IP "invalidAtomTypeErr" 4
.IX Item "invalidAtomTypeErr"
.IP "cannotBeLeafAtomErr" 4
.IX Item "cannotBeLeafAtomErr"
.IP "pathTooLongErr" 4
.IX Item "pathTooLongErr"
.IP "emptyPathErr" 4
.IX Item "emptyPathErr"
.IP "noPathMappingErr" 4
.IX Item "noPathMappingErr"
.IP "pathNotVerifiedErr" 4
.IX Item "pathNotVerifiedErr"
.IP "unknownFormatErr" 4
.IX Item "unknownFormatErr"
.IP "wackBadFileErr" 4
.IX Item "wackBadFileErr"
.IP "wackForkNotFoundErr" 4
.IX Item "wackForkNotFoundErr"
.IP "wackBadMetaDataErr" 4
.IX Item "wackBadMetaDataErr"
.IP "qfcbNotFoundErr" 4
.IX Item "qfcbNotFoundErr"
.IP "qfcbNotCreatedErr" 4
.IX Item "qfcbNotCreatedErr"
.IP "AAPNotCreatedErr" 4
.IX Item "AAPNotCreatedErr"
.IP "AAPNotFoundErr" 4
.IX Item "AAPNotFoundErr"
.IP "ASDBadHeaderErr" 4
.IX Item "ASDBadHeaderErr"
.IP "ASDBadForkErr" 4
.IX Item "ASDBadForkErr"
.IP "ASDEntryNotFoundErr" 4
.IX Item "ASDEntryNotFoundErr"
.IP "fileOffsetTooBigErr" 4
.IX Item "fileOffsetTooBigErr"
.IP "notAllowedToSaveMovieErr" 4
.IX Item "notAllowedToSaveMovieErr"
.IP "qtNetworkAlreadyAllocatedErr" 4
.IX Item "qtNetworkAlreadyAllocatedErr"
.IP "urlDataHHTTPProtocolErr" 4
.IX Item "urlDataHHTTPProtocolErr"
.IP "urlDataHHTTPNoNetDriverErr" 4
.IX Item "urlDataHHTTPNoNetDriverErr"
.IP "urlDataHHTTPURLErr" 4
.IX Item "urlDataHHTTPURLErr"
.IP "urlDataHHTTPRedirectErr" 4
.IX Item "urlDataHHTTPRedirectErr"
.IP "urlDataHFTPProtocolErr" 4
.IX Item "urlDataHFTPProtocolErr"
.IP "urlDataHFTPShutdownErr" 4
.IX Item "urlDataHFTPShutdownErr"
.IP "urlDataHFTPBadUserErr" 4
.IX Item "urlDataHFTPBadUserErr"
.IP "urlDataHFTPBadPasswordErr" 4
.IX Item "urlDataHFTPBadPasswordErr"
.IP "urlDataHFTPServerErr" 4
.IX Item "urlDataHFTPServerErr"
.IP "urlDataHFTPDataConnectionErr" 4
.IX Item "urlDataHFTPDataConnectionErr"
.IP "urlDataHFTPNoDirectoryErr" 4
.IX Item "urlDataHFTPNoDirectoryErr"
.IP "urlDataHFTPQuotaErr" 4
.IX Item "urlDataHFTPQuotaErr"
.IP "urlDataHFTPPermissionsErr" 4
.IX Item "urlDataHFTPPermissionsErr"
.IP "urlDataHFTPFilenameErr" 4
.IX Item "urlDataHFTPFilenameErr"
.IP "urlDataHFTPNoNetDriverErr" 4
.IX Item "urlDataHFTPNoNetDriverErr"
.IP "urlDataHFTPBadNameListErr" 4
.IX Item "urlDataHFTPBadNameListErr"
.IP "urlDataHFTPNeedPasswordErr" 4
.IX Item "urlDataHFTPNeedPasswordErr"
.IP "urlDataHFTPNoPasswordErr" 4
.IX Item "urlDataHFTPNoPasswordErr"
.IP "urlDataHFTPServerDisconnectedErr" 4
.IX Item "urlDataHFTPServerDisconnectedErr"
.IP "urlDataHFTPURLErr" 4
.IX Item "urlDataHFTPURLErr"
.IP "notEnoughDataErr" 4
.IX Item "notEnoughDataErr"
.IP "qtActionNotHandledErr" 4
.IX Item "qtActionNotHandledErr"
.IP "qtXMLParseErr" 4
.IX Item "qtXMLParseErr"
.IP "digiUnimpErr" 4
.IX Item "digiUnimpErr"
.PD
.Vb 1
\& feature unimplemented
.Ve
.IP "qtParamErr" 4
.IX Item "qtParamErr"
.Vb 1
\& bad input parameter (out of range, etc)
.Ve
.IP "matrixErr" 4
.IX Item "matrixErr"
.Vb 1
\& bad matrix, digitizer did nothing
.Ve
.IP "notExactMatrixErr" 4
.IX Item "notExactMatrixErr"
.Vb 1
\& warning of bad matrix, digitizer did its best
.Ve
.IP "noMoreKeyColorsErr" 4
.IX Item "noMoreKeyColorsErr"
.Vb 1
\& all key indexes in use
.Ve
.IP "notExactSizeErr" 4
.IX Item "notExactSizeErr"
.Vb 1
\& Can\*(Aqt do exact size requested
.Ve
.IP "badDepthErr" 4
.IX Item "badDepthErr"
.Vb 1
\& Can\*(Aqt digitize into this depth
.Ve
.IP "noDMAErr" 4
.IX Item "noDMAErr"
.Vb 1
\& Can\*(Aqt do DMA digitizing (i.e. can\*(Aqt go to requested dest
.Ve
.SH "Kernel Error Codes"
.IX Header "Kernel Error Codes"
.IP "kernelIncompleteErr" 4
.IX Item "kernelIncompleteErr"
.PD 0
.IP "kernelCanceledErr" 4
.IX Item "kernelCanceledErr"
.IP "kernelOptionsErr" 4
.IX Item "kernelOptionsErr"
.IP "kernelPrivilegeErr" 4
.IX Item "kernelPrivilegeErr"
.IP "kernelUnsupportedErr" 4
.IX Item "kernelUnsupportedErr"
.IP "kernelObjectExistsErr" 4
.IX Item "kernelObjectExistsErr"
.IP "kernelWritePermissionErr" 4
.IX Item "kernelWritePermissionErr"
.IP "kernelReadPermissionErr" 4
.IX Item "kernelReadPermissionErr"
.IP "kernelExecutePermissionErr" 4
.IX Item "kernelExecutePermissionErr"
.IP "kernelDeletePermissionErr" 4
.IX Item "kernelDeletePermissionErr"
.IP "kernelExecutionLevelErr" 4
.IX Item "kernelExecutionLevelErr"
.IP "kernelAttributeErr" 4
.IX Item "kernelAttributeErr"
.IP "kernelAsyncSendLimitErr" 4
.IX Item "kernelAsyncSendLimitErr"
.IP "kernelAsyncReceiveLimitErr" 4
.IX Item "kernelAsyncReceiveLimitErr"
.IP "kernelTimeoutErr" 4
.IX Item "kernelTimeoutErr"
.IP "kernelInUseErr" 4
.IX Item "kernelInUseErr"
.IP "kernelTerminatedErr" 4
.IX Item "kernelTerminatedErr"
.IP "kernelExceptionErr" 4
.IX Item "kernelExceptionErr"
.IP "kernelIDErr" 4
.IX Item "kernelIDErr"
.IP "kernelAlreadyFreeErr" 4
.IX Item "kernelAlreadyFreeErr"
.IP "kernelReturnValueErr" 4
.IX Item "kernelReturnValueErr"
.PD
.SH "Text Services Mgr error codes"
.IX Header "Text Services Mgr error codes"
.IP "tsmComponentNoErr" 4
.IX Item "tsmComponentNoErr"
.Vb 1
\& component result = no error
.Ve
.IP "tsmUnsupScriptLanguageErr" 4
.IX Item "tsmUnsupScriptLanguageErr"
.PD 0
.IP "tsmInputMethodNotFoundErr" 4
.IX Item "tsmInputMethodNotFoundErr"
.IP "tsmNotAnAppErr" 4
.IX Item "tsmNotAnAppErr"
.PD
.Vb 1
\& not an application error
.Ve
.IP "tsmAlreadyRegisteredErr" 4
.IX Item "tsmAlreadyRegisteredErr"
.Vb 1
\& want to register again error
.Ve
.IP "tsmNeverRegisteredErr" 4
.IX Item "tsmNeverRegisteredErr"
.Vb 1
\& app never registered error (not TSM aware)
.Ve
.IP "tsmInvalidDocIDErr" 4
.IX Item "tsmInvalidDocIDErr"
.Vb 1
\& invalid TSM documentation id
.Ve
.IP "tsmTSMDocBusyErr" 4
.IX Item "tsmTSMDocBusyErr"
.Vb 1
\& document is still active
.Ve
.IP "tsmDocNotActiveErr" 4
.IX Item "tsmDocNotActiveErr"
.Vb 1
\& document is NOT active
.Ve
.IP "tsmNoOpenTSErr" 4
.IX Item "tsmNoOpenTSErr"
.Vb 1
\& no open text service
.Ve
.IP "tsmCantOpenComponentErr" 4
.IX Item "tsmCantOpenComponentErr"
.Vb 1
\& can\*(Aqt open the component
.Ve
.IP "tsmTextServiceNotFoundErr" 4
.IX Item "tsmTextServiceNotFoundErr"
.Vb 1
\& no text service found
.Ve
.IP "tsmDocumentOpenErr" 4
.IX Item "tsmDocumentOpenErr"
.Vb 1
\& there are open documents
.Ve
.IP "tsmUseInputWindowErr" 4
.IX Item "tsmUseInputWindowErr"
.Vb 1
\& not TSM aware because we are using input window
.Ve
.IP "tsmTSHasNoMenuErr" 4
.IX Item "tsmTSHasNoMenuErr"
.Vb 1
\& the text service has no menu
.Ve
.IP "tsmTSNotOpenErr" 4
.IX Item "tsmTSNotOpenErr"
.Vb 1
\& text service is not open
.Ve
.IP "tsmComponentAlreadyOpenErr" 4
.IX Item "tsmComponentAlreadyOpenErr"
.Vb 1
\& text service already opened for the document
.Ve
.IP "tsmInputMethodIsOldErr" 4
.IX Item "tsmInputMethodIsOldErr"
.Vb 1
\& returned by GetDefaultInputMethod
.Ve
.IP "tsmScriptHasNoIMErr" 4
.IX Item "tsmScriptHasNoIMErr"
.Vb 1
\& script has no imput method or is using old IM
.Ve
.IP "tsmUnsupportedTypeErr" 4
.IX Item "tsmUnsupportedTypeErr"
.Vb 1
\& unSupported interface type error
.Ve
.IP "tsmUnknownErr" 4
.IX Item "tsmUnknownErr"
.Vb 1
\& any other errors
.Ve
.IP "tsmInvalidContext" 4
.IX Item "tsmInvalidContext"
.Vb 1
\& Invalid TSMContext specified in call
.Ve
.IP "tsmNoHandler" 4
.IX Item "tsmNoHandler"
.Vb 1
\& No Callback Handler exists for callback
.Ve
.IP "tsmNoMoreTokens" 4
.IX Item "tsmNoMoreTokens"
.Vb 1
\& No more tokens are available for the source text
.Ve
.IP "tsmNoStem" 4
.IX Item "tsmNoStem"
.Vb 1
\& No stem exists for the token
.Ve
.SH "Mixed Mode error codes"
.IX Header "Mixed Mode error codes"
.SH "NameRegistry error codes"
.IX Header "NameRegistry error codes"
.IP "nrLockedErr" 4
.IX Item "nrLockedErr"
.PD 0
.IP "nrNotEnoughMemoryErr" 4
.IX Item "nrNotEnoughMemoryErr"
.IP "nrInvalidNodeErr" 4
.IX Item "nrInvalidNodeErr"
.IP "nrNotFoundErr" 4
.IX Item "nrNotFoundErr"
.IP "nrNotCreatedErr" 4
.IX Item "nrNotCreatedErr"
.IP "nrNameErr" 4
.IX Item "nrNameErr"
.IP "nrNotSlotDeviceErr" 4
.IX Item "nrNotSlotDeviceErr"
.IP "nrDataTruncatedErr" 4
.IX Item "nrDataTruncatedErr"
.IP "nrPowerErr" 4
.IX Item "nrPowerErr"
.IP "nrPowerSwitchAbortErr" 4
.IX Item "nrPowerSwitchAbortErr"
.IP "nrTypeMismatchErr" 4
.IX Item "nrTypeMismatchErr"
.IP "nrNotModifiedErr" 4
.IX Item "nrNotModifiedErr"
.IP "nrOverrunErr" 4
.IX Item "nrOverrunErr"
.IP "nrResultCodeBase" 4
.IX Item "nrResultCodeBase"
.IP "nrPathNotFound" 4
.IX Item "nrPathNotFound"
.PD
.Vb 1
\& a path component lookup failed
.Ve
.IP "nrPathBufferTooSmall" 4
.IX Item "nrPathBufferTooSmall"
.Vb 1
\& buffer for path is too small
.Ve
.IP "nrInvalidEntryIterationOp" 4
.IX Item "nrInvalidEntryIterationOp"
.Vb 1
\& invalid entry iteration operation
.Ve
.IP "nrPropertyAlreadyExists" 4
.IX Item "nrPropertyAlreadyExists"
.Vb 1
\& property already exists
.Ve
.IP "nrIterationDone" 4
.IX Item "nrIterationDone"
.Vb 1
\& iteration operation is done
.Ve
.IP "nrExitedIteratorScope" 4
.IX Item "nrExitedIteratorScope"
.Vb 1
\& outer scope of iterator was exited
.Ve
.IP "nrTransactionAborted" 4
.IX Item "nrTransactionAborted"
.Vb 1
\& transaction was aborted
.Ve
.SH "Icon Services error codes"
.IX Header "Icon Services error codes"
.IP "invalidIconRefErr" 4
.IX Item "invalidIconRefErr"
.Vb 1
\& The icon ref is not valid
.Ve
.IP "noSuchIconErr" 4
.IX Item "noSuchIconErr"
.Vb 1
\& The requested icon could not be found
.Ve
.SH "Dynamic AppleScript errors"
.IX Header "Dynamic AppleScript errors"
.IP "errOSACantCoerce" 4
.IX Item "errOSACantCoerce"
.Vb 1
\& Signaled when a value can\*(Aqt be coerced to the desired type.
.Ve
.IP "errOSACantAccess" 4
.IX Item "errOSACantAccess"
.Vb 1
\& Signaled when an object is not found in a container
.Ve
.IP "errOSACantAssign" 4
.IX Item "errOSACantAssign"
.Vb 1
\& Signaled when an object cannot be set in a container.
.Ve
.IP "errOSAGeneralError" 4
.IX Item "errOSAGeneralError"
.Vb 1
\& Signaled by user scripts or applications when no actual error code is to be returned.
.Ve
.IP "errOSADivideByZero" 4
.IX Item "errOSADivideByZero"
.Vb 1
\& Signaled when there is an attempt to divide by zero
.Ve
.IP "errOSANumericOverflow" 4
.IX Item "errOSANumericOverflow"
.Vb 1
\& Signaled when integer or real value is too large to be represented
.Ve
.IP "errOSACantLaunch" 4
.IX Item "errOSACantLaunch"
.Vb 1
\& Signaled when application can\*(Aqt be launched or when it is remote and program linking is not enabled
.Ve
.IP "errOSAAppNotHighLevelEventAware" 4
.IX Item "errOSAAppNotHighLevelEventAware"
.Vb 1
\& Signaled when an application can\*(Aqt respond to AppleEvents
.Ve
.IP "errOSACorruptTerminology" 4
.IX Item "errOSACorruptTerminology"
.Vb 1
\& Signaled when an application\*(Aqs terminology resource is not readable
.Ve
.IP "errOSAStackOverflow" 4
.IX Item "errOSAStackOverflow"
.Vb 1
\& Signaled when the runtime stack overflows
.Ve
.IP "errOSAInternalTableOverflow" 4
.IX Item "errOSAInternalTableOverflow"
.Vb 1
\& Signaled when a runtime internal data structure overflows
.Ve
.IP "errOSADataBlockTooLarge" 4
.IX Item "errOSADataBlockTooLarge"
.Vb 1
\& Signaled when an intrinsic limitation is exceeded for the size of a value or data structure.
.Ve
.IP "errOSACantGetTerminology" 4
.IX Item "errOSACantGetTerminology"
.SH "Static AppleScript errors"
.IX Header "Static AppleScript errors"
.PD 0
.IP "errOSATypeError" 4
.IX Item "errOSATypeError"
.IP "OSAMessageNotUnderstood" 4
.IX Item "OSAMessageNotUnderstood"
.PD
.Vb 1
\& Signaled when a message was sent to an object that didn\*(Aqt handle it
.Ve
.IP "OSAUndefinedHandler" 4
.IX Item "OSAUndefinedHandler"
.Vb 1
\& Signaled when a function to be returned doesn\*(Aqt exist.
.Ve
.IP "OSAIllegalAccess" 4
.IX Item "OSAIllegalAccess"
.Vb 1
\& Signaled when a container can never have the requested object
.Ve
.IP "OSAIllegalIndex" 4
.IX Item "OSAIllegalIndex"
.Vb 1
\& Signaled when index was out of range. Specialization of errOSACantAccess
.Ve
.IP "OSAIllegalRange" 4
.IX Item "OSAIllegalRange"
.Vb 1
\& Signaled when a range is screwy. Specialization of errOSACantAccess
.Ve
.IP "OSAIllegalAssign" 4
.IX Item "OSAIllegalAssign"
.Vb 1
\& Signaled when an object can never be set in a container
.Ve
.IP "OSASyntaxError" 4
.IX Item "OSASyntaxError"
.Vb 1
\& Signaled when a syntax error occurs. (e.g. "Syntax error" or "<this> can\*(Aqt go after <that>")
.Ve
.IP "OSASyntaxTypeError" 4
.IX Item "OSASyntaxTypeError"
.Vb 1
\& Signaled when another form of syntax was expected. (e.g. "expected a <type> but found <this>")
.Ve
.IP "OSATokenTooLong" 4
.IX Item "OSATokenTooLong"
.Vb 1
\& Signaled when a name or number is too long to be parsed
.Ve
.IP "OSAMissingParameter" 4
.IX Item "OSAMissingParameter"
.Vb 1
\& Signaled when a parameter is missing for a function invocation
.Ve
.IP "OSAParameterMismatch" 4
.IX Item "OSAParameterMismatch"
.Vb 1
\& Signaled when function is called with the wrong number of parameters, or a parameter pattern cannot be matched
.Ve
.IP "OSADuplicateParameter" 4
.IX Item "OSADuplicateParameter"
.Vb 1
\& Signaled when a formal parameter, local variable, or instance variable is specified more than once
.Ve
.IP "OSADuplicateProperty" 4
.IX Item "OSADuplicateProperty"
.Vb 1
\& Signaled when a formal parameter, local variable, or instance variable is specified more than once.
.Ve
.IP "OSADuplicateHandler" 4
.IX Item "OSADuplicateHandler"
.Vb 1
\& Signaled when more than one handler is defined with the same name in a scope where the language doesn\*(Aqt allow it
.Ve
.IP "OSAUndefinedVariable" 4
.IX Item "OSAUndefinedVariable"
.Vb 1
\& Signaled when a variable is accessed that has no value
.Ve
.IP "OSAInconsistentDeclarations" 4
.IX Item "OSAInconsistentDeclarations"
.Vb 1
\& Signaled when a variable is declared inconsistently in the same scope, such as both local and global
.Ve
.IP "errASCantConsiderAndIgnore" 4
.IX Item "errASCantConsiderAndIgnore"
.PD 0
.IP "errASCantCompareMoreThan32k" 4
.IX Item "errASCantCompareMoreThan32k"
.PD
.Vb 1
\& Parser/Compiler errors:
.Ve
.IP "errASTerminologyNestingTooDeep" 4
.IX Item "errASTerminologyNestingTooDeep"
.PD 0
.IP "errASIllegalFormalParameter" 4
.IX Item "errASIllegalFormalParameter"
.IP "errASParameterNotForEvent" 4
.IX Item "errASParameterNotForEvent"
.IP "errASNoResultReturned" 4
.IX Item "errASNoResultReturned"
.PD
.Vb 1
\& The range \-2780 thru \-2799 is reserved for dialect specific error codes. (Error codes from different dialects may overlap.)
.Ve
.SH "The preferred spelling for Code Fragment Manager errors:"
.IX Header "The preferred spelling for Code Fragment Manager errors:"
.IP "cfragFirstErrCode" 4
.IX Item "cfragFirstErrCode"
.Vb 1
\& The first value in the range of CFM errors.
.Ve
.IP "cfragContextIDErr" 4
.IX Item "cfragContextIDErr"
.Vb 1
\& The context ID was not valid.
.Ve
.IP "cfragConnectionIDErr" 4
.IX Item "cfragConnectionIDErr"
.Vb 1
\& The connection ID was not valid.
.Ve
.IP "cfragNoSymbolErr" 4
.IX Item "cfragNoSymbolErr"
.Vb 1
\& The specified symbol was not found.
.Ve
.IP "cfragNoSectionErr" 4
.IX Item "cfragNoSectionErr"
.Vb 1
\& The specified section was not found.
.Ve
.IP "cfragNoLibraryErr" 4
.IX Item "cfragNoLibraryErr"
.Vb 1
\& The named library was not found.
.Ve
.IP "cfragDupRegistrationErr" 4
.IX Item "cfragDupRegistrationErr"
.Vb 1
\& The registration name was already in use.
.Ve
.IP "cfragFragmentFormatErr" 4
.IX Item "cfragFragmentFormatErr"
.Vb 1
\& A fragment\*(Aqs container format is unknown.
.Ve
.IP "cfragUnresolvedErr" 4
.IX Item "cfragUnresolvedErr"
.Vb 1
\& A fragment had "hard" unresolved imports.
.Ve
.IP "cfragNoPositionErr" 4
.IX Item "cfragNoPositionErr"
.Vb 1
\& The registration insertion point was not found.
.Ve
.IP "cfragNoPrivateMemErr" 4
.IX Item "cfragNoPrivateMemErr"
.Vb 1
\& Out of memory for internal bookkeeping.
.Ve
.IP "cfragNoClientMemErr" 4
.IX Item "cfragNoClientMemErr"
.Vb 1
\& Out of memory for fragment mapping or section instances.
.Ve
.IP "cfragNoIDsErr" 4
.IX Item "cfragNoIDsErr"
.Vb 1
\& No more CFM IDs for contexts, connections, etc.
.Ve
.IP "cfragInitOrderErr" 4
.IX Item "cfragInitOrderErr"
.PD 0
.IP "cfragImportTooOldErr" 4
.IX Item "cfragImportTooOldErr"
.PD
.Vb 1
\& An import library was too old for a client.
.Ve
.IP "cfragImportTooNewErr" 4
.IX Item "cfragImportTooNewErr"
.Vb 1
\& An import library was too new for a client.
.Ve
.IP "cfragInitLoopErr" 4
.IX Item "cfragInitLoopErr"
.Vb 1
\& Circularity in required initialization order.
.Ve
.IP "cfragInitAtBootErr" 4
.IX Item "cfragInitAtBootErr"
.Vb 1
\& A boot library has an initialization function.  (System 7 only)
.Ve
.IP "cfragLibConnErr" 4
.IX Item "cfragLibConnErr"
.PD 0
.IP "cfragCFMStartupErr" 4
.IX Item "cfragCFMStartupErr"
.PD
.Vb 1
\& Internal error during CFM initialization.
.Ve
.IP "cfragCFMInternalErr" 4
.IX Item "cfragCFMInternalErr"
.Vb 1
\& An internal inconstistancy has been detected.
.Ve
.IP "cfragFragmentCorruptErr" 4
.IX Item "cfragFragmentCorruptErr"
.Vb 1
\& A fragment\*(Aqs container was corrupt (known format).
.Ve
.IP "cfragInitFunctionErr" 4
.IX Item "cfragInitFunctionErr"
.Vb 1
\& A fragment\*(Aqs initialization routine returned an error.
.Ve
.IP "cfragNoApplicationErr" 4
.IX Item "cfragNoApplicationErr"
.Vb 1
\& No application member found in the cfrg resource.
.Ve
.IP "cfragArchitectureErr" 4
.IX Item "cfragArchitectureErr"
.Vb 1
\& A fragment has an unacceptable architecture.
.Ve
.IP "cfragFragmentUsageErr" 4
.IX Item "cfragFragmentUsageErr"
.Vb 1
\& A semantic error in usage of the fragment.
.Ve
.IP "cfragFileSizeErr" 4
.IX Item "cfragFileSizeErr"
.Vb 1
\& A file was too large to be mapped.
.Ve
.IP "cfragNotClosureErr" 4
.IX Item "cfragNotClosureErr"
.Vb 1
\& The closure ID was actually a connection ID.
.Ve
.IP "cfragNoRegistrationErr" 4
.IX Item "cfragNoRegistrationErr"
.Vb 1
\& The registration name was not found.
.Ve
.IP "cfragContainerIDErr" 4
.IX Item "cfragContainerIDErr"
.Vb 1
\& The fragment container ID was not valid.
.Ve
.IP "cfragClosureIDErr" 4
.IX Item "cfragClosureIDErr"
.Vb 1
\& The closure ID was not valid.
.Ve
.IP "cfragAbortClosureErr" 4
.IX Item "cfragAbortClosureErr"
.Vb 1
\& Used by notification handlers to abort a closure.
.Ve
.IP "cfragOutputLengthErr" 4
.IX Item "cfragOutputLengthErr"
.Vb 1
\& An output parameter is too small to hold the value.
.Ve
.ie n .SH "Reserved values for internal ""warnings""."
.el .SH "Reserved values for internal ``warnings''."
.IX Header "Reserved values for internal warnings."
.IP "cfragFirstReservedCode" 4
.IX Item "cfragFirstReservedCode"
.PD 0
.IP "cfragReservedCode_3" 4
.IX Item "cfragReservedCode_3"
.IP "cfragReservedCode_2" 4
.IX Item "cfragReservedCode_2"
.IP "fragContextNotFound" 4
.IX Item "fragContextNotFound"
.IP "fragConnectionIDNotFound" 4
.IX Item "fragConnectionIDNotFound"
.IP "fragSymbolNotFound" 4
.IX Item "fragSymbolNotFound"
.IP "fragSectionNotFound" 4
.IX Item "fragSectionNotFound"
.IP "fragLibNotFound" 4
.IX Item "fragLibNotFound"
.IP "fragDupRegLibName" 4
.IX Item "fragDupRegLibName"
.IP "fragFormatUnknown" 4
.IX Item "fragFormatUnknown"
.IP "fragHadUnresolveds" 4
.IX Item "fragHadUnresolveds"
.IP "fragNoMem" 4
.IX Item "fragNoMem"
.IP "fragNoAddrSpace" 4
.IX Item "fragNoAddrSpace"
.IP "fragNoContextIDs" 4
.IX Item "fragNoContextIDs"
.IP "fragObjectInitSeqErr" 4
.IX Item "fragObjectInitSeqErr"
.IP "fragImportTooOld" 4
.IX Item "fragImportTooOld"
.IP "fragImportTooNew" 4
.IX Item "fragImportTooNew"
.IP "fragInitLoop" 4
.IX Item "fragInitLoop"
.IP "fragInitRtnUsageErr" 4
.IX Item "fragInitRtnUsageErr"
.IP "fragLibConnErr" 4
.IX Item "fragLibConnErr"
.IP "fragMgrInitErr" 4
.IX Item "fragMgrInitErr"
.IP "fragConstErr" 4
.IX Item "fragConstErr"
.IP "fragCorruptErr" 4
.IX Item "fragCorruptErr"
.IP "fragUserInitProcErr" 4
.IX Item "fragUserInitProcErr"
.IP "fragAppNotFound" 4
.IX Item "fragAppNotFound"
.IP "fragArchError" 4
.IX Item "fragArchError"
.IP "fragInvalidFragmentUsage" 4
.IX Item "fragInvalidFragmentUsage"
.IP "invalidComponentID" 4
.IX Item "invalidComponentID"
.IP "validInstancesExist" 4
.IX Item "validInstancesExist"
.IP "componentNotCaptured" 4
.IX Item "componentNotCaptured"
.IP "componentDontRegister" 4
.IX Item "componentDontRegister"
.IP "unresolvedComponentDLLErr" 4
.IX Item "unresolvedComponentDLLErr"
.IP "invalidTranslationPathErr" 4
.IX Item "invalidTranslationPathErr"
.PD
.Vb 1
\& Source type to destination type not a valid path
.Ve
.IP "couldNotParseSourceFileErr" 4
.IX Item "couldNotParseSourceFileErr"
.Vb 1
\& Source document does not contain source type
.Ve
.IP "noTranslationPathErr" 4
.IX Item "noTranslationPathErr"
.PD 0
.IP "badTranslationSpecErr" 4
.IX Item "badTranslationSpecErr"
.IP "buf2SmallErr" 4
.IX Item "buf2SmallErr"
.IP "noMPPErr" 4
.IX Item "noMPPErr"
.IP "ckSumErr" 4
.IX Item "ckSumErr"
.IP "extractErr" 4
.IX Item "extractErr"
.IP "readQErr" 4
.IX Item "readQErr"
.IP "atpLenErr" 4
.IX Item "atpLenErr"
.IP "atpBadRsp" 4
.IX Item "atpBadRsp"
.IP "recNotFnd" 4
.IX Item "recNotFnd"
.PD
.SH "OpenTransport errors"
.IX Header "OpenTransport errors"
.IP "kOTNoError" 4
.IX Item "kOTNoError"
.Vb 1
\& No Error occurred
.Ve
.IP "kOTOutOfMemoryErr" 4
.IX Item "kOTOutOfMemoryErr"
.Vb 1
\& OT ran out of memory, may be a temporary
.Ve
.IP "kOTNotFoundErr" 4
.IX Item "kOTNotFoundErr"
.Vb 1
\& OT generic not found error
.Ve
.IP "kOTDuplicateFoundErr" 4
.IX Item "kOTDuplicateFoundErr"
.Vb 1
\& OT generic duplicate found error
.Ve
.IP "kOTBadAddressErr" 4
.IX Item "kOTBadAddressErr"
.Vb 1
\& XTI2OSStatus(TBADADDR) A Bad address was specified
.Ve
.IP "kOTBadOptionErr" 4
.IX Item "kOTBadOptionErr"
.Vb 1
\& XTI2OSStatus(TBADOPT) A Bad option was specified
.Ve
.IP "kOTAccessErr" 4
.IX Item "kOTAccessErr"
.Vb 1
\& XTI2OSStatus(TACCES) Missing access permission
.Ve
.IP "kOTBadReferenceErr" 4
.IX Item "kOTBadReferenceErr"
.Vb 1
\& XTI2OSStatus(TBADF) Bad provider reference
.Ve
.IP "kOTNoAddressErr" 4
.IX Item "kOTNoAddressErr"
.Vb 1
\& XTI2OSStatus(TNOADDR) No address was specified
.Ve
.IP "kOTOutStateErr" 4
.IX Item "kOTOutStateErr"
.Vb 1
\& XTI2OSStatus(TOUTSTATE) Call issued in wrong state
.Ve
.IP "kOTBadSequenceErr" 4
.IX Item "kOTBadSequenceErr"
.Vb 1
\& XTI2OSStatus(TBADSEQ) Sequence specified does not exist
.Ve
.IP "kOTSysErrorErr" 4
.IX Item "kOTSysErrorErr"
.Vb 1
\& XTI2OSStatus(TSYSERR) A system error occurred
.Ve
.IP "kOTLookErr" 4
.IX Item "kOTLookErr"
.Vb 1
\& XTI2OSStatus(TLOOK) An event occurred \- call Look()
.Ve
.IP "kOTBadDataErr" 4
.IX Item "kOTBadDataErr"
.Vb 1
\& XTI2OSStatus(TBADDATA) An illegal amount of data was specified
.Ve
.IP "kOTBufferOverflowErr" 4
.IX Item "kOTBufferOverflowErr"
.Vb 1
\& XTI2OSStatus(TBUFOVFLW) Passed buffer not big enough
.Ve
.IP "kOTFlowErr" 4
.IX Item "kOTFlowErr"
.Vb 1
\& XTI2OSStatus(TFLOW) Provider is flow\-controlled
.Ve
.IP "kOTNoDataErr" 4
.IX Item "kOTNoDataErr"
.Vb 1
\& XTI2OSStatus(TNODATA) No data available for reading
.Ve
.IP "kOTNoDisconnectErr" 4
.IX Item "kOTNoDisconnectErr"
.Vb 1
\& XTI2OSStatus(TNODIS) No disconnect indication available
.Ve
.IP "kOTNoUDErrErr" 4
.IX Item "kOTNoUDErrErr"
.Vb 1
\& XTI2OSStatus(TNOUDERR) No Unit Data Error indication available
.Ve
.IP "kOTBadFlagErr" 4
.IX Item "kOTBadFlagErr"
.Vb 1
\& XTI2OSStatus(TBADFLAG) A Bad flag value was supplied
.Ve
.IP "kOTNoReleaseErr" 4
.IX Item "kOTNoReleaseErr"
.Vb 1
\& XTI2OSStatus(TNOREL) No orderly release indication available
.Ve
.IP "kOTNotSupportedErr" 4
.IX Item "kOTNotSupportedErr"
.Vb 1
\& XTI2OSStatus(TNOTSUPPORT) Command is not supported
.Ve
.IP "kOTStateChangeErr" 4
.IX Item "kOTStateChangeErr"
.Vb 1
\& XTI2OSStatus(TSTATECHNG) State is changing \- try again later
.Ve
.IP "kOTNoStructureTypeErr" 4
.IX Item "kOTNoStructureTypeErr"
.Vb 1
\& XTI2OSStatus(TNOSTRUCTYPE) Bad structure type requested for OTAlloc
.Ve
.IP "kOTBadNameErr" 4
.IX Item "kOTBadNameErr"
.Vb 1
\& XTI2OSStatus(TBADNAME) A bad endpoint name was supplied
.Ve
.IP "kOTBadQLenErr" 4
.IX Item "kOTBadQLenErr"
.Vb 1
\& XTI2OSStatus(TBADQLEN) A Bind to an in\-use addr with qlen > 0
.Ve
.IP "kOTAddressBusyErr" 4
.IX Item "kOTAddressBusyErr"
.Vb 1
\& XTI2OSStatus(TADDRBUSY) Address requested is already in use
.Ve
.IP "kOTIndOutErr" 4
.IX Item "kOTIndOutErr"
.Vb 1
\& XTI2OSStatus(TINDOUT) Accept failed because of pending listen
.Ve
.IP "kOTProviderMismatchErr" 4
.IX Item "kOTProviderMismatchErr"
.Vb 1
\& XTI2OSStatus(TPROVMISMATCH) Tried to accept on incompatible endpoint
.Ve
.IP "kOTResQLenErr" 4
.IX Item "kOTResQLenErr"
.Vb 1
\& XTI2OSStatus(TRESQLEN)
.Ve
.IP "kOTResAddressErr" 4
.IX Item "kOTResAddressErr"
.Vb 1
\& XTI2OSStatus(TRESADDR)
.Ve
.IP "kOTQFullErr" 4
.IX Item "kOTQFullErr"
.Vb 1
\& XTI2OSStatus(TQFULL)
.Ve
.IP "kOTProtocolErr" 4
.IX Item "kOTProtocolErr"
.Vb 1
\& XTI2OSStatus(TPROTO) An unspecified provider error occurred
.Ve
.IP "kOTBadSyncErr" 4
.IX Item "kOTBadSyncErr"
.Vb 1
\& XTI2OSStatus(TBADSYNC) A synchronous call at interrupt time
.Ve
.IP "kOTCanceledErr" 4
.IX Item "kOTCanceledErr"
.Vb 1
\& XTI2OSStatus(TCANCELED) The command was cancelled
.Ve
.IP "kEPERMErr" 4
.IX Item "kEPERMErr"
.Vb 1
\& Permission denied
.Ve
.IP "kENOENTErr" 4
.IX Item "kENOENTErr"
.Vb 1
\& No such file or directory
.Ve
.IP "kENORSRCErr" 4
.IX Item "kENORSRCErr"
.Vb 1
\& No such resource
.Ve
.IP "kEINTRErr" 4
.IX Item "kEINTRErr"
.Vb 1
\& Interrupted system service
.Ve
.IP "kEIOErr" 4
.IX Item "kEIOErr"
.Vb 1
\& I/O error
.Ve
.IP "kENXIOErr" 4
.IX Item "kENXIOErr"
.Vb 1
\& No such device or address
.Ve
.IP "kEBADFErr" 4
.IX Item "kEBADFErr"
.Vb 1
\& Bad file number
.Ve
.IP "kEAGAINErr" 4
.IX Item "kEAGAINErr"
.Vb 1
\& Try operation again later
.Ve
.IP "kENOMEMErr" 4
.IX Item "kENOMEMErr"
.Vb 1
\& Not enough space
.Ve
.IP "kEACCESErr" 4
.IX Item "kEACCESErr"
.Vb 1
\& Permission denied
.Ve
.IP "kEFAULTErr" 4
.IX Item "kEFAULTErr"
.Vb 1
\& Bad address
.Ve
.IP "kEBUSYErr" 4
.IX Item "kEBUSYErr"
.Vb 1
\& Device or resource busy
.Ve
.IP "kEEXISTErr" 4
.IX Item "kEEXISTErr"
.Vb 1
\& File exists
.Ve
.IP "kENODEVErr" 4
.IX Item "kENODEVErr"
.Vb 1
\& No such device
.Ve
.IP "kEINVALErr" 4
.IX Item "kEINVALErr"
.Vb 1
\& Invalid argument
.Ve
.IP "kENOTTYErr" 4
.IX Item "kENOTTYErr"
.Vb 1
\& Not a character device
.Ve
.IP "kEPIPEErr" 4
.IX Item "kEPIPEErr"
.Vb 1
\& Broken pipe
.Ve
.IP "kERANGEErr" 4
.IX Item "kERANGEErr"
.Vb 1
\& Message size too large for STREAM
.Ve
.IP "kEWOULDBLOCKErr" 4
.IX Item "kEWOULDBLOCKErr"
.Vb 1
\& Call would block, so was aborted
.Ve
.IP "kEDEADLKErr" 4
.IX Item "kEDEADLKErr"
.Vb 1
\& or a deadlock would occur
.Ve
.IP "kEALREADYErr" 4
.IX Item "kEALREADYErr"
.PD 0
.IP "kENOTSOCKErr" 4
.IX Item "kENOTSOCKErr"
.PD
.Vb 1
\& Socket operation on non\-socket
.Ve
.IP "kEDESTADDRREQErr" 4
.IX Item "kEDESTADDRREQErr"
.Vb 1
\& Destination address required
.Ve
.IP "kEMSGSIZEErr" 4
.IX Item "kEMSGSIZEErr"
.Vb 1
\& Message too long
.Ve
.IP "kEPROTOTYPEErr" 4
.IX Item "kEPROTOTYPEErr"
.Vb 1
\& Protocol wrong type for socket
.Ve
.IP "kENOPROTOOPTErr" 4
.IX Item "kENOPROTOOPTErr"
.Vb 1
\& Protocol not available
.Ve
.IP "kEPROTONOSUPPORTErr" 4
.IX Item "kEPROTONOSUPPORTErr"
.Vb 1
\& Protocol not supported
.Ve
.IP "kESOCKTNOSUPPORTErr" 4
.IX Item "kESOCKTNOSUPPORTErr"
.Vb 1
\& Socket type not supported
.Ve
.IP "kEOPNOTSUPPErr" 4
.IX Item "kEOPNOTSUPPErr"
.Vb 1
\& Operation not supported on socket
.Ve
.IP "kEADDRINUSEErr" 4
.IX Item "kEADDRINUSEErr"
.Vb 1
\& Address already in use
.Ve
.IP "kEADDRNOTAVAILErr" 4
.IX Item "kEADDRNOTAVAILErr"
.Vb 1
\& Can\*(Aqt assign requested address
.Ve
.IP "kENETDOWNErr" 4
.IX Item "kENETDOWNErr"
.Vb 1
\& Network is down
.Ve
.IP "kENETUNREACHErr" 4
.IX Item "kENETUNREACHErr"
.Vb 1
\& Network is unreachable
.Ve
.IP "kENETRESETErr" 4
.IX Item "kENETRESETErr"
.Vb 1
\& Network dropped connection on reset
.Ve
.IP "kECONNABORTEDErr" 4
.IX Item "kECONNABORTEDErr"
.Vb 1
\& Software caused connection abort
.Ve
.IP "kECONNRESETErr" 4
.IX Item "kECONNRESETErr"
.Vb 1
\& Connection reset by peer
.Ve
.IP "kENOBUFSErr" 4
.IX Item "kENOBUFSErr"
.Vb 1
\& No buffer space available
.Ve
.IP "kEISCONNErr" 4
.IX Item "kEISCONNErr"
.Vb 1
\& Socket is already connected
.Ve
.IP "kENOTCONNErr" 4
.IX Item "kENOTCONNErr"
.Vb 1
\& Socket is not connected
.Ve
.IP "kESHUTDOWNErr" 4
.IX Item "kESHUTDOWNErr"
.Vb 1
\& Can\*(Aqt send after socket shutdown
.Ve
.IP "kETOOMANYREFSErr" 4
.IX Item "kETOOMANYREFSErr"
.Vb 1
\& Too many references: can\*(Aqt splice
.Ve
.IP "kETIMEDOUTErr" 4
.IX Item "kETIMEDOUTErr"
.Vb 1
\& Connection timed out
.Ve
.IP "kECONNREFUSEDErr" 4
.IX Item "kECONNREFUSEDErr"
.Vb 1
\& Connection refused
.Ve
.IP "kEHOSTDOWNErr" 4
.IX Item "kEHOSTDOWNErr"
.Vb 1
\& Host is down
.Ve
.IP "kEHOSTUNREACHErr" 4
.IX Item "kEHOSTUNREACHErr"
.Vb 1
\& No route to host
.Ve
.IP "kEPROTOErr" 4
.IX Item "kEPROTOErr"
.Vb 1
\& \*(Aq\*(Aq\*(Aq fill out missing codes \*(Aq\*(Aq\*(Aq
.Ve
.IP "kETIMEErr" 4
.IX Item "kETIMEErr"
.PD 0
.IP "kENOSRErr" 4
.IX Item "kENOSRErr"
.IP "kEBADMSGErr" 4
.IX Item "kEBADMSGErr"
.IP "kECANCELErr" 4
.IX Item "kECANCELErr"
.IP "kENOSTRErr" 4
.IX Item "kENOSTRErr"
.IP "kENODATAErr" 4
.IX Item "kENODATAErr"
.IP "kEINPROGRESSErr" 4
.IX Item "kEINPROGRESSErr"
.IP "kESRCHErr" 4
.IX Item "kESRCHErr"
.IP "kENOMSGErr" 4
.IX Item "kENOMSGErr"
.IP "kOTClientNotInittedErr" 4
.IX Item "kOTClientNotInittedErr"
.IP "kOTPortHasDiedErr" 4
.IX Item "kOTPortHasDiedErr"
.IP "kOTPortWasEjectedErr" 4
.IX Item "kOTPortWasEjectedErr"
.IP "kOTBadConfigurationErr" 4
.IX Item "kOTBadConfigurationErr"
.IP "kOTConfigurationChangedErr" 4
.IX Item "kOTConfigurationChangedErr"
.IP "kOTUserRequestedErr" 4
.IX Item "kOTUserRequestedErr"
.PD
.SH "Color Picker errors"
.IX Header "Color Picker errors"
.IP "firstPickerError" 4
.IX Item "firstPickerError"
.PD 0
.IP "invalidPickerType" 4
.IX Item "invalidPickerType"
.IP "requiredFlagsDontMatch" 4
.IX Item "requiredFlagsDontMatch"
.IP "pickerResourceError" 4
.IX Item "pickerResourceError"
.IP "cantLoadPicker" 4
.IX Item "cantLoadPicker"
.IP "cantCreatePickerWindow" 4
.IX Item "cantCreatePickerWindow"
.IP "cantLoadPackage" 4
.IX Item "cantLoadPackage"
.IP "pickerCantLive" 4
.IX Item "pickerCantLive"
.IP "colorSyncNotInstalled" 4
.IX Item "colorSyncNotInstalled"
.IP "badProfileError" 4
.IX Item "badProfileError"
.IP "kNSL68kContextNotSupported" 4
.IX Item "kNSL68kContextNotSupported"
.PD
.Vb 1
\& no 68k allowed
.Ve
.IP "kNSLSchedulerError" 4
.IX Item "kNSLSchedulerError"
.Vb 1
\& A custom thread routine encountered an error
.Ve
.IP "kNSLBadURLSyntax" 4
.IX Item "kNSLBadURLSyntax"
.Vb 1
\& URL contains illegal characters
.Ve
.IP "kNSLNoCarbonLib" 4
.IX Item "kNSLNoCarbonLib"
.PD 0
.IP "kNSLUILibraryNotAvailable" 4
.IX Item "kNSLUILibraryNotAvailable"
.PD
.Vb 1
\& The NSL UI Library needs to be in the Extensions Folder
.Ve
.IP "kNSLNotImplementedYet" 4
.IX Item "kNSLNotImplementedYet"
.PD 0
.IP "kNSLErrNullPtrError" 4
.IX Item "kNSLErrNullPtrError"
.IP "kNSLSomePluginsFailedToLoad" 4
.IX Item "kNSLSomePluginsFailedToLoad"
.PD
.Vb 1
\& (one or more plugins failed to load, but at least one did load; this error isn\*(Aqt fatal)
.Ve
.IP "kNSLNullNeighborhoodPtr" 4
.IX Item "kNSLNullNeighborhoodPtr"
.Vb 1
\& (client passed a null neighborhood ptr)
.Ve
.IP "kNSLNoPluginsForSearch" 4
.IX Item "kNSLNoPluginsForSearch"
.Vb 1
\& (no plugins will respond to search request; bad protocol(s)?)
.Ve
.IP "kNSLSearchAlreadyInProgress" 4
.IX Item "kNSLSearchAlreadyInProgress"
.Vb 1
\& (you can only have one ongoing search per clientRef)
.Ve
.IP "kNSLNoPluginsFound" 4
.IX Item "kNSLNoPluginsFound"
.Vb 1
\& (manager didn\*(Aqt find any valid plugins to load)
.Ve
.IP "kNSLPluginLoadFailed" 4
.IX Item "kNSLPluginLoadFailed"
.Vb 1
\& (manager unable to load one of the plugins)
.Ve
.IP "kNSLBadProtocolTypeErr" 4
.IX Item "kNSLBadProtocolTypeErr"
.Vb 1
\& (client is trying to add a null protocol type)
.Ve
.IP "kNSLNullListPtr" 4
.IX Item "kNSLNullListPtr"
.Vb 1
\& (client is trying to add items to a nil list)
.Ve
.IP "kNSLBadClientInfoPtr" 4
.IX Item "kNSLBadClientInfoPtr"
.Vb 1
\& (nil ClientAsyncInfoPtr; no reference available)
.Ve
.IP "kNSLCannotContinueLookup" 4
.IX Item "kNSLCannotContinueLookup"
.Vb 1
\& (Can\*(Aqt continue lookup; error or bad state)
.Ve
.IP "kNSLBufferTooSmallForData" 4
.IX Item "kNSLBufferTooSmallForData"
.Vb 1
\& (Client buffer too small for data from plugin)
.Ve
.IP "kNSLNoContextAvailable" 4
.IX Item "kNSLNoContextAvailable"
.Vb 1
\& (ContinueLookup function ptr invalid)
.Ve
.IP "kNSLRequestBufferAlreadyInList" 4
.IX Item "kNSLRequestBufferAlreadyInList"
.PD 0
.IP "kNSLInvalidPluginSpec" 4
.IX Item "kNSLInvalidPluginSpec"
.IP "kNSLNoSupportForService" 4
.IX Item "kNSLNoSupportForService"
.IP "kNSLBadNetConnection" 4
.IX Item "kNSLBadNetConnection"
.IP "kNSLBadDataTypeErr" 4
.IX Item "kNSLBadDataTypeErr"
.IP "kNSLBadServiceTypeErr" 4
.IX Item "kNSLBadServiceTypeErr"
.IP "kNSLBadReferenceErr" 4
.IX Item "kNSLBadReferenceErr"
.IP "kNSLNoElementsInList" 4
.IX Item "kNSLNoElementsInList"
.IP "kNSLInsufficientOTVer" 4
.IX Item "kNSLInsufficientOTVer"
.IP "kNSLInsufficientSysVer" 4
.IX Item "kNSLInsufficientSysVer"
.IP "kNSLNotInitialized" 4
.IX Item "kNSLNotInitialized"
.IP "kDTPHoldJobErr" 4
.IX Item "kDTPHoldJobErr"
.IP "kDTPStopQueueErr" 4
.IX Item "kDTPStopQueueErr"
.IP "kDTPTryAgainErr" 4
.IX Item "kDTPTryAgainErr"
.PD
.SH "ColorSync Result codes"
.IX Header "ColorSync Result codes"
.IP "cmElementTagNotFound" 4
.IX Item "cmElementTagNotFound"
.PD 0
.IP "cmIndexRangeErr" 4
.IX Item "cmIndexRangeErr"
.PD
.Vb 1
\& Tag index out of range
.Ve
.IP "cmCantDeleteElement" 4
.IX Item "cmCantDeleteElement"
.PD 0
.IP "cmFatalProfileErr" 4
.IX Item "cmFatalProfileErr"
.IP "cmInvalidProfile" 4
.IX Item "cmInvalidProfile"
.PD
.Vb 1
\& A Profile must contain a \*(Aqcs1 \*(Aq tag to be valid
.Ve
.IP "cmInvalidProfileLocation" 4
.IX Item "cmInvalidProfileLocation"
.Vb 1
\& Operation not supported for this profile location
.Ve
.IP "cmCantCopyModifiedV1Profile" 4
.IX Item "cmCantCopyModifiedV1Profile"
.Vb 2
\& Illegal to copy version 1 profiles that have been modified
\&Profile Search Errors
.Ve
.IP "cmInvalidSearch" 4
.IX Item "cmInvalidSearch"
.Vb 1
\& Bad Search Handle
.Ve
.IP "cmSearchError" 4
.IX Item "cmSearchError"
.PD 0
.IP "cmErrIncompatibleProfile" 4
.IX Item "cmErrIncompatibleProfile"
.PD
.Vb 1
\& Other ColorSync Errors
.Ve
.IP "cmInvalidColorSpace" 4
.IX Item "cmInvalidColorSpace"
.Vb 1
\& Profile colorspace does not match bitmap type
.Ve
.IP "cmInvalidSrcMap" 4
.IX Item "cmInvalidSrcMap"
.Vb 1
\& Source pix/bit map was invalid
.Ve
.IP "cmInvalidDstMap" 4
.IX Item "cmInvalidDstMap"
.Vb 1
\& Destination pix/bit map was invalid
.Ve
.IP "cmNoGDevicesError" 4
.IX Item "cmNoGDevicesError"
.Vb 1
\& Begin/End Matching \-\- no gdevices available
.Ve
.IP "cmInvalidProfileComment" 4
.IX Item "cmInvalidProfileComment"
.Vb 1
\& Bad Profile comment during drawpicture
.Ve
.IP "cmRangeOverFlow" 4
.IX Item "cmRangeOverFlow"
.Vb 1
\& Color conversion warning that some output color values over/underflowed and were clipped
.Ve
.IP "cmNamedColorNotFound" 4
.IX Item "cmNamedColorNotFound"
.Vb 1
\& NamedColor not found
.Ve
.IP "badFolderDescErr" 4
.IX Item "badFolderDescErr"
.PD 0
.IP "duplicateFolderDescErr" 4
.IX Item "duplicateFolderDescErr"
.IP "noMoreFolderDescErr" 4
.IX Item "noMoreFolderDescErr"
.IP "invalidFolderTypeErr" 4
.IX Item "invalidFolderTypeErr"
.IP "duplicateRoutingErr" 4
.IX Item "duplicateRoutingErr"
.IP "routingNotFoundErr" 4
.IX Item "routingNotFoundErr"
.IP "internalScrapErr" 4
.IX Item "internalScrapErr"
.IP "duplicateScrapFlavorErr" 4
.IX Item "duplicateScrapFlavorErr"
.IP "badScrapRefErr" 4
.IX Item "badScrapRefErr"
.IP "processStateIncorrectErr" 4
.IX Item "processStateIncorrectErr"
.IP "scrapPromiseNotKeptErr" 4
.IX Item "scrapPromiseNotKeptErr"
.IP "noScrapPromiseKeeperErr" 4
.IX Item "noScrapPromiseKeeperErr"
.IP "nilScrapFlavorDataErr" 4
.IX Item "nilScrapFlavorDataErr"
.IP "scrapFlavorFlagsMismatchErr" 4
.IX Item "scrapFlavorFlagsMismatchErr"
.IP "scrapFlavorSizeMismatchErr" 4
.IX Item "scrapFlavorSizeMismatchErr"
.IP "illegalScrapFlavorFlagsErr" 4
.IX Item "illegalScrapFlavorFlagsErr"
.IP "illegalScrapFlavorTypeErr" 4
.IX Item "illegalScrapFlavorTypeErr"
.IP "illegalScrapFlavorSizeErr" 4
.IX Item "illegalScrapFlavorSizeErr"
.IP "scrapFlavorNotFoundErr" 4
.IX Item "scrapFlavorNotFoundErr"
.PD
.Vb 1
\& == noTypeErr
.Ve
.SH "AFP Protocol Errors"
.IX Header "AFP Protocol Errors"
.IP "afpAccessDenied" 4
.IX Item "afpAccessDenied"
.Vb 1
\& Insufficient access privileges for operation
.Ve
.IP "afpAuthContinue" 4
.IX Item "afpAuthContinue"
.Vb 1
\& Further information required to complete AFPLogin call
.Ve
.IP "afpBadUAM" 4
.IX Item "afpBadUAM"
.Vb 1
\& Unknown user authentication method specified
.Ve
.IP "afpBadVersNum" 4
.IX Item "afpBadVersNum"
.Vb 1
\& Unknown AFP protocol version number specified
.Ve
.IP "afpBitmapErr" 4
.IX Item "afpBitmapErr"
.Vb 1
\& Bitmap contained bits undefined for call
.Ve
.IP "afpCantMove" 4
.IX Item "afpCantMove"
.Vb 1
\& Move destination is offspring of source, or root was specified
.Ve
.IP "afpDenyConflict" 4
.IX Item "afpDenyConflict"
.Vb 1
\& Specified open/deny modes conflict with current open modes
.Ve
.IP "afpDirNotEmpty" 4
.IX Item "afpDirNotEmpty"
.Vb 1
\& Cannot delete non\-empty directory
.Ve
.IP "afpDiskFull" 4
.IX Item "afpDiskFull"
.Vb 1
\& Insufficient free space on volume for operation
.Ve
.IP "afpEofError" 4
.IX Item "afpEofError"
.Vb 1
\& Read beyond logical end\-of\-file
.Ve
.IP "afpFileBusy" 4
.IX Item "afpFileBusy"
.Vb 1
\& Cannot delete an open file
.Ve
.IP "afpFlatVol" 4
.IX Item "afpFlatVol"
.Vb 1
\& Cannot create directory on specified volume
.Ve
.IP "afpItemNotFound" 4
.IX Item "afpItemNotFound"
.Vb 1
\& Unknown UserName/UserID or missing comment/APPL entry
.Ve
.IP "afpLockErr" 4
.IX Item "afpLockErr"
.Vb 1
\& Some or all of requested range is locked by another user
.Ve
.IP "afpMiscErr" 4
.IX Item "afpMiscErr"
.Vb 1
\& Unexpected error encountered during execution
.Ve
.IP "afpNoMoreLocks" 4
.IX Item "afpNoMoreLocks"
.Vb 1
\& Maximum lock limit reached
.Ve
.IP "afpNoServer" 4
.IX Item "afpNoServer"
.Vb 1
\& Server not responding
.Ve
.IP "afpObjectExists" 4
.IX Item "afpObjectExists"
.Vb 1
\& Specified destination file or directory already exists
.Ve
.IP "afpObjectNotFound" 4
.IX Item "afpObjectNotFound"
.Vb 1
\& Specified file or directory does not exist
.Ve
.IP "afpParmErr" 4
.IX Item "afpParmErr"
.Vb 1
\& A specified parameter was out of allowable range
.Ve
.IP "afpRangeNotLocked" 4
.IX Item "afpRangeNotLocked"
.Vb 1
\& Tried to unlock range that was not locked by user
.Ve
.IP "afpRangeOverlap" 4
.IX Item "afpRangeOverlap"
.Vb 1
\& Some or all of range already locked by same user
.Ve
.IP "afpSessClosed" 4
.IX Item "afpSessClosed"
.Vb 1
\& Session closed
.Ve
.IP "afpUserNotAuth" 4
.IX Item "afpUserNotAuth"
.Vb 1
\& No AFPLogin call has successfully been made for this session
.Ve
.IP "afpCallNotSupported" 4
.IX Item "afpCallNotSupported"
.Vb 1
\& Unsupported AFP call was made
.Ve
.IP "afpObjectTypeErr" 4
.IX Item "afpObjectTypeErr"
.Vb 1
\& File/Directory specified where Directory/File expected
.Ve
.IP "afpTooManyFilesOpen" 4
.IX Item "afpTooManyFilesOpen"
.Vb 1
\& Maximum open file count reached
.Ve
.IP "afpServerGoingDown" 4
.IX Item "afpServerGoingDown"
.Vb 1
\& Server is shutting down
.Ve
.IP "afpCantRename" 4
.IX Item "afpCantRename"
.Vb 1
\& AFPRename cannot rename volume
.Ve
.IP "afpDirNotFound" 4
.IX Item "afpDirNotFound"
.Vb 1
\& Unknown directory specified
.Ve
.IP "afpIconTypeError" 4
.IX Item "afpIconTypeError"
.Vb 1
\& Icon size specified different from existing icon size
.Ve
.IP "afpVolLocked" 4
.IX Item "afpVolLocked"
.Vb 1
\& Volume is Read\-Only
.Ve
.IP "afpObjectLocked" 4
.IX Item "afpObjectLocked"
.Vb 1
\& Object is M/R/D/W inhibited
.Ve
.IP "afpContainsSharedErr" 4
.IX Item "afpContainsSharedErr"
.Vb 1
\& the folder being shared contains a shared folder
.Ve
.IP "afpIDNotFound" 4
.IX Item "afpIDNotFound"
.PD 0
.IP "afpIDExists" 4
.IX Item "afpIDExists"
.IP "afpDiffVolErr" 4
.IX Item "afpDiffVolErr"
.IP "afpCatalogChanged" 4
.IX Item "afpCatalogChanged"
.IP "afpSameObjectErr" 4
.IX Item "afpSameObjectErr"
.IP "afpBadIDErr" 4
.IX Item "afpBadIDErr"
.IP "afpPwdSameErr" 4
.IX Item "afpPwdSameErr"
.PD
.Vb 1
\& Someone tried to change their password to the same password on a mantadory password change
.Ve
.IP "afpPwdTooShortErr" 4
.IX Item "afpPwdTooShortErr"
.Vb 1
\& The password being set is too short: there is a minimum length that must be met or exceeded
.Ve
.IP "afpPwdExpiredErr" 4
.IX Item "afpPwdExpiredErr"
.Vb 1
\& The password being used is too old: this requires the user to change the password before log\-in can continue
.Ve
.IP "afpInsideSharedErr" 4
.IX Item "afpInsideSharedErr"
.Vb 2
\& The folder being shared is inside a shared folder OR the folder contains a shared folder and is being moved into a shared folder
\&OR the folder contains a shared folder and is being moved into the descendent of a shared folder.
.Ve
.IP "afpInsideTrashErr" 4
.IX Item "afpInsideTrashErr"
.Vb 2
\& The folder being shared is inside the trash folder OR the shared folder is being moved into the trash folder
\&OR the folder is being moved to the trash and it contains a shared folder
.Ve
.IP "afpPwdNeedsChangeErr" 4
.IX Item "afpPwdNeedsChangeErr"
.Vb 1
\& The password needs to be changed
.Ve
.IP "afpPwdPolicyErr" 4
.IX Item "afpPwdPolicyErr"
.Vb 1
\& Password does not conform to servers password policy
.Ve
.IP "afpAlreadyLoggedInErr" 4
.IX Item "afpAlreadyLoggedInErr"
.Vb 1
\& User has been authenticated but is already logged in from another machine (and that\*(Aqs not allowed on this server)
.Ve
.SH "AppleShare Client Errors"
.IX Header "AppleShare Client Errors"
.IP "afpBadDirIDType" 4
.IX Item "afpBadDirIDType"
.PD 0
.IP "afpCantMountMoreSrvre" 4
.IX Item "afpCantMountMoreSrvre"
.PD
.Vb 1
\& The Maximum number of server connections has been reached
.Ve
.IP "afpAlreadyMounted" 4
.IX Item "afpAlreadyMounted"
.Vb 1
\& The volume is already mounted
.Ve
.SH "NumberFormatting error codes"
.IX Header "NumberFormatting error codes"
.IP "numberFormattingNotANumberErr" 4
.IX Item "numberFormattingNotANumberErr"
.PD 0
.IP "numberFormattingOverflowInDestinationErr" 4
.IX Item "numberFormattingOverflowInDestinationErr"
.IP "numberFormattingBadNumberFormattingObjectErr" 4
.IX Item "numberFormattingBadNumberFormattingObjectErr"
.IP "numberFormattingSpuriousCharErr" 4
.IX Item "numberFormattingSpuriousCharErr"
.IP "numberFormattingLiteralMissingErr" 4
.IX Item "numberFormattingLiteralMissingErr"
.IP "numberFormattingDelimiterMissingErr" 4
.IX Item "numberFormattingDelimiterMissingErr"
.IP "numberFormattingEmptyFormatErr" 4
.IX Item "numberFormattingEmptyFormatErr"
.IP "numberFormattingBadFormatErr" 4
.IX Item "numberFormattingBadFormatErr"
.IP "numberFormattingBadOptionsErr" 4
.IX Item "numberFormattingBadOptionsErr"
.IP "numberFormattingBadTokenErr" 4
.IX Item "numberFormattingBadTokenErr"
.IP "numberFormattingUnOrderedCurrencyRangeErr" 4
.IX Item "numberFormattingUnOrderedCurrencyRangeErr"
.IP "numberFormattingBadCurrencyPositionErr" 4
.IX Item "numberFormattingBadCurrencyPositionErr"
.IP "numberFormattingNotADigitErr" 4
.IX Item "numberFormattingNotADigitErr"
.PD
.Vb 1
\& deprecated misspelled versions:
.Ve
.IP "numberFormattingUnOrdredCurrencyRangeErr" 4
.IX Item "numberFormattingUnOrdredCurrencyRangeErr"
.PD 0
.IP "textParserBadParamErr" 4
.IX Item "textParserBadParamErr"
.IP "textParserObjectNotFoundErr" 4
.IX Item "textParserObjectNotFoundErr"
.IP "textParserBadTokenValueErr" 4
.IX Item "textParserBadTokenValueErr"
.IP "textParserBadParserObjectErr" 4
.IX Item "textParserBadParserObjectErr"
.IP "textParserParamErr" 4
.IX Item "textParserParamErr"
.IP "textParserNoMoreTextErr" 4
.IX Item "textParserNoMoreTextErr"
.IP "textParserBadTextLanguageErr" 4
.IX Item "textParserBadTextLanguageErr"
.IP "textParserBadTextEncodingErr" 4
.IX Item "textParserBadTextEncodingErr"
.IP "textParserNoSuchTokenFoundErr" 4
.IX Item "textParserNoSuchTokenFoundErr"
.IP "errUnknownAttributeTag" 4
.IX Item "errUnknownAttributeTag"
.IP "errMarginWilllNotFit" 4
.IX Item "errMarginWilllNotFit"
.IP "errNotInImagingMode" 4
.IX Item "errNotInImagingMode"
.IP "errAlreadyInImagingMode" 4
.IX Item "errAlreadyInImagingMode"
.IP "errEngineNotFound" 4
.IX Item "errEngineNotFound"
.IP "errIteratorReachedEnd" 4
.IX Item "errIteratorReachedEnd"
.IP "errInvalidRange" 4
.IX Item "errInvalidRange"
.IP "errOffsetNotOnElementBounday" 4
.IX Item "errOffsetNotOnElementBounday"
.IP "errNoHiliteText" 4
.IX Item "errNoHiliteText"
.IP "errEmptyScrap" 4
.IX Item "errEmptyScrap"
.IP "errReadOnlyText" 4
.IX Item "errReadOnlyText"
.IP "errUnknownElement" 4
.IX Item "errUnknownElement"
.IP "errNonContiuousAttribute" 4
.IX Item "errNonContiuousAttribute"
.IP "hrHTMLRenderingLibNotInstalledErr" 4
.IX Item "hrHTMLRenderingLibNotInstalledErr"
.IP "hrMiscellaneousExceptionErr" 4
.IX Item "hrMiscellaneousExceptionErr"
.IP "hrUnableToResizeHandleErr" 4
.IX Item "hrUnableToResizeHandleErr"
.IP "errIANoErr" 4
.IX Item "errIANoErr"
.IP "errIAUnknownErr" 4
.IX Item "errIAUnknownErr"
.IP "errIAAllocationErr" 4
.IX Item "errIAAllocationErr"
.IP "errIAParamErr" 4
.IX Item "errIAParamErr"
.IP "errIANoMoreItems" 4
.IX Item "errIANoMoreItems"
.IP "errIABufferTooSmall" 4
.IX Item "errIABufferTooSmall"
.IP "errIACanceled" 4
.IX Item "errIACanceled"
.IP "errIAInvalidDocument" 4
.IX Item "errIAInvalidDocument"
.IP "errIATextExtractionErr" 4
.IX Item "errIATextExtractionErr"
.PD
.SH "QuickTime Streaming Errors"
.IX Header "QuickTime Streaming Errors"
.IP "qtsBadSelectorErr" 4
.IX Item "qtsBadSelectorErr"
.PD 0
.IP "qtsBadStateErr" 4
.IX Item "qtsBadStateErr"
.IP "qtsBadDataErr" 4
.IX Item "qtsBadDataErr"
.PD
.Vb 1
\& something is wrong with the data
.Ve
.IP "qtsUnsupportedDataTypeErr" 4
.IX Item "qtsUnsupportedDataTypeErr"
.PD 0
.IP "qtsUnsupportedRateErr" 4
.IX Item "qtsUnsupportedRateErr"
.IP "qtsUnsupportedFeatureErr" 4
.IX Item "qtsUnsupportedFeatureErr"
.IP "qtsTooMuchDataErr" 4
.IX Item "qtsTooMuchDataErr"
.IP "qtsUnknownValueErr" 4
.IX Item "qtsUnknownValueErr"
.IP "qtsTimeoutErr" 4
.IX Item "qtsTimeoutErr"
.IP "qtsConnectionFailedErr" 4
.IX Item "qtsConnectionFailedErr"
.PD
.SH "Gestalt error codes"
.IX Header "Gestalt error codes"
.IP "gestaltUnknownErr" 4
.IX Item "gestaltUnknownErr"
.Vb 1
\& value returned if Gestalt doesn\*(Aqt know the answer
.Ve
.IP "gestaltUndefSelectorErr" 4
.IX Item "gestaltUndefSelectorErr"
.Vb 1
\& undefined selector was passed to Gestalt
.Ve
.IP "gestaltDupSelectorErr" 4
.IX Item "gestaltDupSelectorErr"
.Vb 1
\& tried to add an entry that already existed
.Ve
.IP "menuPropertyInvalidErr" 4
.IX Item "menuPropertyInvalidErr"
.Vb 1
\& invalid property creator
.Ve
.IP "menuPropertyInvalid" 4
.IX Item "menuPropertyInvalid"
.Vb 1
\& "menuPropertyInvalid" is deprecated
.Ve
.IP "menuPropertyNotFoundErr" 4
.IX Item "menuPropertyNotFoundErr"
.Vb 1
\& specified property wasn\*(Aqt found
.Ve
.IP "menuNotFoundErr" 4
.IX Item "menuNotFoundErr"
.Vb 1
\& specified menu or menu ID wasn\*(Aqt found
.Ve
.IP "menuUsesSystemDefErr" 4
.IX Item "menuUsesSystemDefErr"
.Vb 1
\& GetMenuDefinition failed because the menu uses the system MDEF
.Ve
.IP "menuItemNotFoundErr" 4
.IX Item "menuItemNotFoundErr"
.Vb 1
\& specified menu item wasn\*(Aqt found
.Ve
.IP "errInvalidWindowPtr" 4
.IX Item "errInvalidWindowPtr"
.Vb 1
\& tried to pass a bad WindowRef argument
.Ve
.IP "errInvalidWindowRef" 4
.IX Item "errInvalidWindowRef"
.Vb 1
\& tried to pass a bad WindowRef argument
.Ve
.IP "errUnsupportedWindowAttributesForClass" 4
.IX Item "errUnsupportedWindowAttributesForClass"
.Vb 1
\& tried to create a window with WindowAttributes not supported by the WindowClass
.Ve
.IP "errWindowDoesNotHaveProxy" 4
.IX Item "errWindowDoesNotHaveProxy"
.Vb 1
\& tried to do something requiring a proxy to a window which doesn\*(Aqt have a proxy
.Ve
.IP "errInvalidWindowProperty" 4
.IX Item "errInvalidWindowProperty"
.Vb 1
\& tried to access a property tag with private creator
.Ve
.IP "errWindowPropertyNotFound" 4
.IX Item "errWindowPropertyNotFound"
.Vb 1
\& tried to get a nonexistent property
.Ve
.IP "errUnrecognizedWindowClass" 4
.IX Item "errUnrecognizedWindowClass"
.Vb 1
\& tried to create a window with a bad WindowClass
.Ve
.IP "errCorruptWindowDescription" 4
.IX Item "errCorruptWindowDescription"
.Vb 1
\& tried to load a corrupt window description (size or version fields incorrect)
.Ve
.IP "errUserWantsToDragWindow" 4
.IX Item "errUserWantsToDragWindow"
.Vb 1
\& if returned from TrackWindowProxyDrag, you should call DragWindow on the window
.Ve
.IP "errWindowsAlreadyInitialized" 4
.IX Item "errWindowsAlreadyInitialized"
.Vb 1
\& tried to call InitFloatingWindows twice, or called InitWindows and then floating windows
.Ve
.IP "errFloatingWindowsNotInitialized" 4
.IX Item "errFloatingWindowsNotInitialized"
.Vb 1
\& called HideFloatingWindows or ShowFloatingWindows without calling InitFloatingWindows
.Ve
.IP "errWindowNotFound" 4
.IX Item "errWindowNotFound"
.Vb 1
\& returned from FindWindowOfClass
.Ve
.IP "errWindowDoesNotFitOnscreen" 4
.IX Item "errWindowDoesNotFitOnscreen"
.Vb 1
\& ConstrainWindowToScreen could not make the window fit onscreen
.Ve
.IP "windowAttributeImmutableErr" 4
.IX Item "windowAttributeImmutableErr"
.Vb 1
\& tried to change attributes which can\*(Aqt be changed
.Ve
.IP "windowAttributesConflictErr" 4
.IX Item "windowAttributesConflictErr"
.Vb 1
\& passed some attributes that are mutually exclusive
.Ve
.IP "windowManagerInternalErr" 4
.IX Item "windowManagerInternalErr"
.Vb 1
\& something really weird happened inside the window manager
.Ve
.IP "windowWrongStateErr" 4
.IX Item "windowWrongStateErr"
.Vb 1
\& window is not in a state that is valid for the current action
.Ve
.IP "windowGroupInvalidErr" 4
.IX Item "windowGroupInvalidErr"
.Vb 1
\& WindowGroup is invalid
.Ve
.IP "windowAppModalStateAlreadyExistsErr" 4
.IX Item "windowAppModalStateAlreadyExistsErr"
.Vb 1
\& we\*(Aqre already running this window modally
.Ve
.IP "windowNoAppModalStateErr" 4
.IX Item "windowNoAppModalStateErr"
.Vb 1
\& there\*(Aqs no app modal state for the window
.Ve
.IP "errWindowDoesntSupportFocus" 4
.IX Item "errWindowDoesntSupportFocus"
.PD 0
.IP "kNavWrongDialogStateErr" 4
.IX Item "kNavWrongDialogStateErr"
.IP "kNavWrongDialogClassErr" 4
.IX Item "kNavWrongDialogClassErr"
.IP "kNavInvalidSystemConfigErr" 4
.IX Item "kNavInvalidSystemConfigErr"
.IP "kNavCustomControlMessageFailedErr" 4
.IX Item "kNavCustomControlMessageFailedErr"
.IP "kNavInvalidCustomControlMessageErr" 4
.IX Item "kNavInvalidCustomControlMessageErr"
.IP "collectionItemLockedErr" 4
.IX Item "collectionItemLockedErr"
.IP "collectionItemNotFoundErr" 4
.IX Item "collectionItemNotFoundErr"
.IP "collectionIndexRangeErr" 4
.IX Item "collectionIndexRangeErr"
.PD
.SH "Display Manager error codes (\-6220...\-6269)"
.IX Header "Display Manager error codes (-6220...-6269)"
.IP "kDMGenErr" 4
.IX Item "kDMGenErr"
.Vb 2
\& Unexpected Error
\&Mirroring\-Specific Errors
.Ve
.IP "kDMMirroringOnAlready" 4
.IX Item "kDMMirroringOnAlready"
.Vb 1
\& Returned by all calls that need mirroring to be off to do their thing.
.Ve
.IP "kDMWrongNumberOfDisplays" 4
.IX Item "kDMWrongNumberOfDisplays"
.Vb 1
\& Can only handle 2 displays for now.
.Ve
.IP "kDMMirroringBlocked" 4
.IX Item "kDMMirroringBlocked"
.Vb 1
\& DMBlockMirroring() has been called.
.Ve
.IP "kDMCantBlock" 4
.IX Item "kDMCantBlock"
.Vb 1
\& Mirroring is already on, can\*(Aqt Block now (call DMUnMirror() first).
.Ve
.IP "kDMMirroringNotOn" 4
.IX Item "kDMMirroringNotOn"
.Vb 2
\& Returned by all calls that need mirroring to be on to do their thing.
\&Other Display Manager Errors
.Ve
.IP "kSysSWTooOld" 4
.IX Item "kSysSWTooOld"
.Vb 1
\& Missing critical pieces of System Software.
.Ve
.IP "kDMSWNotInitializedErr" 4
.IX Item "kDMSWNotInitializedErr"
.Vb 1
\& Required software not initialized (eg windowmanager or display mgr).
.Ve
.IP "kDMDriverNotDisplayMgrAwareErr" 4
.IX Item "kDMDriverNotDisplayMgrAwareErr"
.Vb 1
\& Video Driver does not support display manager.
.Ve
.IP "kDMDisplayNotFoundErr" 4
.IX Item "kDMDisplayNotFoundErr"
.Vb 1
\& Could not find item (will someday remove).
.Ve
.IP "kDMNotFoundErr" 4
.IX Item "kDMNotFoundErr"
.Vb 1
\& Could not find item.
.Ve
.IP "kDMDisplayAlreadyInstalledErr" 4
.IX Item "kDMDisplayAlreadyInstalledErr"
.Vb 1
\& Attempt to add an already installed display.
.Ve
.IP "kDMMainDisplayCannotMoveErr" 4
.IX Item "kDMMainDisplayCannotMoveErr"
.Vb 1
\& Trying to move main display (or a display mirrored to it)
.Ve
.IP "kDMNoDeviceTableclothErr" 4
.IX Item "kDMNoDeviceTableclothErr"
.Vb 1
\& obsolete
.Ve
.IP "laTooSmallBufferErr" 4
.IX Item "laTooSmallBufferErr"
.Vb 1
\& output buffer is too small to store any result
.Ve
.IP "laEnvironmentBusyErr" 4
.IX Item "laEnvironmentBusyErr"
.Vb 1
\& specified environment is used
.Ve
.IP "laEnvironmentNotFoundErr" 4
.IX Item "laEnvironmentNotFoundErr"
.Vb 1
\& can\*(Aqt fint the specified environment
.Ve
.IP "laEnvironmentExistErr" 4
.IX Item "laEnvironmentExistErr"
.Vb 1
\& same name environment is already exists
.Ve
.IP "laInvalidPathErr" 4
.IX Item "laInvalidPathErr"
.Vb 1
\& path is not correct
.Ve
.IP "laNoMoreMorphemeErr" 4
.IX Item "laNoMoreMorphemeErr"
.Vb 1
\& nothing to read
.Ve
.IP "laFailAnalysisErr" 4
.IX Item "laFailAnalysisErr"
.Vb 1
\& analysis failed
.Ve
.IP "laTextOverFlowErr" 4
.IX Item "laTextOverFlowErr"
.Vb 1
\& text is too long
.Ve
.IP "laDictionaryNotOpenedErr" 4
.IX Item "laDictionaryNotOpenedErr"
.Vb 1
\& the dictionary is not opened
.Ve
.IP "laDictionaryUnknownErr" 4
.IX Item "laDictionaryUnknownErr"
.Vb 1
\& can\*(Aqt use this dictionary with this environment
.Ve
.IP "laDictionaryTooManyErr" 4
.IX Item "laDictionaryTooManyErr"
.Vb 1
\& too many dictionaries
.Ve
.IP "laPropertyValueErr" 4
.IX Item "laPropertyValueErr"
.Vb 1
\& Invalid property value
.Ve
.IP "laPropertyUnknownErr" 4
.IX Item "laPropertyUnknownErr"
.Vb 1
\& the property is unknown to this environment
.Ve
.IP "laPropertyIsReadOnlyErr" 4
.IX Item "laPropertyIsReadOnlyErr"
.Vb 1
\& the property is read only
.Ve
.IP "laPropertyNotFoundErr" 4
.IX Item "laPropertyNotFoundErr"
.Vb 1
\& can\*(Aqt find the property
.Ve
.IP "laPropertyErr" 4
.IX Item "laPropertyErr"
.Vb 1
\& Error in properties
.Ve
.IP "kUSBNoErr" 4
.IX Item "kUSBNoErr"
.PD 0
.IP "kUSBNoTran" 4
.IX Item "kUSBNoTran"
.IP "kUSBNoDelay" 4
.IX Item "kUSBNoDelay"
.IP "kUSBNotSent2Err" 4
.IX Item "kUSBNotSent2Err"
.PD
.Vb 1
\& Transaction not sent
.Ve
.IP "kUSBNotSent1Err" 4
.IX Item "kUSBNotSent1Err"
.Vb 1
\& Transaction not sent
.Ve
.IP "kUSBBufUnderRunErr" 4
.IX Item "kUSBBufUnderRunErr"
.Vb 1
\& Host hardware failure on data out, PCI busy?
.Ve
.IP "kUSBBufOvrRunErr" 4
.IX Item "kUSBBufOvrRunErr"
.Vb 1
\& Host hardware failure on data in, PCI busy?
.Ve
.IP "kUSBRes2Err" 4
.IX Item "kUSBRes2Err"
.PD 0
.IP "kUSBRes1Err" 4
.IX Item "kUSBRes1Err"
.IP "kUSBUnderRunErr" 4
.IX Item "kUSBUnderRunErr"
.PD
.Vb 1
\& Less data than buffer
.Ve
.IP "kUSBOverRunErr" 4
.IX Item "kUSBOverRunErr"
.Vb 1
\& Packet too large or more data than buffer
.Ve
.IP "kUSBWrongPIDErr" 4
.IX Item "kUSBWrongPIDErr"
.Vb 1
\& Pipe stall, Bad or wrong PID
.Ve
.IP "kUSBPIDCheckErr" 4
.IX Item "kUSBPIDCheckErr"
.Vb 1
\& Pipe stall, PID CRC error
.Ve
.IP "kUSBNotRespondingErr" 4
.IX Item "kUSBNotRespondingErr"
.Vb 1
\& Pipe stall, No device, device hung
.Ve
.IP "kUSBEndpointStallErr" 4
.IX Item "kUSBEndpointStallErr"
.Vb 1
\& Device didn\*(Aqt understand
.Ve
.IP "kUSBDataToggleErr" 4
.IX Item "kUSBDataToggleErr"
.Vb 1
\& Pipe stall, Bad data toggle
.Ve
.IP "kUSBBitstufErr" 4
.IX Item "kUSBBitstufErr"
.Vb 1
\& Pipe stall, bitstuffing
.Ve
.IP "kUSBCRCErr" 4
.IX Item "kUSBCRCErr"
.Vb 1
\& Pipe stall, bad CRC
.Ve
.IP "kUSBQueueFull" 4
.IX Item "kUSBQueueFull"
.Vb 1
\& Internal queue maxxed
.Ve
.IP "kUSBNotHandled" 4
.IX Item "kUSBNotHandled"
.Vb 1
\& Notification was not handled   (same as NotFound)
.Ve
.IP "kUSBUnknownNotification" 4
.IX Item "kUSBUnknownNotification"
.Vb 1
\& Notification type not defined
.Ve
.IP "kUSBInternalReserved10" 4
.IX Item "kUSBInternalReserved10"
.PD 0
.IP "kUSBInternalReserved9" 4
.IX Item "kUSBInternalReserved9"
.IP "kUSBInternalReserved8" 4
.IX Item "kUSBInternalReserved8"
.IP "kUSBInternalReserved7" 4
.IX Item "kUSBInternalReserved7"
.IP "kUSBInternalReserved6" 4
.IX Item "kUSBInternalReserved6"
.IP "kUSBInternalReserved5" 4
.IX Item "kUSBInternalReserved5"
.IP "kUSBInternalReserved4" 4
.IX Item "kUSBInternalReserved4"
.IP "kUSBInternalReserved3" 4
.IX Item "kUSBInternalReserved3"
.IP "kUSBInternalReserved2" 4
.IX Item "kUSBInternalReserved2"
.IP "kUSBPortDisabled" 4
.IX Item "kUSBPortDisabled"
.PD
.Vb 1
\& The port you are attached to is disabled, use USBDeviceReset.
.Ve
.IP "kUSBQueueAborted" 4
.IX Item "kUSBQueueAborted"
.Vb 1
\& Pipe zero stall cleared.
.Ve
.IP "kUSBTimedOut" 4
.IX Item "kUSBTimedOut"
.Vb 1
\& Transaction timed out.
.Ve
.IP "kUSBDeviceDisconnected" 4
.IX Item "kUSBDeviceDisconnected"
.Vb 1
\& Disconnected during suspend or reset
.Ve
.IP "kUSBDeviceNotSuspended" 4
.IX Item "kUSBDeviceNotSuspended"
.Vb 1
\& device is not suspended for resume
.Ve
.IP "kUSBDeviceSuspended" 4
.IX Item "kUSBDeviceSuspended"
.Vb 1
\& Device is suspended
.Ve
.IP "kUSBInvalidBuffer" 4
.IX Item "kUSBInvalidBuffer"
.Vb 1
\& bad buffer, usually nil
.Ve
.IP "kUSBDevicePowerProblem" 4
.IX Item "kUSBDevicePowerProblem"
.Vb 1
\& Device has a power problem
.Ve
.IP "kUSBDeviceBusy" 4
.IX Item "kUSBDeviceBusy"
.Vb 1
\& Device is already being configured
.Ve
.IP "kUSBUnknownInterfaceErr" 4
.IX Item "kUSBUnknownInterfaceErr"
.Vb 1
\& Interface ref not recognised
.Ve
.IP "kUSBPipeStalledError" 4
.IX Item "kUSBPipeStalledError"
.Vb 1
\& Pipe has stalled, error needs to be cleared
.Ve
.IP "kUSBPipeIdleError" 4
.IX Item "kUSBPipeIdleError"
.Vb 1
\& Pipe is Idle, it will not accept transactions
.Ve
.IP "kUSBNoBandwidthError" 4
.IX Item "kUSBNoBandwidthError"
.Vb 1
\& Not enough bandwidth available
.Ve
.IP "kUSBAbortedError" 4
.IX Item "kUSBAbortedError"
.Vb 1
\& Pipe aborted
.Ve
.IP "kUSBFlagsError" 4
.IX Item "kUSBFlagsError"
.Vb 1
\& Unused flags not zeroed
.Ve
.IP "kUSBCompletionError" 4
.IX Item "kUSBCompletionError"
.Vb 1
\& no completion routine specified
.Ve
.IP "kUSBPBLengthError" 4
.IX Item "kUSBPBLengthError"
.Vb 1
\& pbLength too small
.Ve
.IP "kUSBPBVersionError" 4
.IX Item "kUSBPBVersionError"
.Vb 1
\& Wrong pbVersion
.Ve
.IP "kUSBNotFound" 4
.IX Item "kUSBNotFound"
.Vb 1
\& Not found
.Ve
.IP "kUSBOutOfMemoryErr" 4
.IX Item "kUSBOutOfMemoryErr"
.Vb 1
\& Out of memory
.Ve
.IP "kUSBDeviceErr" 4
.IX Item "kUSBDeviceErr"
.Vb 1
\& Device error
.Ve
.IP "kUSBNoDeviceErr" 4
.IX Item "kUSBNoDeviceErr"
.Vb 1
\& No device
.Ve
.IP "kUSBAlreadyOpenErr" 4
.IX Item "kUSBAlreadyOpenErr"
.Vb 1
\& Already open
.Ve
.IP "kUSBTooManyTransactionsErr" 4
.IX Item "kUSBTooManyTransactionsErr"
.Vb 1
\& Too many transactions
.Ve
.IP "kUSBUnknownRequestErr" 4
.IX Item "kUSBUnknownRequestErr"
.Vb 1
\& Unknown request
.Ve
.IP "kUSBRqErr" 4
.IX Item "kUSBRqErr"
.Vb 1
\& Request error
.Ve
.IP "kUSBIncorrectTypeErr" 4
.IX Item "kUSBIncorrectTypeErr"
.Vb 1
\& Incorrect type
.Ve
.IP "kUSBTooManyPipesErr" 4
.IX Item "kUSBTooManyPipesErr"
.Vb 1
\& Too many pipes
.Ve
.IP "kUSBUnknownPipeErr" 4
.IX Item "kUSBUnknownPipeErr"
.Vb 1
\& Pipe ref not recognised
.Ve
.IP "kUSBUnknownDeviceErr" 4
.IX Item "kUSBUnknownDeviceErr"
.Vb 1
\& device ref not recognised
.Ve
.IP "dcmParamErr" 4
.IX Item "dcmParamErr"
.Vb 1
\& bad parameter
.Ve
.IP "dcmNotDictionaryErr" 4
.IX Item "dcmNotDictionaryErr"
.Vb 1
\& not dictionary
.Ve
.IP "dcmBadDictionaryErr" 4
.IX Item "dcmBadDictionaryErr"
.Vb 1
\& invalid dictionary
.Ve
.IP "dcmPermissionErr" 4
.IX Item "dcmPermissionErr"
.Vb 1
\& invalid permission
.Ve
.IP "dcmDictionaryNotOpenErr" 4
.IX Item "dcmDictionaryNotOpenErr"
.Vb 1
\& dictionary not opened
.Ve
.IP "dcmDictionaryBusyErr" 4
.IX Item "dcmDictionaryBusyErr"
.Vb 1
\& dictionary is busy
.Ve
.IP "dcmBlockFullErr" 4
.IX Item "dcmBlockFullErr"
.Vb 1
\& dictionary block full
.Ve
.IP "dcmNoRecordErr" 4
.IX Item "dcmNoRecordErr"
.Vb 1
\& no such record
.Ve
.IP "dcmDupRecordErr" 4
.IX Item "dcmDupRecordErr"
.Vb 1
\& same record already exist
.Ve
.IP "dcmNecessaryFieldErr" 4
.IX Item "dcmNecessaryFieldErr"
.Vb 1
\& lack required/identify field
.Ve
.IP "dcmBadFieldInfoErr" 4
.IX Item "dcmBadFieldInfoErr"
.Vb 1
\& incomplete information
.Ve
.IP "dcmBadFieldTypeErr" 4
.IX Item "dcmBadFieldTypeErr"
.Vb 1
\& no such field type supported
.Ve
.IP "dcmNoFieldErr" 4
.IX Item "dcmNoFieldErr"
.Vb 1
\& no such field exist
.Ve
.IP "dcmBadKeyErr" 4
.IX Item "dcmBadKeyErr"
.Vb 1
\& bad key information
.Ve
.IP "dcmTooManyKeyErr" 4
.IX Item "dcmTooManyKeyErr"
.Vb 1
\& too many key field
.Ve
.IP "dcmBadDataSizeErr" 4
.IX Item "dcmBadDataSizeErr"
.Vb 1
\& too big data size
.Ve
.IP "dcmBadFindMethodErr" 4
.IX Item "dcmBadFindMethodErr"
.Vb 1
\& no such find method supported
.Ve
.IP "dcmBadPropertyErr" 4
.IX Item "dcmBadPropertyErr"
.Vb 1
\& no such property exist
.Ve
.IP "dcmProtectedErr" 4
.IX Item "dcmProtectedErr"
.Vb 1
\& need keyword to use dictionary
.Ve
.IP "dcmNoAccessMethodErr" 4
.IX Item "dcmNoAccessMethodErr"
.Vb 1
\& no such AccessMethod
.Ve
.IP "dcmBadFeatureErr" 4
.IX Item "dcmBadFeatureErr"
.Vb 1
\& invalid AccessMethod feature
.Ve
.IP "dcmIterationCompleteErr" 4
.IX Item "dcmIterationCompleteErr"
.Vb 1
\& no more item in iterator
.Ve
.IP "kRAInvalidParameter" 4
.IX Item "kRAInvalidParameter"
.PD 0
.IP "kRAInvalidPort" 4
.IX Item "kRAInvalidPort"
.IP "kRAStartupFailed" 4
.IX Item "kRAStartupFailed"
.IP "kRAPortSetupFailed" 4
.IX Item "kRAPortSetupFailed"
.IP "kRAOutOfMemory" 4
.IX Item "kRAOutOfMemory"
.IP "kRANotSupported" 4
.IX Item "kRANotSupported"
.IP "kRAMissingResources" 4
.IX Item "kRAMissingResources"
.IP "kRAIncompatiblePrefs" 4
.IX Item "kRAIncompatiblePrefs"
.IP "kRANotConnected" 4
.IX Item "kRANotConnected"
.IP "kRAConnectionCanceled" 4
.IX Item "kRAConnectionCanceled"
.IP "kRAUnknownUser" 4
.IX Item "kRAUnknownUser"
.IP "kRAInvalidPassword" 4
.IX Item "kRAInvalidPassword"
.IP "kRAInternalError" 4
.IX Item "kRAInternalError"
.IP "kRAInstallationDamaged" 4
.IX Item "kRAInstallationDamaged"
.IP "kRAPortBusy" 4
.IX Item "kRAPortBusy"
.IP "kRAUnknownPortState" 4
.IX Item "kRAUnknownPortState"
.IP "kRAInvalidPortState" 4
.IX Item "kRAInvalidPortState"
.IP "kRAInvalidSerialProtocol" 4
.IX Item "kRAInvalidSerialProtocol"
.IP "kRAUserLoginDisabled" 4
.IX Item "kRAUserLoginDisabled"
.IP "kRAUserPwdChangeRequired" 4
.IX Item "kRAUserPwdChangeRequired"
.IP "kRAUserPwdEntryRequired" 4
.IX Item "kRAUserPwdEntryRequired"
.IP "kRAUserInteractionRequired" 4
.IX Item "kRAUserInteractionRequired"
.IP "kRAInitOpenTransportFailed" 4
.IX Item "kRAInitOpenTransportFailed"
.IP "kRARemoteAccessNotReady" 4
.IX Item "kRARemoteAccessNotReady"
.IP "kRATCPIPInactive" 4
.IX Item "kRATCPIPInactive"
.PD
.Vb 1
\& TCP/IP inactive, cannot be loaded
.Ve
.IP "kRATCPIPNotConfigured" 4
.IX Item "kRATCPIPNotConfigured"
.Vb 1
\& TCP/IP not configured, could be loaded
.Ve
.IP "kRANotPrimaryInterface" 4
.IX Item "kRANotPrimaryInterface"
.Vb 1
\& when IPCP is not primary TCP/IP intf.
.Ve
.IP "kRAConfigurationDBInitErr" 4
.IX Item "kRAConfigurationDBInitErr"
.PD 0
.IP "kRAPPPProtocolRejected" 4
.IX Item "kRAPPPProtocolRejected"
.IP "kRAPPPAuthenticationFailed" 4
.IX Item "kRAPPPAuthenticationFailed"
.IP "kRAPPPNegotiationFailed" 4
.IX Item "kRAPPPNegotiationFailed"
.IP "kRAPPPUserDisconnected" 4
.IX Item "kRAPPPUserDisconnected"
.IP "kRAPPPPeerDisconnected" 4
.IX Item "kRAPPPPeerDisconnected"
.IP "kRAPeerNotResponding" 4
.IX Item "kRAPeerNotResponding"
.IP "kRAATalkInactive" 4
.IX Item "kRAATalkInactive"
.IP "kRAExtAuthenticationFailed" 4
.IX Item "kRAExtAuthenticationFailed"
.IP "kRANCPRejectedbyPeer" 4
.IX Item "kRANCPRejectedbyPeer"
.IP "kRADuplicateIPAddr" 4
.IX Item "kRADuplicateIPAddr"
.IP "kRACallBackFailed" 4
.IX Item "kRACallBackFailed"
.IP "kATSUInvalidTextLayoutErr" 4
.IX Item "kATSUInvalidTextLayoutErr"
.PD
.Vb 2
\& An attempt was made to use a ATSUTextLayout
\&which hadn\*(Aqt been initialized or is otherwise
.Ve
.IP "kATSUInvalidStyleErr" 4
.IX Item "kATSUInvalidStyleErr"
.Vb 2
\& An attempt was made to use a ATSUStyle which
\&hadn\*(Aqt been properly allocated or is otherwise
.Ve
.IP "kATSUInvalidTextRangeErr" 4
.IX Item "kATSUInvalidTextRangeErr"
.Vb 2
\& An attempt was made to extract information
\&from or perform an operation on a ATSUTextLayout
.Ve
.IP "kATSUFontsMatched" 4
.IX Item "kATSUFontsMatched"
.Vb 2
\& This is not an error code but is returned by
\&ATSUMatchFontsToText() when changes need to
.Ve
.IP "kATSUFontsNotMatched" 4
.IX Item "kATSUFontsNotMatched"
.Vb 2
\& This value is returned by ATSUMatchFontsToText()
\&when the text contains Unicode characters which
.Ve
.IP "kATSUNoCorrespondingFontErr" 4
.IX Item "kATSUNoCorrespondingFontErr"
.Vb 2
\& This value is retrned by font ID conversion
\&routines ATSUFONDtoFontID() and ATSUFontIDtoFOND()
.Ve
.IP "kATSUInvalidFontErr" 4
.IX Item "kATSUInvalidFontErr"
.Vb 1
\& Used when an attempt was made to use an invalid font ID.
.Ve
.IP "kATSUInvalidAttributeValueErr" 4
.IX Item "kATSUInvalidAttributeValueErr"
.Vb 2
\& Used when an attempt was made to use an attribute with
\&a bad or undefined value.
.Ve
.IP "kATSUInvalidAttributeSizeErr" 4
.IX Item "kATSUInvalidAttributeSizeErr"
.Vb 2
\& Used when an attempt was made to use an attribute with a
\&bad size.
.Ve
.IP "kATSUInvalidAttributeTagErr" 4
.IX Item "kATSUInvalidAttributeTagErr"
.Vb 2
\& Used when an attempt was made to use a tag value that
\&was not appropriate for the function call it was used.
.Ve
.IP "kATSUInvalidCacheErr" 4
.IX Item "kATSUInvalidCacheErr"
.Vb 2
\& Used when an attempt was made to read in style data
\&from an invalid cache.  Either the format of the
.Ve
.IP "kATSUNotSetErr" 4
.IX Item "kATSUNotSetErr"
.Vb 2
\& Used when the client attempts to retrieve an attribute,
\&font feature, or font variation from a style when it
.Ve
.IP "kATSUNoStyleRunsAssignedErr" 4
.IX Item "kATSUNoStyleRunsAssignedErr"
.Vb 2
\& Used when an attempt was made to measure, highlight or draw
\&a ATSUTextLayout object that has no styleRuns associated with it.
.Ve
.IP "kATSUQuickDrawTextErr" 4
.IX Item "kATSUQuickDrawTextErr"
.Vb 2
\& Used when QuickDraw Text encounters an error rendering or measuring
\&a line of ATSUI text.
.Ve
.IP "kATSULowLevelErr" 4
.IX Item "kATSULowLevelErr"
.Vb 2
\& Used when an error was encountered within the low level ATS
\&mechanism performing an operation requested by ATSUI.
.Ve
.IP "kATSUNoFontCmapAvailableErr" 4
.IX Item "kATSUNoFontCmapAvailableErr"
.Vb 2
\& Used when no CMAP table can be accessed or synthesized for the
\&font passed into a SetAttributes Font call.
.Ve
.IP "kATSUNoFontScalerAvailableErr" 4
.IX Item "kATSUNoFontScalerAvailableErr"
.Vb 2
\& Used when no font scaler is available for the font passed
\&into a SetAttributes Font call.
.Ve
.IP "kATSUCoordinateOverflowErr" 4
.IX Item "kATSUCoordinateOverflowErr"
.Vb 2
\& Used to indicate the coordinates provided to an ATSUI routine caused
\&a coordinate overflow (i.e. > 32K).
.Ve
.IP "kATSULineBreakInWord" 4
.IX Item "kATSULineBreakInWord"
.Vb 2
\& This is not an error code but is returned by ATSUBreakLine to
\&indicate that the returned offset is within a word since there was
.Ve
.IP "kATSUBusyObjectErr" 4
.IX Item "kATSUBusyObjectErr"
.Vb 1
\& An ATSUI object is being used by another thread
.Ve
.IP "kATSUInvalidFontFallbacksErr" 4
.IX Item "kATSUInvalidFontFallbacksErr"
.Vb 2
\& An attempt was made to use a ATSUFontFallbacks
\&which hadn\*(Aqt been initialized or is otherwise
.Ve
.SH "general text errors"
.IX Header "general text errors"
.IP "kTextUnsupportedEncodingErr" 4
.IX Item "kTextUnsupportedEncodingErr"
.Vb 1
\& specified encoding not supported for this operation
.Ve
.IP "kTextMalformedInputErr" 4
.IX Item "kTextMalformedInputErr"
.Vb 1
\& in DBCS, for example, high byte followed by invalid low byte
.Ve
.IP "kTextUndefinedElementErr" 4
.IX Item "kTextUndefinedElementErr"
.Vb 1
\& text conversion errors
.Ve
.IP "kTECMissingTableErr" 4
.IX Item "kTECMissingTableErr"
.PD 0
.IP "kTECTableChecksumErr" 4
.IX Item "kTECTableChecksumErr"
.IP "kTECTableFormatErr" 4
.IX Item "kTECTableFormatErr"
.IP "kTECCorruptConverterErr" 4
.IX Item "kTECCorruptConverterErr"
.PD
.Vb 1
\& invalid converter object reference
.Ve
.IP "kTECNoConversionPathErr" 4
.IX Item "kTECNoConversionPathErr"
.PD 0
.IP "kTECBufferBelowMinimumSizeErr" 4
.IX Item "kTECBufferBelowMinimumSizeErr"
.PD
.Vb 1
\& output buffer too small to allow processing of first input text element
.Ve
.IP "kTECArrayFullErr" 4
.IX Item "kTECArrayFullErr"
.Vb 1
\& supplied name buffer or TextRun, TextEncoding, or UnicodeMapping array is too small
.Ve
.IP "kTECBadTextRunErr" 4
.IX Item "kTECBadTextRunErr"
.PD 0
.IP "kTECPartialCharErr" 4
.IX Item "kTECPartialCharErr"
.PD
.Vb 1
\& input buffer ends in the middle of a multibyte character, conversion stopped
.Ve
.IP "kTECUnmappableElementErr" 4
.IX Item "kTECUnmappableElementErr"
.PD 0
.IP "kTECIncompleteElementErr" 4
.IX Item "kTECIncompleteElementErr"
.PD
.Vb 1
\& text element may be incomplete or is too long for internal buffers
.Ve
.IP "kTECDirectionErr" 4
.IX Item "kTECDirectionErr"
.Vb 1
\& direction stack overflow, etc.
.Ve
.IP "kTECGlobalsUnavailableErr" 4
.IX Item "kTECGlobalsUnavailableErr"
.Vb 1
\& globals have already been deallocated (premature TERM)
.Ve
.IP "kTECItemUnavailableErr" 4
.IX Item "kTECItemUnavailableErr"
.Vb 2
\& item (e.g. name) not available for specified region (& encoding if relevant)
\&text conversion status codes
.Ve
.IP "kTECUsedFallbacksStatus" 4
.IX Item "kTECUsedFallbacksStatus"
.PD 0
.IP "kTECNeedFlushStatus" 4
.IX Item "kTECNeedFlushStatus"
.IP "kTECOutputBufferFullStatus" 4
.IX Item "kTECOutputBufferFullStatus"
.PD
.Vb 2
\& output buffer has no room for conversion of next input text element (partial conversion)
\&deprecated error & status codes for low\-level converter
.Ve
.IP "unicodeChecksumErr" 4
.IX Item "unicodeChecksumErr"
.PD 0
.IP "unicodeNoTableErr" 4
.IX Item "unicodeNoTableErr"
.IP "unicodeVariantErr" 4
.IX Item "unicodeVariantErr"
.IP "unicodeFallbacksErr" 4
.IX Item "unicodeFallbacksErr"
.IP "unicodePartConvertErr" 4
.IX Item "unicodePartConvertErr"
.IP "unicodeBufErr" 4
.IX Item "unicodeBufErr"
.IP "unicodeCharErr" 4
.IX Item "unicodeCharErr"
.IP "unicodeElementErr" 4
.IX Item "unicodeElementErr"
.IP "unicodeNotFoundErr" 4
.IX Item "unicodeNotFoundErr"
.IP "unicodeTableFormatErr" 4
.IX Item "unicodeTableFormatErr"
.IP "unicodeDirectionErr" 4
.IX Item "unicodeDirectionErr"
.IP "unicodeContextualErr" 4
.IX Item "unicodeContextualErr"
.IP "kUTCUnderflowErr" 4
.IX Item "kUTCUnderflowErr"
.IP "kUTCOverflowErr" 4
.IX Item "kUTCOverflowErr"
.IP "codecErr" 4
.IX Item "codecErr"
.IP "noCodecErr" 4
.IX Item "noCodecErr"
.IP "codecUnimpErr" 4
.IX Item "codecUnimpErr"
.IP "codecSizeErr" 4
.IX Item "codecSizeErr"
.IP "codecScreenBufErr" 4
.IX Item "codecScreenBufErr"
.IP "codecImageBufErr" 4
.IX Item "codecImageBufErr"
.IP "codecSpoolErr" 4
.IX Item "codecSpoolErr"
.IP "codecAbortErr" 4
.IX Item "codecAbortErr"
.IP "codecWouldOffscreenErr" 4
.IX Item "codecWouldOffscreenErr"
.IP "codecBadDataErr" 4
.IX Item "codecBadDataErr"
.IP "codecDataVersErr" 4
.IX Item "codecDataVersErr"
.IP "codecExtensionNotFoundErr" 4
.IX Item "codecExtensionNotFoundErr"
.IP "scTypeNotFoundErr" 4
.IX Item "scTypeNotFoundErr"
.IP "codecConditionErr" 4
.IX Item "codecConditionErr"
.IP "codecOpenErr" 4
.IX Item "codecOpenErr"
.IP "codecCantWhenErr" 4
.IX Item "codecCantWhenErr"
.IP "codecCantQueueErr" 4
.IX Item "codecCantQueueErr"
.IP "codecNothingToBlitErr" 4
.IX Item "codecNothingToBlitErr"
.IP "codecNoMemoryPleaseWaitErr" 4
.IX Item "codecNoMemoryPleaseWaitErr"
.IP "codecDisabledErr" 4
.IX Item "codecDisabledErr"
.PD
.Vb 1
\& codec disabled itself \-\- pass codecFlagReenable to reset
.Ve
.IP "codecNeedToFlushChainErr" 4
.IX Item "codecNeedToFlushChainErr"
.PD 0
.IP "lockPortBitsBadSurfaceErr" 4
.IX Item "lockPortBitsBadSurfaceErr"
.IP "lockPortBitsWindowMovedErr" 4
.IX Item "lockPortBitsWindowMovedErr"
.IP "lockPortBitsWindowResizedErr" 4
.IX Item "lockPortBitsWindowResizedErr"
.IP "lockPortBitsWindowClippedErr" 4
.IX Item "lockPortBitsWindowClippedErr"
.IP "lockPortBitsBadPortErr" 4
.IX Item "lockPortBitsBadPortErr"
.IP "lockPortBitsSurfaceLostErr" 4
.IX Item "lockPortBitsSurfaceLostErr"
.IP "codecParameterDialogConfirm" 4
.IX Item "codecParameterDialogConfirm"
.IP "codecNeedAccessKeyErr" 4
.IX Item "codecNeedAccessKeyErr"
.PD
.Vb 1
\& codec needs password in order to decompress
.Ve
.IP "codecOffscreenFailedErr" 4
.IX Item "codecOffscreenFailedErr"
.PD 0
.IP "codecDroppedFrameErr" 4
.IX Item "codecDroppedFrameErr"
.PD
.Vb 1
\& returned from ImageCodecDrawBand
.Ve
.IP "directXObjectAlreadyExists" 4
.IX Item "directXObjectAlreadyExists"
.PD 0
.IP "lockPortBitsWrongGDeviceErr" 4
.IX Item "lockPortBitsWrongGDeviceErr"
.IP "kBadAdapterErr" 4
.IX Item "kBadAdapterErr"
.PD
.Vb 1
\& invalid adapter number
.Ve
.IP "kBadAttributeErr" 4
.IX Item "kBadAttributeErr"
.Vb 1
\& specified attributes field value is invalid
.Ve
.IP "kBadBaseErr" 4
.IX Item "kBadBaseErr"
.Vb 1
\& specified base system memory address is invalid
.Ve
.IP "kBadEDCErr" 4
.IX Item "kBadEDCErr"
.Vb 1
\& specified EDC generator specified is invalid
.Ve
.IP "kBadIRQErr" 4
.IX Item "kBadIRQErr"
.Vb 1
\& specified IRQ level is invalid
.Ve
.IP "kBadOffsetErr" 4
.IX Item "kBadOffsetErr"
.Vb 1
\& specified PC card memory array offset is invalid
.Ve
.IP "kBadPageErr" 4
.IX Item "kBadPageErr"
.Vb 1
\& specified page is invalid
.Ve
.IP "kBadSizeErr" 4
.IX Item "kBadSizeErr"
.Vb 1
\& specified size is invalid
.Ve
.IP "kBadSocketErr" 4
.IX Item "kBadSocketErr"
.Vb 1
\& specified logical or physical socket number is invalid
.Ve
.IP "kBadTypeErr" 4
.IX Item "kBadTypeErr"
.Vb 1
\& specified window or interface type is invalid
.Ve
.IP "kBadVccErr" 4
.IX Item "kBadVccErr"
.Vb 1
\& specified Vcc power level index is invalid
.Ve
.IP "kBadVppErr" 4
.IX Item "kBadVppErr"
.Vb 1
\& specified Vpp1 or Vpp2 power level index is invalid
.Ve
.IP "kBadWindowErr" 4
.IX Item "kBadWindowErr"
.Vb 1
\& specified window is invalid
.Ve
.IP "kBadArgLengthErr" 4
.IX Item "kBadArgLengthErr"
.Vb 1
\& ArgLength argument is invalid
.Ve
.IP "kBadArgsErr" 4
.IX Item "kBadArgsErr"
.Vb 1
\& values in argument packet are invalid
.Ve
.IP "kBadHandleErr" 4
.IX Item "kBadHandleErr"
.Vb 1
\& clientHandle is invalid
.Ve
.IP "kBadCISErr" 4
.IX Item "kBadCISErr"
.Vb 1
\& CIS on card is invalid
.Ve
.IP "kBadSpeedErr" 4
.IX Item "kBadSpeedErr"
.Vb 1
\& specified speed is unavailable
.Ve
.IP "kReadFailureErr" 4
.IX Item "kReadFailureErr"
.Vb 1
\& unable to complete read request
.Ve
.IP "kWriteFailureErr" 4
.IX Item "kWriteFailureErr"
.Vb 1
\& unable to complete write request
.Ve
.IP "kGeneralFailureErr" 4
.IX Item "kGeneralFailureErr"
.Vb 1
\& an undefined error has occurred
.Ve
.IP "kNoCardErr" 4
.IX Item "kNoCardErr"
.Vb 1
\& no PC card in the socket
.Ve
.IP "kUnsupportedFunctionErr" 4
.IX Item "kUnsupportedFunctionErr"
.Vb 1
\& function is not supported by this implementation
.Ve
.IP "kUnsupportedModeErr" 4
.IX Item "kUnsupportedModeErr"
.Vb 1
\& mode is not supported
.Ve
.IP "kBusyErr" 4
.IX Item "kBusyErr"
.Vb 1
\& unable to process request at this time \- try later
.Ve
.IP "kWriteProtectedErr" 4
.IX Item "kWriteProtectedErr"
.Vb 1
\& media is write\-protected
.Ve
.IP "kConfigurationLockedErr" 4
.IX Item "kConfigurationLockedErr"
.Vb 1
\& a configuration has already been locked
.Ve
.IP "kInUseErr" 4
.IX Item "kInUseErr"
.Vb 1
\& requested resource is being used by a client
.Ve
.IP "kNoMoreItemsErr" 4
.IX Item "kNoMoreItemsErr"
.Vb 1
\& there are no more of the requested item
.Ve
.IP "kOutOfResourceErr" 4
.IX Item "kOutOfResourceErr"
.Vb 1
\& Card Services has exhausted the resource
.Ve
.IP "kNoCardSevicesSocketsErr" 4
.IX Item "kNoCardSevicesSocketsErr"
.PD 0
.IP "kInvalidRegEntryErr" 4
.IX Item "kInvalidRegEntryErr"
.IP "kBadLinkErr" 4
.IX Item "kBadLinkErr"
.IP "kBadDeviceErr" 4
.IX Item "kBadDeviceErr"
.IP "k16BitCardErr" 4
.IX Item "k16BitCardErr"
.IP "kCardBusCardErr" 4
.IX Item "kCardBusCardErr"
.IP "kPassCallToChainErr" 4
.IX Item "kPassCallToChainErr"
.IP "kCantConfigureCardErr" 4
.IX Item "kCantConfigureCardErr"
.IP "kPostCardEventErr" 4
.IX Item "kPostCardEventErr"
.PD
.Vb 1
\& _PCCSLPostCardEvent failed and dropped an event
.Ve
.IP "kInvalidDeviceNumber" 4
.IX Item "kInvalidDeviceNumber"
.PD 0
.IP "kUnsupportedVsErr" 4
.IX Item "kUnsupportedVsErr"
.PD
.Vb 1
\& Unsupported Voltage Sense
.Ve
.IP "kInvalidCSClientErr" 4
.IX Item "kInvalidCSClientErr"
.Vb 1
\& Card Services ClientID is not registered
.Ve
.IP "kBadTupleDataErr" 4
.IX Item "kBadTupleDataErr"
.Vb 1
\& Data in tuple is invalid
.Ve
.IP "kBadCustomIFIDErr" 4
.IX Item "kBadCustomIFIDErr"
.Vb 1
\& Custom interface ID is invalid
.Ve
.IP "kNoIOWindowRequestedErr" 4
.IX Item "kNoIOWindowRequestedErr"
.Vb 1
\& Request I/O window before calling configuration
.Ve
.IP "kNoMoreTimerClientsErr" 4
.IX Item "kNoMoreTimerClientsErr"
.Vb 1
\& All timer callbacks are in use
.Ve
.IP "kNoMoreInterruptSlotsErr" 4
.IX Item "kNoMoreInterruptSlotsErr"
.Vb 1
\& All internal Interrupt slots are in use
.Ve
.IP "kNoClientTableErr" 4
.IX Item "kNoClientTableErr"
.Vb 1
\& The client table has not be initialized yet
.Ve
.IP "kUnsupportedCardErr" 4
.IX Item "kUnsupportedCardErr"
.Vb 1
\& Card not supported by generic enabler
.Ve
.IP "kNoCardEnablersFoundErr" 4
.IX Item "kNoCardEnablersFoundErr"
.Vb 1
\& No Enablers were found
.Ve
.IP "kNoEnablerForCardErr" 4
.IX Item "kNoEnablerForCardErr"
.Vb 1
\& No Enablers were found that can support the card
.Ve
.IP "kNoCompatibleNameErr" 4
.IX Item "kNoCompatibleNameErr"
.Vb 1
\& There is no compatible driver name for this device
.Ve
.IP "kClientRequestDenied" 4
.IX Item "kClientRequestDenied"
.Vb 2
\& CS Clients should return this code inorder to
\&deny a request\-type CS Event
.Ve
.IP "kNotReadyErr" 4
.IX Item "kNotReadyErr"
.Vb 1
\& PC Card failed to go ready
.Ve
.IP "kTooManyIOWindowsErr" 4
.IX Item "kTooManyIOWindowsErr"
.Vb 1
\& device requested more than one I/O window
.Ve
.IP "kAlreadySavedStateErr" 4
.IX Item "kAlreadySavedStateErr"
.Vb 1
\& The state has been saved on previous call
.Ve
.IP "kAttemptDupCardEntryErr" 4
.IX Item "kAttemptDupCardEntryErr"
.Vb 1
\& The Enabler was asked to create a duplicate card entry
.Ve
.IP "kCardPowerOffErr" 4
.IX Item "kCardPowerOffErr"
.Vb 1
\& Power to the card has been turned off
.Ve
.IP "kNotZVCapableErr" 4
.IX Item "kNotZVCapableErr"
.Vb 1
\& This socket does not support Zoomed Video
.Ve
.IP "noDeviceForChannel" 4
.IX Item "noDeviceForChannel"
.PD 0
.IP "grabTimeComplete" 4
.IX Item "grabTimeComplete"
.IP "cantDoThatInCurrentMode" 4
.IX Item "cantDoThatInCurrentMode"
.IP "notEnoughMemoryToGrab" 4
.IX Item "notEnoughMemoryToGrab"
.IP "notEnoughDiskSpaceToGrab" 4
.IX Item "notEnoughDiskSpaceToGrab"
.IP "couldntGetRequiredComponent" 4
.IX Item "couldntGetRequiredComponent"
.IP "badSGChannel" 4
.IX Item "badSGChannel"
.IP "seqGrabInfoNotAvailable" 4
.IX Item "seqGrabInfoNotAvailable"
.IP "deviceCantMeetRequest" 4
.IX Item "deviceCantMeetRequest"
.IP "badControllerHeight" 4
.IX Item "badControllerHeight"
.IP "editingNotAllowed" 4
.IX Item "editingNotAllowed"
.IP "controllerBoundsNotExact" 4
.IX Item "controllerBoundsNotExact"
.IP "cannotSetWidthOfAttachedController" 4
.IX Item "cannotSetWidthOfAttachedController"
.IP "controllerHasFixedHeight" 4
.IX Item "controllerHasFixedHeight"
.IP "errAEBadKeyForm" 4
.IX Item "errAEBadKeyForm"
.IP "errAECantHandleClass" 4
.IX Item "errAECantHandleClass"
.IP "errAECantSupplyType" 4
.IX Item "errAECantSupplyType"
.IP "errAECantUndo" 4
.IX Item "errAECantUndo"
.IP "errAEEventFailed" 4
.IX Item "errAEEventFailed"
.IP "errAEIndexTooLarge" 4
.IX Item "errAEIndexTooLarge"
.IP "errAEInTransaction" 4
.IX Item "errAEInTransaction"
.IP "errAELocalOnly" 4
.IX Item "errAELocalOnly"
.IP "errAENoSuchTransaction" 4
.IX Item "errAENoSuchTransaction"
.IP "errAENotAnElement" 4
.IX Item "errAENotAnElement"
.IP "errAENotASingleObject" 4
.IX Item "errAENotASingleObject"
.IP "errAENotModifiable" 4
.IX Item "errAENotModifiable"
.IP "errAENoUserSelection" 4
.IX Item "errAENoUserSelection"
.IP "errAEPrivilegeError" 4
.IX Item "errAEPrivilegeError"
.IP "errAEReadDenied" 4
.IX Item "errAEReadDenied"
.IP "errAETypeError" 4
.IX Item "errAETypeError"
.IP "errAEWriteDenied" 4
.IX Item "errAEWriteDenied"
.IP "errAENotAnEnumMember" 4
.IX Item "errAENotAnEnumMember"
.PD
.Vb 1
\& enumerated value in SetData is not allowed for this property
.Ve
.IP "errAECantPutThatThere" 4
.IX Item "errAECantPutThatThere"
.Vb 1
\& in make new, duplicate, etc. class can\*(Aqt be an element of container
.Ve
.IP "telGenericError" 4
.IX Item "telGenericError"
.PD 0
.IP "telNoErr" 4
.IX Item "telNoErr"
.IP "telNoTools" 4
.IX Item "telNoTools"
.PD
.Vb 1
\& no telephone tools found in extension folder
.Ve
.IP "telBadTermErr" 4
.IX Item "telBadTermErr"
.Vb 1
\& invalid TELHandle or handle not found
.Ve
.IP "telBadDNErr" 4
.IX Item "telBadDNErr"
.Vb 1
\& TELDNHandle not found or invalid
.Ve
.IP "telBadCAErr" 4
.IX Item "telBadCAErr"
.Vb 1
\& TELCAHandle not found or invalid
.Ve
.IP "telBadHandErr" 4
.IX Item "telBadHandErr"
.Vb 1
\& bad handle specified
.Ve
.IP "telBadProcErr" 4
.IX Item "telBadProcErr"
.Vb 1
\& bad msgProc specified
.Ve
.IP "telCAUnavail" 4
.IX Item "telCAUnavail"
.Vb 1
\& a CA is not available
.Ve
.IP "telNoMemErr" 4
.IX Item "telNoMemErr"
.Vb 1
\& no memory to allocate handle
.Ve
.IP "telNoOpenErr" 4
.IX Item "telNoOpenErr"
.Vb 1
\& unable to open terminal
.Ve
.IP "telBadHTypeErr" 4
.IX Item "telBadHTypeErr"
.Vb 1
\& bad hook type specified
.Ve
.IP "telHTypeNotSupp" 4
.IX Item "telHTypeNotSupp"
.Vb 1
\& hook type not supported by this tool
.Ve
.IP "telBadLevelErr" 4
.IX Item "telBadLevelErr"
.Vb 1
\& bad volume level setting
.Ve
.IP "telBadVTypeErr" 4
.IX Item "telBadVTypeErr"
.Vb 1
\& bad volume type error
.Ve
.IP "telVTypeNotSupp" 4
.IX Item "telVTypeNotSupp"
.Vb 1
\& volume type not supported by this tool
.Ve
.IP "telBadAPattErr" 4
.IX Item "telBadAPattErr"
.Vb 1
\& bad alerting pattern specified
.Ve
.IP "telAPattNotSupp" 4
.IX Item "telAPattNotSupp"
.Vb 1
\& alerting pattern not supported by tool
.Ve
.IP "telBadIndex" 4
.IX Item "telBadIndex"
.Vb 1
\& bad index specified
.Ve
.IP "telIndexNotSupp" 4
.IX Item "telIndexNotSupp"
.Vb 1
\& index not supported by this tool
.Ve
.IP "telBadStateErr" 4
.IX Item "telBadStateErr"
.Vb 1
\& bad device state specified
.Ve
.IP "telStateNotSupp" 4
.IX Item "telStateNotSupp"
.Vb 1
\& device state not supported by tool
.Ve
.IP "telBadIntExt" 4
.IX Item "telBadIntExt"
.Vb 1
\& bad internal external error
.Ve
.IP "telIntExtNotSupp" 4
.IX Item "telIntExtNotSupp"
.Vb 1
\& internal external type not supported by this tool
.Ve
.IP "telBadDNDType" 4
.IX Item "telBadDNDType"
.Vb 1
\& bad DND type specified
.Ve
.IP "telDNDTypeNotSupp" 4
.IX Item "telDNDTypeNotSupp"
.Vb 1
\& DND type is not supported by this tool
.Ve
.IP "telFeatNotSub" 4
.IX Item "telFeatNotSub"
.Vb 1
\& feature not subscribed
.Ve
.IP "telFeatNotAvail" 4
.IX Item "telFeatNotAvail"
.Vb 1
\& feature subscribed but not available
.Ve
.IP "telFeatActive" 4
.IX Item "telFeatActive"
.Vb 1
\& feature already active
.Ve
.IP "telFeatNotSupp" 4
.IX Item "telFeatNotSupp"
.Vb 1
\& feature program call not supported by this tool
.Ve
.IP "telConfLimitErr" 4
.IX Item "telConfLimitErr"
.Vb 1
\& limit specified is too high for this configuration
.Ve
.IP "telConfNoLimit" 4
.IX Item "telConfNoLimit"
.Vb 1
\& no limit was specified but required
.Ve
.IP "telConfErr" 4
.IX Item "telConfErr"
.Vb 1
\& conference was not prepared
.Ve
.IP "telConfRej" 4
.IX Item "telConfRej"
.Vb 1
\& conference request was rejected
.Ve
.IP "telTransferErr" 4
.IX Item "telTransferErr"
.Vb 1
\& transfer not prepared
.Ve
.IP "telTransferRej" 4
.IX Item "telTransferRej"
.Vb 1
\& transfer request rejected
.Ve
.IP "telCBErr" 4
.IX Item "telCBErr"
.Vb 1
\& call back feature not set previously
.Ve
.IP "telConfLimitExceeded" 4
.IX Item "telConfLimitExceeded"
.Vb 1
\& attempt to exceed switch conference limits
.Ve
.IP "telBadDNType" 4
.IX Item "telBadDNType"
.Vb 1
\& DN type invalid
.Ve
.IP "telBadPageID" 4
.IX Item "telBadPageID"
.Vb 1
\& bad page ID specified
.Ve
.IP "telBadIntercomID" 4
.IX Item "telBadIntercomID"
.Vb 1
\& bad intercom ID specified
.Ve
.IP "telBadFeatureID" 4
.IX Item "telBadFeatureID"
.Vb 1
\& bad feature ID specified
.Ve
.IP "telBadFwdType" 4
.IX Item "telBadFwdType"
.Vb 1
\& bad fwdType specified
.Ve
.IP "telBadPickupGroupID" 4
.IX Item "telBadPickupGroupID"
.Vb 1
\& bad pickup group ID specified
.Ve
.IP "telBadParkID" 4
.IX Item "telBadParkID"
.Vb 1
\& bad park id specified
.Ve
.IP "telBadSelect" 4
.IX Item "telBadSelect"
.Vb 1
\& unable to select or deselect DN
.Ve
.IP "telBadBearerType" 4
.IX Item "telBadBearerType"
.Vb 1
\& bad bearerType specified
.Ve
.IP "telBadRate" 4
.IX Item "telBadRate"
.Vb 1
\& bad rate specified
.Ve
.IP "telDNTypeNotSupp" 4
.IX Item "telDNTypeNotSupp"
.Vb 1
\& DN type not supported by tool
.Ve
.IP "telFwdTypeNotSupp" 4
.IX Item "telFwdTypeNotSupp"
.Vb 1
\& forward type not supported by tool
.Ve
.IP "telBadDisplayMode" 4
.IX Item "telBadDisplayMode"
.Vb 1
\& bad display mode specified
.Ve
.IP "telDisplayModeNotSupp" 4
.IX Item "telDisplayModeNotSupp"
.Vb 1
\& display mode not supported by tool
.Ve
.IP "telNoCallbackRef" 4
.IX Item "telNoCallbackRef"
.Vb 1
\& no call back reference was specified, but is required
.Ve
.IP "telAlreadyOpen" 4
.IX Item "telAlreadyOpen"
.Vb 1
\& terminal already open
.Ve
.IP "telStillNeeded" 4
.IX Item "telStillNeeded"
.Vb 1
\& terminal driver still needed by someone else
.Ve
.IP "telTermNotOpen" 4
.IX Item "telTermNotOpen"
.Vb 1
\& terminal not opened via TELOpenTerm
.Ve
.IP "telCANotAcceptable" 4
.IX Item "telCANotAcceptable"
.Vb 1
\& CA not "acceptable"
.Ve
.IP "telCANotRejectable" 4
.IX Item "telCANotRejectable"
.Vb 1
\& CA not "rejectable"
.Ve
.IP "telCANotDeflectable" 4
.IX Item "telCANotDeflectable"
.Vb 1
\& CA not "deflectable"
.Ve
.IP "telPBErr" 4
.IX Item "telPBErr"
.Vb 1
\& parameter block error, bad format
.Ve
.IP "telBadFunction" 4
.IX Item "telBadFunction"
.Vb 2
\& bad msgCode specified
\&telNoTools        = \-10101,        unable to find any telephone tools
.Ve
.IP "telNoSuchTool" 4
.IX Item "telNoSuchTool"
.Vb 1
\& unable to find tool with name specified
.Ve
.IP "telUnknownErr" 4
.IX Item "telUnknownErr"
.Vb 1
\& unable to set config
.Ve
.IP "telNoCommFolder" 4
.IX Item "telNoCommFolder"
.Vb 1
\& Communications/Extensions A\*: not found
.Ve
.IP "telInitFailed" 4
.IX Item "telInitFailed"
.Vb 1
\& initialization failed
.Ve
.IP "telBadCodeResource" 4
.IX Item "telBadCodeResource"
.Vb 1
\& code resource not found
.Ve
.IP "telDeviceNotFound" 4
.IX Item "telDeviceNotFound"
.Vb 1
\& device not found
.Ve
.IP "telBadProcID" 4
.IX Item "telBadProcID"
.Vb 1
\& invalid procID
.Ve
.IP "telValidateFailed" 4
.IX Item "telValidateFailed"
.Vb 1
\& telValidate failed
.Ve
.IP "telAutoAnsNotOn" 4
.IX Item "telAutoAnsNotOn"
.Vb 1
\& autoAnswer in not turned on
.Ve
.IP "telDetAlreadyOn" 4
.IX Item "telDetAlreadyOn"
.Vb 1
\& detection is already turned on
.Ve
.IP "telBadSWErr" 4
.IX Item "telBadSWErr"
.Vb 1
\& Software not installed properly
.Ve
.IP "telBadSampleRate" 4
.IX Item "telBadSampleRate"
.Vb 1
\& incompatible sample rate
.Ve
.SH "Power Manager Errors"
.IX Header "Power Manager Errors"
.IP "pmBusyErr" 4
.IX Item "pmBusyErr"
.Vb 1
\& Power Mgr never ready to start handshake
.Ve
.IP "pmReplyTOErr" 4
.IX Item "pmReplyTOErr"
.Vb 1
\& Timed out waiting for reply
.Ve
.IP "pmSendStartErr" 4
.IX Item "pmSendStartErr"
.Vb 1
\& during send, pmgr did not start hs
.Ve
.IP "pmSendEndErr" 4
.IX Item "pmSendEndErr"
.Vb 1
\& during send, pmgr did not finish hs
.Ve
.IP "pmRecvStartErr" 4
.IX Item "pmRecvStartErr"
.Vb 1
\& during receive, pmgr did not start hs
.Ve
.IP "kPowerHandlerExistsForDeviceErr" 4
.IX Item "kPowerHandlerExistsForDeviceErr"
.PD 0
.IP "kPowerHandlerNotFoundForDeviceErr" 4
.IX Item "kPowerHandlerNotFoundForDeviceErr"
.IP "kPowerHandlerNotFoundForProcErr" 4
.IX Item "kPowerHandlerNotFoundForProcErr"
.IP "kPowerMgtMessageNotHandled" 4
.IX Item "kPowerMgtMessageNotHandled"
.IP "kPowerMgtRequestDenied" 4
.IX Item "kPowerMgtRequestDenied"
.IP "kCantReportProcessorTemperatureErr" 4
.IX Item "kCantReportProcessorTemperatureErr"
.IP "kProcessorTempRoutineRequiresMPLib2" 4
.IX Item "kProcessorTempRoutineRequiresMPLib2"
.IP "kNoSuchPowerSource" 4
.IX Item "kNoSuchPowerSource"
.IP "debuggingExecutionContextErr" 4
.IX Item "debuggingExecutionContextErr"
.PD
.Vb 1
\& routine cannot be called at this time
.Ve
.IP "debuggingDuplicateSignatureErr" 4
.IX Item "debuggingDuplicateSignatureErr"
.Vb 1
\& componentSignature already registered
.Ve
.IP "debuggingDuplicateOptionErr" 4
.IX Item "debuggingDuplicateOptionErr"
.Vb 1
\& optionSelectorNum already registered
.Ve
.IP "debuggingInvalidSignatureErr" 4
.IX Item "debuggingInvalidSignatureErr"
.Vb 1
\& componentSignature not registered
.Ve
.IP "debuggingInvalidOptionErr" 4
.IX Item "debuggingInvalidOptionErr"
.Vb 1
\& optionSelectorNum is not registered
.Ve
.IP "debuggingInvalidNameErr" 4
.IX Item "debuggingInvalidNameErr"
.Vb 1
\& componentName or optionName is invalid (NULL)
.Ve
.IP "debuggingNoCallbackErr" 4
.IX Item "debuggingNoCallbackErr"
.Vb 1
\& debugging component has no callback
.Ve
.IP "kHIDVersionIncompatibleErr" 4
.IX Item "kHIDVersionIncompatibleErr"
.PD 0
.IP "kHIDSuccess" 4
.IX Item "kHIDSuccess"
.IP "kHIDInvalidRangePageErr" 4
.IX Item "kHIDInvalidRangePageErr"
.IP "kHIDReportIDZeroErr" 4
.IX Item "kHIDReportIDZeroErr"
.IP "kHIDReportCountZeroErr" 4
.IX Item "kHIDReportCountZeroErr"
.IP "kHIDReportSizeZeroErr" 4
.IX Item "kHIDReportSizeZeroErr"
.IP "kHIDUnmatchedDesignatorRangeErr" 4
.IX Item "kHIDUnmatchedDesignatorRangeErr"
.IP "kHIDUnmatchedStringRangeErr" 4
.IX Item "kHIDUnmatchedStringRangeErr"
.IP "kHIDInvertedUsageRangeErr" 4
.IX Item "kHIDInvertedUsageRangeErr"
.IP "kHIDUnmatchedUsageRangeErr" 4
.IX Item "kHIDUnmatchedUsageRangeErr"
.IP "kHIDInvertedPhysicalRangeErr" 4
.IX Item "kHIDInvertedPhysicalRangeErr"
.IP "kHIDInvertedLogicalRangeErr" 4
.IX Item "kHIDInvertedLogicalRangeErr"
.IP "kHIDBadLogicalMaximumErr" 4
.IX Item "kHIDBadLogicalMaximumErr"
.IP "kHIDBadLogicalMinimumErr" 4
.IX Item "kHIDBadLogicalMinimumErr"
.IP "kHIDUsagePageZeroErr" 4
.IX Item "kHIDUsagePageZeroErr"
.IP "kHIDEndOfDescriptorErr" 4
.IX Item "kHIDEndOfDescriptorErr"
.IP "kHIDNotEnoughMemoryErr" 4
.IX Item "kHIDNotEnoughMemoryErr"
.IP "kHIDBadParameterErr" 4
.IX Item "kHIDBadParameterErr"
.IP "kHIDNullPointerErr" 4
.IX Item "kHIDNullPointerErr"
.IP "kHIDInvalidReportLengthErr" 4
.IX Item "kHIDInvalidReportLengthErr"
.IP "kHIDInvalidReportTypeErr" 4
.IX Item "kHIDInvalidReportTypeErr"
.IP "kHIDBadLogPhysValuesErr" 4
.IX Item "kHIDBadLogPhysValuesErr"
.IP "kHIDIncompatibleReportErr" 4
.IX Item "kHIDIncompatibleReportErr"
.IP "kHIDInvalidPreparsedDataErr" 4
.IX Item "kHIDInvalidPreparsedDataErr"
.IP "kHIDNotValueArrayErr" 4
.IX Item "kHIDNotValueArrayErr"
.IP "kHIDUsageNotFoundErr" 4
.IX Item "kHIDUsageNotFoundErr"
.IP "kHIDValueOutOfRangeErr" 4
.IX Item "kHIDValueOutOfRangeErr"
.IP "kHIDBufferTooSmallErr" 4
.IX Item "kHIDBufferTooSmallErr"
.IP "kHIDNullStateErr" 4
.IX Item "kHIDNullStateErr"
.IP "kModemOutOfMemory" 4
.IX Item "kModemOutOfMemory"
.IP "kModemPreferencesMissing" 4
.IX Item "kModemPreferencesMissing"
.IP "kTXNEndIterationErr" 4
.IX Item "kTXNEndIterationErr"
.IP "kTXNCannotAddFrameErr" 4
.IX Item "kTXNCannotAddFrameErr"
.IP "kTXNInvalidFrameIDErr" 4
.IX Item "kTXNInvalidFrameIDErr"
.IP "kTXNIllegalToCrossDataBoundariesErr" 4
.IX Item "kTXNIllegalToCrossDataBoundariesErr"
.IP "kTXNUserCanceledOperationErr" 4
.IX Item "kTXNUserCanceledOperationErr"
.IP "kTXNBadDefaultFileTypeWarning" 4
.IX Item "kTXNBadDefaultFileTypeWarning"
.IP "kTXNCannotSetAutoIndentErr" 4
.IX Item "kTXNCannotSetAutoIndentErr"
.IP "kTXNRunIndexOutofBoundsErr" 4
.IX Item "kTXNRunIndexOutofBoundsErr"
.IP "kTXNNoMatchErr" 4
.IX Item "kTXNNoMatchErr"
.IP "kTXNAttributeTagInvalidForRunErr" 4
.IX Item "kTXNAttributeTagInvalidForRunErr"
.PD
.Vb 1
\& dataValue is set to this per invalid tag
.Ve
.IP "kTXNSomeOrAllTagsInvalidForRunErr" 4
.IX Item "kTXNSomeOrAllTagsInvalidForRunErr"
.PD 0
.IP "kTXNInvalidRunIndex" 4
.IX Item "kTXNInvalidRunIndex"
.IP "kTXNAlreadyInitializedErr" 4
.IX Item "kTXNAlreadyInitializedErr"
.IP "kTXNCannotTurnTSMOffWhenUsingUnicodeErr" 4
.IX Item "kTXNCannotTurnTSMOffWhenUsingUnicodeErr"
.IP "kTXNCopyNotAllowedInEchoModeErr" 4
.IX Item "kTXNCopyNotAllowedInEchoModeErr"
.IP "kTXNDataTypeNotAllowedErr" 4
.IX Item "kTXNDataTypeNotAllowedErr"
.IP "kTXNATSUIIsNotInstalledErr" 4
.IX Item "kTXNATSUIIsNotInstalledErr"
.IP "kTXNOutsideOfLineErr" 4
.IX Item "kTXNOutsideOfLineErr"
.IP "errKCNotAvailable" 4
.IX Item "errKCNotAvailable"
.IP "errKCReadOnly" 4
.IX Item "errKCReadOnly"
.IP "errKCAuthFailed" 4
.IX Item "errKCAuthFailed"
.IP "errKCNoSuchKeychain" 4
.IX Item "errKCNoSuchKeychain"
.IP "errKCInvalidKeychain" 4
.IX Item "errKCInvalidKeychain"
.IP "errKCDuplicateKeychain" 4
.IX Item "errKCDuplicateKeychain"
.IP "errKCDuplicateCallback" 4
.IX Item "errKCDuplicateCallback"
.IP "errKCInvalidCallback" 4
.IX Item "errKCInvalidCallback"
.IP "errKCDuplicateItem" 4
.IX Item "errKCDuplicateItem"
.IP "errKCItemNotFound" 4
.IX Item "errKCItemNotFound"
.IP "errKCBufferTooSmall" 4
.IX Item "errKCBufferTooSmall"
.IP "errKCDataTooLarge" 4
.IX Item "errKCDataTooLarge"
.IP "errKCNoSuchAttr" 4
.IX Item "errKCNoSuchAttr"
.IP "errKCInvalidItemRef" 4
.IX Item "errKCInvalidItemRef"
.IP "errKCInvalidSearchRef" 4
.IX Item "errKCInvalidSearchRef"
.IP "errKCNoSuchClass" 4
.IX Item "errKCNoSuchClass"
.IP "errKCNoDefaultKeychain" 4
.IX Item "errKCNoDefaultKeychain"
.IP "errKCInteractionNotAllowed" 4
.IX Item "errKCInteractionNotAllowed"
.IP "errKCReadOnlyAttr" 4
.IX Item "errKCReadOnlyAttr"
.IP "errKCWrongKCVersion" 4
.IX Item "errKCWrongKCVersion"
.IP "errKCKeySizeNotAllowed" 4
.IX Item "errKCKeySizeNotAllowed"
.IP "errKCNoStorageModule" 4
.IX Item "errKCNoStorageModule"
.IP "errKCNoCertificateModule" 4
.IX Item "errKCNoCertificateModule"
.IP "errKCNoPolicyModule" 4
.IX Item "errKCNoPolicyModule"
.IP "errKCInteractionRequired" 4
.IX Item "errKCInteractionRequired"
.IP "errKCDataNotAvailable" 4
.IX Item "errKCDataNotAvailable"
.IP "errKCDataNotModifiable" 4
.IX Item "errKCDataNotModifiable"
.IP "kUCOutputBufferTooSmall" 4
.IX Item "kUCOutputBufferTooSmall"
.PD
.Vb 1
\& Output buffer too small for Unicode string result
.Ve
.IP "kUCTSNoKeysAddedToObjectErr" 4
.IX Item "kUCTSNoKeysAddedToObjectErr"
.PD 0
.IP "kMPIterationEndErr" 4
.IX Item "kMPIterationEndErr"
.IP "kMPPrivilegedErr" 4
.IX Item "kMPPrivilegedErr"
.IP "kMPProcessCreatedErr" 4
.IX Item "kMPProcessCreatedErr"
.IP "kMPProcessTerminatedErr" 4
.IX Item "kMPProcessTerminatedErr"
.IP "kMPTaskCreatedErr" 4
.IX Item "kMPTaskCreatedErr"
.IP "kMPTaskBlockedErr" 4
.IX Item "kMPTaskBlockedErr"
.IP "kMPTaskStoppedErr" 4
.IX Item "kMPTaskStoppedErr"
.PD
.Vb 1
\& A convention used with MPThrowException.
.Ve
.IP "kMPBlueBlockingErr" 4
.IX Item "kMPBlueBlockingErr"
.PD 0
.IP "kMPDeletedErr" 4
.IX Item "kMPDeletedErr"
.IP "kMPTimeoutErr" 4
.IX Item "kMPTimeoutErr"
.IP "kMPTaskAbortedErr" 4
.IX Item "kMPTaskAbortedErr"
.IP "kMPInsufficientResourcesErr" 4
.IX Item "kMPInsufficientResourcesErr"
.IP "kCollateAttributesNotFoundErr" 4
.IX Item "kCollateAttributesNotFoundErr"
.IP "kCollateInvalidOptions" 4
.IX Item "kCollateInvalidOptions"
.IP "kCollateMissingUnicodeTableErr" 4
.IX Item "kCollateMissingUnicodeTableErr"
.IP "kCollateUnicodeConvertFailedErr" 4
.IX Item "kCollateUnicodeConvertFailedErr"
.IP "kCollatePatternNotFoundErr" 4
.IX Item "kCollatePatternNotFoundErr"
.IP "kCollateInvalidChar" 4
.IX Item "kCollateInvalidChar"
.IP "kCollateBufferTooSmall" 4
.IX Item "kCollateBufferTooSmall"
.IP "kFNSInvalidReferenceErr" 4
.IX Item "kFNSInvalidReferenceErr"
.PD
.Vb 1
\& ref. was NULL or otherwise bad
.Ve
.IP "kFNSBadReferenceVersionErr" 4
.IX Item "kFNSBadReferenceVersionErr"
.Vb 1
\& ref. version is out of known range
.Ve
.IP "kFNSInvalidProfileErr" 4
.IX Item "kFNSInvalidProfileErr"
.Vb 1
\& profile is NULL or otherwise bad
.Ve
.IP "kFNSBadProfileVersionErr" 4
.IX Item "kFNSBadProfileVersionErr"
.Vb 1
\& profile version is out of known range
.Ve
.IP "kFNSDuplicateReferenceErr" 4
.IX Item "kFNSDuplicateReferenceErr"
.Vb 1
\& the ref. being added is already in the profile
.Ve
.IP "kFNSMismatchErr" 4
.IX Item "kFNSMismatchErr"
.Vb 1
\& reference didn\*(Aqt match or wasn\*(Aqt found in profile
.Ve
.IP "kFNSInsufficientDataErr" 4
.IX Item "kFNSInsufficientDataErr"
.Vb 1
\& insufficient data for the operation
.Ve
.IP "kFNSBadFlattenedSizeErr" 4
.IX Item "kFNSBadFlattenedSizeErr"
.Vb 1
\& flattened size didn\*(Aqt match input or was too small
.Ve
.IP "kLocalesBufferTooSmallErr" 4
.IX Item "kLocalesBufferTooSmallErr"
.PD 0
.IP "kLocalesTableFormatErr" 4
.IX Item "kLocalesTableFormatErr"
.IP "kALMInternalErr" 4
.IX Item "kALMInternalErr"
.IP "kALMGroupNotFoundErr" 4
.IX Item "kALMGroupNotFoundErr"
.IP "kALMNoSuchModuleErr" 4
.IX Item "kALMNoSuchModuleErr"
.IP "kALMModuleCommunicationErr" 4
.IX Item "kALMModuleCommunicationErr"
.IP "kALMDuplicateModuleErr" 4
.IX Item "kALMDuplicateModuleErr"
.IP "kALMInstallationErr" 4
.IX Item "kALMInstallationErr"
.IP "kALMDeferSwitchErr" 4
.IX Item "kALMDeferSwitchErr"
.IP "kSSpInternalErr" 4
.IX Item "kSSpInternalErr"
.IP "kSSpVersionErr" 4
.IX Item "kSSpVersionErr"
.IP "kSSpCantInstallErr" 4
.IX Item "kSSpCantInstallErr"
.IP "kSSpParallelUpVectorErr" 4
.IX Item "kSSpParallelUpVectorErr"
.IP "kNSpInitializationFailedErr" 4
.IX Item "kNSpInitializationFailedErr"
.IP "kNSpAlreadyInitializedErr" 4
.IX Item "kNSpAlreadyInitializedErr"
.IP "kNSpTopologyNotSupportedErr" 4
.IX Item "kNSpTopologyNotSupportedErr"
.IP "kNSpPipeFullErr" 4
.IX Item "kNSpPipeFullErr"
.IP "kNSpHostFailedErr" 4
.IX Item "kNSpHostFailedErr"
.IP "kNSpProtocolNotAvailableErr" 4
.IX Item "kNSpProtocolNotAvailableErr"
.IP "kNSpInvalidGameRefErr" 4
.IX Item "kNSpInvalidGameRefErr"
.IP "kNSpInvalidParameterErr" 4
.IX Item "kNSpInvalidParameterErr"
.IP "kNSpOTNotPresentErr" 4
.IX Item "kNSpOTNotPresentErr"
.IP "kNSpOTVersionTooOldErr" 4
.IX Item "kNSpOTVersionTooOldErr"
.IP "kNSpMemAllocationErr" 4
.IX Item "kNSpMemAllocationErr"
.IP "kNSpAlreadyAdvertisingErr" 4
.IX Item "kNSpAlreadyAdvertisingErr"
.IP "kNSpNotAdvertisingErr" 4
.IX Item "kNSpNotAdvertisingErr"
.IP "kNSpInvalidAddressErr" 4
.IX Item "kNSpInvalidAddressErr"
.IP "kNSpFreeQExhaustedErr" 4
.IX Item "kNSpFreeQExhaustedErr"
.IP "kNSpRemovePlayerFailedErr" 4
.IX Item "kNSpRemovePlayerFailedErr"
.IP "kNSpAddressInUseErr" 4
.IX Item "kNSpAddressInUseErr"
.IP "kNSpFeatureNotImplementedErr" 4
.IX Item "kNSpFeatureNotImplementedErr"
.IP "kNSpNameRequiredErr" 4
.IX Item "kNSpNameRequiredErr"
.IP "kNSpInvalidPlayerIDErr" 4
.IX Item "kNSpInvalidPlayerIDErr"
.IP "kNSpInvalidGroupIDErr" 4
.IX Item "kNSpInvalidGroupIDErr"
.IP "kNSpNoPlayersErr" 4
.IX Item "kNSpNoPlayersErr"
.IP "kNSpNoGroupsErr" 4
.IX Item "kNSpNoGroupsErr"
.IP "kNSpNoHostVolunteersErr" 4
.IX Item "kNSpNoHostVolunteersErr"
.IP "kNSpCreateGroupFailedErr" 4
.IX Item "kNSpCreateGroupFailedErr"
.IP "kNSpAddPlayerFailedErr" 4
.IX Item "kNSpAddPlayerFailedErr"
.IP "kNSpInvalidDefinitionErr" 4
.IX Item "kNSpInvalidDefinitionErr"
.IP "kNSpInvalidProtocolRefErr" 4
.IX Item "kNSpInvalidProtocolRefErr"
.IP "kNSpInvalidProtocolListErr" 4
.IX Item "kNSpInvalidProtocolListErr"
.IP "kNSpTimeoutErr" 4
.IX Item "kNSpTimeoutErr"
.IP "kNSpGameTerminatedErr" 4
.IX Item "kNSpGameTerminatedErr"
.IP "kNSpConnectFailedErr" 4
.IX Item "kNSpConnectFailedErr"
.IP "kNSpSendFailedErr" 4
.IX Item "kNSpSendFailedErr"
.IP "kNSpMessageTooBigErr" 4
.IX Item "kNSpMessageTooBigErr"
.IP "kNSpCantBlockErr" 4
.IX Item "kNSpCantBlockErr"
.IP "kISpInternalErr" 4
.IX Item "kISpInternalErr"
.IP "kISpSystemListErr" 4
.IX Item "kISpSystemListErr"
.IP "kISpBufferToSmallErr" 4
.IX Item "kISpBufferToSmallErr"
.IP "kISpElementInListErr" 4
.IX Item "kISpElementInListErr"
.IP "kISpElementNotInListErr" 4
.IX Item "kISpElementNotInListErr"
.IP "kISpSystemInactiveErr" 4
.IX Item "kISpSystemInactiveErr"
.IP "kISpDeviceInactiveErr" 4
.IX Item "kISpDeviceInactiveErr"
.IP "kISpSystemActiveErr" 4
.IX Item "kISpSystemActiveErr"
.IP "kISpDeviceActiveErr" 4
.IX Item "kISpDeviceActiveErr"
.IP "kDSpNotInitializedErr" 4
.IX Item "kDSpNotInitializedErr"
.IP "kDSpSystemSWTooOldErr" 4
.IX Item "kDSpSystemSWTooOldErr"
.IP "kDSpInvalidContextErr" 4
.IX Item "kDSpInvalidContextErr"
.IP "kDSpInvalidAttributesErr" 4
.IX Item "kDSpInvalidAttributesErr"
.IP "kDSpContextAlreadyReservedErr" 4
.IX Item "kDSpContextAlreadyReservedErr"
.IP "kDSpContextNotReservedErr" 4
.IX Item "kDSpContextNotReservedErr"
.IP "kDSpContextNotFoundErr" 4
.IX Item "kDSpContextNotFoundErr"
.IP "kDSpFrameRateNotReadyErr" 4
.IX Item "kDSpFrameRateNotReadyErr"
.IP "kDSpConfirmSwitchWarning" 4
.IX Item "kDSpConfirmSwitchWarning"
.IP "kDSpInternalErr" 4
.IX Item "kDSpInternalErr"
.IP "kFBCvTwinExceptionErr" 4
.IX Item "kFBCvTwinExceptionErr"
.PD
.Vb 1
\& no telling what it was
.Ve
.IP "kFBCnoIndexesFound" 4
.IX Item "kFBCnoIndexesFound"
.PD 0
.IP "kFBCallocFailed" 4
.IX Item "kFBCallocFailed"
.PD
.Vb 1
\& probably low memory
.Ve
.IP "kFBCbadParam" 4
.IX Item "kFBCbadParam"
.PD 0
.IP "kFBCfileNotIndexed" 4
.IX Item "kFBCfileNotIndexed"
.IP "kFBCbadIndexFile" 4
.IX Item "kFBCbadIndexFile"
.PD
.Vb 1
\& bad FSSpec, or bad data in file
.Ve
.IP "kFBCcompactionFailed" 4
.IX Item "kFBCcompactionFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCvalidationFailed" 4
.IX Item "kFBCvalidationFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCindexingFailed" 4
.IX Item "kFBCindexingFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCcommitFailed" 4
.IX Item "kFBCcommitFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCdeletionFailed" 4
.IX Item "kFBCdeletionFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCmoveFailed" 4
.IX Item "kFBCmoveFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCtokenizationFailed" 4
.IX Item "kFBCtokenizationFailed"
.Vb 1
\& couldn\*(Aqt read from document or query
.Ve
.IP "kFBCmergingFailed" 4
.IX Item "kFBCmergingFailed"
.Vb 1
\& couldn\*(Aqt merge index files
.Ve
.IP "kFBCindexCreationFailed" 4
.IX Item "kFBCindexCreationFailed"
.Vb 1
\& couldn\*(Aqt create index
.Ve
.IP "kFBCaccessorStoreFailed" 4
.IX Item "kFBCaccessorStoreFailed"
.PD 0
.IP "kFBCaddDocFailed" 4
.IX Item "kFBCaddDocFailed"
.IP "kFBCflushFailed" 4
.IX Item "kFBCflushFailed"
.IP "kFBCindexNotFound" 4
.IX Item "kFBCindexNotFound"
.IP "kFBCnoSearchSession" 4
.IX Item "kFBCnoSearchSession"
.IP "kFBCindexingCanceled" 4
.IX Item "kFBCindexingCanceled"
.IP "kFBCaccessCanceled" 4
.IX Item "kFBCaccessCanceled"
.IP "kFBCindexFileDestroyed" 4
.IX Item "kFBCindexFileDestroyed"
.IP "kFBCindexNotAvailable" 4
.IX Item "kFBCindexNotAvailable"
.IP "kFBCsearchFailed" 4
.IX Item "kFBCsearchFailed"
.IP "kFBCsomeFilesNotIndexed" 4
.IX Item "kFBCsomeFilesNotIndexed"
.IP "kFBCillegalSessionChange" 4
.IX Item "kFBCillegalSessionChange"
.PD
.Vb 2
\& tried to add/remove vols to a session
\&that has hits
.Ve
.IP "kFBCanalysisNotAvailable" 4
.IX Item "kFBCanalysisNotAvailable"
.PD 0
.IP "kFBCbadIndexFileVersion" 4
.IX Item "kFBCbadIndexFileVersion"
.IP "kFBCsummarizationCanceled" 4
.IX Item "kFBCsummarizationCanceled"
.IP "kFBCindexDiskIOFailed" 4
.IX Item "kFBCindexDiskIOFailed"
.IP "kFBCbadSearchSession" 4
.IX Item "kFBCbadSearchSession"
.IP "notAQTVRMovieErr" 4
.IX Item "notAQTVRMovieErr"
.IP "constraintReachedErr" 4
.IX Item "constraintReachedErr"
.IP "callNotSupportedByNodeErr" 4
.IX Item "callNotSupportedByNodeErr"
.IP "selectorNotSupportedByNodeErr" 4
.IX Item "selectorNotSupportedByNodeErr"
.IP "invalidNodeIDErr" 4
.IX Item "invalidNodeIDErr"
.IP "invalidViewStateErr" 4
.IX Item "invalidViewStateErr"
.IP "timeNotInViewErr" 4
.IX Item "timeNotInViewErr"
.IP "propertyNotSupportedByNodeErr" 4
.IX Item "propertyNotSupportedByNodeErr"
.IP "settingNotSupportedByNodeErr" 4
.IX Item "settingNotSupportedByNodeErr"
.IP "limitReachedErr" 4
.IX Item "limitReachedErr"
.IP "invalidNodeFormatErr" 4
.IX Item "invalidNodeFormatErr"
.IP "invalidHotSpotIDErr" 4
.IX Item "invalidHotSpotIDErr"
.IP "noMemoryNodeFailedInitialize" 4
.IX Item "noMemoryNodeFailedInitialize"
.IP "streamingNodeNotReadyErr" 4
.IX Item "streamingNodeNotReadyErr"
.IP "qtvrLibraryLoadErr" 4
.IX Item "qtvrLibraryLoadErr"
.IP "themeInvalidBrushErr" 4
.IX Item "themeInvalidBrushErr"
.PD
.Vb 1
\& pattern index invalid
.Ve
.IP "themeProcessRegisteredErr" 4
.IX Item "themeProcessRegisteredErr"
.PD 0
.IP "themeProcessNotRegisteredErr" 4
.IX Item "themeProcessNotRegisteredErr"
.IP "themeBadTextColorErr" 4
.IX Item "themeBadTextColorErr"
.IP "themeHasNoAccentsErr" 4
.IX Item "themeHasNoAccentsErr"
.IP "themeBadCursorIndexErr" 4
.IX Item "themeBadCursorIndexErr"
.IP "themeScriptFontNotFoundErr" 4
.IX Item "themeScriptFontNotFoundErr"
.PD
.Vb 1
\& theme font requested for uninstalled script system
.Ve
.SH "Control Manager Error Codes"
.IX Header "Control Manager Error Codes"
.IP "errMessageNotSupported" 4
.IX Item "errMessageNotSupported"
.PD 0
.IP "errDataNotSupported" 4
.IX Item "errDataNotSupported"
.IP "errControlDoesntSupportFocus" 4
.IX Item "errControlDoesntSupportFocus"
.IP "errUnknownControl" 4
.IX Item "errUnknownControl"
.IP "errCouldntSetFocus" 4
.IX Item "errCouldntSetFocus"
.IP "errNoRootControl" 4
.IX Item "errNoRootControl"
.IP "errRootAlreadyExists" 4
.IX Item "errRootAlreadyExists"
.IP "errInvalidPartCode" 4
.IX Item "errInvalidPartCode"
.IP "errControlsAlreadyExist" 4
.IX Item "errControlsAlreadyExist"
.IP "errControlIsNotEmbedder" 4
.IX Item "errControlIsNotEmbedder"
.IP "errDataSizeMismatch" 4
.IX Item "errDataSizeMismatch"
.IP "errControlHiddenOrDisabled" 4
.IX Item "errControlHiddenOrDisabled"
.IP "errCantEmbedIntoSelf" 4
.IX Item "errCantEmbedIntoSelf"
.IP "errCantEmbedRoot" 4
.IX Item "errCantEmbedRoot"
.IP "errItemNotControl" 4
.IX Item "errItemNotControl"
.IP "controlInvalidDataVersionErr" 4
.IX Item "controlInvalidDataVersionErr"
.IP "controlPropertyInvalid" 4
.IX Item "controlPropertyInvalid"
.IP "controlPropertyNotFoundErr" 4
.IX Item "controlPropertyNotFoundErr"
.IP "kURLInvalidURLReferenceError" 4
.IX Item "kURLInvalidURLReferenceError"
.IP "kURLProgressAlreadyDisplayedError" 4
.IX Item "kURLProgressAlreadyDisplayedError"
.IP "kURLDestinationExistsError" 4
.IX Item "kURLDestinationExistsError"
.IP "kURLInvalidURLError" 4
.IX Item "kURLInvalidURLError"
.IP "kURLUnsupportedSchemeError" 4
.IX Item "kURLUnsupportedSchemeError"
.IP "kURLServerBusyError" 4
.IX Item "kURLServerBusyError"
.IP "kURLAuthenticationError" 4
.IX Item "kURLAuthenticationError"
.IP "kURLPropertyNotYetKnownError" 4
.IX Item "kURLPropertyNotYetKnownError"
.IP "kURLUnknownPropertyError" 4
.IX Item "kURLUnknownPropertyError"
.IP "kURLPropertyBufferTooSmallError" 4
.IX Item "kURLPropertyBufferTooSmallError"
.IP "kURLUnsettablePropertyError" 4
.IX Item "kURLUnsettablePropertyError"
.IP "kURLInvalidCallError" 4
.IX Item "kURLInvalidCallError"
.IP "kURLFileEmptyError" 4
.IX Item "kURLFileEmptyError"
.IP "kURLExtensionFailureError" 4
.IX Item "kURLExtensionFailureError"
.IP "kURLInvalidConfigurationError" 4
.IX Item "kURLInvalidConfigurationError"
.IP "kURLAccessNotAvailableError" 4
.IX Item "kURLAccessNotAvailableError"
.IP "badComponentInstance" 4
.IX Item "badComponentInstance"
.PD
.Vb 1
\& when cast to an OSErr this is \-32767
.Ve
.IP "dsBusError" 4
.IX Item "dsBusError"
.Vb 1
\& bus error
.Ve
.IP "dsAddressErr" 4
.IX Item "dsAddressErr"
.Vb 1
\& address error
.Ve
.IP "dsIllInstErr" 4
.IX Item "dsIllInstErr"
.Vb 1
\& illegal instruction error
.Ve
.IP "dsZeroDivErr" 4
.IX Item "dsZeroDivErr"
.Vb 1
\& zero divide error
.Ve
.IP "dsChkErr" 4
.IX Item "dsChkErr"
.Vb 1
\& check trap error
.Ve
.IP "dsOvflowErr" 4
.IX Item "dsOvflowErr"
.Vb 1
\& overflow trap error
.Ve
.IP "dsPrivErr" 4
.IX Item "dsPrivErr"
.Vb 1
\& privilege violation error
.Ve
.IP "dsTraceErr" 4
.IX Item "dsTraceErr"
.Vb 1
\& trace mode error
.Ve
.IP "dsLineAErr" 4
.IX Item "dsLineAErr"
.Vb 1
\& line 1010 trap error
.Ve
.IP "dsLineFErr" 4
.IX Item "dsLineFErr"
.Vb 1
\& line 1111 trap error
.Ve
.IP "dsMiscErr" 4
.IX Item "dsMiscErr"
.Vb 1
\& miscellaneous hardware exception error
.Ve
.IP "dsCoreErr" 4
.IX Item "dsCoreErr"
.Vb 1
\& unimplemented core routine error
.Ve
.IP "dsIrqErr" 4
.IX Item "dsIrqErr"
.Vb 1
\& uninstalled interrupt error
.Ve
.IP "dsIOCoreErr" 4
.IX Item "dsIOCoreErr"
.Vb 1
\& IO Core Error
.Ve
.IP "dsLoadErr" 4
.IX Item "dsLoadErr"
.Vb 1
\& Segment Loader Error
.Ve
.IP "dsFPErr" 4
.IX Item "dsFPErr"
.Vb 1
\& Floating point error
.Ve
.IP "dsNoPackErr" 4
.IX Item "dsNoPackErr"
.Vb 1
\& package 0 not present
.Ve
.IP "dsNoPk1" 4
.IX Item "dsNoPk1"
.Vb 1
\& package 1 not present
.Ve
.IP "dsNoPk3" 4
.IX Item "dsNoPk3"
.Vb 1
\& package 3 not present
.Ve
.IP "dsNoPk4" 4
.IX Item "dsNoPk4"
.Vb 1
\& package 4 not present
.Ve
.IP "dsNoPk5" 4
.IX Item "dsNoPk5"
.Vb 1
\& package 5 not present
.Ve
.IP "dsNoPk6" 4
.IX Item "dsNoPk6"
.Vb 1
\& package 6 not present
.Ve
.IP "dsNoPk7" 4
.IX Item "dsNoPk7"
.Vb 1
\& package 7 not present
.Ve
.IP "dsMemFullErr" 4
.IX Item "dsMemFullErr"
.Vb 1
\& out of memory!
.Ve
.IP "dsBadLaunch" 4
.IX Item "dsBadLaunch"
.Vb 1
\& can\*(Aqt launch file
.Ve
.IP "dsFSErr" 4
.IX Item "dsFSErr"
.Vb 1
\& file system map has been trashed
.Ve
.IP "dsStknHeap" 4
.IX Item "dsStknHeap"
.Vb 1
\& stack has moved into application heap
.Ve
.IP "negZcbFreeErr" 4
.IX Item "negZcbFreeErr"
.Vb 1
\& ZcbFree has gone negative
.Ve
.IP "dsFinderErr" 4
.IX Item "dsFinderErr"
.Vb 1
\& can\*(Aqt load the Finder error
.Ve
.IP "dsBadSlotInt" 4
.IX Item "dsBadSlotInt"
.Vb 1
\& unserviceable slot interrupt
.Ve
.IP "dsBadSANEOpcode" 4
.IX Item "dsBadSANEOpcode"
.Vb 1
\& bad opcode given to SANE Pack4
.Ve
.IP "dsBadPatchHeader" 4
.IX Item "dsBadPatchHeader"
.Vb 1
\& SetTrapAddress saw the \*(Aqcome\-from\*(Aq header
.Ve
.IP "menuPrgErr" 4
.IX Item "menuPrgErr"
.Vb 1
\& happens when a menu is purged
.Ve
.IP "dsMBarNFnd" 4
.IX Item "dsMBarNFnd"
.Vb 1
\& Menu Manager Errors
.Ve
.IP "dsHMenuFindErr" 4
.IX Item "dsHMenuFindErr"
.Vb 1
\& Menu Manager Errors
.Ve
.IP "dsWDEFNotFound" 4
.IX Item "dsWDEFNotFound"
.Vb 1
\& could not load WDEF
.Ve
.IP "dsCDEFNotFound" 4
.IX Item "dsCDEFNotFound"
.Vb 1
\& could not load CDEF
.Ve
.IP "dsNoFPU" 4
.IX Item "dsNoFPU"
.Vb 1
\& an FPU instruction was executed and the machine doesn\*(Aqt have one
.Ve
.IP "dsNoPatch" 4
.IX Item "dsNoPatch"
.Vb 1
\& Can\*(Aqt patch for particular Model Mac
.Ve
.IP "dsBadPatch" 4
.IX Item "dsBadPatch"
.Vb 1
\& Can\*(Aqt load patch resource
.Ve
.IP "dsParityErr" 4
.IX Item "dsParityErr"
.Vb 1
\& memory parity error
.Ve
.IP "dsOldSystem" 4
.IX Item "dsOldSystem"
.Vb 1
\& System is too old for this ROM
.Ve
.IP "ds32BitMode" 4
.IX Item "ds32BitMode"
.Vb 1
\& booting in 32\-bit on a 24\-bit sys
.Ve
.IP "dsNeedToWriteBootBlocks" 4
.IX Item "dsNeedToWriteBootBlocks"
.Vb 1
\& need to write new boot blocks
.Ve
.IP "dsNotEnoughRAMToBoot" 4
.IX Item "dsNotEnoughRAMToBoot"
.Vb 1
\& must have at least 1.5MB of RAM to boot 7.0
.Ve
.IP "dsBufPtrTooLow" 4
.IX Item "dsBufPtrTooLow"
.Vb 1
\& bufPtr moved too far during boot
.Ve
.IP "dsVMDeferredFuncTableFull" 4
.IX Item "dsVMDeferredFuncTableFull"
.Vb 1
\& VM\*(Aqs DeferUserFn table is full
.Ve
.IP "dsVMBadBackingStore" 4
.IX Item "dsVMBadBackingStore"
.Vb 1
\& Error occurred while reading or writing the VM backing\-store file
.Ve
.IP "dsCantHoldSystemHeap" 4
.IX Item "dsCantHoldSystemHeap"
.Vb 1
\& Unable to hold the system heap during boot
.Ve
.IP "dsSystemRequiresPowerPC" 4
.IX Item "dsSystemRequiresPowerPC"
.Vb 1
\& Startup disk requires PowerPC
.Ve
.IP "dsGibblyMovedToDisabledFolder" 4
.IX Item "dsGibblyMovedToDisabledFolder"
.Vb 1
\& For debug builds only, signals that active gibbly was disabled during boot.
.Ve
.IP "dsUnBootableSystem" 4
.IX Item "dsUnBootableSystem"
.Vb 1
\& Active system file will not boot on this system because it was designed only to boot from a CD.
.Ve
.IP "dsMustUseFCBAccessors" 4
.IX Item "dsMustUseFCBAccessors"
.Vb 1
\& FCBSPtr and FSFCBLen are invalid \- must use FSM FCB accessor functions
.Ve
.IP "dsMacOSROMVersionTooOld" 4
.IX Item "dsMacOSROMVersionTooOld"
.Vb 1
\& The version of the "Mac OS ROM" file is too old to be used with the installed version of system software
.Ve
.IP "dsLostConnectionToNetworkDisk" 4
.IX Item "dsLostConnectionToNetworkDisk"
.Vb 1
\& Lost communication with Netboot server
.Ve
.IP "dsRAMDiskTooBig" 4
.IX Item "dsRAMDiskTooBig"
.Vb 1
\& The RAM disk is too big to boot safely; will be turned off
.Ve
.IP "dsWriteToSupervisorStackGuardPage" 4
.IX Item "dsWriteToSupervisorStackGuardPage"
.Vb 1
\& the supervisor stack overflowed into its guard page
.Ve
.IP "dsReinsert" 4
.IX Item "dsReinsert"
.Vb 1
\& request user to reinsert off\-line volume
.Ve
.IP "shutDownAlert" 4
.IX Item "shutDownAlert"
.Vb 1
\& handled like a shutdown error
.Ve
.IP "dsShutDownOrRestart" 4
.IX Item "dsShutDownOrRestart"
.Vb 1
\& user choice between ShutDown and Restart
.Ve
.IP "dsSwitchOffOrRestart" 4
.IX Item "dsSwitchOffOrRestart"
.Vb 1
\& user choice between switching off and Restart
.Ve
.IP "dsForcedQuit" 4
.IX Item "dsForcedQuit"
.Vb 1
\& allow the user to ExitToShell, return if Cancel
.Ve
.IP "dsRemoveDisk" 4
.IX Item "dsRemoveDisk"
.Vb 1
\& request user to remove disk from manual eject drive
.Ve
.IP "dsDirtyDisk" 4
.IX Item "dsDirtyDisk"
.Vb 1
\& request user to return a manually\-ejected dirty disk
.Ve
.IP "dsShutDownOrResume" 4
.IX Item "dsShutDownOrResume"
.Vb 1
\& allow user to return to Finder or ShutDown
.Ve
.IP "dsSCSIWarn" 4
.IX Item "dsSCSIWarn"
.Vb 1
\& Portable SCSI adapter warning.
.Ve
.IP "dsMBSysError" 4
.IX Item "dsMBSysError"
.Vb 1
\& Media Bay replace warning.
.Ve
.IP "dsMBFlpySysError" 4
.IX Item "dsMBFlpySysError"
.Vb 1
\& Media Bay, floppy replace warning.
.Ve
.IP "dsMBATASysError" 4
.IX Item "dsMBATASysError"
.Vb 1
\& Media Bay, ATA replace warning.
.Ve
.IP "dsMBATAPISysError" 4
.IX Item "dsMBATAPISysError"
.Vb 1
\& Media Bay, ATAPI replace warning...
.Ve
.IP "dsMBExternFlpySysError" 4
.IX Item "dsMBExternFlpySysError"
.Vb 1
\& Media Bay, external floppy drive reconnect warning
.Ve
.IP "dsNoExtsMacsBug" 4
.IX Item "dsNoExtsMacsBug"
.Vb 1
\& not a SysErr, just a placeholder
.Ve
.IP "dsNoExtsDisassembler" 4
.IX Item "dsNoExtsDisassembler"
.Vb 1
\& not a SysErr, just a placeholder
.Ve
.IP "dsMacsBugInstalled" 4
.IX Item "dsMacsBugInstalled"
.Vb 1
\& say \*(AqMacsBug Installed\*(Aq
.Ve
.IP "dsDisassemblerInstalled" 4
.IX Item "dsDisassemblerInstalled"
.Vb 1
\& say \*(AqDisassembler Installed\*(Aq
.Ve
.IP "dsExtensionsDisabled" 4
.IX Item "dsExtensionsDisabled"
.Vb 1
\& say \*(AqExtensions Disabled\*(Aq
.Ve
.IP "dsGreeting" 4
.IX Item "dsGreeting"
.Vb 1
\& welcome to Macintosh greeting
.Ve
.IP "dsSysErr" 4
.IX Item "dsSysErr"
.Vb 2
\& general system error
\&old names here for compatibility\*(Aqs sake
.Ve
.IP "CDEFNFnd" 4
.IX Item "CDEFNFnd"
.PD 0
.IP "dsNotThe1" 4
.IX Item "dsNotThe1"
.PD
.Vb 1
\& not the disk I wanted
.Ve
.IP "dsBadStartupDisk" 4
.IX Item "dsBadStartupDisk"
.Vb 1
\& unable to mount boot volume (sad Mac only)
.Ve
.IP "dsSystemFileErr" 4
.IX Item "dsSystemFileErr"
.Vb 1
\& can\*(Aqt find System file to open (sad Mac only)
.Ve
.IP "dsHD20Installed" 4
.IX Item "dsHD20Installed"
.Vb 1
\& say \*(AqHD20 Startup\*(Aq
.Ve
.IP "mBarNFnd" 4
.IX Item "mBarNFnd"
.Vb 1
\& system error code for MBDF not found
.Ve
.IP "fsDSIntErr" 4
.IX Item "fsDSIntErr"
.Vb 1
\& non\-hardware Internal file system error
.Ve
.IP "hMenuFindErr" 4
.IX Item "hMenuFindErr"
.Vb 1
\& could not find HMenu\*(Aqs parent in MenuKey (wrong error code \- obsolete)
.Ve
.IP "userBreak" 4
.IX Item "userBreak"
.Vb 1
\& user debugger break
.Ve
.IP "strUserBreak" 4
.IX Item "strUserBreak"
.Vb 1
\& user debugger break; display string on stack
.Ve
.SH "DS Errors which are specific to the new runtime model introduced with PowerPC"
.IX Header "DS Errors which are specific to the new runtime model introduced with PowerPC"
.IP "dsBadLibrary" 4
.IX Item "dsBadLibrary"
.Vb 1
\& Bad shared library
.Ve
.SH "TO DO"
.IX Header "TO DO"
* make some sensible export tags
.SH "SOURCE AVAILABILITY"
.IX Header "SOURCE AVAILABILITY"
This source is part of a SourceForge project which always has the
latest sources in \s-1CVS\s0, as well as all of the previous releases.
.PP
.Vb 1
\&        http://sourceforge.net/projects/brian\-d\-foy/
.Ve
.PP
If, for some reason, I disappear from the world, one of the other
members of the project can shepherd this module appropriately.
.SH "AUTHOR"
.IX Header "AUTHOR"
brian d foy, \f(CW\*(C`<bdfoy.org>\*(C'\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2002\-2007 brian d foy.  All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
                                                                                                                                                                                                                                                                                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Errors5.18.3pm                          0100644 0001750 0001750 00000527354 12566241266 023720  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mac::Errors 3"
.TH Mac::Errors 3 "2014-01-03" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Errors \- constants for Mac error codes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use Mac::Errors qw(openErr);
\&        
\&        if( $value == openErr )
\&                {
\&                ...
\&                }
\&        
\&        my $error = $MacErrors{ $symbol };
\&        # \-\- OR \-\-
\&        my $error = $MacErrors{ $number };
\&        
\&        my $symbol = $error\->symbol;
\&        my $number = $error\->number;
\&        my $desc   = $error\->description; 
\&        
\&        # in MacPerl, $^E is meaningful, and we tie $MacError to it
\&        use Mac::Errors qw( $MacError );
\&        
\&        open FILE, $foo or die $^E;       # error number
\&        open FILE, $foo or die $MacError; # gets description from $^E
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \f(CW%MacErrors\fR hash indexes error information by the error
number or symbol.  Each value is a \f(CW\*(C`Mac::Errors\*(C'\fR object which
has the symbol, number, and description.
.PP
The \f(CW$MacError\fR scalar performs some tied magic to translate
MacPerl's \f(CW$^E\fR to the error text. On other platforms, it is
always undef.
.SH "METHODS"
.IX Header "METHODS"
.IP "symbol" 4
.IX Item "symbol"
Returns the symbolic constant, (e.g. openErr)
.IP "number" 4
.IX Item "number"
Returns the error number, (e.g. \-23)
.IP "description" 4
.IX Item "description"
Returns the error description from MacErrors.h, which may
mean something to you, and may not, (e.g. I/O System Errors).
.Sp
Descriptions of errors are not unique, and some errors do
not have a description.
.SH "CONSTANTS"
.IX Header "CONSTANTS"
All symbolic constants also have a subroutine of the same name.
The subroutine returns the error number.
.IP "paramErr" 4
.IX Item "paramErr"
.Vb 1
\& error in user parameter list
.Ve
.IP "noHardwareErr" 4
.IX Item "noHardwareErr"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "notEnoughHardwareErr" 4
.IX Item "notEnoughHardwareErr"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "userCanceledErr" 4
.IX Item "userCanceledErr"
.PD 0
.IP "qErr" 4
.IX Item "qErr"
.PD
.Vb 1
\& queue element not found during deletion
.Ve
.IP "vTypErr" 4
.IX Item "vTypErr"
.Vb 1
\& invalid queue element
.Ve
.IP "corErr" 4
.IX Item "corErr"
.Vb 1
\& core routine number out of range
.Ve
.IP "unimpErr" 4
.IX Item "unimpErr"
.Vb 1
\& unimplemented core routine
.Ve
.IP "SlpTypeErr" 4
.IX Item "SlpTypeErr"
.Vb 1
\& invalid queue element
.Ve
.IP "seNoDB" 4
.IX Item "seNoDB"
.Vb 1
\& no debugger installed to handle debugger command
.Ve
.IP "controlErr" 4
.IX Item "controlErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "statusErr" 4
.IX Item "statusErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "readErr" 4
.IX Item "readErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "writErr" 4
.IX Item "writErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "badUnitErr" 4
.IX Item "badUnitErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "unitEmptyErr" 4
.IX Item "unitEmptyErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "openErr" 4
.IX Item "openErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "closErr" 4
.IX Item "closErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "dRemovErr" 4
.IX Item "dRemovErr"
.Vb 1
\& tried to remove an open driver
.Ve
.IP "abortErr" 4
.IX Item "abortErr"
.Vb 1
\& IO call aborted by KillIO
.Ve
.IP "iIOAbortErr" 4
.IX Item "iIOAbortErr"
.Vb 1
\& IO abort error (Printing Manager)
.Ve
.IP "notOpenErr" 4
.IX Item "notOpenErr"
.Vb 1
\& Couldn\*(Aqt rd/wr/ctl/sts cause driver not opened
.Ve
.IP "unitTblFullErr" 4
.IX Item "unitTblFullErr"
.Vb 1
\& unit table has no more entries
.Ve
.IP "dceExtErr" 4
.IX Item "dceExtErr"
.Vb 1
\& dce extension error
.Ve
.IP "slotNumErr" 4
.IX Item "slotNumErr"
.Vb 1
\& invalid slot # error
.Ve
.IP "gcrOnMFMErr" 4
.IX Item "gcrOnMFMErr"
.Vb 1
\& gcr format on high density media error
.Ve
.IP "dirFulErr" 4
.IX Item "dirFulErr"
.Vb 1
\& Directory full
.Ve
.IP "dskFulErr" 4
.IX Item "dskFulErr"
.Vb 1
\& disk full
.Ve
.IP "nsvErr" 4
.IX Item "nsvErr"
.Vb 1
\& no such volume
.Ve
.IP "ioErr" 4
.IX Item "ioErr"
.Vb 1
\& I/O error (bummers)
.Ve
.IP "bdNamErr" 4
.IX Item "bdNamErr"
.Vb 1
\& there may be no bad names in the final system!
.Ve
.IP "fnOpnErr" 4
.IX Item "fnOpnErr"
.Vb 1
\& File not open
.Ve
.IP "eofErr" 4
.IX Item "eofErr"
.Vb 1
\& End of file
.Ve
.IP "posErr" 4
.IX Item "posErr"
.Vb 1
\& tried to position to before start of file (r/w)
.Ve
.IP "mFulErr" 4
.IX Item "mFulErr"
.Vb 1
\& memory full (open) or file won\*(Aqt fit (load)
.Ve
.IP "tmfoErr" 4
.IX Item "tmfoErr"
.Vb 1
\& too many files open
.Ve
.IP "fnfErr" 4
.IX Item "fnfErr"
.Vb 1
\& File not found
.Ve
.IP "wPrErr" 4
.IX Item "wPrErr"
.Vb 1
\& diskette is write protected.
.Ve
.IP "vLckdErr" 4
.IX Item "vLckdErr"
.Vb 1
\& volume is locked
.Ve
.IP "fBsyErr" 4
.IX Item "fBsyErr"
.Vb 1
\& File is busy (delete)
.Ve
.IP "dupFNErr" 4
.IX Item "dupFNErr"
.Vb 1
\& duplicate filename (rename)
.Ve
.IP "opWrErr" 4
.IX Item "opWrErr"
.Vb 1
\& file already open with write permission
.Ve
.IP "rfNumErr" 4
.IX Item "rfNumErr"
.Vb 1
\& refnum error
.Ve
.IP "gfpErr" 4
.IX Item "gfpErr"
.Vb 1
\& get file position error
.Ve
.IP "volOffLinErr" 4
.IX Item "volOffLinErr"
.Vb 1
\& volume not on line error (was Ejected)
.Ve
.IP "permErr" 4
.IX Item "permErr"
.Vb 1
\& permissions error (on file open)
.Ve
.IP "volOnLinErr" 4
.IX Item "volOnLinErr"
.Vb 1
\& drive volume already on\-line at MountVol
.Ve
.IP "nsDrvErr" 4
.IX Item "nsDrvErr"
.Vb 1
\& no such drive (tried to mount a bad drive num)
.Ve
.IP "noMacDskErr" 4
.IX Item "noMacDskErr"
.Vb 1
\& not a mac diskette (sig bytes are wrong)
.Ve
.IP "extFSErr" 4
.IX Item "extFSErr"
.Vb 1
\& volume in question belongs to an external fs
.Ve
.IP "fsRnErr" 4
.IX Item "fsRnErr"
.Vb 1
\& file system internal error:during rename the old entry was deleted but could not be restored.
.Ve
.IP "badMDBErr" 4
.IX Item "badMDBErr"
.Vb 1
\& bad master directory block
.Ve
.IP "wrPermErr" 4
.IX Item "wrPermErr"
.Vb 1
\& write permissions error
.Ve
.IP "dirNFErr" 4
.IX Item "dirNFErr"
.Vb 1
\& Directory not found
.Ve
.IP "tmwdoErr" 4
.IX Item "tmwdoErr"
.Vb 1
\& No free WDCB available
.Ve
.IP "badMovErr" 4
.IX Item "badMovErr"
.Vb 1
\& Move into offspring error
.Ve
.IP "wrgVolTypErr" 4
.IX Item "wrgVolTypErr"
.Vb 1
\& Wrong volume type error [operation not supported for MFS]
.Ve
.IP "fidNotFound" 4
.IX Item "fidNotFound"
.Vb 1
\& no file thread exists.
.Ve
.IP "fidExists" 4
.IX Item "fidExists"
.Vb 1
\& file id already exists
.Ve
.IP "notAFileErr" 4
.IX Item "notAFileErr"
.Vb 1
\& directory specified
.Ve
.IP "diffVolErr" 4
.IX Item "diffVolErr"
.Vb 1
\& files on different volumes
.Ve
.IP "catChangedErr" 4
.IX Item "catChangedErr"
.Vb 1
\& the catalog has been modified
.Ve
.IP "desktopDamagedErr" 4
.IX Item "desktopDamagedErr"
.Vb 1
\& desktop database files are corrupted
.Ve
.IP "sameFileErr" 4
.IX Item "sameFileErr"
.Vb 1
\& can\*(Aqt exchange a file with itself
.Ve
.IP "badFidErr" 4
.IX Item "badFidErr"
.Vb 1
\& file id is dangling or doesn\*(Aqt match with the file number
.Ve
.IP "notARemountErr" 4
.IX Item "notARemountErr"
.Vb 1
\& when _Mount allows only remounts and doesn\*(Aqt get one
.Ve
.IP "fileBoundsErr" 4
.IX Item "fileBoundsErr"
.Vb 1
\& file\*(Aqs EOF, offset, mark or size is too big
.Ve
.IP "fsDataTooBigErr" 4
.IX Item "fsDataTooBigErr"
.Vb 1
\& file or volume is too big for system
.Ve
.IP "volVMBusyErr" 4
.IX Item "volVMBusyErr"
.Vb 1
\& can\*(Aqt eject because volume is in use by VM
.Ve
.IP "badFCBErr" 4
.IX Item "badFCBErr"
.Vb 1
\& FCBRecPtr is not valid
.Ve
.IP "errFSUnknownCall" 4
.IX Item "errFSUnknownCall"
.Vb 1
\& selector is not recognized by this filesystem
.Ve
.IP "errFSBadFSRef" 4
.IX Item "errFSBadFSRef"
.Vb 1
\& FSRef parameter is bad
.Ve
.IP "errFSBadForkName" 4
.IX Item "errFSBadForkName"
.Vb 1
\& Fork name parameter is bad
.Ve
.IP "errFSBadBuffer" 4
.IX Item "errFSBadBuffer"
.Vb 1
\& A buffer parameter was bad
.Ve
.IP "errFSBadForkRef" 4
.IX Item "errFSBadForkRef"
.Vb 1
\& A ForkRefNum parameter was bad
.Ve
.IP "errFSBadInfoBitmap" 4
.IX Item "errFSBadInfoBitmap"
.Vb 1
\& A CatalogInfoBitmap or VolumeInfoBitmap has reserved or invalid bits set
.Ve
.IP "errFSMissingCatInfo" 4
.IX Item "errFSMissingCatInfo"
.Vb 1
\& A CatalogInfo parameter was NULL
.Ve
.IP "errFSNotAFolder" 4
.IX Item "errFSNotAFolder"
.Vb 1
\& Expected a folder, got a file
.Ve
.IP "errFSForkNotFound" 4
.IX Item "errFSForkNotFound"
.Vb 1
\& Named fork does not exist
.Ve
.IP "errFSNameTooLong" 4
.IX Item "errFSNameTooLong"
.Vb 1
\& File/fork name is too long to create/rename
.Ve
.IP "errFSMissingName" 4
.IX Item "errFSMissingName"
.Vb 1
\& A Unicode name parameter was NULL or nameLength parameter was zero
.Ve
.IP "errFSBadPosMode" 4
.IX Item "errFSBadPosMode"
.Vb 1
\& Newline bits set in positionMode
.Ve
.IP "errFSBadAllocFlags" 4
.IX Item "errFSBadAllocFlags"
.Vb 1
\& Invalid bits set in allocationFlags
.Ve
.IP "errFSNoMoreItems" 4
.IX Item "errFSNoMoreItems"
.Vb 1
\& Iteration ran out of items to return
.Ve
.IP "errFSBadItemCount" 4
.IX Item "errFSBadItemCount"
.Vb 1
\& maximumItems was zero
.Ve
.IP "errFSBadSearchParams" 4
.IX Item "errFSBadSearchParams"
.Vb 1
\& Something wrong with CatalogSearch searchParams
.Ve
.IP "errFSRefsDifferent" 4
.IX Item "errFSRefsDifferent"
.Vb 1
\& FSCompareFSRefs; refs are for different objects
.Ve
.IP "errFSForkExists" 4
.IX Item "errFSForkExists"
.Vb 1
\& Named fork already exists.
.Ve
.IP "errFSBadIteratorFlags" 4
.IX Item "errFSBadIteratorFlags"
.Vb 1
\& Flags passed to FSOpenIterator are bad
.Ve
.IP "errFSIteratorNotFound" 4
.IX Item "errFSIteratorNotFound"
.Vb 1
\& Passed FSIterator is not an open iterator
.Ve
.IP "errFSIteratorNotSupported" 4
.IX Item "errFSIteratorNotSupported"
.Vb 1
\& The iterator\*(Aqs flags or container are not supported by this call
.Ve
.IP "envNotPresent" 4
.IX Item "envNotPresent"
.Vb 1
\& returned by glue.
.Ve
.IP "envBadVers" 4
.IX Item "envBadVers"
.Vb 1
\& Version non\-positive
.Ve
.IP "envVersTooBig" 4
.IX Item "envVersTooBig"
.Vb 1
\& Version bigger than call can handle
.Ve
.IP "fontDecError" 4
.IX Item "fontDecError"
.Vb 1
\& error during font declaration
.Ve
.IP "fontNotDeclared" 4
.IX Item "fontNotDeclared"
.Vb 1
\& font not declared
.Ve
.IP "fontSubErr" 4
.IX Item "fontSubErr"
.Vb 1
\& font substitution occurred
.Ve
.IP "fontNotOutlineErr" 4
.IX Item "fontNotOutlineErr"
.Vb 1
\& bitmap font passed to routine that does outlines only
.Ve
.IP "firstDskErr" 4
.IX Item "firstDskErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "lastDskErr" 4
.IX Item "lastDskErr"
.Vb 1
\& I/O System Errors
.Ve
.IP "noDriveErr" 4
.IX Item "noDriveErr"
.Vb 1
\& drive not installed
.Ve
.IP "offLinErr" 4
.IX Item "offLinErr"
.Vb 1
\& r/w requested for an off\-line drive
.Ve
.IP "noAdrMkErr" 4
.IX Item "noAdrMkErr"
.Vb 1
\& couldn\*(Aqt find valid addr mark
.Ve
.IP "dataVerErr" 4
.IX Item "dataVerErr"
.Vb 1
\& read verify compare failed
.Ve
.IP "badCksmErr" 4
.IX Item "badCksmErr"
.Vb 1
\& addr mark checksum didn\*(Aqt check
.Ve
.IP "badBtSlpErr" 4
.IX Item "badBtSlpErr"
.Vb 1
\& bad addr mark bit slip nibbles
.Ve
.IP "noDtaMkErr" 4
.IX Item "noDtaMkErr"
.Vb 1
\& couldn\*(Aqt find a data mark header
.Ve
.IP "badDCksum" 4
.IX Item "badDCksum"
.Vb 1
\& bad data mark checksum
.Ve
.IP "badDBtSlp" 4
.IX Item "badDBtSlp"
.Vb 1
\& bad data mark bit slip nibbles
.Ve
.IP "wrUnderrun" 4
.IX Item "wrUnderrun"
.Vb 1
\& write underrun occurred
.Ve
.IP "cantStepErr" 4
.IX Item "cantStepErr"
.Vb 1
\& step handshake failed
.Ve
.IP "tk0BadErr" 4
.IX Item "tk0BadErr"
.Vb 1
\& track 0 detect doesn\*(Aqt change
.Ve
.IP "initIWMErr" 4
.IX Item "initIWMErr"
.Vb 1
\& unable to initialize IWM
.Ve
.IP "twoSideErr" 4
.IX Item "twoSideErr"
.Vb 1
\& tried to read 2nd side on a 1\-sided drive
.Ve
.IP "spdAdjErr" 4
.IX Item "spdAdjErr"
.Vb 1
\& unable to correctly adjust disk speed
.Ve
.IP "seekErr" 4
.IX Item "seekErr"
.Vb 1
\& track number wrong on address mark
.Ve
.IP "sectNFErr" 4
.IX Item "sectNFErr"
.Vb 1
\& sector number never found on a track
.Ve
.IP "fmt1Err" 4
.IX Item "fmt1Err"
.Vb 1
\& can\*(Aqt find sector 0 after track format
.Ve
.IP "fmt2Err" 4
.IX Item "fmt2Err"
.Vb 1
\& can\*(Aqt get enough sync
.Ve
.IP "verErr" 4
.IX Item "verErr"
.Vb 1
\& track failed to verify
.Ve
.IP "clkRdErr" 4
.IX Item "clkRdErr"
.Vb 1
\& unable to read same clock value twice
.Ve
.IP "clkWrErr" 4
.IX Item "clkWrErr"
.Vb 1
\& time written did not verify
.Ve
.IP "prWrErr" 4
.IX Item "prWrErr"
.Vb 1
\& parameter ram written didn\*(Aqt read\-verify
.Ve
.IP "prInitErr" 4
.IX Item "prInitErr"
.Vb 1
\& InitUtil found the parameter ram uninitialized
.Ve
.IP "rcvrErr" 4
.IX Item "rcvrErr"
.Vb 1
\& SCC receiver error (framing; parity; OR)
.Ve
.SH "Scrap Manager errors"
.IX Header "Scrap Manager errors"
.IP "noScrapErr" 4
.IX Item "noScrapErr"
.Vb 1
\& No scrap exists error
.Ve
.SH "ENET error codes"
.IX Header "ENET error codes"
.IP "eLenErr" 4
.IX Item "eLenErr"
.Vb 1
\& Length error ddpLenErr
.Ve
.IP "ddpSktErr" 4
.IX Item "ddpSktErr"
.Vb 1
\& error in soket number
.Ve
.IP "ddpLenErr" 4
.IX Item "ddpLenErr"
.Vb 1
\& data length too big
.Ve
.IP "noBridgeErr" 4
.IX Item "noBridgeErr"
.Vb 1
\& no network bridge for non\-local send
.Ve
.IP "lapProtErr" 4
.IX Item "lapProtErr"
.Vb 1
\& error in attaching/detaching protocol
.Ve
.IP "excessCollsns" 4
.IX Item "excessCollsns"
.Vb 1
\& excessive collisions on write
.Ve
.IP "portNotPwr" 4
.IX Item "portNotPwr"
.Vb 1
\& serial port not currently powered
.Ve
.IP "portInUse" 4
.IX Item "portInUse"
.Vb 1
\& driver Open error code (port is in use)
.Ve
.SH "Memory Manager errors"
.IX Header "Memory Manager errors"
.IP "memROZWarn" 4
.IX Item "memROZWarn"
.Vb 1
\& soft error in ROZ
.Ve
.IP "memROZError" 4
.IX Item "memROZError"
.Vb 1
\& hard error in ROZ
.Ve
.IP "memROZErr" 4
.IX Item "memROZErr"
.Vb 1
\& hard error in ROZ
.Ve
.IP "memFullErr" 4
.IX Item "memFullErr"
.Vb 1
\& Not enough room in heap zone
.Ve
.IP "nilHandleErr" 4
.IX Item "nilHandleErr"
.Vb 1
\& Master Pointer was NIL in HandleZone or other
.Ve
.IP "memWZErr" 4
.IX Item "memWZErr"
.Vb 1
\& WhichZone failed (applied to free block)
.Ve
.IP "memPurErr" 4
.IX Item "memPurErr"
.Vb 1
\& trying to purge a locked or non\-purgeable block
.Ve
.IP "memAdrErr" 4
.IX Item "memAdrErr"
.Vb 1
\& address was odd; or out of range
.Ve
.IP "memAZErr" 4
.IX Item "memAZErr"
.Vb 1
\& Address in zone check failed
.Ve
.IP "memPCErr" 4
.IX Item "memPCErr"
.Vb 1
\& Pointer Check failed
.Ve
.IP "memBCErr" 4
.IX Item "memBCErr"
.Vb 1
\& Block Check failed
.Ve
.IP "memSCErr" 4
.IX Item "memSCErr"
.Vb 1
\& Size Check failed
.Ve
.SH "Printing Errors"
.IX Header "Printing Errors"
.IP "iMemFullErr" 4
.IX Item "iMemFullErr"
.PD 0
.IP "resourceInMemory" 4
.IX Item "resourceInMemory"
.PD
.Vb 1
\& Resource already in memory
.Ve
.IP "writingPastEnd" 4
.IX Item "writingPastEnd"
.Vb 1
\& Writing past end of file
.Ve
.IP "inputOutOfBounds" 4
.IX Item "inputOutOfBounds"
.Vb 1
\& Offset of Count out of bounds
.Ve
.IP "resNotFound" 4
.IX Item "resNotFound"
.Vb 1
\& Resource not found
.Ve
.IP "resFNotFound" 4
.IX Item "resFNotFound"
.Vb 1
\& Resource file not found
.Ve
.IP "addResFailed" 4
.IX Item "addResFailed"
.Vb 1
\& AddResource failed
.Ve
.IP "addRefFailed" 4
.IX Item "addRefFailed"
.Vb 1
\& AddReference failed
.Ve
.IP "rmvResFailed" 4
.IX Item "rmvResFailed"
.Vb 1
\& RmveResource failed
.Ve
.IP "rmvRefFailed" 4
.IX Item "rmvRefFailed"
.Vb 1
\& RmveReference failed
.Ve
.IP "resAttrErr" 4
.IX Item "resAttrErr"
.Vb 1
\& attribute inconsistent with operation
.Ve
.IP "mapReadErr" 4
.IX Item "mapReadErr"
.Vb 1
\& map inconsistent with operation
.Ve
.IP "CantDecompress" 4
.IX Item "CantDecompress"
.Vb 1
\& resource bent ("the bends") \- can\*(Aqt decompress a compressed resource
.Ve
.IP "badExtResource" 4
.IX Item "badExtResource"
.Vb 1
\& extended resource has a bad format.
.Ve
.IP "noMemForPictPlaybackErr" 4
.IX Item "noMemForPictPlaybackErr"
.PD 0
.IP "rgnOverflowErr" 4
.IX Item "rgnOverflowErr"
.IP "rgnTooBigError" 4
.IX Item "rgnTooBigError"
.IP "pixMapTooDeepErr" 4
.IX Item "pixMapTooDeepErr"
.IP "insufficientStackErr" 4
.IX Item "insufficientStackErr"
.IP "cMatchErr" 4
.IX Item "cMatchErr"
.PD
.Vb 1
\& Color2Index failed to find an index
.Ve
.IP "cTempMemErr" 4
.IX Item "cTempMemErr"
.Vb 1
\& failed to allocate memory for temporary structures
.Ve
.IP "cNoMemErr" 4
.IX Item "cNoMemErr"
.Vb 1
\& failed to allocate memory for structure
.Ve
.IP "cRangeErr" 4
.IX Item "cRangeErr"
.Vb 1
\& range error on colorTable request
.Ve
.IP "cProtectErr" 4
.IX Item "cProtectErr"
.Vb 1
\& colorTable entry protection violation
.Ve
.IP "cDevErr" 4
.IX Item "cDevErr"
.Vb 1
\& invalid type of graphics device
.Ve
.IP "cResErr" 4
.IX Item "cResErr"
.Vb 1
\& invalid resolution for MakeITable
.Ve
.IP "cDepthErr" 4
.IX Item "cDepthErr"
.Vb 1
\& invalid pixel depth
.Ve
.IP "rgnTooBigErr" 4
.IX Item "rgnTooBigErr"
.PD 0
.IP "updPixMemErr" 4
.IX Item "updPixMemErr"
.PD
.Vb 1
\& insufficient memory to update a pixmap
.Ve
.IP "pictInfoVersionErr" 4
.IX Item "pictInfoVersionErr"
.Vb 1
\& wrong version of the PictInfo structure
.Ve
.IP "pictInfoIDErr" 4
.IX Item "pictInfoIDErr"
.Vb 1
\& the internal consistancy check for the PictInfoID is wrong
.Ve
.IP "pictInfoVerbErr" 4
.IX Item "pictInfoVerbErr"
.Vb 1
\& the passed verb was invalid
.Ve
.IP "cantLoadPickMethodErr" 4
.IX Item "cantLoadPickMethodErr"
.Vb 1
\& unable to load the custom pick proc
.Ve
.IP "colorsRequestedErr" 4
.IX Item "colorsRequestedErr"
.Vb 1
\& the number of colors requested was illegal
.Ve
.SH "General Errors"
.IX Header "General Errors"
.IP "cmProfileError" 4
.IX Item "cmProfileError"
.PD 0
.IP "cmMethodError" 4
.IX Item "cmMethodError"
.IP "cmMethodNotFound" 4
.IX Item "cmMethodNotFound"
.PD
.Vb 1
\& CMM not present
.Ve
.IP "cmProfileNotFound" 4
.IX Item "cmProfileNotFound"
.Vb 1
\& Responder error
.Ve
.IP "cmProfilesIdentical" 4
.IX Item "cmProfilesIdentical"
.Vb 1
\& Profiles the same
.Ve
.IP "cmCantConcatenateError" 4
.IX Item "cmCantConcatenateError"
.Vb 1
\& Profile can\*(Aqt be concatenated
.Ve
.IP "cmCantXYZ" 4
.IX Item "cmCantXYZ"
.Vb 1
\& CMM cant handle XYZ space
.Ve
.IP "cmCantDeleteProfile" 4
.IX Item "cmCantDeleteProfile"
.Vb 1
\& Responder error
.Ve
.IP "cmUnsupportedDataType" 4
.IX Item "cmUnsupportedDataType"
.Vb 1
\& Responder error
.Ve
.SH "Sound Manager errors"
.IX Header "Sound Manager errors"
.IP "noHardware" 4
.IX Item "noHardware"
.Vb 1
\& obsolete spelling
.Ve
.IP "notEnoughHardware" 4
.IX Item "notEnoughHardware"
.Vb 1
\& obsolete spelling
.Ve
.IP "queueFull" 4
.IX Item "queueFull"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "resProblem" 4
.IX Item "resProblem"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "badChannel" 4
.IX Item "badChannel"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "badFormat" 4
.IX Item "badFormat"
.Vb 1
\& Sound Manager Error Returns
.Ve
.IP "notEnoughBufferSpace" 4
.IX Item "notEnoughBufferSpace"
.Vb 1
\& could not allocate enough memory
.Ve
.IP "badFileFormat" 4
.IX Item "badFileFormat"
.Vb 1
\& was not type AIFF or was of bad format,corrupt
.Ve
.IP "channelBusy" 4
.IX Item "channelBusy"
.Vb 1
\& the Channel is being used for a PFD already
.Ve
.IP "buffersTooSmall" 4
.IX Item "buffersTooSmall"
.Vb 1
\& can not operate in the memory allowed
.Ve
.IP "channelNotBusy" 4
.IX Item "channelNotBusy"
.PD 0
.IP "noMoreRealTime" 4
.IX Item "noMoreRealTime"
.PD
.Vb 1
\& not enough CPU cycles left to add another task
.Ve
.IP "siVBRCompressionNotSupported" 4
.IX Item "siVBRCompressionNotSupported"
.Vb 1
\& vbr audio compression not supported for this operation
.Ve
.IP "siNoSoundInHardware" 4
.IX Item "siNoSoundInHardware"
.Vb 1
\& no Sound Input hardware
.Ve
.IP "siBadSoundInDevice" 4
.IX Item "siBadSoundInDevice"
.Vb 1
\& invalid index passed to SoundInGetIndexedDevice
.Ve
.IP "siNoBufferSpecified" 4
.IX Item "siNoBufferSpecified"
.Vb 1
\& returned by synchronous SPBRecord if nil buffer passed
.Ve
.IP "siInvalidCompression" 4
.IX Item "siInvalidCompression"
.Vb 1
\& invalid compression type
.Ve
.IP "siHardDriveTooSlow" 4
.IX Item "siHardDriveTooSlow"
.Vb 1
\& hard drive too slow to record to disk
.Ve
.IP "siInvalidSampleRate" 4
.IX Item "siInvalidSampleRate"
.Vb 1
\& invalid sample rate
.Ve
.IP "siInvalidSampleSize" 4
.IX Item "siInvalidSampleSize"
.Vb 1
\& invalid sample size
.Ve
.IP "siDeviceBusyErr" 4
.IX Item "siDeviceBusyErr"
.Vb 1
\& input device already in use
.Ve
.IP "siBadDeviceName" 4
.IX Item "siBadDeviceName"
.Vb 1
\& input device could not be opened
.Ve
.IP "siBadRefNum" 4
.IX Item "siBadRefNum"
.Vb 1
\& invalid input device reference number
.Ve
.IP "siInputDeviceErr" 4
.IX Item "siInputDeviceErr"
.Vb 1
\& input device hardware failure
.Ve
.IP "siUnknownInfoType" 4
.IX Item "siUnknownInfoType"
.Vb 1
\& invalid info type selector (returned by driver)
.Ve
.IP "noSynthFound" 4
.IX Item "noSynthFound"
.PD 0
.IP "synthOpenFailed" 4
.IX Item "synthOpenFailed"
.IP "synthNotReady" 4
.IX Item "synthNotReady"
.IP "bufTooSmall" 4
.IX Item "bufTooSmall"
.IP "voiceNotFound" 4
.IX Item "voiceNotFound"
.IP "incompatibleVoice" 4
.IX Item "incompatibleVoice"
.IP "badDictFormat" 4
.IX Item "badDictFormat"
.IP "midiNoClientErr" 4
.IX Item "midiNoClientErr"
.PD
.Vb 1
\& no client with that ID found
.Ve
.IP "midiNoPortErr" 4
.IX Item "midiNoPortErr"
.Vb 1
\& no port with that ID found
.Ve
.IP "midiTooManyPortsErr" 4
.IX Item "midiTooManyPortsErr"
.Vb 1
\& too many ports already installed in the system
.Ve
.IP "midiTooManyConsErr" 4
.IX Item "midiTooManyConsErr"
.Vb 1
\& too many connections made
.Ve
.IP "midiVConnectErr" 4
.IX Item "midiVConnectErr"
.Vb 1
\& pending virtual connection created
.Ve
.IP "midiVConnectMade" 4
.IX Item "midiVConnectMade"
.Vb 1
\& pending virtual connection resolved
.Ve
.IP "midiVConnectRmvd" 4
.IX Item "midiVConnectRmvd"
.Vb 1
\& pending virtual connection removed
.Ve
.IP "midiNoConErr" 4
.IX Item "midiNoConErr"
.Vb 1
\& no connection exists between specified ports
.Ve
.IP "midiWriteErr" 4
.IX Item "midiWriteErr"
.Vb 1
\& MIDIWritePacket couldn\*(Aqt write to all connected ports
.Ve
.IP "midiNameLenErr" 4
.IX Item "midiNameLenErr"
.Vb 1
\& name supplied is longer than 31 characters
.Ve
.IP "midiDupIDErr" 4
.IX Item "midiDupIDErr"
.Vb 1
\& duplicate client ID
.Ve
.IP "siInitSDTblErr" 4
.IX Item "siInitSDTblErr"
.Vb 1
\& slot int dispatch table could not be initialized.
.Ve
.IP "siInitVBLQsErr" 4
.IX Item "siInitVBLQsErr"
.Vb 1
\& VBLqueues for all slots could not be initialized.
.Ve
.IP "siInitSPTblErr" 4
.IX Item "siInitSPTblErr"
.Vb 1
\& slot priority table could not be initialized.
.Ve
.IP "sdmJTInitErr" 4
.IX Item "sdmJTInitErr"
.Vb 1
\& SDM Jump Table could not be initialized.
.Ve
.IP "sdmInitErr" 4
.IX Item "sdmInitErr"
.Vb 1
\& SDM could not be initialized.
.Ve
.IP "sdmSRTInitErr" 4
.IX Item "sdmSRTInitErr"
.Vb 1
\& Slot Resource Table could not be initialized.
.Ve
.IP "sdmPRAMInitErr" 4
.IX Item "sdmPRAMInitErr"
.Vb 1
\& Slot PRAM could not be initialized.
.Ve
.IP "smSDMInitErr" 4
.IX Item "smSDMInitErr"
.Vb 1
\& Error; SDM could not be initialized.
.Ve
.IP "smSRTInitErr" 4
.IX Item "smSRTInitErr"
.Vb 1
\& Error; Slot Resource Table could not be initialized.
.Ve
.IP "smPRAMInitErr" 4
.IX Item "smPRAMInitErr"
.Vb 1
\& Error; Slot Resource Table could not be initialized.
.Ve
.IP "smPriInitErr" 4
.IX Item "smPriInitErr"
.Vb 1
\& Error; Cards could not be initialized.
.Ve
.IP "smEmptySlot" 4
.IX Item "smEmptySlot"
.Vb 1
\& No card in slot
.Ve
.IP "smCRCFail" 4
.IX Item "smCRCFail"
.Vb 1
\& CRC check failed for declaration data
.Ve
.IP "smFormatErr" 4
.IX Item "smFormatErr"
.Vb 1
\& FHeader Format is not Apple\*(Aqs
.Ve
.IP "smRevisionErr" 4
.IX Item "smRevisionErr"
.Vb 1
\& Wrong revison level
.Ve
.IP "smNoDir" 4
.IX Item "smNoDir"
.Vb 1
\& Directory offset is Nil
.Ve
.IP "smDisabledSlot" 4
.IX Item "smDisabledSlot"
.Vb 1
\& This slot is disabled (\-305 use to be smLWTstBad)
.Ve
.IP "smResrvErr" 4
.IX Item "smResrvErr"
.Vb 1
\& Fatal reserved error. Resreved field <> 0.
.Ve
.IP "smUnExBusErr" 4
.IX Item "smUnExBusErr"
.Vb 1
\& Unexpected BusError
.Ve
.IP "smBLFieldBad" 4
.IX Item "smBLFieldBad"
.Vb 1
\& ByteLanes field was bad.
.Ve
.IP "smFHBlockRdErr" 4
.IX Item "smFHBlockRdErr"
.Vb 1
\& Error occurred during _sGetFHeader.
.Ve
.IP "smFHBlkDispErr" 4
.IX Item "smFHBlkDispErr"
.Vb 1
\& Error occurred during _sDisposePtr (Dispose of FHeader block).
.Ve
.IP "smDisposePErr" 4
.IX Item "smDisposePErr"
.Vb 1
\& _DisposePointer error
.Ve
.IP "smNoBoardSRsrc" 4
.IX Item "smNoBoardSRsrc"
.Vb 1
\& No Board sResource.
.Ve
.IP "smGetPRErr" 4
.IX Item "smGetPRErr"
.Vb 1
\& Error occurred during _sGetPRAMRec (See SIMStatus).
.Ve
.IP "smNoBoardId" 4
.IX Item "smNoBoardId"
.Vb 1
\& No Board Id.
.Ve
.IP "smInitStatVErr" 4
.IX Item "smInitStatVErr"
.Vb 1
\& The InitStatusV field was negative after primary or secondary init.
.Ve
.IP "smInitTblVErr" 4
.IX Item "smInitTblVErr"
.Vb 1
\& An error occurred while trying to initialize the Slot Resource Table.
.Ve
.IP "smNoJmpTbl" 4
.IX Item "smNoJmpTbl"
.Vb 1
\& SDM jump table could not be created.
.Ve
.IP "smReservedSlot" 4
.IX Item "smReservedSlot"
.Vb 1
\& slot is reserved, VM should not use this address space.
.Ve
.IP "smBadBoardId" 4
.IX Item "smBadBoardId"
.Vb 1
\& BoardId was wrong; re\-init the PRAM record.
.Ve
.IP "smBusErrTO" 4
.IX Item "smBusErrTO"
.Vb 2
\& BusError time out.
\&These errors are logged in the  vendor status field of the sInfo record.
.Ve
.IP "svTempDisable" 4
.IX Item "svTempDisable"
.Vb 1
\& Temporarily disable card but run primary init.
.Ve
.IP "svDisabled" 4
.IX Item "svDisabled"
.Vb 1
\& Reserve range \-32640 to \-32768 for Apple temp disables.
.Ve
.IP "smBadRefId" 4
.IX Item "smBadRefId"
.Vb 1
\& Reference Id not found in List
.Ve
.IP "smBadsList" 4
.IX Item "smBadsList"
.Vb 1
\& Bad sList: Id1 < Id2 < Id3 ...format is not followed.
.Ve
.IP "smReservedErr" 4
.IX Item "smReservedErr"
.Vb 1
\& Reserved field not zero
.Ve
.IP "smCPUErr" 4
.IX Item "smCPUErr"
.Vb 1
\& Code revision is wrong
.Ve
.IP "smsPointerNil" 4
.IX Item "smsPointerNil"
.Vb 1
\& LPointer is nil From sOffsetData. If this error occurs; check sInfo rec for more information.
.Ve
.IP "smNilsBlockErr" 4
.IX Item "smNilsBlockErr"
.Vb 1
\& Nil sBlock error (Dont allocate and try to use a nil sBlock)
.Ve
.IP "smSlotOOBErr" 4
.IX Item "smSlotOOBErr"
.Vb 1
\& Slot out of bounds error
.Ve
.IP "smSelOOBErr" 4
.IX Item "smSelOOBErr"
.Vb 1
\& Selector out of bounds error
.Ve
.IP "smNewPErr" 4
.IX Item "smNewPErr"
.Vb 1
\& _NewPtr error
.Ve
.IP "smBlkMoveErr" 4
.IX Item "smBlkMoveErr"
.Vb 1
\& _BlockMove error
.Ve
.IP "smCkStatusErr" 4
.IX Item "smCkStatusErr"
.Vb 1
\& Status of slot = fail.
.Ve
.IP "smGetDrvrNamErr" 4
.IX Item "smGetDrvrNamErr"
.Vb 1
\& Error occurred during _sGetDrvrName.
.Ve
.IP "smDisDrvrNamErr" 4
.IX Item "smDisDrvrNamErr"
.Vb 1
\& Error occurred during _sDisDrvrName.
.Ve
.IP "smNoMoresRsrcs" 4
.IX Item "smNoMoresRsrcs"
.Vb 1
\& No more sResources
.Ve
.IP "smsGetDrvrErr" 4
.IX Item "smsGetDrvrErr"
.Vb 1
\& Error occurred during _sGetDriver.
.Ve
.IP "smBadsPtrErr" 4
.IX Item "smBadsPtrErr"
.Vb 1
\& Bad pointer was passed to sCalcsPointer
.Ve
.IP "smByteLanesErr" 4
.IX Item "smByteLanesErr"
.Vb 1
\& NumByteLanes was determined to be zero.
.Ve
.IP "smOffsetErr" 4
.IX Item "smOffsetErr"
.Vb 1
\& Offset was too big (temporary error
.Ve
.IP "smNoGoodOpens" 4
.IX Item "smNoGoodOpens"
.Vb 1
\& No opens were successfull in the loop.
.Ve
.IP "smSRTOvrFlErr" 4
.IX Item "smSRTOvrFlErr"
.Vb 1
\& SRT over flow.
.Ve
.SH "Dictionary Manager errors"
.IX Header "Dictionary Manager errors"
.IP "notBTree" 4
.IX Item "notBTree"
.Vb 1
\& The file is not a dictionary.
.Ve
.IP "btNoSpace" 4
.IX Item "btNoSpace"
.Vb 1
\& Can\*(Aqt allocate disk space.
.Ve
.IP "btDupRecErr" 4
.IX Item "btDupRecErr"
.Vb 1
\& Record already exists.
.Ve
.IP "btRecNotFnd" 4
.IX Item "btRecNotFnd"
.Vb 1
\& Record cannot be found.
.Ve
.IP "btKeyLenErr" 4
.IX Item "btKeyLenErr"
.Vb 1
\& Maximum key length is too long or equal to zero.
.Ve
.IP "btKeyAttrErr" 4
.IX Item "btKeyAttrErr"
.Vb 1
\& There is no such a key attribute.
.Ve
.IP "unknownInsertModeErr" 4
.IX Item "unknownInsertModeErr"
.Vb 1
\& There is no such an insert mode.
.Ve
.IP "recordDataTooBigErr" 4
.IX Item "recordDataTooBigErr"
.Vb 1
\& The record data is bigger than buffer size (1024 bytes).
.Ve
.IP "fsmFFSNotFoundErr" 4
.IX Item "fsmFFSNotFoundErr"
.Vb 1
\& Foreign File system does not exist \- new Pack2 could return this error too
.Ve
.IP "fsmBusyFFSErr" 4
.IX Item "fsmBusyFFSErr"
.Vb 1
\& File system is busy, cannot be removed
.Ve
.IP "fsmBadFFSNameErr" 4
.IX Item "fsmBadFFSNameErr"
.Vb 1
\& Name length not 1 <= length <= 31
.Ve
.IP "fsmBadFSDLenErr" 4
.IX Item "fsmBadFSDLenErr"
.Vb 1
\& FSD size incompatible with current FSM vers
.Ve
.IP "fsmDuplicateFSIDErr" 4
.IX Item "fsmDuplicateFSIDErr"
.Vb 1
\& FSID already exists on InstallFS
.Ve
.IP "fsmBadFSDVersionErr" 4
.IX Item "fsmBadFSDVersionErr"
.Vb 1
\& FSM version incompatible with FSD
.Ve
.IP "fsmNoAlternateStackErr" 4
.IX Item "fsmNoAlternateStackErr"
.Vb 1
\& no alternate stack for HFS CI
.Ve
.SH "Edition Mgr errors"
.IX Header "Edition Mgr errors"
.IP "editionMgrInitErr" 4
.IX Item "editionMgrInitErr"
.Vb 1
\& edition manager not inited by this app
.Ve
.IP "badSectionErr" 4
.IX Item "badSectionErr"
.Vb 1
\& not a valid SectionRecord
.Ve
.IP "notRegisteredSectionErr" 4
.IX Item "notRegisteredSectionErr"
.Vb 1
\& not a registered SectionRecord
.Ve
.IP "badEditionFileErr" 4
.IX Item "badEditionFileErr"
.Vb 1
\& edition file is corrupt
.Ve
.IP "badSubPartErr" 4
.IX Item "badSubPartErr"
.Vb 1
\& can not use sub parts in this release
.Ve
.IP "multiplePublisherWrn" 4
.IX Item "multiplePublisherWrn"
.Vb 1
\& A Publisher is already registered for that container
.Ve
.IP "containerNotFoundWrn" 4
.IX Item "containerNotFoundWrn"
.Vb 1
\& could not find editionContainer at this time
.Ve
.IP "containerAlreadyOpenWrn" 4
.IX Item "containerAlreadyOpenWrn"
.Vb 1
\& container already opened by this section
.Ve
.IP "teScrapSizeErr" 4
.IX Item "teScrapSizeErr"
.Vb 1
\& scrap item too big for text edit record
.Ve
.IP "hwParamErr" 4
.IX Item "hwParamErr"
.Vb 1
\& bad selector for _HWPriv
.Ve
.SH "Process Manager errors"
.IX Header "Process Manager errors"
.IP "procNotFound" 4
.IX Item "procNotFound"
.Vb 1
\& no eligible process with specified descriptor
.Ve
.IP "memFragErr" 4
.IX Item "memFragErr"
.Vb 1
\& not enough room to launch app w/special requirements
.Ve
.IP "appModeErr" 4
.IX Item "appModeErr"
.Vb 1
\& memory mode is 32\-bit, but app not 32\-bit clean
.Ve
.IP "protocolErr" 4
.IX Item "protocolErr"
.Vb 1
\& app made module calls in improper order
.Ve
.IP "hardwareConfigErr" 4
.IX Item "hardwareConfigErr"
.Vb 1
\& hardware configuration not correct for call
.Ve
.IP "appMemFullErr" 4
.IX Item "appMemFullErr"
.Vb 1
\& application SIZE not big enough for launch
.Ve
.IP "appIsDaemon" 4
.IX Item "appIsDaemon"
.Vb 1
\& app is BG\-only, and launch flags disallow this
.Ve
.IP "bufferIsSmall" 4
.IX Item "bufferIsSmall"
.Vb 1
\& error returns from Post and Accept
.Ve
.IP "noOutstandingHLE" 4
.IX Item "noOutstandingHLE"
.PD 0
.IP "connectionInvalid" 4
.IX Item "connectionInvalid"
.PD
.SH "More Process Manager errors"
.IX Header "More Process Manager errors"
.IP "wrongApplicationPlatform" 4
.IX Item "wrongApplicationPlatform"
.Vb 1
\& The application could not launch because the required platform is not available
.Ve
.IP "appVersionTooOld" 4
.IX Item "appVersionTooOld"
.Vb 1
\& The application\*(Aqs creator and version are incompatible with the current version of Mac OS.
.Ve
.IP "threadTooManyReqsErr" 4
.IX Item "threadTooManyReqsErr"
.PD 0
.IP "threadNotFoundErr" 4
.IX Item "threadNotFoundErr"
.IP "notEnoughMemoryErr" 4
.IX Item "notEnoughMemoryErr"
.PD
.Vb 1
\& insufficient physical memory
.Ve
.IP "notHeldErr" 4
.IX Item "notHeldErr"
.Vb 1
\& specified range of memory is not held
.Ve
.IP "cannotMakeContiguousErr" 4
.IX Item "cannotMakeContiguousErr"
.Vb 1
\& cannot make specified range contiguous
.Ve
.IP "notLockedErr" 4
.IX Item "notLockedErr"
.Vb 1
\& specified range of memory is not locked
.Ve
.IP "interruptsMaskedErr" 4
.IX Item "interruptsMaskedErr"
.Vb 1
\& don\*(Aqt call with interrupts masked
.Ve
.IP "cannotDeferErr" 4
.IX Item "cannotDeferErr"
.Vb 1
\& unable to defer additional functions
.Ve
.IP "vmMorePhysicalThanVirtualErr" 4
.IX Item "vmMorePhysicalThanVirtualErr"
.Vb 1
\& VM could not start because there was more physical memory than virtual memory (bad setting in VM config resource)
.Ve
.IP "vmKernelMMUInitErr" 4
.IX Item "vmKernelMMUInitErr"
.Vb 1
\& VM could not start because VM_MMUInit kernel call failed
.Ve
.IP "vmOffErr" 4
.IX Item "vmOffErr"
.Vb 1
\& VM was configured off, or command key was held down at boot
.Ve
.IP "vmMemLckdErr" 4
.IX Item "vmMemLckdErr"
.Vb 1
\& VM could not start because of a lock table conflict (only on non\-SuperMario ROMs)
.Ve
.IP "vmBadDriver" 4
.IX Item "vmBadDriver"
.Vb 1
\& VM could not start because the driver was incompatible
.Ve
.IP "vmInvalidBackingFileIDErr" 4
.IX Item "vmInvalidBackingFileIDErr"
.Vb 1
\& invalid BackingFileID
.Ve
.IP "vmMappingPrivilegesErr" 4
.IX Item "vmMappingPrivilegesErr"
.Vb 1
\& requested MappingPrivileges cannot be obtained
.Ve
.IP "vmBusyBackingFileErr" 4
.IX Item "vmBusyBackingFileErr"
.Vb 1
\& open views found on BackingFile
.Ve
.IP "vmNoMoreBackingFilesErr" 4
.IX Item "vmNoMoreBackingFilesErr"
.Vb 1
\& no more BackingFiles were found
.Ve
.IP "vmInvalidFileViewIDErr" 4
.IX Item "vmInvalidFileViewIDErr"
.Vb 1
\& invalid FileViewID
.Ve
.IP "vmFileViewAccessErr" 4
.IX Item "vmFileViewAccessErr"
.Vb 1
\& requested FileViewAccess cannot be obtained
.Ve
.IP "vmNoMoreFileViewsErr" 4
.IX Item "vmNoMoreFileViewsErr"
.Vb 1
\& no more FileViews were found
.Ve
.IP "vmAddressNotInFileViewErr" 4
.IX Item "vmAddressNotInFileViewErr"
.Vb 1
\& address is not in a FileView
.Ve
.IP "rcDBNull" 4
.IX Item "rcDBNull"
.PD 0
.IP "rcDBValue" 4
.IX Item "rcDBValue"
.IP "rcDBError" 4
.IX Item "rcDBError"
.IP "rcDBBadType" 4
.IX Item "rcDBBadType"
.IP "rcDBBreak" 4
.IX Item "rcDBBreak"
.IP "rcDBExec" 4
.IX Item "rcDBExec"
.IP "rcDBBadSessID" 4
.IX Item "rcDBBadSessID"
.IP "rcDBBadSessNum" 4
.IX Item "rcDBBadSessNum"
.PD
.Vb 1
\& bad session number for DBGetConnInfo
.Ve
.IP "rcDBBadDDEV" 4
.IX Item "rcDBBadDDEV"
.Vb 1
\& bad ddev specified on DBInit
.Ve
.IP "rcDBAsyncNotSupp" 4
.IX Item "rcDBAsyncNotSupp"
.Vb 1
\& ddev does not support async calls
.Ve
.IP "rcDBBadAsyncPB" 4
.IX Item "rcDBBadAsyncPB"
.Vb 1
\& tried to kill a bad pb
.Ve
.IP "rcDBNoHandler" 4
.IX Item "rcDBNoHandler"
.Vb 1
\& no app handler for specified data type
.Ve
.IP "rcDBWrongVersion" 4
.IX Item "rcDBWrongVersion"
.Vb 1
\& incompatible versions
.Ve
.IP "hmHelpDisabled" 4
.IX Item "hmHelpDisabled"
.Vb 1
\& Show Balloons mode was off, call to routine ignored
.Ve
.IP "hmBalloonAborted" 4
.IX Item "hmBalloonAborted"
.Vb 1
\& Returned if mouse was moving or mouse wasn\*(Aqt in window port rect
.Ve
.IP "hmSameAsLastBalloon" 4
.IX Item "hmSameAsLastBalloon"
.Vb 1
\& Returned from HMShowMenuBalloon if menu & item is same as last time
.Ve
.IP "hmHelpManagerNotInited" 4
.IX Item "hmHelpManagerNotInited"
.Vb 1
\& Returned from HMGetHelpMenuHandle if help menu not setup
.Ve
.IP "hmSkippedBalloon" 4
.IX Item "hmSkippedBalloon"
.Vb 1
\& Returned from calls if helpmsg specified a skip balloon
.Ve
.IP "hmWrongVersion" 4
.IX Item "hmWrongVersion"
.Vb 1
\& Returned if help mgr resource was the wrong version
.Ve
.IP "hmUnknownHelpType" 4
.IX Item "hmUnknownHelpType"
.Vb 1
\& Returned if help msg record contained a bad type
.Ve
.IP "hmOperationUnsupported" 4
.IX Item "hmOperationUnsupported"
.Vb 1
\& Returned from HMShowBalloon call if bad method passed to routine
.Ve
.IP "hmNoBalloonUp" 4
.IX Item "hmNoBalloonUp"
.Vb 1
\& Returned from HMRemoveBalloon if no balloon was visible when call was made
.Ve
.SH "PPC errors"
.IX Header "PPC errors"
.IP "notInitErr" 4
.IX Item "notInitErr"
.Vb 1
\& PPCToolBox not initialized
.Ve
.IP "nameTypeErr" 4
.IX Item "nameTypeErr"
.Vb 1
\& Invalid or inappropriate locationKindSelector in locationName
.Ve
.IP "noPortErr" 4
.IX Item "noPortErr"
.Vb 2
\& Unable to open port or bad portRefNum.  If you\*(Aqre calling
\&AESend, this is because your application does not have
.Ve
.IP "noGlobalsErr" 4
.IX Item "noGlobalsErr"
.Vb 1
\& The system is hosed, better re\-boot
.Ve
.IP "localOnlyErr" 4
.IX Item "localOnlyErr"
.Vb 1
\& Network activity is currently disabled
.Ve
.IP "destPortErr" 4
.IX Item "destPortErr"
.Vb 1
\& Port does not exist at destination
.Ve
.IP "sessTableErr" 4
.IX Item "sessTableErr"
.Vb 1
\& Out of session tables, try again later
.Ve
.IP "noSessionErr" 4
.IX Item "noSessionErr"
.Vb 1
\& Invalid session reference number
.Ve
.IP "badReqErr" 4
.IX Item "badReqErr"
.Vb 1
\& bad parameter or invalid state for operation
.Ve
.IP "portNameExistsErr" 4
.IX Item "portNameExistsErr"
.Vb 1
\& port is already open (perhaps in another app)
.Ve
.IP "noUserNameErr" 4
.IX Item "noUserNameErr"
.Vb 1
\& user name unknown on destination machine
.Ve
.IP "userRejectErr" 4
.IX Item "userRejectErr"
.Vb 1
\& Destination rejected the session request
.Ve
.IP "noMachineNameErr" 4
.IX Item "noMachineNameErr"
.Vb 1
\& user hasn\*(Aqt named his Macintosh in the Network Setup Control Panel
.Ve
.IP "noToolboxNameErr" 4
.IX Item "noToolboxNameErr"
.Vb 1
\& A system resource is missing, not too likely
.Ve
.IP "noResponseErr" 4
.IX Item "noResponseErr"
.Vb 1
\& unable to contact destination
.Ve
.IP "portClosedErr" 4
.IX Item "portClosedErr"
.Vb 1
\& port was closed
.Ve
.IP "sessClosedErr" 4
.IX Item "sessClosedErr"
.Vb 1
\& session was closed
.Ve
.IP "badPortNameErr" 4
.IX Item "badPortNameErr"
.Vb 1
\& PPCPortRec malformed
.Ve
.IP "noDefaultUserErr" 4
.IX Item "noDefaultUserErr"
.Vb 1
\& user hasn\*(Aqt typed in owners name in Network Setup Control Pannel
.Ve
.IP "notLoggedInErr" 4
.IX Item "notLoggedInErr"
.Vb 1
\& The default userRefNum does not yet exist
.Ve
.IP "noUserRefErr" 4
.IX Item "noUserRefErr"
.Vb 1
\& unable to create a new userRefNum
.Ve
.IP "networkErr" 4
.IX Item "networkErr"
.Vb 1
\& An error has occurred in the network, not too likely
.Ve
.IP "noInformErr" 4
.IX Item "noInformErr"
.Vb 1
\& PPCStart failed because destination did not have inform pending
.Ve
.IP "authFailErr" 4
.IX Item "authFailErr"
.Vb 1
\& unable to authenticate user at destination
.Ve
.IP "noUserRecErr" 4
.IX Item "noUserRecErr"
.Vb 1
\& Invalid user reference number
.Ve
.IP "badServiceMethodErr" 4
.IX Item "badServiceMethodErr"
.Vb 1
\& illegal service type, or not supported
.Ve
.IP "badLocNameErr" 4
.IX Item "badLocNameErr"
.Vb 1
\& location name malformed
.Ve
.SH "Font Mgr errors"
.IX Header "Font Mgr errors"
.IP "kFMIterationCompleted" 4
.IX Item "kFMIterationCompleted"
.PD 0
.IP "kFMInvalidFontFamilyErr" 4
.IX Item "kFMInvalidFontFamilyErr"
.IP "kFMInvalidFontErr" 4
.IX Item "kFMInvalidFontErr"
.IP "kFMIterationScopeModifiedErr" 4
.IX Item "kFMIterationScopeModifiedErr"
.IP "kFMFontTableAccessErr" 4
.IX Item "kFMFontTableAccessErr"
.IP "nbpBuffOvr" 4
.IX Item "nbpBuffOvr"
.PD
.Vb 1
\& Buffer overflow in LookupName
.Ve
.IP "nbpNoConfirm" 4
.IX Item "nbpNoConfirm"
.PD 0
.IP "nbpConfDiff" 4
.IX Item "nbpConfDiff"
.PD
.Vb 1
\& Name confirmed at different socket
.Ve
.IP "nbpDuplicate" 4
.IX Item "nbpDuplicate"
.Vb 1
\& Duplicate name exists already
.Ve
.IP "nbpNotFound" 4
.IX Item "nbpNotFound"
.Vb 1
\& Name not found on remove
.Ve
.IP "aspBadVersNum" 4
.IX Item "aspBadVersNum"
.Vb 1
\& Server cannot support this ASP version
.Ve
.IP "aspBufTooSmall" 4
.IX Item "aspBufTooSmall"
.Vb 1
\& Buffer too small
.Ve
.IP "aspNoMoreSess" 4
.IX Item "aspNoMoreSess"
.Vb 1
\& No more sessions on server
.Ve
.IP "aspNoServers" 4
.IX Item "aspNoServers"
.Vb 1
\& No servers at that address
.Ve
.IP "aspParamErr" 4
.IX Item "aspParamErr"
.Vb 1
\& Parameter error
.Ve
.IP "aspServerBusy" 4
.IX Item "aspServerBusy"
.Vb 1
\& Server cannot open another session
.Ve
.IP "aspSessClosed" 4
.IX Item "aspSessClosed"
.Vb 1
\& Session closed
.Ve
.IP "aspSizeErr" 4
.IX Item "aspSizeErr"
.Vb 1
\& Command block too big
.Ve
.IP "aspTooMany" 4
.IX Item "aspTooMany"
.Vb 1
\& Too many clients (server error)
.Ve
.IP "reqFailed" 4
.IX Item "reqFailed"
.PD 0
.IP "tooManyReqs" 4
.IX Item "tooManyReqs"
.IP "tooManySkts" 4
.IX Item "tooManySkts"
.IP "badATPSkt" 4
.IX Item "badATPSkt"
.IP "badBuffNum" 4
.IX Item "badBuffNum"
.IP "noRelErr" 4
.IX Item "noRelErr"
.IP "cbNotFound" 4
.IX Item "cbNotFound"
.IP "noSendResp" 4
.IX Item "noSendResp"
.IP "noDataArea" 4
.IX Item "noDataArea"
.PD
.SH "driver control ioResults"
.IX Header "driver control ioResults"
.IP "errRefNum" 4
.IX Item "errRefNum"
.Vb 1
\& bad connection refNum
.Ve
.IP "errAborted" 4
.IX Item "errAborted"
.Vb 1
\& control call was aborted
.Ve
.IP "errState" 4
.IX Item "errState"
.Vb 1
\& bad connection state for this operation
.Ve
.IP "errOpening" 4
.IX Item "errOpening"
.Vb 1
\& open connection request failed
.Ve
.IP "errAttention" 4
.IX Item "errAttention"
.Vb 1
\& attention message too long
.Ve
.IP "errFwdReset" 4
.IX Item "errFwdReset"
.Vb 1
\& read terminated by forward reset
.Ve
.IP "errDSPQueueSize" 4
.IX Item "errDSPQueueSize"
.Vb 1
\& DSP Read/Write Queue Too small
.Ve
.SH "Apple event manager error messages"
.IX Header "Apple event manager error messages"
.IP "errAECoercionFail" 4
.IX Item "errAECoercionFail"
.Vb 1
\& bad parameter data or unable to coerce the data supplied
.Ve
.IP "errAEDescNotFound" 4
.IX Item "errAEDescNotFound"
.PD 0
.IP "errAECorruptData" 4
.IX Item "errAECorruptData"
.IP "errAEWrongDataType" 4
.IX Item "errAEWrongDataType"
.IP "errAENotAEDesc" 4
.IX Item "errAENotAEDesc"
.IP "errAEBadListItem" 4
.IX Item "errAEBadListItem"
.PD
.Vb 1
\& the specified list item does not exist
.Ve
.IP "errAENewerVersion" 4
.IX Item "errAENewerVersion"
.Vb 1
\& need newer version of the AppleEvent manager
.Ve
.IP "errAENotAppleEvent" 4
.IX Item "errAENotAppleEvent"
.Vb 1
\& the event is not in AppleEvent format
.Ve
.IP "errAEEventNotHandled" 4
.IX Item "errAEEventNotHandled"
.Vb 1
\& the AppleEvent was not handled by any handler
.Ve
.IP "errAEReplyNotValid" 4
.IX Item "errAEReplyNotValid"
.Vb 1
\& AEResetTimer was passed an invalid reply parameter
.Ve
.IP "errAEUnknownSendMode" 4
.IX Item "errAEUnknownSendMode"
.Vb 1
\& mode wasn\*(Aqt NoReply, WaitReply, or QueueReply or Interaction level is unknown
.Ve
.IP "errAEWaitCanceled" 4
.IX Item "errAEWaitCanceled"
.Vb 1
\& in AESend, the user cancelled out of wait loop for reply or receipt
.Ve
.IP "errAETimeout" 4
.IX Item "errAETimeout"
.Vb 1
\& the AppleEvent timed out
.Ve
.IP "errAENoUserInteraction" 4
.IX Item "errAENoUserInteraction"
.Vb 1
\& no user interaction is allowed
.Ve
.IP "errAENotASpecialFunction" 4
.IX Item "errAENotASpecialFunction"
.Vb 1
\& there is no special function for/with this keyword
.Ve
.IP "errAEParamMissed" 4
.IX Item "errAEParamMissed"
.Vb 1
\& a required parameter was not accessed
.Ve
.IP "errAEUnknownAddressType" 4
.IX Item "errAEUnknownAddressType"
.Vb 1
\& the target address type is not known
.Ve
.IP "errAEHandlerNotFound" 4
.IX Item "errAEHandlerNotFound"
.Vb 1
\& no handler in the dispatch tables fits the parameters to AEGetEventHandler or AEGetCoercionHandler
.Ve
.IP "errAEReplyNotArrived" 4
.IX Item "errAEReplyNotArrived"
.Vb 1
\& the contents of the reply you are accessing have not arrived yet
.Ve
.IP "errAEIllegalIndex" 4
.IX Item "errAEIllegalIndex"
.Vb 1
\& index is out of range in a put operation
.Ve
.IP "errAEImpossibleRange" 4
.IX Item "errAEImpossibleRange"
.Vb 1
\& A range like 3rd to 2nd, or 1st to all.
.Ve
.IP "errAEWrongNumberArgs" 4
.IX Item "errAEWrongNumberArgs"
.Vb 1
\& Logical op kAENOT used with other than 1 term
.Ve
.IP "errAEAccessorNotFound" 4
.IX Item "errAEAccessorNotFound"
.Vb 1
\& Accessor proc matching wantClass and containerType or wildcards not found
.Ve
.IP "errAENoSuchLogical" 4
.IX Item "errAENoSuchLogical"
.Vb 1
\& Something other than AND, OR, or NOT
.Ve
.IP "errAEBadTestKey" 4
.IX Item "errAEBadTestKey"
.Vb 1
\& Test is neither typeLogicalDescriptor nor typeCompDescriptor
.Ve
.IP "errAENotAnObjSpec" 4
.IX Item "errAENotAnObjSpec"
.Vb 1
\& Param to AEResolve not of type \*(Aqobj \*(Aq
.Ve
.IP "errAENoSuchObject" 4
.IX Item "errAENoSuchObject"
.Vb 1
\& e.g.,: specifier asked for the 3rd, but there are only 2. Basically, this indicates a run\-time resolution error.
.Ve
.IP "errAENegativeCount" 4
.IX Item "errAENegativeCount"
.Vb 1
\& CountProc returned negative value
.Ve
.IP "errAEEmptyListContainer" 4
.IX Item "errAEEmptyListContainer"
.Vb 1
\& Attempt to pass empty list as container to accessor
.Ve
.IP "errAEUnknownObjectType" 4
.IX Item "errAEUnknownObjectType"
.Vb 1
\& available only in version 1.0.1 or greater
.Ve
.IP "errAERecordingIsAlreadyOn" 4
.IX Item "errAERecordingIsAlreadyOn"
.Vb 1
\& available only in version 1.0.1 or greater
.Ve
.IP "errAEReceiveTerminate" 4
.IX Item "errAEReceiveTerminate"
.Vb 1
\& break out of all levels of AEReceive to the topmost (1.1 or greater)
.Ve
.IP "errAEReceiveEscapeCurrent" 4
.IX Item "errAEReceiveEscapeCurrent"
.Vb 1
\& break out of only lowest level of AEReceive (1.1 or greater)
.Ve
.IP "errAEEventFiltered" 4
.IX Item "errAEEventFiltered"
.Vb 1
\& event has been filtered, and should not be propogated (1.1 or greater)
.Ve
.IP "errAEDuplicateHandler" 4
.IX Item "errAEDuplicateHandler"
.Vb 1
\& attempt to install handler in table for identical class and id (1.1 or greater)
.Ve
.IP "errAEStreamBadNesting" 4
.IX Item "errAEStreamBadNesting"
.Vb 1
\& nesting violation while streaming
.Ve
.IP "errAEStreamAlreadyConverted" 4
.IX Item "errAEStreamAlreadyConverted"
.Vb 1
\& attempt to convert a stream that has already been converted
.Ve
.IP "errAEDescIsNull" 4
.IX Item "errAEDescIsNull"
.Vb 1
\& attempting to perform an invalid operation on a null descriptor
.Ve
.IP "errAEBuildSyntaxError" 4
.IX Item "errAEBuildSyntaxError"
.Vb 1
\& AEBuildDesc and friends detected a syntax error
.Ve
.IP "errOSASystemError" 4
.IX Item "errOSASystemError"
.PD 0
.IP "errOSAInvalidID" 4
.IX Item "errOSAInvalidID"
.IP "errOSABadStorageType" 4
.IX Item "errOSABadStorageType"
.IP "errOSAScriptError" 4
.IX Item "errOSAScriptError"
.IP "errOSABadSelector" 4
.IX Item "errOSABadSelector"
.IP "errOSASourceNotAvailable" 4
.IX Item "errOSASourceNotAvailable"
.IP "errOSANoSuchDialect" 4
.IX Item "errOSANoSuchDialect"
.IP "errOSADataFormatObsolete" 4
.IX Item "errOSADataFormatObsolete"
.IP "errOSADataFormatTooNew" 4
.IX Item "errOSADataFormatTooNew"
.IP "errOSACorruptData" 4
.IX Item "errOSACorruptData"
.IP "errOSARecordingIsAlreadyOn" 4
.IX Item "errOSARecordingIsAlreadyOn"
.IP "errOSAComponentMismatch" 4
.IX Item "errOSAComponentMismatch"
.PD
.Vb 1
\& Parameters are from 2 different components
.Ve
.SH "AppleEvent error definitions"
.IX Header "AppleEvent error definitions"
.IP "errOffsetInvalid" 4
.IX Item "errOffsetInvalid"
.PD 0
.IP "errOffsetIsOutsideOfView" 4
.IX Item "errOffsetIsOutsideOfView"
.IP "errTopOfDocument" 4
.IX Item "errTopOfDocument"
.IP "errTopOfBody" 4
.IX Item "errTopOfBody"
.IP "errEndOfDocument" 4
.IX Item "errEndOfDocument"
.PD
.SH "Drag Manager error codes"
.IX Header "Drag Manager error codes"
.IP "badDragRefErr" 4
.IX Item "badDragRefErr"
.Vb 1
\& unknown drag reference
.Ve
.IP "badDragItemErr" 4
.IX Item "badDragItemErr"
.Vb 1
\& unknown drag item reference
.Ve
.IP "badDragFlavorErr" 4
.IX Item "badDragFlavorErr"
.Vb 1
\& unknown flavor type
.Ve
.IP "duplicateFlavorErr" 4
.IX Item "duplicateFlavorErr"
.Vb 1
\& flavor type already exists
.Ve
.IP "cantGetFlavorErr" 4
.IX Item "cantGetFlavorErr"
.Vb 1
\& error while trying to get flavor data
.Ve
.IP "duplicateHandlerErr" 4
.IX Item "duplicateHandlerErr"
.Vb 1
\& handler already exists
.Ve
.IP "handlerNotFoundErr" 4
.IX Item "handlerNotFoundErr"
.Vb 1
\& handler not found
.Ve
.IP "dragNotAcceptedErr" 4
.IX Item "dragNotAcceptedErr"
.Vb 1
\& drag was not accepted by receiver
.Ve
.IP "unsupportedForPlatformErr" 4
.IX Item "unsupportedForPlatformErr"
.Vb 1
\& call is for PowerPC only
.Ve
.IP "noSuitableDisplaysErr" 4
.IX Item "noSuitableDisplaysErr"
.Vb 1
\& no displays support translucency
.Ve
.IP "badImageRgnErr" 4
.IX Item "badImageRgnErr"
.Vb 1
\& bad translucent image region
.Ve
.IP "badImageErr" 4
.IX Item "badImageErr"
.Vb 1
\& bad translucent image PixMap
.Ve
.SH "QuickTime errors"
.IX Header "QuickTime errors"
.IP "couldNotResolveDataRef" 4
.IX Item "couldNotResolveDataRef"
.PD 0
.IP "badImageDescription" 4
.IX Item "badImageDescription"
.IP "badPublicMovieAtom" 4
.IX Item "badPublicMovieAtom"
.IP "cantFindHandler" 4
.IX Item "cantFindHandler"
.IP "cantOpenHandler" 4
.IX Item "cantOpenHandler"
.IP "badComponentType" 4
.IX Item "badComponentType"
.IP "noMediaHandler" 4
.IX Item "noMediaHandler"
.IP "noDataHandler" 4
.IX Item "noDataHandler"
.IP "invalidMedia" 4
.IX Item "invalidMedia"
.IP "invalidTrack" 4
.IX Item "invalidTrack"
.IP "invalidMovie" 4
.IX Item "invalidMovie"
.IP "invalidSampleTable" 4
.IX Item "invalidSampleTable"
.IP "invalidDataRef" 4
.IX Item "invalidDataRef"
.IP "invalidHandler" 4
.IX Item "invalidHandler"
.IP "invalidDuration" 4
.IX Item "invalidDuration"
.IP "invalidTime" 4
.IX Item "invalidTime"
.IP "cantPutPublicMovieAtom" 4
.IX Item "cantPutPublicMovieAtom"
.IP "badEditList" 4
.IX Item "badEditList"
.IP "mediaTypesDontMatch" 4
.IX Item "mediaTypesDontMatch"
.IP "progressProcAborted" 4
.IX Item "progressProcAborted"
.IP "movieToolboxUninitialized" 4
.IX Item "movieToolboxUninitialized"
.IP "noRecordOfApp" 4
.IX Item "noRecordOfApp"
.PD
.Vb 1
\& replica
.Ve
.IP "wfFileNotFound" 4
.IX Item "wfFileNotFound"
.PD 0
.IP "cantCreateSingleForkFile" 4
.IX Item "cantCreateSingleForkFile"
.PD
.Vb 1
\& happens when file already exists
.Ve
.IP "invalidEditState" 4
.IX Item "invalidEditState"
.PD 0
.IP "nonMatchingEditState" 4
.IX Item "nonMatchingEditState"
.IP "staleEditState" 4
.IX Item "staleEditState"
.IP "userDataItemNotFound" 4
.IX Item "userDataItemNotFound"
.IP "maxSizeToGrowTooSmall" 4
.IX Item "maxSizeToGrowTooSmall"
.IP "badTrackIndex" 4
.IX Item "badTrackIndex"
.IP "trackIDNotFound" 4
.IX Item "trackIDNotFound"
.IP "trackNotInMovie" 4
.IX Item "trackNotInMovie"
.IP "timeNotInTrack" 4
.IX Item "timeNotInTrack"
.IP "timeNotInMedia" 4
.IX Item "timeNotInMedia"
.IP "badEditIndex" 4
.IX Item "badEditIndex"
.IP "internalQuickTimeError" 4
.IX Item "internalQuickTimeError"
.IP "cantEnableTrack" 4
.IX Item "cantEnableTrack"
.IP "invalidRect" 4
.IX Item "invalidRect"
.IP "invalidSampleNum" 4
.IX Item "invalidSampleNum"
.IP "invalidChunkNum" 4
.IX Item "invalidChunkNum"
.IP "invalidSampleDescIndex" 4
.IX Item "invalidSampleDescIndex"
.IP "invalidChunkCache" 4
.IX Item "invalidChunkCache"
.IP "invalidSampleDescription" 4
.IX Item "invalidSampleDescription"
.IP "dataNotOpenForRead" 4
.IX Item "dataNotOpenForRead"
.IP "dataNotOpenForWrite" 4
.IX Item "dataNotOpenForWrite"
.IP "dataAlreadyOpenForWrite" 4
.IX Item "dataAlreadyOpenForWrite"
.IP "dataAlreadyClosed" 4
.IX Item "dataAlreadyClosed"
.IP "endOfDataReached" 4
.IX Item "endOfDataReached"
.IP "dataNoDataRef" 4
.IX Item "dataNoDataRef"
.IP "noMovieFound" 4
.IX Item "noMovieFound"
.IP "invalidDataRefContainer" 4
.IX Item "invalidDataRefContainer"
.IP "badDataRefIndex" 4
.IX Item "badDataRefIndex"
.IP "noDefaultDataRef" 4
.IX Item "noDefaultDataRef"
.IP "couldNotUseAnExistingSample" 4
.IX Item "couldNotUseAnExistingSample"
.IP "featureUnsupported" 4
.IX Item "featureUnsupported"
.IP "noVideoTrackInMovieErr" 4
.IX Item "noVideoTrackInMovieErr"
.PD
.Vb 1
\& QT for Windows error
.Ve
.IP "noSoundTrackInMovieErr" 4
.IX Item "noSoundTrackInMovieErr"
.Vb 1
\& QT for Windows error
.Ve
.IP "soundSupportNotAvailableErr" 4
.IX Item "soundSupportNotAvailableErr"
.Vb 1
\& QT for Windows error
.Ve
.IP "unsupportedAuxiliaryImportData" 4
.IX Item "unsupportedAuxiliaryImportData"
.PD 0
.IP "auxiliaryExportDataUnavailable" 4
.IX Item "auxiliaryExportDataUnavailable"
.IP "samplesAlreadyInMediaErr" 4
.IX Item "samplesAlreadyInMediaErr"
.IP "noSourceTreeFoundErr" 4
.IX Item "noSourceTreeFoundErr"
.IP "sourceNotFoundErr" 4
.IX Item "sourceNotFoundErr"
.IP "movieTextNotFoundErr" 4
.IX Item "movieTextNotFoundErr"
.IP "missingRequiredParameterErr" 4
.IX Item "missingRequiredParameterErr"
.IP "invalidSpriteWorldPropertyErr" 4
.IX Item "invalidSpriteWorldPropertyErr"
.IP "invalidSpritePropertyErr" 4
.IX Item "invalidSpritePropertyErr"
.IP "gWorldsNotSameDepthAndSizeErr" 4
.IX Item "gWorldsNotSameDepthAndSizeErr"
.IP "invalidSpriteIndexErr" 4
.IX Item "invalidSpriteIndexErr"
.IP "invalidImageIndexErr" 4
.IX Item "invalidImageIndexErr"
.IP "internalComponentErr" 4
.IX Item "internalComponentErr"
.IP "notImplementedMusicOSErr" 4
.IX Item "notImplementedMusicOSErr"
.IP "cantSendToSynthesizerOSErr" 4
.IX Item "cantSendToSynthesizerOSErr"
.IP "cantReceiveFromSynthesizerOSErr" 4
.IX Item "cantReceiveFromSynthesizerOSErr"
.IP "illegalVoiceAllocationOSErr" 4
.IX Item "illegalVoiceAllocationOSErr"
.IP "illegalPartOSErr" 4
.IX Item "illegalPartOSErr"
.IP "illegalChannelOSErr" 4
.IX Item "illegalChannelOSErr"
.IP "illegalKnobOSErr" 4
.IX Item "illegalKnobOSErr"
.IP "illegalKnobValueOSErr" 4
.IX Item "illegalKnobValueOSErr"
.IP "illegalInstrumentOSErr" 4
.IX Item "illegalInstrumentOSErr"
.IP "illegalControllerOSErr" 4
.IX Item "illegalControllerOSErr"
.IP "midiManagerAbsentOSErr" 4
.IX Item "midiManagerAbsentOSErr"
.IP "synthesizerNotRespondingOSErr" 4
.IX Item "synthesizerNotRespondingOSErr"
.IP "synthesizerOSErr" 4
.IX Item "synthesizerOSErr"
.IP "illegalNoteChannelOSErr" 4
.IX Item "illegalNoteChannelOSErr"
.IP "noteChannelNotAllocatedOSErr" 4
.IX Item "noteChannelNotAllocatedOSErr"
.IP "tunePlayerFullOSErr" 4
.IX Item "tunePlayerFullOSErr"
.IP "tuneParseOSErr" 4
.IX Item "tuneParseOSErr"
.IP "noExportProcAvailableErr" 4
.IX Item "noExportProcAvailableErr"
.IP "componentDllLoadErr" 4
.IX Item "componentDllLoadErr"
.PD
.Vb 1
\& Windows specific errors (when component is loading)
.Ve
.IP "componentDllEntryNotFoundErr" 4
.IX Item "componentDllEntryNotFoundErr"
.Vb 1
\& Windows specific errors (when component is loading)
.Ve
.IP "qtmlDllLoadErr" 4
.IX Item "qtmlDllLoadErr"
.Vb 1
\& Windows specific errors (when qtml is loading)
.Ve
.IP "qtmlDllEntryNotFoundErr" 4
.IX Item "qtmlDllEntryNotFoundErr"
.Vb 1
\& Windows specific errors (when qtml is loading)
.Ve
.IP "qtmlUninitialized" 4
.IX Item "qtmlUninitialized"
.PD 0
.IP "unsupportedOSErr" 4
.IX Item "unsupportedOSErr"
.IP "cannotFindAtomErr" 4
.IX Item "cannotFindAtomErr"
.IP "notLeafAtomErr" 4
.IX Item "notLeafAtomErr"
.IP "atomsNotOfSameTypeErr" 4
.IX Item "atomsNotOfSameTypeErr"
.IP "atomIndexInvalidErr" 4
.IX Item "atomIndexInvalidErr"
.IP "duplicateAtomTypeAndIDErr" 4
.IX Item "duplicateAtomTypeAndIDErr"
.IP "invalidAtomErr" 4
.IX Item "invalidAtomErr"
.IP "invalidAtomContainerErr" 4
.IX Item "invalidAtomContainerErr"
.IP "invalidAtomTypeErr" 4
.IX Item "invalidAtomTypeErr"
.IP "cannotBeLeafAtomErr" 4
.IX Item "cannotBeLeafAtomErr"
.IP "pathTooLongErr" 4
.IX Item "pathTooLongErr"
.IP "emptyPathErr" 4
.IX Item "emptyPathErr"
.IP "noPathMappingErr" 4
.IX Item "noPathMappingErr"
.IP "pathNotVerifiedErr" 4
.IX Item "pathNotVerifiedErr"
.IP "unknownFormatErr" 4
.IX Item "unknownFormatErr"
.IP "wackBadFileErr" 4
.IX Item "wackBadFileErr"
.IP "wackForkNotFoundErr" 4
.IX Item "wackForkNotFoundErr"
.IP "wackBadMetaDataErr" 4
.IX Item "wackBadMetaDataErr"
.IP "qfcbNotFoundErr" 4
.IX Item "qfcbNotFoundErr"
.IP "qfcbNotCreatedErr" 4
.IX Item "qfcbNotCreatedErr"
.IP "AAPNotCreatedErr" 4
.IX Item "AAPNotCreatedErr"
.IP "AAPNotFoundErr" 4
.IX Item "AAPNotFoundErr"
.IP "ASDBadHeaderErr" 4
.IX Item "ASDBadHeaderErr"
.IP "ASDBadForkErr" 4
.IX Item "ASDBadForkErr"
.IP "ASDEntryNotFoundErr" 4
.IX Item "ASDEntryNotFoundErr"
.IP "fileOffsetTooBigErr" 4
.IX Item "fileOffsetTooBigErr"
.IP "notAllowedToSaveMovieErr" 4
.IX Item "notAllowedToSaveMovieErr"
.IP "qtNetworkAlreadyAllocatedErr" 4
.IX Item "qtNetworkAlreadyAllocatedErr"
.IP "urlDataHHTTPProtocolErr" 4
.IX Item "urlDataHHTTPProtocolErr"
.IP "urlDataHHTTPNoNetDriverErr" 4
.IX Item "urlDataHHTTPNoNetDriverErr"
.IP "urlDataHHTTPURLErr" 4
.IX Item "urlDataHHTTPURLErr"
.IP "urlDataHHTTPRedirectErr" 4
.IX Item "urlDataHHTTPRedirectErr"
.IP "urlDataHFTPProtocolErr" 4
.IX Item "urlDataHFTPProtocolErr"
.IP "urlDataHFTPShutdownErr" 4
.IX Item "urlDataHFTPShutdownErr"
.IP "urlDataHFTPBadUserErr" 4
.IX Item "urlDataHFTPBadUserErr"
.IP "urlDataHFTPBadPasswordErr" 4
.IX Item "urlDataHFTPBadPasswordErr"
.IP "urlDataHFTPServerErr" 4
.IX Item "urlDataHFTPServerErr"
.IP "urlDataHFTPDataConnectionErr" 4
.IX Item "urlDataHFTPDataConnectionErr"
.IP "urlDataHFTPNoDirectoryErr" 4
.IX Item "urlDataHFTPNoDirectoryErr"
.IP "urlDataHFTPQuotaErr" 4
.IX Item "urlDataHFTPQuotaErr"
.IP "urlDataHFTPPermissionsErr" 4
.IX Item "urlDataHFTPPermissionsErr"
.IP "urlDataHFTPFilenameErr" 4
.IX Item "urlDataHFTPFilenameErr"
.IP "urlDataHFTPNoNetDriverErr" 4
.IX Item "urlDataHFTPNoNetDriverErr"
.IP "urlDataHFTPBadNameListErr" 4
.IX Item "urlDataHFTPBadNameListErr"
.IP "urlDataHFTPNeedPasswordErr" 4
.IX Item "urlDataHFTPNeedPasswordErr"
.IP "urlDataHFTPNoPasswordErr" 4
.IX Item "urlDataHFTPNoPasswordErr"
.IP "urlDataHFTPServerDisconnectedErr" 4
.IX Item "urlDataHFTPServerDisconnectedErr"
.IP "urlDataHFTPURLErr" 4
.IX Item "urlDataHFTPURLErr"
.IP "notEnoughDataErr" 4
.IX Item "notEnoughDataErr"
.IP "qtActionNotHandledErr" 4
.IX Item "qtActionNotHandledErr"
.IP "qtXMLParseErr" 4
.IX Item "qtXMLParseErr"
.IP "digiUnimpErr" 4
.IX Item "digiUnimpErr"
.PD
.Vb 1
\& feature unimplemented
.Ve
.IP "qtParamErr" 4
.IX Item "qtParamErr"
.Vb 1
\& bad input parameter (out of range, etc)
.Ve
.IP "matrixErr" 4
.IX Item "matrixErr"
.Vb 1
\& bad matrix, digitizer did nothing
.Ve
.IP "notExactMatrixErr" 4
.IX Item "notExactMatrixErr"
.Vb 1
\& warning of bad matrix, digitizer did its best
.Ve
.IP "noMoreKeyColorsErr" 4
.IX Item "noMoreKeyColorsErr"
.Vb 1
\& all key indexes in use
.Ve
.IP "notExactSizeErr" 4
.IX Item "notExactSizeErr"
.Vb 1
\& Can\*(Aqt do exact size requested
.Ve
.IP "badDepthErr" 4
.IX Item "badDepthErr"
.Vb 1
\& Can\*(Aqt digitize into this depth
.Ve
.IP "noDMAErr" 4
.IX Item "noDMAErr"
.Vb 1
\& Can\*(Aqt do DMA digitizing (i.e. can\*(Aqt go to requested dest
.Ve
.SH "Kernel Error Codes"
.IX Header "Kernel Error Codes"
.IP "kernelIncompleteErr" 4
.IX Item "kernelIncompleteErr"
.PD 0
.IP "kernelCanceledErr" 4
.IX Item "kernelCanceledErr"
.IP "kernelOptionsErr" 4
.IX Item "kernelOptionsErr"
.IP "kernelPrivilegeErr" 4
.IX Item "kernelPrivilegeErr"
.IP "kernelUnsupportedErr" 4
.IX Item "kernelUnsupportedErr"
.IP "kernelObjectExistsErr" 4
.IX Item "kernelObjectExistsErr"
.IP "kernelWritePermissionErr" 4
.IX Item "kernelWritePermissionErr"
.IP "kernelReadPermissionErr" 4
.IX Item "kernelReadPermissionErr"
.IP "kernelExecutePermissionErr" 4
.IX Item "kernelExecutePermissionErr"
.IP "kernelDeletePermissionErr" 4
.IX Item "kernelDeletePermissionErr"
.IP "kernelExecutionLevelErr" 4
.IX Item "kernelExecutionLevelErr"
.IP "kernelAttributeErr" 4
.IX Item "kernelAttributeErr"
.IP "kernelAsyncSendLimitErr" 4
.IX Item "kernelAsyncSendLimitErr"
.IP "kernelAsyncReceiveLimitErr" 4
.IX Item "kernelAsyncReceiveLimitErr"
.IP "kernelTimeoutErr" 4
.IX Item "kernelTimeoutErr"
.IP "kernelInUseErr" 4
.IX Item "kernelInUseErr"
.IP "kernelTerminatedErr" 4
.IX Item "kernelTerminatedErr"
.IP "kernelExceptionErr" 4
.IX Item "kernelExceptionErr"
.IP "kernelIDErr" 4
.IX Item "kernelIDErr"
.IP "kernelAlreadyFreeErr" 4
.IX Item "kernelAlreadyFreeErr"
.IP "kernelReturnValueErr" 4
.IX Item "kernelReturnValueErr"
.PD
.SH "Text Services Mgr error codes"
.IX Header "Text Services Mgr error codes"
.IP "tsmComponentNoErr" 4
.IX Item "tsmComponentNoErr"
.Vb 1
\& component result = no error
.Ve
.IP "tsmUnsupScriptLanguageErr" 4
.IX Item "tsmUnsupScriptLanguageErr"
.PD 0
.IP "tsmInputMethodNotFoundErr" 4
.IX Item "tsmInputMethodNotFoundErr"
.IP "tsmNotAnAppErr" 4
.IX Item "tsmNotAnAppErr"
.PD
.Vb 1
\& not an application error
.Ve
.IP "tsmAlreadyRegisteredErr" 4
.IX Item "tsmAlreadyRegisteredErr"
.Vb 1
\& want to register again error
.Ve
.IP "tsmNeverRegisteredErr" 4
.IX Item "tsmNeverRegisteredErr"
.Vb 1
\& app never registered error (not TSM aware)
.Ve
.IP "tsmInvalidDocIDErr" 4
.IX Item "tsmInvalidDocIDErr"
.Vb 1
\& invalid TSM documentation id
.Ve
.IP "tsmTSMDocBusyErr" 4
.IX Item "tsmTSMDocBusyErr"
.Vb 1
\& document is still active
.Ve
.IP "tsmDocNotActiveErr" 4
.IX Item "tsmDocNotActiveErr"
.Vb 1
\& document is NOT active
.Ve
.IP "tsmNoOpenTSErr" 4
.IX Item "tsmNoOpenTSErr"
.Vb 1
\& no open text service
.Ve
.IP "tsmCantOpenComponentErr" 4
.IX Item "tsmCantOpenComponentErr"
.Vb 1
\& can\*(Aqt open the component
.Ve
.IP "tsmTextServiceNotFoundErr" 4
.IX Item "tsmTextServiceNotFoundErr"
.Vb 1
\& no text service found
.Ve
.IP "tsmDocumentOpenErr" 4
.IX Item "tsmDocumentOpenErr"
.Vb 1
\& there are open documents
.Ve
.IP "tsmUseInputWindowErr" 4
.IX Item "tsmUseInputWindowErr"
.Vb 1
\& not TSM aware because we are using input window
.Ve
.IP "tsmTSHasNoMenuErr" 4
.IX Item "tsmTSHasNoMenuErr"
.Vb 1
\& the text service has no menu
.Ve
.IP "tsmTSNotOpenErr" 4
.IX Item "tsmTSNotOpenErr"
.Vb 1
\& text service is not open
.Ve
.IP "tsmComponentAlreadyOpenErr" 4
.IX Item "tsmComponentAlreadyOpenErr"
.Vb 1
\& text service already opened for the document
.Ve
.IP "tsmInputMethodIsOldErr" 4
.IX Item "tsmInputMethodIsOldErr"
.Vb 1
\& returned by GetDefaultInputMethod
.Ve
.IP "tsmScriptHasNoIMErr" 4
.IX Item "tsmScriptHasNoIMErr"
.Vb 1
\& script has no imput method or is using old IM
.Ve
.IP "tsmUnsupportedTypeErr" 4
.IX Item "tsmUnsupportedTypeErr"
.Vb 1
\& unSupported interface type error
.Ve
.IP "tsmUnknownErr" 4
.IX Item "tsmUnknownErr"
.Vb 1
\& any other errors
.Ve
.IP "tsmInvalidContext" 4
.IX Item "tsmInvalidContext"
.Vb 1
\& Invalid TSMContext specified in call
.Ve
.IP "tsmNoHandler" 4
.IX Item "tsmNoHandler"
.Vb 1
\& No Callback Handler exists for callback
.Ve
.IP "tsmNoMoreTokens" 4
.IX Item "tsmNoMoreTokens"
.Vb 1
\& No more tokens are available for the source text
.Ve
.IP "tsmNoStem" 4
.IX Item "tsmNoStem"
.Vb 1
\& No stem exists for the token
.Ve
.SH "Mixed Mode error codes"
.IX Header "Mixed Mode error codes"
.SH "NameRegistry error codes"
.IX Header "NameRegistry error codes"
.IP "nrLockedErr" 4
.IX Item "nrLockedErr"
.PD 0
.IP "nrNotEnoughMemoryErr" 4
.IX Item "nrNotEnoughMemoryErr"
.IP "nrInvalidNodeErr" 4
.IX Item "nrInvalidNodeErr"
.IP "nrNotFoundErr" 4
.IX Item "nrNotFoundErr"
.IP "nrNotCreatedErr" 4
.IX Item "nrNotCreatedErr"
.IP "nrNameErr" 4
.IX Item "nrNameErr"
.IP "nrNotSlotDeviceErr" 4
.IX Item "nrNotSlotDeviceErr"
.IP "nrDataTruncatedErr" 4
.IX Item "nrDataTruncatedErr"
.IP "nrPowerErr" 4
.IX Item "nrPowerErr"
.IP "nrPowerSwitchAbortErr" 4
.IX Item "nrPowerSwitchAbortErr"
.IP "nrTypeMismatchErr" 4
.IX Item "nrTypeMismatchErr"
.IP "nrNotModifiedErr" 4
.IX Item "nrNotModifiedErr"
.IP "nrOverrunErr" 4
.IX Item "nrOverrunErr"
.IP "nrResultCodeBase" 4
.IX Item "nrResultCodeBase"
.IP "nrPathNotFound" 4
.IX Item "nrPathNotFound"
.PD
.Vb 1
\& a path component lookup failed
.Ve
.IP "nrPathBufferTooSmall" 4
.IX Item "nrPathBufferTooSmall"
.Vb 1
\& buffer for path is too small
.Ve
.IP "nrInvalidEntryIterationOp" 4
.IX Item "nrInvalidEntryIterationOp"
.Vb 1
\& invalid entry iteration operation
.Ve
.IP "nrPropertyAlreadyExists" 4
.IX Item "nrPropertyAlreadyExists"
.Vb 1
\& property already exists
.Ve
.IP "nrIterationDone" 4
.IX Item "nrIterationDone"
.Vb 1
\& iteration operation is done
.Ve
.IP "nrExitedIteratorScope" 4
.IX Item "nrExitedIteratorScope"
.Vb 1
\& outer scope of iterator was exited
.Ve
.IP "nrTransactionAborted" 4
.IX Item "nrTransactionAborted"
.Vb 1
\& transaction was aborted
.Ve
.SH "Icon Services error codes"
.IX Header "Icon Services error codes"
.IP "invalidIconRefErr" 4
.IX Item "invalidIconRefErr"
.Vb 1
\& The icon ref is not valid
.Ve
.IP "noSuchIconErr" 4
.IX Item "noSuchIconErr"
.Vb 1
\& The requested icon could not be found
.Ve
.SH "Dynamic AppleScript errors"
.IX Header "Dynamic AppleScript errors"
.IP "errOSACantCoerce" 4
.IX Item "errOSACantCoerce"
.Vb 1
\& Signaled when a value can\*(Aqt be coerced to the desired type.
.Ve
.IP "errOSACantAccess" 4
.IX Item "errOSACantAccess"
.Vb 1
\& Signaled when an object is not found in a container
.Ve
.IP "errOSACantAssign" 4
.IX Item "errOSACantAssign"
.Vb 1
\& Signaled when an object cannot be set in a container.
.Ve
.IP "errOSAGeneralError" 4
.IX Item "errOSAGeneralError"
.Vb 1
\& Signaled by user scripts or applications when no actual error code is to be returned.
.Ve
.IP "errOSADivideByZero" 4
.IX Item "errOSADivideByZero"
.Vb 1
\& Signaled when there is an attempt to divide by zero
.Ve
.IP "errOSANumericOverflow" 4
.IX Item "errOSANumericOverflow"
.Vb 1
\& Signaled when integer or real value is too large to be represented
.Ve
.IP "errOSACantLaunch" 4
.IX Item "errOSACantLaunch"
.Vb 1
\& Signaled when application can\*(Aqt be launched or when it is remote and program linking is not enabled
.Ve
.IP "errOSAAppNotHighLevelEventAware" 4
.IX Item "errOSAAppNotHighLevelEventAware"
.Vb 1
\& Signaled when an application can\*(Aqt respond to AppleEvents
.Ve
.IP "errOSACorruptTerminology" 4
.IX Item "errOSACorruptTerminology"
.Vb 1
\& Signaled when an application\*(Aqs terminology resource is not readable
.Ve
.IP "errOSAStackOverflow" 4
.IX Item "errOSAStackOverflow"
.Vb 1
\& Signaled when the runtime stack overflows
.Ve
.IP "errOSAInternalTableOverflow" 4
.IX Item "errOSAInternalTableOverflow"
.Vb 1
\& Signaled when a runtime internal data structure overflows
.Ve
.IP "errOSADataBlockTooLarge" 4
.IX Item "errOSADataBlockTooLarge"
.Vb 1
\& Signaled when an intrinsic limitation is exceeded for the size of a value or data structure.
.Ve
.IP "errOSACantGetTerminology" 4
.IX Item "errOSACantGetTerminology"
.SH "Static AppleScript errors"
.IX Header "Static AppleScript errors"
.PD 0
.IP "errOSATypeError" 4
.IX Item "errOSATypeError"
.IP "OSAMessageNotUnderstood" 4
.IX Item "OSAMessageNotUnderstood"
.PD
.Vb 1
\& Signaled when a message was sent to an object that didn\*(Aqt handle it
.Ve
.IP "OSAUndefinedHandler" 4
.IX Item "OSAUndefinedHandler"
.Vb 1
\& Signaled when a function to be returned doesn\*(Aqt exist.
.Ve
.IP "OSAIllegalAccess" 4
.IX Item "OSAIllegalAccess"
.Vb 1
\& Signaled when a container can never have the requested object
.Ve
.IP "OSAIllegalIndex" 4
.IX Item "OSAIllegalIndex"
.Vb 1
\& Signaled when index was out of range. Specialization of errOSACantAccess
.Ve
.IP "OSAIllegalRange" 4
.IX Item "OSAIllegalRange"
.Vb 1
\& Signaled when a range is screwy. Specialization of errOSACantAccess
.Ve
.IP "OSAIllegalAssign" 4
.IX Item "OSAIllegalAssign"
.Vb 1
\& Signaled when an object can never be set in a container
.Ve
.IP "OSASyntaxError" 4
.IX Item "OSASyntaxError"
.Vb 1
\& Signaled when a syntax error occurs. (e.g. "Syntax error" or "<this> can\*(Aqt go after <that>")
.Ve
.IP "OSASyntaxTypeError" 4
.IX Item "OSASyntaxTypeError"
.Vb 1
\& Signaled when another form of syntax was expected. (e.g. "expected a <type> but found <this>")
.Ve
.IP "OSATokenTooLong" 4
.IX Item "OSATokenTooLong"
.Vb 1
\& Signaled when a name or number is too long to be parsed
.Ve
.IP "OSAMissingParameter" 4
.IX Item "OSAMissingParameter"
.Vb 1
\& Signaled when a parameter is missing for a function invocation
.Ve
.IP "OSAParameterMismatch" 4
.IX Item "OSAParameterMismatch"
.Vb 1
\& Signaled when function is called with the wrong number of parameters, or a parameter pattern cannot be matched
.Ve
.IP "OSADuplicateParameter" 4
.IX Item "OSADuplicateParameter"
.Vb 1
\& Signaled when a formal parameter, local variable, or instance variable is specified more than once
.Ve
.IP "OSADuplicateProperty" 4
.IX Item "OSADuplicateProperty"
.Vb 1
\& Signaled when a formal parameter, local variable, or instance variable is specified more than once.
.Ve
.IP "OSADuplicateHandler" 4
.IX Item "OSADuplicateHandler"
.Vb 1
\& Signaled when more than one handler is defined with the same name in a scope where the language doesn\*(Aqt allow it
.Ve
.IP "OSAUndefinedVariable" 4
.IX Item "OSAUndefinedVariable"
.Vb 1
\& Signaled when a variable is accessed that has no value
.Ve
.IP "OSAInconsistentDeclarations" 4
.IX Item "OSAInconsistentDeclarations"
.Vb 1
\& Signaled when a variable is declared inconsistently in the same scope, such as both local and global
.Ve
.IP "errASCantConsiderAndIgnore" 4
.IX Item "errASCantConsiderAndIgnore"
.PD 0
.IP "errASCantCompareMoreThan32k" 4
.IX Item "errASCantCompareMoreThan32k"
.PD
.Vb 1
\& Parser/Compiler errors:
.Ve
.IP "errASTerminologyNestingTooDeep" 4
.IX Item "errASTerminologyNestingTooDeep"
.PD 0
.IP "errASIllegalFormalParameter" 4
.IX Item "errASIllegalFormalParameter"
.IP "errASParameterNotForEvent" 4
.IX Item "errASParameterNotForEvent"
.IP "errASNoResultReturned" 4
.IX Item "errASNoResultReturned"
.PD
.Vb 1
\& The range \-2780 thru \-2799 is reserved for dialect specific error codes. (Error codes from different dialects may overlap.)
.Ve
.SH "The preferred spelling for Code Fragment Manager errors:"
.IX Header "The preferred spelling for Code Fragment Manager errors:"
.IP "cfragFirstErrCode" 4
.IX Item "cfragFirstErrCode"
.Vb 1
\& The first value in the range of CFM errors.
.Ve
.IP "cfragContextIDErr" 4
.IX Item "cfragContextIDErr"
.Vb 1
\& The context ID was not valid.
.Ve
.IP "cfragConnectionIDErr" 4
.IX Item "cfragConnectionIDErr"
.Vb 1
\& The connection ID was not valid.
.Ve
.IP "cfragNoSymbolErr" 4
.IX Item "cfragNoSymbolErr"
.Vb 1
\& The specified symbol was not found.
.Ve
.IP "cfragNoSectionErr" 4
.IX Item "cfragNoSectionErr"
.Vb 1
\& The specified section was not found.
.Ve
.IP "cfragNoLibraryErr" 4
.IX Item "cfragNoLibraryErr"
.Vb 1
\& The named library was not found.
.Ve
.IP "cfragDupRegistrationErr" 4
.IX Item "cfragDupRegistrationErr"
.Vb 1
\& The registration name was already in use.
.Ve
.IP "cfragFragmentFormatErr" 4
.IX Item "cfragFragmentFormatErr"
.Vb 1
\& A fragment\*(Aqs container format is unknown.
.Ve
.IP "cfragUnresolvedErr" 4
.IX Item "cfragUnresolvedErr"
.Vb 1
\& A fragment had "hard" unresolved imports.
.Ve
.IP "cfragNoPositionErr" 4
.IX Item "cfragNoPositionErr"
.Vb 1
\& The registration insertion point was not found.
.Ve
.IP "cfragNoPrivateMemErr" 4
.IX Item "cfragNoPrivateMemErr"
.Vb 1
\& Out of memory for internal bookkeeping.
.Ve
.IP "cfragNoClientMemErr" 4
.IX Item "cfragNoClientMemErr"
.Vb 1
\& Out of memory for fragment mapping or section instances.
.Ve
.IP "cfragNoIDsErr" 4
.IX Item "cfragNoIDsErr"
.Vb 1
\& No more CFM IDs for contexts, connections, etc.
.Ve
.IP "cfragInitOrderErr" 4
.IX Item "cfragInitOrderErr"
.PD 0
.IP "cfragImportTooOldErr" 4
.IX Item "cfragImportTooOldErr"
.PD
.Vb 1
\& An import library was too old for a client.
.Ve
.IP "cfragImportTooNewErr" 4
.IX Item "cfragImportTooNewErr"
.Vb 1
\& An import library was too new for a client.
.Ve
.IP "cfragInitLoopErr" 4
.IX Item "cfragInitLoopErr"
.Vb 1
\& Circularity in required initialization order.
.Ve
.IP "cfragInitAtBootErr" 4
.IX Item "cfragInitAtBootErr"
.Vb 1
\& A boot library has an initialization function.  (System 7 only)
.Ve
.IP "cfragLibConnErr" 4
.IX Item "cfragLibConnErr"
.PD 0
.IP "cfragCFMStartupErr" 4
.IX Item "cfragCFMStartupErr"
.PD
.Vb 1
\& Internal error during CFM initialization.
.Ve
.IP "cfragCFMInternalErr" 4
.IX Item "cfragCFMInternalErr"
.Vb 1
\& An internal inconstistancy has been detected.
.Ve
.IP "cfragFragmentCorruptErr" 4
.IX Item "cfragFragmentCorruptErr"
.Vb 1
\& A fragment\*(Aqs container was corrupt (known format).
.Ve
.IP "cfragInitFunctionErr" 4
.IX Item "cfragInitFunctionErr"
.Vb 1
\& A fragment\*(Aqs initialization routine returned an error.
.Ve
.IP "cfragNoApplicationErr" 4
.IX Item "cfragNoApplicationErr"
.Vb 1
\& No application member found in the cfrg resource.
.Ve
.IP "cfragArchitectureErr" 4
.IX Item "cfragArchitectureErr"
.Vb 1
\& A fragment has an unacceptable architecture.
.Ve
.IP "cfragFragmentUsageErr" 4
.IX Item "cfragFragmentUsageErr"
.Vb 1
\& A semantic error in usage of the fragment.
.Ve
.IP "cfragFileSizeErr" 4
.IX Item "cfragFileSizeErr"
.Vb 1
\& A file was too large to be mapped.
.Ve
.IP "cfragNotClosureErr" 4
.IX Item "cfragNotClosureErr"
.Vb 1
\& The closure ID was actually a connection ID.
.Ve
.IP "cfragNoRegistrationErr" 4
.IX Item "cfragNoRegistrationErr"
.Vb 1
\& The registration name was not found.
.Ve
.IP "cfragContainerIDErr" 4
.IX Item "cfragContainerIDErr"
.Vb 1
\& The fragment container ID was not valid.
.Ve
.IP "cfragClosureIDErr" 4
.IX Item "cfragClosureIDErr"
.Vb 1
\& The closure ID was not valid.
.Ve
.IP "cfragAbortClosureErr" 4
.IX Item "cfragAbortClosureErr"
.Vb 1
\& Used by notification handlers to abort a closure.
.Ve
.IP "cfragOutputLengthErr" 4
.IX Item "cfragOutputLengthErr"
.Vb 1
\& An output parameter is too small to hold the value.
.Ve
.ie n .SH "Reserved values for internal ""warnings""."
.el .SH "Reserved values for internal ``warnings''."
.IX Header "Reserved values for internal warnings."
.IP "cfragFirstReservedCode" 4
.IX Item "cfragFirstReservedCode"
.PD 0
.IP "cfragReservedCode_3" 4
.IX Item "cfragReservedCode_3"
.IP "cfragReservedCode_2" 4
.IX Item "cfragReservedCode_2"
.IP "fragContextNotFound" 4
.IX Item "fragContextNotFound"
.IP "fragConnectionIDNotFound" 4
.IX Item "fragConnectionIDNotFound"
.IP "fragSymbolNotFound" 4
.IX Item "fragSymbolNotFound"
.IP "fragSectionNotFound" 4
.IX Item "fragSectionNotFound"
.IP "fragLibNotFound" 4
.IX Item "fragLibNotFound"
.IP "fragDupRegLibName" 4
.IX Item "fragDupRegLibName"
.IP "fragFormatUnknown" 4
.IX Item "fragFormatUnknown"
.IP "fragHadUnresolveds" 4
.IX Item "fragHadUnresolveds"
.IP "fragNoMem" 4
.IX Item "fragNoMem"
.IP "fragNoAddrSpace" 4
.IX Item "fragNoAddrSpace"
.IP "fragNoContextIDs" 4
.IX Item "fragNoContextIDs"
.IP "fragObjectInitSeqErr" 4
.IX Item "fragObjectInitSeqErr"
.IP "fragImportTooOld" 4
.IX Item "fragImportTooOld"
.IP "fragImportTooNew" 4
.IX Item "fragImportTooNew"
.IP "fragInitLoop" 4
.IX Item "fragInitLoop"
.IP "fragInitRtnUsageErr" 4
.IX Item "fragInitRtnUsageErr"
.IP "fragLibConnErr" 4
.IX Item "fragLibConnErr"
.IP "fragMgrInitErr" 4
.IX Item "fragMgrInitErr"
.IP "fragConstErr" 4
.IX Item "fragConstErr"
.IP "fragCorruptErr" 4
.IX Item "fragCorruptErr"
.IP "fragUserInitProcErr" 4
.IX Item "fragUserInitProcErr"
.IP "fragAppNotFound" 4
.IX Item "fragAppNotFound"
.IP "fragArchError" 4
.IX Item "fragArchError"
.IP "fragInvalidFragmentUsage" 4
.IX Item "fragInvalidFragmentUsage"
.IP "invalidComponentID" 4
.IX Item "invalidComponentID"
.IP "validInstancesExist" 4
.IX Item "validInstancesExist"
.IP "componentNotCaptured" 4
.IX Item "componentNotCaptured"
.IP "componentDontRegister" 4
.IX Item "componentDontRegister"
.IP "unresolvedComponentDLLErr" 4
.IX Item "unresolvedComponentDLLErr"
.IP "invalidTranslationPathErr" 4
.IX Item "invalidTranslationPathErr"
.PD
.Vb 1
\& Source type to destination type not a valid path
.Ve
.IP "couldNotParseSourceFileErr" 4
.IX Item "couldNotParseSourceFileErr"
.Vb 1
\& Source document does not contain source type
.Ve
.IP "noTranslationPathErr" 4
.IX Item "noTranslationPathErr"
.PD 0
.IP "badTranslationSpecErr" 4
.IX Item "badTranslationSpecErr"
.IP "buf2SmallErr" 4
.IX Item "buf2SmallErr"
.IP "noMPPErr" 4
.IX Item "noMPPErr"
.IP "ckSumErr" 4
.IX Item "ckSumErr"
.IP "extractErr" 4
.IX Item "extractErr"
.IP "readQErr" 4
.IX Item "readQErr"
.IP "atpLenErr" 4
.IX Item "atpLenErr"
.IP "atpBadRsp" 4
.IX Item "atpBadRsp"
.IP "recNotFnd" 4
.IX Item "recNotFnd"
.PD
.SH "OpenTransport errors"
.IX Header "OpenTransport errors"
.IP "kOTNoError" 4
.IX Item "kOTNoError"
.Vb 1
\& No Error occurred
.Ve
.IP "kOTOutOfMemoryErr" 4
.IX Item "kOTOutOfMemoryErr"
.Vb 1
\& OT ran out of memory, may be a temporary
.Ve
.IP "kOTNotFoundErr" 4
.IX Item "kOTNotFoundErr"
.Vb 1
\& OT generic not found error
.Ve
.IP "kOTDuplicateFoundErr" 4
.IX Item "kOTDuplicateFoundErr"
.Vb 1
\& OT generic duplicate found error
.Ve
.IP "kOTBadAddressErr" 4
.IX Item "kOTBadAddressErr"
.Vb 1
\& XTI2OSStatus(TBADADDR) A Bad address was specified
.Ve
.IP "kOTBadOptionErr" 4
.IX Item "kOTBadOptionErr"
.Vb 1
\& XTI2OSStatus(TBADOPT) A Bad option was specified
.Ve
.IP "kOTAccessErr" 4
.IX Item "kOTAccessErr"
.Vb 1
\& XTI2OSStatus(TACCES) Missing access permission
.Ve
.IP "kOTBadReferenceErr" 4
.IX Item "kOTBadReferenceErr"
.Vb 1
\& XTI2OSStatus(TBADF) Bad provider reference
.Ve
.IP "kOTNoAddressErr" 4
.IX Item "kOTNoAddressErr"
.Vb 1
\& XTI2OSStatus(TNOADDR) No address was specified
.Ve
.IP "kOTOutStateErr" 4
.IX Item "kOTOutStateErr"
.Vb 1
\& XTI2OSStatus(TOUTSTATE) Call issued in wrong state
.Ve
.IP "kOTBadSequenceErr" 4
.IX Item "kOTBadSequenceErr"
.Vb 1
\& XTI2OSStatus(TBADSEQ) Sequence specified does not exist
.Ve
.IP "kOTSysErrorErr" 4
.IX Item "kOTSysErrorErr"
.Vb 1
\& XTI2OSStatus(TSYSERR) A system error occurred
.Ve
.IP "kOTLookErr" 4
.IX Item "kOTLookErr"
.Vb 1
\& XTI2OSStatus(TLOOK) An event occurred \- call Look()
.Ve
.IP "kOTBadDataErr" 4
.IX Item "kOTBadDataErr"
.Vb 1
\& XTI2OSStatus(TBADDATA) An illegal amount of data was specified
.Ve
.IP "kOTBufferOverflowErr" 4
.IX Item "kOTBufferOverflowErr"
.Vb 1
\& XTI2OSStatus(TBUFOVFLW) Passed buffer not big enough
.Ve
.IP "kOTFlowErr" 4
.IX Item "kOTFlowErr"
.Vb 1
\& XTI2OSStatus(TFLOW) Provider is flow\-controlled
.Ve
.IP "kOTNoDataErr" 4
.IX Item "kOTNoDataErr"
.Vb 1
\& XTI2OSStatus(TNODATA) No data available for reading
.Ve
.IP "kOTNoDisconnectErr" 4
.IX Item "kOTNoDisconnectErr"
.Vb 1
\& XTI2OSStatus(TNODIS) No disconnect indication available
.Ve
.IP "kOTNoUDErrErr" 4
.IX Item "kOTNoUDErrErr"
.Vb 1
\& XTI2OSStatus(TNOUDERR) No Unit Data Error indication available
.Ve
.IP "kOTBadFlagErr" 4
.IX Item "kOTBadFlagErr"
.Vb 1
\& XTI2OSStatus(TBADFLAG) A Bad flag value was supplied
.Ve
.IP "kOTNoReleaseErr" 4
.IX Item "kOTNoReleaseErr"
.Vb 1
\& XTI2OSStatus(TNOREL) No orderly release indication available
.Ve
.IP "kOTNotSupportedErr" 4
.IX Item "kOTNotSupportedErr"
.Vb 1
\& XTI2OSStatus(TNOTSUPPORT) Command is not supported
.Ve
.IP "kOTStateChangeErr" 4
.IX Item "kOTStateChangeErr"
.Vb 1
\& XTI2OSStatus(TSTATECHNG) State is changing \- try again later
.Ve
.IP "kOTNoStructureTypeErr" 4
.IX Item "kOTNoStructureTypeErr"
.Vb 1
\& XTI2OSStatus(TNOSTRUCTYPE) Bad structure type requested for OTAlloc
.Ve
.IP "kOTBadNameErr" 4
.IX Item "kOTBadNameErr"
.Vb 1
\& XTI2OSStatus(TBADNAME) A bad endpoint name was supplied
.Ve
.IP "kOTBadQLenErr" 4
.IX Item "kOTBadQLenErr"
.Vb 1
\& XTI2OSStatus(TBADQLEN) A Bind to an in\-use addr with qlen > 0
.Ve
.IP "kOTAddressBusyErr" 4
.IX Item "kOTAddressBusyErr"
.Vb 1
\& XTI2OSStatus(TADDRBUSY) Address requested is already in use
.Ve
.IP "kOTIndOutErr" 4
.IX Item "kOTIndOutErr"
.Vb 1
\& XTI2OSStatus(TINDOUT) Accept failed because of pending listen
.Ve
.IP "kOTProviderMismatchErr" 4
.IX Item "kOTProviderMismatchErr"
.Vb 1
\& XTI2OSStatus(TPROVMISMATCH) Tried to accept on incompatible endpoint
.Ve
.IP "kOTResQLenErr" 4
.IX Item "kOTResQLenErr"
.Vb 1
\& XTI2OSStatus(TRESQLEN)
.Ve
.IP "kOTResAddressErr" 4
.IX Item "kOTResAddressErr"
.Vb 1
\& XTI2OSStatus(TRESADDR)
.Ve
.IP "kOTQFullErr" 4
.IX Item "kOTQFullErr"
.Vb 1
\& XTI2OSStatus(TQFULL)
.Ve
.IP "kOTProtocolErr" 4
.IX Item "kOTProtocolErr"
.Vb 1
\& XTI2OSStatus(TPROTO) An unspecified provider error occurred
.Ve
.IP "kOTBadSyncErr" 4
.IX Item "kOTBadSyncErr"
.Vb 1
\& XTI2OSStatus(TBADSYNC) A synchronous call at interrupt time
.Ve
.IP "kOTCanceledErr" 4
.IX Item "kOTCanceledErr"
.Vb 1
\& XTI2OSStatus(TCANCELED) The command was cancelled
.Ve
.IP "kEPERMErr" 4
.IX Item "kEPERMErr"
.Vb 1
\& Permission denied
.Ve
.IP "kENOENTErr" 4
.IX Item "kENOENTErr"
.Vb 1
\& No such file or directory
.Ve
.IP "kENORSRCErr" 4
.IX Item "kENORSRCErr"
.Vb 1
\& No such resource
.Ve
.IP "kEINTRErr" 4
.IX Item "kEINTRErr"
.Vb 1
\& Interrupted system service
.Ve
.IP "kEIOErr" 4
.IX Item "kEIOErr"
.Vb 1
\& I/O error
.Ve
.IP "kENXIOErr" 4
.IX Item "kENXIOErr"
.Vb 1
\& No such device or address
.Ve
.IP "kEBADFErr" 4
.IX Item "kEBADFErr"
.Vb 1
\& Bad file number
.Ve
.IP "kEAGAINErr" 4
.IX Item "kEAGAINErr"
.Vb 1
\& Try operation again later
.Ve
.IP "kENOMEMErr" 4
.IX Item "kENOMEMErr"
.Vb 1
\& Not enough space
.Ve
.IP "kEACCESErr" 4
.IX Item "kEACCESErr"
.Vb 1
\& Permission denied
.Ve
.IP "kEFAULTErr" 4
.IX Item "kEFAULTErr"
.Vb 1
\& Bad address
.Ve
.IP "kEBUSYErr" 4
.IX Item "kEBUSYErr"
.Vb 1
\& Device or resource busy
.Ve
.IP "kEEXISTErr" 4
.IX Item "kEEXISTErr"
.Vb 1
\& File exists
.Ve
.IP "kENODEVErr" 4
.IX Item "kENODEVErr"
.Vb 1
\& No such device
.Ve
.IP "kEINVALErr" 4
.IX Item "kEINVALErr"
.Vb 1
\& Invalid argument
.Ve
.IP "kENOTTYErr" 4
.IX Item "kENOTTYErr"
.Vb 1
\& Not a character device
.Ve
.IP "kEPIPEErr" 4
.IX Item "kEPIPEErr"
.Vb 1
\& Broken pipe
.Ve
.IP "kERANGEErr" 4
.IX Item "kERANGEErr"
.Vb 1
\& Message size too large for STREAM
.Ve
.IP "kEWOULDBLOCKErr" 4
.IX Item "kEWOULDBLOCKErr"
.Vb 1
\& Call would block, so was aborted
.Ve
.IP "kEDEADLKErr" 4
.IX Item "kEDEADLKErr"
.Vb 1
\& or a deadlock would occur
.Ve
.IP "kEALREADYErr" 4
.IX Item "kEALREADYErr"
.PD 0
.IP "kENOTSOCKErr" 4
.IX Item "kENOTSOCKErr"
.PD
.Vb 1
\& Socket operation on non\-socket
.Ve
.IP "kEDESTADDRREQErr" 4
.IX Item "kEDESTADDRREQErr"
.Vb 1
\& Destination address required
.Ve
.IP "kEMSGSIZEErr" 4
.IX Item "kEMSGSIZEErr"
.Vb 1
\& Message too long
.Ve
.IP "kEPROTOTYPEErr" 4
.IX Item "kEPROTOTYPEErr"
.Vb 1
\& Protocol wrong type for socket
.Ve
.IP "kENOPROTOOPTErr" 4
.IX Item "kENOPROTOOPTErr"
.Vb 1
\& Protocol not available
.Ve
.IP "kEPROTONOSUPPORTErr" 4
.IX Item "kEPROTONOSUPPORTErr"
.Vb 1
\& Protocol not supported
.Ve
.IP "kESOCKTNOSUPPORTErr" 4
.IX Item "kESOCKTNOSUPPORTErr"
.Vb 1
\& Socket type not supported
.Ve
.IP "kEOPNOTSUPPErr" 4
.IX Item "kEOPNOTSUPPErr"
.Vb 1
\& Operation not supported on socket
.Ve
.IP "kEADDRINUSEErr" 4
.IX Item "kEADDRINUSEErr"
.Vb 1
\& Address already in use
.Ve
.IP "kEADDRNOTAVAILErr" 4
.IX Item "kEADDRNOTAVAILErr"
.Vb 1
\& Can\*(Aqt assign requested address
.Ve
.IP "kENETDOWNErr" 4
.IX Item "kENETDOWNErr"
.Vb 1
\& Network is down
.Ve
.IP "kENETUNREACHErr" 4
.IX Item "kENETUNREACHErr"
.Vb 1
\& Network is unreachable
.Ve
.IP "kENETRESETErr" 4
.IX Item "kENETRESETErr"
.Vb 1
\& Network dropped connection on reset
.Ve
.IP "kECONNABORTEDErr" 4
.IX Item "kECONNABORTEDErr"
.Vb 1
\& Software caused connection abort
.Ve
.IP "kECONNRESETErr" 4
.IX Item "kECONNRESETErr"
.Vb 1
\& Connection reset by peer
.Ve
.IP "kENOBUFSErr" 4
.IX Item "kENOBUFSErr"
.Vb 1
\& No buffer space available
.Ve
.IP "kEISCONNErr" 4
.IX Item "kEISCONNErr"
.Vb 1
\& Socket is already connected
.Ve
.IP "kENOTCONNErr" 4
.IX Item "kENOTCONNErr"
.Vb 1
\& Socket is not connected
.Ve
.IP "kESHUTDOWNErr" 4
.IX Item "kESHUTDOWNErr"
.Vb 1
\& Can\*(Aqt send after socket shutdown
.Ve
.IP "kETOOMANYREFSErr" 4
.IX Item "kETOOMANYREFSErr"
.Vb 1
\& Too many references: can\*(Aqt splice
.Ve
.IP "kETIMEDOUTErr" 4
.IX Item "kETIMEDOUTErr"
.Vb 1
\& Connection timed out
.Ve
.IP "kECONNREFUSEDErr" 4
.IX Item "kECONNREFUSEDErr"
.Vb 1
\& Connection refused
.Ve
.IP "kEHOSTDOWNErr" 4
.IX Item "kEHOSTDOWNErr"
.Vb 1
\& Host is down
.Ve
.IP "kEHOSTUNREACHErr" 4
.IX Item "kEHOSTUNREACHErr"
.Vb 1
\& No route to host
.Ve
.IP "kEPROTOErr" 4
.IX Item "kEPROTOErr"
.Vb 1
\& \*(Aq\*(Aq\*(Aq fill out missing codes \*(Aq\*(Aq\*(Aq
.Ve
.IP "kETIMEErr" 4
.IX Item "kETIMEErr"
.PD 0
.IP "kENOSRErr" 4
.IX Item "kENOSRErr"
.IP "kEBADMSGErr" 4
.IX Item "kEBADMSGErr"
.IP "kECANCELErr" 4
.IX Item "kECANCELErr"
.IP "kENOSTRErr" 4
.IX Item "kENOSTRErr"
.IP "kENODATAErr" 4
.IX Item "kENODATAErr"
.IP "kEINPROGRESSErr" 4
.IX Item "kEINPROGRESSErr"
.IP "kESRCHErr" 4
.IX Item "kESRCHErr"
.IP "kENOMSGErr" 4
.IX Item "kENOMSGErr"
.IP "kOTClientNotInittedErr" 4
.IX Item "kOTClientNotInittedErr"
.IP "kOTPortHasDiedErr" 4
.IX Item "kOTPortHasDiedErr"
.IP "kOTPortWasEjectedErr" 4
.IX Item "kOTPortWasEjectedErr"
.IP "kOTBadConfigurationErr" 4
.IX Item "kOTBadConfigurationErr"
.IP "kOTConfigurationChangedErr" 4
.IX Item "kOTConfigurationChangedErr"
.IP "kOTUserRequestedErr" 4
.IX Item "kOTUserRequestedErr"
.PD
.SH "Color Picker errors"
.IX Header "Color Picker errors"
.IP "firstPickerError" 4
.IX Item "firstPickerError"
.PD 0
.IP "invalidPickerType" 4
.IX Item "invalidPickerType"
.IP "requiredFlagsDontMatch" 4
.IX Item "requiredFlagsDontMatch"
.IP "pickerResourceError" 4
.IX Item "pickerResourceError"
.IP "cantLoadPicker" 4
.IX Item "cantLoadPicker"
.IP "cantCreatePickerWindow" 4
.IX Item "cantCreatePickerWindow"
.IP "cantLoadPackage" 4
.IX Item "cantLoadPackage"
.IP "pickerCantLive" 4
.IX Item "pickerCantLive"
.IP "colorSyncNotInstalled" 4
.IX Item "colorSyncNotInstalled"
.IP "badProfileError" 4
.IX Item "badProfileError"
.IP "kNSL68kContextNotSupported" 4
.IX Item "kNSL68kContextNotSupported"
.PD
.Vb 1
\& no 68k allowed
.Ve
.IP "kNSLSchedulerError" 4
.IX Item "kNSLSchedulerError"
.Vb 1
\& A custom thread routine encountered an error
.Ve
.IP "kNSLBadURLSyntax" 4
.IX Item "kNSLBadURLSyntax"
.Vb 1
\& URL contains illegal characters
.Ve
.IP "kNSLNoCarbonLib" 4
.IX Item "kNSLNoCarbonLib"
.PD 0
.IP "kNSLUILibraryNotAvailable" 4
.IX Item "kNSLUILibraryNotAvailable"
.PD
.Vb 1
\& The NSL UI Library needs to be in the Extensions Folder
.Ve
.IP "kNSLNotImplementedYet" 4
.IX Item "kNSLNotImplementedYet"
.PD 0
.IP "kNSLErrNullPtrError" 4
.IX Item "kNSLErrNullPtrError"
.IP "kNSLSomePluginsFailedToLoad" 4
.IX Item "kNSLSomePluginsFailedToLoad"
.PD
.Vb 1
\& (one or more plugins failed to load, but at least one did load; this error isn\*(Aqt fatal)
.Ve
.IP "kNSLNullNeighborhoodPtr" 4
.IX Item "kNSLNullNeighborhoodPtr"
.Vb 1
\& (client passed a null neighborhood ptr)
.Ve
.IP "kNSLNoPluginsForSearch" 4
.IX Item "kNSLNoPluginsForSearch"
.Vb 1
\& (no plugins will respond to search request; bad protocol(s)?)
.Ve
.IP "kNSLSearchAlreadyInProgress" 4
.IX Item "kNSLSearchAlreadyInProgress"
.Vb 1
\& (you can only have one ongoing search per clientRef)
.Ve
.IP "kNSLNoPluginsFound" 4
.IX Item "kNSLNoPluginsFound"
.Vb 1
\& (manager didn\*(Aqt find any valid plugins to load)
.Ve
.IP "kNSLPluginLoadFailed" 4
.IX Item "kNSLPluginLoadFailed"
.Vb 1
\& (manager unable to load one of the plugins)
.Ve
.IP "kNSLBadProtocolTypeErr" 4
.IX Item "kNSLBadProtocolTypeErr"
.Vb 1
\& (client is trying to add a null protocol type)
.Ve
.IP "kNSLNullListPtr" 4
.IX Item "kNSLNullListPtr"
.Vb 1
\& (client is trying to add items to a nil list)
.Ve
.IP "kNSLBadClientInfoPtr" 4
.IX Item "kNSLBadClientInfoPtr"
.Vb 1
\& (nil ClientAsyncInfoPtr; no reference available)
.Ve
.IP "kNSLCannotContinueLookup" 4
.IX Item "kNSLCannotContinueLookup"
.Vb 1
\& (Can\*(Aqt continue lookup; error or bad state)
.Ve
.IP "kNSLBufferTooSmallForData" 4
.IX Item "kNSLBufferTooSmallForData"
.Vb 1
\& (Client buffer too small for data from plugin)
.Ve
.IP "kNSLNoContextAvailable" 4
.IX Item "kNSLNoContextAvailable"
.Vb 1
\& (ContinueLookup function ptr invalid)
.Ve
.IP "kNSLRequestBufferAlreadyInList" 4
.IX Item "kNSLRequestBufferAlreadyInList"
.PD 0
.IP "kNSLInvalidPluginSpec" 4
.IX Item "kNSLInvalidPluginSpec"
.IP "kNSLNoSupportForService" 4
.IX Item "kNSLNoSupportForService"
.IP "kNSLBadNetConnection" 4
.IX Item "kNSLBadNetConnection"
.IP "kNSLBadDataTypeErr" 4
.IX Item "kNSLBadDataTypeErr"
.IP "kNSLBadServiceTypeErr" 4
.IX Item "kNSLBadServiceTypeErr"
.IP "kNSLBadReferenceErr" 4
.IX Item "kNSLBadReferenceErr"
.IP "kNSLNoElementsInList" 4
.IX Item "kNSLNoElementsInList"
.IP "kNSLInsufficientOTVer" 4
.IX Item "kNSLInsufficientOTVer"
.IP "kNSLInsufficientSysVer" 4
.IX Item "kNSLInsufficientSysVer"
.IP "kNSLNotInitialized" 4
.IX Item "kNSLNotInitialized"
.IP "kDTPHoldJobErr" 4
.IX Item "kDTPHoldJobErr"
.IP "kDTPStopQueueErr" 4
.IX Item "kDTPStopQueueErr"
.IP "kDTPTryAgainErr" 4
.IX Item "kDTPTryAgainErr"
.PD
.SH "ColorSync Result codes"
.IX Header "ColorSync Result codes"
.IP "cmElementTagNotFound" 4
.IX Item "cmElementTagNotFound"
.PD 0
.IP "cmIndexRangeErr" 4
.IX Item "cmIndexRangeErr"
.PD
.Vb 1
\& Tag index out of range
.Ve
.IP "cmCantDeleteElement" 4
.IX Item "cmCantDeleteElement"
.PD 0
.IP "cmFatalProfileErr" 4
.IX Item "cmFatalProfileErr"
.IP "cmInvalidProfile" 4
.IX Item "cmInvalidProfile"
.PD
.Vb 1
\& A Profile must contain a \*(Aqcs1 \*(Aq tag to be valid
.Ve
.IP "cmInvalidProfileLocation" 4
.IX Item "cmInvalidProfileLocation"
.Vb 1
\& Operation not supported for this profile location
.Ve
.IP "cmCantCopyModifiedV1Profile" 4
.IX Item "cmCantCopyModifiedV1Profile"
.Vb 2
\& Illegal to copy version 1 profiles that have been modified
\&Profile Search Errors
.Ve
.IP "cmInvalidSearch" 4
.IX Item "cmInvalidSearch"
.Vb 1
\& Bad Search Handle
.Ve
.IP "cmSearchError" 4
.IX Item "cmSearchError"
.PD 0
.IP "cmErrIncompatibleProfile" 4
.IX Item "cmErrIncompatibleProfile"
.PD
.Vb 1
\& Other ColorSync Errors
.Ve
.IP "cmInvalidColorSpace" 4
.IX Item "cmInvalidColorSpace"
.Vb 1
\& Profile colorspace does not match bitmap type
.Ve
.IP "cmInvalidSrcMap" 4
.IX Item "cmInvalidSrcMap"
.Vb 1
\& Source pix/bit map was invalid
.Ve
.IP "cmInvalidDstMap" 4
.IX Item "cmInvalidDstMap"
.Vb 1
\& Destination pix/bit map was invalid
.Ve
.IP "cmNoGDevicesError" 4
.IX Item "cmNoGDevicesError"
.Vb 1
\& Begin/End Matching \-\- no gdevices available
.Ve
.IP "cmInvalidProfileComment" 4
.IX Item "cmInvalidProfileComment"
.Vb 1
\& Bad Profile comment during drawpicture
.Ve
.IP "cmRangeOverFlow" 4
.IX Item "cmRangeOverFlow"
.Vb 1
\& Color conversion warning that some output color values over/underflowed and were clipped
.Ve
.IP "cmNamedColorNotFound" 4
.IX Item "cmNamedColorNotFound"
.Vb 1
\& NamedColor not found
.Ve
.IP "badFolderDescErr" 4
.IX Item "badFolderDescErr"
.PD 0
.IP "duplicateFolderDescErr" 4
.IX Item "duplicateFolderDescErr"
.IP "noMoreFolderDescErr" 4
.IX Item "noMoreFolderDescErr"
.IP "invalidFolderTypeErr" 4
.IX Item "invalidFolderTypeErr"
.IP "duplicateRoutingErr" 4
.IX Item "duplicateRoutingErr"
.IP "routingNotFoundErr" 4
.IX Item "routingNotFoundErr"
.IP "internalScrapErr" 4
.IX Item "internalScrapErr"
.IP "duplicateScrapFlavorErr" 4
.IX Item "duplicateScrapFlavorErr"
.IP "badScrapRefErr" 4
.IX Item "badScrapRefErr"
.IP "processStateIncorrectErr" 4
.IX Item "processStateIncorrectErr"
.IP "scrapPromiseNotKeptErr" 4
.IX Item "scrapPromiseNotKeptErr"
.IP "noScrapPromiseKeeperErr" 4
.IX Item "noScrapPromiseKeeperErr"
.IP "nilScrapFlavorDataErr" 4
.IX Item "nilScrapFlavorDataErr"
.IP "scrapFlavorFlagsMismatchErr" 4
.IX Item "scrapFlavorFlagsMismatchErr"
.IP "scrapFlavorSizeMismatchErr" 4
.IX Item "scrapFlavorSizeMismatchErr"
.IP "illegalScrapFlavorFlagsErr" 4
.IX Item "illegalScrapFlavorFlagsErr"
.IP "illegalScrapFlavorTypeErr" 4
.IX Item "illegalScrapFlavorTypeErr"
.IP "illegalScrapFlavorSizeErr" 4
.IX Item "illegalScrapFlavorSizeErr"
.IP "scrapFlavorNotFoundErr" 4
.IX Item "scrapFlavorNotFoundErr"
.PD
.Vb 1
\& == noTypeErr
.Ve
.SH "AFP Protocol Errors"
.IX Header "AFP Protocol Errors"
.IP "afpAccessDenied" 4
.IX Item "afpAccessDenied"
.Vb 1
\& Insufficient access privileges for operation
.Ve
.IP "afpAuthContinue" 4
.IX Item "afpAuthContinue"
.Vb 1
\& Further information required to complete AFPLogin call
.Ve
.IP "afpBadUAM" 4
.IX Item "afpBadUAM"
.Vb 1
\& Unknown user authentication method specified
.Ve
.IP "afpBadVersNum" 4
.IX Item "afpBadVersNum"
.Vb 1
\& Unknown AFP protocol version number specified
.Ve
.IP "afpBitmapErr" 4
.IX Item "afpBitmapErr"
.Vb 1
\& Bitmap contained bits undefined for call
.Ve
.IP "afpCantMove" 4
.IX Item "afpCantMove"
.Vb 1
\& Move destination is offspring of source, or root was specified
.Ve
.IP "afpDenyConflict" 4
.IX Item "afpDenyConflict"
.Vb 1
\& Specified open/deny modes conflict with current open modes
.Ve
.IP "afpDirNotEmpty" 4
.IX Item "afpDirNotEmpty"
.Vb 1
\& Cannot delete non\-empty directory
.Ve
.IP "afpDiskFull" 4
.IX Item "afpDiskFull"
.Vb 1
\& Insufficient free space on volume for operation
.Ve
.IP "afpEofError" 4
.IX Item "afpEofError"
.Vb 1
\& Read beyond logical end\-of\-file
.Ve
.IP "afpFileBusy" 4
.IX Item "afpFileBusy"
.Vb 1
\& Cannot delete an open file
.Ve
.IP "afpFlatVol" 4
.IX Item "afpFlatVol"
.Vb 1
\& Cannot create directory on specified volume
.Ve
.IP "afpItemNotFound" 4
.IX Item "afpItemNotFound"
.Vb 1
\& Unknown UserName/UserID or missing comment/APPL entry
.Ve
.IP "afpLockErr" 4
.IX Item "afpLockErr"
.Vb 1
\& Some or all of requested range is locked by another user
.Ve
.IP "afpMiscErr" 4
.IX Item "afpMiscErr"
.Vb 1
\& Unexpected error encountered during execution
.Ve
.IP "afpNoMoreLocks" 4
.IX Item "afpNoMoreLocks"
.Vb 1
\& Maximum lock limit reached
.Ve
.IP "afpNoServer" 4
.IX Item "afpNoServer"
.Vb 1
\& Server not responding
.Ve
.IP "afpObjectExists" 4
.IX Item "afpObjectExists"
.Vb 1
\& Specified destination file or directory already exists
.Ve
.IP "afpObjectNotFound" 4
.IX Item "afpObjectNotFound"
.Vb 1
\& Specified file or directory does not exist
.Ve
.IP "afpParmErr" 4
.IX Item "afpParmErr"
.Vb 1
\& A specified parameter was out of allowable range
.Ve
.IP "afpRangeNotLocked" 4
.IX Item "afpRangeNotLocked"
.Vb 1
\& Tried to unlock range that was not locked by user
.Ve
.IP "afpRangeOverlap" 4
.IX Item "afpRangeOverlap"
.Vb 1
\& Some or all of range already locked by same user
.Ve
.IP "afpSessClosed" 4
.IX Item "afpSessClosed"
.Vb 1
\& Session closed
.Ve
.IP "afpUserNotAuth" 4
.IX Item "afpUserNotAuth"
.Vb 1
\& No AFPLogin call has successfully been made for this session
.Ve
.IP "afpCallNotSupported" 4
.IX Item "afpCallNotSupported"
.Vb 1
\& Unsupported AFP call was made
.Ve
.IP "afpObjectTypeErr" 4
.IX Item "afpObjectTypeErr"
.Vb 1
\& File/Directory specified where Directory/File expected
.Ve
.IP "afpTooManyFilesOpen" 4
.IX Item "afpTooManyFilesOpen"
.Vb 1
\& Maximum open file count reached
.Ve
.IP "afpServerGoingDown" 4
.IX Item "afpServerGoingDown"
.Vb 1
\& Server is shutting down
.Ve
.IP "afpCantRename" 4
.IX Item "afpCantRename"
.Vb 1
\& AFPRename cannot rename volume
.Ve
.IP "afpDirNotFound" 4
.IX Item "afpDirNotFound"
.Vb 1
\& Unknown directory specified
.Ve
.IP "afpIconTypeError" 4
.IX Item "afpIconTypeError"
.Vb 1
\& Icon size specified different from existing icon size
.Ve
.IP "afpVolLocked" 4
.IX Item "afpVolLocked"
.Vb 1
\& Volume is Read\-Only
.Ve
.IP "afpObjectLocked" 4
.IX Item "afpObjectLocked"
.Vb 1
\& Object is M/R/D/W inhibited
.Ve
.IP "afpContainsSharedErr" 4
.IX Item "afpContainsSharedErr"
.Vb 1
\& the folder being shared contains a shared folder
.Ve
.IP "afpIDNotFound" 4
.IX Item "afpIDNotFound"
.PD 0
.IP "afpIDExists" 4
.IX Item "afpIDExists"
.IP "afpDiffVolErr" 4
.IX Item "afpDiffVolErr"
.IP "afpCatalogChanged" 4
.IX Item "afpCatalogChanged"
.IP "afpSameObjectErr" 4
.IX Item "afpSameObjectErr"
.IP "afpBadIDErr" 4
.IX Item "afpBadIDErr"
.IP "afpPwdSameErr" 4
.IX Item "afpPwdSameErr"
.PD
.Vb 1
\& Someone tried to change their password to the same password on a mantadory password change
.Ve
.IP "afpPwdTooShortErr" 4
.IX Item "afpPwdTooShortErr"
.Vb 1
\& The password being set is too short: there is a minimum length that must be met or exceeded
.Ve
.IP "afpPwdExpiredErr" 4
.IX Item "afpPwdExpiredErr"
.Vb 1
\& The password being used is too old: this requires the user to change the password before log\-in can continue
.Ve
.IP "afpInsideSharedErr" 4
.IX Item "afpInsideSharedErr"
.Vb 2
\& The folder being shared is inside a shared folder OR the folder contains a shared folder and is being moved into a shared folder
\&OR the folder contains a shared folder and is being moved into the descendent of a shared folder.
.Ve
.IP "afpInsideTrashErr" 4
.IX Item "afpInsideTrashErr"
.Vb 2
\& The folder being shared is inside the trash folder OR the shared folder is being moved into the trash folder
\&OR the folder is being moved to the trash and it contains a shared folder
.Ve
.IP "afpPwdNeedsChangeErr" 4
.IX Item "afpPwdNeedsChangeErr"
.Vb 1
\& The password needs to be changed
.Ve
.IP "afpPwdPolicyErr" 4
.IX Item "afpPwdPolicyErr"
.Vb 1
\& Password does not conform to servers password policy
.Ve
.IP "afpAlreadyLoggedInErr" 4
.IX Item "afpAlreadyLoggedInErr"
.Vb 1
\& User has been authenticated but is already logged in from another machine (and that\*(Aqs not allowed on this server)
.Ve
.SH "AppleShare Client Errors"
.IX Header "AppleShare Client Errors"
.IP "afpBadDirIDType" 4
.IX Item "afpBadDirIDType"
.PD 0
.IP "afpCantMountMoreSrvre" 4
.IX Item "afpCantMountMoreSrvre"
.PD
.Vb 1
\& The Maximum number of server connections has been reached
.Ve
.IP "afpAlreadyMounted" 4
.IX Item "afpAlreadyMounted"
.Vb 1
\& The volume is already mounted
.Ve
.SH "NumberFormatting error codes"
.IX Header "NumberFormatting error codes"
.IP "numberFormattingNotANumberErr" 4
.IX Item "numberFormattingNotANumberErr"
.PD 0
.IP "numberFormattingOverflowInDestinationErr" 4
.IX Item "numberFormattingOverflowInDestinationErr"
.IP "numberFormattingBadNumberFormattingObjectErr" 4
.IX Item "numberFormattingBadNumberFormattingObjectErr"
.IP "numberFormattingSpuriousCharErr" 4
.IX Item "numberFormattingSpuriousCharErr"
.IP "numberFormattingLiteralMissingErr" 4
.IX Item "numberFormattingLiteralMissingErr"
.IP "numberFormattingDelimiterMissingErr" 4
.IX Item "numberFormattingDelimiterMissingErr"
.IP "numberFormattingEmptyFormatErr" 4
.IX Item "numberFormattingEmptyFormatErr"
.IP "numberFormattingBadFormatErr" 4
.IX Item "numberFormattingBadFormatErr"
.IP "numberFormattingBadOptionsErr" 4
.IX Item "numberFormattingBadOptionsErr"
.IP "numberFormattingBadTokenErr" 4
.IX Item "numberFormattingBadTokenErr"
.IP "numberFormattingUnOrderedCurrencyRangeErr" 4
.IX Item "numberFormattingUnOrderedCurrencyRangeErr"
.IP "numberFormattingBadCurrencyPositionErr" 4
.IX Item "numberFormattingBadCurrencyPositionErr"
.IP "numberFormattingNotADigitErr" 4
.IX Item "numberFormattingNotADigitErr"
.PD
.Vb 1
\& deprecated misspelled versions:
.Ve
.IP "numberFormattingUnOrdredCurrencyRangeErr" 4
.IX Item "numberFormattingUnOrdredCurrencyRangeErr"
.PD 0
.IP "textParserBadParamErr" 4
.IX Item "textParserBadParamErr"
.IP "textParserObjectNotFoundErr" 4
.IX Item "textParserObjectNotFoundErr"
.IP "textParserBadTokenValueErr" 4
.IX Item "textParserBadTokenValueErr"
.IP "textParserBadParserObjectErr" 4
.IX Item "textParserBadParserObjectErr"
.IP "textParserParamErr" 4
.IX Item "textParserParamErr"
.IP "textParserNoMoreTextErr" 4
.IX Item "textParserNoMoreTextErr"
.IP "textParserBadTextLanguageErr" 4
.IX Item "textParserBadTextLanguageErr"
.IP "textParserBadTextEncodingErr" 4
.IX Item "textParserBadTextEncodingErr"
.IP "textParserNoSuchTokenFoundErr" 4
.IX Item "textParserNoSuchTokenFoundErr"
.IP "errUnknownAttributeTag" 4
.IX Item "errUnknownAttributeTag"
.IP "errMarginWilllNotFit" 4
.IX Item "errMarginWilllNotFit"
.IP "errNotInImagingMode" 4
.IX Item "errNotInImagingMode"
.IP "errAlreadyInImagingMode" 4
.IX Item "errAlreadyInImagingMode"
.IP "errEngineNotFound" 4
.IX Item "errEngineNotFound"
.IP "errIteratorReachedEnd" 4
.IX Item "errIteratorReachedEnd"
.IP "errInvalidRange" 4
.IX Item "errInvalidRange"
.IP "errOffsetNotOnElementBounday" 4
.IX Item "errOffsetNotOnElementBounday"
.IP "errNoHiliteText" 4
.IX Item "errNoHiliteText"
.IP "errEmptyScrap" 4
.IX Item "errEmptyScrap"
.IP "errReadOnlyText" 4
.IX Item "errReadOnlyText"
.IP "errUnknownElement" 4
.IX Item "errUnknownElement"
.IP "errNonContiuousAttribute" 4
.IX Item "errNonContiuousAttribute"
.IP "hrHTMLRenderingLibNotInstalledErr" 4
.IX Item "hrHTMLRenderingLibNotInstalledErr"
.IP "hrMiscellaneousExceptionErr" 4
.IX Item "hrMiscellaneousExceptionErr"
.IP "hrUnableToResizeHandleErr" 4
.IX Item "hrUnableToResizeHandleErr"
.IP "errIANoErr" 4
.IX Item "errIANoErr"
.IP "errIAUnknownErr" 4
.IX Item "errIAUnknownErr"
.IP "errIAAllocationErr" 4
.IX Item "errIAAllocationErr"
.IP "errIAParamErr" 4
.IX Item "errIAParamErr"
.IP "errIANoMoreItems" 4
.IX Item "errIANoMoreItems"
.IP "errIABufferTooSmall" 4
.IX Item "errIABufferTooSmall"
.IP "errIACanceled" 4
.IX Item "errIACanceled"
.IP "errIAInvalidDocument" 4
.IX Item "errIAInvalidDocument"
.IP "errIATextExtractionErr" 4
.IX Item "errIATextExtractionErr"
.PD
.SH "QuickTime Streaming Errors"
.IX Header "QuickTime Streaming Errors"
.IP "qtsBadSelectorErr" 4
.IX Item "qtsBadSelectorErr"
.PD 0
.IP "qtsBadStateErr" 4
.IX Item "qtsBadStateErr"
.IP "qtsBadDataErr" 4
.IX Item "qtsBadDataErr"
.PD
.Vb 1
\& something is wrong with the data
.Ve
.IP "qtsUnsupportedDataTypeErr" 4
.IX Item "qtsUnsupportedDataTypeErr"
.PD 0
.IP "qtsUnsupportedRateErr" 4
.IX Item "qtsUnsupportedRateErr"
.IP "qtsUnsupportedFeatureErr" 4
.IX Item "qtsUnsupportedFeatureErr"
.IP "qtsTooMuchDataErr" 4
.IX Item "qtsTooMuchDataErr"
.IP "qtsUnknownValueErr" 4
.IX Item "qtsUnknownValueErr"
.IP "qtsTimeoutErr" 4
.IX Item "qtsTimeoutErr"
.IP "qtsConnectionFailedErr" 4
.IX Item "qtsConnectionFailedErr"
.PD
.SH "Gestalt error codes"
.IX Header "Gestalt error codes"
.IP "gestaltUnknownErr" 4
.IX Item "gestaltUnknownErr"
.Vb 1
\& value returned if Gestalt doesn\*(Aqt know the answer
.Ve
.IP "gestaltUndefSelectorErr" 4
.IX Item "gestaltUndefSelectorErr"
.Vb 1
\& undefined selector was passed to Gestalt
.Ve
.IP "gestaltDupSelectorErr" 4
.IX Item "gestaltDupSelectorErr"
.Vb 1
\& tried to add an entry that already existed
.Ve
.IP "menuPropertyInvalidErr" 4
.IX Item "menuPropertyInvalidErr"
.Vb 1
\& invalid property creator
.Ve
.IP "menuPropertyInvalid" 4
.IX Item "menuPropertyInvalid"
.Vb 1
\& "menuPropertyInvalid" is deprecated
.Ve
.IP "menuPropertyNotFoundErr" 4
.IX Item "menuPropertyNotFoundErr"
.Vb 1
\& specified property wasn\*(Aqt found
.Ve
.IP "menuNotFoundErr" 4
.IX Item "menuNotFoundErr"
.Vb 1
\& specified menu or menu ID wasn\*(Aqt found
.Ve
.IP "menuUsesSystemDefErr" 4
.IX Item "menuUsesSystemDefErr"
.Vb 1
\& GetMenuDefinition failed because the menu uses the system MDEF
.Ve
.IP "menuItemNotFoundErr" 4
.IX Item "menuItemNotFoundErr"
.Vb 1
\& specified menu item wasn\*(Aqt found
.Ve
.IP "errInvalidWindowPtr" 4
.IX Item "errInvalidWindowPtr"
.Vb 1
\& tried to pass a bad WindowRef argument
.Ve
.IP "errInvalidWindowRef" 4
.IX Item "errInvalidWindowRef"
.Vb 1
\& tried to pass a bad WindowRef argument
.Ve
.IP "errUnsupportedWindowAttributesForClass" 4
.IX Item "errUnsupportedWindowAttributesForClass"
.Vb 1
\& tried to create a window with WindowAttributes not supported by the WindowClass
.Ve
.IP "errWindowDoesNotHaveProxy" 4
.IX Item "errWindowDoesNotHaveProxy"
.Vb 1
\& tried to do something requiring a proxy to a window which doesn\*(Aqt have a proxy
.Ve
.IP "errInvalidWindowProperty" 4
.IX Item "errInvalidWindowProperty"
.Vb 1
\& tried to access a property tag with private creator
.Ve
.IP "errWindowPropertyNotFound" 4
.IX Item "errWindowPropertyNotFound"
.Vb 1
\& tried to get a nonexistent property
.Ve
.IP "errUnrecognizedWindowClass" 4
.IX Item "errUnrecognizedWindowClass"
.Vb 1
\& tried to create a window with a bad WindowClass
.Ve
.IP "errCorruptWindowDescription" 4
.IX Item "errCorruptWindowDescription"
.Vb 1
\& tried to load a corrupt window description (size or version fields incorrect)
.Ve
.IP "errUserWantsToDragWindow" 4
.IX Item "errUserWantsToDragWindow"
.Vb 1
\& if returned from TrackWindowProxyDrag, you should call DragWindow on the window
.Ve
.IP "errWindowsAlreadyInitialized" 4
.IX Item "errWindowsAlreadyInitialized"
.Vb 1
\& tried to call InitFloatingWindows twice, or called InitWindows and then floating windows
.Ve
.IP "errFloatingWindowsNotInitialized" 4
.IX Item "errFloatingWindowsNotInitialized"
.Vb 1
\& called HideFloatingWindows or ShowFloatingWindows without calling InitFloatingWindows
.Ve
.IP "errWindowNotFound" 4
.IX Item "errWindowNotFound"
.Vb 1
\& returned from FindWindowOfClass
.Ve
.IP "errWindowDoesNotFitOnscreen" 4
.IX Item "errWindowDoesNotFitOnscreen"
.Vb 1
\& ConstrainWindowToScreen could not make the window fit onscreen
.Ve
.IP "windowAttributeImmutableErr" 4
.IX Item "windowAttributeImmutableErr"
.Vb 1
\& tried to change attributes which can\*(Aqt be changed
.Ve
.IP "windowAttributesConflictErr" 4
.IX Item "windowAttributesConflictErr"
.Vb 1
\& passed some attributes that are mutually exclusive
.Ve
.IP "windowManagerInternalErr" 4
.IX Item "windowManagerInternalErr"
.Vb 1
\& something really weird happened inside the window manager
.Ve
.IP "windowWrongStateErr" 4
.IX Item "windowWrongStateErr"
.Vb 1
\& window is not in a state that is valid for the current action
.Ve
.IP "windowGroupInvalidErr" 4
.IX Item "windowGroupInvalidErr"
.Vb 1
\& WindowGroup is invalid
.Ve
.IP "windowAppModalStateAlreadyExistsErr" 4
.IX Item "windowAppModalStateAlreadyExistsErr"
.Vb 1
\& we\*(Aqre already running this window modally
.Ve
.IP "windowNoAppModalStateErr" 4
.IX Item "windowNoAppModalStateErr"
.Vb 1
\& there\*(Aqs no app modal state for the window
.Ve
.IP "errWindowDoesntSupportFocus" 4
.IX Item "errWindowDoesntSupportFocus"
.PD 0
.IP "kNavWrongDialogStateErr" 4
.IX Item "kNavWrongDialogStateErr"
.IP "kNavWrongDialogClassErr" 4
.IX Item "kNavWrongDialogClassErr"
.IP "kNavInvalidSystemConfigErr" 4
.IX Item "kNavInvalidSystemConfigErr"
.IP "kNavCustomControlMessageFailedErr" 4
.IX Item "kNavCustomControlMessageFailedErr"
.IP "kNavInvalidCustomControlMessageErr" 4
.IX Item "kNavInvalidCustomControlMessageErr"
.IP "collectionItemLockedErr" 4
.IX Item "collectionItemLockedErr"
.IP "collectionItemNotFoundErr" 4
.IX Item "collectionItemNotFoundErr"
.IP "collectionIndexRangeErr" 4
.IX Item "collectionIndexRangeErr"
.PD
.SH "Display Manager error codes (\-6220...\-6269)"
.IX Header "Display Manager error codes (-6220...-6269)"
.IP "kDMGenErr" 4
.IX Item "kDMGenErr"
.Vb 2
\& Unexpected Error
\&Mirroring\-Specific Errors
.Ve
.IP "kDMMirroringOnAlready" 4
.IX Item "kDMMirroringOnAlready"
.Vb 1
\& Returned by all calls that need mirroring to be off to do their thing.
.Ve
.IP "kDMWrongNumberOfDisplays" 4
.IX Item "kDMWrongNumberOfDisplays"
.Vb 1
\& Can only handle 2 displays for now.
.Ve
.IP "kDMMirroringBlocked" 4
.IX Item "kDMMirroringBlocked"
.Vb 1
\& DMBlockMirroring() has been called.
.Ve
.IP "kDMCantBlock" 4
.IX Item "kDMCantBlock"
.Vb 1
\& Mirroring is already on, can\*(Aqt Block now (call DMUnMirror() first).
.Ve
.IP "kDMMirroringNotOn" 4
.IX Item "kDMMirroringNotOn"
.Vb 2
\& Returned by all calls that need mirroring to be on to do their thing.
\&Other Display Manager Errors
.Ve
.IP "kSysSWTooOld" 4
.IX Item "kSysSWTooOld"
.Vb 1
\& Missing critical pieces of System Software.
.Ve
.IP "kDMSWNotInitializedErr" 4
.IX Item "kDMSWNotInitializedErr"
.Vb 1
\& Required software not initialized (eg windowmanager or display mgr).
.Ve
.IP "kDMDriverNotDisplayMgrAwareErr" 4
.IX Item "kDMDriverNotDisplayMgrAwareErr"
.Vb 1
\& Video Driver does not support display manager.
.Ve
.IP "kDMDisplayNotFoundErr" 4
.IX Item "kDMDisplayNotFoundErr"
.Vb 1
\& Could not find item (will someday remove).
.Ve
.IP "kDMNotFoundErr" 4
.IX Item "kDMNotFoundErr"
.Vb 1
\& Could not find item.
.Ve
.IP "kDMDisplayAlreadyInstalledErr" 4
.IX Item "kDMDisplayAlreadyInstalledErr"
.Vb 1
\& Attempt to add an already installed display.
.Ve
.IP "kDMMainDisplayCannotMoveErr" 4
.IX Item "kDMMainDisplayCannotMoveErr"
.Vb 1
\& Trying to move main display (or a display mirrored to it)
.Ve
.IP "kDMNoDeviceTableclothErr" 4
.IX Item "kDMNoDeviceTableclothErr"
.Vb 1
\& obsolete
.Ve
.IP "laTooSmallBufferErr" 4
.IX Item "laTooSmallBufferErr"
.Vb 1
\& output buffer is too small to store any result
.Ve
.IP "laEnvironmentBusyErr" 4
.IX Item "laEnvironmentBusyErr"
.Vb 1
\& specified environment is used
.Ve
.IP "laEnvironmentNotFoundErr" 4
.IX Item "laEnvironmentNotFoundErr"
.Vb 1
\& can\*(Aqt fint the specified environment
.Ve
.IP "laEnvironmentExistErr" 4
.IX Item "laEnvironmentExistErr"
.Vb 1
\& same name environment is already exists
.Ve
.IP "laInvalidPathErr" 4
.IX Item "laInvalidPathErr"
.Vb 1
\& path is not correct
.Ve
.IP "laNoMoreMorphemeErr" 4
.IX Item "laNoMoreMorphemeErr"
.Vb 1
\& nothing to read
.Ve
.IP "laFailAnalysisErr" 4
.IX Item "laFailAnalysisErr"
.Vb 1
\& analysis failed
.Ve
.IP "laTextOverFlowErr" 4
.IX Item "laTextOverFlowErr"
.Vb 1
\& text is too long
.Ve
.IP "laDictionaryNotOpenedErr" 4
.IX Item "laDictionaryNotOpenedErr"
.Vb 1
\& the dictionary is not opened
.Ve
.IP "laDictionaryUnknownErr" 4
.IX Item "laDictionaryUnknownErr"
.Vb 1
\& can\*(Aqt use this dictionary with this environment
.Ve
.IP "laDictionaryTooManyErr" 4
.IX Item "laDictionaryTooManyErr"
.Vb 1
\& too many dictionaries
.Ve
.IP "laPropertyValueErr" 4
.IX Item "laPropertyValueErr"
.Vb 1
\& Invalid property value
.Ve
.IP "laPropertyUnknownErr" 4
.IX Item "laPropertyUnknownErr"
.Vb 1
\& the property is unknown to this environment
.Ve
.IP "laPropertyIsReadOnlyErr" 4
.IX Item "laPropertyIsReadOnlyErr"
.Vb 1
\& the property is read only
.Ve
.IP "laPropertyNotFoundErr" 4
.IX Item "laPropertyNotFoundErr"
.Vb 1
\& can\*(Aqt find the property
.Ve
.IP "laPropertyErr" 4
.IX Item "laPropertyErr"
.Vb 1
\& Error in properties
.Ve
.IP "kUSBNoErr" 4
.IX Item "kUSBNoErr"
.PD 0
.IP "kUSBNoTran" 4
.IX Item "kUSBNoTran"
.IP "kUSBNoDelay" 4
.IX Item "kUSBNoDelay"
.IP "kUSBNotSent2Err" 4
.IX Item "kUSBNotSent2Err"
.PD
.Vb 1
\& Transaction not sent
.Ve
.IP "kUSBNotSent1Err" 4
.IX Item "kUSBNotSent1Err"
.Vb 1
\& Transaction not sent
.Ve
.IP "kUSBBufUnderRunErr" 4
.IX Item "kUSBBufUnderRunErr"
.Vb 1
\& Host hardware failure on data out, PCI busy?
.Ve
.IP "kUSBBufOvrRunErr" 4
.IX Item "kUSBBufOvrRunErr"
.Vb 1
\& Host hardware failure on data in, PCI busy?
.Ve
.IP "kUSBRes2Err" 4
.IX Item "kUSBRes2Err"
.PD 0
.IP "kUSBRes1Err" 4
.IX Item "kUSBRes1Err"
.IP "kUSBUnderRunErr" 4
.IX Item "kUSBUnderRunErr"
.PD
.Vb 1
\& Less data than buffer
.Ve
.IP "kUSBOverRunErr" 4
.IX Item "kUSBOverRunErr"
.Vb 1
\& Packet too large or more data than buffer
.Ve
.IP "kUSBWrongPIDErr" 4
.IX Item "kUSBWrongPIDErr"
.Vb 1
\& Pipe stall, Bad or wrong PID
.Ve
.IP "kUSBPIDCheckErr" 4
.IX Item "kUSBPIDCheckErr"
.Vb 1
\& Pipe stall, PID CRC error
.Ve
.IP "kUSBNotRespondingErr" 4
.IX Item "kUSBNotRespondingErr"
.Vb 1
\& Pipe stall, No device, device hung
.Ve
.IP "kUSBEndpointStallErr" 4
.IX Item "kUSBEndpointStallErr"
.Vb 1
\& Device didn\*(Aqt understand
.Ve
.IP "kUSBDataToggleErr" 4
.IX Item "kUSBDataToggleErr"
.Vb 1
\& Pipe stall, Bad data toggle
.Ve
.IP "kUSBBitstufErr" 4
.IX Item "kUSBBitstufErr"
.Vb 1
\& Pipe stall, bitstuffing
.Ve
.IP "kUSBCRCErr" 4
.IX Item "kUSBCRCErr"
.Vb 1
\& Pipe stall, bad CRC
.Ve
.IP "kUSBQueueFull" 4
.IX Item "kUSBQueueFull"
.Vb 1
\& Internal queue maxxed
.Ve
.IP "kUSBNotHandled" 4
.IX Item "kUSBNotHandled"
.Vb 1
\& Notification was not handled   (same as NotFound)
.Ve
.IP "kUSBUnknownNotification" 4
.IX Item "kUSBUnknownNotification"
.Vb 1
\& Notification type not defined
.Ve
.IP "kUSBInternalReserved10" 4
.IX Item "kUSBInternalReserved10"
.PD 0
.IP "kUSBInternalReserved9" 4
.IX Item "kUSBInternalReserved9"
.IP "kUSBInternalReserved8" 4
.IX Item "kUSBInternalReserved8"
.IP "kUSBInternalReserved7" 4
.IX Item "kUSBInternalReserved7"
.IP "kUSBInternalReserved6" 4
.IX Item "kUSBInternalReserved6"
.IP "kUSBInternalReserved5" 4
.IX Item "kUSBInternalReserved5"
.IP "kUSBInternalReserved4" 4
.IX Item "kUSBInternalReserved4"
.IP "kUSBInternalReserved3" 4
.IX Item "kUSBInternalReserved3"
.IP "kUSBInternalReserved2" 4
.IX Item "kUSBInternalReserved2"
.IP "kUSBPortDisabled" 4
.IX Item "kUSBPortDisabled"
.PD
.Vb 1
\& The port you are attached to is disabled, use USBDeviceReset.
.Ve
.IP "kUSBQueueAborted" 4
.IX Item "kUSBQueueAborted"
.Vb 1
\& Pipe zero stall cleared.
.Ve
.IP "kUSBTimedOut" 4
.IX Item "kUSBTimedOut"
.Vb 1
\& Transaction timed out.
.Ve
.IP "kUSBDeviceDisconnected" 4
.IX Item "kUSBDeviceDisconnected"
.Vb 1
\& Disconnected during suspend or reset
.Ve
.IP "kUSBDeviceNotSuspended" 4
.IX Item "kUSBDeviceNotSuspended"
.Vb 1
\& device is not suspended for resume
.Ve
.IP "kUSBDeviceSuspended" 4
.IX Item "kUSBDeviceSuspended"
.Vb 1
\& Device is suspended
.Ve
.IP "kUSBInvalidBuffer" 4
.IX Item "kUSBInvalidBuffer"
.Vb 1
\& bad buffer, usually nil
.Ve
.IP "kUSBDevicePowerProblem" 4
.IX Item "kUSBDevicePowerProblem"
.Vb 1
\& Device has a power problem
.Ve
.IP "kUSBDeviceBusy" 4
.IX Item "kUSBDeviceBusy"
.Vb 1
\& Device is already being configured
.Ve
.IP "kUSBUnknownInterfaceErr" 4
.IX Item "kUSBUnknownInterfaceErr"
.Vb 1
\& Interface ref not recognised
.Ve
.IP "kUSBPipeStalledError" 4
.IX Item "kUSBPipeStalledError"
.Vb 1
\& Pipe has stalled, error needs to be cleared
.Ve
.IP "kUSBPipeIdleError" 4
.IX Item "kUSBPipeIdleError"
.Vb 1
\& Pipe is Idle, it will not accept transactions
.Ve
.IP "kUSBNoBandwidthError" 4
.IX Item "kUSBNoBandwidthError"
.Vb 1
\& Not enough bandwidth available
.Ve
.IP "kUSBAbortedError" 4
.IX Item "kUSBAbortedError"
.Vb 1
\& Pipe aborted
.Ve
.IP "kUSBFlagsError" 4
.IX Item "kUSBFlagsError"
.Vb 1
\& Unused flags not zeroed
.Ve
.IP "kUSBCompletionError" 4
.IX Item "kUSBCompletionError"
.Vb 1
\& no completion routine specified
.Ve
.IP "kUSBPBLengthError" 4
.IX Item "kUSBPBLengthError"
.Vb 1
\& pbLength too small
.Ve
.IP "kUSBPBVersionError" 4
.IX Item "kUSBPBVersionError"
.Vb 1
\& Wrong pbVersion
.Ve
.IP "kUSBNotFound" 4
.IX Item "kUSBNotFound"
.Vb 1
\& Not found
.Ve
.IP "kUSBOutOfMemoryErr" 4
.IX Item "kUSBOutOfMemoryErr"
.Vb 1
\& Out of memory
.Ve
.IP "kUSBDeviceErr" 4
.IX Item "kUSBDeviceErr"
.Vb 1
\& Device error
.Ve
.IP "kUSBNoDeviceErr" 4
.IX Item "kUSBNoDeviceErr"
.Vb 1
\& No device
.Ve
.IP "kUSBAlreadyOpenErr" 4
.IX Item "kUSBAlreadyOpenErr"
.Vb 1
\& Already open
.Ve
.IP "kUSBTooManyTransactionsErr" 4
.IX Item "kUSBTooManyTransactionsErr"
.Vb 1
\& Too many transactions
.Ve
.IP "kUSBUnknownRequestErr" 4
.IX Item "kUSBUnknownRequestErr"
.Vb 1
\& Unknown request
.Ve
.IP "kUSBRqErr" 4
.IX Item "kUSBRqErr"
.Vb 1
\& Request error
.Ve
.IP "kUSBIncorrectTypeErr" 4
.IX Item "kUSBIncorrectTypeErr"
.Vb 1
\& Incorrect type
.Ve
.IP "kUSBTooManyPipesErr" 4
.IX Item "kUSBTooManyPipesErr"
.Vb 1
\& Too many pipes
.Ve
.IP "kUSBUnknownPipeErr" 4
.IX Item "kUSBUnknownPipeErr"
.Vb 1
\& Pipe ref not recognised
.Ve
.IP "kUSBUnknownDeviceErr" 4
.IX Item "kUSBUnknownDeviceErr"
.Vb 1
\& device ref not recognised
.Ve
.IP "dcmParamErr" 4
.IX Item "dcmParamErr"
.Vb 1
\& bad parameter
.Ve
.IP "dcmNotDictionaryErr" 4
.IX Item "dcmNotDictionaryErr"
.Vb 1
\& not dictionary
.Ve
.IP "dcmBadDictionaryErr" 4
.IX Item "dcmBadDictionaryErr"
.Vb 1
\& invalid dictionary
.Ve
.IP "dcmPermissionErr" 4
.IX Item "dcmPermissionErr"
.Vb 1
\& invalid permission
.Ve
.IP "dcmDictionaryNotOpenErr" 4
.IX Item "dcmDictionaryNotOpenErr"
.Vb 1
\& dictionary not opened
.Ve
.IP "dcmDictionaryBusyErr" 4
.IX Item "dcmDictionaryBusyErr"
.Vb 1
\& dictionary is busy
.Ve
.IP "dcmBlockFullErr" 4
.IX Item "dcmBlockFullErr"
.Vb 1
\& dictionary block full
.Ve
.IP "dcmNoRecordErr" 4
.IX Item "dcmNoRecordErr"
.Vb 1
\& no such record
.Ve
.IP "dcmDupRecordErr" 4
.IX Item "dcmDupRecordErr"
.Vb 1
\& same record already exist
.Ve
.IP "dcmNecessaryFieldErr" 4
.IX Item "dcmNecessaryFieldErr"
.Vb 1
\& lack required/identify field
.Ve
.IP "dcmBadFieldInfoErr" 4
.IX Item "dcmBadFieldInfoErr"
.Vb 1
\& incomplete information
.Ve
.IP "dcmBadFieldTypeErr" 4
.IX Item "dcmBadFieldTypeErr"
.Vb 1
\& no such field type supported
.Ve
.IP "dcmNoFieldErr" 4
.IX Item "dcmNoFieldErr"
.Vb 1
\& no such field exist
.Ve
.IP "dcmBadKeyErr" 4
.IX Item "dcmBadKeyErr"
.Vb 1
\& bad key information
.Ve
.IP "dcmTooManyKeyErr" 4
.IX Item "dcmTooManyKeyErr"
.Vb 1
\& too many key field
.Ve
.IP "dcmBadDataSizeErr" 4
.IX Item "dcmBadDataSizeErr"
.Vb 1
\& too big data size
.Ve
.IP "dcmBadFindMethodErr" 4
.IX Item "dcmBadFindMethodErr"
.Vb 1
\& no such find method supported
.Ve
.IP "dcmBadPropertyErr" 4
.IX Item "dcmBadPropertyErr"
.Vb 1
\& no such property exist
.Ve
.IP "dcmProtectedErr" 4
.IX Item "dcmProtectedErr"
.Vb 1
\& need keyword to use dictionary
.Ve
.IP "dcmNoAccessMethodErr" 4
.IX Item "dcmNoAccessMethodErr"
.Vb 1
\& no such AccessMethod
.Ve
.IP "dcmBadFeatureErr" 4
.IX Item "dcmBadFeatureErr"
.Vb 1
\& invalid AccessMethod feature
.Ve
.IP "dcmIterationCompleteErr" 4
.IX Item "dcmIterationCompleteErr"
.Vb 1
\& no more item in iterator
.Ve
.IP "kRAInvalidParameter" 4
.IX Item "kRAInvalidParameter"
.PD 0
.IP "kRAInvalidPort" 4
.IX Item "kRAInvalidPort"
.IP "kRAStartupFailed" 4
.IX Item "kRAStartupFailed"
.IP "kRAPortSetupFailed" 4
.IX Item "kRAPortSetupFailed"
.IP "kRAOutOfMemory" 4
.IX Item "kRAOutOfMemory"
.IP "kRANotSupported" 4
.IX Item "kRANotSupported"
.IP "kRAMissingResources" 4
.IX Item "kRAMissingResources"
.IP "kRAIncompatiblePrefs" 4
.IX Item "kRAIncompatiblePrefs"
.IP "kRANotConnected" 4
.IX Item "kRANotConnected"
.IP "kRAConnectionCanceled" 4
.IX Item "kRAConnectionCanceled"
.IP "kRAUnknownUser" 4
.IX Item "kRAUnknownUser"
.IP "kRAInvalidPassword" 4
.IX Item "kRAInvalidPassword"
.IP "kRAInternalError" 4
.IX Item "kRAInternalError"
.IP "kRAInstallationDamaged" 4
.IX Item "kRAInstallationDamaged"
.IP "kRAPortBusy" 4
.IX Item "kRAPortBusy"
.IP "kRAUnknownPortState" 4
.IX Item "kRAUnknownPortState"
.IP "kRAInvalidPortState" 4
.IX Item "kRAInvalidPortState"
.IP "kRAInvalidSerialProtocol" 4
.IX Item "kRAInvalidSerialProtocol"
.IP "kRAUserLoginDisabled" 4
.IX Item "kRAUserLoginDisabled"
.IP "kRAUserPwdChangeRequired" 4
.IX Item "kRAUserPwdChangeRequired"
.IP "kRAUserPwdEntryRequired" 4
.IX Item "kRAUserPwdEntryRequired"
.IP "kRAUserInteractionRequired" 4
.IX Item "kRAUserInteractionRequired"
.IP "kRAInitOpenTransportFailed" 4
.IX Item "kRAInitOpenTransportFailed"
.IP "kRARemoteAccessNotReady" 4
.IX Item "kRARemoteAccessNotReady"
.IP "kRATCPIPInactive" 4
.IX Item "kRATCPIPInactive"
.PD
.Vb 1
\& TCP/IP inactive, cannot be loaded
.Ve
.IP "kRATCPIPNotConfigured" 4
.IX Item "kRATCPIPNotConfigured"
.Vb 1
\& TCP/IP not configured, could be loaded
.Ve
.IP "kRANotPrimaryInterface" 4
.IX Item "kRANotPrimaryInterface"
.Vb 1
\& when IPCP is not primary TCP/IP intf.
.Ve
.IP "kRAConfigurationDBInitErr" 4
.IX Item "kRAConfigurationDBInitErr"
.PD 0
.IP "kRAPPPProtocolRejected" 4
.IX Item "kRAPPPProtocolRejected"
.IP "kRAPPPAuthenticationFailed" 4
.IX Item "kRAPPPAuthenticationFailed"
.IP "kRAPPPNegotiationFailed" 4
.IX Item "kRAPPPNegotiationFailed"
.IP "kRAPPPUserDisconnected" 4
.IX Item "kRAPPPUserDisconnected"
.IP "kRAPPPPeerDisconnected" 4
.IX Item "kRAPPPPeerDisconnected"
.IP "kRAPeerNotResponding" 4
.IX Item "kRAPeerNotResponding"
.IP "kRAATalkInactive" 4
.IX Item "kRAATalkInactive"
.IP "kRAExtAuthenticationFailed" 4
.IX Item "kRAExtAuthenticationFailed"
.IP "kRANCPRejectedbyPeer" 4
.IX Item "kRANCPRejectedbyPeer"
.IP "kRADuplicateIPAddr" 4
.IX Item "kRADuplicateIPAddr"
.IP "kRACallBackFailed" 4
.IX Item "kRACallBackFailed"
.IP "kATSUInvalidTextLayoutErr" 4
.IX Item "kATSUInvalidTextLayoutErr"
.PD
.Vb 2
\& An attempt was made to use a ATSUTextLayout
\&which hadn\*(Aqt been initialized or is otherwise
.Ve
.IP "kATSUInvalidStyleErr" 4
.IX Item "kATSUInvalidStyleErr"
.Vb 2
\& An attempt was made to use a ATSUStyle which
\&hadn\*(Aqt been properly allocated or is otherwise
.Ve
.IP "kATSUInvalidTextRangeErr" 4
.IX Item "kATSUInvalidTextRangeErr"
.Vb 2
\& An attempt was made to extract information
\&from or perform an operation on a ATSUTextLayout
.Ve
.IP "kATSUFontsMatched" 4
.IX Item "kATSUFontsMatched"
.Vb 2
\& This is not an error code but is returned by
\&ATSUMatchFontsToText() when changes need to
.Ve
.IP "kATSUFontsNotMatched" 4
.IX Item "kATSUFontsNotMatched"
.Vb 2
\& This value is returned by ATSUMatchFontsToText()
\&when the text contains Unicode characters which
.Ve
.IP "kATSUNoCorrespondingFontErr" 4
.IX Item "kATSUNoCorrespondingFontErr"
.Vb 2
\& This value is retrned by font ID conversion
\&routines ATSUFONDtoFontID() and ATSUFontIDtoFOND()
.Ve
.IP "kATSUInvalidFontErr" 4
.IX Item "kATSUInvalidFontErr"
.Vb 1
\& Used when an attempt was made to use an invalid font ID.
.Ve
.IP "kATSUInvalidAttributeValueErr" 4
.IX Item "kATSUInvalidAttributeValueErr"
.Vb 2
\& Used when an attempt was made to use an attribute with
\&a bad or undefined value.
.Ve
.IP "kATSUInvalidAttributeSizeErr" 4
.IX Item "kATSUInvalidAttributeSizeErr"
.Vb 2
\& Used when an attempt was made to use an attribute with a
\&bad size.
.Ve
.IP "kATSUInvalidAttributeTagErr" 4
.IX Item "kATSUInvalidAttributeTagErr"
.Vb 2
\& Used when an attempt was made to use a tag value that
\&was not appropriate for the function call it was used.
.Ve
.IP "kATSUInvalidCacheErr" 4
.IX Item "kATSUInvalidCacheErr"
.Vb 2
\& Used when an attempt was made to read in style data
\&from an invalid cache.  Either the format of the
.Ve
.IP "kATSUNotSetErr" 4
.IX Item "kATSUNotSetErr"
.Vb 2
\& Used when the client attempts to retrieve an attribute,
\&font feature, or font variation from a style when it
.Ve
.IP "kATSUNoStyleRunsAssignedErr" 4
.IX Item "kATSUNoStyleRunsAssignedErr"
.Vb 2
\& Used when an attempt was made to measure, highlight or draw
\&a ATSUTextLayout object that has no styleRuns associated with it.
.Ve
.IP "kATSUQuickDrawTextErr" 4
.IX Item "kATSUQuickDrawTextErr"
.Vb 2
\& Used when QuickDraw Text encounters an error rendering or measuring
\&a line of ATSUI text.
.Ve
.IP "kATSULowLevelErr" 4
.IX Item "kATSULowLevelErr"
.Vb 2
\& Used when an error was encountered within the low level ATS
\&mechanism performing an operation requested by ATSUI.
.Ve
.IP "kATSUNoFontCmapAvailableErr" 4
.IX Item "kATSUNoFontCmapAvailableErr"
.Vb 2
\& Used when no CMAP table can be accessed or synthesized for the
\&font passed into a SetAttributes Font call.
.Ve
.IP "kATSUNoFontScalerAvailableErr" 4
.IX Item "kATSUNoFontScalerAvailableErr"
.Vb 2
\& Used when no font scaler is available for the font passed
\&into a SetAttributes Font call.
.Ve
.IP "kATSUCoordinateOverflowErr" 4
.IX Item "kATSUCoordinateOverflowErr"
.Vb 2
\& Used to indicate the coordinates provided to an ATSUI routine caused
\&a coordinate overflow (i.e. > 32K).
.Ve
.IP "kATSULineBreakInWord" 4
.IX Item "kATSULineBreakInWord"
.Vb 2
\& This is not an error code but is returned by ATSUBreakLine to
\&indicate that the returned offset is within a word since there was
.Ve
.IP "kATSUBusyObjectErr" 4
.IX Item "kATSUBusyObjectErr"
.Vb 1
\& An ATSUI object is being used by another thread
.Ve
.IP "kATSUInvalidFontFallbacksErr" 4
.IX Item "kATSUInvalidFontFallbacksErr"
.Vb 2
\& An attempt was made to use a ATSUFontFallbacks
\&which hadn\*(Aqt been initialized or is otherwise
.Ve
.SH "general text errors"
.IX Header "general text errors"
.IP "kTextUnsupportedEncodingErr" 4
.IX Item "kTextUnsupportedEncodingErr"
.Vb 1
\& specified encoding not supported for this operation
.Ve
.IP "kTextMalformedInputErr" 4
.IX Item "kTextMalformedInputErr"
.Vb 1
\& in DBCS, for example, high byte followed by invalid low byte
.Ve
.IP "kTextUndefinedElementErr" 4
.IX Item "kTextUndefinedElementErr"
.Vb 1
\& text conversion errors
.Ve
.IP "kTECMissingTableErr" 4
.IX Item "kTECMissingTableErr"
.PD 0
.IP "kTECTableChecksumErr" 4
.IX Item "kTECTableChecksumErr"
.IP "kTECTableFormatErr" 4
.IX Item "kTECTableFormatErr"
.IP "kTECCorruptConverterErr" 4
.IX Item "kTECCorruptConverterErr"
.PD
.Vb 1
\& invalid converter object reference
.Ve
.IP "kTECNoConversionPathErr" 4
.IX Item "kTECNoConversionPathErr"
.PD 0
.IP "kTECBufferBelowMinimumSizeErr" 4
.IX Item "kTECBufferBelowMinimumSizeErr"
.PD
.Vb 1
\& output buffer too small to allow processing of first input text element
.Ve
.IP "kTECArrayFullErr" 4
.IX Item "kTECArrayFullErr"
.Vb 1
\& supplied name buffer or TextRun, TextEncoding, or UnicodeMapping array is too small
.Ve
.IP "kTECBadTextRunErr" 4
.IX Item "kTECBadTextRunErr"
.PD 0
.IP "kTECPartialCharErr" 4
.IX Item "kTECPartialCharErr"
.PD
.Vb 1
\& input buffer ends in the middle of a multibyte character, conversion stopped
.Ve
.IP "kTECUnmappableElementErr" 4
.IX Item "kTECUnmappableElementErr"
.PD 0
.IP "kTECIncompleteElementErr" 4
.IX Item "kTECIncompleteElementErr"
.PD
.Vb 1
\& text element may be incomplete or is too long for internal buffers
.Ve
.IP "kTECDirectionErr" 4
.IX Item "kTECDirectionErr"
.Vb 1
\& direction stack overflow, etc.
.Ve
.IP "kTECGlobalsUnavailableErr" 4
.IX Item "kTECGlobalsUnavailableErr"
.Vb 1
\& globals have already been deallocated (premature TERM)
.Ve
.IP "kTECItemUnavailableErr" 4
.IX Item "kTECItemUnavailableErr"
.Vb 2
\& item (e.g. name) not available for specified region (& encoding if relevant)
\&text conversion status codes
.Ve
.IP "kTECUsedFallbacksStatus" 4
.IX Item "kTECUsedFallbacksStatus"
.PD 0
.IP "kTECNeedFlushStatus" 4
.IX Item "kTECNeedFlushStatus"
.IP "kTECOutputBufferFullStatus" 4
.IX Item "kTECOutputBufferFullStatus"
.PD
.Vb 2
\& output buffer has no room for conversion of next input text element (partial conversion)
\&deprecated error & status codes for low\-level converter
.Ve
.IP "unicodeChecksumErr" 4
.IX Item "unicodeChecksumErr"
.PD 0
.IP "unicodeNoTableErr" 4
.IX Item "unicodeNoTableErr"
.IP "unicodeVariantErr" 4
.IX Item "unicodeVariantErr"
.IP "unicodeFallbacksErr" 4
.IX Item "unicodeFallbacksErr"
.IP "unicodePartConvertErr" 4
.IX Item "unicodePartConvertErr"
.IP "unicodeBufErr" 4
.IX Item "unicodeBufErr"
.IP "unicodeCharErr" 4
.IX Item "unicodeCharErr"
.IP "unicodeElementErr" 4
.IX Item "unicodeElementErr"
.IP "unicodeNotFoundErr" 4
.IX Item "unicodeNotFoundErr"
.IP "unicodeTableFormatErr" 4
.IX Item "unicodeTableFormatErr"
.IP "unicodeDirectionErr" 4
.IX Item "unicodeDirectionErr"
.IP "unicodeContextualErr" 4
.IX Item "unicodeContextualErr"
.IP "kUTCUnderflowErr" 4
.IX Item "kUTCUnderflowErr"
.IP "kUTCOverflowErr" 4
.IX Item "kUTCOverflowErr"
.IP "codecErr" 4
.IX Item "codecErr"
.IP "noCodecErr" 4
.IX Item "noCodecErr"
.IP "codecUnimpErr" 4
.IX Item "codecUnimpErr"
.IP "codecSizeErr" 4
.IX Item "codecSizeErr"
.IP "codecScreenBufErr" 4
.IX Item "codecScreenBufErr"
.IP "codecImageBufErr" 4
.IX Item "codecImageBufErr"
.IP "codecSpoolErr" 4
.IX Item "codecSpoolErr"
.IP "codecAbortErr" 4
.IX Item "codecAbortErr"
.IP "codecWouldOffscreenErr" 4
.IX Item "codecWouldOffscreenErr"
.IP "codecBadDataErr" 4
.IX Item "codecBadDataErr"
.IP "codecDataVersErr" 4
.IX Item "codecDataVersErr"
.IP "codecExtensionNotFoundErr" 4
.IX Item "codecExtensionNotFoundErr"
.IP "scTypeNotFoundErr" 4
.IX Item "scTypeNotFoundErr"
.IP "codecConditionErr" 4
.IX Item "codecConditionErr"
.IP "codecOpenErr" 4
.IX Item "codecOpenErr"
.IP "codecCantWhenErr" 4
.IX Item "codecCantWhenErr"
.IP "codecCantQueueErr" 4
.IX Item "codecCantQueueErr"
.IP "codecNothingToBlitErr" 4
.IX Item "codecNothingToBlitErr"
.IP "codecNoMemoryPleaseWaitErr" 4
.IX Item "codecNoMemoryPleaseWaitErr"
.IP "codecDisabledErr" 4
.IX Item "codecDisabledErr"
.PD
.Vb 1
\& codec disabled itself \-\- pass codecFlagReenable to reset
.Ve
.IP "codecNeedToFlushChainErr" 4
.IX Item "codecNeedToFlushChainErr"
.PD 0
.IP "lockPortBitsBadSurfaceErr" 4
.IX Item "lockPortBitsBadSurfaceErr"
.IP "lockPortBitsWindowMovedErr" 4
.IX Item "lockPortBitsWindowMovedErr"
.IP "lockPortBitsWindowResizedErr" 4
.IX Item "lockPortBitsWindowResizedErr"
.IP "lockPortBitsWindowClippedErr" 4
.IX Item "lockPortBitsWindowClippedErr"
.IP "lockPortBitsBadPortErr" 4
.IX Item "lockPortBitsBadPortErr"
.IP "lockPortBitsSurfaceLostErr" 4
.IX Item "lockPortBitsSurfaceLostErr"
.IP "codecParameterDialogConfirm" 4
.IX Item "codecParameterDialogConfirm"
.IP "codecNeedAccessKeyErr" 4
.IX Item "codecNeedAccessKeyErr"
.PD
.Vb 1
\& codec needs password in order to decompress
.Ve
.IP "codecOffscreenFailedErr" 4
.IX Item "codecOffscreenFailedErr"
.PD 0
.IP "codecDroppedFrameErr" 4
.IX Item "codecDroppedFrameErr"
.PD
.Vb 1
\& returned from ImageCodecDrawBand
.Ve
.IP "directXObjectAlreadyExists" 4
.IX Item "directXObjectAlreadyExists"
.PD 0
.IP "lockPortBitsWrongGDeviceErr" 4
.IX Item "lockPortBitsWrongGDeviceErr"
.IP "kBadAdapterErr" 4
.IX Item "kBadAdapterErr"
.PD
.Vb 1
\& invalid adapter number
.Ve
.IP "kBadAttributeErr" 4
.IX Item "kBadAttributeErr"
.Vb 1
\& specified attributes field value is invalid
.Ve
.IP "kBadBaseErr" 4
.IX Item "kBadBaseErr"
.Vb 1
\& specified base system memory address is invalid
.Ve
.IP "kBadEDCErr" 4
.IX Item "kBadEDCErr"
.Vb 1
\& specified EDC generator specified is invalid
.Ve
.IP "kBadIRQErr" 4
.IX Item "kBadIRQErr"
.Vb 1
\& specified IRQ level is invalid
.Ve
.IP "kBadOffsetErr" 4
.IX Item "kBadOffsetErr"
.Vb 1
\& specified PC card memory array offset is invalid
.Ve
.IP "kBadPageErr" 4
.IX Item "kBadPageErr"
.Vb 1
\& specified page is invalid
.Ve
.IP "kBadSizeErr" 4
.IX Item "kBadSizeErr"
.Vb 1
\& specified size is invalid
.Ve
.IP "kBadSocketErr" 4
.IX Item "kBadSocketErr"
.Vb 1
\& specified logical or physical socket number is invalid
.Ve
.IP "kBadTypeErr" 4
.IX Item "kBadTypeErr"
.Vb 1
\& specified window or interface type is invalid
.Ve
.IP "kBadVccErr" 4
.IX Item "kBadVccErr"
.Vb 1
\& specified Vcc power level index is invalid
.Ve
.IP "kBadVppErr" 4
.IX Item "kBadVppErr"
.Vb 1
\& specified Vpp1 or Vpp2 power level index is invalid
.Ve
.IP "kBadWindowErr" 4
.IX Item "kBadWindowErr"
.Vb 1
\& specified window is invalid
.Ve
.IP "kBadArgLengthErr" 4
.IX Item "kBadArgLengthErr"
.Vb 1
\& ArgLength argument is invalid
.Ve
.IP "kBadArgsErr" 4
.IX Item "kBadArgsErr"
.Vb 1
\& values in argument packet are invalid
.Ve
.IP "kBadHandleErr" 4
.IX Item "kBadHandleErr"
.Vb 1
\& clientHandle is invalid
.Ve
.IP "kBadCISErr" 4
.IX Item "kBadCISErr"
.Vb 1
\& CIS on card is invalid
.Ve
.IP "kBadSpeedErr" 4
.IX Item "kBadSpeedErr"
.Vb 1
\& specified speed is unavailable
.Ve
.IP "kReadFailureErr" 4
.IX Item "kReadFailureErr"
.Vb 1
\& unable to complete read request
.Ve
.IP "kWriteFailureErr" 4
.IX Item "kWriteFailureErr"
.Vb 1
\& unable to complete write request
.Ve
.IP "kGeneralFailureErr" 4
.IX Item "kGeneralFailureErr"
.Vb 1
\& an undefined error has occurred
.Ve
.IP "kNoCardErr" 4
.IX Item "kNoCardErr"
.Vb 1
\& no PC card in the socket
.Ve
.IP "kUnsupportedFunctionErr" 4
.IX Item "kUnsupportedFunctionErr"
.Vb 1
\& function is not supported by this implementation
.Ve
.IP "kUnsupportedModeErr" 4
.IX Item "kUnsupportedModeErr"
.Vb 1
\& mode is not supported
.Ve
.IP "kBusyErr" 4
.IX Item "kBusyErr"
.Vb 1
\& unable to process request at this time \- try later
.Ve
.IP "kWriteProtectedErr" 4
.IX Item "kWriteProtectedErr"
.Vb 1
\& media is write\-protected
.Ve
.IP "kConfigurationLockedErr" 4
.IX Item "kConfigurationLockedErr"
.Vb 1
\& a configuration has already been locked
.Ve
.IP "kInUseErr" 4
.IX Item "kInUseErr"
.Vb 1
\& requested resource is being used by a client
.Ve
.IP "kNoMoreItemsErr" 4
.IX Item "kNoMoreItemsErr"
.Vb 1
\& there are no more of the requested item
.Ve
.IP "kOutOfResourceErr" 4
.IX Item "kOutOfResourceErr"
.Vb 1
\& Card Services has exhausted the resource
.Ve
.IP "kNoCardSevicesSocketsErr" 4
.IX Item "kNoCardSevicesSocketsErr"
.PD 0
.IP "kInvalidRegEntryErr" 4
.IX Item "kInvalidRegEntryErr"
.IP "kBadLinkErr" 4
.IX Item "kBadLinkErr"
.IP "kBadDeviceErr" 4
.IX Item "kBadDeviceErr"
.IP "k16BitCardErr" 4
.IX Item "k16BitCardErr"
.IP "kCardBusCardErr" 4
.IX Item "kCardBusCardErr"
.IP "kPassCallToChainErr" 4
.IX Item "kPassCallToChainErr"
.IP "kCantConfigureCardErr" 4
.IX Item "kCantConfigureCardErr"
.IP "kPostCardEventErr" 4
.IX Item "kPostCardEventErr"
.PD
.Vb 1
\& _PCCSLPostCardEvent failed and dropped an event
.Ve
.IP "kInvalidDeviceNumber" 4
.IX Item "kInvalidDeviceNumber"
.PD 0
.IP "kUnsupportedVsErr" 4
.IX Item "kUnsupportedVsErr"
.PD
.Vb 1
\& Unsupported Voltage Sense
.Ve
.IP "kInvalidCSClientErr" 4
.IX Item "kInvalidCSClientErr"
.Vb 1
\& Card Services ClientID is not registered
.Ve
.IP "kBadTupleDataErr" 4
.IX Item "kBadTupleDataErr"
.Vb 1
\& Data in tuple is invalid
.Ve
.IP "kBadCustomIFIDErr" 4
.IX Item "kBadCustomIFIDErr"
.Vb 1
\& Custom interface ID is invalid
.Ve
.IP "kNoIOWindowRequestedErr" 4
.IX Item "kNoIOWindowRequestedErr"
.Vb 1
\& Request I/O window before calling configuration
.Ve
.IP "kNoMoreTimerClientsErr" 4
.IX Item "kNoMoreTimerClientsErr"
.Vb 1
\& All timer callbacks are in use
.Ve
.IP "kNoMoreInterruptSlotsErr" 4
.IX Item "kNoMoreInterruptSlotsErr"
.Vb 1
\& All internal Interrupt slots are in use
.Ve
.IP "kNoClientTableErr" 4
.IX Item "kNoClientTableErr"
.Vb 1
\& The client table has not be initialized yet
.Ve
.IP "kUnsupportedCardErr" 4
.IX Item "kUnsupportedCardErr"
.Vb 1
\& Card not supported by generic enabler
.Ve
.IP "kNoCardEnablersFoundErr" 4
.IX Item "kNoCardEnablersFoundErr"
.Vb 1
\& No Enablers were found
.Ve
.IP "kNoEnablerForCardErr" 4
.IX Item "kNoEnablerForCardErr"
.Vb 1
\& No Enablers were found that can support the card
.Ve
.IP "kNoCompatibleNameErr" 4
.IX Item "kNoCompatibleNameErr"
.Vb 1
\& There is no compatible driver name for this device
.Ve
.IP "kClientRequestDenied" 4
.IX Item "kClientRequestDenied"
.Vb 2
\& CS Clients should return this code inorder to
\&deny a request\-type CS Event
.Ve
.IP "kNotReadyErr" 4
.IX Item "kNotReadyErr"
.Vb 1
\& PC Card failed to go ready
.Ve
.IP "kTooManyIOWindowsErr" 4
.IX Item "kTooManyIOWindowsErr"
.Vb 1
\& device requested more than one I/O window
.Ve
.IP "kAlreadySavedStateErr" 4
.IX Item "kAlreadySavedStateErr"
.Vb 1
\& The state has been saved on previous call
.Ve
.IP "kAttemptDupCardEntryErr" 4
.IX Item "kAttemptDupCardEntryErr"
.Vb 1
\& The Enabler was asked to create a duplicate card entry
.Ve
.IP "kCardPowerOffErr" 4
.IX Item "kCardPowerOffErr"
.Vb 1
\& Power to the card has been turned off
.Ve
.IP "kNotZVCapableErr" 4
.IX Item "kNotZVCapableErr"
.Vb 1
\& This socket does not support Zoomed Video
.Ve
.IP "noDeviceForChannel" 4
.IX Item "noDeviceForChannel"
.PD 0
.IP "grabTimeComplete" 4
.IX Item "grabTimeComplete"
.IP "cantDoThatInCurrentMode" 4
.IX Item "cantDoThatInCurrentMode"
.IP "notEnoughMemoryToGrab" 4
.IX Item "notEnoughMemoryToGrab"
.IP "notEnoughDiskSpaceToGrab" 4
.IX Item "notEnoughDiskSpaceToGrab"
.IP "couldntGetRequiredComponent" 4
.IX Item "couldntGetRequiredComponent"
.IP "badSGChannel" 4
.IX Item "badSGChannel"
.IP "seqGrabInfoNotAvailable" 4
.IX Item "seqGrabInfoNotAvailable"
.IP "deviceCantMeetRequest" 4
.IX Item "deviceCantMeetRequest"
.IP "badControllerHeight" 4
.IX Item "badControllerHeight"
.IP "editingNotAllowed" 4
.IX Item "editingNotAllowed"
.IP "controllerBoundsNotExact" 4
.IX Item "controllerBoundsNotExact"
.IP "cannotSetWidthOfAttachedController" 4
.IX Item "cannotSetWidthOfAttachedController"
.IP "controllerHasFixedHeight" 4
.IX Item "controllerHasFixedHeight"
.IP "errAEBadKeyForm" 4
.IX Item "errAEBadKeyForm"
.IP "errAECantHandleClass" 4
.IX Item "errAECantHandleClass"
.IP "errAECantSupplyType" 4
.IX Item "errAECantSupplyType"
.IP "errAECantUndo" 4
.IX Item "errAECantUndo"
.IP "errAEEventFailed" 4
.IX Item "errAEEventFailed"
.IP "errAEIndexTooLarge" 4
.IX Item "errAEIndexTooLarge"
.IP "errAEInTransaction" 4
.IX Item "errAEInTransaction"
.IP "errAELocalOnly" 4
.IX Item "errAELocalOnly"
.IP "errAENoSuchTransaction" 4
.IX Item "errAENoSuchTransaction"
.IP "errAENotAnElement" 4
.IX Item "errAENotAnElement"
.IP "errAENotASingleObject" 4
.IX Item "errAENotASingleObject"
.IP "errAENotModifiable" 4
.IX Item "errAENotModifiable"
.IP "errAENoUserSelection" 4
.IX Item "errAENoUserSelection"
.IP "errAEPrivilegeError" 4
.IX Item "errAEPrivilegeError"
.IP "errAEReadDenied" 4
.IX Item "errAEReadDenied"
.IP "errAETypeError" 4
.IX Item "errAETypeError"
.IP "errAEWriteDenied" 4
.IX Item "errAEWriteDenied"
.IP "errAENotAnEnumMember" 4
.IX Item "errAENotAnEnumMember"
.PD
.Vb 1
\& enumerated value in SetData is not allowed for this property
.Ve
.IP "errAECantPutThatThere" 4
.IX Item "errAECantPutThatThere"
.Vb 1
\& in make new, duplicate, etc. class can\*(Aqt be an element of container
.Ve
.IP "telGenericError" 4
.IX Item "telGenericError"
.PD 0
.IP "telNoErr" 4
.IX Item "telNoErr"
.IP "telNoTools" 4
.IX Item "telNoTools"
.PD
.Vb 1
\& no telephone tools found in extension folder
.Ve
.IP "telBadTermErr" 4
.IX Item "telBadTermErr"
.Vb 1
\& invalid TELHandle or handle not found
.Ve
.IP "telBadDNErr" 4
.IX Item "telBadDNErr"
.Vb 1
\& TELDNHandle not found or invalid
.Ve
.IP "telBadCAErr" 4
.IX Item "telBadCAErr"
.Vb 1
\& TELCAHandle not found or invalid
.Ve
.IP "telBadHandErr" 4
.IX Item "telBadHandErr"
.Vb 1
\& bad handle specified
.Ve
.IP "telBadProcErr" 4
.IX Item "telBadProcErr"
.Vb 1
\& bad msgProc specified
.Ve
.IP "telCAUnavail" 4
.IX Item "telCAUnavail"
.Vb 1
\& a CA is not available
.Ve
.IP "telNoMemErr" 4
.IX Item "telNoMemErr"
.Vb 1
\& no memory to allocate handle
.Ve
.IP "telNoOpenErr" 4
.IX Item "telNoOpenErr"
.Vb 1
\& unable to open terminal
.Ve
.IP "telBadHTypeErr" 4
.IX Item "telBadHTypeErr"
.Vb 1
\& bad hook type specified
.Ve
.IP "telHTypeNotSupp" 4
.IX Item "telHTypeNotSupp"
.Vb 1
\& hook type not supported by this tool
.Ve
.IP "telBadLevelErr" 4
.IX Item "telBadLevelErr"
.Vb 1
\& bad volume level setting
.Ve
.IP "telBadVTypeErr" 4
.IX Item "telBadVTypeErr"
.Vb 1
\& bad volume type error
.Ve
.IP "telVTypeNotSupp" 4
.IX Item "telVTypeNotSupp"
.Vb 1
\& volume type not supported by this tool
.Ve
.IP "telBadAPattErr" 4
.IX Item "telBadAPattErr"
.Vb 1
\& bad alerting pattern specified
.Ve
.IP "telAPattNotSupp" 4
.IX Item "telAPattNotSupp"
.Vb 1
\& alerting pattern not supported by tool
.Ve
.IP "telBadIndex" 4
.IX Item "telBadIndex"
.Vb 1
\& bad index specified
.Ve
.IP "telIndexNotSupp" 4
.IX Item "telIndexNotSupp"
.Vb 1
\& index not supported by this tool
.Ve
.IP "telBadStateErr" 4
.IX Item "telBadStateErr"
.Vb 1
\& bad device state specified
.Ve
.IP "telStateNotSupp" 4
.IX Item "telStateNotSupp"
.Vb 1
\& device state not supported by tool
.Ve
.IP "telBadIntExt" 4
.IX Item "telBadIntExt"
.Vb 1
\& bad internal external error
.Ve
.IP "telIntExtNotSupp" 4
.IX Item "telIntExtNotSupp"
.Vb 1
\& internal external type not supported by this tool
.Ve
.IP "telBadDNDType" 4
.IX Item "telBadDNDType"
.Vb 1
\& bad DND type specified
.Ve
.IP "telDNDTypeNotSupp" 4
.IX Item "telDNDTypeNotSupp"
.Vb 1
\& DND type is not supported by this tool
.Ve
.IP "telFeatNotSub" 4
.IX Item "telFeatNotSub"
.Vb 1
\& feature not subscribed
.Ve
.IP "telFeatNotAvail" 4
.IX Item "telFeatNotAvail"
.Vb 1
\& feature subscribed but not available
.Ve
.IP "telFeatActive" 4
.IX Item "telFeatActive"
.Vb 1
\& feature already active
.Ve
.IP "telFeatNotSupp" 4
.IX Item "telFeatNotSupp"
.Vb 1
\& feature program call not supported by this tool
.Ve
.IP "telConfLimitErr" 4
.IX Item "telConfLimitErr"
.Vb 1
\& limit specified is too high for this configuration
.Ve
.IP "telConfNoLimit" 4
.IX Item "telConfNoLimit"
.Vb 1
\& no limit was specified but required
.Ve
.IP "telConfErr" 4
.IX Item "telConfErr"
.Vb 1
\& conference was not prepared
.Ve
.IP "telConfRej" 4
.IX Item "telConfRej"
.Vb 1
\& conference request was rejected
.Ve
.IP "telTransferErr" 4
.IX Item "telTransferErr"
.Vb 1
\& transfer not prepared
.Ve
.IP "telTransferRej" 4
.IX Item "telTransferRej"
.Vb 1
\& transfer request rejected
.Ve
.IP "telCBErr" 4
.IX Item "telCBErr"
.Vb 1
\& call back feature not set previously
.Ve
.IP "telConfLimitExceeded" 4
.IX Item "telConfLimitExceeded"
.Vb 1
\& attempt to exceed switch conference limits
.Ve
.IP "telBadDNType" 4
.IX Item "telBadDNType"
.Vb 1
\& DN type invalid
.Ve
.IP "telBadPageID" 4
.IX Item "telBadPageID"
.Vb 1
\& bad page ID specified
.Ve
.IP "telBadIntercomID" 4
.IX Item "telBadIntercomID"
.Vb 1
\& bad intercom ID specified
.Ve
.IP "telBadFeatureID" 4
.IX Item "telBadFeatureID"
.Vb 1
\& bad feature ID specified
.Ve
.IP "telBadFwdType" 4
.IX Item "telBadFwdType"
.Vb 1
\& bad fwdType specified
.Ve
.IP "telBadPickupGroupID" 4
.IX Item "telBadPickupGroupID"
.Vb 1
\& bad pickup group ID specified
.Ve
.IP "telBadParkID" 4
.IX Item "telBadParkID"
.Vb 1
\& bad park id specified
.Ve
.IP "telBadSelect" 4
.IX Item "telBadSelect"
.Vb 1
\& unable to select or deselect DN
.Ve
.IP "telBadBearerType" 4
.IX Item "telBadBearerType"
.Vb 1
\& bad bearerType specified
.Ve
.IP "telBadRate" 4
.IX Item "telBadRate"
.Vb 1
\& bad rate specified
.Ve
.IP "telDNTypeNotSupp" 4
.IX Item "telDNTypeNotSupp"
.Vb 1
\& DN type not supported by tool
.Ve
.IP "telFwdTypeNotSupp" 4
.IX Item "telFwdTypeNotSupp"
.Vb 1
\& forward type not supported by tool
.Ve
.IP "telBadDisplayMode" 4
.IX Item "telBadDisplayMode"
.Vb 1
\& bad display mode specified
.Ve
.IP "telDisplayModeNotSupp" 4
.IX Item "telDisplayModeNotSupp"
.Vb 1
\& display mode not supported by tool
.Ve
.IP "telNoCallbackRef" 4
.IX Item "telNoCallbackRef"
.Vb 1
\& no call back reference was specified, but is required
.Ve
.IP "telAlreadyOpen" 4
.IX Item "telAlreadyOpen"
.Vb 1
\& terminal already open
.Ve
.IP "telStillNeeded" 4
.IX Item "telStillNeeded"
.Vb 1
\& terminal driver still needed by someone else
.Ve
.IP "telTermNotOpen" 4
.IX Item "telTermNotOpen"
.Vb 1
\& terminal not opened via TELOpenTerm
.Ve
.IP "telCANotAcceptable" 4
.IX Item "telCANotAcceptable"
.Vb 1
\& CA not "acceptable"
.Ve
.IP "telCANotRejectable" 4
.IX Item "telCANotRejectable"
.Vb 1
\& CA not "rejectable"
.Ve
.IP "telCANotDeflectable" 4
.IX Item "telCANotDeflectable"
.Vb 1
\& CA not "deflectable"
.Ve
.IP "telPBErr" 4
.IX Item "telPBErr"
.Vb 1
\& parameter block error, bad format
.Ve
.IP "telBadFunction" 4
.IX Item "telBadFunction"
.Vb 2
\& bad msgCode specified
\&telNoTools        = \-10101,        unable to find any telephone tools
.Ve
.IP "telNoSuchTool" 4
.IX Item "telNoSuchTool"
.Vb 1
\& unable to find tool with name specified
.Ve
.IP "telUnknownErr" 4
.IX Item "telUnknownErr"
.Vb 1
\& unable to set config
.Ve
.IP "telNoCommFolder" 4
.IX Item "telNoCommFolder"
.Vb 1
\& Communications/Extensions A\*: not found
.Ve
.IP "telInitFailed" 4
.IX Item "telInitFailed"
.Vb 1
\& initialization failed
.Ve
.IP "telBadCodeResource" 4
.IX Item "telBadCodeResource"
.Vb 1
\& code resource not found
.Ve
.IP "telDeviceNotFound" 4
.IX Item "telDeviceNotFound"
.Vb 1
\& device not found
.Ve
.IP "telBadProcID" 4
.IX Item "telBadProcID"
.Vb 1
\& invalid procID
.Ve
.IP "telValidateFailed" 4
.IX Item "telValidateFailed"
.Vb 1
\& telValidate failed
.Ve
.IP "telAutoAnsNotOn" 4
.IX Item "telAutoAnsNotOn"
.Vb 1
\& autoAnswer in not turned on
.Ve
.IP "telDetAlreadyOn" 4
.IX Item "telDetAlreadyOn"
.Vb 1
\& detection is already turned on
.Ve
.IP "telBadSWErr" 4
.IX Item "telBadSWErr"
.Vb 1
\& Software not installed properly
.Ve
.IP "telBadSampleRate" 4
.IX Item "telBadSampleRate"
.Vb 1
\& incompatible sample rate
.Ve
.SH "Power Manager Errors"
.IX Header "Power Manager Errors"
.IP "pmBusyErr" 4
.IX Item "pmBusyErr"
.Vb 1
\& Power Mgr never ready to start handshake
.Ve
.IP "pmReplyTOErr" 4
.IX Item "pmReplyTOErr"
.Vb 1
\& Timed out waiting for reply
.Ve
.IP "pmSendStartErr" 4
.IX Item "pmSendStartErr"
.Vb 1
\& during send, pmgr did not start hs
.Ve
.IP "pmSendEndErr" 4
.IX Item "pmSendEndErr"
.Vb 1
\& during send, pmgr did not finish hs
.Ve
.IP "pmRecvStartErr" 4
.IX Item "pmRecvStartErr"
.Vb 1
\& during receive, pmgr did not start hs
.Ve
.IP "kPowerHandlerExistsForDeviceErr" 4
.IX Item "kPowerHandlerExistsForDeviceErr"
.PD 0
.IP "kPowerHandlerNotFoundForDeviceErr" 4
.IX Item "kPowerHandlerNotFoundForDeviceErr"
.IP "kPowerHandlerNotFoundForProcErr" 4
.IX Item "kPowerHandlerNotFoundForProcErr"
.IP "kPowerMgtMessageNotHandled" 4
.IX Item "kPowerMgtMessageNotHandled"
.IP "kPowerMgtRequestDenied" 4
.IX Item "kPowerMgtRequestDenied"
.IP "kCantReportProcessorTemperatureErr" 4
.IX Item "kCantReportProcessorTemperatureErr"
.IP "kProcessorTempRoutineRequiresMPLib2" 4
.IX Item "kProcessorTempRoutineRequiresMPLib2"
.IP "kNoSuchPowerSource" 4
.IX Item "kNoSuchPowerSource"
.IP "debuggingExecutionContextErr" 4
.IX Item "debuggingExecutionContextErr"
.PD
.Vb 1
\& routine cannot be called at this time
.Ve
.IP "debuggingDuplicateSignatureErr" 4
.IX Item "debuggingDuplicateSignatureErr"
.Vb 1
\& componentSignature already registered
.Ve
.IP "debuggingDuplicateOptionErr" 4
.IX Item "debuggingDuplicateOptionErr"
.Vb 1
\& optionSelectorNum already registered
.Ve
.IP "debuggingInvalidSignatureErr" 4
.IX Item "debuggingInvalidSignatureErr"
.Vb 1
\& componentSignature not registered
.Ve
.IP "debuggingInvalidOptionErr" 4
.IX Item "debuggingInvalidOptionErr"
.Vb 1
\& optionSelectorNum is not registered
.Ve
.IP "debuggingInvalidNameErr" 4
.IX Item "debuggingInvalidNameErr"
.Vb 1
\& componentName or optionName is invalid (NULL)
.Ve
.IP "debuggingNoCallbackErr" 4
.IX Item "debuggingNoCallbackErr"
.Vb 1
\& debugging component has no callback
.Ve
.IP "kHIDVersionIncompatibleErr" 4
.IX Item "kHIDVersionIncompatibleErr"
.PD 0
.IP "kHIDSuccess" 4
.IX Item "kHIDSuccess"
.IP "kHIDInvalidRangePageErr" 4
.IX Item "kHIDInvalidRangePageErr"
.IP "kHIDReportIDZeroErr" 4
.IX Item "kHIDReportIDZeroErr"
.IP "kHIDReportCountZeroErr" 4
.IX Item "kHIDReportCountZeroErr"
.IP "kHIDReportSizeZeroErr" 4
.IX Item "kHIDReportSizeZeroErr"
.IP "kHIDUnmatchedDesignatorRangeErr" 4
.IX Item "kHIDUnmatchedDesignatorRangeErr"
.IP "kHIDUnmatchedStringRangeErr" 4
.IX Item "kHIDUnmatchedStringRangeErr"
.IP "kHIDInvertedUsageRangeErr" 4
.IX Item "kHIDInvertedUsageRangeErr"
.IP "kHIDUnmatchedUsageRangeErr" 4
.IX Item "kHIDUnmatchedUsageRangeErr"
.IP "kHIDInvertedPhysicalRangeErr" 4
.IX Item "kHIDInvertedPhysicalRangeErr"
.IP "kHIDInvertedLogicalRangeErr" 4
.IX Item "kHIDInvertedLogicalRangeErr"
.IP "kHIDBadLogicalMaximumErr" 4
.IX Item "kHIDBadLogicalMaximumErr"
.IP "kHIDBadLogicalMinimumErr" 4
.IX Item "kHIDBadLogicalMinimumErr"
.IP "kHIDUsagePageZeroErr" 4
.IX Item "kHIDUsagePageZeroErr"
.IP "kHIDEndOfDescriptorErr" 4
.IX Item "kHIDEndOfDescriptorErr"
.IP "kHIDNotEnoughMemoryErr" 4
.IX Item "kHIDNotEnoughMemoryErr"
.IP "kHIDBadParameterErr" 4
.IX Item "kHIDBadParameterErr"
.IP "kHIDNullPointerErr" 4
.IX Item "kHIDNullPointerErr"
.IP "kHIDInvalidReportLengthErr" 4
.IX Item "kHIDInvalidReportLengthErr"
.IP "kHIDInvalidReportTypeErr" 4
.IX Item "kHIDInvalidReportTypeErr"
.IP "kHIDBadLogPhysValuesErr" 4
.IX Item "kHIDBadLogPhysValuesErr"
.IP "kHIDIncompatibleReportErr" 4
.IX Item "kHIDIncompatibleReportErr"
.IP "kHIDInvalidPreparsedDataErr" 4
.IX Item "kHIDInvalidPreparsedDataErr"
.IP "kHIDNotValueArrayErr" 4
.IX Item "kHIDNotValueArrayErr"
.IP "kHIDUsageNotFoundErr" 4
.IX Item "kHIDUsageNotFoundErr"
.IP "kHIDValueOutOfRangeErr" 4
.IX Item "kHIDValueOutOfRangeErr"
.IP "kHIDBufferTooSmallErr" 4
.IX Item "kHIDBufferTooSmallErr"
.IP "kHIDNullStateErr" 4
.IX Item "kHIDNullStateErr"
.IP "kModemOutOfMemory" 4
.IX Item "kModemOutOfMemory"
.IP "kModemPreferencesMissing" 4
.IX Item "kModemPreferencesMissing"
.IP "kTXNEndIterationErr" 4
.IX Item "kTXNEndIterationErr"
.IP "kTXNCannotAddFrameErr" 4
.IX Item "kTXNCannotAddFrameErr"
.IP "kTXNInvalidFrameIDErr" 4
.IX Item "kTXNInvalidFrameIDErr"
.IP "kTXNIllegalToCrossDataBoundariesErr" 4
.IX Item "kTXNIllegalToCrossDataBoundariesErr"
.IP "kTXNUserCanceledOperationErr" 4
.IX Item "kTXNUserCanceledOperationErr"
.IP "kTXNBadDefaultFileTypeWarning" 4
.IX Item "kTXNBadDefaultFileTypeWarning"
.IP "kTXNCannotSetAutoIndentErr" 4
.IX Item "kTXNCannotSetAutoIndentErr"
.IP "kTXNRunIndexOutofBoundsErr" 4
.IX Item "kTXNRunIndexOutofBoundsErr"
.IP "kTXNNoMatchErr" 4
.IX Item "kTXNNoMatchErr"
.IP "kTXNAttributeTagInvalidForRunErr" 4
.IX Item "kTXNAttributeTagInvalidForRunErr"
.PD
.Vb 1
\& dataValue is set to this per invalid tag
.Ve
.IP "kTXNSomeOrAllTagsInvalidForRunErr" 4
.IX Item "kTXNSomeOrAllTagsInvalidForRunErr"
.PD 0
.IP "kTXNInvalidRunIndex" 4
.IX Item "kTXNInvalidRunIndex"
.IP "kTXNAlreadyInitializedErr" 4
.IX Item "kTXNAlreadyInitializedErr"
.IP "kTXNCannotTurnTSMOffWhenUsingUnicodeErr" 4
.IX Item "kTXNCannotTurnTSMOffWhenUsingUnicodeErr"
.IP "kTXNCopyNotAllowedInEchoModeErr" 4
.IX Item "kTXNCopyNotAllowedInEchoModeErr"
.IP "kTXNDataTypeNotAllowedErr" 4
.IX Item "kTXNDataTypeNotAllowedErr"
.IP "kTXNATSUIIsNotInstalledErr" 4
.IX Item "kTXNATSUIIsNotInstalledErr"
.IP "kTXNOutsideOfLineErr" 4
.IX Item "kTXNOutsideOfLineErr"
.IP "errKCNotAvailable" 4
.IX Item "errKCNotAvailable"
.IP "errKCReadOnly" 4
.IX Item "errKCReadOnly"
.IP "errKCAuthFailed" 4
.IX Item "errKCAuthFailed"
.IP "errKCNoSuchKeychain" 4
.IX Item "errKCNoSuchKeychain"
.IP "errKCInvalidKeychain" 4
.IX Item "errKCInvalidKeychain"
.IP "errKCDuplicateKeychain" 4
.IX Item "errKCDuplicateKeychain"
.IP "errKCDuplicateCallback" 4
.IX Item "errKCDuplicateCallback"
.IP "errKCInvalidCallback" 4
.IX Item "errKCInvalidCallback"
.IP "errKCDuplicateItem" 4
.IX Item "errKCDuplicateItem"
.IP "errKCItemNotFound" 4
.IX Item "errKCItemNotFound"
.IP "errKCBufferTooSmall" 4
.IX Item "errKCBufferTooSmall"
.IP "errKCDataTooLarge" 4
.IX Item "errKCDataTooLarge"
.IP "errKCNoSuchAttr" 4
.IX Item "errKCNoSuchAttr"
.IP "errKCInvalidItemRef" 4
.IX Item "errKCInvalidItemRef"
.IP "errKCInvalidSearchRef" 4
.IX Item "errKCInvalidSearchRef"
.IP "errKCNoSuchClass" 4
.IX Item "errKCNoSuchClass"
.IP "errKCNoDefaultKeychain" 4
.IX Item "errKCNoDefaultKeychain"
.IP "errKCInteractionNotAllowed" 4
.IX Item "errKCInteractionNotAllowed"
.IP "errKCReadOnlyAttr" 4
.IX Item "errKCReadOnlyAttr"
.IP "errKCWrongKCVersion" 4
.IX Item "errKCWrongKCVersion"
.IP "errKCKeySizeNotAllowed" 4
.IX Item "errKCKeySizeNotAllowed"
.IP "errKCNoStorageModule" 4
.IX Item "errKCNoStorageModule"
.IP "errKCNoCertificateModule" 4
.IX Item "errKCNoCertificateModule"
.IP "errKCNoPolicyModule" 4
.IX Item "errKCNoPolicyModule"
.IP "errKCInteractionRequired" 4
.IX Item "errKCInteractionRequired"
.IP "errKCDataNotAvailable" 4
.IX Item "errKCDataNotAvailable"
.IP "errKCDataNotModifiable" 4
.IX Item "errKCDataNotModifiable"
.IP "kUCOutputBufferTooSmall" 4
.IX Item "kUCOutputBufferTooSmall"
.PD
.Vb 1
\& Output buffer too small for Unicode string result
.Ve
.IP "kUCTSNoKeysAddedToObjectErr" 4
.IX Item "kUCTSNoKeysAddedToObjectErr"
.PD 0
.IP "kMPIterationEndErr" 4
.IX Item "kMPIterationEndErr"
.IP "kMPPrivilegedErr" 4
.IX Item "kMPPrivilegedErr"
.IP "kMPProcessCreatedErr" 4
.IX Item "kMPProcessCreatedErr"
.IP "kMPProcessTerminatedErr" 4
.IX Item "kMPProcessTerminatedErr"
.IP "kMPTaskCreatedErr" 4
.IX Item "kMPTaskCreatedErr"
.IP "kMPTaskBlockedErr" 4
.IX Item "kMPTaskBlockedErr"
.IP "kMPTaskStoppedErr" 4
.IX Item "kMPTaskStoppedErr"
.PD
.Vb 1
\& A convention used with MPThrowException.
.Ve
.IP "kMPBlueBlockingErr" 4
.IX Item "kMPBlueBlockingErr"
.PD 0
.IP "kMPDeletedErr" 4
.IX Item "kMPDeletedErr"
.IP "kMPTimeoutErr" 4
.IX Item "kMPTimeoutErr"
.IP "kMPTaskAbortedErr" 4
.IX Item "kMPTaskAbortedErr"
.IP "kMPInsufficientResourcesErr" 4
.IX Item "kMPInsufficientResourcesErr"
.IP "kCollateAttributesNotFoundErr" 4
.IX Item "kCollateAttributesNotFoundErr"
.IP "kCollateInvalidOptions" 4
.IX Item "kCollateInvalidOptions"
.IP "kCollateMissingUnicodeTableErr" 4
.IX Item "kCollateMissingUnicodeTableErr"
.IP "kCollateUnicodeConvertFailedErr" 4
.IX Item "kCollateUnicodeConvertFailedErr"
.IP "kCollatePatternNotFoundErr" 4
.IX Item "kCollatePatternNotFoundErr"
.IP "kCollateInvalidChar" 4
.IX Item "kCollateInvalidChar"
.IP "kCollateBufferTooSmall" 4
.IX Item "kCollateBufferTooSmall"
.IP "kFNSInvalidReferenceErr" 4
.IX Item "kFNSInvalidReferenceErr"
.PD
.Vb 1
\& ref. was NULL or otherwise bad
.Ve
.IP "kFNSBadReferenceVersionErr" 4
.IX Item "kFNSBadReferenceVersionErr"
.Vb 1
\& ref. version is out of known range
.Ve
.IP "kFNSInvalidProfileErr" 4
.IX Item "kFNSInvalidProfileErr"
.Vb 1
\& profile is NULL or otherwise bad
.Ve
.IP "kFNSBadProfileVersionErr" 4
.IX Item "kFNSBadProfileVersionErr"
.Vb 1
\& profile version is out of known range
.Ve
.IP "kFNSDuplicateReferenceErr" 4
.IX Item "kFNSDuplicateReferenceErr"
.Vb 1
\& the ref. being added is already in the profile
.Ve
.IP "kFNSMismatchErr" 4
.IX Item "kFNSMismatchErr"
.Vb 1
\& reference didn\*(Aqt match or wasn\*(Aqt found in profile
.Ve
.IP "kFNSInsufficientDataErr" 4
.IX Item "kFNSInsufficientDataErr"
.Vb 1
\& insufficient data for the operation
.Ve
.IP "kFNSBadFlattenedSizeErr" 4
.IX Item "kFNSBadFlattenedSizeErr"
.Vb 1
\& flattened size didn\*(Aqt match input or was too small
.Ve
.IP "kLocalesBufferTooSmallErr" 4
.IX Item "kLocalesBufferTooSmallErr"
.PD 0
.IP "kLocalesTableFormatErr" 4
.IX Item "kLocalesTableFormatErr"
.IP "kALMInternalErr" 4
.IX Item "kALMInternalErr"
.IP "kALMGroupNotFoundErr" 4
.IX Item "kALMGroupNotFoundErr"
.IP "kALMNoSuchModuleErr" 4
.IX Item "kALMNoSuchModuleErr"
.IP "kALMModuleCommunicationErr" 4
.IX Item "kALMModuleCommunicationErr"
.IP "kALMDuplicateModuleErr" 4
.IX Item "kALMDuplicateModuleErr"
.IP "kALMInstallationErr" 4
.IX Item "kALMInstallationErr"
.IP "kALMDeferSwitchErr" 4
.IX Item "kALMDeferSwitchErr"
.IP "kSSpInternalErr" 4
.IX Item "kSSpInternalErr"
.IP "kSSpVersionErr" 4
.IX Item "kSSpVersionErr"
.IP "kSSpCantInstallErr" 4
.IX Item "kSSpCantInstallErr"
.IP "kSSpParallelUpVectorErr" 4
.IX Item "kSSpParallelUpVectorErr"
.IP "kNSpInitializationFailedErr" 4
.IX Item "kNSpInitializationFailedErr"
.IP "kNSpAlreadyInitializedErr" 4
.IX Item "kNSpAlreadyInitializedErr"
.IP "kNSpTopologyNotSupportedErr" 4
.IX Item "kNSpTopologyNotSupportedErr"
.IP "kNSpPipeFullErr" 4
.IX Item "kNSpPipeFullErr"
.IP "kNSpHostFailedErr" 4
.IX Item "kNSpHostFailedErr"
.IP "kNSpProtocolNotAvailableErr" 4
.IX Item "kNSpProtocolNotAvailableErr"
.IP "kNSpInvalidGameRefErr" 4
.IX Item "kNSpInvalidGameRefErr"
.IP "kNSpInvalidParameterErr" 4
.IX Item "kNSpInvalidParameterErr"
.IP "kNSpOTNotPresentErr" 4
.IX Item "kNSpOTNotPresentErr"
.IP "kNSpOTVersionTooOldErr" 4
.IX Item "kNSpOTVersionTooOldErr"
.IP "kNSpMemAllocationErr" 4
.IX Item "kNSpMemAllocationErr"
.IP "kNSpAlreadyAdvertisingErr" 4
.IX Item "kNSpAlreadyAdvertisingErr"
.IP "kNSpNotAdvertisingErr" 4
.IX Item "kNSpNotAdvertisingErr"
.IP "kNSpInvalidAddressErr" 4
.IX Item "kNSpInvalidAddressErr"
.IP "kNSpFreeQExhaustedErr" 4
.IX Item "kNSpFreeQExhaustedErr"
.IP "kNSpRemovePlayerFailedErr" 4
.IX Item "kNSpRemovePlayerFailedErr"
.IP "kNSpAddressInUseErr" 4
.IX Item "kNSpAddressInUseErr"
.IP "kNSpFeatureNotImplementedErr" 4
.IX Item "kNSpFeatureNotImplementedErr"
.IP "kNSpNameRequiredErr" 4
.IX Item "kNSpNameRequiredErr"
.IP "kNSpInvalidPlayerIDErr" 4
.IX Item "kNSpInvalidPlayerIDErr"
.IP "kNSpInvalidGroupIDErr" 4
.IX Item "kNSpInvalidGroupIDErr"
.IP "kNSpNoPlayersErr" 4
.IX Item "kNSpNoPlayersErr"
.IP "kNSpNoGroupsErr" 4
.IX Item "kNSpNoGroupsErr"
.IP "kNSpNoHostVolunteersErr" 4
.IX Item "kNSpNoHostVolunteersErr"
.IP "kNSpCreateGroupFailedErr" 4
.IX Item "kNSpCreateGroupFailedErr"
.IP "kNSpAddPlayerFailedErr" 4
.IX Item "kNSpAddPlayerFailedErr"
.IP "kNSpInvalidDefinitionErr" 4
.IX Item "kNSpInvalidDefinitionErr"
.IP "kNSpInvalidProtocolRefErr" 4
.IX Item "kNSpInvalidProtocolRefErr"
.IP "kNSpInvalidProtocolListErr" 4
.IX Item "kNSpInvalidProtocolListErr"
.IP "kNSpTimeoutErr" 4
.IX Item "kNSpTimeoutErr"
.IP "kNSpGameTerminatedErr" 4
.IX Item "kNSpGameTerminatedErr"
.IP "kNSpConnectFailedErr" 4
.IX Item "kNSpConnectFailedErr"
.IP "kNSpSendFailedErr" 4
.IX Item "kNSpSendFailedErr"
.IP "kNSpMessageTooBigErr" 4
.IX Item "kNSpMessageTooBigErr"
.IP "kNSpCantBlockErr" 4
.IX Item "kNSpCantBlockErr"
.IP "kISpInternalErr" 4
.IX Item "kISpInternalErr"
.IP "kISpSystemListErr" 4
.IX Item "kISpSystemListErr"
.IP "kISpBufferToSmallErr" 4
.IX Item "kISpBufferToSmallErr"
.IP "kISpElementInListErr" 4
.IX Item "kISpElementInListErr"
.IP "kISpElementNotInListErr" 4
.IX Item "kISpElementNotInListErr"
.IP "kISpSystemInactiveErr" 4
.IX Item "kISpSystemInactiveErr"
.IP "kISpDeviceInactiveErr" 4
.IX Item "kISpDeviceInactiveErr"
.IP "kISpSystemActiveErr" 4
.IX Item "kISpSystemActiveErr"
.IP "kISpDeviceActiveErr" 4
.IX Item "kISpDeviceActiveErr"
.IP "kDSpNotInitializedErr" 4
.IX Item "kDSpNotInitializedErr"
.IP "kDSpSystemSWTooOldErr" 4
.IX Item "kDSpSystemSWTooOldErr"
.IP "kDSpInvalidContextErr" 4
.IX Item "kDSpInvalidContextErr"
.IP "kDSpInvalidAttributesErr" 4
.IX Item "kDSpInvalidAttributesErr"
.IP "kDSpContextAlreadyReservedErr" 4
.IX Item "kDSpContextAlreadyReservedErr"
.IP "kDSpContextNotReservedErr" 4
.IX Item "kDSpContextNotReservedErr"
.IP "kDSpContextNotFoundErr" 4
.IX Item "kDSpContextNotFoundErr"
.IP "kDSpFrameRateNotReadyErr" 4
.IX Item "kDSpFrameRateNotReadyErr"
.IP "kDSpConfirmSwitchWarning" 4
.IX Item "kDSpConfirmSwitchWarning"
.IP "kDSpInternalErr" 4
.IX Item "kDSpInternalErr"
.IP "kFBCvTwinExceptionErr" 4
.IX Item "kFBCvTwinExceptionErr"
.PD
.Vb 1
\& no telling what it was
.Ve
.IP "kFBCnoIndexesFound" 4
.IX Item "kFBCnoIndexesFound"
.PD 0
.IP "kFBCallocFailed" 4
.IX Item "kFBCallocFailed"
.PD
.Vb 1
\& probably low memory
.Ve
.IP "kFBCbadParam" 4
.IX Item "kFBCbadParam"
.PD 0
.IP "kFBCfileNotIndexed" 4
.IX Item "kFBCfileNotIndexed"
.IP "kFBCbadIndexFile" 4
.IX Item "kFBCbadIndexFile"
.PD
.Vb 1
\& bad FSSpec, or bad data in file
.Ve
.IP "kFBCcompactionFailed" 4
.IX Item "kFBCcompactionFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCvalidationFailed" 4
.IX Item "kFBCvalidationFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCindexingFailed" 4
.IX Item "kFBCindexingFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCcommitFailed" 4
.IX Item "kFBCcommitFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCdeletionFailed" 4
.IX Item "kFBCdeletionFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCmoveFailed" 4
.IX Item "kFBCmoveFailed"
.Vb 1
\& V\-Twin exception caught
.Ve
.IP "kFBCtokenizationFailed" 4
.IX Item "kFBCtokenizationFailed"
.Vb 1
\& couldn\*(Aqt read from document or query
.Ve
.IP "kFBCmergingFailed" 4
.IX Item "kFBCmergingFailed"
.Vb 1
\& couldn\*(Aqt merge index files
.Ve
.IP "kFBCindexCreationFailed" 4
.IX Item "kFBCindexCreationFailed"
.Vb 1
\& couldn\*(Aqt create index
.Ve
.IP "kFBCaccessorStoreFailed" 4
.IX Item "kFBCaccessorStoreFailed"
.PD 0
.IP "kFBCaddDocFailed" 4
.IX Item "kFBCaddDocFailed"
.IP "kFBCflushFailed" 4
.IX Item "kFBCflushFailed"
.IP "kFBCindexNotFound" 4
.IX Item "kFBCindexNotFound"
.IP "kFBCnoSearchSession" 4
.IX Item "kFBCnoSearchSession"
.IP "kFBCindexingCanceled" 4
.IX Item "kFBCindexingCanceled"
.IP "kFBCaccessCanceled" 4
.IX Item "kFBCaccessCanceled"
.IP "kFBCindexFileDestroyed" 4
.IX Item "kFBCindexFileDestroyed"
.IP "kFBCindexNotAvailable" 4
.IX Item "kFBCindexNotAvailable"
.IP "kFBCsearchFailed" 4
.IX Item "kFBCsearchFailed"
.IP "kFBCsomeFilesNotIndexed" 4
.IX Item "kFBCsomeFilesNotIndexed"
.IP "kFBCillegalSessionChange" 4
.IX Item "kFBCillegalSessionChange"
.PD
.Vb 2
\& tried to add/remove vols to a session
\&that has hits
.Ve
.IP "kFBCanalysisNotAvailable" 4
.IX Item "kFBCanalysisNotAvailable"
.PD 0
.IP "kFBCbadIndexFileVersion" 4
.IX Item "kFBCbadIndexFileVersion"
.IP "kFBCsummarizationCanceled" 4
.IX Item "kFBCsummarizationCanceled"
.IP "kFBCindexDiskIOFailed" 4
.IX Item "kFBCindexDiskIOFailed"
.IP "kFBCbadSearchSession" 4
.IX Item "kFBCbadSearchSession"
.IP "notAQTVRMovieErr" 4
.IX Item "notAQTVRMovieErr"
.IP "constraintReachedErr" 4
.IX Item "constraintReachedErr"
.IP "callNotSupportedByNodeErr" 4
.IX Item "callNotSupportedByNodeErr"
.IP "selectorNotSupportedByNodeErr" 4
.IX Item "selectorNotSupportedByNodeErr"
.IP "invalidNodeIDErr" 4
.IX Item "invalidNodeIDErr"
.IP "invalidViewStateErr" 4
.IX Item "invalidViewStateErr"
.IP "timeNotInViewErr" 4
.IX Item "timeNotInViewErr"
.IP "propertyNotSupportedByNodeErr" 4
.IX Item "propertyNotSupportedByNodeErr"
.IP "settingNotSupportedByNodeErr" 4
.IX Item "settingNotSupportedByNodeErr"
.IP "limitReachedErr" 4
.IX Item "limitReachedErr"
.IP "invalidNodeFormatErr" 4
.IX Item "invalidNodeFormatErr"
.IP "invalidHotSpotIDErr" 4
.IX Item "invalidHotSpotIDErr"
.IP "noMemoryNodeFailedInitialize" 4
.IX Item "noMemoryNodeFailedInitialize"
.IP "streamingNodeNotReadyErr" 4
.IX Item "streamingNodeNotReadyErr"
.IP "qtvrLibraryLoadErr" 4
.IX Item "qtvrLibraryLoadErr"
.IP "themeInvalidBrushErr" 4
.IX Item "themeInvalidBrushErr"
.PD
.Vb 1
\& pattern index invalid
.Ve
.IP "themeProcessRegisteredErr" 4
.IX Item "themeProcessRegisteredErr"
.PD 0
.IP "themeProcessNotRegisteredErr" 4
.IX Item "themeProcessNotRegisteredErr"
.IP "themeBadTextColorErr" 4
.IX Item "themeBadTextColorErr"
.IP "themeHasNoAccentsErr" 4
.IX Item "themeHasNoAccentsErr"
.IP "themeBadCursorIndexErr" 4
.IX Item "themeBadCursorIndexErr"
.IP "themeScriptFontNotFoundErr" 4
.IX Item "themeScriptFontNotFoundErr"
.PD
.Vb 1
\& theme font requested for uninstalled script system
.Ve
.SH "Control Manager Error Codes"
.IX Header "Control Manager Error Codes"
.IP "errMessageNotSupported" 4
.IX Item "errMessageNotSupported"
.PD 0
.IP "errDataNotSupported" 4
.IX Item "errDataNotSupported"
.IP "errControlDoesntSupportFocus" 4
.IX Item "errControlDoesntSupportFocus"
.IP "errUnknownControl" 4
.IX Item "errUnknownControl"
.IP "errCouldntSetFocus" 4
.IX Item "errCouldntSetFocus"
.IP "errNoRootControl" 4
.IX Item "errNoRootControl"
.IP "errRootAlreadyExists" 4
.IX Item "errRootAlreadyExists"
.IP "errInvalidPartCode" 4
.IX Item "errInvalidPartCode"
.IP "errControlsAlreadyExist" 4
.IX Item "errControlsAlreadyExist"
.IP "errControlIsNotEmbedder" 4
.IX Item "errControlIsNotEmbedder"
.IP "errDataSizeMismatch" 4
.IX Item "errDataSizeMismatch"
.IP "errControlHiddenOrDisabled" 4
.IX Item "errControlHiddenOrDisabled"
.IP "errCantEmbedIntoSelf" 4
.IX Item "errCantEmbedIntoSelf"
.IP "errCantEmbedRoot" 4
.IX Item "errCantEmbedRoot"
.IP "errItemNotControl" 4
.IX Item "errItemNotControl"
.IP "controlInvalidDataVersionErr" 4
.IX Item "controlInvalidDataVersionErr"
.IP "controlPropertyInvalid" 4
.IX Item "controlPropertyInvalid"
.IP "controlPropertyNotFoundErr" 4
.IX Item "controlPropertyNotFoundErr"
.IP "kURLInvalidURLReferenceError" 4
.IX Item "kURLInvalidURLReferenceError"
.IP "kURLProgressAlreadyDisplayedError" 4
.IX Item "kURLProgressAlreadyDisplayedError"
.IP "kURLDestinationExistsError" 4
.IX Item "kURLDestinationExistsError"
.IP "kURLInvalidURLError" 4
.IX Item "kURLInvalidURLError"
.IP "kURLUnsupportedSchemeError" 4
.IX Item "kURLUnsupportedSchemeError"
.IP "kURLServerBusyError" 4
.IX Item "kURLServerBusyError"
.IP "kURLAuthenticationError" 4
.IX Item "kURLAuthenticationError"
.IP "kURLPropertyNotYetKnownError" 4
.IX Item "kURLPropertyNotYetKnownError"
.IP "kURLUnknownPropertyError" 4
.IX Item "kURLUnknownPropertyError"
.IP "kURLPropertyBufferTooSmallError" 4
.IX Item "kURLPropertyBufferTooSmallError"
.IP "kURLUnsettablePropertyError" 4
.IX Item "kURLUnsettablePropertyError"
.IP "kURLInvalidCallError" 4
.IX Item "kURLInvalidCallError"
.IP "kURLFileEmptyError" 4
.IX Item "kURLFileEmptyError"
.IP "kURLExtensionFailureError" 4
.IX Item "kURLExtensionFailureError"
.IP "kURLInvalidConfigurationError" 4
.IX Item "kURLInvalidConfigurationError"
.IP "kURLAccessNotAvailableError" 4
.IX Item "kURLAccessNotAvailableError"
.IP "badComponentInstance" 4
.IX Item "badComponentInstance"
.PD
.Vb 1
\& when cast to an OSErr this is \-32767
.Ve
.IP "dsBusError" 4
.IX Item "dsBusError"
.Vb 1
\& bus error
.Ve
.IP "dsAddressErr" 4
.IX Item "dsAddressErr"
.Vb 1
\& address error
.Ve
.IP "dsIllInstErr" 4
.IX Item "dsIllInstErr"
.Vb 1
\& illegal instruction error
.Ve
.IP "dsZeroDivErr" 4
.IX Item "dsZeroDivErr"
.Vb 1
\& zero divide error
.Ve
.IP "dsChkErr" 4
.IX Item "dsChkErr"
.Vb 1
\& check trap error
.Ve
.IP "dsOvflowErr" 4
.IX Item "dsOvflowErr"
.Vb 1
\& overflow trap error
.Ve
.IP "dsPrivErr" 4
.IX Item "dsPrivErr"
.Vb 1
\& privilege violation error
.Ve
.IP "dsTraceErr" 4
.IX Item "dsTraceErr"
.Vb 1
\& trace mode error
.Ve
.IP "dsLineAErr" 4
.IX Item "dsLineAErr"
.Vb 1
\& line 1010 trap error
.Ve
.IP "dsLineFErr" 4
.IX Item "dsLineFErr"
.Vb 1
\& line 1111 trap error
.Ve
.IP "dsMiscErr" 4
.IX Item "dsMiscErr"
.Vb 1
\& miscellaneous hardware exception error
.Ve
.IP "dsCoreErr" 4
.IX Item "dsCoreErr"
.Vb 1
\& unimplemented core routine error
.Ve
.IP "dsIrqErr" 4
.IX Item "dsIrqErr"
.Vb 1
\& uninstalled interrupt error
.Ve
.IP "dsIOCoreErr" 4
.IX Item "dsIOCoreErr"
.Vb 1
\& IO Core Error
.Ve
.IP "dsLoadErr" 4
.IX Item "dsLoadErr"
.Vb 1
\& Segment Loader Error
.Ve
.IP "dsFPErr" 4
.IX Item "dsFPErr"
.Vb 1
\& Floating point error
.Ve
.IP "dsNoPackErr" 4
.IX Item "dsNoPackErr"
.Vb 1
\& package 0 not present
.Ve
.IP "dsNoPk1" 4
.IX Item "dsNoPk1"
.Vb 1
\& package 1 not present
.Ve
.IP "dsNoPk3" 4
.IX Item "dsNoPk3"
.Vb 1
\& package 3 not present
.Ve
.IP "dsNoPk4" 4
.IX Item "dsNoPk4"
.Vb 1
\& package 4 not present
.Ve
.IP "dsNoPk5" 4
.IX Item "dsNoPk5"
.Vb 1
\& package 5 not present
.Ve
.IP "dsNoPk6" 4
.IX Item "dsNoPk6"
.Vb 1
\& package 6 not present
.Ve
.IP "dsNoPk7" 4
.IX Item "dsNoPk7"
.Vb 1
\& package 7 not present
.Ve
.IP "dsMemFullErr" 4
.IX Item "dsMemFullErr"
.Vb 1
\& out of memory!
.Ve
.IP "dsBadLaunch" 4
.IX Item "dsBadLaunch"
.Vb 1
\& can\*(Aqt launch file
.Ve
.IP "dsFSErr" 4
.IX Item "dsFSErr"
.Vb 1
\& file system map has been trashed
.Ve
.IP "dsStknHeap" 4
.IX Item "dsStknHeap"
.Vb 1
\& stack has moved into application heap
.Ve
.IP "negZcbFreeErr" 4
.IX Item "negZcbFreeErr"
.Vb 1
\& ZcbFree has gone negative
.Ve
.IP "dsFinderErr" 4
.IX Item "dsFinderErr"
.Vb 1
\& can\*(Aqt load the Finder error
.Ve
.IP "dsBadSlotInt" 4
.IX Item "dsBadSlotInt"
.Vb 1
\& unserviceable slot interrupt
.Ve
.IP "dsBadSANEOpcode" 4
.IX Item "dsBadSANEOpcode"
.Vb 1
\& bad opcode given to SANE Pack4
.Ve
.IP "dsBadPatchHeader" 4
.IX Item "dsBadPatchHeader"
.Vb 1
\& SetTrapAddress saw the \*(Aqcome\-from\*(Aq header
.Ve
.IP "menuPrgErr" 4
.IX Item "menuPrgErr"
.Vb 1
\& happens when a menu is purged
.Ve
.IP "dsMBarNFnd" 4
.IX Item "dsMBarNFnd"
.Vb 1
\& Menu Manager Errors
.Ve
.IP "dsHMenuFindErr" 4
.IX Item "dsHMenuFindErr"
.Vb 1
\& Menu Manager Errors
.Ve
.IP "dsWDEFNotFound" 4
.IX Item "dsWDEFNotFound"
.Vb 1
\& could not load WDEF
.Ve
.IP "dsCDEFNotFound" 4
.IX Item "dsCDEFNotFound"
.Vb 1
\& could not load CDEF
.Ve
.IP "dsNoFPU" 4
.IX Item "dsNoFPU"
.Vb 1
\& an FPU instruction was executed and the machine doesn\*(Aqt have one
.Ve
.IP "dsNoPatch" 4
.IX Item "dsNoPatch"
.Vb 1
\& Can\*(Aqt patch for particular Model Mac
.Ve
.IP "dsBadPatch" 4
.IX Item "dsBadPatch"
.Vb 1
\& Can\*(Aqt load patch resource
.Ve
.IP "dsParityErr" 4
.IX Item "dsParityErr"
.Vb 1
\& memory parity error
.Ve
.IP "dsOldSystem" 4
.IX Item "dsOldSystem"
.Vb 1
\& System is too old for this ROM
.Ve
.IP "ds32BitMode" 4
.IX Item "ds32BitMode"
.Vb 1
\& booting in 32\-bit on a 24\-bit sys
.Ve
.IP "dsNeedToWriteBootBlocks" 4
.IX Item "dsNeedToWriteBootBlocks"
.Vb 1
\& need to write new boot blocks
.Ve
.IP "dsNotEnoughRAMToBoot" 4
.IX Item "dsNotEnoughRAMToBoot"
.Vb 1
\& must have at least 1.5MB of RAM to boot 7.0
.Ve
.IP "dsBufPtrTooLow" 4
.IX Item "dsBufPtrTooLow"
.Vb 1
\& bufPtr moved too far during boot
.Ve
.IP "dsVMDeferredFuncTableFull" 4
.IX Item "dsVMDeferredFuncTableFull"
.Vb 1
\& VM\*(Aqs DeferUserFn table is full
.Ve
.IP "dsVMBadBackingStore" 4
.IX Item "dsVMBadBackingStore"
.Vb 1
\& Error occurred while reading or writing the VM backing\-store file
.Ve
.IP "dsCantHoldSystemHeap" 4
.IX Item "dsCantHoldSystemHeap"
.Vb 1
\& Unable to hold the system heap during boot
.Ve
.IP "dsSystemRequiresPowerPC" 4
.IX Item "dsSystemRequiresPowerPC"
.Vb 1
\& Startup disk requires PowerPC
.Ve
.IP "dsGibblyMovedToDisabledFolder" 4
.IX Item "dsGibblyMovedToDisabledFolder"
.Vb 1
\& For debug builds only, signals that active gibbly was disabled during boot.
.Ve
.IP "dsUnBootableSystem" 4
.IX Item "dsUnBootableSystem"
.Vb 1
\& Active system file will not boot on this system because it was designed only to boot from a CD.
.Ve
.IP "dsMustUseFCBAccessors" 4
.IX Item "dsMustUseFCBAccessors"
.Vb 1
\& FCBSPtr and FSFCBLen are invalid \- must use FSM FCB accessor functions
.Ve
.IP "dsMacOSROMVersionTooOld" 4
.IX Item "dsMacOSROMVersionTooOld"
.Vb 1
\& The version of the "Mac OS ROM" file is too old to be used with the installed version of system software
.Ve
.IP "dsLostConnectionToNetworkDisk" 4
.IX Item "dsLostConnectionToNetworkDisk"
.Vb 1
\& Lost communication with Netboot server
.Ve
.IP "dsRAMDiskTooBig" 4
.IX Item "dsRAMDiskTooBig"
.Vb 1
\& The RAM disk is too big to boot safely; will be turned off
.Ve
.IP "dsWriteToSupervisorStackGuardPage" 4
.IX Item "dsWriteToSupervisorStackGuardPage"
.Vb 1
\& the supervisor stack overflowed into its guard page
.Ve
.IP "dsReinsert" 4
.IX Item "dsReinsert"
.Vb 1
\& request user to reinsert off\-line volume
.Ve
.IP "shutDownAlert" 4
.IX Item "shutDownAlert"
.Vb 1
\& handled like a shutdown error
.Ve
.IP "dsShutDownOrRestart" 4
.IX Item "dsShutDownOrRestart"
.Vb 1
\& user choice between ShutDown and Restart
.Ve
.IP "dsSwitchOffOrRestart" 4
.IX Item "dsSwitchOffOrRestart"
.Vb 1
\& user choice between switching off and Restart
.Ve
.IP "dsForcedQuit" 4
.IX Item "dsForcedQuit"
.Vb 1
\& allow the user to ExitToShell, return if Cancel
.Ve
.IP "dsRemoveDisk" 4
.IX Item "dsRemoveDisk"
.Vb 1
\& request user to remove disk from manual eject drive
.Ve
.IP "dsDirtyDisk" 4
.IX Item "dsDirtyDisk"
.Vb 1
\& request user to return a manually\-ejected dirty disk
.Ve
.IP "dsShutDownOrResume" 4
.IX Item "dsShutDownOrResume"
.Vb 1
\& allow user to return to Finder or ShutDown
.Ve
.IP "dsSCSIWarn" 4
.IX Item "dsSCSIWarn"
.Vb 1
\& Portable SCSI adapter warning.
.Ve
.IP "dsMBSysError" 4
.IX Item "dsMBSysError"
.Vb 1
\& Media Bay replace warning.
.Ve
.IP "dsMBFlpySysError" 4
.IX Item "dsMBFlpySysError"
.Vb 1
\& Media Bay, floppy replace warning.
.Ve
.IP "dsMBATASysError" 4
.IX Item "dsMBATASysError"
.Vb 1
\& Media Bay, ATA replace warning.
.Ve
.IP "dsMBATAPISysError" 4
.IX Item "dsMBATAPISysError"
.Vb 1
\& Media Bay, ATAPI replace warning...
.Ve
.IP "dsMBExternFlpySysError" 4
.IX Item "dsMBExternFlpySysError"
.Vb 1
\& Media Bay, external floppy drive reconnect warning
.Ve
.IP "dsNoExtsMacsBug" 4
.IX Item "dsNoExtsMacsBug"
.Vb 1
\& not a SysErr, just a placeholder
.Ve
.IP "dsNoExtsDisassembler" 4
.IX Item "dsNoExtsDisassembler"
.Vb 1
\& not a SysErr, just a placeholder
.Ve
.IP "dsMacsBugInstalled" 4
.IX Item "dsMacsBugInstalled"
.Vb 1
\& say \*(AqMacsBug Installed\*(Aq
.Ve
.IP "dsDisassemblerInstalled" 4
.IX Item "dsDisassemblerInstalled"
.Vb 1
\& say \*(AqDisassembler Installed\*(Aq
.Ve
.IP "dsExtensionsDisabled" 4
.IX Item "dsExtensionsDisabled"
.Vb 1
\& say \*(AqExtensions Disabled\*(Aq
.Ve
.IP "dsGreeting" 4
.IX Item "dsGreeting"
.Vb 1
\& welcome to Macintosh greeting
.Ve
.IP "dsSysErr" 4
.IX Item "dsSysErr"
.Vb 2
\& general system error
\&old names here for compatibility\*(Aqs sake
.Ve
.IP "CDEFNFnd" 4
.IX Item "CDEFNFnd"
.PD 0
.IP "dsNotThe1" 4
.IX Item "dsNotThe1"
.PD
.Vb 1
\& not the disk I wanted
.Ve
.IP "dsBadStartupDisk" 4
.IX Item "dsBadStartupDisk"
.Vb 1
\& unable to mount boot volume (sad Mac only)
.Ve
.IP "dsSystemFileErr" 4
.IX Item "dsSystemFileErr"
.Vb 1
\& can\*(Aqt find System file to open (sad Mac only)
.Ve
.IP "dsHD20Installed" 4
.IX Item "dsHD20Installed"
.Vb 1
\& say \*(AqHD20 Startup\*(Aq
.Ve
.IP "mBarNFnd" 4
.IX Item "mBarNFnd"
.Vb 1
\& system error code for MBDF not found
.Ve
.IP "fsDSIntErr" 4
.IX Item "fsDSIntErr"
.Vb 1
\& non\-hardware Internal file system error
.Ve
.IP "hMenuFindErr" 4
.IX Item "hMenuFindErr"
.Vb 1
\& could not find HMenu\*(Aqs parent in MenuKey (wrong error code \- obsolete)
.Ve
.IP "userBreak" 4
.IX Item "userBreak"
.Vb 1
\& user debugger break
.Ve
.IP "strUserBreak" 4
.IX Item "strUserBreak"
.Vb 1
\& user debugger break; display string on stack
.Ve
.SH "DS Errors which are specific to the new runtime model introduced with PowerPC"
.IX Header "DS Errors which are specific to the new runtime model introduced with PowerPC"
.IP "dsBadLibrary" 4
.IX Item "dsBadLibrary"
.Vb 1
\& Bad shared library
.Ve
.SH "TO DO"
.IX Header "TO DO"
* make some sensible export tags
.SH "SOURCE AVAILABILITY"
.IX Header "SOURCE AVAILABILITY"
This source is in Github:
.PP
.Vb 1
\&        https://github.com/briandfoy/Mac\-Errors
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
brian d foy, \f(CW\*(C`<bdfoy@cpan.org>\*(C'\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2002\-2014 brian d foy.  All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
                                                                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Files.3pm                               0100644 0001750 0001750 00000105167 12566241347 023164  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Files 3"
.TH Files 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Files \- Macintosh Toolbox Interface to the File and Alias Manager
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Constants"
.IX Subsection "Constants"
Constants for file access permissions.  Use these constants to request a
type of access to a file or fork, or to deny a type of access to a file
or fork to other paths that may request access.
.PP
Note that it is possible, on Mac \s-1OS 8\s0 and 9, to open a file residing on
read-only media with write access. On Mac \s-1OS X,\s0 however, you cannot open
a file with write access on read-only media; the attempt to open the
file fails with a wrPermErr error.
.IP "fsCurPerm" 4
.IX Item "fsCurPerm"
Requests whatever permissions are currently allowed. If write access is unavailable (because the file is locked or the file is already open with write permission), then read permission is granted. Otherwise read/write permission is granted.
.IP "fsRdPerm" 4
.IX Item "fsRdPerm"
Requests permission to read the file.
.IP "fsWrPerm" 4
.IX Item "fsWrPerm"
Requests permission to write to the file. If write permission is granted, no other access paths are granted write permission. Note, however, that the File Manager does not support write-only access to a file. Thus, fsWrPerm is synonymous with fsRdWrPerm.
.IP "fsRdWrPerm" 4
.IX Item "fsRdWrPerm"
Requests exclusive read and write permission. If exclusive read/write permission is granted, no other users are granted permission to write to the file. Other users may, however, be granted permission to read the file.
.IP "fsRdWrShPerm" 4
.IX Item "fsRdWrShPerm"
Requests shared read and write permission. Shared read/write permission allows mutliple access paths for reading and writing. This is safe only if there is some way of locking portions of the file before writing to them. Use the functions PBLockRangeSync and PBUnlockRangeSync to lock and unlock ranges of bytes within a file. On Mac \s-1OS 8\s0 and 9, these functions are supported only on remotely mounted volumes, or on local volumes that are shareable on the network. You should check that range locking is available before requesting shared read/ write permission. On Mac \s-1OS X,\s0 range locking is available on all volumes.
.IP "fsRdDenyPerm" 4
.IX Item "fsRdDenyPerm"
Requests that any other paths be prevented from having read access. A path cannot be opened if you request read permission (with the fsRdPerm constant) but some other path has requested deny-read access. Similarly, the path cannot be opened if you request deny-read permission, but some other path already has read access. This constant is used with the PBHOpenDenySync and PBHOpenRFDenySync functions.
.IP "fsWrDenyPerm" 4
.IX Item "fsWrDenyPerm"
Requests that any other paths be prevented from having write access. A path cannot be opened if you request write permission (with the fsWrPerm constant) but some other path has requested deny-write access. Similarly, the path cannot be opened if you request deny-write permission, but some other path already has write access. This constant is used with the PBHOpenDenySync and PBHOpenRFDenySync functions.
.PP
ioFlAttrib bits, returned by FSpGetCatInfo.
.IP "kioFlAttribLocked" 4
.IX Item "kioFlAttribLocked"
Set if file or directory is locked
.IP "kioFlAttribResOpen" 4
.IX Item "kioFlAttribResOpen"
Set if resource fork is open
.IP "kioFlAttribDataOpen" 4
.IX Item "kioFlAttribDataOpen"
Set if data fork is open
.IP "kioFlAttribDir" 4
.IX Item "kioFlAttribDir"
Set if this is a directory
.IP "kioFlAttribCopyProt" 4
.IX Item "kioFlAttribCopyProt"
Set if AppleShare server \*(L"copy-protects\*(R" the file
.IP "kioFlAttribFileOpen" 4
.IX Item "kioFlAttribFileOpen"
Set if file (either fork) is open
.IP "kioFlAttribInShared" 4
.IX Item "kioFlAttribInShared"
Set if the directory is within a shared area of the directory hierarchy
.IP "kioFlAttribMounted" 4
.IX Item "kioFlAttribMounted"
Set if the directory is a share point that is mounted by some user
.IP "kioFlAttribSharePoint" 4
.IX Item "kioFlAttribSharePoint"
Set if the directory is a share point
.PP
Finder flags
.IP "kIsOnDesk" 4
.IX Item "kIsOnDesk"
Files and folders (System 6)
.IP "kColor" 4
.IX Item "kColor"
Files and folders; bit 0x0020 was kRequireSwitchLaunch, but is now reserved for future use
.IP "kIsShared" 4
.IX Item "kIsShared"
Files only (Applications only); if clear, the application needs to write to its resource fork, and therefore cannot be shared on a server
.IP "kHasNoINITs" 4
.IX Item "kHasNoINITs"
Files only (Extensions/Control Panels only); this file contains no \s-1INIT\s0 resource
.IP "kHasBeenInited" 4
.IX Item "kHasBeenInited"
Files only; clear if the file contains desktop database; resources ('\s-1BNDL\s0', '\s-1FREF\s0', 'open', 'kind'...) that have not been added yet. Set only by the Finder; reserved for folders \- make sure this bit is cleared for folders; bit 0x0200 was the letter bit for \s-1AOCE,\s0 but is now reserved for future use
.IP "kHasCustomIcon" 4
.IX Item "kHasCustomIcon"
Files and folders
.IP "kIsStationery" 4
.IX Item "kIsStationery"
Files only
.IP "kNameLocked" 4
.IX Item "kNameLocked"
Files and folders
.IP "kHasBundle" 4
.IX Item "kHasBundle"
Files only
.IP "kIsInvisible" 4
.IX Item "kIsInvisible"
Files and folders
.IP "kIsAlias" 4
.IX Item "kIsAlias"
Files only
.PP
AppleTalk/GetAliasInfo Constants
.IP "asiZoneName" 4
.IX Item "asiZoneName"
Return AppleTalk zone name from GetAliasInfo.
.IP "asiServerName" 4
.IX Item "asiServerName"
Return AppleTalk server name from GetAliasInfo.
.IP "asiVolumeName" 4
.IX Item "asiVolumeName"
Return volume name from GetAliasInfo.
.IP "asiAliasName" 4
.IX Item "asiAliasName"
Return last component of target file name from GetAliasInfo.
.IP "asiParentName" 4
.IX Item "asiParentName"
Return name of enclosing folder from GetAliasInfo. This index value is 1.  Higher indices will return folder names higher up the hierarchy.
.PP
Folder type constants.  Specify a type of folder on a particular volume.
Use in vRefNum parameter of \fIFindFolder()\fR.
.IP "kOnSystemDisk" 4
.IX Item "kOnSystemDisk"
previously was 0x8000 but that is an unsigned value whereas vRefNum is signed
.IP "kOnAppropriateDisk" 4
.IX Item "kOnAppropriateDisk"
Generally, the same as kOnSystemDisk, but it's clearer that this isn't always the 'boot' disk.
.PP
Folder Domains \- Carbon only.  The constants above can continue to be used,
but the folder/volume returned will be from one of the domains below.
.IP "kSystemDomain" 4
.IX Item "kSystemDomain"
Read-only system hierarchy.
.IP "kLocalDomain" 4
.IX Item "kLocalDomain"
All users of a single machine have access to these resources.
.IP "kNetworkDomain" 4
.IX Item "kNetworkDomain"
All users configured to use a common network server has access to these resources.
.IP "kUserDomain" 4
.IX Item "kUserDomain"
Read/write. Resources that are private to the user.
.IP "kClassicDomain" 4
.IX Item "kClassicDomain"
Domain referring to the currently configured Classic System Folder
.IP "kLastDomainConstant" 4
.IX Item "kLastDomainConstant"
The \s-1ID\s0 of the last domain in the above list, used by the Folder Manager to determine if a given parameter should be treated as a domain or a volume...
.PP
Constants for createFolder parameter of \fIFindFolder()\fR.
.IP "kCreateFolder" 4
.IX Item "kCreateFolder"
.PD 0
.IP "kDontCreateFolder" 4
.IX Item "kDontCreateFolder"
.PD
.PP
Folder Type Constants for \fIFindFolder()\fR.
.IP "kSystemFolderType" 4
.IX Item "kSystemFolderType"
the system folder
.IP "kDesktopFolderType" 4
.IX Item "kDesktopFolderType"
the desktop folder; objects in this folder show on the desk top.
.IP "kSystemDesktopFolderType" 4
.IX Item "kSystemDesktopFolderType"
the desktop folder at the root of the hard drive, never the redirected user desktop folder
.IP "kTrashFolderType" 4
.IX Item "kTrashFolderType"
the trash folder; objects in this folder show up in the trash
.IP "kSystemTrashFolderType" 4
.IX Item "kSystemTrashFolderType"
the trash folder at the root of the drive, never the redirected user trash folder
.IP "kWhereToEmptyTrashFolderType" 4
.IX Item "kWhereToEmptyTrashFolderType"
the \*(L"empty trash\*(R" folder; Finder starts empty from here down
.IP "kPrintMonitorDocsFolderType" 4
.IX Item "kPrintMonitorDocsFolderType"
Print Monitor documents
.IP "kStartupFolderType" 4
.IX Item "kStartupFolderType"
Finder objects (applications, documents, DAs, aliases, to...) to open at startup go here
.IP "kShutdownFolderType" 4
.IX Item "kShutdownFolderType"
Finder objects (applications, documents, DAs, aliases, to...) to open at shutdown go here
.IP "kAppleMenuFolderType" 4
.IX Item "kAppleMenuFolderType"
Finder objects to put into the Apple menu go here
.IP "kControlPanelFolderType" 4
.IX Item "kControlPanelFolderType"
Control Panels go here (may contain INITs)
.IP "kSystemControlPanelFolderType" 4
.IX Item "kSystemControlPanelFolderType"
System control panels folder \- never the redirected one, always \*(L"Control Panels\*(R" inside the System Folder
.IP "kExtensionFolderType" 4
.IX Item "kExtensionFolderType"
System extensions go here
.IP "kFontsFolderType" 4
.IX Item "kFontsFolderType"
Fonts go here
.IP "kPreferencesFolderType" 4
.IX Item "kPreferencesFolderType"
preferences for applications go here
.IP "kSystemPreferencesFolderType" 4
.IX Item "kSystemPreferencesFolderType"
System-type Preferences go here \- this is always the system's preferences folder, never a logged in user's
.IP "kTemporaryFolderType" 4
.IX Item "kTemporaryFolderType"
temporary files go here (deleted periodically, but don't rely on it.)
.IP "kExtensionDisabledFolderType" 4
.IX Item "kExtensionDisabledFolderType"
.PD 0
.IP "kControlPanelDisabledFolderType" 4
.IX Item "kControlPanelDisabledFolderType"
.IP "kSystemExtensionDisabledFolderType" 4
.IX Item "kSystemExtensionDisabledFolderType"
.IP "kStartupItemsDisabledFolderType" 4
.IX Item "kStartupItemsDisabledFolderType"
.IP "kShutdownItemsDisabledFolderType" 4
.IX Item "kShutdownItemsDisabledFolderType"
.IP "kApplicationsFolderType" 4
.IX Item "kApplicationsFolderType"
.IP "kDocumentsFolderType" 4
.IX Item "kDocumentsFolderType"
.PD
.PP
New Constants
.IP "kVolumeRootFolderType" 4
.IX Item "kVolumeRootFolderType"
root folder of a volume
.IP "kChewableItemsFolderType" 4
.IX Item "kChewableItemsFolderType"
items deleted at boot
.IP "kApplicationSupportFolderType" 4
.IX Item "kApplicationSupportFolderType"
third-party items and folders
.IP "kTextEncodingsFolderType" 4
.IX Item "kTextEncodingsFolderType"
encoding tables
.IP "kStationeryFolderType" 4
.IX Item "kStationeryFolderType"
stationery
.IP "kOpenDocFolderType" 4
.IX Item "kOpenDocFolderType"
OpenDoc root
.IP "kOpenDocShellPlugInsFolderType" 4
.IX Item "kOpenDocShellPlugInsFolderType"
OpenDoc Shell Plug-Ins in OpenDoc folder
.IP "kEditorsFolderType" 4
.IX Item "kEditorsFolderType"
OpenDoc editors in Mac \s-1OS\s0 Folder
.IP "kOpenDocEditorsFolderType" 4
.IX Item "kOpenDocEditorsFolderType"
OpenDoc subfolder of Editors folder
.IP "kOpenDocLibrariesFolderType" 4
.IX Item "kOpenDocLibrariesFolderType"
OpenDoc libraries folder
.IP "kGenEditorsFolderType" 4
.IX Item "kGenEditorsFolderType"
\&\s-1CKH\s0 general editors folder at root level of Sys folder
.IP "kHelpFolderType" 4
.IX Item "kHelpFolderType"
\&\s-1CKH\s0 help folder currently at root of system folder
.IP "kInternetPlugInFolderType" 4
.IX Item "kInternetPlugInFolderType"
\&\s-1CKH\s0 internet plug ins for browsers and stuff
.IP "kModemScriptsFolderType" 4
.IX Item "kModemScriptsFolderType"
\&\s-1CKH\s0 modem scripts, get 'em \s-1OUT\s0 of the Extensions folder
.IP "kPrinterDescriptionFolderType" 4
.IX Item "kPrinterDescriptionFolderType"
\&\s-1CKH\s0 new folder at root of System folder for printer descs.
.IP "kPrinterDriverFolderType" 4
.IX Item "kPrinterDriverFolderType"
\&\s-1CKH\s0 new folder at root of System folder for printer drivers
.IP "kScriptingAdditionsFolderType" 4
.IX Item "kScriptingAdditionsFolderType"
\&\s-1CKH\s0 at root of system folder
.IP "kSharedLibrariesFolderType" 4
.IX Item "kSharedLibrariesFolderType"
\&\s-1CKH\s0 for general shared libs.
.IP "kVoicesFolderType" 4
.IX Item "kVoicesFolderType"
\&\s-1CKH\s0 macintalk can live here
.IP "kControlStripModulesFolderType" 4
.IX Item "kControlStripModulesFolderType"
\&\s-1CKH\s0 for control strip modules
.IP "kAssistantsFolderType" 4
.IX Item "kAssistantsFolderType"
\&\s-1SJF\s0 for Assistants (Mac \s-1OS\s0 Setup Assistant, etc)
.IP "kUtilitiesFolderType" 4
.IX Item "kUtilitiesFolderType"
\&\s-1SJF\s0 for Utilities folder
.IP "kAppleExtrasFolderType" 4
.IX Item "kAppleExtrasFolderType"
\&\s-1SJF\s0 for Apple Extras folder
.IP "kContextualMenuItemsFolderType" 4
.IX Item "kContextualMenuItemsFolderType"
\&\s-1SJF\s0 for Contextual Menu items
.IP "kMacOSReadMesFolderType" 4
.IX Item "kMacOSReadMesFolderType"
\&\s-1SJF\s0 for Mac \s-1OS\s0 ReadMes folder
.IP "kALMModulesFolderType" 4
.IX Item "kALMModulesFolderType"
\&\s-1EAS\s0 for Location Manager Module files except type 'thng' (within kExtensionFolderType)
.IP "kALMPreferencesFolderType" 4
.IX Item "kALMPreferencesFolderType"
\&\s-1EAS\s0 for Location Manager Preferences (within kPreferencesFolderType; contains kALMLocationsFolderType)
.IP "kALMLocationsFolderType" 4
.IX Item "kALMLocationsFolderType"
\&\s-1EAS\s0 for Location Manager Locations (within kALMPreferencesFolderType)
.IP "kColorSyncProfilesFolderType" 4
.IX Item "kColorSyncProfilesFolderType"
for ColorSync Profiles
.IP "kThemesFolderType" 4
.IX Item "kThemesFolderType"
for Theme data files
.IP "kFavoritesFolderType" 4
.IX Item "kFavoritesFolderType"
Favorties folder for Navigation Services
.IP "kInternetFolderType" 4
.IX Item "kInternetFolderType"
Internet folder (root level of startup volume)
.IP "kAppearanceFolderType" 4
.IX Item "kAppearanceFolderType"
Appearance folder (root of system folder)
.IP "kSoundSetsFolderType" 4
.IX Item "kSoundSetsFolderType"
Sound Sets folder (in Appearance folder)
.IP "kDesktopPicturesFolderType" 4
.IX Item "kDesktopPicturesFolderType"
Desktop Pictures folder (in Appearance folder)
.IP "kInternetSearchSitesFolderType" 4
.IX Item "kInternetSearchSitesFolderType"
Internet Search Sites folder
.IP "kFindSupportFolderType" 4
.IX Item "kFindSupportFolderType"
Find support folder
.IP "kFindByContentFolderType" 4
.IX Item "kFindByContentFolderType"
Find by content folder
.IP "kInstallerLogsFolderType" 4
.IX Item "kInstallerLogsFolderType"
Installer Logs folder
.IP "kScriptsFolderType" 4
.IX Item "kScriptsFolderType"
Scripts folder
.IP "kFolderActionsFolderType" 4
.IX Item "kFolderActionsFolderType"
Folder Actions Scripts folder
.IP "kLauncherItemsFolderType" 4
.IX Item "kLauncherItemsFolderType"
Launcher Items folder
.IP "kRecentApplicationsFolderType" 4
.IX Item "kRecentApplicationsFolderType"
Recent Applications folder
.IP "kRecentDocumentsFolderType" 4
.IX Item "kRecentDocumentsFolderType"
Recent Documents folder
.IP "kRecentServersFolderType" 4
.IX Item "kRecentServersFolderType"
Recent Servers folder
.IP "kSpeakableItemsFolderType" 4
.IX Item "kSpeakableItemsFolderType"
Speakable Items folder
.IP "kKeychainFolderType" 4
.IX Item "kKeychainFolderType"
Keychain folder
.IP "kQuickTimeExtensionsFolderType" 4
.IX Item "kQuickTimeExtensionsFolderType"
QuickTime Extensions Folder (in Extensions folder)
.IP "kDisplayExtensionsFolderType" 4
.IX Item "kDisplayExtensionsFolderType"
Display Extensions Folder (in Extensions folder)
.IP "kMultiprocessingFolderType" 4
.IX Item "kMultiprocessingFolderType"
Multiprocessing Folder (in Extensions folder)
.IP "kPrintingPlugInsFolderType" 4
.IX Item "kPrintingPlugInsFolderType"
Printing Plug-Ins Folder (in Extensions folder)
.PP
New Folder Types to accommodate the Mac \s-1OS X\s0 Folder Manager
These folder types are not applicable on Mac \s-1OS 9.\s0
.IP "kDomainTopLevelFolderType" 4
.IX Item "kDomainTopLevelFolderType"
The top-level of a Folder domain, e.g. \*(L"/System\*(R"
.IP "kDomainLibraryFolderType" 4
.IX Item "kDomainLibraryFolderType"
the Library subfolder of a particular domain
.IP "kColorSyncFolderType" 4
.IX Item "kColorSyncFolderType"
Contains ColorSync-related folders
.IP "kColorSyncCMMFolderType" 4
.IX Item "kColorSyncCMMFolderType"
ColorSync CMMs
.IP "kColorSyncScriptingFolderType" 4
.IX Item "kColorSyncScriptingFolderType"
ColorSync Scripting support
.IP "kPrintersFolderType" 4
.IX Item "kPrintersFolderType"
Contains Printing-related folders
.IP "kSpeechFolderType" 4
.IX Item "kSpeechFolderType"
Contains Speech-related folders
.IP "kCarbonLibraryFolderType" 4
.IX Item "kCarbonLibraryFolderType"
Contains Carbon-specific file
.IP "kDocumentationFolderType" 4
.IX Item "kDocumentationFolderType"
Contains Documentation files (not user documents)
.IP "kDeveloperDocsFolderType" 4
.IX Item "kDeveloperDocsFolderType"
Contains Developer Documentation files and folders
.IP "kDeveloperHelpFolderType" 4
.IX Item "kDeveloperHelpFolderType"
Contains Developer Help related files
.IP "kISSDownloadsFolderType" 4
.IX Item "kISSDownloadsFolderType"
Contains Internet Search Sites downloaded from the Internet
.IP "kUserSpecificTmpFolderType" 4
.IX Item "kUserSpecificTmpFolderType"
Contains temporary items created on behalf of the current user
.IP "kCachedDataFolderType" 4
.IX Item "kCachedDataFolderType"
Contains various cache files for different clients
.IP "kFrameworksFolderType" 4
.IX Item "kFrameworksFolderType"
Contains Mac \s-1OS X\s0 Framework folders
.IP "kPrivateFrameworksFolderType" 4
.IX Item "kPrivateFrameworksFolderType"
Contains Mac \s-1OS X\s0 Private Framework folders
.IP "kClassicDesktopFolderType" 4
.IX Item "kClassicDesktopFolderType"
Mac \s-1OS 9\s0 compatible desktop folder \- same as kSystemDesktopFolderType but with a more appropriate name for Mac \s-1OS X\s0 code.
.IP "kDeveloperFolderType" 4
.IX Item "kDeveloperFolderType"
Contains Mac \s-1OS X\s0 Developer Resources
.IP "kSystemSoundsFolderType" 4
.IX Item "kSystemSoundsFolderType"
Contains Mac \s-1OS X\s0 System Sound Files
.IP "kComponentsFolderType" 4
.IX Item "kComponentsFolderType"
Contains Mac \s-1OS X\s0 components
.IP "kQuickTimeComponentsFolderType" 4
.IX Item "kQuickTimeComponentsFolderType"
Contains QuickTime components for Mac \s-1OS X\s0
.IP "kCoreServicesFolderType" 4
.IX Item "kCoreServicesFolderType"
Refers to the \*(L"CoreServices\*(R" folder on Mac \s-1OS X\s0
.IP "kPictureDocumentsFolderType" 4
.IX Item "kPictureDocumentsFolderType"
Refers to the \*(L"Pictures\*(R" folder in a users home directory
.IP "kMovieDocumentsFolderType" 4
.IX Item "kMovieDocumentsFolderType"
Refers to the \*(L"Movies\*(R" folder in a users home directory
.IP "kMusicDocumentsFolderType" 4
.IX Item "kMusicDocumentsFolderType"
Refers to the \*(L"Music\*(R" folder in a users home directory
.IP "kInternetSitesFolderType" 4
.IX Item "kInternetSitesFolderType"
Refers to the \*(L"Sites\*(R" folder in a users home directory
.IP "kPublicFolderType" 4
.IX Item "kPublicFolderType"
Refers to the \*(L"Public\*(R" folder in a users home directory
.IP "kAudioSupportFolderType" 4
.IX Item "kAudioSupportFolderType"
Refers to the Audio support folder for Mac \s-1OS X\s0
.IP "kAudioSoundsFolderType" 4
.IX Item "kAudioSoundsFolderType"
Refers to the Sounds subfolder of Audio Support
.IP "kAudioSoundBanksFolderType" 4
.IX Item "kAudioSoundBanksFolderType"
Refers to the Banks subfolder of the Sounds Folder
.IP "kAudioAlertSoundsFolderType" 4
.IX Item "kAudioAlertSoundsFolderType"
Refers to the Alert Sounds subfolder of the Sound Folder
.IP "kAudioPlugInsFolderType" 4
.IX Item "kAudioPlugInsFolderType"
Refers to the Plug-ins subfolder of the Audio Folder
.IP "kAudioComponentsFolderType" 4
.IX Item "kAudioComponentsFolderType"
Refers to the Components subfolder of the Audio Plug-ins Folder
.IP "kKernelExtensionsFolderType" 4
.IX Item "kKernelExtensionsFolderType"
Refers to the Kernel Extensions Folder on Mac \s-1OS X\s0
.IP "kDirectoryServicesFolderType" 4
.IX Item "kDirectoryServicesFolderType"
Refers to the Directory Services folder on Mac \s-1OS X\s0
.IP "kDirectoryServicesPlugInsFolderType" 4
.IX Item "kDirectoryServicesPlugInsFolderType"
Refers to the Directory Services Plug-Ins folder on Mac \s-1OS X\s0
.IP "kInstallerReceiptsFolderType" 4
.IX Item "kInstallerReceiptsFolderType"
Refers to the \*(L"Receipts\*(R" folder in Mac \s-1OS X\s0
.IP "kFileSystemSupportFolderType" 4
.IX Item "kFileSystemSupportFolderType"
Refers to the [domain]/Library/Filesystems folder in Mac \s-1OS X\s0
.IP "kAppleShareSupportFolderType" 4
.IX Item "kAppleShareSupportFolderType"
Refers to the [domain]/Library/Filesystems/AppleShare folder in Mac \s-1OS X\s0
.IP "kAppleShareAuthenticationFolderType" 4
.IX Item "kAppleShareAuthenticationFolderType"
Refers to the [domain]/Library/Filesystems/AppleShare/Authentication folder in Mac \s-1OS X\s0
.IP "kMIDIDriversFolderType" 4
.IX Item "kMIDIDriversFolderType"
Refers to the \s-1MIDI\s0 Drivers folder on Mac \s-1OS X\s0
.IP "kKeyboardLayoutsFolderType" 4
.IX Item "kKeyboardLayoutsFolderType"
Refers to the [domain]/Library/KeyboardLayouts folder in Mac \s-1OS X\s0
.IP "kIndexFilesFolderType" 4
.IX Item "kIndexFilesFolderType"
Refers to the [domain]/Library/Indexes folder in Mac \s-1OS X\s0
.IP "kFindByContentIndexesFolderType" 4
.IX Item "kFindByContentIndexesFolderType"
Refers to the [domain]/Library/Indexes/FindByContent folder in Mac \s-1OS X\s0
.IP "kManagedItemsFolderType" 4
.IX Item "kManagedItemsFolderType"
Refers to the Managed Items folder for Mac \s-1OS X\s0
.IP "kBootTimeStartupItemsFolderType" 4
.IX Item "kBootTimeStartupItemsFolderType"
Refers to the \*(L"StartupItems\*(R" folder of Mac \s-1OS X\s0
.PP
More Folder Constants
.IP "kLocalesFolderType" 4
.IX Item "kLocalesFolderType"
\&\s-1PKE\s0 for Locales folder
.IP "kFindByContentPluginsFolderType" 4
.IX Item "kFindByContentPluginsFolderType"
Find By Content Plug-ins
.IP "kUsersFolderType" 4
.IX Item "kUsersFolderType"
\&\*(L"Users\*(R" folder, contains one folder for each user.
.IP "kCurrentUserFolderType" 4
.IX Item "kCurrentUserFolderType"
The folder for the currently logged on user.
.IP "kCurrentUserRemoteFolderLocation" 4
.IX Item "kCurrentUserRemoteFolderLocation"
The remote folder for the currently logged on user
.IP "kCurrentUserRemoteFolderType" 4
.IX Item "kCurrentUserRemoteFolderType"
The remote folder location for the currently logged on user
.IP "kSharedUserDataFolderType" 4
.IX Item "kSharedUserDataFolderType"
A Shared \*(L"Documents\*(R" folder, readable & writeable by all users
.IP "kVolumeSettingsFolderType" 4
.IX Item "kVolumeSettingsFolderType"
Volume specific user information goes here
.IP "kAppleshareAutomountServerAliasesFolderType" 4
.IX Item "kAppleshareAutomountServerAliasesFolderType"
Appleshare puts volumes to automount inside this folder.
.IP "kPreMacOS91ApplicationsFolderType" 4
.IX Item "kPreMacOS91ApplicationsFolderType"
The \*(L"Applications\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91InstallerLogsFolderType" 4
.IX Item "kPreMacOS91InstallerLogsFolderType"
The \*(L"Installer Logs\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91AssistantsFolderType" 4
.IX Item "kPreMacOS91AssistantsFolderType"
The \*(L"Assistants\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91UtilitiesFolderType" 4
.IX Item "kPreMacOS91UtilitiesFolderType"
The \*(L"Utilities\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91AppleExtrasFolderType" 4
.IX Item "kPreMacOS91AppleExtrasFolderType"
The \*(L"Apple Extras\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91MacOSReadMesFolderType" 4
.IX Item "kPreMacOS91MacOSReadMesFolderType"
The \*(L"Mac \s-1OS\s0 ReadMes\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91InternetFolderType" 4
.IX Item "kPreMacOS91InternetFolderType"
The \*(L"Internet\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91AutomountedServersFolderType" 4
.IX Item "kPreMacOS91AutomountedServersFolderType"
The \*(L"Servers\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91StationeryFolderType" 4
.IX Item "kPreMacOS91StationeryFolderType"
The \*(L"Stationery\*(R" folder, pre Mac \s-1OS 9.1\s0
.SS "Types"
.IX Subsection "Types"
.IP "FInfo" 4
.IX Item "FInfo"
Information for a file, including:
.Sp
.Vb 4
\&    OSType     fdType            the type of the file
\&    OSType     fdCreator         file\*(Aqs creator
\&    U16        fdFlags           flags ex. hasbundle,invisible,locked, etc.
\&    Point      fdLocation        file\*(Aqs location in folder
.Ve
.IP "FXInfo" 4
.IX Item "FXInfo"
Further information for a file, including:
.Sp
.Vb 5
\&    short      fdIconID          Icon ID
\&    I8         fdScript          Script flag and number
\&    I8         fdXFlags          More flag bits
\&    short      fdComment         Comment ID
\&    long       fdPutAway         Home Dir ID
.Ve
.IP "DInfo" 4
.IX Item "DInfo"
Information for a directory, including:
.Sp
.Vb 4
\&    Rect       frRect            folder rect
\&    U16        frFlags           Flags
\&    Point      frLocation        folder location
\&    short      frView            folder view
.Ve
.IP "DXInfo" 4
.IX Item "DXInfo"
Further information for a directory, including:
.Sp
.Vb 6
\&    Point      frScroll          scroll position
\&    long       frOpenChain       DirID chain of open folders
\&    I8         frScript          Script flag and number
\&    I8         frXFlags          More flag bits
\&    short      frComment         comment
\&    long       frPutAway         DirID
.Ve
.IP "CatInfo" 4
.IX Item "CatInfo"
Catalog information of a file or a directory, including:
.Sp
.Vb 10
\&    Str255     ioNamePtr         ptr to Vol:FileName string
\&    short      ioVRefNum         volume refnum (DrvNum for Eject and MountVol)
\&    short      ioFRefNum         reference number
\&    I8         ioFVersNum        version number
\&    short      ioFDirIndex       GetFInfo directory index
\&    I8         ioFlAttrib        GetFInfo: in\-use bit=7, lock bit=0
\&    I8         ioACUser          access rights for directory only
\&    FInfo      ioFlFndrInfo      user info
\&    long       ioDirID           A directory ID
\&    U16        ioFlStBlk         start file block (0 if none)
\&    long       ioFlLgLen         logical length (EOF)
\&    long       ioFlPyLen         physical length
\&    U16        ioFlRStBlk        start block rsrc fork
\&    long       ioFlRLgLen        file logical length rsrc fork
\&    long       ioFlRPyLen        file physical length rsrc fork
\&    time_t     ioFlCrDat         file creation date& time
\&    time_t     ioFlMdDat         last modified date and time
\&    time_t     ioFlBkDat         
\&    FXInfo     ioFlXFndrInfo     
\&    long       ioFlParID         
\&    long       ioFlClpSiz        
\&    DInfo      ioDrUsrWds        
\&    long       ioDrDirID         
\&    U16        ioDrNmFls         
\&    time_t     ioDrCrDat         
\&    time_t     ioDrMdDat         
\&    time_t     ioDrBkDat         
\&    DXInfo     ioDrFndrInfo      
\&    long       ioDrParID
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "FSpGetCatInfo \s-1FILE\s0 [, \s-1INDEX \s0]" 4
.IX Item "FSpGetCatInfo FILE [, INDEX ]"
If \s-1INDEX\s0 is omitted or 0, returns information about the specified 
file or folder. If \s-1INDEX\s0 is nonzero, returns information obout the 
nth item in the specified folder.
.IP "FSpSetCatInfo \s-1FILE, INFO\s0" 4
.IX Item "FSpSetCatInfo FILE, INFO"
Change information about the specified file.
.IP "FSMakeFSSpec \s-1VREF, DIRID, NAME\s0" 4
.IX Item "FSMakeFSSpec VREF, DIRID, NAME"
Creates a file system specification record from a volume number, 
directory \s-1ID,\s0 and name. This call never returns a path name.
.IP "FSpCreate \s-1FILE, CREATOR, TYPE\s0 [, \s-1SCRIPTTAG\s0]" 4
.IX Item "FSpCreate FILE, CREATOR, TYPE [, SCRIPTTAG]"
Creates a file with the specified file creator and type. You don't
want to know what a script tag is.
.IP "FSpDirCreate \s-1FILE\s0 [, \s-1SCRIPTTAG\s0]" 4
.IX Item "FSpDirCreate FILE [, SCRIPTTAG]"
Creates a directory and returns its \s-1ID.\s0
.IP "FSpDelete \s-1FILE\s0" 4
.IX Item "FSpDelete FILE"
End the sad existence of a file or (empty) folder.
.IP "FSpGetFInfo \s-1FILE\s0" 4
.IX Item "FSpGetFInfo FILE"
Returns finder info about a specified file.
.IP "FSpSetFInfo \s-1FILE, INFO\s0" 4
.IX Item "FSpSetFInfo FILE, INFO"
Changes the finder info about a specified file.
.IP "FSpSetFLock \s-1FILE\s0" 4
.IX Item "FSpSetFLock FILE"
Software lock a file.
.IP "FSpRstFLock \s-1FILE\s0" 4
.IX Item "FSpRstFLock FILE"
Unlock a file.
.IP "FSpRename \s-1FILE, NAME\s0" 4
.IX Item "FSpRename FILE, NAME"
Rename a file (only the name component).
.IP "FSpCatMove \s-1FILE, FOLDER\s0" 4
.IX Item "FSpCatMove FILE, FOLDER"
Move a file into a different folder.
.IP "FSpExchangeFiles \s-1FILE1, FILE2\s0" 4
.IX Item "FSpExchangeFiles FILE1, FILE2"
Swap the contents of two files, e.g. if you saved to a temp file
and finally swap it with the original.
.IP "NewAlias \s-1FILE\s0" 4
.IX Item "NewAlias FILE"
Returns an AliasHandle for the file.
.IP "NewAliasRelative \s-1FROM, FILE\s0" 4
.IX Item "NewAliasRelative FROM, FILE"
Returns a AliasHandle relative to \s-1FROM\s0 for the file.
.IP "NewAliasMinimal \s-1FILE\s0" 4
.IX Item "NewAliasMinimal FILE"
Returns an AliasHandle containing minimal information for the file.
This type of alias is best suited for short lived aliases, e.g. in
AppleEvents.
.IP "NewAliasMinimalFromFullPath \s-1NAME\s0 [, \s-1ZONE\s0 [, \s-1SERVER\s0]]" 4
.IX Item "NewAliasMinimalFromFullPath NAME [, ZONE [, SERVER]]"
Create a new alias containing only the path name.
.IP "UpdateAlias \s-1TARGET, ALIAS\s0" 4
.IX Item "UpdateAlias TARGET, ALIAS"
Updates an alias to point to the target file. Returns whether the alias was changed..
.IP "UpdateAliasRelative \s-1FROM, TARGET, ALIAS\s0" 4
.IX Item "UpdateAliasRelative FROM, TARGET, ALIAS"
Updates an alias to point to the target file relative to \s-1FROM.\s0 Returns whether 
the alias was changed..
.IP "ResolveAlias \s-1ALIAS\s0" 4
.IX Item "ResolveAlias ALIAS"
Resolves an alias. In scalar context, returns the path to the resolved file.
In list context, also returns whether the alias was changed when resolving.
.IP "ResolveAliasRelative \s-1FROM, ALIAS\s0" 4
.IX Item "ResolveAliasRelative FROM, ALIAS"
Resolves an alias relative to a file. In scalar context, returns the path to the 
resolved file. In list context, also returns whether the alias was changed when 
resolving.
.IP "GetAliasInfo \s-1ALIAS, INDEX\s0" 4
.IX Item "GetAliasInfo ALIAS, INDEX"
Return a component of the alias information.
.IP "UnmountVol (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "UnmountVol (VOLUMENAME | VOLUMENR)"
Unmounts a volume.
.IP "Eject (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "Eject (VOLUMENAME | VOLUMENR)"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Ejects a volume, placing it offline.
.IP "FlushVol (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "FlushVol (VOLUMENAME | VOLUMENR)"
Flush pending write operations on a volume.
.IP "FindFolder \s-1VREF, FOLDERTYPE\s0 [, \s-1CREATE\s0]" 4
.IX Item "FindFolder VREF, FOLDERTYPE [, CREATE]"
Returns a path to a special folder on the given volume (specify 
\&\f(CW\*(C`kOnSystemDisk\*(C'\fR for the boot volume). For \s-1FOLDERTYPE,\s0 you can specify
any of the \f(CW\*(C`kXXXFolderType\*(C'\fR constants listed above.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Files5.16.3pm                           0100644 0001750 0001750 00000105026 12566241347 023470  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Files 3"
.TH Files 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Files \- Macintosh Toolbox Interface to the File and Alias Manager
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Constants"
.IX Subsection "Constants"
Constants for file access permissions.  Use these constants to request a
type of access to a file or fork, or to deny a type of access to a file
or fork to other paths that may request access.
.PP
Note that it is possible, on Mac \s-1OS\s0 8 and 9, to open a file residing on
read-only media with write access. On Mac \s-1OS\s0 X, however, you cannot open
a file with write access on read-only media; the attempt to open the
file fails with a wrPermErr error.
.IP "fsCurPerm" 4
.IX Item "fsCurPerm"
Requests whatever permissions are currently allowed. If write access is unavailable (because the file is locked or the file is already open with write permission), then read permission is granted. Otherwise read/write permission is granted.
.IP "fsRdPerm" 4
.IX Item "fsRdPerm"
Requests permission to read the file.
.IP "fsWrPerm" 4
.IX Item "fsWrPerm"
Requests permission to write to the file. If write permission is granted, no other access paths are granted write permission. Note, however, that the File Manager does not support write-only access to a file. Thus, fsWrPerm is synonymous with fsRdWrPerm.
.IP "fsRdWrPerm" 4
.IX Item "fsRdWrPerm"
Requests exclusive read and write permission. If exclusive read/write permission is granted, no other users are granted permission to write to the file. Other users may, however, be granted permission to read the file.
.IP "fsRdWrShPerm" 4
.IX Item "fsRdWrShPerm"
Requests shared read and write permission. Shared read/write permission allows mutliple access paths for reading and writing. This is safe only if there is some way of locking portions of the file before writing to them. Use the functions PBLockRangeSync and PBUnlockRangeSync to lock and unlock ranges of bytes within a file. On Mac \s-1OS\s0 8 and 9, these functions are supported only on remotely mounted volumes, or on local volumes that are shareable on the network. You should check that range locking is available before requesting shared read/ write permission. On Mac \s-1OS\s0 X, range locking is available on all volumes.
.IP "fsRdDenyPerm" 4
.IX Item "fsRdDenyPerm"
Requests that any other paths be prevented from having read access. A path cannot be opened if you request read permission (with the fsRdPerm constant) but some other path has requested deny-read access. Similarly, the path cannot be opened if you request deny-read permission, but some other path already has read access. This constant is used with the PBHOpenDenySync and PBHOpenRFDenySync functions.
.IP "fsWrDenyPerm" 4
.IX Item "fsWrDenyPerm"
Requests that any other paths be prevented from having write access. A path cannot be opened if you request write permission (with the fsWrPerm constant) but some other path has requested deny-write access. Similarly, the path cannot be opened if you request deny-write permission, but some other path already has write access. This constant is used with the PBHOpenDenySync and PBHOpenRFDenySync functions.
.PP
ioFlAttrib bits, returned by FSpGetCatInfo.
.IP "kioFlAttribLocked" 4
.IX Item "kioFlAttribLocked"
Set if file or directory is locked
.IP "kioFlAttribResOpen" 4
.IX Item "kioFlAttribResOpen"
Set if resource fork is open
.IP "kioFlAttribDataOpen" 4
.IX Item "kioFlAttribDataOpen"
Set if data fork is open
.IP "kioFlAttribDir" 4
.IX Item "kioFlAttribDir"
Set if this is a directory
.IP "kioFlAttribCopyProt" 4
.IX Item "kioFlAttribCopyProt"
Set if AppleShare server \*(L"copy-protects\*(R" the file
.IP "kioFlAttribFileOpen" 4
.IX Item "kioFlAttribFileOpen"
Set if file (either fork) is open
.IP "kioFlAttribInShared" 4
.IX Item "kioFlAttribInShared"
Set if the directory is within a shared area of the directory hierarchy
.IP "kioFlAttribMounted" 4
.IX Item "kioFlAttribMounted"
Set if the directory is a share point that is mounted by some user
.IP "kioFlAttribSharePoint" 4
.IX Item "kioFlAttribSharePoint"
Set if the directory is a share point
.PP
Finder flags
.IP "kIsOnDesk" 4
.IX Item "kIsOnDesk"
Files and folders (System 6)
.IP "kColor" 4
.IX Item "kColor"
Files and folders; bit 0x0020 was kRequireSwitchLaunch, but is now reserved for future use
.IP "kIsShared" 4
.IX Item "kIsShared"
Files only (Applications only); if clear, the application needs to write to its resource fork, and therefore cannot be shared on a server
.IP "kHasNoINITs" 4
.IX Item "kHasNoINITs"
Files only (Extensions/Control Panels only); this file contains no \s-1INIT\s0 resource
.IP "kHasBeenInited" 4
.IX Item "kHasBeenInited"
Files only; clear if the file contains desktop database; resources ('\s-1BNDL\s0', '\s-1FREF\s0', 'open', 'kind'...) that have not been added yet. Set only by the Finder; reserved for folders \- make sure this bit is cleared for folders; bit 0x0200 was the letter bit for \s-1AOCE\s0, but is now reserved for future use
.IP "kHasCustomIcon" 4
.IX Item "kHasCustomIcon"
Files and folders
.IP "kIsStationery" 4
.IX Item "kIsStationery"
Files only
.IP "kNameLocked" 4
.IX Item "kNameLocked"
Files and folders
.IP "kHasBundle" 4
.IX Item "kHasBundle"
Files only
.IP "kIsInvisible" 4
.IX Item "kIsInvisible"
Files and folders
.IP "kIsAlias" 4
.IX Item "kIsAlias"
Files only
.PP
AppleTalk/GetAliasInfo Constants
.IP "asiZoneName" 4
.IX Item "asiZoneName"
Return AppleTalk zone name from GetAliasInfo.
.IP "asiServerName" 4
.IX Item "asiServerName"
Return AppleTalk server name from GetAliasInfo.
.IP "asiVolumeName" 4
.IX Item "asiVolumeName"
Return volume name from GetAliasInfo.
.IP "asiAliasName" 4
.IX Item "asiAliasName"
Return last component of target file name from GetAliasInfo.
.IP "asiParentName" 4
.IX Item "asiParentName"
Return name of enclosing folder from GetAliasInfo. This index value is 1.  Higher indices will return folder names higher up the hierarchy.
.PP
Folder type constants.  Specify a type of folder on a particular volume.
Use in vRefNum parameter of \fIFindFolder()\fR.
.IP "kOnSystemDisk" 4
.IX Item "kOnSystemDisk"
previously was 0x8000 but that is an unsigned value whereas vRefNum is signed
.IP "kOnAppropriateDisk" 4
.IX Item "kOnAppropriateDisk"
Generally, the same as kOnSystemDisk, but it's clearer that this isn't always the 'boot' disk.
.PP
Folder Domains \- Carbon only.  The constants above can continue to be used,
but the folder/volume returned will be from one of the domains below.
.IP "kSystemDomain" 4
.IX Item "kSystemDomain"
Read-only system hierarchy.
.IP "kLocalDomain" 4
.IX Item "kLocalDomain"
All users of a single machine have access to these resources.
.IP "kNetworkDomain" 4
.IX Item "kNetworkDomain"
All users configured to use a common network server has access to these resources.
.IP "kUserDomain" 4
.IX Item "kUserDomain"
Read/write. Resources that are private to the user.
.IP "kClassicDomain" 4
.IX Item "kClassicDomain"
Domain referring to the currently configured Classic System Folder
.IP "kLastDomainConstant" 4
.IX Item "kLastDomainConstant"
The \s-1ID\s0 of the last domain in the above list, used by the Folder Manager to determine if a given parameter should be treated as a domain or a volume...
.PP
Constants for createFolder parameter of \fIFindFolder()\fR.
.IP "kCreateFolder" 4
.IX Item "kCreateFolder"
.PD 0
.IP "kDontCreateFolder" 4
.IX Item "kDontCreateFolder"
.PD
.PP
Folder Type Constants for \fIFindFolder()\fR.
.IP "kSystemFolderType" 4
.IX Item "kSystemFolderType"
the system folder
.IP "kDesktopFolderType" 4
.IX Item "kDesktopFolderType"
the desktop folder; objects in this folder show on the desk top.
.IP "kSystemDesktopFolderType" 4
.IX Item "kSystemDesktopFolderType"
the desktop folder at the root of the hard drive, never the redirected user desktop folder
.IP "kTrashFolderType" 4
.IX Item "kTrashFolderType"
the trash folder; objects in this folder show up in the trash
.IP "kSystemTrashFolderType" 4
.IX Item "kSystemTrashFolderType"
the trash folder at the root of the drive, never the redirected user trash folder
.IP "kWhereToEmptyTrashFolderType" 4
.IX Item "kWhereToEmptyTrashFolderType"
the \*(L"empty trash\*(R" folder; Finder starts empty from here down
.IP "kPrintMonitorDocsFolderType" 4
.IX Item "kPrintMonitorDocsFolderType"
Print Monitor documents
.IP "kStartupFolderType" 4
.IX Item "kStartupFolderType"
Finder objects (applications, documents, DAs, aliases, to...) to open at startup go here
.IP "kShutdownFolderType" 4
.IX Item "kShutdownFolderType"
Finder objects (applications, documents, DAs, aliases, to...) to open at shutdown go here
.IP "kAppleMenuFolderType" 4
.IX Item "kAppleMenuFolderType"
Finder objects to put into the Apple menu go here
.IP "kControlPanelFolderType" 4
.IX Item "kControlPanelFolderType"
Control Panels go here (may contain INITs)
.IP "kSystemControlPanelFolderType" 4
.IX Item "kSystemControlPanelFolderType"
System control panels folder \- never the redirected one, always \*(L"Control Panels\*(R" inside the System Folder
.IP "kExtensionFolderType" 4
.IX Item "kExtensionFolderType"
System extensions go here
.IP "kFontsFolderType" 4
.IX Item "kFontsFolderType"
Fonts go here
.IP "kPreferencesFolderType" 4
.IX Item "kPreferencesFolderType"
preferences for applications go here
.IP "kSystemPreferencesFolderType" 4
.IX Item "kSystemPreferencesFolderType"
System-type Preferences go here \- this is always the system's preferences folder, never a logged in user's
.IP "kTemporaryFolderType" 4
.IX Item "kTemporaryFolderType"
temporary files go here (deleted periodically, but don't rely on it.)
.IP "kExtensionDisabledFolderType" 4
.IX Item "kExtensionDisabledFolderType"
.PD 0
.IP "kControlPanelDisabledFolderType" 4
.IX Item "kControlPanelDisabledFolderType"
.IP "kSystemExtensionDisabledFolderType" 4
.IX Item "kSystemExtensionDisabledFolderType"
.IP "kStartupItemsDisabledFolderType" 4
.IX Item "kStartupItemsDisabledFolderType"
.IP "kShutdownItemsDisabledFolderType" 4
.IX Item "kShutdownItemsDisabledFolderType"
.IP "kApplicationsFolderType" 4
.IX Item "kApplicationsFolderType"
.IP "kDocumentsFolderType" 4
.IX Item "kDocumentsFolderType"
.PD
.PP
New Constants
.IP "kVolumeRootFolderType" 4
.IX Item "kVolumeRootFolderType"
root folder of a volume
.IP "kChewableItemsFolderType" 4
.IX Item "kChewableItemsFolderType"
items deleted at boot
.IP "kApplicationSupportFolderType" 4
.IX Item "kApplicationSupportFolderType"
third-party items and folders
.IP "kTextEncodingsFolderType" 4
.IX Item "kTextEncodingsFolderType"
encoding tables
.IP "kStationeryFolderType" 4
.IX Item "kStationeryFolderType"
stationery
.IP "kOpenDocFolderType" 4
.IX Item "kOpenDocFolderType"
OpenDoc root
.IP "kOpenDocShellPlugInsFolderType" 4
.IX Item "kOpenDocShellPlugInsFolderType"
OpenDoc Shell Plug-Ins in OpenDoc folder
.IP "kEditorsFolderType" 4
.IX Item "kEditorsFolderType"
OpenDoc editors in Mac \s-1OS\s0 Folder
.IP "kOpenDocEditorsFolderType" 4
.IX Item "kOpenDocEditorsFolderType"
OpenDoc subfolder of Editors folder
.IP "kOpenDocLibrariesFolderType" 4
.IX Item "kOpenDocLibrariesFolderType"
OpenDoc libraries folder
.IP "kGenEditorsFolderType" 4
.IX Item "kGenEditorsFolderType"
\&\s-1CKH\s0 general editors folder at root level of Sys folder
.IP "kHelpFolderType" 4
.IX Item "kHelpFolderType"
\&\s-1CKH\s0 help folder currently at root of system folder
.IP "kInternetPlugInFolderType" 4
.IX Item "kInternetPlugInFolderType"
\&\s-1CKH\s0 internet plug ins for browsers and stuff
.IP "kModemScriptsFolderType" 4
.IX Item "kModemScriptsFolderType"
\&\s-1CKH\s0 modem scripts, get 'em \s-1OUT\s0 of the Extensions folder
.IP "kPrinterDescriptionFolderType" 4
.IX Item "kPrinterDescriptionFolderType"
\&\s-1CKH\s0 new folder at root of System folder for printer descs.
.IP "kPrinterDriverFolderType" 4
.IX Item "kPrinterDriverFolderType"
\&\s-1CKH\s0 new folder at root of System folder for printer drivers
.IP "kScriptingAdditionsFolderType" 4
.IX Item "kScriptingAdditionsFolderType"
\&\s-1CKH\s0 at root of system folder
.IP "kSharedLibrariesFolderType" 4
.IX Item "kSharedLibrariesFolderType"
\&\s-1CKH\s0 for general shared libs.
.IP "kVoicesFolderType" 4
.IX Item "kVoicesFolderType"
\&\s-1CKH\s0 macintalk can live here
.IP "kControlStripModulesFolderType" 4
.IX Item "kControlStripModulesFolderType"
\&\s-1CKH\s0 for control strip modules
.IP "kAssistantsFolderType" 4
.IX Item "kAssistantsFolderType"
\&\s-1SJF\s0 for Assistants (Mac \s-1OS\s0 Setup Assistant, etc)
.IP "kUtilitiesFolderType" 4
.IX Item "kUtilitiesFolderType"
\&\s-1SJF\s0 for Utilities folder
.IP "kAppleExtrasFolderType" 4
.IX Item "kAppleExtrasFolderType"
\&\s-1SJF\s0 for Apple Extras folder
.IP "kContextualMenuItemsFolderType" 4
.IX Item "kContextualMenuItemsFolderType"
\&\s-1SJF\s0 for Contextual Menu items
.IP "kMacOSReadMesFolderType" 4
.IX Item "kMacOSReadMesFolderType"
\&\s-1SJF\s0 for Mac \s-1OS\s0 ReadMes folder
.IP "kALMModulesFolderType" 4
.IX Item "kALMModulesFolderType"
\&\s-1EAS\s0 for Location Manager Module files except type 'thng' (within kExtensionFolderType)
.IP "kALMPreferencesFolderType" 4
.IX Item "kALMPreferencesFolderType"
\&\s-1EAS\s0 for Location Manager Preferences (within kPreferencesFolderType; contains kALMLocationsFolderType)
.IP "kALMLocationsFolderType" 4
.IX Item "kALMLocationsFolderType"
\&\s-1EAS\s0 for Location Manager Locations (within kALMPreferencesFolderType)
.IP "kColorSyncProfilesFolderType" 4
.IX Item "kColorSyncProfilesFolderType"
for ColorSync Profiles
.IP "kThemesFolderType" 4
.IX Item "kThemesFolderType"
for Theme data files
.IP "kFavoritesFolderType" 4
.IX Item "kFavoritesFolderType"
Favorties folder for Navigation Services
.IP "kInternetFolderType" 4
.IX Item "kInternetFolderType"
Internet folder (root level of startup volume)
.IP "kAppearanceFolderType" 4
.IX Item "kAppearanceFolderType"
Appearance folder (root of system folder)
.IP "kSoundSetsFolderType" 4
.IX Item "kSoundSetsFolderType"
Sound Sets folder (in Appearance folder)
.IP "kDesktopPicturesFolderType" 4
.IX Item "kDesktopPicturesFolderType"
Desktop Pictures folder (in Appearance folder)
.IP "kInternetSearchSitesFolderType" 4
.IX Item "kInternetSearchSitesFolderType"
Internet Search Sites folder
.IP "kFindSupportFolderType" 4
.IX Item "kFindSupportFolderType"
Find support folder
.IP "kFindByContentFolderType" 4
.IX Item "kFindByContentFolderType"
Find by content folder
.IP "kInstallerLogsFolderType" 4
.IX Item "kInstallerLogsFolderType"
Installer Logs folder
.IP "kScriptsFolderType" 4
.IX Item "kScriptsFolderType"
Scripts folder
.IP "kFolderActionsFolderType" 4
.IX Item "kFolderActionsFolderType"
Folder Actions Scripts folder
.IP "kLauncherItemsFolderType" 4
.IX Item "kLauncherItemsFolderType"
Launcher Items folder
.IP "kRecentApplicationsFolderType" 4
.IX Item "kRecentApplicationsFolderType"
Recent Applications folder
.IP "kRecentDocumentsFolderType" 4
.IX Item "kRecentDocumentsFolderType"
Recent Documents folder
.IP "kRecentServersFolderType" 4
.IX Item "kRecentServersFolderType"
Recent Servers folder
.IP "kSpeakableItemsFolderType" 4
.IX Item "kSpeakableItemsFolderType"
Speakable Items folder
.IP "kKeychainFolderType" 4
.IX Item "kKeychainFolderType"
Keychain folder
.IP "kQuickTimeExtensionsFolderType" 4
.IX Item "kQuickTimeExtensionsFolderType"
QuickTime Extensions Folder (in Extensions folder)
.IP "kDisplayExtensionsFolderType" 4
.IX Item "kDisplayExtensionsFolderType"
Display Extensions Folder (in Extensions folder)
.IP "kMultiprocessingFolderType" 4
.IX Item "kMultiprocessingFolderType"
Multiprocessing Folder (in Extensions folder)
.IP "kPrintingPlugInsFolderType" 4
.IX Item "kPrintingPlugInsFolderType"
Printing Plug-Ins Folder (in Extensions folder)
.PP
New Folder Types to accommodate the Mac \s-1OS\s0 X Folder Manager
These folder types are not applicable on Mac \s-1OS\s0 9.
.IP "kDomainTopLevelFolderType" 4
.IX Item "kDomainTopLevelFolderType"
The top-level of a Folder domain, e.g. \*(L"/System\*(R"
.IP "kDomainLibraryFolderType" 4
.IX Item "kDomainLibraryFolderType"
the Library subfolder of a particular domain
.IP "kColorSyncFolderType" 4
.IX Item "kColorSyncFolderType"
Contains ColorSync-related folders
.IP "kColorSyncCMMFolderType" 4
.IX Item "kColorSyncCMMFolderType"
ColorSync CMMs
.IP "kColorSyncScriptingFolderType" 4
.IX Item "kColorSyncScriptingFolderType"
ColorSync Scripting support
.IP "kPrintersFolderType" 4
.IX Item "kPrintersFolderType"
Contains Printing-related folders
.IP "kSpeechFolderType" 4
.IX Item "kSpeechFolderType"
Contains Speech-related folders
.IP "kCarbonLibraryFolderType" 4
.IX Item "kCarbonLibraryFolderType"
Contains Carbon-specific file
.IP "kDocumentationFolderType" 4
.IX Item "kDocumentationFolderType"
Contains Documentation files (not user documents)
.IP "kDeveloperDocsFolderType" 4
.IX Item "kDeveloperDocsFolderType"
Contains Developer Documentation files and folders
.IP "kDeveloperHelpFolderType" 4
.IX Item "kDeveloperHelpFolderType"
Contains Developer Help related files
.IP "kISSDownloadsFolderType" 4
.IX Item "kISSDownloadsFolderType"
Contains Internet Search Sites downloaded from the Internet
.IP "kUserSpecificTmpFolderType" 4
.IX Item "kUserSpecificTmpFolderType"
Contains temporary items created on behalf of the current user
.IP "kCachedDataFolderType" 4
.IX Item "kCachedDataFolderType"
Contains various cache files for different clients
.IP "kFrameworksFolderType" 4
.IX Item "kFrameworksFolderType"
Contains Mac \s-1OS\s0 X Framework folders
.IP "kPrivateFrameworksFolderType" 4
.IX Item "kPrivateFrameworksFolderType"
Contains Mac \s-1OS\s0 X Private Framework folders
.IP "kClassicDesktopFolderType" 4
.IX Item "kClassicDesktopFolderType"
Mac \s-1OS\s0 9 compatible desktop folder \- same as kSystemDesktopFolderType but with a more appropriate name for Mac \s-1OS\s0 X code.
.IP "kDeveloperFolderType" 4
.IX Item "kDeveloperFolderType"
Contains Mac \s-1OS\s0 X Developer Resources
.IP "kSystemSoundsFolderType" 4
.IX Item "kSystemSoundsFolderType"
Contains Mac \s-1OS\s0 X System Sound Files
.IP "kComponentsFolderType" 4
.IX Item "kComponentsFolderType"
Contains Mac \s-1OS\s0 X components
.IP "kQuickTimeComponentsFolderType" 4
.IX Item "kQuickTimeComponentsFolderType"
Contains QuickTime components for Mac \s-1OS\s0 X
.IP "kCoreServicesFolderType" 4
.IX Item "kCoreServicesFolderType"
Refers to the \*(L"CoreServices\*(R" folder on Mac \s-1OS\s0 X
.IP "kPictureDocumentsFolderType" 4
.IX Item "kPictureDocumentsFolderType"
Refers to the \*(L"Pictures\*(R" folder in a users home directory
.IP "kMovieDocumentsFolderType" 4
.IX Item "kMovieDocumentsFolderType"
Refers to the \*(L"Movies\*(R" folder in a users home directory
.IP "kMusicDocumentsFolderType" 4
.IX Item "kMusicDocumentsFolderType"
Refers to the \*(L"Music\*(R" folder in a users home directory
.IP "kInternetSitesFolderType" 4
.IX Item "kInternetSitesFolderType"
Refers to the \*(L"Sites\*(R" folder in a users home directory
.IP "kPublicFolderType" 4
.IX Item "kPublicFolderType"
Refers to the \*(L"Public\*(R" folder in a users home directory
.IP "kAudioSupportFolderType" 4
.IX Item "kAudioSupportFolderType"
Refers to the Audio support folder for Mac \s-1OS\s0 X
.IP "kAudioSoundsFolderType" 4
.IX Item "kAudioSoundsFolderType"
Refers to the Sounds subfolder of Audio Support
.IP "kAudioSoundBanksFolderType" 4
.IX Item "kAudioSoundBanksFolderType"
Refers to the Banks subfolder of the Sounds Folder
.IP "kAudioAlertSoundsFolderType" 4
.IX Item "kAudioAlertSoundsFolderType"
Refers to the Alert Sounds subfolder of the Sound Folder
.IP "kAudioPlugInsFolderType" 4
.IX Item "kAudioPlugInsFolderType"
Refers to the Plug-ins subfolder of the Audio Folder
.IP "kAudioComponentsFolderType" 4
.IX Item "kAudioComponentsFolderType"
Refers to the Components subfolder of the Audio Plug-ins Folder
.IP "kKernelExtensionsFolderType" 4
.IX Item "kKernelExtensionsFolderType"
Refers to the Kernel Extensions Folder on Mac \s-1OS\s0 X
.IP "kDirectoryServicesFolderType" 4
.IX Item "kDirectoryServicesFolderType"
Refers to the Directory Services folder on Mac \s-1OS\s0 X
.IP "kDirectoryServicesPlugInsFolderType" 4
.IX Item "kDirectoryServicesPlugInsFolderType"
Refers to the Directory Services Plug-Ins folder on Mac \s-1OS\s0 X
.IP "kInstallerReceiptsFolderType" 4
.IX Item "kInstallerReceiptsFolderType"
Refers to the \*(L"Receipts\*(R" folder in Mac \s-1OS\s0 X
.IP "kFileSystemSupportFolderType" 4
.IX Item "kFileSystemSupportFolderType"
Refers to the [domain]/Library/Filesystems folder in Mac \s-1OS\s0 X
.IP "kAppleShareSupportFolderType" 4
.IX Item "kAppleShareSupportFolderType"
Refers to the [domain]/Library/Filesystems/AppleShare folder in Mac \s-1OS\s0 X
.IP "kAppleShareAuthenticationFolderType" 4
.IX Item "kAppleShareAuthenticationFolderType"
Refers to the [domain]/Library/Filesystems/AppleShare/Authentication folder in Mac \s-1OS\s0 X
.IP "kMIDIDriversFolderType" 4
.IX Item "kMIDIDriversFolderType"
Refers to the \s-1MIDI\s0 Drivers folder on Mac \s-1OS\s0 X
.IP "kKeyboardLayoutsFolderType" 4
.IX Item "kKeyboardLayoutsFolderType"
Refers to the [domain]/Library/KeyboardLayouts folder in Mac \s-1OS\s0 X
.IP "kIndexFilesFolderType" 4
.IX Item "kIndexFilesFolderType"
Refers to the [domain]/Library/Indexes folder in Mac \s-1OS\s0 X
.IP "kFindByContentIndexesFolderType" 4
.IX Item "kFindByContentIndexesFolderType"
Refers to the [domain]/Library/Indexes/FindByContent folder in Mac \s-1OS\s0 X
.IP "kManagedItemsFolderType" 4
.IX Item "kManagedItemsFolderType"
Refers to the Managed Items folder for Mac \s-1OS\s0 X
.IP "kBootTimeStartupItemsFolderType" 4
.IX Item "kBootTimeStartupItemsFolderType"
Refers to the \*(L"StartupItems\*(R" folder of Mac \s-1OS\s0 X
.PP
More Folder Constants
.IP "kLocalesFolderType" 4
.IX Item "kLocalesFolderType"
\&\s-1PKE\s0 for Locales folder
.IP "kFindByContentPluginsFolderType" 4
.IX Item "kFindByContentPluginsFolderType"
Find By Content Plug-ins
.IP "kUsersFolderType" 4
.IX Item "kUsersFolderType"
\&\*(L"Users\*(R" folder, contains one folder for each user.
.IP "kCurrentUserFolderType" 4
.IX Item "kCurrentUserFolderType"
The folder for the currently logged on user.
.IP "kCurrentUserRemoteFolderLocation" 4
.IX Item "kCurrentUserRemoteFolderLocation"
The remote folder for the currently logged on user
.IP "kCurrentUserRemoteFolderType" 4
.IX Item "kCurrentUserRemoteFolderType"
The remote folder location for the currently logged on user
.IP "kSharedUserDataFolderType" 4
.IX Item "kSharedUserDataFolderType"
A Shared \*(L"Documents\*(R" folder, readable & writeable by all users
.IP "kVolumeSettingsFolderType" 4
.IX Item "kVolumeSettingsFolderType"
Volume specific user information goes here
.IP "kAppleshareAutomountServerAliasesFolderType" 4
.IX Item "kAppleshareAutomountServerAliasesFolderType"
Appleshare puts volumes to automount inside this folder.
.IP "kPreMacOS91ApplicationsFolderType" 4
.IX Item "kPreMacOS91ApplicationsFolderType"
The \*(L"Applications\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91InstallerLogsFolderType" 4
.IX Item "kPreMacOS91InstallerLogsFolderType"
The \*(L"Installer Logs\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91AssistantsFolderType" 4
.IX Item "kPreMacOS91AssistantsFolderType"
The \*(L"Assistants\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91UtilitiesFolderType" 4
.IX Item "kPreMacOS91UtilitiesFolderType"
The \*(L"Utilities\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91AppleExtrasFolderType" 4
.IX Item "kPreMacOS91AppleExtrasFolderType"
The \*(L"Apple Extras\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91MacOSReadMesFolderType" 4
.IX Item "kPreMacOS91MacOSReadMesFolderType"
The \*(L"Mac \s-1OS\s0 ReadMes\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91InternetFolderType" 4
.IX Item "kPreMacOS91InternetFolderType"
The \*(L"Internet\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91AutomountedServersFolderType" 4
.IX Item "kPreMacOS91AutomountedServersFolderType"
The \*(L"Servers\*(R" folder, pre Mac \s-1OS\s0 9.1
.IP "kPreMacOS91StationeryFolderType" 4
.IX Item "kPreMacOS91StationeryFolderType"
The \*(L"Stationery\*(R" folder, pre Mac \s-1OS\s0 9.1
.SS "Types"
.IX Subsection "Types"
.IP "FInfo" 4
.IX Item "FInfo"
Information for a file, including:
.Sp
.Vb 4
\&    OSType     fdType            the type of the file
\&    OSType     fdCreator         file\*(Aqs creator
\&    U16        fdFlags           flags ex. hasbundle,invisible,locked, etc.
\&    Point      fdLocation        file\*(Aqs location in folder
.Ve
.IP "FXInfo" 4
.IX Item "FXInfo"
Further information for a file, including:
.Sp
.Vb 5
\&    short      fdIconID          Icon ID
\&    I8         fdScript          Script flag and number
\&    I8         fdXFlags          More flag bits
\&    short      fdComment         Comment ID
\&    long       fdPutAway         Home Dir ID
.Ve
.IP "DInfo" 4
.IX Item "DInfo"
Information for a directory, including:
.Sp
.Vb 4
\&    Rect       frRect            folder rect
\&    U16        frFlags           Flags
\&    Point      frLocation        folder location
\&    short      frView            folder view
.Ve
.IP "DXInfo" 4
.IX Item "DXInfo"
Further information for a directory, including:
.Sp
.Vb 6
\&    Point      frScroll          scroll position
\&    long       frOpenChain       DirID chain of open folders
\&    I8         frScript          Script flag and number
\&    I8         frXFlags          More flag bits
\&    short      frComment         comment
\&    long       frPutAway         DirID
.Ve
.IP "CatInfo" 4
.IX Item "CatInfo"
Catalog information of a file or a directory, including:
.Sp
.Vb 10
\&    Str255     ioNamePtr         ptr to Vol:FileName string
\&    short      ioVRefNum         volume refnum (DrvNum for Eject and MountVol)
\&    short      ioFRefNum         reference number
\&    I8         ioFVersNum        version number
\&    short      ioFDirIndex       GetFInfo directory index
\&    I8         ioFlAttrib        GetFInfo: in\-use bit=7, lock bit=0
\&    I8         ioACUser          access rights for directory only
\&    FInfo      ioFlFndrInfo      user info
\&    long       ioDirID           A directory ID
\&    U16        ioFlStBlk         start file block (0 if none)
\&    long       ioFlLgLen         logical length (EOF)
\&    long       ioFlPyLen         physical length
\&    U16        ioFlRStBlk        start block rsrc fork
\&    long       ioFlRLgLen        file logical length rsrc fork
\&    long       ioFlRPyLen        file physical length rsrc fork
\&    time_t     ioFlCrDat         file creation date& time
\&    time_t     ioFlMdDat         last modified date and time
\&    time_t     ioFlBkDat         
\&    FXInfo     ioFlXFndrInfo     
\&    long       ioFlParID         
\&    long       ioFlClpSiz        
\&    DInfo      ioDrUsrWds        
\&    long       ioDrDirID         
\&    U16        ioDrNmFls         
\&    time_t     ioDrCrDat         
\&    time_t     ioDrMdDat         
\&    time_t     ioDrBkDat         
\&    DXInfo     ioDrFndrInfo      
\&    long       ioDrParID
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "FSpGetCatInfo \s-1FILE\s0 [, \s-1INDEX\s0 ]" 4
.IX Item "FSpGetCatInfo FILE [, INDEX ]"
If \s-1INDEX\s0 is omitted or 0, returns information about the specified 
file or folder. If \s-1INDEX\s0 is nonzero, returns information obout the 
nth item in the specified folder.
.IP "FSpSetCatInfo \s-1FILE\s0, \s-1INFO\s0" 4
.IX Item "FSpSetCatInfo FILE, INFO"
Change information about the specified file.
.IP "FSMakeFSSpec \s-1VREF\s0, \s-1DIRID\s0, \s-1NAME\s0" 4
.IX Item "FSMakeFSSpec VREF, DIRID, NAME"
Creates a file system specification record from a volume number, 
directory \s-1ID\s0, and name. This call never returns a path name.
.IP "FSpCreate \s-1FILE\s0, \s-1CREATOR\s0, \s-1TYPE\s0 [, \s-1SCRIPTTAG\s0]" 4
.IX Item "FSpCreate FILE, CREATOR, TYPE [, SCRIPTTAG]"
Creates a file with the specified file creator and type. You don't
want to know what a script tag is.
.IP "FSpDirCreate \s-1FILE\s0 [, \s-1SCRIPTTAG\s0]" 4
.IX Item "FSpDirCreate FILE [, SCRIPTTAG]"
Creates a directory and returns its \s-1ID\s0.
.IP "FSpDelete \s-1FILE\s0" 4
.IX Item "FSpDelete FILE"
End the sad existence of a file or (empty) folder.
.IP "FSpGetFInfo \s-1FILE\s0" 4
.IX Item "FSpGetFInfo FILE"
Returns finder info about a specified file.
.IP "FSpSetFInfo \s-1FILE\s0, \s-1INFO\s0" 4
.IX Item "FSpSetFInfo FILE, INFO"
Changes the finder info about a specified file.
.IP "FSpSetFLock \s-1FILE\s0" 4
.IX Item "FSpSetFLock FILE"
Software lock a file.
.IP "FSpRstFLock \s-1FILE\s0" 4
.IX Item "FSpRstFLock FILE"
Unlock a file.
.IP "FSpRename \s-1FILE\s0, \s-1NAME\s0" 4
.IX Item "FSpRename FILE, NAME"
Rename a file (only the name component).
.IP "FSpCatMove \s-1FILE\s0, \s-1FOLDER\s0" 4
.IX Item "FSpCatMove FILE, FOLDER"
Move a file into a different folder.
.IP "FSpExchangeFiles \s-1FILE1\s0, \s-1FILE2\s0" 4
.IX Item "FSpExchangeFiles FILE1, FILE2"
Swap the contents of two files, e.g. if you saved to a temp file
and finally swap it with the original.
.IP "NewAlias \s-1FILE\s0" 4
.IX Item "NewAlias FILE"
Returns an AliasHandle for the file.
.IP "NewAliasRelative \s-1FROM\s0, \s-1FILE\s0" 4
.IX Item "NewAliasRelative FROM, FILE"
Returns a AliasHandle relative to \s-1FROM\s0 for the file.
.IP "NewAliasMinimal \s-1FILE\s0" 4
.IX Item "NewAliasMinimal FILE"
Returns an AliasHandle containing minimal information for the file.
This type of alias is best suited for short lived aliases, e.g. in
AppleEvents.
.IP "NewAliasMinimalFromFullPath \s-1NAME\s0 [, \s-1ZONE\s0 [, \s-1SERVER\s0]]" 4
.IX Item "NewAliasMinimalFromFullPath NAME [, ZONE [, SERVER]]"
Create a new alias containing only the path name.
.IP "UpdateAlias \s-1TARGET\s0, \s-1ALIAS\s0" 4
.IX Item "UpdateAlias TARGET, ALIAS"
Updates an alias to point to the target file. Returns whether the alias was changed..
.IP "UpdateAliasRelative \s-1FROM\s0, \s-1TARGET\s0, \s-1ALIAS\s0" 4
.IX Item "UpdateAliasRelative FROM, TARGET, ALIAS"
Updates an alias to point to the target file relative to \s-1FROM\s0. Returns whether 
the alias was changed..
.IP "ResolveAlias \s-1ALIAS\s0" 4
.IX Item "ResolveAlias ALIAS"
Resolves an alias. In scalar context, returns the path to the resolved file.
In list context, also returns whether the alias was changed when resolving.
.IP "ResolveAliasRelative \s-1FROM\s0, \s-1ALIAS\s0" 4
.IX Item "ResolveAliasRelative FROM, ALIAS"
Resolves an alias relative to a file. In scalar context, returns the path to the 
resolved file. In list context, also returns whether the alias was changed when 
resolving.
.IP "GetAliasInfo \s-1ALIAS\s0, \s-1INDEX\s0" 4
.IX Item "GetAliasInfo ALIAS, INDEX"
Return a component of the alias information.
.IP "UnmountVol (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "UnmountVol (VOLUMENAME | VOLUMENR)"
Unmounts a volume.
.IP "Eject (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "Eject (VOLUMENAME | VOLUMENR)"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Ejects a volume, placing it offline.
.IP "FlushVol (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "FlushVol (VOLUMENAME | VOLUMENR)"
Flush pending write operations on a volume.
.IP "FindFolder \s-1VREF\s0, \s-1FOLDERTYPE\s0 [, \s-1CREATE\s0]" 4
.IX Item "FindFolder VREF, FOLDERTYPE [, CREATE]"
Returns a path to a special folder on the given volume (specify 
\&\f(CW\*(C`kOnSystemDisk\*(C'\fR for the boot volume). For \s-1FOLDERTYPE\s0, you can specify
any of the \f(CW\*(C`kXXXFolderType\*(C'\fR constants listed above.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Files5.18.3pm                           0100644 0001750 0001750 00000105167 12566241347 023500  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Files 3"
.TH Files 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Files \- Macintosh Toolbox Interface to the File and Alias Manager
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Constants"
.IX Subsection "Constants"
Constants for file access permissions.  Use these constants to request a
type of access to a file or fork, or to deny a type of access to a file
or fork to other paths that may request access.
.PP
Note that it is possible, on Mac \s-1OS 8\s0 and 9, to open a file residing on
read-only media with write access. On Mac \s-1OS X,\s0 however, you cannot open
a file with write access on read-only media; the attempt to open the
file fails with a wrPermErr error.
.IP "fsCurPerm" 4
.IX Item "fsCurPerm"
Requests whatever permissions are currently allowed. If write access is unavailable (because the file is locked or the file is already open with write permission), then read permission is granted. Otherwise read/write permission is granted.
.IP "fsRdPerm" 4
.IX Item "fsRdPerm"
Requests permission to read the file.
.IP "fsWrPerm" 4
.IX Item "fsWrPerm"
Requests permission to write to the file. If write permission is granted, no other access paths are granted write permission. Note, however, that the File Manager does not support write-only access to a file. Thus, fsWrPerm is synonymous with fsRdWrPerm.
.IP "fsRdWrPerm" 4
.IX Item "fsRdWrPerm"
Requests exclusive read and write permission. If exclusive read/write permission is granted, no other users are granted permission to write to the file. Other users may, however, be granted permission to read the file.
.IP "fsRdWrShPerm" 4
.IX Item "fsRdWrShPerm"
Requests shared read and write permission. Shared read/write permission allows mutliple access paths for reading and writing. This is safe only if there is some way of locking portions of the file before writing to them. Use the functions PBLockRangeSync and PBUnlockRangeSync to lock and unlock ranges of bytes within a file. On Mac \s-1OS 8\s0 and 9, these functions are supported only on remotely mounted volumes, or on local volumes that are shareable on the network. You should check that range locking is available before requesting shared read/ write permission. On Mac \s-1OS X,\s0 range locking is available on all volumes.
.IP "fsRdDenyPerm" 4
.IX Item "fsRdDenyPerm"
Requests that any other paths be prevented from having read access. A path cannot be opened if you request read permission (with the fsRdPerm constant) but some other path has requested deny-read access. Similarly, the path cannot be opened if you request deny-read permission, but some other path already has read access. This constant is used with the PBHOpenDenySync and PBHOpenRFDenySync functions.
.IP "fsWrDenyPerm" 4
.IX Item "fsWrDenyPerm"
Requests that any other paths be prevented from having write access. A path cannot be opened if you request write permission (with the fsWrPerm constant) but some other path has requested deny-write access. Similarly, the path cannot be opened if you request deny-write permission, but some other path already has write access. This constant is used with the PBHOpenDenySync and PBHOpenRFDenySync functions.
.PP
ioFlAttrib bits, returned by FSpGetCatInfo.
.IP "kioFlAttribLocked" 4
.IX Item "kioFlAttribLocked"
Set if file or directory is locked
.IP "kioFlAttribResOpen" 4
.IX Item "kioFlAttribResOpen"
Set if resource fork is open
.IP "kioFlAttribDataOpen" 4
.IX Item "kioFlAttribDataOpen"
Set if data fork is open
.IP "kioFlAttribDir" 4
.IX Item "kioFlAttribDir"
Set if this is a directory
.IP "kioFlAttribCopyProt" 4
.IX Item "kioFlAttribCopyProt"
Set if AppleShare server \*(L"copy-protects\*(R" the file
.IP "kioFlAttribFileOpen" 4
.IX Item "kioFlAttribFileOpen"
Set if file (either fork) is open
.IP "kioFlAttribInShared" 4
.IX Item "kioFlAttribInShared"
Set if the directory is within a shared area of the directory hierarchy
.IP "kioFlAttribMounted" 4
.IX Item "kioFlAttribMounted"
Set if the directory is a share point that is mounted by some user
.IP "kioFlAttribSharePoint" 4
.IX Item "kioFlAttribSharePoint"
Set if the directory is a share point
.PP
Finder flags
.IP "kIsOnDesk" 4
.IX Item "kIsOnDesk"
Files and folders (System 6)
.IP "kColor" 4
.IX Item "kColor"
Files and folders; bit 0x0020 was kRequireSwitchLaunch, but is now reserved for future use
.IP "kIsShared" 4
.IX Item "kIsShared"
Files only (Applications only); if clear, the application needs to write to its resource fork, and therefore cannot be shared on a server
.IP "kHasNoINITs" 4
.IX Item "kHasNoINITs"
Files only (Extensions/Control Panels only); this file contains no \s-1INIT\s0 resource
.IP "kHasBeenInited" 4
.IX Item "kHasBeenInited"
Files only; clear if the file contains desktop database; resources ('\s-1BNDL\s0', '\s-1FREF\s0', 'open', 'kind'...) that have not been added yet. Set only by the Finder; reserved for folders \- make sure this bit is cleared for folders; bit 0x0200 was the letter bit for \s-1AOCE,\s0 but is now reserved for future use
.IP "kHasCustomIcon" 4
.IX Item "kHasCustomIcon"
Files and folders
.IP "kIsStationery" 4
.IX Item "kIsStationery"
Files only
.IP "kNameLocked" 4
.IX Item "kNameLocked"
Files and folders
.IP "kHasBundle" 4
.IX Item "kHasBundle"
Files only
.IP "kIsInvisible" 4
.IX Item "kIsInvisible"
Files and folders
.IP "kIsAlias" 4
.IX Item "kIsAlias"
Files only
.PP
AppleTalk/GetAliasInfo Constants
.IP "asiZoneName" 4
.IX Item "asiZoneName"
Return AppleTalk zone name from GetAliasInfo.
.IP "asiServerName" 4
.IX Item "asiServerName"
Return AppleTalk server name from GetAliasInfo.
.IP "asiVolumeName" 4
.IX Item "asiVolumeName"
Return volume name from GetAliasInfo.
.IP "asiAliasName" 4
.IX Item "asiAliasName"
Return last component of target file name from GetAliasInfo.
.IP "asiParentName" 4
.IX Item "asiParentName"
Return name of enclosing folder from GetAliasInfo. This index value is 1.  Higher indices will return folder names higher up the hierarchy.
.PP
Folder type constants.  Specify a type of folder on a particular volume.
Use in vRefNum parameter of \fIFindFolder()\fR.
.IP "kOnSystemDisk" 4
.IX Item "kOnSystemDisk"
previously was 0x8000 but that is an unsigned value whereas vRefNum is signed
.IP "kOnAppropriateDisk" 4
.IX Item "kOnAppropriateDisk"
Generally, the same as kOnSystemDisk, but it's clearer that this isn't always the 'boot' disk.
.PP
Folder Domains \- Carbon only.  The constants above can continue to be used,
but the folder/volume returned will be from one of the domains below.
.IP "kSystemDomain" 4
.IX Item "kSystemDomain"
Read-only system hierarchy.
.IP "kLocalDomain" 4
.IX Item "kLocalDomain"
All users of a single machine have access to these resources.
.IP "kNetworkDomain" 4
.IX Item "kNetworkDomain"
All users configured to use a common network server has access to these resources.
.IP "kUserDomain" 4
.IX Item "kUserDomain"
Read/write. Resources that are private to the user.
.IP "kClassicDomain" 4
.IX Item "kClassicDomain"
Domain referring to the currently configured Classic System Folder
.IP "kLastDomainConstant" 4
.IX Item "kLastDomainConstant"
The \s-1ID\s0 of the last domain in the above list, used by the Folder Manager to determine if a given parameter should be treated as a domain or a volume...
.PP
Constants for createFolder parameter of \fIFindFolder()\fR.
.IP "kCreateFolder" 4
.IX Item "kCreateFolder"
.PD 0
.IP "kDontCreateFolder" 4
.IX Item "kDontCreateFolder"
.PD
.PP
Folder Type Constants for \fIFindFolder()\fR.
.IP "kSystemFolderType" 4
.IX Item "kSystemFolderType"
the system folder
.IP "kDesktopFolderType" 4
.IX Item "kDesktopFolderType"
the desktop folder; objects in this folder show on the desk top.
.IP "kSystemDesktopFolderType" 4
.IX Item "kSystemDesktopFolderType"
the desktop folder at the root of the hard drive, never the redirected user desktop folder
.IP "kTrashFolderType" 4
.IX Item "kTrashFolderType"
the trash folder; objects in this folder show up in the trash
.IP "kSystemTrashFolderType" 4
.IX Item "kSystemTrashFolderType"
the trash folder at the root of the drive, never the redirected user trash folder
.IP "kWhereToEmptyTrashFolderType" 4
.IX Item "kWhereToEmptyTrashFolderType"
the \*(L"empty trash\*(R" folder; Finder starts empty from here down
.IP "kPrintMonitorDocsFolderType" 4
.IX Item "kPrintMonitorDocsFolderType"
Print Monitor documents
.IP "kStartupFolderType" 4
.IX Item "kStartupFolderType"
Finder objects (applications, documents, DAs, aliases, to...) to open at startup go here
.IP "kShutdownFolderType" 4
.IX Item "kShutdownFolderType"
Finder objects (applications, documents, DAs, aliases, to...) to open at shutdown go here
.IP "kAppleMenuFolderType" 4
.IX Item "kAppleMenuFolderType"
Finder objects to put into the Apple menu go here
.IP "kControlPanelFolderType" 4
.IX Item "kControlPanelFolderType"
Control Panels go here (may contain INITs)
.IP "kSystemControlPanelFolderType" 4
.IX Item "kSystemControlPanelFolderType"
System control panels folder \- never the redirected one, always \*(L"Control Panels\*(R" inside the System Folder
.IP "kExtensionFolderType" 4
.IX Item "kExtensionFolderType"
System extensions go here
.IP "kFontsFolderType" 4
.IX Item "kFontsFolderType"
Fonts go here
.IP "kPreferencesFolderType" 4
.IX Item "kPreferencesFolderType"
preferences for applications go here
.IP "kSystemPreferencesFolderType" 4
.IX Item "kSystemPreferencesFolderType"
System-type Preferences go here \- this is always the system's preferences folder, never a logged in user's
.IP "kTemporaryFolderType" 4
.IX Item "kTemporaryFolderType"
temporary files go here (deleted periodically, but don't rely on it.)
.IP "kExtensionDisabledFolderType" 4
.IX Item "kExtensionDisabledFolderType"
.PD 0
.IP "kControlPanelDisabledFolderType" 4
.IX Item "kControlPanelDisabledFolderType"
.IP "kSystemExtensionDisabledFolderType" 4
.IX Item "kSystemExtensionDisabledFolderType"
.IP "kStartupItemsDisabledFolderType" 4
.IX Item "kStartupItemsDisabledFolderType"
.IP "kShutdownItemsDisabledFolderType" 4
.IX Item "kShutdownItemsDisabledFolderType"
.IP "kApplicationsFolderType" 4
.IX Item "kApplicationsFolderType"
.IP "kDocumentsFolderType" 4
.IX Item "kDocumentsFolderType"
.PD
.PP
New Constants
.IP "kVolumeRootFolderType" 4
.IX Item "kVolumeRootFolderType"
root folder of a volume
.IP "kChewableItemsFolderType" 4
.IX Item "kChewableItemsFolderType"
items deleted at boot
.IP "kApplicationSupportFolderType" 4
.IX Item "kApplicationSupportFolderType"
third-party items and folders
.IP "kTextEncodingsFolderType" 4
.IX Item "kTextEncodingsFolderType"
encoding tables
.IP "kStationeryFolderType" 4
.IX Item "kStationeryFolderType"
stationery
.IP "kOpenDocFolderType" 4
.IX Item "kOpenDocFolderType"
OpenDoc root
.IP "kOpenDocShellPlugInsFolderType" 4
.IX Item "kOpenDocShellPlugInsFolderType"
OpenDoc Shell Plug-Ins in OpenDoc folder
.IP "kEditorsFolderType" 4
.IX Item "kEditorsFolderType"
OpenDoc editors in Mac \s-1OS\s0 Folder
.IP "kOpenDocEditorsFolderType" 4
.IX Item "kOpenDocEditorsFolderType"
OpenDoc subfolder of Editors folder
.IP "kOpenDocLibrariesFolderType" 4
.IX Item "kOpenDocLibrariesFolderType"
OpenDoc libraries folder
.IP "kGenEditorsFolderType" 4
.IX Item "kGenEditorsFolderType"
\&\s-1CKH\s0 general editors folder at root level of Sys folder
.IP "kHelpFolderType" 4
.IX Item "kHelpFolderType"
\&\s-1CKH\s0 help folder currently at root of system folder
.IP "kInternetPlugInFolderType" 4
.IX Item "kInternetPlugInFolderType"
\&\s-1CKH\s0 internet plug ins for browsers and stuff
.IP "kModemScriptsFolderType" 4
.IX Item "kModemScriptsFolderType"
\&\s-1CKH\s0 modem scripts, get 'em \s-1OUT\s0 of the Extensions folder
.IP "kPrinterDescriptionFolderType" 4
.IX Item "kPrinterDescriptionFolderType"
\&\s-1CKH\s0 new folder at root of System folder for printer descs.
.IP "kPrinterDriverFolderType" 4
.IX Item "kPrinterDriverFolderType"
\&\s-1CKH\s0 new folder at root of System folder for printer drivers
.IP "kScriptingAdditionsFolderType" 4
.IX Item "kScriptingAdditionsFolderType"
\&\s-1CKH\s0 at root of system folder
.IP "kSharedLibrariesFolderType" 4
.IX Item "kSharedLibrariesFolderType"
\&\s-1CKH\s0 for general shared libs.
.IP "kVoicesFolderType" 4
.IX Item "kVoicesFolderType"
\&\s-1CKH\s0 macintalk can live here
.IP "kControlStripModulesFolderType" 4
.IX Item "kControlStripModulesFolderType"
\&\s-1CKH\s0 for control strip modules
.IP "kAssistantsFolderType" 4
.IX Item "kAssistantsFolderType"
\&\s-1SJF\s0 for Assistants (Mac \s-1OS\s0 Setup Assistant, etc)
.IP "kUtilitiesFolderType" 4
.IX Item "kUtilitiesFolderType"
\&\s-1SJF\s0 for Utilities folder
.IP "kAppleExtrasFolderType" 4
.IX Item "kAppleExtrasFolderType"
\&\s-1SJF\s0 for Apple Extras folder
.IP "kContextualMenuItemsFolderType" 4
.IX Item "kContextualMenuItemsFolderType"
\&\s-1SJF\s0 for Contextual Menu items
.IP "kMacOSReadMesFolderType" 4
.IX Item "kMacOSReadMesFolderType"
\&\s-1SJF\s0 for Mac \s-1OS\s0 ReadMes folder
.IP "kALMModulesFolderType" 4
.IX Item "kALMModulesFolderType"
\&\s-1EAS\s0 for Location Manager Module files except type 'thng' (within kExtensionFolderType)
.IP "kALMPreferencesFolderType" 4
.IX Item "kALMPreferencesFolderType"
\&\s-1EAS\s0 for Location Manager Preferences (within kPreferencesFolderType; contains kALMLocationsFolderType)
.IP "kALMLocationsFolderType" 4
.IX Item "kALMLocationsFolderType"
\&\s-1EAS\s0 for Location Manager Locations (within kALMPreferencesFolderType)
.IP "kColorSyncProfilesFolderType" 4
.IX Item "kColorSyncProfilesFolderType"
for ColorSync Profiles
.IP "kThemesFolderType" 4
.IX Item "kThemesFolderType"
for Theme data files
.IP "kFavoritesFolderType" 4
.IX Item "kFavoritesFolderType"
Favorties folder for Navigation Services
.IP "kInternetFolderType" 4
.IX Item "kInternetFolderType"
Internet folder (root level of startup volume)
.IP "kAppearanceFolderType" 4
.IX Item "kAppearanceFolderType"
Appearance folder (root of system folder)
.IP "kSoundSetsFolderType" 4
.IX Item "kSoundSetsFolderType"
Sound Sets folder (in Appearance folder)
.IP "kDesktopPicturesFolderType" 4
.IX Item "kDesktopPicturesFolderType"
Desktop Pictures folder (in Appearance folder)
.IP "kInternetSearchSitesFolderType" 4
.IX Item "kInternetSearchSitesFolderType"
Internet Search Sites folder
.IP "kFindSupportFolderType" 4
.IX Item "kFindSupportFolderType"
Find support folder
.IP "kFindByContentFolderType" 4
.IX Item "kFindByContentFolderType"
Find by content folder
.IP "kInstallerLogsFolderType" 4
.IX Item "kInstallerLogsFolderType"
Installer Logs folder
.IP "kScriptsFolderType" 4
.IX Item "kScriptsFolderType"
Scripts folder
.IP "kFolderActionsFolderType" 4
.IX Item "kFolderActionsFolderType"
Folder Actions Scripts folder
.IP "kLauncherItemsFolderType" 4
.IX Item "kLauncherItemsFolderType"
Launcher Items folder
.IP "kRecentApplicationsFolderType" 4
.IX Item "kRecentApplicationsFolderType"
Recent Applications folder
.IP "kRecentDocumentsFolderType" 4
.IX Item "kRecentDocumentsFolderType"
Recent Documents folder
.IP "kRecentServersFolderType" 4
.IX Item "kRecentServersFolderType"
Recent Servers folder
.IP "kSpeakableItemsFolderType" 4
.IX Item "kSpeakableItemsFolderType"
Speakable Items folder
.IP "kKeychainFolderType" 4
.IX Item "kKeychainFolderType"
Keychain folder
.IP "kQuickTimeExtensionsFolderType" 4
.IX Item "kQuickTimeExtensionsFolderType"
QuickTime Extensions Folder (in Extensions folder)
.IP "kDisplayExtensionsFolderType" 4
.IX Item "kDisplayExtensionsFolderType"
Display Extensions Folder (in Extensions folder)
.IP "kMultiprocessingFolderType" 4
.IX Item "kMultiprocessingFolderType"
Multiprocessing Folder (in Extensions folder)
.IP "kPrintingPlugInsFolderType" 4
.IX Item "kPrintingPlugInsFolderType"
Printing Plug-Ins Folder (in Extensions folder)
.PP
New Folder Types to accommodate the Mac \s-1OS X\s0 Folder Manager
These folder types are not applicable on Mac \s-1OS 9.\s0
.IP "kDomainTopLevelFolderType" 4
.IX Item "kDomainTopLevelFolderType"
The top-level of a Folder domain, e.g. \*(L"/System\*(R"
.IP "kDomainLibraryFolderType" 4
.IX Item "kDomainLibraryFolderType"
the Library subfolder of a particular domain
.IP "kColorSyncFolderType" 4
.IX Item "kColorSyncFolderType"
Contains ColorSync-related folders
.IP "kColorSyncCMMFolderType" 4
.IX Item "kColorSyncCMMFolderType"
ColorSync CMMs
.IP "kColorSyncScriptingFolderType" 4
.IX Item "kColorSyncScriptingFolderType"
ColorSync Scripting support
.IP "kPrintersFolderType" 4
.IX Item "kPrintersFolderType"
Contains Printing-related folders
.IP "kSpeechFolderType" 4
.IX Item "kSpeechFolderType"
Contains Speech-related folders
.IP "kCarbonLibraryFolderType" 4
.IX Item "kCarbonLibraryFolderType"
Contains Carbon-specific file
.IP "kDocumentationFolderType" 4
.IX Item "kDocumentationFolderType"
Contains Documentation files (not user documents)
.IP "kDeveloperDocsFolderType" 4
.IX Item "kDeveloperDocsFolderType"
Contains Developer Documentation files and folders
.IP "kDeveloperHelpFolderType" 4
.IX Item "kDeveloperHelpFolderType"
Contains Developer Help related files
.IP "kISSDownloadsFolderType" 4
.IX Item "kISSDownloadsFolderType"
Contains Internet Search Sites downloaded from the Internet
.IP "kUserSpecificTmpFolderType" 4
.IX Item "kUserSpecificTmpFolderType"
Contains temporary items created on behalf of the current user
.IP "kCachedDataFolderType" 4
.IX Item "kCachedDataFolderType"
Contains various cache files for different clients
.IP "kFrameworksFolderType" 4
.IX Item "kFrameworksFolderType"
Contains Mac \s-1OS X\s0 Framework folders
.IP "kPrivateFrameworksFolderType" 4
.IX Item "kPrivateFrameworksFolderType"
Contains Mac \s-1OS X\s0 Private Framework folders
.IP "kClassicDesktopFolderType" 4
.IX Item "kClassicDesktopFolderType"
Mac \s-1OS 9\s0 compatible desktop folder \- same as kSystemDesktopFolderType but with a more appropriate name for Mac \s-1OS X\s0 code.
.IP "kDeveloperFolderType" 4
.IX Item "kDeveloperFolderType"
Contains Mac \s-1OS X\s0 Developer Resources
.IP "kSystemSoundsFolderType" 4
.IX Item "kSystemSoundsFolderType"
Contains Mac \s-1OS X\s0 System Sound Files
.IP "kComponentsFolderType" 4
.IX Item "kComponentsFolderType"
Contains Mac \s-1OS X\s0 components
.IP "kQuickTimeComponentsFolderType" 4
.IX Item "kQuickTimeComponentsFolderType"
Contains QuickTime components for Mac \s-1OS X\s0
.IP "kCoreServicesFolderType" 4
.IX Item "kCoreServicesFolderType"
Refers to the \*(L"CoreServices\*(R" folder on Mac \s-1OS X\s0
.IP "kPictureDocumentsFolderType" 4
.IX Item "kPictureDocumentsFolderType"
Refers to the \*(L"Pictures\*(R" folder in a users home directory
.IP "kMovieDocumentsFolderType" 4
.IX Item "kMovieDocumentsFolderType"
Refers to the \*(L"Movies\*(R" folder in a users home directory
.IP "kMusicDocumentsFolderType" 4
.IX Item "kMusicDocumentsFolderType"
Refers to the \*(L"Music\*(R" folder in a users home directory
.IP "kInternetSitesFolderType" 4
.IX Item "kInternetSitesFolderType"
Refers to the \*(L"Sites\*(R" folder in a users home directory
.IP "kPublicFolderType" 4
.IX Item "kPublicFolderType"
Refers to the \*(L"Public\*(R" folder in a users home directory
.IP "kAudioSupportFolderType" 4
.IX Item "kAudioSupportFolderType"
Refers to the Audio support folder for Mac \s-1OS X\s0
.IP "kAudioSoundsFolderType" 4
.IX Item "kAudioSoundsFolderType"
Refers to the Sounds subfolder of Audio Support
.IP "kAudioSoundBanksFolderType" 4
.IX Item "kAudioSoundBanksFolderType"
Refers to the Banks subfolder of the Sounds Folder
.IP "kAudioAlertSoundsFolderType" 4
.IX Item "kAudioAlertSoundsFolderType"
Refers to the Alert Sounds subfolder of the Sound Folder
.IP "kAudioPlugInsFolderType" 4
.IX Item "kAudioPlugInsFolderType"
Refers to the Plug-ins subfolder of the Audio Folder
.IP "kAudioComponentsFolderType" 4
.IX Item "kAudioComponentsFolderType"
Refers to the Components subfolder of the Audio Plug-ins Folder
.IP "kKernelExtensionsFolderType" 4
.IX Item "kKernelExtensionsFolderType"
Refers to the Kernel Extensions Folder on Mac \s-1OS X\s0
.IP "kDirectoryServicesFolderType" 4
.IX Item "kDirectoryServicesFolderType"
Refers to the Directory Services folder on Mac \s-1OS X\s0
.IP "kDirectoryServicesPlugInsFolderType" 4
.IX Item "kDirectoryServicesPlugInsFolderType"
Refers to the Directory Services Plug-Ins folder on Mac \s-1OS X\s0
.IP "kInstallerReceiptsFolderType" 4
.IX Item "kInstallerReceiptsFolderType"
Refers to the \*(L"Receipts\*(R" folder in Mac \s-1OS X\s0
.IP "kFileSystemSupportFolderType" 4
.IX Item "kFileSystemSupportFolderType"
Refers to the [domain]/Library/Filesystems folder in Mac \s-1OS X\s0
.IP "kAppleShareSupportFolderType" 4
.IX Item "kAppleShareSupportFolderType"
Refers to the [domain]/Library/Filesystems/AppleShare folder in Mac \s-1OS X\s0
.IP "kAppleShareAuthenticationFolderType" 4
.IX Item "kAppleShareAuthenticationFolderType"
Refers to the [domain]/Library/Filesystems/AppleShare/Authentication folder in Mac \s-1OS X\s0
.IP "kMIDIDriversFolderType" 4
.IX Item "kMIDIDriversFolderType"
Refers to the \s-1MIDI\s0 Drivers folder on Mac \s-1OS X\s0
.IP "kKeyboardLayoutsFolderType" 4
.IX Item "kKeyboardLayoutsFolderType"
Refers to the [domain]/Library/KeyboardLayouts folder in Mac \s-1OS X\s0
.IP "kIndexFilesFolderType" 4
.IX Item "kIndexFilesFolderType"
Refers to the [domain]/Library/Indexes folder in Mac \s-1OS X\s0
.IP "kFindByContentIndexesFolderType" 4
.IX Item "kFindByContentIndexesFolderType"
Refers to the [domain]/Library/Indexes/FindByContent folder in Mac \s-1OS X\s0
.IP "kManagedItemsFolderType" 4
.IX Item "kManagedItemsFolderType"
Refers to the Managed Items folder for Mac \s-1OS X\s0
.IP "kBootTimeStartupItemsFolderType" 4
.IX Item "kBootTimeStartupItemsFolderType"
Refers to the \*(L"StartupItems\*(R" folder of Mac \s-1OS X\s0
.PP
More Folder Constants
.IP "kLocalesFolderType" 4
.IX Item "kLocalesFolderType"
\&\s-1PKE\s0 for Locales folder
.IP "kFindByContentPluginsFolderType" 4
.IX Item "kFindByContentPluginsFolderType"
Find By Content Plug-ins
.IP "kUsersFolderType" 4
.IX Item "kUsersFolderType"
\&\*(L"Users\*(R" folder, contains one folder for each user.
.IP "kCurrentUserFolderType" 4
.IX Item "kCurrentUserFolderType"
The folder for the currently logged on user.
.IP "kCurrentUserRemoteFolderLocation" 4
.IX Item "kCurrentUserRemoteFolderLocation"
The remote folder for the currently logged on user
.IP "kCurrentUserRemoteFolderType" 4
.IX Item "kCurrentUserRemoteFolderType"
The remote folder location for the currently logged on user
.IP "kSharedUserDataFolderType" 4
.IX Item "kSharedUserDataFolderType"
A Shared \*(L"Documents\*(R" folder, readable & writeable by all users
.IP "kVolumeSettingsFolderType" 4
.IX Item "kVolumeSettingsFolderType"
Volume specific user information goes here
.IP "kAppleshareAutomountServerAliasesFolderType" 4
.IX Item "kAppleshareAutomountServerAliasesFolderType"
Appleshare puts volumes to automount inside this folder.
.IP "kPreMacOS91ApplicationsFolderType" 4
.IX Item "kPreMacOS91ApplicationsFolderType"
The \*(L"Applications\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91InstallerLogsFolderType" 4
.IX Item "kPreMacOS91InstallerLogsFolderType"
The \*(L"Installer Logs\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91AssistantsFolderType" 4
.IX Item "kPreMacOS91AssistantsFolderType"
The \*(L"Assistants\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91UtilitiesFolderType" 4
.IX Item "kPreMacOS91UtilitiesFolderType"
The \*(L"Utilities\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91AppleExtrasFolderType" 4
.IX Item "kPreMacOS91AppleExtrasFolderType"
The \*(L"Apple Extras\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91MacOSReadMesFolderType" 4
.IX Item "kPreMacOS91MacOSReadMesFolderType"
The \*(L"Mac \s-1OS\s0 ReadMes\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91InternetFolderType" 4
.IX Item "kPreMacOS91InternetFolderType"
The \*(L"Internet\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91AutomountedServersFolderType" 4
.IX Item "kPreMacOS91AutomountedServersFolderType"
The \*(L"Servers\*(R" folder, pre Mac \s-1OS 9.1\s0
.IP "kPreMacOS91StationeryFolderType" 4
.IX Item "kPreMacOS91StationeryFolderType"
The \*(L"Stationery\*(R" folder, pre Mac \s-1OS 9.1\s0
.SS "Types"
.IX Subsection "Types"
.IP "FInfo" 4
.IX Item "FInfo"
Information for a file, including:
.Sp
.Vb 4
\&    OSType     fdType            the type of the file
\&    OSType     fdCreator         file\*(Aqs creator
\&    U16        fdFlags           flags ex. hasbundle,invisible,locked, etc.
\&    Point      fdLocation        file\*(Aqs location in folder
.Ve
.IP "FXInfo" 4
.IX Item "FXInfo"
Further information for a file, including:
.Sp
.Vb 5
\&    short      fdIconID          Icon ID
\&    I8         fdScript          Script flag and number
\&    I8         fdXFlags          More flag bits
\&    short      fdComment         Comment ID
\&    long       fdPutAway         Home Dir ID
.Ve
.IP "DInfo" 4
.IX Item "DInfo"
Information for a directory, including:
.Sp
.Vb 4
\&    Rect       frRect            folder rect
\&    U16        frFlags           Flags
\&    Point      frLocation        folder location
\&    short      frView            folder view
.Ve
.IP "DXInfo" 4
.IX Item "DXInfo"
Further information for a directory, including:
.Sp
.Vb 6
\&    Point      frScroll          scroll position
\&    long       frOpenChain       DirID chain of open folders
\&    I8         frScript          Script flag and number
\&    I8         frXFlags          More flag bits
\&    short      frComment         comment
\&    long       frPutAway         DirID
.Ve
.IP "CatInfo" 4
.IX Item "CatInfo"
Catalog information of a file or a directory, including:
.Sp
.Vb 10
\&    Str255     ioNamePtr         ptr to Vol:FileName string
\&    short      ioVRefNum         volume refnum (DrvNum for Eject and MountVol)
\&    short      ioFRefNum         reference number
\&    I8         ioFVersNum        version number
\&    short      ioFDirIndex       GetFInfo directory index
\&    I8         ioFlAttrib        GetFInfo: in\-use bit=7, lock bit=0
\&    I8         ioACUser          access rights for directory only
\&    FInfo      ioFlFndrInfo      user info
\&    long       ioDirID           A directory ID
\&    U16        ioFlStBlk         start file block (0 if none)
\&    long       ioFlLgLen         logical length (EOF)
\&    long       ioFlPyLen         physical length
\&    U16        ioFlRStBlk        start block rsrc fork
\&    long       ioFlRLgLen        file logical length rsrc fork
\&    long       ioFlRPyLen        file physical length rsrc fork
\&    time_t     ioFlCrDat         file creation date& time
\&    time_t     ioFlMdDat         last modified date and time
\&    time_t     ioFlBkDat         
\&    FXInfo     ioFlXFndrInfo     
\&    long       ioFlParID         
\&    long       ioFlClpSiz        
\&    DInfo      ioDrUsrWds        
\&    long       ioDrDirID         
\&    U16        ioDrNmFls         
\&    time_t     ioDrCrDat         
\&    time_t     ioDrMdDat         
\&    time_t     ioDrBkDat         
\&    DXInfo     ioDrFndrInfo      
\&    long       ioDrParID
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "FSpGetCatInfo \s-1FILE\s0 [, \s-1INDEX \s0]" 4
.IX Item "FSpGetCatInfo FILE [, INDEX ]"
If \s-1INDEX\s0 is omitted or 0, returns information about the specified 
file or folder. If \s-1INDEX\s0 is nonzero, returns information obout the 
nth item in the specified folder.
.IP "FSpSetCatInfo \s-1FILE, INFO\s0" 4
.IX Item "FSpSetCatInfo FILE, INFO"
Change information about the specified file.
.IP "FSMakeFSSpec \s-1VREF, DIRID, NAME\s0" 4
.IX Item "FSMakeFSSpec VREF, DIRID, NAME"
Creates a file system specification record from a volume number, 
directory \s-1ID,\s0 and name. This call never returns a path name.
.IP "FSpCreate \s-1FILE, CREATOR, TYPE\s0 [, \s-1SCRIPTTAG\s0]" 4
.IX Item "FSpCreate FILE, CREATOR, TYPE [, SCRIPTTAG]"
Creates a file with the specified file creator and type. You don't
want to know what a script tag is.
.IP "FSpDirCreate \s-1FILE\s0 [, \s-1SCRIPTTAG\s0]" 4
.IX Item "FSpDirCreate FILE [, SCRIPTTAG]"
Creates a directory and returns its \s-1ID.\s0
.IP "FSpDelete \s-1FILE\s0" 4
.IX Item "FSpDelete FILE"
End the sad existence of a file or (empty) folder.
.IP "FSpGetFInfo \s-1FILE\s0" 4
.IX Item "FSpGetFInfo FILE"
Returns finder info about a specified file.
.IP "FSpSetFInfo \s-1FILE, INFO\s0" 4
.IX Item "FSpSetFInfo FILE, INFO"
Changes the finder info about a specified file.
.IP "FSpSetFLock \s-1FILE\s0" 4
.IX Item "FSpSetFLock FILE"
Software lock a file.
.IP "FSpRstFLock \s-1FILE\s0" 4
.IX Item "FSpRstFLock FILE"
Unlock a file.
.IP "FSpRename \s-1FILE, NAME\s0" 4
.IX Item "FSpRename FILE, NAME"
Rename a file (only the name component).
.IP "FSpCatMove \s-1FILE, FOLDER\s0" 4
.IX Item "FSpCatMove FILE, FOLDER"
Move a file into a different folder.
.IP "FSpExchangeFiles \s-1FILE1, FILE2\s0" 4
.IX Item "FSpExchangeFiles FILE1, FILE2"
Swap the contents of two files, e.g. if you saved to a temp file
and finally swap it with the original.
.IP "NewAlias \s-1FILE\s0" 4
.IX Item "NewAlias FILE"
Returns an AliasHandle for the file.
.IP "NewAliasRelative \s-1FROM, FILE\s0" 4
.IX Item "NewAliasRelative FROM, FILE"
Returns a AliasHandle relative to \s-1FROM\s0 for the file.
.IP "NewAliasMinimal \s-1FILE\s0" 4
.IX Item "NewAliasMinimal FILE"
Returns an AliasHandle containing minimal information for the file.
This type of alias is best suited for short lived aliases, e.g. in
AppleEvents.
.IP "NewAliasMinimalFromFullPath \s-1NAME\s0 [, \s-1ZONE\s0 [, \s-1SERVER\s0]]" 4
.IX Item "NewAliasMinimalFromFullPath NAME [, ZONE [, SERVER]]"
Create a new alias containing only the path name.
.IP "UpdateAlias \s-1TARGET, ALIAS\s0" 4
.IX Item "UpdateAlias TARGET, ALIAS"
Updates an alias to point to the target file. Returns whether the alias was changed..
.IP "UpdateAliasRelative \s-1FROM, TARGET, ALIAS\s0" 4
.IX Item "UpdateAliasRelative FROM, TARGET, ALIAS"
Updates an alias to point to the target file relative to \s-1FROM.\s0 Returns whether 
the alias was changed..
.IP "ResolveAlias \s-1ALIAS\s0" 4
.IX Item "ResolveAlias ALIAS"
Resolves an alias. In scalar context, returns the path to the resolved file.
In list context, also returns whether the alias was changed when resolving.
.IP "ResolveAliasRelative \s-1FROM, ALIAS\s0" 4
.IX Item "ResolveAliasRelative FROM, ALIAS"
Resolves an alias relative to a file. In scalar context, returns the path to the 
resolved file. In list context, also returns whether the alias was changed when 
resolving.
.IP "GetAliasInfo \s-1ALIAS, INDEX\s0" 4
.IX Item "GetAliasInfo ALIAS, INDEX"
Return a component of the alias information.
.IP "UnmountVol (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "UnmountVol (VOLUMENAME | VOLUMENR)"
Unmounts a volume.
.IP "Eject (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "Eject (VOLUMENAME | VOLUMENR)"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Ejects a volume, placing it offline.
.IP "FlushVol (\s-1VOLUMENAME\s0 | \s-1VOLUMENR\s0)" 4
.IX Item "FlushVol (VOLUMENAME | VOLUMENR)"
Flush pending write operations on a volume.
.IP "FindFolder \s-1VREF, FOLDERTYPE\s0 [, \s-1CREATE\s0]" 4
.IX Item "FindFolder VREF, FOLDERTYPE [, CREATE]"
Returns a path to a special folder on the given volume (specify 
\&\f(CW\*(C`kOnSystemDisk\*(C'\fR for the boot volume). For \s-1FOLDERTYPE,\s0 you can specify
any of the \f(CW\*(C`kXXXFolderType\*(C'\fR constants listed above.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Gestalt.3pm                             0100644 0001750 0001750 00000102640 12566241350 023510  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gestalt 3"
.TH Gestalt 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Gestalt \- Macintosh Toolbox Interface to the Gestalt Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        # Only bring in the names we want
\&        use Mac::Gestalt qw(%Gestalt gestaltAppleTalkVersion);
\&
\&        if ( $Gestalt{gestaltAppleTalkVersion} lt "58" ) {
\&                warn "Unable to use AppleTalk\en";
\&        }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can use the Gestalt function or the \f(CW%Gestalt\fR tied hash to obtain information about 
the operating environment. You specify what information you need by passing one of
the selector codes recognized by Gestalt.
.PP
There is a huge list of codes. Many of them return a bitmask, so to find out 
whether e.g. the Code Fragment Manager is present, you  write
.PP
.Vb 1
\&        $Gestalt{gestaltCFMAttr} & (1 << gestaltCFMPresent)
.Ve
.SS "Constants"
.IX Subsection "Constants"
.IP "gestaltAddressingModeAttr" 4
.IX Item "gestaltAddressingModeAttr"
.PD 0
.IP "gestalt32BitAddressing" 4
.IX Item "gestalt32BitAddressing"
.IP "gestalt32BitSysZone" 4
.IX Item "gestalt32BitSysZone"
.IP "gestalt32BitCapable" 4
.IX Item "gestalt32BitCapable"
.PD
Address mode.
.IP "gestaltAliasMgrAttr" 4
.IX Item "gestaltAliasMgrAttr"
.PD 0
.IP "gestaltAliasMgrPresent" 4
.IX Item "gestaltAliasMgrPresent"
.IP "gestaltAliasMgrSupportsRemoteAppletalk" 4
.IX Item "gestaltAliasMgrSupportsRemoteAppletalk"
.PD
Alias manager.
.IP "gestaltAppleTalkVersion" 4
.IX Item "gestaltAppleTalkVersion"
AppleTalk.
.IP "gestaltAUXVersion" 4
.IX Item "gestaltAUXVersion"
A/UX.
.IP "gestaltCloseViewAttr" 4
.IX Item "gestaltCloseViewAttr"
.PD 0
.IP "gestaltCloseViewEnabled" 4
.IX Item "gestaltCloseViewEnabled"
.IP "gestaltCloseViewDisplayMgrFriendly" 4
.IX Item "gestaltCloseViewDisplayMgrFriendly"
.PD
CloseView.
.IP "gestaltCFMAttr" 4
.IX Item "gestaltCFMAttr"
.PD 0
.IP "gestaltCFMPresent" 4
.IX Item "gestaltCFMPresent"
.PD
Code Fragment Manager.
.IP "gestaltColorMatchingAttr" 4
.IX Item "gestaltColorMatchingAttr"
.PD 0
.IP "gestaltHighLevelMatching" 4
.IX Item "gestaltHighLevelMatching"
.IP "gestaltColorMatchingLibLoaded" 4
.IX Item "gestaltColorMatchingLibLoaded"
.PD
ColorSync.
.IP "gestaltColorMatchingVersion" 4
.IX Item "gestaltColorMatchingVersion"
.PD 0
.IP "gestaltColorSync10" 4
.IX Item "gestaltColorSync10"
.IP "gestaltColorSync11" 4
.IX Item "gestaltColorSync11"
.IP "gestaltColorSync104" 4
.IX Item "gestaltColorSync104"
.IP "gestaltColorSync105" 4
.IX Item "gestaltColorSync105"
.PD
ColorSync version.
.IP "gestaltConnMgrAttr" 4
.IX Item "gestaltConnMgrAttr"
.PD 0
.IP "gestaltConnMgrPresent" 4
.IX Item "gestaltConnMgrPresent"
.IP "gestaltConnMgrCMSearchFix" 4
.IX Item "gestaltConnMgrCMSearchFix"
.IP "gestaltConnMgrErrorString" 4
.IX Item "gestaltConnMgrErrorString"
.IP "gestaltConnMgrMultiAsyncIO" 4
.IX Item "gestaltConnMgrMultiAsyncIO"
.PD
Communications toolbox connection manager.
.IP "gestaltComponentMgr" 4
.IX Item "gestaltComponentMgr"
Component manager.
.IP "gestaltColorPickerVersion" 4
.IX Item "gestaltColorPickerVersion"
.PD 0
.IP "gestaltColorPicker" 4
.IX Item "gestaltColorPicker"
.PD
Color picker.
.IP "gestaltNativeCPUtype" 4
.IX Item "gestaltNativeCPUtype"
.PD 0
.IP "gestaltCPU68000" 4
.IX Item "gestaltCPU68000"
.IP "gestaltCPU68010" 4
.IX Item "gestaltCPU68010"
.IP "gestaltCPU68020" 4
.IX Item "gestaltCPU68020"
.IP "gestaltCPU68030" 4
.IX Item "gestaltCPU68030"
.IP "gestaltCPU68040" 4
.IX Item "gestaltCPU68040"
.IP "gestaltCPU601" 4
.IX Item "gestaltCPU601"
.IP "gestaltCPU603" 4
.IX Item "gestaltCPU603"
.IP "gestaltCPU604" 4
.IX Item "gestaltCPU604"
.PD
\&\s-1CPU\s0 type.
.IP "gestaltCRMAttr" 4
.IX Item "gestaltCRMAttr"
.PD 0
.IP "gestaltCRMPresent" 4
.IX Item "gestaltCRMPresent"
.IP "gestaltCRMPersistentFix" 4
.IX Item "gestaltCRMPersistentFix"
.IP "gestaltCRMToolRsrcCalls" 4
.IX Item "gestaltCRMToolRsrcCalls"
.PD
Communications toolbox connection resource manager.
.IP "gestaltControlStripVersion" 4
.IX Item "gestaltControlStripVersion"
Control strip manager.
.IP "gestaltCTBVersion" 4
.IX Item "gestaltCTBVersion"
Communications toolbox.
.IP "gestaltDBAccessMgrAttr" 4
.IX Item "gestaltDBAccessMgrAttr"
.PD 0
.IP "gestaltDBAccessMgrPresent" 4
.IX Item "gestaltDBAccessMgrPresent"
.PD
Database access manager.
.IP "gestaltDictionaryMgrAttr" 4
.IX Item "gestaltDictionaryMgrAttr"
.PD 0
.IP "gestaltDictionaryMgrPresent" 4
.IX Item "gestaltDictionaryMgrPresent"
.PD
Dictionary manager.
.IP "gestaltDITLExtAttr" 4
.IX Item "gestaltDITLExtAttr"
.PD 0
.IP "gestaltDITLExtPresent" 4
.IX Item "gestaltDITLExtPresent"
.PD
Dialog manager extensions.
.IP "gestaltDisplayMgrAttr" 4
.IX Item "gestaltDisplayMgrAttr"
.PD 0
.IP "gestaltDisplayMgrPresent" 4
.IX Item "gestaltDisplayMgrPresent"
.IP "gestaltDisplayMgrCanSwitchMirrored" 4
.IX Item "gestaltDisplayMgrCanSwitchMirrored"
.IP "gestaltDisplayMgrSetDepthNotifies" 4
.IX Item "gestaltDisplayMgrSetDepthNotifies"
.PD
Display manager.
.IP "gestaltDisplayMgrVers" 4
.IX Item "gestaltDisplayMgrVers"
Display manager version.
.IP "gestaltDragMgrAttr" 4
.IX Item "gestaltDragMgrAttr"
.PD 0
.IP "gestaltDragMgrPresent" 4
.IX Item "gestaltDragMgrPresent"
.IP "gestaltDragMgrFloatingWind" 4
.IX Item "gestaltDragMgrFloatingWind"
.IP "gestaltPPCDragLibPresent" 4
.IX Item "gestaltPPCDragLibPresent"
.PD
Drag manager.
.IP "gestaltEasyAccessAttr" 4
.IX Item "gestaltEasyAccessAttr"
.PD 0
.IP "gestaltEasyAccessOff" 4
.IX Item "gestaltEasyAccessOff"
.IP "gestaltEasyAccessOn" 4
.IX Item "gestaltEasyAccessOn"
.IP "gestaltEasyAccessSticky" 4
.IX Item "gestaltEasyAccessSticky"
.IP "gestaltEasyAccessLocked" 4
.IX Item "gestaltEasyAccessLocked"
.PD
Easy access.
.IP "gestaltEditionMgrAttr" 4
.IX Item "gestaltEditionMgrAttr"
.PD 0
.IP "gestaltEditionMgrPresent" 4
.IX Item "gestaltEditionMgrPresent"
.IP "gestaltEditionMgrTranslationAware" 4
.IX Item "gestaltEditionMgrTranslationAware"
.PD
Edition manager.
.IP "gestaltAppleEventsAttr" 4
.IX Item "gestaltAppleEventsAttr"
.PD 0
.IP "gestaltAppleEventsPresent" 4
.IX Item "gestaltAppleEventsPresent"
.IP "gestaltScriptingSupport" 4
.IX Item "gestaltScriptingSupport"
.IP "gestaltOSLInSystem" 4
.IX Item "gestaltOSLInSystem"
.PD
AppleEvent manager.
.IP "gestaltFinderAttr" 4
.IX Item "gestaltFinderAttr"
.PD 0
.IP "gestaltFinderDropEvent" 4
.IX Item "gestaltFinderDropEvent"
.IP "gestaltFinderMagicPlacement" 4
.IX Item "gestaltFinderMagicPlacement"
.IP "gestaltFinderCallsAEProcess" 4
.IX Item "gestaltFinderCallsAEProcess"
.IP "gestaltOSLCompliantFinder" 4
.IX Item "gestaltOSLCompliantFinder"
.IP "gestaltFinderSupports4GBVolumes" 4
.IX Item "gestaltFinderSupports4GBVolumes"
.IP "gestaltFinderHasClippings" 4
.IX Item "gestaltFinderHasClippings"
.PD
Finder attributes.
.IP "gestaltFindFolderAttr" 4
.IX Item "gestaltFindFolderAttr"
.PD 0
.IP "gestaltFindFolderPresent" 4
.IX Item "gestaltFindFolderPresent"
.PD
Folder manager.
.IP "gestaltFontMgrAttr" 4
.IX Item "gestaltFontMgrAttr"
.PD 0
.IP "gestaltOutlineFonts" 4
.IX Item "gestaltOutlineFonts"
.PD
Font manager.
.IP "gestaltFPUType" 4
.IX Item "gestaltFPUType"
.PD 0
.IP "gestaltNoFPU" 4
.IX Item "gestaltNoFPU"
.IP "gestalt68881" 4
.IX Item "gestalt68881"
.IP "gestalt68882" 4
.IX Item "gestalt68882"
.IP "gestalt68040FPU" 4
.IX Item "gestalt68040FPU"
.PD
680X0 \s-1FPU.\s0
.IP "gestaltFSAttr" 4
.IX Item "gestaltFSAttr"
.PD 0
.IP "gestaltFullExtFSDispatching" 4
.IX Item "gestaltFullExtFSDispatching"
.IP "gestaltHasFSSpecCalls" 4
.IX Item "gestaltHasFSSpecCalls"
.IP "gestaltHasFileSystemManager" 4
.IX Item "gestaltHasFileSystemManager"
.IP "gestaltFSMDoesDynamicLoad" 4
.IX Item "gestaltFSMDoesDynamicLoad"
.IP "gestaltFSSupports4GBVols" 4
.IX Item "gestaltFSSupports4GBVols"
.IP "gestaltFSSupports2TBVols" 4
.IX Item "gestaltFSSupports2TBVols"
.IP "gestaltHasExtendedDiskInit" 4
.IX Item "gestaltHasExtendedDiskInit"
.PD
File system attributes.
.IP "gestaltFSMVersion" 4
.IX Item "gestaltFSMVersion"
File system manager.
.IP "gestaltFXfrMgrAttr" 4
.IX Item "gestaltFXfrMgrAttr"
.PD 0
.IP "gestaltFXfrMgrPresent" 4
.IX Item "gestaltFXfrMgrPresent"
.IP "gestaltFXfrMgrMultiFile" 4
.IX Item "gestaltFXfrMgrMultiFile"
.IP "gestaltFXfrMgrErrorString" 4
.IX Item "gestaltFXfrMgrErrorString"
.PD
File transfer manager.
.IP "gestaltGraphicsAttr" 4
.IX Item "gestaltGraphicsAttr"
.PD 0
.IP "gestaltGraphicsIsDebugging" 4
.IX Item "gestaltGraphicsIsDebugging"
.IP "gestaltGraphicsIsLoaded" 4
.IX Item "gestaltGraphicsIsLoaded"
.IP "gestaltGraphicsIsPowerPC" 4
.IX Item "gestaltGraphicsIsPowerPC"
.PD
QuickDraw \s-1GX\s0 attributes.
.IP "gestaltGraphicsVersion" 4
.IX Item "gestaltGraphicsVersion"
.PD 0
.IP "gestaltCurrentGraphicsVersion" 4
.IX Item "gestaltCurrentGraphicsVersion"
.PD
QuickDraw \s-1GX\s0 version.
.IP "gestaltHardwareAttr" 4
.IX Item "gestaltHardwareAttr"
.PD 0
.IP "gestaltHasVIA1" 4
.IX Item "gestaltHasVIA1"
.IP "gestaltHasVIA2" 4
.IX Item "gestaltHasVIA2"
.IP "gestaltHasASC" 4
.IX Item "gestaltHasASC"
.IP "gestaltHasSCC" 4
.IX Item "gestaltHasSCC"
.IP "gestaltHasSCSI" 4
.IX Item "gestaltHasSCSI"
.IP "gestaltHasSoftPowerOff" 4
.IX Item "gestaltHasSoftPowerOff"
.IP "gestaltHasSCSI961" 4
.IX Item "gestaltHasSCSI961"
.IP "gestaltHasSCSI962" 4
.IX Item "gestaltHasSCSI962"
.IP "gestaltHasUniversalROM" 4
.IX Item "gestaltHasUniversalROM"
.IP "gestaltHasEnhancedLtalk" 4
.IX Item "gestaltHasEnhancedLtalk"
.PD
Hardware attributes.
.IP "gestaltHelpMgrAttr" 4
.IX Item "gestaltHelpMgrAttr"
.PD 0
.IP "gestaltHelpMgrPresent" 4
.IX Item "gestaltHelpMgrPresent"
.IP "gestaltHelpMgrExtensions" 4
.IX Item "gestaltHelpMgrExtensions"
.PD
Help manager.
.IP "gestaltCompressionMgr" 4
.IX Item "gestaltCompressionMgr"
QuickTime image compression manager.
.IP "gestaltIconUtilitiesAttr" 4
.IX Item "gestaltIconUtilitiesAttr"
.PD 0
.IP "gestaltIconUtilitiesPresent" 4
.IX Item "gestaltIconUtilitiesPresent"
.PD
Icon utilities.
.IP "gestaltKeyboardType" 4
.IX Item "gestaltKeyboardType"
.PD 0
.IP "gestaltMacKbd" 4
.IX Item "gestaltMacKbd"
.IP "gestaltMacAndPad" 4
.IX Item "gestaltMacAndPad"
.IP "gestaltMacPlusKbd" 4
.IX Item "gestaltMacPlusKbd"
.IP "gestaltExtADBKbd" 4
.IX Item "gestaltExtADBKbd"
.IP "gestaltStdADBKbd" 4
.IX Item "gestaltStdADBKbd"
.IP "gestaltPrtblADBKbd" 4
.IX Item "gestaltPrtblADBKbd"
.IP "gestaltPrtblISOKbd" 4
.IX Item "gestaltPrtblISOKbd"
.IP "gestaltStdISOADBKbd" 4
.IX Item "gestaltStdISOADBKbd"
.IP "gestaltExtISOADBKbd" 4
.IX Item "gestaltExtISOADBKbd"
.IP "gestaltADBKbdII" 4
.IX Item "gestaltADBKbdII"
.IP "gestaltADBISOKbdII" 4
.IX Item "gestaltADBISOKbdII"
.IP "gestaltPwrBookADBKbd" 4
.IX Item "gestaltPwrBookADBKbd"
.IP "gestaltPwrBookISOADBKbd" 4
.IX Item "gestaltPwrBookISOADBKbd"
.IP "gestaltAppleAdjustKeypad" 4
.IX Item "gestaltAppleAdjustKeypad"
.IP "gestaltAppleAdjustADBKbd" 4
.IX Item "gestaltAppleAdjustADBKbd"
.IP "gestaltAppleAdjustISOKbd" 4
.IX Item "gestaltAppleAdjustISOKbd"
.IP "gestaltJapanAdjustADBKbd" 4
.IX Item "gestaltJapanAdjustADBKbd"
.IP "gestaltPwrBkExtISOKbd" 4
.IX Item "gestaltPwrBkExtISOKbd"
.IP "gestaltPwrBkExtJISKbd" 4
.IX Item "gestaltPwrBkExtJISKbd"
.IP "gestaltPwrBkExtADBKbd" 4
.IX Item "gestaltPwrBkExtADBKbd"
.PD
Keyboard types.
.IP "gestaltLowMemorySize" 4
.IX Item "gestaltLowMemorySize"
Size of low memory area.
.IP "gestaltLogicalRAMSize" 4
.IX Item "gestaltLogicalRAMSize"
Locical \s-1RAM\s0 size.
.IP "gestaltMachineType" 4
.IX Item "gestaltMachineType"
.PD 0
.IP "gestaltClassic" 4
.IX Item "gestaltClassic"
.IP "gestaltMacXL" 4
.IX Item "gestaltMacXL"
.IP "gestaltMac512KE" 4
.IX Item "gestaltMac512KE"
.IP "gestaltMacPlus" 4
.IX Item "gestaltMacPlus"
.IP "gestaltMacSE" 4
.IX Item "gestaltMacSE"
.IP "gestaltMacII" 4
.IX Item "gestaltMacII"
.IP "gestaltMacIIx" 4
.IX Item "gestaltMacIIx"
.IP "gestaltMacIIcx" 4
.IX Item "gestaltMacIIcx"
.IP "gestaltMacSE030" 4
.IX Item "gestaltMacSE030"
.IP "gestaltPortable" 4
.IX Item "gestaltPortable"
.IP "gestaltMacIIci" 4
.IX Item "gestaltMacIIci"
.IP "gestaltMacIIfx" 4
.IX Item "gestaltMacIIfx"
.IP "gestaltMacClassic" 4
.IX Item "gestaltMacClassic"
.IP "gestaltMacIIsi" 4
.IX Item "gestaltMacIIsi"
.IP "gestaltMacLC" 4
.IX Item "gestaltMacLC"
.IP "gestaltQuadra900" 4
.IX Item "gestaltQuadra900"
.IP "gestaltPowerBook170" 4
.IX Item "gestaltPowerBook170"
.IP "gestaltQuadra700" 4
.IX Item "gestaltQuadra700"
.IP "gestaltClassicII" 4
.IX Item "gestaltClassicII"
.IP "gestaltPowerBook100" 4
.IX Item "gestaltPowerBook100"
.IP "gestaltPowerBook140" 4
.IX Item "gestaltPowerBook140"
.IP "gestaltQuadra950" 4
.IX Item "gestaltQuadra950"
.IP "gestaltMacLCIII" 4
.IX Item "gestaltMacLCIII"
.IP "gestaltPerforma450" 4
.IX Item "gestaltPerforma450"
.IP "gestaltPowerBookDuo210" 4
.IX Item "gestaltPowerBookDuo210"
.IP "gestaltMacCentris650" 4
.IX Item "gestaltMacCentris650"
.IP "gestaltPowerBookDuo230" 4
.IX Item "gestaltPowerBookDuo230"
.IP "gestaltPowerBook180" 4
.IX Item "gestaltPowerBook180"
.IP "gestaltPowerBook160" 4
.IX Item "gestaltPowerBook160"
.IP "gestaltMacQuadra800" 4
.IX Item "gestaltMacQuadra800"
.IP "gestaltMacQuadra650" 4
.IX Item "gestaltMacQuadra650"
.IP "gestaltMacLCII" 4
.IX Item "gestaltMacLCII"
.IP "gestaltPowerBookDuo250" 4
.IX Item "gestaltPowerBookDuo250"
.IP "gestaltAWS9150_80" 4
.IX Item "gestaltAWS9150_80"
.IP "gestaltPowerMac8100_110" 4
.IX Item "gestaltPowerMac8100_110"
.IP "gestaltAWS8150_110" 4
.IX Item "gestaltAWS8150_110"
.IP "gestaltMacIIvi" 4
.IX Item "gestaltMacIIvi"
.IP "gestaltMacIIvm" 4
.IX Item "gestaltMacIIvm"
.IP "gestaltPerforma600" 4
.IX Item "gestaltPerforma600"
.IP "gestaltPowerMac7100_80" 4
.IX Item "gestaltPowerMac7100_80"
.IP "gestaltMacIIvx" 4
.IX Item "gestaltMacIIvx"
.IP "gestaltMacColorClassic" 4
.IX Item "gestaltMacColorClassic"
.IP "gestaltPerforma250" 4
.IX Item "gestaltPerforma250"
.IP "gestaltPowerBook165c" 4
.IX Item "gestaltPowerBook165c"
.IP "gestaltMacCentris610" 4
.IX Item "gestaltMacCentris610"
.IP "gestaltMacQuadra610" 4
.IX Item "gestaltMacQuadra610"
.IP "gestaltPowerBook145" 4
.IX Item "gestaltPowerBook145"
.IP "gestaltPowerMac8100_100" 4
.IX Item "gestaltPowerMac8100_100"
.IP "gestaltMacLC520" 4
.IX Item "gestaltMacLC520"
.IP "gestaltAWS9150_120" 4
.IX Item "gestaltAWS9150_120"
.IP "gestaltMacCentris660AV" 4
.IX Item "gestaltMacCentris660AV"
.IP "gestaltPerforma46x" 4
.IX Item "gestaltPerforma46x"
.IP "gestaltPowerMac8100_80" 4
.IX Item "gestaltPowerMac8100_80"
.IP "gestaltAWS8150_80" 4
.IX Item "gestaltAWS8150_80"
.IP "gestaltPowerBook180c" 4
.IX Item "gestaltPowerBook180c"
.IP "gestaltPowerMac6100_60" 4
.IX Item "gestaltPowerMac6100_60"
.IP "gestaltAWS6150_60" 4
.IX Item "gestaltAWS6150_60"
.IP "gestaltPowerBookDuo270c" 4
.IX Item "gestaltPowerBookDuo270c"
.IP "gestaltMacQuadra840AV" 4
.IX Item "gestaltMacQuadra840AV"
.IP "gestaltPerforma550" 4
.IX Item "gestaltPerforma550"
.IP "gestaltPowerBook165" 4
.IX Item "gestaltPowerBook165"
.IP "gestaltMacTV" 4
.IX Item "gestaltMacTV"
.IP "gestaltMacLC475" 4
.IX Item "gestaltMacLC475"
.IP "gestaltPerforma47x" 4
.IX Item "gestaltPerforma47x"
.IP "gestaltMacLC575" 4
.IX Item "gestaltMacLC575"
.IP "gestaltMacQuadra605" 4
.IX Item "gestaltMacQuadra605"
.IP "gestaltQuadra630" 4
.IX Item "gestaltQuadra630"
.IP "gestaltPowerMac6100_66" 4
.IX Item "gestaltPowerMac6100_66"
.IP "gestaltAWS6150_66" 4
.IX Item "gestaltAWS6150_66"
.IP "gestaltPowerBookDuo280" 4
.IX Item "gestaltPowerBookDuo280"
.IP "gestaltPowerBookDuo280c" 4
.IX Item "gestaltPowerBookDuo280c"
.IP "gestaltPowerMac7100_66" 4
.IX Item "gestaltPowerMac7100_66"
.IP "gestaltPowerBook150" 4
.IX Item "gestaltPowerBook150"
.PD
Macintosh system type.
.IP "kMachineNameStrID" 4
.IX Item "kMachineNameStrID"
Resource \s-1ID\s0 of \f(CW\*(AqSTR \*(Aq\fR resource containing machine type.
.IP "gestaltMachineIcon" 4
.IX Item "gestaltMachineIcon"
Machine icon.
.IP "gestaltMiscAttr" 4
.IX Item "gestaltMiscAttr"
.PD 0
.IP "gestaltScrollingThrottle" 4
.IX Item "gestaltScrollingThrottle"
.IP "gestaltSquareMenuBar" 4
.IX Item "gestaltSquareMenuBar"
.PD
Miscellaneous attributes.
.IP "gestaltMixedModeVersion" 4
.IX Item "gestaltMixedModeVersion"
.PD 0
.IP "gestaltMixedModeAttr" 4
.IX Item "gestaltMixedModeAttr"
.IP "gestaltPowerPCAware" 4
.IX Item "gestaltPowerPCAware"
.PD
Mixed mode manager.
.IP "gestaltMMUType" 4
.IX Item "gestaltMMUType"
.PD 0
.IP "gestaltNoMMU" 4
.IX Item "gestaltNoMMU"
.IP "gestaltAMU" 4
.IX Item "gestaltAMU"
.IP "gestalt68851" 4
.IX Item "gestalt68851"
.IP "gestalt68030MMU" 4
.IX Item "gestalt68030MMU"
.IP "gestalt68040MMU" 4
.IX Item "gestalt68040MMU"
.IP "gestaltEMMU1" 4
.IX Item "gestaltEMMU1"
.PD
680X0 \s-1MMU\s0 types.
.IP "gestaltStdNBPAttr" 4
.IX Item "gestaltStdNBPAttr"
.PD 0
.IP "gestaltStdNBPPresent" 4
.IX Item "gestaltStdNBPPresent"
.PD
Standard \s-1NBP\s0 dialog.
.IP "gestaltNotificationMgrAttr" 4
.IX Item "gestaltNotificationMgrAttr"
.PD 0
.IP "gestaltNotificationPresent" 4
.IX Item "gestaltNotificationPresent"
.PD
Notification manager.
.IP "gestaltNameRegistryVersion" 4
.IX Item "gestaltNameRegistryVersion"
Name registry.
.IP "gestaltNuBusSlotCount" 4
.IX Item "gestaltNuBusSlotCount"
Number of NuBus solts.
.IP "gestaltOpenFirmwareInfo" 4
.IX Item "gestaltOpenFirmwareInfo"
Open firmware.
.IP "gestaltOSAttr" 4
.IX Item "gestaltOSAttr"
.PD 0
.IP "gestaltSysZoneGrowable" 4
.IX Item "gestaltSysZoneGrowable"
.IP "gestaltLaunchCanReturn" 4
.IX Item "gestaltLaunchCanReturn"
.IP "gestaltLaunchFullFileSpec" 4
.IX Item "gestaltLaunchFullFileSpec"
.IP "gestaltLaunchControl" 4
.IX Item "gestaltLaunchControl"
.IP "gestaltTempMemSupport" 4
.IX Item "gestaltTempMemSupport"
.IP "gestaltRealTempMemory" 4
.IX Item "gestaltRealTempMemory"
.IP "gestaltTempMemTracked" 4
.IX Item "gestaltTempMemTracked"
.IP "gestaltIPCSupport" 4
.IX Item "gestaltIPCSupport"
.IP "gestaltSysDebuggerSupport" 4
.IX Item "gestaltSysDebuggerSupport"
.PD
\&\s-1OS\s0 attributes.
.IP "gestaltOSTable" 4
.IX Item "gestaltOSTable"
\&\s-1OS\s0 Trap table.
.IP "gestaltPCXAttr" 4
.IX Item "gestaltPCXAttr"
.PD 0
.IP "gestaltPCXHas8and16BitFAT" 4
.IX Item "gestaltPCXHas8and16BitFAT"
.IP "gestaltPCXHasProDOS" 4
.IX Item "gestaltPCXHasProDOS"
.PD
\&\s-1PC\s0 Exchange.
.IP "gestaltLogicalPageSize" 4
.IX Item "gestaltLogicalPageSize"
Logical memory page size.
.IP "gestaltPopupAttr" 4
.IX Item "gestaltPopupAttr"
.PD 0
.IP "gestaltPopupPresent" 4
.IX Item "gestaltPopupPresent"
.PD
Popup menu controls.
.IP "gestaltPowerMgrAttr" 4
.IX Item "gestaltPowerMgrAttr"
.PD 0
.IP "gestaltPMgrExists" 4
.IX Item "gestaltPMgrExists"
.IP "gestaltPMgrCPUIdle" 4
.IX Item "gestaltPMgrCPUIdle"
.IP "gestaltPMgrSCC" 4
.IX Item "gestaltPMgrSCC"
.IP "gestaltPMgrSound" 4
.IX Item "gestaltPMgrSound"
.IP "gestaltPMgrDispatchExists" 4
.IX Item "gestaltPMgrDispatchExists"
.PD
Power manager.
.IP "gestaltPPCToolboxAttr" 4
.IX Item "gestaltPPCToolboxAttr"
.PD 0
.IP "gestaltPPCToolboxPresent" 4
.IX Item "gestaltPPCToolboxPresent"
.IP "gestaltPPCSupportsRealTime" 4
.IX Item "gestaltPPCSupportsRealTime"
.IP "gestaltPPCSupportsIncoming" 4
.IX Item "gestaltPPCSupportsIncoming"
.IP "gestaltPPCSupportsOutGoing" 4
.IX Item "gestaltPPCSupportsOutGoing"
.PD
Process-to-Process communications toolbox.
.IP "gestaltProcessorType" 4
.IX Item "gestaltProcessorType"
.PD 0
.IP "gestalt68000" 4
.IX Item "gestalt68000"
.IP "gestalt68010" 4
.IX Item "gestalt68010"
.IP "gestalt68020" 4
.IX Item "gestalt68020"
.IP "gestalt68030" 4
.IX Item "gestalt68030"
.IP "gestalt68040" 4
.IX Item "gestalt68040"
.PD
Processor type.
.IP "gestaltParityAttr" 4
.IX Item "gestaltParityAttr"
.PD 0
.IP "gestaltHasParityCapability" 4
.IX Item "gestaltHasParityCapability"
.IP "gestaltParityEnabled" 4
.IX Item "gestaltParityEnabled"
.PD
Memory parity checking.
.IP "gestaltQuickdrawVersion" 4
.IX Item "gestaltQuickdrawVersion"
.PD 0
.IP "gestaltOriginalQD" 4
.IX Item "gestaltOriginalQD"
.IP "gestalt8BitQD" 4
.IX Item "gestalt8BitQD"
.IP "gestalt32BitQD" 4
.IX Item "gestalt32BitQD"
.IP "gestalt32BitQD11" 4
.IX Item "gestalt32BitQD11"
.IP "gestalt32BitQD12" 4
.IX Item "gestalt32BitQD12"
.IP "gestalt32BitQD13" 4
.IX Item "gestalt32BitQD13"
.PD
QuickDraw attributes.
.IP "gestaltQuickdrawFeatures" 4
.IX Item "gestaltQuickdrawFeatures"
.PD 0
.IP "gestaltHasColor" 4
.IX Item "gestaltHasColor"
.IP "gestaltHasDeepGWorlds" 4
.IX Item "gestaltHasDeepGWorlds"
.IP "gestaltHasDirectPixMaps" 4
.IX Item "gestaltHasDirectPixMaps"
.IP "gestaltHasGrayishTextOr" 4
.IX Item "gestaltHasGrayishTextOr"
.IP "gestaltSupportsMirroring" 4
.IX Item "gestaltSupportsMirroring"
.PD
QuickDraw features.
.IP "gestaltQuickTimeVersion" 4
.IX Item "gestaltQuickTimeVersion"
.PD 0
.IP "gestaltQuickTime" 4
.IX Item "gestaltQuickTime"
.PD
QuickTime.
.IP "gestaltQuickTimeFeatures" 4
.IX Item "gestaltQuickTimeFeatures"
.PD 0
.IP "gestaltPPCQuickTimeLibPresent" 4
.IX Item "gestaltPPCQuickTimeLibPresent"
.PD
QuickTime features.
.IP "gestaltPhysicalRAMSize" 4
.IX Item "gestaltPhysicalRAMSize"
Size of physical \s-1RAM.\s0
.IP "gestaltRBVAddr" 4
.IX Item "gestaltRBVAddr"
\&\s-1RBV,\s0 whatever that is.
.IP "gestaltROMSize" 4
.IX Item "gestaltROMSize"
Size of built in \s-1ROM.\s0
.IP "gestaltROMVersion" 4
.IX Item "gestaltROMVersion"
\&\s-1ROM\s0 version.
.IP "gestaltResourceMgrAttr" 4
.IX Item "gestaltResourceMgrAttr"
.PD 0
.IP "gestaltPartialRsrcs" 4
.IX Item "gestaltPartialRsrcs"
.PD
Resource manager.
.IP "gestaltRealtimeMgrAttr" 4
.IX Item "gestaltRealtimeMgrAttr"
.PD 0
.IP "gestaltRealtimeMgrPresent" 4
.IX Item "gestaltRealtimeMgrPresent"
.PD
Realtime manager.
.IP "gestaltSCCReadAddr" 4
.IX Item "gestaltSCCReadAddr"
Serial controller read address.
.IP "gestaltSCCWriteAddr" 4
.IX Item "gestaltSCCWriteAddr"
Serial controller write address.
.IP "gestaltScrapMgrAttr" 4
.IX Item "gestaltScrapMgrAttr"
.PD 0
.IP "gestaltScrapMgrTranslationAware" 4
.IX Item "gestaltScrapMgrTranslationAware"
.PD
Scrap manager.
.IP "gestaltScriptMgrVersion" 4
.IX Item "gestaltScriptMgrVersion"
Script manager.
.IP "gestaltScriptCount" 4
.IX Item "gestaltScriptCount"
Number of installed script systems.
.IP "gestaltSCSI" 4
.IX Item "gestaltSCSI"
.PD 0
.IP "gestaltAsyncSCSI" 4
.IX Item "gestaltAsyncSCSI"
.IP "gestaltAsyncSCSIINROM" 4
.IX Item "gestaltAsyncSCSIINROM"
.IP "gestaltSCSISlotBoot" 4
.IX Item "gestaltSCSISlotBoot"
.PD
\&\s-1SCSI\s0 manager.
.IP "gestaltControlStripAttr" 4
.IX Item "gestaltControlStripAttr"
.PD 0
.IP "gestaltControlStripExists" 4
.IX Item "gestaltControlStripExists"
.IP "gestaltControlStripVersionFixed" 4
.IX Item "gestaltControlStripVersionFixed"
.IP "gestaltControlStripUserFont" 4
.IX Item "gestaltControlStripUserFont"
.IP "gestaltControlStripUserHotKey" 4
.IX Item "gestaltControlStripUserHotKey"
.PD
Control strip attributes.
.IP "gestaltSerialAttr" 4
.IX Item "gestaltSerialAttr"
.PD 0
.IP "gestaltHasGPIaToDCDa" 4
.IX Item "gestaltHasGPIaToDCDa"
.IP "gestaltHasGPIaToRTxCa" 4
.IX Item "gestaltHasGPIaToRTxCa"
.IP "gestaltHasGPIbToDCDb" 4
.IX Item "gestaltHasGPIbToDCDb"
.PD
Serial atrributes.
.IP "gestaltNuBusConnectors" 4
.IX Item "gestaltNuBusConnectors"
Number of NuBus connectors.
.IP "gestaltSlotAttr" 4
.IX Item "gestaltSlotAttr"
.PD 0
.IP "gestaltSlotMgrExists" 4
.IX Item "gestaltSlotMgrExists"
.IP "gestaltNuBusPresent" 4
.IX Item "gestaltNuBusPresent"
.IP "gestaltSESlotPresent" 4
.IX Item "gestaltSESlotPresent"
.IP "gestaltSE30SlotPresent" 4
.IX Item "gestaltSE30SlotPresent"
.IP "gestaltPortableSlotPresent" 4
.IX Item "gestaltPortableSlotPresent"
.PD
Slot attributes.
.IP "gestaltFirstSlotNumber" 4
.IX Item "gestaltFirstSlotNumber"
Number of first slot.
.IP "gestaltSoundAttr" 4
.IX Item "gestaltSoundAttr"
.PD 0
.IP "gestaltStereoCapability" 4
.IX Item "gestaltStereoCapability"
.IP "gestaltStereoMixing" 4
.IX Item "gestaltStereoMixing"
.IP "gestaltSoundIOMgrPresent" 4
.IX Item "gestaltSoundIOMgrPresent"
.IP "gestaltBuiltInSoundInput" 4
.IX Item "gestaltBuiltInSoundInput"
.IP "gestaltHasSoundInputDevice" 4
.IX Item "gestaltHasSoundInputDevice"
.IP "gestaltPlayAndRecord" 4
.IX Item "gestaltPlayAndRecord"
.IP "gestalt16BitSoundIO" 4
.IX Item "gestalt16BitSoundIO"
.IP "gestaltStereoInput" 4
.IX Item "gestaltStereoInput"
.IP "gestaltLineLevelInput" 4
.IX Item "gestaltLineLevelInput"
.IP "gestaltSndPlayDoubleBuffer" 4
.IX Item "gestaltSndPlayDoubleBuffer"
.IP "gestaltMultiChannels" 4
.IX Item "gestaltMultiChannels"
.IP "gestalt16BitAudioSupport" 4
.IX Item "gestalt16BitAudioSupport"
.PD
Sound attributes.
.IP "gestaltStandardFileAttr" 4
.IX Item "gestaltStandardFileAttr"
.PD 0
.IP "gestaltStandardFile58" 4
.IX Item "gestaltStandardFile58"
.IP "gestaltStandardFileTranslationAware" 4
.IX Item "gestaltStandardFileTranslationAware"
.IP "gestaltStandardFileHasColorIcons" 4
.IX Item "gestaltStandardFileHasColorIcons"
.IP "gestaltStandardFileUseGenericIcons" 4
.IX Item "gestaltStandardFileUseGenericIcons"
.IP "gestaltStandardFileHasDynamicVolumeAllocation" 4
.IX Item "gestaltStandardFileHasDynamicVolumeAllocation"
.PD
Standard file manager attributes.
.IP "gestaltSysArchitecture" 4
.IX Item "gestaltSysArchitecture"
.PD 0
.IP "gestalt68k" 4
.IX Item "gestalt68k"
.IP "gestaltPowerPC" 4
.IX Item "gestaltPowerPC"
.PD
System architecture.
.IP "gestaltSystemVersion" 4
.IX Item "gestaltSystemVersion"
.PD 0
.IP "gestaltSystemVersionMajor" 4
.IX Item "gestaltSystemVersionMajor"
.IP "gestaltSystemVersionMinor" 4
.IX Item "gestaltSystemVersionMinor"
.IP "gestaltSystemVersion" 4
.IX Item "gestaltSystemVersion"
.PD
System version numbers.
.IP "gestaltTSMgrVersion" 4
.IX Item "gestaltTSMgrVersion"
.PD 0
.IP "gestaltTSMgr2" 4
.IX Item "gestaltTSMgr2"
.PD
Text system manager.
.IP "gestaltTSMgrAttr" 4
.IX Item "gestaltTSMgrAttr"
.PD 0
.IP "gestaltTSMDisplayMgrAwareBit" 4
.IX Item "gestaltTSMDisplayMgrAwareBit"
.IP "gestaltTSMdoesTSMTEBit" 4
.IX Item "gestaltTSMdoesTSMTEBit"
.PD
Text system manager attributes.
.IP "gestaltTSMTEVersion" 4
.IX Item "gestaltTSMTEVersion"
.PD 0
.IP "gestaltTSMTE1" 4
.IX Item "gestaltTSMTE1"
.IP "gestaltTSMTE2" 4
.IX Item "gestaltTSMTE2"
.PD
Text system manager for TextEdit.
.IP "gestaltTSMTEAttr" 4
.IX Item "gestaltTSMTEAttr"
.PD 0
.IP "gestaltTSMTEPresent" 4
.IX Item "gestaltTSMTEPresent"
.IP "gestaltTSMTE" 4
.IX Item "gestaltTSMTE"
.PD
Text system manager for TextEdit attributes.
.IP "gestaltTextEditVersion" 4
.IX Item "gestaltTextEditVersion"
.PD 0
.IP "gestaltTE1" 4
.IX Item "gestaltTE1"
.IP "gestaltTE2" 4
.IX Item "gestaltTE2"
.IP "gestaltTE3" 4
.IX Item "gestaltTE3"
.IP "gestaltTE4" 4
.IX Item "gestaltTE4"
.IP "gestaltTE5" 4
.IX Item "gestaltTE5"
.IP "gestaltTE6" 4
.IX Item "gestaltTE6"
.PD
TextEdit manager.
.IP "gestaltTEAttr" 4
.IX Item "gestaltTEAttr"
.PD 0
.IP "gestaltTEHasGetHiliteRgn" 4
.IX Item "gestaltTEHasGetHiliteRgn"
.IP "gestaltTESupportsInlineInput" 4
.IX Item "gestaltTESupportsInlineInput"
.IP "gestaltTESupportsTextObjects" 4
.IX Item "gestaltTESupportsTextObjects"
.PD
TextEdit attributes.
.IP "gestaltTeleMgrAttr" 4
.IX Item "gestaltTeleMgrAttr"
.PD 0
.IP "gestaltTeleMgrPresent" 4
.IX Item "gestaltTeleMgrPresent"
.IP "gestaltTeleMgrPowerPCSupport" 4
.IX Item "gestaltTeleMgrPowerPCSupport"
.IP "gestaltTeleMgrSoundStreams" 4
.IX Item "gestaltTeleMgrSoundStreams"
.IP "gestaltTeleMgrAutoAnswer" 4
.IX Item "gestaltTeleMgrAutoAnswer"
.IP "gestaltTeleMgrIndHandset" 4
.IX Item "gestaltTeleMgrIndHandset"
.IP "gestaltTeleMgrSilenceDetect" 4
.IX Item "gestaltTeleMgrSilenceDetect"
.IP "gestaltTeleMgrNewTELNewSupport" 4
.IX Item "gestaltTeleMgrNewTELNewSupport"
.PD
Telephone attributes.
.IP "gestaltTermMgrAttr" 4
.IX Item "gestaltTermMgrAttr"
.PD 0
.IP "gestaltTermMgrPresent" 4
.IX Item "gestaltTermMgrPresent"
.IP "gestaltTermMgrErrorString" 4
.IX Item "gestaltTermMgrErrorString"
.PD
Communications toolbox terminal manager.
.IP "gestaltTimeMgrVersion" 4
.IX Item "gestaltTimeMgrVersion"
.PD 0
.IP "gestaltStandardTimeMgr" 4
.IX Item "gestaltStandardTimeMgr"
.IP "gestaltRevisedTimeMgr" 4
.IX Item "gestaltRevisedTimeMgr"
.IP "gestaltExtendedTimeMgr" 4
.IX Item "gestaltExtendedTimeMgr"
.PD
Time manager.
.IP "gestaltSpeechAttr" 4
.IX Item "gestaltSpeechAttr"
.PD 0
.IP "gestaltSpeechMgrPresent" 4
.IX Item "gestaltSpeechMgrPresent"
.IP "gestaltSpeechHasPPCGlue" 4
.IX Item "gestaltSpeechHasPPCGlue"
.PD
Speech synthesis manager.
.IP "gestaltToolboxTable" 4
.IX Item "gestaltToolboxTable"
Toolbox dispatch table.
.IP "gestaltThreadMgrAttr" 4
.IX Item "gestaltThreadMgrAttr"
.PD 0
.IP "gestaltThreadMgrPresent" 4
.IX Item "gestaltThreadMgrPresent"
.IP "gestaltSpecificMatchSupport" 4
.IX Item "gestaltSpecificMatchSupport"
.IP "gestaltThreadsLibraryPresent" 4
.IX Item "gestaltThreadsLibraryPresent"
.PD
Thread manager.
.IP "gestaltTVAttr" 4
.IX Item "gestaltTVAttr"
.PD 0
.IP "gestaltHasTVTuner" 4
.IX Item "gestaltHasTVTuner"
.IP "gestaltHasSoundFader" 4
.IX Item "gestaltHasSoundFader"
.IP "gestaltHasHWClosedCaptioning" 4
.IX Item "gestaltHasHWClosedCaptioning"
.IP "gestaltHasIRRemote" 4
.IX Item "gestaltHasIRRemote"
.IP "gestaltHasVidDecoderScaler" 4
.IX Item "gestaltHasVidDecoderScaler"
.IP "gestaltHasStereoDecoder" 4
.IX Item "gestaltHasStereoDecoder"
.PD
\&\s-1TV\s0 interface.
.IP "gestaltVersion" 4
.IX Item "gestaltVersion"
.PD 0
.IP "gestaltValueImplementedVers" 4
.IX Item "gestaltValueImplementedVers"
.PD
Gestalt version.
.IP "gestaltVIA1Addr" 4
.IX Item "gestaltVIA1Addr"
.PD 0
.IP "gestaltVIA2Addr" 4
.IX Item "gestaltVIA2Addr"
.PD
\&\s-1VIA\s0 addresses.
.IP "gestaltVMAttr" 4
.IX Item "gestaltVMAttr"
.PD 0
.IP "gestaltVMPresent" 4
.IX Item "gestaltVMPresent"
.PD
Virtual memory.
.IP "gestaltTranslationAttr" 4
.IX Item "gestaltTranslationAttr"
.PD 0
.IP "gestaltTranslationMgrExists" 4
.IX Item "gestaltTranslationMgrExists"
.IP "gestaltTranslationMgrHintOrder" 4
.IX Item "gestaltTranslationMgrHintOrder"
.IP "gestaltTranslationPPCAvail" 4
.IX Item "gestaltTranslationPPCAvail"
.IP "gestaltTranslationGetPathAPIAvail" 4
.IX Item "gestaltTranslationGetPathAPIAvail"
.PD
Translation manager.
.IP "gestaltExtToolboxTable" 4
.IX Item "gestaltExtToolboxTable"
Extended toolbox dispatch table.
.SS "Functions"
.IX Subsection "Functions"
.IP "Gestalt \s-1SELECTOR\s0" 4
.IX Item "Gestalt SELECTOR"
Implements the Gestalt query code.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Gestalt5.16.3pm                         0100644 0001750 0001750 00000102317 12566241350 024023  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gestalt 3"
.TH Gestalt 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Gestalt \- Macintosh Toolbox Interface to the Gestalt Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        # Only bring in the names we want
\&        use Mac::Gestalt qw(%Gestalt gestaltAppleTalkVersion);
\&
\&        if ( $Gestalt{gestaltAppleTalkVersion} lt "58" ) {
\&                warn "Unable to use AppleTalk\en";
\&        }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can use the Gestalt function or the \f(CW%Gestalt\fR tied hash to obtain information about 
the operating environment. You specify what information you need by passing one of
the selector codes recognized by Gestalt.
.PP
There is a huge list of codes. Many of them return a bitmask, so to find out 
whether e.g. the Code Fragment Manager is present, you  write
.PP
.Vb 1
\&        $Gestalt{gestaltCFMAttr} & (1 << gestaltCFMPresent)
.Ve
.SS "Constants"
.IX Subsection "Constants"
.IP "gestaltAddressingModeAttr" 4
.IX Item "gestaltAddressingModeAttr"
.PD 0
.IP "gestalt32BitAddressing" 4
.IX Item "gestalt32BitAddressing"
.IP "gestalt32BitSysZone" 4
.IX Item "gestalt32BitSysZone"
.IP "gestalt32BitCapable" 4
.IX Item "gestalt32BitCapable"
.PD
Address mode.
.IP "gestaltAliasMgrAttr" 4
.IX Item "gestaltAliasMgrAttr"
.PD 0
.IP "gestaltAliasMgrPresent" 4
.IX Item "gestaltAliasMgrPresent"
.IP "gestaltAliasMgrSupportsRemoteAppletalk" 4
.IX Item "gestaltAliasMgrSupportsRemoteAppletalk"
.PD
Alias manager.
.IP "gestaltAppleTalkVersion" 4
.IX Item "gestaltAppleTalkVersion"
AppleTalk.
.IP "gestaltAUXVersion" 4
.IX Item "gestaltAUXVersion"
A/UX.
.IP "gestaltCloseViewAttr" 4
.IX Item "gestaltCloseViewAttr"
.PD 0
.IP "gestaltCloseViewEnabled" 4
.IX Item "gestaltCloseViewEnabled"
.IP "gestaltCloseViewDisplayMgrFriendly" 4
.IX Item "gestaltCloseViewDisplayMgrFriendly"
.PD
CloseView.
.IP "gestaltCFMAttr" 4
.IX Item "gestaltCFMAttr"
.PD 0
.IP "gestaltCFMPresent" 4
.IX Item "gestaltCFMPresent"
.PD
Code Fragment Manager.
.IP "gestaltColorMatchingAttr" 4
.IX Item "gestaltColorMatchingAttr"
.PD 0
.IP "gestaltHighLevelMatching" 4
.IX Item "gestaltHighLevelMatching"
.IP "gestaltColorMatchingLibLoaded" 4
.IX Item "gestaltColorMatchingLibLoaded"
.PD
ColorSync.
.IP "gestaltColorMatchingVersion" 4
.IX Item "gestaltColorMatchingVersion"
.PD 0
.IP "gestaltColorSync10" 4
.IX Item "gestaltColorSync10"
.IP "gestaltColorSync11" 4
.IX Item "gestaltColorSync11"
.IP "gestaltColorSync104" 4
.IX Item "gestaltColorSync104"
.IP "gestaltColorSync105" 4
.IX Item "gestaltColorSync105"
.PD
ColorSync version.
.IP "gestaltConnMgrAttr" 4
.IX Item "gestaltConnMgrAttr"
.PD 0
.IP "gestaltConnMgrPresent" 4
.IX Item "gestaltConnMgrPresent"
.IP "gestaltConnMgrCMSearchFix" 4
.IX Item "gestaltConnMgrCMSearchFix"
.IP "gestaltConnMgrErrorString" 4
.IX Item "gestaltConnMgrErrorString"
.IP "gestaltConnMgrMultiAsyncIO" 4
.IX Item "gestaltConnMgrMultiAsyncIO"
.PD
Communications toolbox connection manager.
.IP "gestaltComponentMgr" 4
.IX Item "gestaltComponentMgr"
Component manager.
.IP "gestaltColorPickerVersion" 4
.IX Item "gestaltColorPickerVersion"
.PD 0
.IP "gestaltColorPicker" 4
.IX Item "gestaltColorPicker"
.PD
Color picker.
.IP "gestaltNativeCPUtype" 4
.IX Item "gestaltNativeCPUtype"
.PD 0
.IP "gestaltCPU68000" 4
.IX Item "gestaltCPU68000"
.IP "gestaltCPU68010" 4
.IX Item "gestaltCPU68010"
.IP "gestaltCPU68020" 4
.IX Item "gestaltCPU68020"
.IP "gestaltCPU68030" 4
.IX Item "gestaltCPU68030"
.IP "gestaltCPU68040" 4
.IX Item "gestaltCPU68040"
.IP "gestaltCPU601" 4
.IX Item "gestaltCPU601"
.IP "gestaltCPU603" 4
.IX Item "gestaltCPU603"
.IP "gestaltCPU604" 4
.IX Item "gestaltCPU604"
.PD
\&\s-1CPU\s0 type.
.IP "gestaltCRMAttr" 4
.IX Item "gestaltCRMAttr"
.PD 0
.IP "gestaltCRMPresent" 4
.IX Item "gestaltCRMPresent"
.IP "gestaltCRMPersistentFix" 4
.IX Item "gestaltCRMPersistentFix"
.IP "gestaltCRMToolRsrcCalls" 4
.IX Item "gestaltCRMToolRsrcCalls"
.PD
Communications toolbox connection resource manager.
.IP "gestaltControlStripVersion" 4
.IX Item "gestaltControlStripVersion"
Control strip manager.
.IP "gestaltCTBVersion" 4
.IX Item "gestaltCTBVersion"
Communications toolbox.
.IP "gestaltDBAccessMgrAttr" 4
.IX Item "gestaltDBAccessMgrAttr"
.PD 0
.IP "gestaltDBAccessMgrPresent" 4
.IX Item "gestaltDBAccessMgrPresent"
.PD
Database access manager.
.IP "gestaltDictionaryMgrAttr" 4
.IX Item "gestaltDictionaryMgrAttr"
.PD 0
.IP "gestaltDictionaryMgrPresent" 4
.IX Item "gestaltDictionaryMgrPresent"
.PD
Dictionary manager.
.IP "gestaltDITLExtAttr" 4
.IX Item "gestaltDITLExtAttr"
.PD 0
.IP "gestaltDITLExtPresent" 4
.IX Item "gestaltDITLExtPresent"
.PD
Dialog manager extensions.
.IP "gestaltDisplayMgrAttr" 4
.IX Item "gestaltDisplayMgrAttr"
.PD 0
.IP "gestaltDisplayMgrPresent" 4
.IX Item "gestaltDisplayMgrPresent"
.IP "gestaltDisplayMgrCanSwitchMirrored" 4
.IX Item "gestaltDisplayMgrCanSwitchMirrored"
.IP "gestaltDisplayMgrSetDepthNotifies" 4
.IX Item "gestaltDisplayMgrSetDepthNotifies"
.PD
Display manager.
.IP "gestaltDisplayMgrVers" 4
.IX Item "gestaltDisplayMgrVers"
Display manager version.
.IP "gestaltDragMgrAttr" 4
.IX Item "gestaltDragMgrAttr"
.PD 0
.IP "gestaltDragMgrPresent" 4
.IX Item "gestaltDragMgrPresent"
.IP "gestaltDragMgrFloatingWind" 4
.IX Item "gestaltDragMgrFloatingWind"
.IP "gestaltPPCDragLibPresent" 4
.IX Item "gestaltPPCDragLibPresent"
.PD
Drag manager.
.IP "gestaltEasyAccessAttr" 4
.IX Item "gestaltEasyAccessAttr"
.PD 0
.IP "gestaltEasyAccessOff" 4
.IX Item "gestaltEasyAccessOff"
.IP "gestaltEasyAccessOn" 4
.IX Item "gestaltEasyAccessOn"
.IP "gestaltEasyAccessSticky" 4
.IX Item "gestaltEasyAccessSticky"
.IP "gestaltEasyAccessLocked" 4
.IX Item "gestaltEasyAccessLocked"
.PD
Easy access.
.IP "gestaltEditionMgrAttr" 4
.IX Item "gestaltEditionMgrAttr"
.PD 0
.IP "gestaltEditionMgrPresent" 4
.IX Item "gestaltEditionMgrPresent"
.IP "gestaltEditionMgrTranslationAware" 4
.IX Item "gestaltEditionMgrTranslationAware"
.PD
Edition manager.
.IP "gestaltAppleEventsAttr" 4
.IX Item "gestaltAppleEventsAttr"
.PD 0
.IP "gestaltAppleEventsPresent" 4
.IX Item "gestaltAppleEventsPresent"
.IP "gestaltScriptingSupport" 4
.IX Item "gestaltScriptingSupport"
.IP "gestaltOSLInSystem" 4
.IX Item "gestaltOSLInSystem"
.PD
AppleEvent manager.
.IP "gestaltFinderAttr" 4
.IX Item "gestaltFinderAttr"
.PD 0
.IP "gestaltFinderDropEvent" 4
.IX Item "gestaltFinderDropEvent"
.IP "gestaltFinderMagicPlacement" 4
.IX Item "gestaltFinderMagicPlacement"
.IP "gestaltFinderCallsAEProcess" 4
.IX Item "gestaltFinderCallsAEProcess"
.IP "gestaltOSLCompliantFinder" 4
.IX Item "gestaltOSLCompliantFinder"
.IP "gestaltFinderSupports4GBVolumes" 4
.IX Item "gestaltFinderSupports4GBVolumes"
.IP "gestaltFinderHasClippings" 4
.IX Item "gestaltFinderHasClippings"
.PD
Finder attributes.
.IP "gestaltFindFolderAttr" 4
.IX Item "gestaltFindFolderAttr"
.PD 0
.IP "gestaltFindFolderPresent" 4
.IX Item "gestaltFindFolderPresent"
.PD
Folder manager.
.IP "gestaltFontMgrAttr" 4
.IX Item "gestaltFontMgrAttr"
.PD 0
.IP "gestaltOutlineFonts" 4
.IX Item "gestaltOutlineFonts"
.PD
Font manager.
.IP "gestaltFPUType" 4
.IX Item "gestaltFPUType"
.PD 0
.IP "gestaltNoFPU" 4
.IX Item "gestaltNoFPU"
.IP "gestalt68881" 4
.IX Item "gestalt68881"
.IP "gestalt68882" 4
.IX Item "gestalt68882"
.IP "gestalt68040FPU" 4
.IX Item "gestalt68040FPU"
.PD
680X0 \s-1FPU\s0.
.IP "gestaltFSAttr" 4
.IX Item "gestaltFSAttr"
.PD 0
.IP "gestaltFullExtFSDispatching" 4
.IX Item "gestaltFullExtFSDispatching"
.IP "gestaltHasFSSpecCalls" 4
.IX Item "gestaltHasFSSpecCalls"
.IP "gestaltHasFileSystemManager" 4
.IX Item "gestaltHasFileSystemManager"
.IP "gestaltFSMDoesDynamicLoad" 4
.IX Item "gestaltFSMDoesDynamicLoad"
.IP "gestaltFSSupports4GBVols" 4
.IX Item "gestaltFSSupports4GBVols"
.IP "gestaltFSSupports2TBVols" 4
.IX Item "gestaltFSSupports2TBVols"
.IP "gestaltHasExtendedDiskInit" 4
.IX Item "gestaltHasExtendedDiskInit"
.PD
File system attributes.
.IP "gestaltFSMVersion" 4
.IX Item "gestaltFSMVersion"
File system manager.
.IP "gestaltFXfrMgrAttr" 4
.IX Item "gestaltFXfrMgrAttr"
.PD 0
.IP "gestaltFXfrMgrPresent" 4
.IX Item "gestaltFXfrMgrPresent"
.IP "gestaltFXfrMgrMultiFile" 4
.IX Item "gestaltFXfrMgrMultiFile"
.IP "gestaltFXfrMgrErrorString" 4
.IX Item "gestaltFXfrMgrErrorString"
.PD
File transfer manager.
.IP "gestaltGraphicsAttr" 4
.IX Item "gestaltGraphicsAttr"
.PD 0
.IP "gestaltGraphicsIsDebugging" 4
.IX Item "gestaltGraphicsIsDebugging"
.IP "gestaltGraphicsIsLoaded" 4
.IX Item "gestaltGraphicsIsLoaded"
.IP "gestaltGraphicsIsPowerPC" 4
.IX Item "gestaltGraphicsIsPowerPC"
.PD
QuickDraw \s-1GX\s0 attributes.
.IP "gestaltGraphicsVersion" 4
.IX Item "gestaltGraphicsVersion"
.PD 0
.IP "gestaltCurrentGraphicsVersion" 4
.IX Item "gestaltCurrentGraphicsVersion"
.PD
QuickDraw \s-1GX\s0 version.
.IP "gestaltHardwareAttr" 4
.IX Item "gestaltHardwareAttr"
.PD 0
.IP "gestaltHasVIA1" 4
.IX Item "gestaltHasVIA1"
.IP "gestaltHasVIA2" 4
.IX Item "gestaltHasVIA2"
.IP "gestaltHasASC" 4
.IX Item "gestaltHasASC"
.IP "gestaltHasSCC" 4
.IX Item "gestaltHasSCC"
.IP "gestaltHasSCSI" 4
.IX Item "gestaltHasSCSI"
.IP "gestaltHasSoftPowerOff" 4
.IX Item "gestaltHasSoftPowerOff"
.IP "gestaltHasSCSI961" 4
.IX Item "gestaltHasSCSI961"
.IP "gestaltHasSCSI962" 4
.IX Item "gestaltHasSCSI962"
.IP "gestaltHasUniversalROM" 4
.IX Item "gestaltHasUniversalROM"
.IP "gestaltHasEnhancedLtalk" 4
.IX Item "gestaltHasEnhancedLtalk"
.PD
Hardware attributes.
.IP "gestaltHelpMgrAttr" 4
.IX Item "gestaltHelpMgrAttr"
.PD 0
.IP "gestaltHelpMgrPresent" 4
.IX Item "gestaltHelpMgrPresent"
.IP "gestaltHelpMgrExtensions" 4
.IX Item "gestaltHelpMgrExtensions"
.PD
Help manager.
.IP "gestaltCompressionMgr" 4
.IX Item "gestaltCompressionMgr"
QuickTime image compression manager.
.IP "gestaltIconUtilitiesAttr" 4
.IX Item "gestaltIconUtilitiesAttr"
.PD 0
.IP "gestaltIconUtilitiesPresent" 4
.IX Item "gestaltIconUtilitiesPresent"
.PD
Icon utilities.
.IP "gestaltKeyboardType" 4
.IX Item "gestaltKeyboardType"
.PD 0
.IP "gestaltMacKbd" 4
.IX Item "gestaltMacKbd"
.IP "gestaltMacAndPad" 4
.IX Item "gestaltMacAndPad"
.IP "gestaltMacPlusKbd" 4
.IX Item "gestaltMacPlusKbd"
.IP "gestaltExtADBKbd" 4
.IX Item "gestaltExtADBKbd"
.IP "gestaltStdADBKbd" 4
.IX Item "gestaltStdADBKbd"
.IP "gestaltPrtblADBKbd" 4
.IX Item "gestaltPrtblADBKbd"
.IP "gestaltPrtblISOKbd" 4
.IX Item "gestaltPrtblISOKbd"
.IP "gestaltStdISOADBKbd" 4
.IX Item "gestaltStdISOADBKbd"
.IP "gestaltExtISOADBKbd" 4
.IX Item "gestaltExtISOADBKbd"
.IP "gestaltADBKbdII" 4
.IX Item "gestaltADBKbdII"
.IP "gestaltADBISOKbdII" 4
.IX Item "gestaltADBISOKbdII"
.IP "gestaltPwrBookADBKbd" 4
.IX Item "gestaltPwrBookADBKbd"
.IP "gestaltPwrBookISOADBKbd" 4
.IX Item "gestaltPwrBookISOADBKbd"
.IP "gestaltAppleAdjustKeypad" 4
.IX Item "gestaltAppleAdjustKeypad"
.IP "gestaltAppleAdjustADBKbd" 4
.IX Item "gestaltAppleAdjustADBKbd"
.IP "gestaltAppleAdjustISOKbd" 4
.IX Item "gestaltAppleAdjustISOKbd"
.IP "gestaltJapanAdjustADBKbd" 4
.IX Item "gestaltJapanAdjustADBKbd"
.IP "gestaltPwrBkExtISOKbd" 4
.IX Item "gestaltPwrBkExtISOKbd"
.IP "gestaltPwrBkExtJISKbd" 4
.IX Item "gestaltPwrBkExtJISKbd"
.IP "gestaltPwrBkExtADBKbd" 4
.IX Item "gestaltPwrBkExtADBKbd"
.PD
Keyboard types.
.IP "gestaltLowMemorySize" 4
.IX Item "gestaltLowMemorySize"
Size of low memory area.
.IP "gestaltLogicalRAMSize" 4
.IX Item "gestaltLogicalRAMSize"
Locical \s-1RAM\s0 size.
.IP "gestaltMachineType" 4
.IX Item "gestaltMachineType"
.PD 0
.IP "gestaltClassic" 4
.IX Item "gestaltClassic"
.IP "gestaltMacXL" 4
.IX Item "gestaltMacXL"
.IP "gestaltMac512KE" 4
.IX Item "gestaltMac512KE"
.IP "gestaltMacPlus" 4
.IX Item "gestaltMacPlus"
.IP "gestaltMacSE" 4
.IX Item "gestaltMacSE"
.IP "gestaltMacII" 4
.IX Item "gestaltMacII"
.IP "gestaltMacIIx" 4
.IX Item "gestaltMacIIx"
.IP "gestaltMacIIcx" 4
.IX Item "gestaltMacIIcx"
.IP "gestaltMacSE030" 4
.IX Item "gestaltMacSE030"
.IP "gestaltPortable" 4
.IX Item "gestaltPortable"
.IP "gestaltMacIIci" 4
.IX Item "gestaltMacIIci"
.IP "gestaltMacIIfx" 4
.IX Item "gestaltMacIIfx"
.IP "gestaltMacClassic" 4
.IX Item "gestaltMacClassic"
.IP "gestaltMacIIsi" 4
.IX Item "gestaltMacIIsi"
.IP "gestaltMacLC" 4
.IX Item "gestaltMacLC"
.IP "gestaltQuadra900" 4
.IX Item "gestaltQuadra900"
.IP "gestaltPowerBook170" 4
.IX Item "gestaltPowerBook170"
.IP "gestaltQuadra700" 4
.IX Item "gestaltQuadra700"
.IP "gestaltClassicII" 4
.IX Item "gestaltClassicII"
.IP "gestaltPowerBook100" 4
.IX Item "gestaltPowerBook100"
.IP "gestaltPowerBook140" 4
.IX Item "gestaltPowerBook140"
.IP "gestaltQuadra950" 4
.IX Item "gestaltQuadra950"
.IP "gestaltMacLCIII" 4
.IX Item "gestaltMacLCIII"
.IP "gestaltPerforma450" 4
.IX Item "gestaltPerforma450"
.IP "gestaltPowerBookDuo210" 4
.IX Item "gestaltPowerBookDuo210"
.IP "gestaltMacCentris650" 4
.IX Item "gestaltMacCentris650"
.IP "gestaltPowerBookDuo230" 4
.IX Item "gestaltPowerBookDuo230"
.IP "gestaltPowerBook180" 4
.IX Item "gestaltPowerBook180"
.IP "gestaltPowerBook160" 4
.IX Item "gestaltPowerBook160"
.IP "gestaltMacQuadra800" 4
.IX Item "gestaltMacQuadra800"
.IP "gestaltMacQuadra650" 4
.IX Item "gestaltMacQuadra650"
.IP "gestaltMacLCII" 4
.IX Item "gestaltMacLCII"
.IP "gestaltPowerBookDuo250" 4
.IX Item "gestaltPowerBookDuo250"
.IP "gestaltAWS9150_80" 4
.IX Item "gestaltAWS9150_80"
.IP "gestaltPowerMac8100_110" 4
.IX Item "gestaltPowerMac8100_110"
.IP "gestaltAWS8150_110" 4
.IX Item "gestaltAWS8150_110"
.IP "gestaltMacIIvi" 4
.IX Item "gestaltMacIIvi"
.IP "gestaltMacIIvm" 4
.IX Item "gestaltMacIIvm"
.IP "gestaltPerforma600" 4
.IX Item "gestaltPerforma600"
.IP "gestaltPowerMac7100_80" 4
.IX Item "gestaltPowerMac7100_80"
.IP "gestaltMacIIvx" 4
.IX Item "gestaltMacIIvx"
.IP "gestaltMacColorClassic" 4
.IX Item "gestaltMacColorClassic"
.IP "gestaltPerforma250" 4
.IX Item "gestaltPerforma250"
.IP "gestaltPowerBook165c" 4
.IX Item "gestaltPowerBook165c"
.IP "gestaltMacCentris610" 4
.IX Item "gestaltMacCentris610"
.IP "gestaltMacQuadra610" 4
.IX Item "gestaltMacQuadra610"
.IP "gestaltPowerBook145" 4
.IX Item "gestaltPowerBook145"
.IP "gestaltPowerMac8100_100" 4
.IX Item "gestaltPowerMac8100_100"
.IP "gestaltMacLC520" 4
.IX Item "gestaltMacLC520"
.IP "gestaltAWS9150_120" 4
.IX Item "gestaltAWS9150_120"
.IP "gestaltMacCentris660AV" 4
.IX Item "gestaltMacCentris660AV"
.IP "gestaltPerforma46x" 4
.IX Item "gestaltPerforma46x"
.IP "gestaltPowerMac8100_80" 4
.IX Item "gestaltPowerMac8100_80"
.IP "gestaltAWS8150_80" 4
.IX Item "gestaltAWS8150_80"
.IP "gestaltPowerBook180c" 4
.IX Item "gestaltPowerBook180c"
.IP "gestaltPowerMac6100_60" 4
.IX Item "gestaltPowerMac6100_60"
.IP "gestaltAWS6150_60" 4
.IX Item "gestaltAWS6150_60"
.IP "gestaltPowerBookDuo270c" 4
.IX Item "gestaltPowerBookDuo270c"
.IP "gestaltMacQuadra840AV" 4
.IX Item "gestaltMacQuadra840AV"
.IP "gestaltPerforma550" 4
.IX Item "gestaltPerforma550"
.IP "gestaltPowerBook165" 4
.IX Item "gestaltPowerBook165"
.IP "gestaltMacTV" 4
.IX Item "gestaltMacTV"
.IP "gestaltMacLC475" 4
.IX Item "gestaltMacLC475"
.IP "gestaltPerforma47x" 4
.IX Item "gestaltPerforma47x"
.IP "gestaltMacLC575" 4
.IX Item "gestaltMacLC575"
.IP "gestaltMacQuadra605" 4
.IX Item "gestaltMacQuadra605"
.IP "gestaltQuadra630" 4
.IX Item "gestaltQuadra630"
.IP "gestaltPowerMac6100_66" 4
.IX Item "gestaltPowerMac6100_66"
.IP "gestaltAWS6150_66" 4
.IX Item "gestaltAWS6150_66"
.IP "gestaltPowerBookDuo280" 4
.IX Item "gestaltPowerBookDuo280"
.IP "gestaltPowerBookDuo280c" 4
.IX Item "gestaltPowerBookDuo280c"
.IP "gestaltPowerMac7100_66" 4
.IX Item "gestaltPowerMac7100_66"
.IP "gestaltPowerBook150" 4
.IX Item "gestaltPowerBook150"
.PD
Macintosh system type.
.IP "kMachineNameStrID" 4
.IX Item "kMachineNameStrID"
Resource \s-1ID\s0 of \f(CW\*(AqSTR \*(Aq\fR resource containing machine type.
.IP "gestaltMachineIcon" 4
.IX Item "gestaltMachineIcon"
Machine icon.
.IP "gestaltMiscAttr" 4
.IX Item "gestaltMiscAttr"
.PD 0
.IP "gestaltScrollingThrottle" 4
.IX Item "gestaltScrollingThrottle"
.IP "gestaltSquareMenuBar" 4
.IX Item "gestaltSquareMenuBar"
.PD
Miscellaneous attributes.
.IP "gestaltMixedModeVersion" 4
.IX Item "gestaltMixedModeVersion"
.PD 0
.IP "gestaltMixedModeAttr" 4
.IX Item "gestaltMixedModeAttr"
.IP "gestaltPowerPCAware" 4
.IX Item "gestaltPowerPCAware"
.PD
Mixed mode manager.
.IP "gestaltMMUType" 4
.IX Item "gestaltMMUType"
.PD 0
.IP "gestaltNoMMU" 4
.IX Item "gestaltNoMMU"
.IP "gestaltAMU" 4
.IX Item "gestaltAMU"
.IP "gestalt68851" 4
.IX Item "gestalt68851"
.IP "gestalt68030MMU" 4
.IX Item "gestalt68030MMU"
.IP "gestalt68040MMU" 4
.IX Item "gestalt68040MMU"
.IP "gestaltEMMU1" 4
.IX Item "gestaltEMMU1"
.PD
680X0 \s-1MMU\s0 types.
.IP "gestaltStdNBPAttr" 4
.IX Item "gestaltStdNBPAttr"
.PD 0
.IP "gestaltStdNBPPresent" 4
.IX Item "gestaltStdNBPPresent"
.PD
Standard \s-1NBP\s0 dialog.
.IP "gestaltNotificationMgrAttr" 4
.IX Item "gestaltNotificationMgrAttr"
.PD 0
.IP "gestaltNotificationPresent" 4
.IX Item "gestaltNotificationPresent"
.PD
Notification manager.
.IP "gestaltNameRegistryVersion" 4
.IX Item "gestaltNameRegistryVersion"
Name registry.
.IP "gestaltNuBusSlotCount" 4
.IX Item "gestaltNuBusSlotCount"
Number of NuBus solts.
.IP "gestaltOpenFirmwareInfo" 4
.IX Item "gestaltOpenFirmwareInfo"
Open firmware.
.IP "gestaltOSAttr" 4
.IX Item "gestaltOSAttr"
.PD 0
.IP "gestaltSysZoneGrowable" 4
.IX Item "gestaltSysZoneGrowable"
.IP "gestaltLaunchCanReturn" 4
.IX Item "gestaltLaunchCanReturn"
.IP "gestaltLaunchFullFileSpec" 4
.IX Item "gestaltLaunchFullFileSpec"
.IP "gestaltLaunchControl" 4
.IX Item "gestaltLaunchControl"
.IP "gestaltTempMemSupport" 4
.IX Item "gestaltTempMemSupport"
.IP "gestaltRealTempMemory" 4
.IX Item "gestaltRealTempMemory"
.IP "gestaltTempMemTracked" 4
.IX Item "gestaltTempMemTracked"
.IP "gestaltIPCSupport" 4
.IX Item "gestaltIPCSupport"
.IP "gestaltSysDebuggerSupport" 4
.IX Item "gestaltSysDebuggerSupport"
.PD
\&\s-1OS\s0 attributes.
.IP "gestaltOSTable" 4
.IX Item "gestaltOSTable"
\&\s-1OS\s0 Trap table.
.IP "gestaltPCXAttr" 4
.IX Item "gestaltPCXAttr"
.PD 0
.IP "gestaltPCXHas8and16BitFAT" 4
.IX Item "gestaltPCXHas8and16BitFAT"
.IP "gestaltPCXHasProDOS" 4
.IX Item "gestaltPCXHasProDOS"
.PD
\&\s-1PC\s0 Exchange.
.IP "gestaltLogicalPageSize" 4
.IX Item "gestaltLogicalPageSize"
Logical memory page size.
.IP "gestaltPopupAttr" 4
.IX Item "gestaltPopupAttr"
.PD 0
.IP "gestaltPopupPresent" 4
.IX Item "gestaltPopupPresent"
.PD
Popup menu controls.
.IP "gestaltPowerMgrAttr" 4
.IX Item "gestaltPowerMgrAttr"
.PD 0
.IP "gestaltPMgrExists" 4
.IX Item "gestaltPMgrExists"
.IP "gestaltPMgrCPUIdle" 4
.IX Item "gestaltPMgrCPUIdle"
.IP "gestaltPMgrSCC" 4
.IX Item "gestaltPMgrSCC"
.IP "gestaltPMgrSound" 4
.IX Item "gestaltPMgrSound"
.IP "gestaltPMgrDispatchExists" 4
.IX Item "gestaltPMgrDispatchExists"
.PD
Power manager.
.IP "gestaltPPCToolboxAttr" 4
.IX Item "gestaltPPCToolboxAttr"
.PD 0
.IP "gestaltPPCToolboxPresent" 4
.IX Item "gestaltPPCToolboxPresent"
.IP "gestaltPPCSupportsRealTime" 4
.IX Item "gestaltPPCSupportsRealTime"
.IP "gestaltPPCSupportsIncoming" 4
.IX Item "gestaltPPCSupportsIncoming"
.IP "gestaltPPCSupportsOutGoing" 4
.IX Item "gestaltPPCSupportsOutGoing"
.PD
Process-to-Process communications toolbox.
.IP "gestaltProcessorType" 4
.IX Item "gestaltProcessorType"
.PD 0
.IP "gestalt68000" 4
.IX Item "gestalt68000"
.IP "gestalt68010" 4
.IX Item "gestalt68010"
.IP "gestalt68020" 4
.IX Item "gestalt68020"
.IP "gestalt68030" 4
.IX Item "gestalt68030"
.IP "gestalt68040" 4
.IX Item "gestalt68040"
.PD
Processor type.
.IP "gestaltParityAttr" 4
.IX Item "gestaltParityAttr"
.PD 0
.IP "gestaltHasParityCapability" 4
.IX Item "gestaltHasParityCapability"
.IP "gestaltParityEnabled" 4
.IX Item "gestaltParityEnabled"
.PD
Memory parity checking.
.IP "gestaltQuickdrawVersion" 4
.IX Item "gestaltQuickdrawVersion"
.PD 0
.IP "gestaltOriginalQD" 4
.IX Item "gestaltOriginalQD"
.IP "gestalt8BitQD" 4
.IX Item "gestalt8BitQD"
.IP "gestalt32BitQD" 4
.IX Item "gestalt32BitQD"
.IP "gestalt32BitQD11" 4
.IX Item "gestalt32BitQD11"
.IP "gestalt32BitQD12" 4
.IX Item "gestalt32BitQD12"
.IP "gestalt32BitQD13" 4
.IX Item "gestalt32BitQD13"
.PD
QuickDraw attributes.
.IP "gestaltQuickdrawFeatures" 4
.IX Item "gestaltQuickdrawFeatures"
.PD 0
.IP "gestaltHasColor" 4
.IX Item "gestaltHasColor"
.IP "gestaltHasDeepGWorlds" 4
.IX Item "gestaltHasDeepGWorlds"
.IP "gestaltHasDirectPixMaps" 4
.IX Item "gestaltHasDirectPixMaps"
.IP "gestaltHasGrayishTextOr" 4
.IX Item "gestaltHasGrayishTextOr"
.IP "gestaltSupportsMirroring" 4
.IX Item "gestaltSupportsMirroring"
.PD
QuickDraw features.
.IP "gestaltQuickTimeVersion" 4
.IX Item "gestaltQuickTimeVersion"
.PD 0
.IP "gestaltQuickTime" 4
.IX Item "gestaltQuickTime"
.PD
QuickTime.
.IP "gestaltQuickTimeFeatures" 4
.IX Item "gestaltQuickTimeFeatures"
.PD 0
.IP "gestaltPPCQuickTimeLibPresent" 4
.IX Item "gestaltPPCQuickTimeLibPresent"
.PD
QuickTime features.
.IP "gestaltPhysicalRAMSize" 4
.IX Item "gestaltPhysicalRAMSize"
Size of physical \s-1RAM\s0.
.IP "gestaltRBVAddr" 4
.IX Item "gestaltRBVAddr"
\&\s-1RBV\s0, whatever that is.
.IP "gestaltROMSize" 4
.IX Item "gestaltROMSize"
Size of built in \s-1ROM\s0.
.IP "gestaltROMVersion" 4
.IX Item "gestaltROMVersion"
\&\s-1ROM\s0 version.
.IP "gestaltResourceMgrAttr" 4
.IX Item "gestaltResourceMgrAttr"
.PD 0
.IP "gestaltPartialRsrcs" 4
.IX Item "gestaltPartialRsrcs"
.PD
Resource manager.
.IP "gestaltRealtimeMgrAttr" 4
.IX Item "gestaltRealtimeMgrAttr"
.PD 0
.IP "gestaltRealtimeMgrPresent" 4
.IX Item "gestaltRealtimeMgrPresent"
.PD
Realtime manager.
.IP "gestaltSCCReadAddr" 4
.IX Item "gestaltSCCReadAddr"
Serial controller read address.
.IP "gestaltSCCWriteAddr" 4
.IX Item "gestaltSCCWriteAddr"
Serial controller write address.
.IP "gestaltScrapMgrAttr" 4
.IX Item "gestaltScrapMgrAttr"
.PD 0
.IP "gestaltScrapMgrTranslationAware" 4
.IX Item "gestaltScrapMgrTranslationAware"
.PD
Scrap manager.
.IP "gestaltScriptMgrVersion" 4
.IX Item "gestaltScriptMgrVersion"
Script manager.
.IP "gestaltScriptCount" 4
.IX Item "gestaltScriptCount"
Number of installed script systems.
.IP "gestaltSCSI" 4
.IX Item "gestaltSCSI"
.PD 0
.IP "gestaltAsyncSCSI" 4
.IX Item "gestaltAsyncSCSI"
.IP "gestaltAsyncSCSIINROM" 4
.IX Item "gestaltAsyncSCSIINROM"
.IP "gestaltSCSISlotBoot" 4
.IX Item "gestaltSCSISlotBoot"
.PD
\&\s-1SCSI\s0 manager.
.IP "gestaltControlStripAttr" 4
.IX Item "gestaltControlStripAttr"
.PD 0
.IP "gestaltControlStripExists" 4
.IX Item "gestaltControlStripExists"
.IP "gestaltControlStripVersionFixed" 4
.IX Item "gestaltControlStripVersionFixed"
.IP "gestaltControlStripUserFont" 4
.IX Item "gestaltControlStripUserFont"
.IP "gestaltControlStripUserHotKey" 4
.IX Item "gestaltControlStripUserHotKey"
.PD
Control strip attributes.
.IP "gestaltSerialAttr" 4
.IX Item "gestaltSerialAttr"
.PD 0
.IP "gestaltHasGPIaToDCDa" 4
.IX Item "gestaltHasGPIaToDCDa"
.IP "gestaltHasGPIaToRTxCa" 4
.IX Item "gestaltHasGPIaToRTxCa"
.IP "gestaltHasGPIbToDCDb" 4
.IX Item "gestaltHasGPIbToDCDb"
.PD
Serial atrributes.
.IP "gestaltNuBusConnectors" 4
.IX Item "gestaltNuBusConnectors"
Number of NuBus connectors.
.IP "gestaltSlotAttr" 4
.IX Item "gestaltSlotAttr"
.PD 0
.IP "gestaltSlotMgrExists" 4
.IX Item "gestaltSlotMgrExists"
.IP "gestaltNuBusPresent" 4
.IX Item "gestaltNuBusPresent"
.IP "gestaltSESlotPresent" 4
.IX Item "gestaltSESlotPresent"
.IP "gestaltSE30SlotPresent" 4
.IX Item "gestaltSE30SlotPresent"
.IP "gestaltPortableSlotPresent" 4
.IX Item "gestaltPortableSlotPresent"
.PD
Slot attributes.
.IP "gestaltFirstSlotNumber" 4
.IX Item "gestaltFirstSlotNumber"
Number of first slot.
.IP "gestaltSoundAttr" 4
.IX Item "gestaltSoundAttr"
.PD 0
.IP "gestaltStereoCapability" 4
.IX Item "gestaltStereoCapability"
.IP "gestaltStereoMixing" 4
.IX Item "gestaltStereoMixing"
.IP "gestaltSoundIOMgrPresent" 4
.IX Item "gestaltSoundIOMgrPresent"
.IP "gestaltBuiltInSoundInput" 4
.IX Item "gestaltBuiltInSoundInput"
.IP "gestaltHasSoundInputDevice" 4
.IX Item "gestaltHasSoundInputDevice"
.IP "gestaltPlayAndRecord" 4
.IX Item "gestaltPlayAndRecord"
.IP "gestalt16BitSoundIO" 4
.IX Item "gestalt16BitSoundIO"
.IP "gestaltStereoInput" 4
.IX Item "gestaltStereoInput"
.IP "gestaltLineLevelInput" 4
.IX Item "gestaltLineLevelInput"
.IP "gestaltSndPlayDoubleBuffer" 4
.IX Item "gestaltSndPlayDoubleBuffer"
.IP "gestaltMultiChannels" 4
.IX Item "gestaltMultiChannels"
.IP "gestalt16BitAudioSupport" 4
.IX Item "gestalt16BitAudioSupport"
.PD
Sound attributes.
.IP "gestaltStandardFileAttr" 4
.IX Item "gestaltStandardFileAttr"
.PD 0
.IP "gestaltStandardFile58" 4
.IX Item "gestaltStandardFile58"
.IP "gestaltStandardFileTranslationAware" 4
.IX Item "gestaltStandardFileTranslationAware"
.IP "gestaltStandardFileHasColorIcons" 4
.IX Item "gestaltStandardFileHasColorIcons"
.IP "gestaltStandardFileUseGenericIcons" 4
.IX Item "gestaltStandardFileUseGenericIcons"
.IP "gestaltStandardFileHasDynamicVolumeAllocation" 4
.IX Item "gestaltStandardFileHasDynamicVolumeAllocation"
.PD
Standard file manager attributes.
.IP "gestaltSysArchitecture" 4
.IX Item "gestaltSysArchitecture"
.PD 0
.IP "gestalt68k" 4
.IX Item "gestalt68k"
.IP "gestaltPowerPC" 4
.IX Item "gestaltPowerPC"
.PD
System architecture.
.IP "gestaltSystemVersion" 4
.IX Item "gestaltSystemVersion"
.PD 0
.IP "gestaltSystemVersionMajor" 4
.IX Item "gestaltSystemVersionMajor"
.IP "gestaltSystemVersionMinor" 4
.IX Item "gestaltSystemVersionMinor"
.IP "gestaltSystemVersion" 4
.IX Item "gestaltSystemVersion"
.PD
System version numbers.
.IP "gestaltTSMgrVersion" 4
.IX Item "gestaltTSMgrVersion"
.PD 0
.IP "gestaltTSMgr2" 4
.IX Item "gestaltTSMgr2"
.PD
Text system manager.
.IP "gestaltTSMgrAttr" 4
.IX Item "gestaltTSMgrAttr"
.PD 0
.IP "gestaltTSMDisplayMgrAwareBit" 4
.IX Item "gestaltTSMDisplayMgrAwareBit"
.IP "gestaltTSMdoesTSMTEBit" 4
.IX Item "gestaltTSMdoesTSMTEBit"
.PD
Text system manager attributes.
.IP "gestaltTSMTEVersion" 4
.IX Item "gestaltTSMTEVersion"
.PD 0
.IP "gestaltTSMTE1" 4
.IX Item "gestaltTSMTE1"
.IP "gestaltTSMTE2" 4
.IX Item "gestaltTSMTE2"
.PD
Text system manager for TextEdit.
.IP "gestaltTSMTEAttr" 4
.IX Item "gestaltTSMTEAttr"
.PD 0
.IP "gestaltTSMTEPresent" 4
.IX Item "gestaltTSMTEPresent"
.IP "gestaltTSMTE" 4
.IX Item "gestaltTSMTE"
.PD
Text system manager for TextEdit attributes.
.IP "gestaltTextEditVersion" 4
.IX Item "gestaltTextEditVersion"
.PD 0
.IP "gestaltTE1" 4
.IX Item "gestaltTE1"
.IP "gestaltTE2" 4
.IX Item "gestaltTE2"
.IP "gestaltTE3" 4
.IX Item "gestaltTE3"
.IP "gestaltTE4" 4
.IX Item "gestaltTE4"
.IP "gestaltTE5" 4
.IX Item "gestaltTE5"
.IP "gestaltTE6" 4
.IX Item "gestaltTE6"
.PD
TextEdit manager.
.IP "gestaltTEAttr" 4
.IX Item "gestaltTEAttr"
.PD 0
.IP "gestaltTEHasGetHiliteRgn" 4
.IX Item "gestaltTEHasGetHiliteRgn"
.IP "gestaltTESupportsInlineInput" 4
.IX Item "gestaltTESupportsInlineInput"
.IP "gestaltTESupportsTextObjects" 4
.IX Item "gestaltTESupportsTextObjects"
.PD
TextEdit attributes.
.IP "gestaltTeleMgrAttr" 4
.IX Item "gestaltTeleMgrAttr"
.PD 0
.IP "gestaltTeleMgrPresent" 4
.IX Item "gestaltTeleMgrPresent"
.IP "gestaltTeleMgrPowerPCSupport" 4
.IX Item "gestaltTeleMgrPowerPCSupport"
.IP "gestaltTeleMgrSoundStreams" 4
.IX Item "gestaltTeleMgrSoundStreams"
.IP "gestaltTeleMgrAutoAnswer" 4
.IX Item "gestaltTeleMgrAutoAnswer"
.IP "gestaltTeleMgrIndHandset" 4
.IX Item "gestaltTeleMgrIndHandset"
.IP "gestaltTeleMgrSilenceDetect" 4
.IX Item "gestaltTeleMgrSilenceDetect"
.IP "gestaltTeleMgrNewTELNewSupport" 4
.IX Item "gestaltTeleMgrNewTELNewSupport"
.PD
Telephone attributes.
.IP "gestaltTermMgrAttr" 4
.IX Item "gestaltTermMgrAttr"
.PD 0
.IP "gestaltTermMgrPresent" 4
.IX Item "gestaltTermMgrPresent"
.IP "gestaltTermMgrErrorString" 4
.IX Item "gestaltTermMgrErrorString"
.PD
Communications toolbox terminal manager.
.IP "gestaltTimeMgrVersion" 4
.IX Item "gestaltTimeMgrVersion"
.PD 0
.IP "gestaltStandardTimeMgr" 4
.IX Item "gestaltStandardTimeMgr"
.IP "gestaltRevisedTimeMgr" 4
.IX Item "gestaltRevisedTimeMgr"
.IP "gestaltExtendedTimeMgr" 4
.IX Item "gestaltExtendedTimeMgr"
.PD
Time manager.
.IP "gestaltSpeechAttr" 4
.IX Item "gestaltSpeechAttr"
.PD 0
.IP "gestaltSpeechMgrPresent" 4
.IX Item "gestaltSpeechMgrPresent"
.IP "gestaltSpeechHasPPCGlue" 4
.IX Item "gestaltSpeechHasPPCGlue"
.PD
Speech synthesis manager.
.IP "gestaltToolboxTable" 4
.IX Item "gestaltToolboxTable"
Toolbox dispatch table.
.IP "gestaltThreadMgrAttr" 4
.IX Item "gestaltThreadMgrAttr"
.PD 0
.IP "gestaltThreadMgrPresent" 4
.IX Item "gestaltThreadMgrPresent"
.IP "gestaltSpecificMatchSupport" 4
.IX Item "gestaltSpecificMatchSupport"
.IP "gestaltThreadsLibraryPresent" 4
.IX Item "gestaltThreadsLibraryPresent"
.PD
Thread manager.
.IP "gestaltTVAttr" 4
.IX Item "gestaltTVAttr"
.PD 0
.IP "gestaltHasTVTuner" 4
.IX Item "gestaltHasTVTuner"
.IP "gestaltHasSoundFader" 4
.IX Item "gestaltHasSoundFader"
.IP "gestaltHasHWClosedCaptioning" 4
.IX Item "gestaltHasHWClosedCaptioning"
.IP "gestaltHasIRRemote" 4
.IX Item "gestaltHasIRRemote"
.IP "gestaltHasVidDecoderScaler" 4
.IX Item "gestaltHasVidDecoderScaler"
.IP "gestaltHasStereoDecoder" 4
.IX Item "gestaltHasStereoDecoder"
.PD
\&\s-1TV\s0 interface.
.IP "gestaltVersion" 4
.IX Item "gestaltVersion"
.PD 0
.IP "gestaltValueImplementedVers" 4
.IX Item "gestaltValueImplementedVers"
.PD
Gestalt version.
.IP "gestaltVIA1Addr" 4
.IX Item "gestaltVIA1Addr"
.PD 0
.IP "gestaltVIA2Addr" 4
.IX Item "gestaltVIA2Addr"
.PD
\&\s-1VIA\s0 addresses.
.IP "gestaltVMAttr" 4
.IX Item "gestaltVMAttr"
.PD 0
.IP "gestaltVMPresent" 4
.IX Item "gestaltVMPresent"
.PD
Virtual memory.
.IP "gestaltTranslationAttr" 4
.IX Item "gestaltTranslationAttr"
.PD 0
.IP "gestaltTranslationMgrExists" 4
.IX Item "gestaltTranslationMgrExists"
.IP "gestaltTranslationMgrHintOrder" 4
.IX Item "gestaltTranslationMgrHintOrder"
.IP "gestaltTranslationPPCAvail" 4
.IX Item "gestaltTranslationPPCAvail"
.IP "gestaltTranslationGetPathAPIAvail" 4
.IX Item "gestaltTranslationGetPathAPIAvail"
.PD
Translation manager.
.IP "gestaltExtToolboxTable" 4
.IX Item "gestaltExtToolboxTable"
Extended toolbox dispatch table.
.SS "Functions"
.IX Subsection "Functions"
.IP "Gestalt \s-1SELECTOR\s0" 4
.IX Item "Gestalt SELECTOR"
Implements the Gestalt query code.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Gestalt5.18.3pm                         0100644 0001750 0001750 00000102640 12566241350 024024  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gestalt 3"
.TH Gestalt 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Gestalt \- Macintosh Toolbox Interface to the Gestalt Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        # Only bring in the names we want
\&        use Mac::Gestalt qw(%Gestalt gestaltAppleTalkVersion);
\&
\&        if ( $Gestalt{gestaltAppleTalkVersion} lt "58" ) {
\&                warn "Unable to use AppleTalk\en";
\&        }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can use the Gestalt function or the \f(CW%Gestalt\fR tied hash to obtain information about 
the operating environment. You specify what information you need by passing one of
the selector codes recognized by Gestalt.
.PP
There is a huge list of codes. Many of them return a bitmask, so to find out 
whether e.g. the Code Fragment Manager is present, you  write
.PP
.Vb 1
\&        $Gestalt{gestaltCFMAttr} & (1 << gestaltCFMPresent)
.Ve
.SS "Constants"
.IX Subsection "Constants"
.IP "gestaltAddressingModeAttr" 4
.IX Item "gestaltAddressingModeAttr"
.PD 0
.IP "gestalt32BitAddressing" 4
.IX Item "gestalt32BitAddressing"
.IP "gestalt32BitSysZone" 4
.IX Item "gestalt32BitSysZone"
.IP "gestalt32BitCapable" 4
.IX Item "gestalt32BitCapable"
.PD
Address mode.
.IP "gestaltAliasMgrAttr" 4
.IX Item "gestaltAliasMgrAttr"
.PD 0
.IP "gestaltAliasMgrPresent" 4
.IX Item "gestaltAliasMgrPresent"
.IP "gestaltAliasMgrSupportsRemoteAppletalk" 4
.IX Item "gestaltAliasMgrSupportsRemoteAppletalk"
.PD
Alias manager.
.IP "gestaltAppleTalkVersion" 4
.IX Item "gestaltAppleTalkVersion"
AppleTalk.
.IP "gestaltAUXVersion" 4
.IX Item "gestaltAUXVersion"
A/UX.
.IP "gestaltCloseViewAttr" 4
.IX Item "gestaltCloseViewAttr"
.PD 0
.IP "gestaltCloseViewEnabled" 4
.IX Item "gestaltCloseViewEnabled"
.IP "gestaltCloseViewDisplayMgrFriendly" 4
.IX Item "gestaltCloseViewDisplayMgrFriendly"
.PD
CloseView.
.IP "gestaltCFMAttr" 4
.IX Item "gestaltCFMAttr"
.PD 0
.IP "gestaltCFMPresent" 4
.IX Item "gestaltCFMPresent"
.PD
Code Fragment Manager.
.IP "gestaltColorMatchingAttr" 4
.IX Item "gestaltColorMatchingAttr"
.PD 0
.IP "gestaltHighLevelMatching" 4
.IX Item "gestaltHighLevelMatching"
.IP "gestaltColorMatchingLibLoaded" 4
.IX Item "gestaltColorMatchingLibLoaded"
.PD
ColorSync.
.IP "gestaltColorMatchingVersion" 4
.IX Item "gestaltColorMatchingVersion"
.PD 0
.IP "gestaltColorSync10" 4
.IX Item "gestaltColorSync10"
.IP "gestaltColorSync11" 4
.IX Item "gestaltColorSync11"
.IP "gestaltColorSync104" 4
.IX Item "gestaltColorSync104"
.IP "gestaltColorSync105" 4
.IX Item "gestaltColorSync105"
.PD
ColorSync version.
.IP "gestaltConnMgrAttr" 4
.IX Item "gestaltConnMgrAttr"
.PD 0
.IP "gestaltConnMgrPresent" 4
.IX Item "gestaltConnMgrPresent"
.IP "gestaltConnMgrCMSearchFix" 4
.IX Item "gestaltConnMgrCMSearchFix"
.IP "gestaltConnMgrErrorString" 4
.IX Item "gestaltConnMgrErrorString"
.IP "gestaltConnMgrMultiAsyncIO" 4
.IX Item "gestaltConnMgrMultiAsyncIO"
.PD
Communications toolbox connection manager.
.IP "gestaltComponentMgr" 4
.IX Item "gestaltComponentMgr"
Component manager.
.IP "gestaltColorPickerVersion" 4
.IX Item "gestaltColorPickerVersion"
.PD 0
.IP "gestaltColorPicker" 4
.IX Item "gestaltColorPicker"
.PD
Color picker.
.IP "gestaltNativeCPUtype" 4
.IX Item "gestaltNativeCPUtype"
.PD 0
.IP "gestaltCPU68000" 4
.IX Item "gestaltCPU68000"
.IP "gestaltCPU68010" 4
.IX Item "gestaltCPU68010"
.IP "gestaltCPU68020" 4
.IX Item "gestaltCPU68020"
.IP "gestaltCPU68030" 4
.IX Item "gestaltCPU68030"
.IP "gestaltCPU68040" 4
.IX Item "gestaltCPU68040"
.IP "gestaltCPU601" 4
.IX Item "gestaltCPU601"
.IP "gestaltCPU603" 4
.IX Item "gestaltCPU603"
.IP "gestaltCPU604" 4
.IX Item "gestaltCPU604"
.PD
\&\s-1CPU\s0 type.
.IP "gestaltCRMAttr" 4
.IX Item "gestaltCRMAttr"
.PD 0
.IP "gestaltCRMPresent" 4
.IX Item "gestaltCRMPresent"
.IP "gestaltCRMPersistentFix" 4
.IX Item "gestaltCRMPersistentFix"
.IP "gestaltCRMToolRsrcCalls" 4
.IX Item "gestaltCRMToolRsrcCalls"
.PD
Communications toolbox connection resource manager.
.IP "gestaltControlStripVersion" 4
.IX Item "gestaltControlStripVersion"
Control strip manager.
.IP "gestaltCTBVersion" 4
.IX Item "gestaltCTBVersion"
Communications toolbox.
.IP "gestaltDBAccessMgrAttr" 4
.IX Item "gestaltDBAccessMgrAttr"
.PD 0
.IP "gestaltDBAccessMgrPresent" 4
.IX Item "gestaltDBAccessMgrPresent"
.PD
Database access manager.
.IP "gestaltDictionaryMgrAttr" 4
.IX Item "gestaltDictionaryMgrAttr"
.PD 0
.IP "gestaltDictionaryMgrPresent" 4
.IX Item "gestaltDictionaryMgrPresent"
.PD
Dictionary manager.
.IP "gestaltDITLExtAttr" 4
.IX Item "gestaltDITLExtAttr"
.PD 0
.IP "gestaltDITLExtPresent" 4
.IX Item "gestaltDITLExtPresent"
.PD
Dialog manager extensions.
.IP "gestaltDisplayMgrAttr" 4
.IX Item "gestaltDisplayMgrAttr"
.PD 0
.IP "gestaltDisplayMgrPresent" 4
.IX Item "gestaltDisplayMgrPresent"
.IP "gestaltDisplayMgrCanSwitchMirrored" 4
.IX Item "gestaltDisplayMgrCanSwitchMirrored"
.IP "gestaltDisplayMgrSetDepthNotifies" 4
.IX Item "gestaltDisplayMgrSetDepthNotifies"
.PD
Display manager.
.IP "gestaltDisplayMgrVers" 4
.IX Item "gestaltDisplayMgrVers"
Display manager version.
.IP "gestaltDragMgrAttr" 4
.IX Item "gestaltDragMgrAttr"
.PD 0
.IP "gestaltDragMgrPresent" 4
.IX Item "gestaltDragMgrPresent"
.IP "gestaltDragMgrFloatingWind" 4
.IX Item "gestaltDragMgrFloatingWind"
.IP "gestaltPPCDragLibPresent" 4
.IX Item "gestaltPPCDragLibPresent"
.PD
Drag manager.
.IP "gestaltEasyAccessAttr" 4
.IX Item "gestaltEasyAccessAttr"
.PD 0
.IP "gestaltEasyAccessOff" 4
.IX Item "gestaltEasyAccessOff"
.IP "gestaltEasyAccessOn" 4
.IX Item "gestaltEasyAccessOn"
.IP "gestaltEasyAccessSticky" 4
.IX Item "gestaltEasyAccessSticky"
.IP "gestaltEasyAccessLocked" 4
.IX Item "gestaltEasyAccessLocked"
.PD
Easy access.
.IP "gestaltEditionMgrAttr" 4
.IX Item "gestaltEditionMgrAttr"
.PD 0
.IP "gestaltEditionMgrPresent" 4
.IX Item "gestaltEditionMgrPresent"
.IP "gestaltEditionMgrTranslationAware" 4
.IX Item "gestaltEditionMgrTranslationAware"
.PD
Edition manager.
.IP "gestaltAppleEventsAttr" 4
.IX Item "gestaltAppleEventsAttr"
.PD 0
.IP "gestaltAppleEventsPresent" 4
.IX Item "gestaltAppleEventsPresent"
.IP "gestaltScriptingSupport" 4
.IX Item "gestaltScriptingSupport"
.IP "gestaltOSLInSystem" 4
.IX Item "gestaltOSLInSystem"
.PD
AppleEvent manager.
.IP "gestaltFinderAttr" 4
.IX Item "gestaltFinderAttr"
.PD 0
.IP "gestaltFinderDropEvent" 4
.IX Item "gestaltFinderDropEvent"
.IP "gestaltFinderMagicPlacement" 4
.IX Item "gestaltFinderMagicPlacement"
.IP "gestaltFinderCallsAEProcess" 4
.IX Item "gestaltFinderCallsAEProcess"
.IP "gestaltOSLCompliantFinder" 4
.IX Item "gestaltOSLCompliantFinder"
.IP "gestaltFinderSupports4GBVolumes" 4
.IX Item "gestaltFinderSupports4GBVolumes"
.IP "gestaltFinderHasClippings" 4
.IX Item "gestaltFinderHasClippings"
.PD
Finder attributes.
.IP "gestaltFindFolderAttr" 4
.IX Item "gestaltFindFolderAttr"
.PD 0
.IP "gestaltFindFolderPresent" 4
.IX Item "gestaltFindFolderPresent"
.PD
Folder manager.
.IP "gestaltFontMgrAttr" 4
.IX Item "gestaltFontMgrAttr"
.PD 0
.IP "gestaltOutlineFonts" 4
.IX Item "gestaltOutlineFonts"
.PD
Font manager.
.IP "gestaltFPUType" 4
.IX Item "gestaltFPUType"
.PD 0
.IP "gestaltNoFPU" 4
.IX Item "gestaltNoFPU"
.IP "gestalt68881" 4
.IX Item "gestalt68881"
.IP "gestalt68882" 4
.IX Item "gestalt68882"
.IP "gestalt68040FPU" 4
.IX Item "gestalt68040FPU"
.PD
680X0 \s-1FPU.\s0
.IP "gestaltFSAttr" 4
.IX Item "gestaltFSAttr"
.PD 0
.IP "gestaltFullExtFSDispatching" 4
.IX Item "gestaltFullExtFSDispatching"
.IP "gestaltHasFSSpecCalls" 4
.IX Item "gestaltHasFSSpecCalls"
.IP "gestaltHasFileSystemManager" 4
.IX Item "gestaltHasFileSystemManager"
.IP "gestaltFSMDoesDynamicLoad" 4
.IX Item "gestaltFSMDoesDynamicLoad"
.IP "gestaltFSSupports4GBVols" 4
.IX Item "gestaltFSSupports4GBVols"
.IP "gestaltFSSupports2TBVols" 4
.IX Item "gestaltFSSupports2TBVols"
.IP "gestaltHasExtendedDiskInit" 4
.IX Item "gestaltHasExtendedDiskInit"
.PD
File system attributes.
.IP "gestaltFSMVersion" 4
.IX Item "gestaltFSMVersion"
File system manager.
.IP "gestaltFXfrMgrAttr" 4
.IX Item "gestaltFXfrMgrAttr"
.PD 0
.IP "gestaltFXfrMgrPresent" 4
.IX Item "gestaltFXfrMgrPresent"
.IP "gestaltFXfrMgrMultiFile" 4
.IX Item "gestaltFXfrMgrMultiFile"
.IP "gestaltFXfrMgrErrorString" 4
.IX Item "gestaltFXfrMgrErrorString"
.PD
File transfer manager.
.IP "gestaltGraphicsAttr" 4
.IX Item "gestaltGraphicsAttr"
.PD 0
.IP "gestaltGraphicsIsDebugging" 4
.IX Item "gestaltGraphicsIsDebugging"
.IP "gestaltGraphicsIsLoaded" 4
.IX Item "gestaltGraphicsIsLoaded"
.IP "gestaltGraphicsIsPowerPC" 4
.IX Item "gestaltGraphicsIsPowerPC"
.PD
QuickDraw \s-1GX\s0 attributes.
.IP "gestaltGraphicsVersion" 4
.IX Item "gestaltGraphicsVersion"
.PD 0
.IP "gestaltCurrentGraphicsVersion" 4
.IX Item "gestaltCurrentGraphicsVersion"
.PD
QuickDraw \s-1GX\s0 version.
.IP "gestaltHardwareAttr" 4
.IX Item "gestaltHardwareAttr"
.PD 0
.IP "gestaltHasVIA1" 4
.IX Item "gestaltHasVIA1"
.IP "gestaltHasVIA2" 4
.IX Item "gestaltHasVIA2"
.IP "gestaltHasASC" 4
.IX Item "gestaltHasASC"
.IP "gestaltHasSCC" 4
.IX Item "gestaltHasSCC"
.IP "gestaltHasSCSI" 4
.IX Item "gestaltHasSCSI"
.IP "gestaltHasSoftPowerOff" 4
.IX Item "gestaltHasSoftPowerOff"
.IP "gestaltHasSCSI961" 4
.IX Item "gestaltHasSCSI961"
.IP "gestaltHasSCSI962" 4
.IX Item "gestaltHasSCSI962"
.IP "gestaltHasUniversalROM" 4
.IX Item "gestaltHasUniversalROM"
.IP "gestaltHasEnhancedLtalk" 4
.IX Item "gestaltHasEnhancedLtalk"
.PD
Hardware attributes.
.IP "gestaltHelpMgrAttr" 4
.IX Item "gestaltHelpMgrAttr"
.PD 0
.IP "gestaltHelpMgrPresent" 4
.IX Item "gestaltHelpMgrPresent"
.IP "gestaltHelpMgrExtensions" 4
.IX Item "gestaltHelpMgrExtensions"
.PD
Help manager.
.IP "gestaltCompressionMgr" 4
.IX Item "gestaltCompressionMgr"
QuickTime image compression manager.
.IP "gestaltIconUtilitiesAttr" 4
.IX Item "gestaltIconUtilitiesAttr"
.PD 0
.IP "gestaltIconUtilitiesPresent" 4
.IX Item "gestaltIconUtilitiesPresent"
.PD
Icon utilities.
.IP "gestaltKeyboardType" 4
.IX Item "gestaltKeyboardType"
.PD 0
.IP "gestaltMacKbd" 4
.IX Item "gestaltMacKbd"
.IP "gestaltMacAndPad" 4
.IX Item "gestaltMacAndPad"
.IP "gestaltMacPlusKbd" 4
.IX Item "gestaltMacPlusKbd"
.IP "gestaltExtADBKbd" 4
.IX Item "gestaltExtADBKbd"
.IP "gestaltStdADBKbd" 4
.IX Item "gestaltStdADBKbd"
.IP "gestaltPrtblADBKbd" 4
.IX Item "gestaltPrtblADBKbd"
.IP "gestaltPrtblISOKbd" 4
.IX Item "gestaltPrtblISOKbd"
.IP "gestaltStdISOADBKbd" 4
.IX Item "gestaltStdISOADBKbd"
.IP "gestaltExtISOADBKbd" 4
.IX Item "gestaltExtISOADBKbd"
.IP "gestaltADBKbdII" 4
.IX Item "gestaltADBKbdII"
.IP "gestaltADBISOKbdII" 4
.IX Item "gestaltADBISOKbdII"
.IP "gestaltPwrBookADBKbd" 4
.IX Item "gestaltPwrBookADBKbd"
.IP "gestaltPwrBookISOADBKbd" 4
.IX Item "gestaltPwrBookISOADBKbd"
.IP "gestaltAppleAdjustKeypad" 4
.IX Item "gestaltAppleAdjustKeypad"
.IP "gestaltAppleAdjustADBKbd" 4
.IX Item "gestaltAppleAdjustADBKbd"
.IP "gestaltAppleAdjustISOKbd" 4
.IX Item "gestaltAppleAdjustISOKbd"
.IP "gestaltJapanAdjustADBKbd" 4
.IX Item "gestaltJapanAdjustADBKbd"
.IP "gestaltPwrBkExtISOKbd" 4
.IX Item "gestaltPwrBkExtISOKbd"
.IP "gestaltPwrBkExtJISKbd" 4
.IX Item "gestaltPwrBkExtJISKbd"
.IP "gestaltPwrBkExtADBKbd" 4
.IX Item "gestaltPwrBkExtADBKbd"
.PD
Keyboard types.
.IP "gestaltLowMemorySize" 4
.IX Item "gestaltLowMemorySize"
Size of low memory area.
.IP "gestaltLogicalRAMSize" 4
.IX Item "gestaltLogicalRAMSize"
Locical \s-1RAM\s0 size.
.IP "gestaltMachineType" 4
.IX Item "gestaltMachineType"
.PD 0
.IP "gestaltClassic" 4
.IX Item "gestaltClassic"
.IP "gestaltMacXL" 4
.IX Item "gestaltMacXL"
.IP "gestaltMac512KE" 4
.IX Item "gestaltMac512KE"
.IP "gestaltMacPlus" 4
.IX Item "gestaltMacPlus"
.IP "gestaltMacSE" 4
.IX Item "gestaltMacSE"
.IP "gestaltMacII" 4
.IX Item "gestaltMacII"
.IP "gestaltMacIIx" 4
.IX Item "gestaltMacIIx"
.IP "gestaltMacIIcx" 4
.IX Item "gestaltMacIIcx"
.IP "gestaltMacSE030" 4
.IX Item "gestaltMacSE030"
.IP "gestaltPortable" 4
.IX Item "gestaltPortable"
.IP "gestaltMacIIci" 4
.IX Item "gestaltMacIIci"
.IP "gestaltMacIIfx" 4
.IX Item "gestaltMacIIfx"
.IP "gestaltMacClassic" 4
.IX Item "gestaltMacClassic"
.IP "gestaltMacIIsi" 4
.IX Item "gestaltMacIIsi"
.IP "gestaltMacLC" 4
.IX Item "gestaltMacLC"
.IP "gestaltQuadra900" 4
.IX Item "gestaltQuadra900"
.IP "gestaltPowerBook170" 4
.IX Item "gestaltPowerBook170"
.IP "gestaltQuadra700" 4
.IX Item "gestaltQuadra700"
.IP "gestaltClassicII" 4
.IX Item "gestaltClassicII"
.IP "gestaltPowerBook100" 4
.IX Item "gestaltPowerBook100"
.IP "gestaltPowerBook140" 4
.IX Item "gestaltPowerBook140"
.IP "gestaltQuadra950" 4
.IX Item "gestaltQuadra950"
.IP "gestaltMacLCIII" 4
.IX Item "gestaltMacLCIII"
.IP "gestaltPerforma450" 4
.IX Item "gestaltPerforma450"
.IP "gestaltPowerBookDuo210" 4
.IX Item "gestaltPowerBookDuo210"
.IP "gestaltMacCentris650" 4
.IX Item "gestaltMacCentris650"
.IP "gestaltPowerBookDuo230" 4
.IX Item "gestaltPowerBookDuo230"
.IP "gestaltPowerBook180" 4
.IX Item "gestaltPowerBook180"
.IP "gestaltPowerBook160" 4
.IX Item "gestaltPowerBook160"
.IP "gestaltMacQuadra800" 4
.IX Item "gestaltMacQuadra800"
.IP "gestaltMacQuadra650" 4
.IX Item "gestaltMacQuadra650"
.IP "gestaltMacLCII" 4
.IX Item "gestaltMacLCII"
.IP "gestaltPowerBookDuo250" 4
.IX Item "gestaltPowerBookDuo250"
.IP "gestaltAWS9150_80" 4
.IX Item "gestaltAWS9150_80"
.IP "gestaltPowerMac8100_110" 4
.IX Item "gestaltPowerMac8100_110"
.IP "gestaltAWS8150_110" 4
.IX Item "gestaltAWS8150_110"
.IP "gestaltMacIIvi" 4
.IX Item "gestaltMacIIvi"
.IP "gestaltMacIIvm" 4
.IX Item "gestaltMacIIvm"
.IP "gestaltPerforma600" 4
.IX Item "gestaltPerforma600"
.IP "gestaltPowerMac7100_80" 4
.IX Item "gestaltPowerMac7100_80"
.IP "gestaltMacIIvx" 4
.IX Item "gestaltMacIIvx"
.IP "gestaltMacColorClassic" 4
.IX Item "gestaltMacColorClassic"
.IP "gestaltPerforma250" 4
.IX Item "gestaltPerforma250"
.IP "gestaltPowerBook165c" 4
.IX Item "gestaltPowerBook165c"
.IP "gestaltMacCentris610" 4
.IX Item "gestaltMacCentris610"
.IP "gestaltMacQuadra610" 4
.IX Item "gestaltMacQuadra610"
.IP "gestaltPowerBook145" 4
.IX Item "gestaltPowerBook145"
.IP "gestaltPowerMac8100_100" 4
.IX Item "gestaltPowerMac8100_100"
.IP "gestaltMacLC520" 4
.IX Item "gestaltMacLC520"
.IP "gestaltAWS9150_120" 4
.IX Item "gestaltAWS9150_120"
.IP "gestaltMacCentris660AV" 4
.IX Item "gestaltMacCentris660AV"
.IP "gestaltPerforma46x" 4
.IX Item "gestaltPerforma46x"
.IP "gestaltPowerMac8100_80" 4
.IX Item "gestaltPowerMac8100_80"
.IP "gestaltAWS8150_80" 4
.IX Item "gestaltAWS8150_80"
.IP "gestaltPowerBook180c" 4
.IX Item "gestaltPowerBook180c"
.IP "gestaltPowerMac6100_60" 4
.IX Item "gestaltPowerMac6100_60"
.IP "gestaltAWS6150_60" 4
.IX Item "gestaltAWS6150_60"
.IP "gestaltPowerBookDuo270c" 4
.IX Item "gestaltPowerBookDuo270c"
.IP "gestaltMacQuadra840AV" 4
.IX Item "gestaltMacQuadra840AV"
.IP "gestaltPerforma550" 4
.IX Item "gestaltPerforma550"
.IP "gestaltPowerBook165" 4
.IX Item "gestaltPowerBook165"
.IP "gestaltMacTV" 4
.IX Item "gestaltMacTV"
.IP "gestaltMacLC475" 4
.IX Item "gestaltMacLC475"
.IP "gestaltPerforma47x" 4
.IX Item "gestaltPerforma47x"
.IP "gestaltMacLC575" 4
.IX Item "gestaltMacLC575"
.IP "gestaltMacQuadra605" 4
.IX Item "gestaltMacQuadra605"
.IP "gestaltQuadra630" 4
.IX Item "gestaltQuadra630"
.IP "gestaltPowerMac6100_66" 4
.IX Item "gestaltPowerMac6100_66"
.IP "gestaltAWS6150_66" 4
.IX Item "gestaltAWS6150_66"
.IP "gestaltPowerBookDuo280" 4
.IX Item "gestaltPowerBookDuo280"
.IP "gestaltPowerBookDuo280c" 4
.IX Item "gestaltPowerBookDuo280c"
.IP "gestaltPowerMac7100_66" 4
.IX Item "gestaltPowerMac7100_66"
.IP "gestaltPowerBook150" 4
.IX Item "gestaltPowerBook150"
.PD
Macintosh system type.
.IP "kMachineNameStrID" 4
.IX Item "kMachineNameStrID"
Resource \s-1ID\s0 of \f(CW\*(AqSTR \*(Aq\fR resource containing machine type.
.IP "gestaltMachineIcon" 4
.IX Item "gestaltMachineIcon"
Machine icon.
.IP "gestaltMiscAttr" 4
.IX Item "gestaltMiscAttr"
.PD 0
.IP "gestaltScrollingThrottle" 4
.IX Item "gestaltScrollingThrottle"
.IP "gestaltSquareMenuBar" 4
.IX Item "gestaltSquareMenuBar"
.PD
Miscellaneous attributes.
.IP "gestaltMixedModeVersion" 4
.IX Item "gestaltMixedModeVersion"
.PD 0
.IP "gestaltMixedModeAttr" 4
.IX Item "gestaltMixedModeAttr"
.IP "gestaltPowerPCAware" 4
.IX Item "gestaltPowerPCAware"
.PD
Mixed mode manager.
.IP "gestaltMMUType" 4
.IX Item "gestaltMMUType"
.PD 0
.IP "gestaltNoMMU" 4
.IX Item "gestaltNoMMU"
.IP "gestaltAMU" 4
.IX Item "gestaltAMU"
.IP "gestalt68851" 4
.IX Item "gestalt68851"
.IP "gestalt68030MMU" 4
.IX Item "gestalt68030MMU"
.IP "gestalt68040MMU" 4
.IX Item "gestalt68040MMU"
.IP "gestaltEMMU1" 4
.IX Item "gestaltEMMU1"
.PD
680X0 \s-1MMU\s0 types.
.IP "gestaltStdNBPAttr" 4
.IX Item "gestaltStdNBPAttr"
.PD 0
.IP "gestaltStdNBPPresent" 4
.IX Item "gestaltStdNBPPresent"
.PD
Standard \s-1NBP\s0 dialog.
.IP "gestaltNotificationMgrAttr" 4
.IX Item "gestaltNotificationMgrAttr"
.PD 0
.IP "gestaltNotificationPresent" 4
.IX Item "gestaltNotificationPresent"
.PD
Notification manager.
.IP "gestaltNameRegistryVersion" 4
.IX Item "gestaltNameRegistryVersion"
Name registry.
.IP "gestaltNuBusSlotCount" 4
.IX Item "gestaltNuBusSlotCount"
Number of NuBus solts.
.IP "gestaltOpenFirmwareInfo" 4
.IX Item "gestaltOpenFirmwareInfo"
Open firmware.
.IP "gestaltOSAttr" 4
.IX Item "gestaltOSAttr"
.PD 0
.IP "gestaltSysZoneGrowable" 4
.IX Item "gestaltSysZoneGrowable"
.IP "gestaltLaunchCanReturn" 4
.IX Item "gestaltLaunchCanReturn"
.IP "gestaltLaunchFullFileSpec" 4
.IX Item "gestaltLaunchFullFileSpec"
.IP "gestaltLaunchControl" 4
.IX Item "gestaltLaunchControl"
.IP "gestaltTempMemSupport" 4
.IX Item "gestaltTempMemSupport"
.IP "gestaltRealTempMemory" 4
.IX Item "gestaltRealTempMemory"
.IP "gestaltTempMemTracked" 4
.IX Item "gestaltTempMemTracked"
.IP "gestaltIPCSupport" 4
.IX Item "gestaltIPCSupport"
.IP "gestaltSysDebuggerSupport" 4
.IX Item "gestaltSysDebuggerSupport"
.PD
\&\s-1OS\s0 attributes.
.IP "gestaltOSTable" 4
.IX Item "gestaltOSTable"
\&\s-1OS\s0 Trap table.
.IP "gestaltPCXAttr" 4
.IX Item "gestaltPCXAttr"
.PD 0
.IP "gestaltPCXHas8and16BitFAT" 4
.IX Item "gestaltPCXHas8and16BitFAT"
.IP "gestaltPCXHasProDOS" 4
.IX Item "gestaltPCXHasProDOS"
.PD
\&\s-1PC\s0 Exchange.
.IP "gestaltLogicalPageSize" 4
.IX Item "gestaltLogicalPageSize"
Logical memory page size.
.IP "gestaltPopupAttr" 4
.IX Item "gestaltPopupAttr"
.PD 0
.IP "gestaltPopupPresent" 4
.IX Item "gestaltPopupPresent"
.PD
Popup menu controls.
.IP "gestaltPowerMgrAttr" 4
.IX Item "gestaltPowerMgrAttr"
.PD 0
.IP "gestaltPMgrExists" 4
.IX Item "gestaltPMgrExists"
.IP "gestaltPMgrCPUIdle" 4
.IX Item "gestaltPMgrCPUIdle"
.IP "gestaltPMgrSCC" 4
.IX Item "gestaltPMgrSCC"
.IP "gestaltPMgrSound" 4
.IX Item "gestaltPMgrSound"
.IP "gestaltPMgrDispatchExists" 4
.IX Item "gestaltPMgrDispatchExists"
.PD
Power manager.
.IP "gestaltPPCToolboxAttr" 4
.IX Item "gestaltPPCToolboxAttr"
.PD 0
.IP "gestaltPPCToolboxPresent" 4
.IX Item "gestaltPPCToolboxPresent"
.IP "gestaltPPCSupportsRealTime" 4
.IX Item "gestaltPPCSupportsRealTime"
.IP "gestaltPPCSupportsIncoming" 4
.IX Item "gestaltPPCSupportsIncoming"
.IP "gestaltPPCSupportsOutGoing" 4
.IX Item "gestaltPPCSupportsOutGoing"
.PD
Process-to-Process communications toolbox.
.IP "gestaltProcessorType" 4
.IX Item "gestaltProcessorType"
.PD 0
.IP "gestalt68000" 4
.IX Item "gestalt68000"
.IP "gestalt68010" 4
.IX Item "gestalt68010"
.IP "gestalt68020" 4
.IX Item "gestalt68020"
.IP "gestalt68030" 4
.IX Item "gestalt68030"
.IP "gestalt68040" 4
.IX Item "gestalt68040"
.PD
Processor type.
.IP "gestaltParityAttr" 4
.IX Item "gestaltParityAttr"
.PD 0
.IP "gestaltHasParityCapability" 4
.IX Item "gestaltHasParityCapability"
.IP "gestaltParityEnabled" 4
.IX Item "gestaltParityEnabled"
.PD
Memory parity checking.
.IP "gestaltQuickdrawVersion" 4
.IX Item "gestaltQuickdrawVersion"
.PD 0
.IP "gestaltOriginalQD" 4
.IX Item "gestaltOriginalQD"
.IP "gestalt8BitQD" 4
.IX Item "gestalt8BitQD"
.IP "gestalt32BitQD" 4
.IX Item "gestalt32BitQD"
.IP "gestalt32BitQD11" 4
.IX Item "gestalt32BitQD11"
.IP "gestalt32BitQD12" 4
.IX Item "gestalt32BitQD12"
.IP "gestalt32BitQD13" 4
.IX Item "gestalt32BitQD13"
.PD
QuickDraw attributes.
.IP "gestaltQuickdrawFeatures" 4
.IX Item "gestaltQuickdrawFeatures"
.PD 0
.IP "gestaltHasColor" 4
.IX Item "gestaltHasColor"
.IP "gestaltHasDeepGWorlds" 4
.IX Item "gestaltHasDeepGWorlds"
.IP "gestaltHasDirectPixMaps" 4
.IX Item "gestaltHasDirectPixMaps"
.IP "gestaltHasGrayishTextOr" 4
.IX Item "gestaltHasGrayishTextOr"
.IP "gestaltSupportsMirroring" 4
.IX Item "gestaltSupportsMirroring"
.PD
QuickDraw features.
.IP "gestaltQuickTimeVersion" 4
.IX Item "gestaltQuickTimeVersion"
.PD 0
.IP "gestaltQuickTime" 4
.IX Item "gestaltQuickTime"
.PD
QuickTime.
.IP "gestaltQuickTimeFeatures" 4
.IX Item "gestaltQuickTimeFeatures"
.PD 0
.IP "gestaltPPCQuickTimeLibPresent" 4
.IX Item "gestaltPPCQuickTimeLibPresent"
.PD
QuickTime features.
.IP "gestaltPhysicalRAMSize" 4
.IX Item "gestaltPhysicalRAMSize"
Size of physical \s-1RAM.\s0
.IP "gestaltRBVAddr" 4
.IX Item "gestaltRBVAddr"
\&\s-1RBV,\s0 whatever that is.
.IP "gestaltROMSize" 4
.IX Item "gestaltROMSize"
Size of built in \s-1ROM.\s0
.IP "gestaltROMVersion" 4
.IX Item "gestaltROMVersion"
\&\s-1ROM\s0 version.
.IP "gestaltResourceMgrAttr" 4
.IX Item "gestaltResourceMgrAttr"
.PD 0
.IP "gestaltPartialRsrcs" 4
.IX Item "gestaltPartialRsrcs"
.PD
Resource manager.
.IP "gestaltRealtimeMgrAttr" 4
.IX Item "gestaltRealtimeMgrAttr"
.PD 0
.IP "gestaltRealtimeMgrPresent" 4
.IX Item "gestaltRealtimeMgrPresent"
.PD
Realtime manager.
.IP "gestaltSCCReadAddr" 4
.IX Item "gestaltSCCReadAddr"
Serial controller read address.
.IP "gestaltSCCWriteAddr" 4
.IX Item "gestaltSCCWriteAddr"
Serial controller write address.
.IP "gestaltScrapMgrAttr" 4
.IX Item "gestaltScrapMgrAttr"
.PD 0
.IP "gestaltScrapMgrTranslationAware" 4
.IX Item "gestaltScrapMgrTranslationAware"
.PD
Scrap manager.
.IP "gestaltScriptMgrVersion" 4
.IX Item "gestaltScriptMgrVersion"
Script manager.
.IP "gestaltScriptCount" 4
.IX Item "gestaltScriptCount"
Number of installed script systems.
.IP "gestaltSCSI" 4
.IX Item "gestaltSCSI"
.PD 0
.IP "gestaltAsyncSCSI" 4
.IX Item "gestaltAsyncSCSI"
.IP "gestaltAsyncSCSIINROM" 4
.IX Item "gestaltAsyncSCSIINROM"
.IP "gestaltSCSISlotBoot" 4
.IX Item "gestaltSCSISlotBoot"
.PD
\&\s-1SCSI\s0 manager.
.IP "gestaltControlStripAttr" 4
.IX Item "gestaltControlStripAttr"
.PD 0
.IP "gestaltControlStripExists" 4
.IX Item "gestaltControlStripExists"
.IP "gestaltControlStripVersionFixed" 4
.IX Item "gestaltControlStripVersionFixed"
.IP "gestaltControlStripUserFont" 4
.IX Item "gestaltControlStripUserFont"
.IP "gestaltControlStripUserHotKey" 4
.IX Item "gestaltControlStripUserHotKey"
.PD
Control strip attributes.
.IP "gestaltSerialAttr" 4
.IX Item "gestaltSerialAttr"
.PD 0
.IP "gestaltHasGPIaToDCDa" 4
.IX Item "gestaltHasGPIaToDCDa"
.IP "gestaltHasGPIaToRTxCa" 4
.IX Item "gestaltHasGPIaToRTxCa"
.IP "gestaltHasGPIbToDCDb" 4
.IX Item "gestaltHasGPIbToDCDb"
.PD
Serial atrributes.
.IP "gestaltNuBusConnectors" 4
.IX Item "gestaltNuBusConnectors"
Number of NuBus connectors.
.IP "gestaltSlotAttr" 4
.IX Item "gestaltSlotAttr"
.PD 0
.IP "gestaltSlotMgrExists" 4
.IX Item "gestaltSlotMgrExists"
.IP "gestaltNuBusPresent" 4
.IX Item "gestaltNuBusPresent"
.IP "gestaltSESlotPresent" 4
.IX Item "gestaltSESlotPresent"
.IP "gestaltSE30SlotPresent" 4
.IX Item "gestaltSE30SlotPresent"
.IP "gestaltPortableSlotPresent" 4
.IX Item "gestaltPortableSlotPresent"
.PD
Slot attributes.
.IP "gestaltFirstSlotNumber" 4
.IX Item "gestaltFirstSlotNumber"
Number of first slot.
.IP "gestaltSoundAttr" 4
.IX Item "gestaltSoundAttr"
.PD 0
.IP "gestaltStereoCapability" 4
.IX Item "gestaltStereoCapability"
.IP "gestaltStereoMixing" 4
.IX Item "gestaltStereoMixing"
.IP "gestaltSoundIOMgrPresent" 4
.IX Item "gestaltSoundIOMgrPresent"
.IP "gestaltBuiltInSoundInput" 4
.IX Item "gestaltBuiltInSoundInput"
.IP "gestaltHasSoundInputDevice" 4
.IX Item "gestaltHasSoundInputDevice"
.IP "gestaltPlayAndRecord" 4
.IX Item "gestaltPlayAndRecord"
.IP "gestalt16BitSoundIO" 4
.IX Item "gestalt16BitSoundIO"
.IP "gestaltStereoInput" 4
.IX Item "gestaltStereoInput"
.IP "gestaltLineLevelInput" 4
.IX Item "gestaltLineLevelInput"
.IP "gestaltSndPlayDoubleBuffer" 4
.IX Item "gestaltSndPlayDoubleBuffer"
.IP "gestaltMultiChannels" 4
.IX Item "gestaltMultiChannels"
.IP "gestalt16BitAudioSupport" 4
.IX Item "gestalt16BitAudioSupport"
.PD
Sound attributes.
.IP "gestaltStandardFileAttr" 4
.IX Item "gestaltStandardFileAttr"
.PD 0
.IP "gestaltStandardFile58" 4
.IX Item "gestaltStandardFile58"
.IP "gestaltStandardFileTranslationAware" 4
.IX Item "gestaltStandardFileTranslationAware"
.IP "gestaltStandardFileHasColorIcons" 4
.IX Item "gestaltStandardFileHasColorIcons"
.IP "gestaltStandardFileUseGenericIcons" 4
.IX Item "gestaltStandardFileUseGenericIcons"
.IP "gestaltStandardFileHasDynamicVolumeAllocation" 4
.IX Item "gestaltStandardFileHasDynamicVolumeAllocation"
.PD
Standard file manager attributes.
.IP "gestaltSysArchitecture" 4
.IX Item "gestaltSysArchitecture"
.PD 0
.IP "gestalt68k" 4
.IX Item "gestalt68k"
.IP "gestaltPowerPC" 4
.IX Item "gestaltPowerPC"
.PD
System architecture.
.IP "gestaltSystemVersion" 4
.IX Item "gestaltSystemVersion"
.PD 0
.IP "gestaltSystemVersionMajor" 4
.IX Item "gestaltSystemVersionMajor"
.IP "gestaltSystemVersionMinor" 4
.IX Item "gestaltSystemVersionMinor"
.IP "gestaltSystemVersion" 4
.IX Item "gestaltSystemVersion"
.PD
System version numbers.
.IP "gestaltTSMgrVersion" 4
.IX Item "gestaltTSMgrVersion"
.PD 0
.IP "gestaltTSMgr2" 4
.IX Item "gestaltTSMgr2"
.PD
Text system manager.
.IP "gestaltTSMgrAttr" 4
.IX Item "gestaltTSMgrAttr"
.PD 0
.IP "gestaltTSMDisplayMgrAwareBit" 4
.IX Item "gestaltTSMDisplayMgrAwareBit"
.IP "gestaltTSMdoesTSMTEBit" 4
.IX Item "gestaltTSMdoesTSMTEBit"
.PD
Text system manager attributes.
.IP "gestaltTSMTEVersion" 4
.IX Item "gestaltTSMTEVersion"
.PD 0
.IP "gestaltTSMTE1" 4
.IX Item "gestaltTSMTE1"
.IP "gestaltTSMTE2" 4
.IX Item "gestaltTSMTE2"
.PD
Text system manager for TextEdit.
.IP "gestaltTSMTEAttr" 4
.IX Item "gestaltTSMTEAttr"
.PD 0
.IP "gestaltTSMTEPresent" 4
.IX Item "gestaltTSMTEPresent"
.IP "gestaltTSMTE" 4
.IX Item "gestaltTSMTE"
.PD
Text system manager for TextEdit attributes.
.IP "gestaltTextEditVersion" 4
.IX Item "gestaltTextEditVersion"
.PD 0
.IP "gestaltTE1" 4
.IX Item "gestaltTE1"
.IP "gestaltTE2" 4
.IX Item "gestaltTE2"
.IP "gestaltTE3" 4
.IX Item "gestaltTE3"
.IP "gestaltTE4" 4
.IX Item "gestaltTE4"
.IP "gestaltTE5" 4
.IX Item "gestaltTE5"
.IP "gestaltTE6" 4
.IX Item "gestaltTE6"
.PD
TextEdit manager.
.IP "gestaltTEAttr" 4
.IX Item "gestaltTEAttr"
.PD 0
.IP "gestaltTEHasGetHiliteRgn" 4
.IX Item "gestaltTEHasGetHiliteRgn"
.IP "gestaltTESupportsInlineInput" 4
.IX Item "gestaltTESupportsInlineInput"
.IP "gestaltTESupportsTextObjects" 4
.IX Item "gestaltTESupportsTextObjects"
.PD
TextEdit attributes.
.IP "gestaltTeleMgrAttr" 4
.IX Item "gestaltTeleMgrAttr"
.PD 0
.IP "gestaltTeleMgrPresent" 4
.IX Item "gestaltTeleMgrPresent"
.IP "gestaltTeleMgrPowerPCSupport" 4
.IX Item "gestaltTeleMgrPowerPCSupport"
.IP "gestaltTeleMgrSoundStreams" 4
.IX Item "gestaltTeleMgrSoundStreams"
.IP "gestaltTeleMgrAutoAnswer" 4
.IX Item "gestaltTeleMgrAutoAnswer"
.IP "gestaltTeleMgrIndHandset" 4
.IX Item "gestaltTeleMgrIndHandset"
.IP "gestaltTeleMgrSilenceDetect" 4
.IX Item "gestaltTeleMgrSilenceDetect"
.IP "gestaltTeleMgrNewTELNewSupport" 4
.IX Item "gestaltTeleMgrNewTELNewSupport"
.PD
Telephone attributes.
.IP "gestaltTermMgrAttr" 4
.IX Item "gestaltTermMgrAttr"
.PD 0
.IP "gestaltTermMgrPresent" 4
.IX Item "gestaltTermMgrPresent"
.IP "gestaltTermMgrErrorString" 4
.IX Item "gestaltTermMgrErrorString"
.PD
Communications toolbox terminal manager.
.IP "gestaltTimeMgrVersion" 4
.IX Item "gestaltTimeMgrVersion"
.PD 0
.IP "gestaltStandardTimeMgr" 4
.IX Item "gestaltStandardTimeMgr"
.IP "gestaltRevisedTimeMgr" 4
.IX Item "gestaltRevisedTimeMgr"
.IP "gestaltExtendedTimeMgr" 4
.IX Item "gestaltExtendedTimeMgr"
.PD
Time manager.
.IP "gestaltSpeechAttr" 4
.IX Item "gestaltSpeechAttr"
.PD 0
.IP "gestaltSpeechMgrPresent" 4
.IX Item "gestaltSpeechMgrPresent"
.IP "gestaltSpeechHasPPCGlue" 4
.IX Item "gestaltSpeechHasPPCGlue"
.PD
Speech synthesis manager.
.IP "gestaltToolboxTable" 4
.IX Item "gestaltToolboxTable"
Toolbox dispatch table.
.IP "gestaltThreadMgrAttr" 4
.IX Item "gestaltThreadMgrAttr"
.PD 0
.IP "gestaltThreadMgrPresent" 4
.IX Item "gestaltThreadMgrPresent"
.IP "gestaltSpecificMatchSupport" 4
.IX Item "gestaltSpecificMatchSupport"
.IP "gestaltThreadsLibraryPresent" 4
.IX Item "gestaltThreadsLibraryPresent"
.PD
Thread manager.
.IP "gestaltTVAttr" 4
.IX Item "gestaltTVAttr"
.PD 0
.IP "gestaltHasTVTuner" 4
.IX Item "gestaltHasTVTuner"
.IP "gestaltHasSoundFader" 4
.IX Item "gestaltHasSoundFader"
.IP "gestaltHasHWClosedCaptioning" 4
.IX Item "gestaltHasHWClosedCaptioning"
.IP "gestaltHasIRRemote" 4
.IX Item "gestaltHasIRRemote"
.IP "gestaltHasVidDecoderScaler" 4
.IX Item "gestaltHasVidDecoderScaler"
.IP "gestaltHasStereoDecoder" 4
.IX Item "gestaltHasStereoDecoder"
.PD
\&\s-1TV\s0 interface.
.IP "gestaltVersion" 4
.IX Item "gestaltVersion"
.PD 0
.IP "gestaltValueImplementedVers" 4
.IX Item "gestaltValueImplementedVers"
.PD
Gestalt version.
.IP "gestaltVIA1Addr" 4
.IX Item "gestaltVIA1Addr"
.PD 0
.IP "gestaltVIA2Addr" 4
.IX Item "gestaltVIA2Addr"
.PD
\&\s-1VIA\s0 addresses.
.IP "gestaltVMAttr" 4
.IX Item "gestaltVMAttr"
.PD 0
.IP "gestaltVMPresent" 4
.IX Item "gestaltVMPresent"
.PD
Virtual memory.
.IP "gestaltTranslationAttr" 4
.IX Item "gestaltTranslationAttr"
.PD 0
.IP "gestaltTranslationMgrExists" 4
.IX Item "gestaltTranslationMgrExists"
.IP "gestaltTranslationMgrHintOrder" 4
.IX Item "gestaltTranslationMgrHintOrder"
.IP "gestaltTranslationPPCAvail" 4
.IX Item "gestaltTranslationPPCAvail"
.IP "gestaltTranslationGetPathAPIAvail" 4
.IX Item "gestaltTranslationGetPathAPIAvail"
.PD
Translation manager.
.IP "gestaltExtToolboxTable" 4
.IX Item "gestaltExtToolboxTable"
Extended toolbox dispatch table.
.SS "Functions"
.IX Subsection "Functions"
.IP "Gestalt \s-1SELECTOR\s0" 4
.IX Item "Gestalt SELECTOR"
Implements the Gestalt query code.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::InternetConfig.3pm                      0100644 0001750 0001750 00000054104 12566241352 025026  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "InternetConfig 3"
.TH InternetConfig 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::InternetConfig \- Interface to Peter Lewis' and Quinns Internet Config system
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to the original Internet Config documentation is essential for proper use 
of these functions.
.SS "Constants"
.IX Subsection "Constants"
.IP "kICRealName" 4
.IX Item "kICRealName"
.PD 0
.IP "kICEmail" 4
.IX Item "kICEmail"
.IP "kICMailAccount" 4
.IX Item "kICMailAccount"
.IP "kICMailPassword" 4
.IX Item "kICMailPassword"
.IP "kICNewsAuthUsername" 4
.IX Item "kICNewsAuthUsername"
.IP "kICNewsAuthPassword" 4
.IX Item "kICNewsAuthPassword"
.IP "kICArchiePreferred" 4
.IX Item "kICArchiePreferred"
.IP "kICArchieAll" 4
.IX Item "kICArchieAll"
.IP "kICUMichPreferred" 4
.IX Item "kICUMichPreferred"
.IP "kICUMichAll" 4
.IX Item "kICUMichAll"
.IP "kICInfoMacPreferred" 4
.IX Item "kICInfoMacPreferred"
.IP "kICInfoMacAll" 4
.IX Item "kICInfoMacAll"
.IP "kICPhHost" 4
.IX Item "kICPhHost"
.IP "kICWhoisHost" 4
.IX Item "kICWhoisHost"
.IP "kICFingerHost" 4
.IX Item "kICFingerHost"
.IP "kICFTPHost" 4
.IX Item "kICFTPHost"
.IP "kICTelnetHost" 4
.IX Item "kICTelnetHost"
.IP "kICSMTPHost" 4
.IX Item "kICSMTPHost"
.IP "kICNNTPHost" 4
.IX Item "kICNNTPHost"
.IP "kICGopherHost" 4
.IX Item "kICGopherHost"
.IP "kICLDAPServer" 4
.IX Item "kICLDAPServer"
.IP "kICLDAPSearchbase" 4
.IX Item "kICLDAPSearchbase"
.IP "kICWWWHomePage" 4
.IX Item "kICWWWHomePage"
.IP "kICWAISGateway" 4
.IX Item "kICWAISGateway"
.IP "kICListFont" 4
.IX Item "kICListFont"
.IP "kICScreenFont" 4
.IX Item "kICScreenFont"
.IP "kICPrinterFont" 4
.IX Item "kICPrinterFont"
.IP "kICTextCreator" 4
.IX Item "kICTextCreator"
.IP "kICBinaryTypeCreator" 4
.IX Item "kICBinaryTypeCreator"
.IP "kICDownloadFolder" 4
.IX Item "kICDownloadFolder"
.IP "kICSignature" 4
.IX Item "kICSignature"
.IP "kICOrganization" 4
.IX Item "kICOrganization"
.IP "kICPlan" 4
.IX Item "kICPlan"
.IP "kICQuotingString" 4
.IX Item "kICQuotingString"
.IP "kICMailHeaders" 4
.IX Item "kICMailHeaders"
.IP "kICNewsHeaders" 4
.IX Item "kICNewsHeaders"
.IP "kICMapping" 4
.IX Item "kICMapping"
.IP "kICCharacterSet" 4
.IX Item "kICCharacterSet"
.IP "kICHelper" 4
.IX Item "kICHelper"
.IP "kICServices" 4
.IX Item "kICServices"
.IP "kICNewMailFlashIcon" 4
.IX Item "kICNewMailFlashIcon"
.IP "kICNewMailDialog" 4
.IX Item "kICNewMailDialog"
.IP "kICNewMailPlaySound" 4
.IX Item "kICNewMailPlaySound"
.IP "kICNewMailSoundName" 4
.IX Item "kICNewMailSoundName"
.IP "kICWebBackgroundColour" 4
.IX Item "kICWebBackgroundColour"
.IP "kICNoProxyDomains" 4
.IX Item "kICNoProxyDomains"
.IP "kICUseSocks" 4
.IX Item "kICUseSocks"
.IP "kICSocksHost" 4
.IX Item "kICSocksHost"
.IP "kICUseHTTPProxy" 4
.IX Item "kICUseHTTPProxy"
.IP "kICHTTPProxyHost" 4
.IX Item "kICHTTPProxyHost"
.IP "kICUseFTPProxy" 4
.IX Item "kICUseFTPProxy"
.IP "kICFTPProxyHost" 4
.IX Item "kICFTPProxyHost"
.IP "kICFTPProxyUser" 4
.IX Item "kICFTPProxyUser"
.IP "kICFTPProxyPassword" 4
.IX Item "kICFTPProxyPassword"
.IP "kICFTPProxyAccount" 4
.IX Item "kICFTPProxyAccount"
.PD
Internet Config settings.
.IP "ICmap_binary" 4
.IX Item "ICmap_binary"
.PD 0
.IP "ICmap_resource_fork" 4
.IX Item "ICmap_resource_fork"
.IP "ICmap_data_fork" 4
.IX Item "ICmap_data_fork"
.IP "ICmap_post" 4
.IX Item "ICmap_post"
.IP "ICmap_not_incoming" 4
.IX Item "ICmap_not_incoming"
.IP "ICmap_not_outgoing" 4
.IX Item "ICmap_not_outgoing"
.IP "ICservices_tcp" 4
.IX Item "ICservices_tcp"
.IP "ICservices_udp" 4
.IX Item "ICservices_udp"
.IP "icNoPerm" 4
.IX Item "icNoPerm"
.IP "icReadOnlyPerm" 4
.IX Item "icReadOnlyPerm"
.IP "icReadWritePerm" 4
.IX Item "icReadWritePerm"
.PD
Various constants.
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "$ICInstance" 4
.el .IP "\f(CW$ICInstance\fR" 4
.IX Item "$ICInstance"
The instance of the Internet Config database.
.ie n .IP "%RawInternetConfig" 4
.el .IP "\f(CW%RawInternetConfig\fR" 4
.IX Item "%RawInternetConfig"
Access the raw, uninterpreted value of an Internet Config setting.
.ie n .IP "%InternetConfig" 4
.el .IP "\f(CW%InternetConfig\fR" 4
.IX Item "%InternetConfig"
Access a sane Perl version of one of the more common Internet Config settings.
.ie n .IP "%InternetConfigMap" 4
.el .IP "\f(CW%InternetConfigMap\fR" 4
.IX Item "%InternetConfigMap"
Access the Internet Config file map to:
.RS 4
.IP "filename" 4
.IX Item "filename"
Determine the file type and creator for a newly created file:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{"output.html"};
.Ve
.IP "type/creator" 4
.IX Item "type/creator"
Determine the extension to use for some type/creator combination:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{["WDBN", "MSWD"]};
.Ve
.RE
.RS 4
.RE
.SS "Types"
.IX Subsection "Types"
.IP "ICMapEntry" 4
.IX Item "ICMapEntry"
An entry in the file map. Fields are:
.Sp
.Vb 10
\&    short     version;
\&    OSType    file_type;
\&    OSType    file_creator;
\&    OSType    post_creator;
\&    long      flags;
\&    Str255    extension;
\&    Str255    creator_app_name;
\&    Str255    post_app_name;
\&    Str255    MIME_type;
\&    Str255    entry_name;
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "ICStart" 4
.IX Item "ICStart"
.PD 0
.IP "ICStart \s-1CREATOR\s0" 4
.IX Item "ICStart CREATOR"
.PD
Call this at application initialisation. Set creator to your application creator to 
allow for future expansion of the \s-1IC\s0 system (Default is MacPerl's creator). Returns 
a connection to the \s-1IC\s0 system.
.IP "ICStop \s-1INST\s0" 4
.IX Item "ICStop INST"
It is illegal to call this routine inside a ICBegin/End pair.
Call this at application termination, after which \s-1INST\s0
is no longer valid connection to \s-1IC.\s0
.ie n .IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE,\s0 @FOLDERS" 4
.el .IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE,\s0 \f(CW@FOLDERS\fR" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE, @FOLDERS"
.PD 0
.IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE\s0" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE"
.IP "ICGeneralFindConfigFile \s-1INST\s0" 4
.IX Item "ICGeneralFindConfigFile INST"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
It is illegal to call this routine inside a ICBegin/End pair.
Call to configure this connection to \s-1IC.\s0
This routine acts as a more general replacement for
ICFindConfigFile and ICFindUserConfigFile.
Set search_prefs to 1 (default) if you want it to search the preferences folder.
Set can_create to 1 if you want it to be able to create a new config.
Set count as the number of valid elements in folders.
Set folders to a pointer to the folders to search.
Setting count to 0 and folders to nil is \s-1OK.\s0
Searches the specified folders and then optionally the Preferences folder
in a unspecified manner.
.IP "ICChooseConfig \s-1INST\s0" 4
.IX Item "ICChooseConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICChooseNewConfig \s-1INST\s0" 4
.IX Item "ICChooseNewConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a new configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICGetConfigName \s-1INST, LONGNAME\s0" 4
.IX Item "ICGetConfigName INST, LONGNAME"
.PD 0
.IP "ICGetConfigName \s-1INST\s0" 4
.IX Item "ICGetConfigName INST"
.PD
Requires \s-1IC 1.2.\s0
You must specify a configuration before calling this routine.
Returns a string that describes the current configuration at a user
level. Set longname to 1 if you want a long name, up to 255
characters, or 0 (default) if you want a short name, typically about 32
characters.
The returned string is for user display only. If you rely on the
exact format of it, you will conflict with any future \s-1IC\s0
implementation that doesn't use explicit preference files.
.IP "ICGetConfigReference \s-1INST\s0" 4
.IX Item "ICGetConfigReference INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
You must specify a configuration before calling this routine.
Returns a self-contained reference to the instance's current
configuration.
.IP "ICSetConfigReference \s-1INST, REF, FLAGS\s0" 4
.IX Item "ICSetConfigReference INST, REF, FLAGS"
.PD 0
.IP "ICSetConfigReference \s-1INST, REF\s0" 4
.IX Item "ICSetConfigReference INST, REF"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Reconfigures the instance using a configuration reference that was
got using ICGetConfigReference reference. Set the
icNoUserInteraction_bit in flags if you require that this routine
not present a modal dialog. Other flag bits are reserved and should
be set to zero.
.IP "ICGetSeed \s-1INST\s0" 4
.IX Item "ICGetSeed INST"
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the current seed for the \s-1IC\s0 prefs database.
This seed changes each time a non-volatile preference is changed.
You can poll this to determine if any cached preferences change.
.IP "ICGetComponentInstance \s-1INST\s0" 4
.IX Item "ICGetComponentInstance INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the connection to the \s-1IC\s0 component.
.IP "ICBegin \s-1INST, PERM\s0" 4
.IX Item "ICBegin INST, PERM"
You must specify a configuration before calling this routine. It is illegal to
call this routine inside a ICBegin/End pair. Starting reading or writing
multiple preferences. A call to this must be balanced by a call to ICEnd. Do
not call WaitNextEvent between these calls. The perm specifies whether you
intend to read or read/write. Only one writer is allowed per instance. Note
that this may open resource files that are not closed until you call ICEnd.
.IP "ICGetPref \s-1INST, KEY\s0" 4
.IX Item "ICGetPref INST, KEY"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadOnlyPerm).
Reads the preference specified by key from the \s-1IC\s0 database to the
buffer pointed to by buf and size.
key must not be the empty string.
If called in a scalar context, return the preference. If called in a list
context, additionally returns the attributes.
Returns icPrefNotFound if there is no preference for the key.
.IP "ICSetPref \s-1INST, KEY, VALUE\s0 =item ICSetPref \s-1INST, KEY, VALUE, ATTR\s0" 4
.IX Item "ICSetPref INST, KEY, VALUE =item ICSetPref INST, KEY, VALUE, ATTR"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadWritePerm).
Sets the preference specified by \s-1KEY\s0 from the \s-1IC\s0 database to the
\&\s-1VALUE.\s0 If attr is ICattr_no_change (the default) then the preference attributes 
are not set. Otherwise the preference attributes are set to attr.
Returns icPermErr if the previous ICBegin was passed icReadOnlyPerm.
Returns icPermErr if current attr is locked, new attr is locked.
.IP "ICCountPref \s-1INST\s0" 4
.IX Item "ICCountPref INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Counts the total number of preferences.
.IP "ICGetIndPref	\s-1INST, N\s0" 4
.IX Item "ICGetIndPref INST, N"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Returns the key of the Nth preference.
n must be positive.
Returns icPrefNotFoundErr if n is greater than the total number of preferences.
.IP "ICDeletePref \s-1INST, KEY\s0" 4
.IX Item "ICDeletePref INST, KEY"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Deletes the preference specified by \s-1KEY.
KEY\s0 must not be the empty string.
Returns icPrefNotFound if the preference specified by key is not present.
.IP "ICEnd \s-1INST\s0" 4
.IX Item "ICEnd INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Terminates a preference session, as started by ICBegin.
You must have called ICBegin before calling this routine.
.IP "ICEditPreferences	\s-1INST, KEY\s0" 4
.IX Item "ICEditPreferences INST, KEY"
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Instructs \s-1IC\s0 to display the user interface associated with editing
preferences and focusing on the preference specified by key.
If key is the empty string then no preference should be focused upon.
You must have specified a configuration before calling this routine.
You do not need to call ICBegin before calling this routine.
In the current implementation this launches the \s-1IC\s0 application
(or brings it to the front) and displays the window containing
the preference specified by key.
It may have a radically different implementation in future
\&\s-1IC\s0 systems.
.IP "ICParseURL \s-1INST, HINT, DATA, START, END\s0" 4
.IX Item "ICParseURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICParseURL \s-1INST, HINT, DATA\s0" 4
.IX Item "ICParseURL INST, HINT, DATA"
.PD
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and returns it in a canonical form
in a handle.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START X END\s0 and 0 X \s-1START X\s0 length(\s-1DATA\s0) and 0 X \s-1END X\s0 length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL.\s0 In an array context, returns \s-1URL, START, END.\s0
.IP "ICLaunchURL \s-1INST, HINT, DATA, START, END\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICLaunchURL \s-1INST, HINT, DATA\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA"
.PD
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and feeds it off to the appropriate helper.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START X END\s0 and 0 X \s-1START X\s0 length(\s-1DATA\s0) and 0 X \s-1END X\s0 length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL.\s0 In an array context, returns \s-1URL, START, END.\s0
.IP "ICMapFileName \s-1INST, NAME\s0" 4
.IX Item "ICMapFileName INST, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapTypeCreator \s-1INST, TYPE, CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapTypeCreator INST, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICMapEntriesFileName \s-1INST, ENTRIES, NAME\s0" 4
.IX Item "ICMapEntriesFileName INST, ENTRIES, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapEntriesTypeCreator \s-1INST, ENTRIES, TYPE, CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapEntriesTypeCreator INST, ENTRIES, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICCountMapEntries	\s-1INST, ENTRIES\s0" 4
.IX Item "ICCountMapEntries INST, ENTRIES"
Counts the number of entries in the map.
.IP "ICGetIndMapEntry \s-1INST, ENTRIES, INDEX\s0" 4
.IX Item "ICGetIndMapEntry INST, ENTRIES, INDEX"
Returns the position of a map entry and the entry itself.
.Sp
.Vb 2
\&    $map = ICGetIndMapEntry $inst, $entries, 5;
\&    ($pos, $map) = ICGetIndMapEntry $inst, $entries, 5;
.Ve
.IP "ICGetMapEntry \s-1INST, ENTRIES, POS\s0" 4
.IX Item "ICGetMapEntry INST, ENTRIES, POS"
Returns the entry located at position pos in the mappings database.
.IP "ICSetMapEntry \s-1INST, ENTRIES, POS, ENTRY\s0" 4
.IX Item "ICSetMapEntry INST, ENTRIES, POS, ENTRY"
Replace the entry at position pos
.IP "ICDeleteMapEntry \s-1INST, ENTRIES, POS\s0" 4
.IX Item "ICDeleteMapEntry INST, ENTRIES, POS"
Delete the entry at position pos
.IP "ICAddMapEntry \s-1INST, ENTRIES, ENTRY\s0" 4
.IX Item "ICAddMapEntry INST, ENTRIES, ENTRY"
Add an entry to the database.
.IP "GetURL \s-1URL\s0" 4
.IX Item "GetURL URL"
Launch helper app with \s-1URL. \s0 Returns undef on error.
.IP "GetICHelper \s-1PROTOCOL\s0" 4
.IX Item "GetICHelper PROTOCOL"
Return list of creator \s-1ID\s0 and name for helper app assigned
to \s-1PROTOCOL. \s0 Returns only creator \s-1ID\s0 in scalar context.
Returns undef on error.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 420:" 4
.IX Item "Around line 420:"
Non-ASCII character seen before =encoding in 'X'. Assuming \s-1ISO8859\-1\s0
                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::InternetConfig5.16.3pm                  0100644 0001750 0001750 00000054017 12566241352 025343  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "InternetConfig 3"
.TH InternetConfig 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::InternetConfig \- Interface to Peter Lewis' and Quinns Internet Config system
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to the original Internet Config documentation is essential for proper use 
of these functions.
.SS "Constants"
.IX Subsection "Constants"
.IP "kICRealName" 4
.IX Item "kICRealName"
.PD 0
.IP "kICEmail" 4
.IX Item "kICEmail"
.IP "kICMailAccount" 4
.IX Item "kICMailAccount"
.IP "kICMailPassword" 4
.IX Item "kICMailPassword"
.IP "kICNewsAuthUsername" 4
.IX Item "kICNewsAuthUsername"
.IP "kICNewsAuthPassword" 4
.IX Item "kICNewsAuthPassword"
.IP "kICArchiePreferred" 4
.IX Item "kICArchiePreferred"
.IP "kICArchieAll" 4
.IX Item "kICArchieAll"
.IP "kICUMichPreferred" 4
.IX Item "kICUMichPreferred"
.IP "kICUMichAll" 4
.IX Item "kICUMichAll"
.IP "kICInfoMacPreferred" 4
.IX Item "kICInfoMacPreferred"
.IP "kICInfoMacAll" 4
.IX Item "kICInfoMacAll"
.IP "kICPhHost" 4
.IX Item "kICPhHost"
.IP "kICWhoisHost" 4
.IX Item "kICWhoisHost"
.IP "kICFingerHost" 4
.IX Item "kICFingerHost"
.IP "kICFTPHost" 4
.IX Item "kICFTPHost"
.IP "kICTelnetHost" 4
.IX Item "kICTelnetHost"
.IP "kICSMTPHost" 4
.IX Item "kICSMTPHost"
.IP "kICNNTPHost" 4
.IX Item "kICNNTPHost"
.IP "kICGopherHost" 4
.IX Item "kICGopherHost"
.IP "kICLDAPServer" 4
.IX Item "kICLDAPServer"
.IP "kICLDAPSearchbase" 4
.IX Item "kICLDAPSearchbase"
.IP "kICWWWHomePage" 4
.IX Item "kICWWWHomePage"
.IP "kICWAISGateway" 4
.IX Item "kICWAISGateway"
.IP "kICListFont" 4
.IX Item "kICListFont"
.IP "kICScreenFont" 4
.IX Item "kICScreenFont"
.IP "kICPrinterFont" 4
.IX Item "kICPrinterFont"
.IP "kICTextCreator" 4
.IX Item "kICTextCreator"
.IP "kICBinaryTypeCreator" 4
.IX Item "kICBinaryTypeCreator"
.IP "kICDownloadFolder" 4
.IX Item "kICDownloadFolder"
.IP "kICSignature" 4
.IX Item "kICSignature"
.IP "kICOrganization" 4
.IX Item "kICOrganization"
.IP "kICPlan" 4
.IX Item "kICPlan"
.IP "kICQuotingString" 4
.IX Item "kICQuotingString"
.IP "kICMailHeaders" 4
.IX Item "kICMailHeaders"
.IP "kICNewsHeaders" 4
.IX Item "kICNewsHeaders"
.IP "kICMapping" 4
.IX Item "kICMapping"
.IP "kICCharacterSet" 4
.IX Item "kICCharacterSet"
.IP "kICHelper" 4
.IX Item "kICHelper"
.IP "kICServices" 4
.IX Item "kICServices"
.IP "kICNewMailFlashIcon" 4
.IX Item "kICNewMailFlashIcon"
.IP "kICNewMailDialog" 4
.IX Item "kICNewMailDialog"
.IP "kICNewMailPlaySound" 4
.IX Item "kICNewMailPlaySound"
.IP "kICNewMailSoundName" 4
.IX Item "kICNewMailSoundName"
.IP "kICWebBackgroundColour" 4
.IX Item "kICWebBackgroundColour"
.IP "kICNoProxyDomains" 4
.IX Item "kICNoProxyDomains"
.IP "kICUseSocks" 4
.IX Item "kICUseSocks"
.IP "kICSocksHost" 4
.IX Item "kICSocksHost"
.IP "kICUseHTTPProxy" 4
.IX Item "kICUseHTTPProxy"
.IP "kICHTTPProxyHost" 4
.IX Item "kICHTTPProxyHost"
.IP "kICUseFTPProxy" 4
.IX Item "kICUseFTPProxy"
.IP "kICFTPProxyHost" 4
.IX Item "kICFTPProxyHost"
.IP "kICFTPProxyUser" 4
.IX Item "kICFTPProxyUser"
.IP "kICFTPProxyPassword" 4
.IX Item "kICFTPProxyPassword"
.IP "kICFTPProxyAccount" 4
.IX Item "kICFTPProxyAccount"
.PD
Internet Config settings.
.IP "ICmap_binary" 4
.IX Item "ICmap_binary"
.PD 0
.IP "ICmap_resource_fork" 4
.IX Item "ICmap_resource_fork"
.IP "ICmap_data_fork" 4
.IX Item "ICmap_data_fork"
.IP "ICmap_post" 4
.IX Item "ICmap_post"
.IP "ICmap_not_incoming" 4
.IX Item "ICmap_not_incoming"
.IP "ICmap_not_outgoing" 4
.IX Item "ICmap_not_outgoing"
.IP "ICservices_tcp" 4
.IX Item "ICservices_tcp"
.IP "ICservices_udp" 4
.IX Item "ICservices_udp"
.IP "icNoPerm" 4
.IX Item "icNoPerm"
.IP "icReadOnlyPerm" 4
.IX Item "icReadOnlyPerm"
.IP "icReadWritePerm" 4
.IX Item "icReadWritePerm"
.PD
Various constants.
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "$ICInstance" 4
.el .IP "\f(CW$ICInstance\fR" 4
.IX Item "$ICInstance"
The instance of the Internet Config database.
.ie n .IP "%RawInternetConfig" 4
.el .IP "\f(CW%RawInternetConfig\fR" 4
.IX Item "%RawInternetConfig"
Access the raw, uninterpreted value of an Internet Config setting.
.ie n .IP "%InternetConfig" 4
.el .IP "\f(CW%InternetConfig\fR" 4
.IX Item "%InternetConfig"
Access a sane Perl version of one of the more common Internet Config settings.
.ie n .IP "%InternetConfigMap" 4
.el .IP "\f(CW%InternetConfigMap\fR" 4
.IX Item "%InternetConfigMap"
Access the Internet Config file map to:
.RS 4
.IP "filename" 4
.IX Item "filename"
Determine the file type and creator for a newly created file:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{"output.html"};
.Ve
.IP "type/creator" 4
.IX Item "type/creator"
Determine the extension to use for some type/creator combination:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{["WDBN", "MSWD"]};
.Ve
.RE
.RS 4
.RE
.SS "Types"
.IX Subsection "Types"
.IP "ICMapEntry" 4
.IX Item "ICMapEntry"
An entry in the file map. Fields are:
.Sp
.Vb 10
\&    short     version;
\&    OSType    file_type;
\&    OSType    file_creator;
\&    OSType    post_creator;
\&    long      flags;
\&    Str255    extension;
\&    Str255    creator_app_name;
\&    Str255    post_app_name;
\&    Str255    MIME_type;
\&    Str255    entry_name;
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "ICStart" 4
.IX Item "ICStart"
.PD 0
.IP "ICStart \s-1CREATOR\s0" 4
.IX Item "ICStart CREATOR"
.PD
Call this at application initialisation. Set creator to your application creator to 
allow for future expansion of the \s-1IC\s0 system (Default is MacPerl's creator). Returns 
a connection to the \s-1IC\s0 system.
.IP "ICStop \s-1INST\s0" 4
.IX Item "ICStop INST"
It is illegal to call this routine inside a ICBegin/End pair.
Call this at application termination, after which \s-1INST\s0
is no longer valid connection to \s-1IC\s0.
.ie n .IP "ICGeneralFindConfigFile \s-1INST\s0, \s-1SEARCH_PREFS\s0, \s-1CAN_CREATE\s0, @FOLDERS" 4
.el .IP "ICGeneralFindConfigFile \s-1INST\s0, \s-1SEARCH_PREFS\s0, \s-1CAN_CREATE\s0, \f(CW@FOLDERS\fR" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE, @FOLDERS"
.PD 0
.IP "ICGeneralFindConfigFile \s-1INST\s0, \s-1SEARCH_PREFS\s0, \s-1CAN_CREATE\s0" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE"
.IP "ICGeneralFindConfigFile \s-1INST\s0" 4
.IX Item "ICGeneralFindConfigFile INST"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
It is illegal to call this routine inside a ICBegin/End pair.
Call to configure this connection to \s-1IC\s0.
This routine acts as a more general replacement for
ICFindConfigFile and ICFindUserConfigFile.
Set search_prefs to 1 (default) if you want it to search the preferences folder.
Set can_create to 1 if you want it to be able to create a new config.
Set count as the number of valid elements in folders.
Set folders to a pointer to the folders to search.
Setting count to 0 and folders to nil is \s-1OK\s0.
Searches the specified folders and then optionally the Preferences folder
in a unspecified manner.
.IP "ICChooseConfig \s-1INST\s0" 4
.IX Item "ICChooseConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC\s0 1.2.
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICChooseNewConfig \s-1INST\s0" 4
.IX Item "ICChooseNewConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC\s0 1.2.
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a new configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICGetConfigName \s-1INST\s0, \s-1LONGNAME\s0" 4
.IX Item "ICGetConfigName INST, LONGNAME"
.PD 0
.IP "ICGetConfigName \s-1INST\s0" 4
.IX Item "ICGetConfigName INST"
.PD
Requires \s-1IC\s0 1.2.
You must specify a configuration before calling this routine.
Returns a string that describes the current configuration at a user
level. Set longname to 1 if you want a long name, up to 255
characters, or 0 (default) if you want a short name, typically about 32
characters.
The returned string is for user display only. If you rely on the
exact format of it, you will conflict with any future \s-1IC\s0
implementation that doesn't use explicit preference files.
.IP "ICGetConfigReference \s-1INST\s0" 4
.IX Item "ICGetConfigReference INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC\s0 1.2.
You must specify a configuration before calling this routine.
Returns a self-contained reference to the instance's current
configuration.
.IP "ICSetConfigReference \s-1INST\s0, \s-1REF\s0, \s-1FLAGS\s0" 4
.IX Item "ICSetConfigReference INST, REF, FLAGS"
.PD 0
.IP "ICSetConfigReference \s-1INST\s0, \s-1REF\s0" 4
.IX Item "ICSetConfigReference INST, REF"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC\s0 1.2.
It is illegal to call this routine inside a ICBegin/End pair.
Reconfigures the instance using a configuration reference that was
got using ICGetConfigReference reference. Set the
icNoUserInteraction_bit in flags if you require that this routine
not present a modal dialog. Other flag bits are reserved and should
be set to zero.
.IP "ICGetSeed \s-1INST\s0" 4
.IX Item "ICGetSeed INST"
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the current seed for the \s-1IC\s0 prefs database.
This seed changes each time a non-volatile preference is changed.
You can poll this to determine if any cached preferences change.
.IP "ICGetComponentInstance \s-1INST\s0" 4
.IX Item "ICGetComponentInstance INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC\s0 1.2.
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the connection to the \s-1IC\s0 component.
.IP "ICBegin \s-1INST\s0, \s-1PERM\s0" 4
.IX Item "ICBegin INST, PERM"
You must specify a configuration before calling this routine. It is illegal to
call this routine inside a ICBegin/End pair. Starting reading or writing
multiple preferences. A call to this must be balanced by a call to ICEnd. Do
not call WaitNextEvent between these calls. The perm specifies whether you
intend to read or read/write. Only one writer is allowed per instance. Note
that this may open resource files that are not closed until you call ICEnd.
.IP "ICGetPref \s-1INST\s0, \s-1KEY\s0" 4
.IX Item "ICGetPref INST, KEY"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadOnlyPerm).
Reads the preference specified by key from the \s-1IC\s0 database to the
buffer pointed to by buf and size.
key must not be the empty string.
If called in a scalar context, return the preference. If called in a list
context, additionally returns the attributes.
Returns icPrefNotFound if there is no preference for the key.
.IP "ICSetPref \s-1INST\s0, \s-1KEY\s0, \s-1VALUE\s0 =item ICSetPref \s-1INST\s0, \s-1KEY\s0, \s-1VALUE\s0, \s-1ATTR\s0" 4
.IX Item "ICSetPref INST, KEY, VALUE =item ICSetPref INST, KEY, VALUE, ATTR"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadWritePerm).
Sets the preference specified by \s-1KEY\s0 from the \s-1IC\s0 database to the
\&\s-1VALUE\s0. If attr is ICattr_no_change (the default) then the preference attributes 
are not set. Otherwise the preference attributes are set to attr.
Returns icPermErr if the previous ICBegin was passed icReadOnlyPerm.
Returns icPermErr if current attr is locked, new attr is locked.
.IP "ICCountPref \s-1INST\s0" 4
.IX Item "ICCountPref INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Counts the total number of preferences.
.IP "ICGetIndPref	\s-1INST\s0, N" 4
.IX Item "ICGetIndPref	INST, N"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Returns the key of the Nth preference.
n must be positive.
Returns icPrefNotFoundErr if n is greater than the total number of preferences.
.IP "ICDeletePref \s-1INST\s0, \s-1KEY\s0" 4
.IX Item "ICDeletePref INST, KEY"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Deletes the preference specified by \s-1KEY\s0.
\&\s-1KEY\s0 must not be the empty string.
Returns icPrefNotFound if the preference specified by key is not present.
.IP "ICEnd \s-1INST\s0" 4
.IX Item "ICEnd INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Terminates a preference session, as started by ICBegin.
You must have called ICBegin before calling this routine.
.IP "ICEditPreferences	\s-1INST\s0, \s-1KEY\s0" 4
.IX Item "ICEditPreferences	INST, KEY"
Requires \s-1IC\s0 1.1.
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Instructs \s-1IC\s0 to display the user interface associated with editing
preferences and focusing on the preference specified by key.
If key is the empty string then no preference should be focused upon.
You must have specified a configuration before calling this routine.
You do not need to call ICBegin before calling this routine.
In the current implementation this launches the \s-1IC\s0 application
(or brings it to the front) and displays the window containing
the preference specified by key.
It may have a radically different implementation in future
\&\s-1IC\s0 systems.
.IP "ICParseURL \s-1INST\s0, \s-1HINT\s0, \s-1DATA\s0, \s-1START\s0, \s-1END\s0" 4
.IX Item "ICParseURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICParseURL \s-1INST\s0, \s-1HINT\s0, \s-1DATA\s0" 4
.IX Item "ICParseURL INST, HINT, DATA"
.PD
Requires \s-1IC\s0 1.1.
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and returns it in a canonical form
in a handle.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START\s0 X \s-1END\s0 and 0 X \s-1START\s0 X length(\s-1DATA\s0) and 0 X \s-1END\s0 X length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL\s0. In an array context, returns \s-1URL\s0, \s-1START\s0, \s-1END\s0.
.IP "ICLaunchURL \s-1INST\s0, \s-1HINT\s0, \s-1DATA\s0, \s-1START\s0, \s-1END\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICLaunchURL \s-1INST\s0, \s-1HINT\s0, \s-1DATA\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA"
.PD
Requires \s-1IC\s0 1.1.
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and feeds it off to the appropriate helper.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START\s0 X \s-1END\s0 and 0 X \s-1START\s0 X length(\s-1DATA\s0) and 0 X \s-1END\s0 X length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL\s0. In an array context, returns \s-1URL\s0, \s-1START\s0, \s-1END\s0.
.IP "ICMapFileName \s-1INST\s0, \s-1NAME\s0" 4
.IX Item "ICMapFileName INST, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapTypeCreator \s-1INST\s0, \s-1TYPE\s0, \s-1CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapTypeCreator INST, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICMapEntriesFileName \s-1INST\s0, \s-1ENTRIES\s0, \s-1NAME\s0" 4
.IX Item "ICMapEntriesFileName INST, ENTRIES, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapEntriesTypeCreator \s-1INST\s0, \s-1ENTRIES\s0, \s-1TYPE\s0, \s-1CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapEntriesTypeCreator INST, ENTRIES, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICCountMapEntries	\s-1INST\s0, \s-1ENTRIES\s0" 4
.IX Item "ICCountMapEntries	INST, ENTRIES"
Counts the number of entries in the map.
.IP "ICGetIndMapEntry \s-1INST\s0, \s-1ENTRIES\s0, \s-1INDEX\s0" 4
.IX Item "ICGetIndMapEntry INST, ENTRIES, INDEX"
Returns the position of a map entry and the entry itself.
.Sp
.Vb 2
\&    $map = ICGetIndMapEntry $inst, $entries, 5;
\&    ($pos, $map) = ICGetIndMapEntry $inst, $entries, 5;
.Ve
.IP "ICGetMapEntry \s-1INST\s0, \s-1ENTRIES\s0, \s-1POS\s0" 4
.IX Item "ICGetMapEntry INST, ENTRIES, POS"
Returns the entry located at position pos in the mappings database.
.IP "ICSetMapEntry \s-1INST\s0, \s-1ENTRIES\s0, \s-1POS\s0, \s-1ENTRY\s0" 4
.IX Item "ICSetMapEntry INST, ENTRIES, POS, ENTRY"
Replace the entry at position pos
.IP "ICDeleteMapEntry \s-1INST\s0, \s-1ENTRIES\s0, \s-1POS\s0" 4
.IX Item "ICDeleteMapEntry INST, ENTRIES, POS"
Delete the entry at position pos
.IP "ICAddMapEntry \s-1INST\s0, \s-1ENTRIES\s0, \s-1ENTRY\s0" 4
.IX Item "ICAddMapEntry INST, ENTRIES, ENTRY"
Add an entry to the database.
.IP "GetURL \s-1URL\s0" 4
.IX Item "GetURL URL"
Launch helper app with \s-1URL\s0.  Returns undef on error.
.IP "GetICHelper \s-1PROTOCOL\s0" 4
.IX Item "GetICHelper PROTOCOL"
Return list of creator \s-1ID\s0 and name for helper app assigned
to \s-1PROTOCOL\s0.  Returns only creator \s-1ID\s0 in scalar context.
Returns undef on error.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::InternetConfig5.18.3pm                  0100644 0001750 0001750 00000054104 12566241352 025342  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "InternetConfig 3"
.TH InternetConfig 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::InternetConfig \- Interface to Peter Lewis' and Quinns Internet Config system
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to the original Internet Config documentation is essential for proper use 
of these functions.
.SS "Constants"
.IX Subsection "Constants"
.IP "kICRealName" 4
.IX Item "kICRealName"
.PD 0
.IP "kICEmail" 4
.IX Item "kICEmail"
.IP "kICMailAccount" 4
.IX Item "kICMailAccount"
.IP "kICMailPassword" 4
.IX Item "kICMailPassword"
.IP "kICNewsAuthUsername" 4
.IX Item "kICNewsAuthUsername"
.IP "kICNewsAuthPassword" 4
.IX Item "kICNewsAuthPassword"
.IP "kICArchiePreferred" 4
.IX Item "kICArchiePreferred"
.IP "kICArchieAll" 4
.IX Item "kICArchieAll"
.IP "kICUMichPreferred" 4
.IX Item "kICUMichPreferred"
.IP "kICUMichAll" 4
.IX Item "kICUMichAll"
.IP "kICInfoMacPreferred" 4
.IX Item "kICInfoMacPreferred"
.IP "kICInfoMacAll" 4
.IX Item "kICInfoMacAll"
.IP "kICPhHost" 4
.IX Item "kICPhHost"
.IP "kICWhoisHost" 4
.IX Item "kICWhoisHost"
.IP "kICFingerHost" 4
.IX Item "kICFingerHost"
.IP "kICFTPHost" 4
.IX Item "kICFTPHost"
.IP "kICTelnetHost" 4
.IX Item "kICTelnetHost"
.IP "kICSMTPHost" 4
.IX Item "kICSMTPHost"
.IP "kICNNTPHost" 4
.IX Item "kICNNTPHost"
.IP "kICGopherHost" 4
.IX Item "kICGopherHost"
.IP "kICLDAPServer" 4
.IX Item "kICLDAPServer"
.IP "kICLDAPSearchbase" 4
.IX Item "kICLDAPSearchbase"
.IP "kICWWWHomePage" 4
.IX Item "kICWWWHomePage"
.IP "kICWAISGateway" 4
.IX Item "kICWAISGateway"
.IP "kICListFont" 4
.IX Item "kICListFont"
.IP "kICScreenFont" 4
.IX Item "kICScreenFont"
.IP "kICPrinterFont" 4
.IX Item "kICPrinterFont"
.IP "kICTextCreator" 4
.IX Item "kICTextCreator"
.IP "kICBinaryTypeCreator" 4
.IX Item "kICBinaryTypeCreator"
.IP "kICDownloadFolder" 4
.IX Item "kICDownloadFolder"
.IP "kICSignature" 4
.IX Item "kICSignature"
.IP "kICOrganization" 4
.IX Item "kICOrganization"
.IP "kICPlan" 4
.IX Item "kICPlan"
.IP "kICQuotingString" 4
.IX Item "kICQuotingString"
.IP "kICMailHeaders" 4
.IX Item "kICMailHeaders"
.IP "kICNewsHeaders" 4
.IX Item "kICNewsHeaders"
.IP "kICMapping" 4
.IX Item "kICMapping"
.IP "kICCharacterSet" 4
.IX Item "kICCharacterSet"
.IP "kICHelper" 4
.IX Item "kICHelper"
.IP "kICServices" 4
.IX Item "kICServices"
.IP "kICNewMailFlashIcon" 4
.IX Item "kICNewMailFlashIcon"
.IP "kICNewMailDialog" 4
.IX Item "kICNewMailDialog"
.IP "kICNewMailPlaySound" 4
.IX Item "kICNewMailPlaySound"
.IP "kICNewMailSoundName" 4
.IX Item "kICNewMailSoundName"
.IP "kICWebBackgroundColour" 4
.IX Item "kICWebBackgroundColour"
.IP "kICNoProxyDomains" 4
.IX Item "kICNoProxyDomains"
.IP "kICUseSocks" 4
.IX Item "kICUseSocks"
.IP "kICSocksHost" 4
.IX Item "kICSocksHost"
.IP "kICUseHTTPProxy" 4
.IX Item "kICUseHTTPProxy"
.IP "kICHTTPProxyHost" 4
.IX Item "kICHTTPProxyHost"
.IP "kICUseFTPProxy" 4
.IX Item "kICUseFTPProxy"
.IP "kICFTPProxyHost" 4
.IX Item "kICFTPProxyHost"
.IP "kICFTPProxyUser" 4
.IX Item "kICFTPProxyUser"
.IP "kICFTPProxyPassword" 4
.IX Item "kICFTPProxyPassword"
.IP "kICFTPProxyAccount" 4
.IX Item "kICFTPProxyAccount"
.PD
Internet Config settings.
.IP "ICmap_binary" 4
.IX Item "ICmap_binary"
.PD 0
.IP "ICmap_resource_fork" 4
.IX Item "ICmap_resource_fork"
.IP "ICmap_data_fork" 4
.IX Item "ICmap_data_fork"
.IP "ICmap_post" 4
.IX Item "ICmap_post"
.IP "ICmap_not_incoming" 4
.IX Item "ICmap_not_incoming"
.IP "ICmap_not_outgoing" 4
.IX Item "ICmap_not_outgoing"
.IP "ICservices_tcp" 4
.IX Item "ICservices_tcp"
.IP "ICservices_udp" 4
.IX Item "ICservices_udp"
.IP "icNoPerm" 4
.IX Item "icNoPerm"
.IP "icReadOnlyPerm" 4
.IX Item "icReadOnlyPerm"
.IP "icReadWritePerm" 4
.IX Item "icReadWritePerm"
.PD
Various constants.
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "$ICInstance" 4
.el .IP "\f(CW$ICInstance\fR" 4
.IX Item "$ICInstance"
The instance of the Internet Config database.
.ie n .IP "%RawInternetConfig" 4
.el .IP "\f(CW%RawInternetConfig\fR" 4
.IX Item "%RawInternetConfig"
Access the raw, uninterpreted value of an Internet Config setting.
.ie n .IP "%InternetConfig" 4
.el .IP "\f(CW%InternetConfig\fR" 4
.IX Item "%InternetConfig"
Access a sane Perl version of one of the more common Internet Config settings.
.ie n .IP "%InternetConfigMap" 4
.el .IP "\f(CW%InternetConfigMap\fR" 4
.IX Item "%InternetConfigMap"
Access the Internet Config file map to:
.RS 4
.IP "filename" 4
.IX Item "filename"
Determine the file type and creator for a newly created file:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{"output.html"};
.Ve
.IP "type/creator" 4
.IX Item "type/creator"
Determine the extension to use for some type/creator combination:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{["WDBN", "MSWD"]};
.Ve
.RE
.RS 4
.RE
.SS "Types"
.IX Subsection "Types"
.IP "ICMapEntry" 4
.IX Item "ICMapEntry"
An entry in the file map. Fields are:
.Sp
.Vb 10
\&    short     version;
\&    OSType    file_type;
\&    OSType    file_creator;
\&    OSType    post_creator;
\&    long      flags;
\&    Str255    extension;
\&    Str255    creator_app_name;
\&    Str255    post_app_name;
\&    Str255    MIME_type;
\&    Str255    entry_name;
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "ICStart" 4
.IX Item "ICStart"
.PD 0
.IP "ICStart \s-1CREATOR\s0" 4
.IX Item "ICStart CREATOR"
.PD
Call this at application initialisation. Set creator to your application creator to 
allow for future expansion of the \s-1IC\s0 system (Default is MacPerl's creator). Returns 
a connection to the \s-1IC\s0 system.
.IP "ICStop \s-1INST\s0" 4
.IX Item "ICStop INST"
It is illegal to call this routine inside a ICBegin/End pair.
Call this at application termination, after which \s-1INST\s0
is no longer valid connection to \s-1IC.\s0
.ie n .IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE,\s0 @FOLDERS" 4
.el .IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE,\s0 \f(CW@FOLDERS\fR" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE, @FOLDERS"
.PD 0
.IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE\s0" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE"
.IP "ICGeneralFindConfigFile \s-1INST\s0" 4
.IX Item "ICGeneralFindConfigFile INST"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
It is illegal to call this routine inside a ICBegin/End pair.
Call to configure this connection to \s-1IC.\s0
This routine acts as a more general replacement for
ICFindConfigFile and ICFindUserConfigFile.
Set search_prefs to 1 (default) if you want it to search the preferences folder.
Set can_create to 1 if you want it to be able to create a new config.
Set count as the number of valid elements in folders.
Set folders to a pointer to the folders to search.
Setting count to 0 and folders to nil is \s-1OK.\s0
Searches the specified folders and then optionally the Preferences folder
in a unspecified manner.
.IP "ICChooseConfig \s-1INST\s0" 4
.IX Item "ICChooseConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICChooseNewConfig \s-1INST\s0" 4
.IX Item "ICChooseNewConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a new configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICGetConfigName \s-1INST, LONGNAME\s0" 4
.IX Item "ICGetConfigName INST, LONGNAME"
.PD 0
.IP "ICGetConfigName \s-1INST\s0" 4
.IX Item "ICGetConfigName INST"
.PD
Requires \s-1IC 1.2.\s0
You must specify a configuration before calling this routine.
Returns a string that describes the current configuration at a user
level. Set longname to 1 if you want a long name, up to 255
characters, or 0 (default) if you want a short name, typically about 32
characters.
The returned string is for user display only. If you rely on the
exact format of it, you will conflict with any future \s-1IC\s0
implementation that doesn't use explicit preference files.
.IP "ICGetConfigReference \s-1INST\s0" 4
.IX Item "ICGetConfigReference INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
You must specify a configuration before calling this routine.
Returns a self-contained reference to the instance's current
configuration.
.IP "ICSetConfigReference \s-1INST, REF, FLAGS\s0" 4
.IX Item "ICSetConfigReference INST, REF, FLAGS"
.PD 0
.IP "ICSetConfigReference \s-1INST, REF\s0" 4
.IX Item "ICSetConfigReference INST, REF"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Reconfigures the instance using a configuration reference that was
got using ICGetConfigReference reference. Set the
icNoUserInteraction_bit in flags if you require that this routine
not present a modal dialog. Other flag bits are reserved and should
be set to zero.
.IP "ICGetSeed \s-1INST\s0" 4
.IX Item "ICGetSeed INST"
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the current seed for the \s-1IC\s0 prefs database.
This seed changes each time a non-volatile preference is changed.
You can poll this to determine if any cached preferences change.
.IP "ICGetComponentInstance \s-1INST\s0" 4
.IX Item "ICGetComponentInstance INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the connection to the \s-1IC\s0 component.
.IP "ICBegin \s-1INST, PERM\s0" 4
.IX Item "ICBegin INST, PERM"
You must specify a configuration before calling this routine. It is illegal to
call this routine inside a ICBegin/End pair. Starting reading or writing
multiple preferences. A call to this must be balanced by a call to ICEnd. Do
not call WaitNextEvent between these calls. The perm specifies whether you
intend to read or read/write. Only one writer is allowed per instance. Note
that this may open resource files that are not closed until you call ICEnd.
.IP "ICGetPref \s-1INST, KEY\s0" 4
.IX Item "ICGetPref INST, KEY"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadOnlyPerm).
Reads the preference specified by key from the \s-1IC\s0 database to the
buffer pointed to by buf and size.
key must not be the empty string.
If called in a scalar context, return the preference. If called in a list
context, additionally returns the attributes.
Returns icPrefNotFound if there is no preference for the key.
.IP "ICSetPref \s-1INST, KEY, VALUE\s0 =item ICSetPref \s-1INST, KEY, VALUE, ATTR\s0" 4
.IX Item "ICSetPref INST, KEY, VALUE =item ICSetPref INST, KEY, VALUE, ATTR"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadWritePerm).
Sets the preference specified by \s-1KEY\s0 from the \s-1IC\s0 database to the
\&\s-1VALUE.\s0 If attr is ICattr_no_change (the default) then the preference attributes 
are not set. Otherwise the preference attributes are set to attr.
Returns icPermErr if the previous ICBegin was passed icReadOnlyPerm.
Returns icPermErr if current attr is locked, new attr is locked.
.IP "ICCountPref \s-1INST\s0" 4
.IX Item "ICCountPref INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Counts the total number of preferences.
.IP "ICGetIndPref	\s-1INST, N\s0" 4
.IX Item "ICGetIndPref INST, N"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Returns the key of the Nth preference.
n must be positive.
Returns icPrefNotFoundErr if n is greater than the total number of preferences.
.IP "ICDeletePref \s-1INST, KEY\s0" 4
.IX Item "ICDeletePref INST, KEY"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Deletes the preference specified by \s-1KEY.
KEY\s0 must not be the empty string.
Returns icPrefNotFound if the preference specified by key is not present.
.IP "ICEnd \s-1INST\s0" 4
.IX Item "ICEnd INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Terminates a preference session, as started by ICBegin.
You must have called ICBegin before calling this routine.
.IP "ICEditPreferences	\s-1INST, KEY\s0" 4
.IX Item "ICEditPreferences INST, KEY"
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Instructs \s-1IC\s0 to display the user interface associated with editing
preferences and focusing on the preference specified by key.
If key is the empty string then no preference should be focused upon.
You must have specified a configuration before calling this routine.
You do not need to call ICBegin before calling this routine.
In the current implementation this launches the \s-1IC\s0 application
(or brings it to the front) and displays the window containing
the preference specified by key.
It may have a radically different implementation in future
\&\s-1IC\s0 systems.
.IP "ICParseURL \s-1INST, HINT, DATA, START, END\s0" 4
.IX Item "ICParseURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICParseURL \s-1INST, HINT, DATA\s0" 4
.IX Item "ICParseURL INST, HINT, DATA"
.PD
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and returns it in a canonical form
in a handle.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START X END\s0 and 0 X \s-1START X\s0 length(\s-1DATA\s0) and 0 X \s-1END X\s0 length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL.\s0 In an array context, returns \s-1URL, START, END.\s0
.IP "ICLaunchURL \s-1INST, HINT, DATA, START, END\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICLaunchURL \s-1INST, HINT, DATA\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA"
.PD
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and feeds it off to the appropriate helper.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START X END\s0 and 0 X \s-1START X\s0 length(\s-1DATA\s0) and 0 X \s-1END X\s0 length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL.\s0 In an array context, returns \s-1URL, START, END.\s0
.IP "ICMapFileName \s-1INST, NAME\s0" 4
.IX Item "ICMapFileName INST, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapTypeCreator \s-1INST, TYPE, CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapTypeCreator INST, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICMapEntriesFileName \s-1INST, ENTRIES, NAME\s0" 4
.IX Item "ICMapEntriesFileName INST, ENTRIES, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapEntriesTypeCreator \s-1INST, ENTRIES, TYPE, CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapEntriesTypeCreator INST, ENTRIES, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICCountMapEntries	\s-1INST, ENTRIES\s0" 4
.IX Item "ICCountMapEntries INST, ENTRIES"
Counts the number of entries in the map.
.IP "ICGetIndMapEntry \s-1INST, ENTRIES, INDEX\s0" 4
.IX Item "ICGetIndMapEntry INST, ENTRIES, INDEX"
Returns the position of a map entry and the entry itself.
.Sp
.Vb 2
\&    $map = ICGetIndMapEntry $inst, $entries, 5;
\&    ($pos, $map) = ICGetIndMapEntry $inst, $entries, 5;
.Ve
.IP "ICGetMapEntry \s-1INST, ENTRIES, POS\s0" 4
.IX Item "ICGetMapEntry INST, ENTRIES, POS"
Returns the entry located at position pos in the mappings database.
.IP "ICSetMapEntry \s-1INST, ENTRIES, POS, ENTRY\s0" 4
.IX Item "ICSetMapEntry INST, ENTRIES, POS, ENTRY"
Replace the entry at position pos
.IP "ICDeleteMapEntry \s-1INST, ENTRIES, POS\s0" 4
.IX Item "ICDeleteMapEntry INST, ENTRIES, POS"
Delete the entry at position pos
.IP "ICAddMapEntry \s-1INST, ENTRIES, ENTRY\s0" 4
.IX Item "ICAddMapEntry INST, ENTRIES, ENTRY"
Add an entry to the database.
.IP "GetURL \s-1URL\s0" 4
.IX Item "GetURL URL"
Launch helper app with \s-1URL. \s0 Returns undef on error.
.IP "GetICHelper \s-1PROTOCOL\s0" 4
.IX Item "GetICHelper PROTOCOL"
Return list of creator \s-1ID\s0 and name for helper app assigned
to \s-1PROTOCOL. \s0 Returns only creator \s-1ID\s0 in scalar context.
Returns undef on error.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 420:" 4
.IX Item "Around line 420:"
Non-ASCII character seen before =encoding in 'X'. Assuming \s-1ISO8859\-1\s0
                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Memory.3pm                              0100644 0001750 0001750 00000051765 12566241356 023376  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Memory 3"
.TH Memory 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Memory \- MacOS Memory Manager
.PP
Provide the MacPerl interface to the memory management routines in the MacOS.
.PP
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. You have been warned.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
The Memory module defines Ptr and Handle classes, and function interfaces to the 
memory management.
.PP
.Vb 3
\&    use Mac::Memory;
\&    $handle = new Handle;
\&    $handle2 = NewHandle;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The following packages and functions provide low level access to the memory
management functions.
.SS "Handle"
.IX Subsection "Handle"
Handle provides an object interface to do simple operations on MacOS handles.
The interface is simpler than the more general memory management functions.
.IP "new" 4
.IX Item "new"
.PD 0
.IP "new \s-1STRING\s0" 4
.IX Item "new STRING"
.PD
Create a new handle and return it. Copy \f(CW$STRING\fR into the handle if present.
Return a 0 value if a handle could not be created.
.Sp
.Vb 2
\&    $h = new Handle;
\&    $hs = new Handle("This string will now exist in hyperspace");
.Ve
.IP "size" 4
.IX Item "size"
Return the size of a handle (i.e., its data portion).
.Sp
.Vb 2
\&    die unless (new Handle)\->size == 0;
\&    die unless $hs\->size == 40;
.Ve
.IP "append \s-1DATA \s0" 4
.IX Item "append DATA "
Appends the \s-1DATA\s0 to the end of the handle
and returns the success as the result.
.Sp
.Vb 2
\&    $h\->append("This string will now exist in hyperspace");
\&    die unless $h\->size == 40;
.Ve
.IP "set \s-1OFFSET, LENGTH, DATA \s0" 4
.IX Item "set OFFSET, LENGTH, DATA "
.PD 0
.IP "set \s-1OFFSET, LENGTH \s0" 4
.IX Item "set OFFSET, LENGTH "
.IP "set \s-1OFFSET \s0" 4
.IX Item "set OFFSET "
.IP "set" 4
.IX Item "set"
.PD
Munge the contents of the handle with the \f(CW$DATA\fR (deleting if not present), for the
\&\f(CW$LENGTH\fR (through to the end of the handle contents if not present), starting at
\&\f(CW$OFFSET\fR (the beginning if not present).
.Sp
.Vb 1
\&    $h\->set(5, 6, "datum");
.Ve
.Sp
yields
.Sp
.Vb 1
\&    "This datum will now exist in hyperspace"
.Ve
.IP "get \s-1OFFSET, LENGTH \s0" 4
.IX Item "get OFFSET, LENGTH "
.PD 0
.IP "get \s-1OFFSET \s0" 4
.IX Item "get OFFSET "
.IP "get" 4
.IX Item "get"
.PD
Return a datum which is the contents of the memory referenced by \f(CW$HANDLE\fR, 
starting at \f(CW$OFFSET\fR (default zero), of length \f(CW$LENGTH\fR (default the rest
of the handle).
.Sp
.Vb 1
\&    die unless $hs\->get(5, 6) eq "string";
.Ve
.IP "address" 4
.IX Item "address"
Return the address of the memory block.
.IP "state" 4
.IX Item "state"
.PD 0
.IP "state \s-1NEWSTATE \s0" 4
.IX Item "state NEWSTATE "
.PD
Return the (locked) state of the handle, or return \s-1TRUE\s0 if the \f(CW$NEWSTATE\fR
of the handle is installed.
.Sp
.Vb 4
\&    my $state = $h\->state;
\&    HLock($h);
\&    # bunch of operations requiring $h to be locked
\&    $h\->state($state);  # so nested locks exit properly
.Ve
.Sp
More than the lock state is stored here, so restoring the actual state on leaving
a scope is required.
.IP "open \s-1MODE\s0" 4
.IX Item "open MODE"
Open a stream to a handle and return it.
.Sp
\&\s-1NOT DEFINED AT THE MOMENT\s0
.Sp
SysRet
_open(hand, mode)
	Handle	hand
	int		mode
	\s-1CODE:
	RETVAL\s0 = OpenHandle(hand, mode);
	\s-1OUTPUT:
	RETVAL\s0
.IP "dispose" 4
.IX Item "dispose"
Disposes of the handle.
Return zero if no error was detected.
.PP
Almost all of the memory management needs in MacPerl can be handled by the above interface
.SS "Ptr"
.IX Subsection "Ptr"
Ptr provides an object interface to do simple operations on MacOS pointers
(nonrelocatable heap blocks). There are very few good reasons to create pointers
like this.
.IP "size" 4
.IX Item "size"
Return the size of a pointer (i.e., its data portion).
.Sp
.Vb 1
\&    die unless $ptr\->size == 40;
.Ve
.IP "set \s-1OFFSET, DATA \s0" 4
.IX Item "set OFFSET, DATA "
.PD 0
.IP "get \s-1OFFSET, LENGTH \s0" 4
.IX Item "get OFFSET, LENGTH "
.IP "get \s-1OFFSET \s0" 4
.IX Item "get OFFSET "
.IP "get" 4
.IX Item "get"
.PD
Return a datum which is the contents of the memory referenced by \s-1PTR, \s0
starting at \f(CW$OFFSET\fR (default zero), of length \f(CW$LENGTH\fR (default the rest
of the block).
.Sp
.Vb 1
\&    die unless $ps\->get(5, 6) eq "string";
.Ve
.IP "address" 4
.IX Item "address"
Return the address of the memory block.
.IP "dispose" 4
.IX Item "dispose"
Disposes of the block.
Return zero if no error was detected.
.SS "Functions"
.IX Subsection "Functions"
.IP "GetApplLimit" 4
.IX Item "GetApplLimit"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The GetApplLimit function returns the current application heap limit.
.IP "TopMem" 4
.IX Item "TopMem"
Return a pointer to the top of memory for the application.
.IP "NewHandle \s-1BYTECOUNT\s0" 4
.IX Item "NewHandle BYTECOUNT"
.PD 0
.IP "NewHandleSys \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleSys BYTECOUNT"
.IP "NewHandleClear \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleClear BYTECOUNT"
.IP "NewHandleSysClear \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleSysClear BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewHandleSys, NewHandleSysClear)
.Sp
Return a handle of \f(CW$BYTECOUNT\fR size.
.Sp
NewHandleSys returns a handle in the system heap.
.Sp
The NewHandleClear and NewHandleSysClear functions work much as the NewHandle
and NewHandleSys functions do but set
all bytes in the new block to 0 instead of leaving the contents of the block
undefined.
Currently, this is quite inefficient.
.IP "NewPtr \s-1BYTECOUNT\s0" 4
.IX Item "NewPtr BYTECOUNT"
.PD 0
.IP "NewPtrSys \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.IP "NewPtrClear \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrClear BYTECOUNT"
.PD 0
.IP "NewPtrSysClear \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrSysClear BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewPtrSys, NewPtrSysClear)
.Sp
Allocate a nonrelocatable block of memory of a specified size.
.Sp
NewPtrSys and NewPtrSysClear allocate blocks in the system heap.
.Sp
NewPtrClear and NewPtrSysClear allocate and zero the blocks (inefficiently).
.IP "MaxBlock" 4
.IX Item "MaxBlock"
.PD 0
.IP "MaxBlockSys" 4
.IX Item "MaxBlockSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (MaxBlockSys)
.Sp
The MaxBlock function returns the maximum contiguous space, in bytes, that you
could obtain after compacting the current heap zone. MaxBlock does not actually
do the compaction.
.Sp
MaxBlockSys does the same for the system heap.
.IP "StackSpace" 4
.IX Item "StackSpace"
The StackSpace function returns the current amount of stack space (in bytes)
between the current stack pointer and the application heap at the instant of
return from the trap.
.IP "NewEmptyHandle" 4
.IX Item "NewEmptyHandle"
.PD 0
.IP "NewEmptyHandleSys" 4
.IX Item "NewEmptyHandleSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewEmptyHandleSys)
.Sp
The NewEmptyHandle function initializes a new handle by allocating a master
pointer for it, but it does not allocate any memory for the handle to control.
NewEmptyHandle
sets the handle's master pointer to \s-1NIL.\s0
.Sp
NewEmptyHandleSys does the same for the system heap.
.IP "HLock \s-1HANDLE\s0" 4
.IX Item "HLock HANDLE"
Lock a relocatable block so that it does not move in the heap. If you plan to
dereference a handle and then allocate, move, or purge memory (or call a routine
that does so), then you should lock the handle before using the dereferenced
handle.
.IP "HUnlock \s-1HANDLE\s0" 4
.IX Item "HUnlock HANDLE"
Unlock a relocatable block so that it is free to move in its heap zone.
.IP "HPurge \s-1HANDLE\s0" 4
.IX Item "HPurge HANDLE"
Mark a relocatable block so that it can be purged if a memory request cannot be
fulfilled after compaction.
.IP "HNoPurge \s-1HANDLE\s0" 4
.IX Item "HNoPurge HANDLE"
Mark a relocatable block so that it cannot be purged.
.IP "HLockHi \s-1HANDLE\s0" 4
.IX Item "HLockHi HANDLE"
The HLockHi procedure attempts to move the relocatable block referenced by the
handle \f(CW$HANDLE\fR upward until it reaches a nonrelocatable block, a locked relocatable
block, or the top of the heap. Then HLockHi locks the block.
.IP "TempNewHandle \s-1BYTECOUNT\s0" 4
.IX Item "TempNewHandle BYTECOUNT"
The TempNewHandle function returns a handle to a block of size \f(CW$BYTECOUNT\fR from
temporary memory. If it
cannot allocate a block of that size, the function returns \s-1NIL.\s0
.IP "TempMaxMem" 4
.IX Item "TempMaxMem"
The TempMaxMem function compacts the current heap zone and returns the size of
the largest contiguous block available for temporary allocation.
.Sp
.Vb 1
\&    $SIZE = &TempMaxMem;
.Ve
.IP "TempFreeMem" 4
.IX Item "TempFreeMem"
The TempFreeMem function returns the total amount of free temporary memory that
you could allocate by calling TempNewHandle. The returned value is the total
number of free bytes. Because these bytes might be dispersed throughout memory,
it is ordinarily not possible to allocate a single relocatable block of that
size.
.Sp
.Vb 1
\&    $SIZE = &TempFreeMem;
.Ve
.IP "CompactMem \s-1BYTECOUNT\s0" 4
.IX Item "CompactMem BYTECOUNT"
.PD 0
.IP "CompactMemSys \s-1BYTECOUNT\s0" 4
.IX Item "CompactMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (CompactMemSys)
.Sp
The CompactMem function compacts the current heap zone by moving unlocked,
relocatable blocks down until they encounter nonrelocatable blocks or locked,
relocatable blocks, but not by purging blocks. It continues compacting until it
either finds a contiguous block of at least \f(CW$BYTECOUNT\fR free bytes or has compacted
the entire zone.
.Sp
The CompactMem function returns the size, in bytes, of the largest contiguous
free block for which it could make room, but it does not actually allocate that
block.
.Sp
CompactMemSys does the same for the system heap.
.IP "PurgeMem \s-1BYTECOUNT\s0" 4
.IX Item "PurgeMem BYTECOUNT"
.PD 0
.IP "PurgeMemSys \s-1BYTECOUNT\s0" 4
.IX Item "PurgeMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (PurgeMemSys)
.Sp
The PurgeMem procedure sequentially purges blocks from the current heap zone
until it either allocates a contiguous block of at least \f(CW$BYTECOUNT\fR free bytes or
has purged the entire zone. If it purges the entire zone without creating a
contiguous block of at least \f(CW$BYTECOUNT\fR free bytes, PurgeMem generates a
memFullErr.
.Sp
The PurgeMem procedure purges only relocatable, unlocked, purgeable blocks.
.Sp
The PurgeMem procedure does not actually attempt to allocate a block of  \f(CW$BYTECOUNT\fR
bytes.
.Sp
PurgeMemSys does the same for the system heap.
.IP "FreeMem" 4
.IX Item "FreeMem"
.PD 0
.IP "FreeMemSys" 4
.IX Item "FreeMemSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (FreeMemSys)
.Sp
The FreeMem function returns the total amount of free space (in bytes) in the
current heap zone. Note that it usually isn't possible to allocate a block of
that size, because of heap fragmentation due to nonrelocatable or locked blocks.
.Sp
FreeMemSys does the same for the system heap.
.IP "ReserveMem \s-1BYTECOUNT\s0" 4
.IX Item "ReserveMem BYTECOUNT"
.PD 0
.IP "ReserveMemSys \s-1BYTECOUNT\s0" 4
.IX Item "ReserveMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (ReserveMemSys)
.Sp
The ReserveMem procedure attempts to create free space for a block of \f(CW$BYTECOUNT\fR
contiguous logical bytes at the lowest possible position in the current heap
zone. It pursues every available means of placing the block as close as possible
to the bottom of the zone, including moving other relocatable blocks upward,
expanding the zone (if possible), and purging blocks from it.
.Sp
ReserveMemSys does the same for the system heap.
.IP "MaxMem" 4
.IX Item "MaxMem"
.PD 0
.IP "MaxMemSys" 4
.IX Item "MaxMemSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (MaxMemSys)
.Sp
Use the MaxMem function to compact and purge the current heap zone. The values
returned are the amount of memory available and the amount by which the zone can
grow.
.Sp
.Vb 1
\&    ($SIZE, $GROW) = &MaxMem;
.Ve
.Sp
MaxMemSys does the purge and compact of the system heap zone, and the \f(CW$GROW\fR value
is set to zero.
.IP "MoveHHi \s-1HANDLE\s0" 4
.IX Item "MoveHHi HANDLE"
The MoveHHi procedure attempts to move the relocatable block referenced by the
handle \f(CW$HANDLE\fR upward until it reaches a nonrelocatable block, a locked relocatable
block, or the top of the heap.
.IP "DisposePtr \s-1PTR\s0" 4
.IX Item "DisposePtr PTR"
Releases the memory occupied by the nonrelocatable block specified by \f(CW$PTR\fR.
.IP "GetPtrSize \s-1PTR\s0" 4
.IX Item "GetPtrSize PTR"
The GetPtrSize function returns the logical size, in bytes, of the nonrelocatable
block pointed to by \f(CW$PTR\fR.
.IP "SetPtrSize \s-1PTR, NEWSIZE\s0" 4
.IX Item "SetPtrSize PTR, NEWSIZE"
The SetPtrSize procedure attempts to change the logical size of the
nonrelocatable block pointed to by \f(CW$PTR\fR. The new logical size is specified by
\&\f(CW$NEWSIZE\fR.
Return zero if no error was detected.
.IP "DisposeHandle \s-1HANDLE\s0" 4
.IX Item "DisposeHandle HANDLE"
The DisposeHandle procedure releases the memory occupied by the relocatable block
whose handle is \f(CW$HANDLE\fR. It also frees the handle's master pointer for other uses.
.IP "SetHandleSize \s-1HANDLE, BYTECOUNT\s0" 4
.IX Item "SetHandleSize HANDLE, BYTECOUNT"
The SetHandleSize procedure attempts to change the logical size of the
relocatable block whose handle is \f(CW$HANDLE\fR. The new logical size is specified by
\&\f(CW$BYTECOUNT\fR.
Return zero if no error was detected.
.IP "GetHandleSize \s-1HANDLE\s0" 4
.IX Item "GetHandleSize HANDLE"
The GetHandleSize function returns the logical size, in bytes, of the relocatable
block whose handle is \f(CW$HANDLE\fR. In case of an error, GetHandleSize returns 0.
.IP "ReallocateHandle \s-1HANDLE, BYTECOUNT\s0" 4
.IX Item "ReallocateHandle HANDLE, BYTECOUNT"
Allocates a new relocatable block with a logical size of \f(CW$BYTECOUNT\fR bytes. It
updates the handle \f(CW$HANDLE\fR by setting its master pointer to point to the new block. 
The new block is unlocked and unpurgeable.
Return zero if no error was detected.
.IP "EmptyHandle" 4
.IX Item "EmptyHandle"
Free memory taken by a relocatable block without freeing the relocatable block's
master pointer for other uses.
.IP "MoreMasters" 4
.IX Item "MoreMasters"
Call the MoreMasters procedure several times at the beginning of your program to
prevent the Memory Manager from running out of master pointers in the middle of
application execution. If it does run out, it allocates more, possibly causing
heap fragmentation.
.IP "BlockMove \s-1SOURCEPTR, DESTPTR, BYTECOUNT\s0" 4
.IX Item "BlockMove SOURCEPTR, DESTPTR, BYTECOUNT"
.PD 0
.IP "BlockMoveData \s-1SOURCEPTR, DESTPTR, BYTECOUNT\s0" 4
.IX Item "BlockMoveData SOURCEPTR, DESTPTR, BYTECOUNT"
.PD
The BlockMove/BlockMoveData procedure moves a block of \f(CW$BYTECOUNT\fR consecutive bytes from the
address designated by \f(CW$SOURCEPTR\fR to that designated by \f(CW$DESTPTR\fR.
.IP "PurgeSpace" 4
.IX Item "PurgeSpace"
Determine the total amount of free memory and the size of the largest allocatable
block after a purge of the heap.
.Sp
.Vb 1
\&    ($Total, $Contiguous) = &PurgeSpace;
.Ve
.IP "HGetState \s-1HANDLE\s0" 4
.IX Item "HGetState HANDLE"
Get the current properties of a relocatable block (perhaps so that you can change
and then later restore those properties).
.IP "HSetState \s-1HANDLE, STATE\s0" 4
.IX Item "HSetState HANDLE, STATE"
Restore properties of a block after a call to HGetState.
.IP "HandToHand \s-1HANDLE\s0" 4
.IX Item "HandToHand HANDLE"
The HandToHand function attempts to copy the information in the relocatable block
to which \f(CW$HANDLE\fR is a handle.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "PtrToHand \s-1PTR, BYTECOUNT\s0" 4
.IX Item "PtrToHand PTR, BYTECOUNT"
The PtrToHand function returns a newly created handle to a copy of
the number of bytes specified by \f(CW$BYTECOUNT\fR, beginning at the location
specified by \f(CW$PTR\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "PtrToXHand \s-1HANDLE, PTR, BYTECOUNT\s0" 4
.IX Item "PtrToXHand HANDLE, PTR, BYTECOUNT"
The PtrToXHand function makes the existing handle, specified by \f(CW$HANDLE\fR, a handle
to a copy of the number of bytes specified by \f(CW$BYTECOUNT\fR, beginning at
the location specified by \f(CW$PTR\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "HandAndHand \s-1AHNDLE, BHNDLE\s0" 4
.IX Item "HandAndHand AHNDLE, BHNDLE"
The HandAndHand function concatenates the information from the relocatable block
to which \f(CW$AHNDL\fR is a handle onto the end of the relocatable block to which \f(CW$BHNDL\fR
is a handle. The \f(CW$AHNDL\fR variable remains unchanged.
Return zero if no error was detected.
.IP "PtrAndHand \s-1PTR, HANDLE, BYTECOUNT\s0" 4
.IX Item "PtrAndHand PTR, HANDLE, BYTECOUNT"
The PtrAndHand function takes the number of bytes specified by \f(CW$BYTECOUNT\fR, 
beginning at the location specified by \f(CW$PTR\fR, and concatenates them
onto the end of the relocatable block to which \f(CW$HANDLE\fR is a handle.
.PP
The low level interface is not likely to be needed, except for the \fIHLock()\fR function.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Memory5.16.3pm                          0100644 0001750 0001750 00000051706 12566241356 023703  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Memory 3"
.TH Memory 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Memory \- MacOS Memory Manager
.PP
Provide the MacPerl interface to the memory management routines in the MacOS.
.PP
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. You have been warned.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
The Memory module defines Ptr and Handle classes, and function interfaces to the 
memory management.
.PP
.Vb 3
\&    use Mac::Memory;
\&    $handle = new Handle;
\&    $handle2 = NewHandle;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The following packages and functions provide low level access to the memory
management functions.
.SS "Handle"
.IX Subsection "Handle"
Handle provides an object interface to do simple operations on MacOS handles.
The interface is simpler than the more general memory management functions.
.IP "new" 4
.IX Item "new"
.PD 0
.IP "new \s-1STRING\s0" 4
.IX Item "new STRING"
.PD
Create a new handle and return it. Copy \f(CW$STRING\fR into the handle if present.
Return a 0 value if a handle could not be created.
.Sp
.Vb 2
\&    $h = new Handle;
\&    $hs = new Handle("This string will now exist in hyperspace");
.Ve
.IP "size" 4
.IX Item "size"
Return the size of a handle (i.e., its data portion).
.Sp
.Vb 2
\&    die unless (new Handle)\->size == 0;
\&    die unless $hs\->size == 40;
.Ve
.IP "append \s-1DATA\s0" 4
.IX Item "append DATA"
Appends the \s-1DATA\s0 to the end of the handle
and returns the success as the result.
.Sp
.Vb 2
\&    $h\->append("This string will now exist in hyperspace");
\&    die unless $h\->size == 40;
.Ve
.IP "set \s-1OFFSET\s0, \s-1LENGTH\s0, \s-1DATA\s0" 4
.IX Item "set OFFSET, LENGTH, DATA"
.PD 0
.IP "set \s-1OFFSET\s0, \s-1LENGTH\s0" 4
.IX Item "set OFFSET, LENGTH"
.IP "set \s-1OFFSET\s0" 4
.IX Item "set OFFSET"
.IP "set" 4
.IX Item "set"
.PD
Munge the contents of the handle with the \f(CW$DATA\fR (deleting if not present), for the
\&\f(CW$LENGTH\fR (through to the end of the handle contents if not present), starting at
\&\f(CW$OFFSET\fR (the beginning if not present).
.Sp
.Vb 1
\&    $h\->set(5, 6, "datum");
.Ve
.Sp
yields
.Sp
.Vb 1
\&    "This datum will now exist in hyperspace"
.Ve
.IP "get \s-1OFFSET\s0, \s-1LENGTH\s0" 4
.IX Item "get OFFSET, LENGTH"
.PD 0
.IP "get \s-1OFFSET\s0" 4
.IX Item "get OFFSET"
.IP "get" 4
.IX Item "get"
.PD
Return a datum which is the contents of the memory referenced by \f(CW$HANDLE\fR, 
starting at \f(CW$OFFSET\fR (default zero), of length \f(CW$LENGTH\fR (default the rest
of the handle).
.Sp
.Vb 1
\&    die unless $hs\->get(5, 6) eq "string";
.Ve
.IP "address" 4
.IX Item "address"
Return the address of the memory block.
.IP "state" 4
.IX Item "state"
.PD 0
.IP "state \s-1NEWSTATE\s0" 4
.IX Item "state NEWSTATE"
.PD
Return the (locked) state of the handle, or return \s-1TRUE\s0 if the \f(CW$NEWSTATE\fR
of the handle is installed.
.Sp
.Vb 4
\&    my $state = $h\->state;
\&    HLock($h);
\&    # bunch of operations requiring $h to be locked
\&    $h\->state($state);  # so nested locks exit properly
.Ve
.Sp
More than the lock state is stored here, so restoring the actual state on leaving
a scope is required.
.IP "open \s-1MODE\s0" 4
.IX Item "open MODE"
Open a stream to a handle and return it.
.Sp
\&\s-1NOT\s0 \s-1DEFINED\s0 \s-1AT\s0 \s-1THE\s0 \s-1MOMENT\s0
.Sp
SysRet
_open(hand, mode)
	Handle	hand
	int		mode
	\s-1CODE:\s0
	\s-1RETVAL\s0 = OpenHandle(hand, mode);
	\s-1OUTPUT:\s0
	\s-1RETVAL\s0
.IP "dispose" 4
.IX Item "dispose"
Disposes of the handle.
Return zero if no error was detected.
.PP
Almost all of the memory management needs in MacPerl can be handled by the above interface
.SS "Ptr"
.IX Subsection "Ptr"
Ptr provides an object interface to do simple operations on MacOS pointers
(nonrelocatable heap blocks). There are very few good reasons to create pointers
like this.
.IP "size" 4
.IX Item "size"
Return the size of a pointer (i.e., its data portion).
.Sp
.Vb 1
\&    die unless $ptr\->size == 40;
.Ve
.IP "set \s-1OFFSET\s0, \s-1DATA\s0" 4
.IX Item "set OFFSET, DATA"
.PD 0
.IP "get \s-1OFFSET\s0, \s-1LENGTH\s0" 4
.IX Item "get OFFSET, LENGTH"
.IP "get \s-1OFFSET\s0" 4
.IX Item "get OFFSET"
.IP "get" 4
.IX Item "get"
.PD
Return a datum which is the contents of the memory referenced by \s-1PTR\s0, 
starting at \f(CW$OFFSET\fR (default zero), of length \f(CW$LENGTH\fR (default the rest
of the block).
.Sp
.Vb 1
\&    die unless $ps\->get(5, 6) eq "string";
.Ve
.IP "address" 4
.IX Item "address"
Return the address of the memory block.
.IP "dispose" 4
.IX Item "dispose"
Disposes of the block.
Return zero if no error was detected.
.SS "Functions"
.IX Subsection "Functions"
.IP "GetApplLimit" 4
.IX Item "GetApplLimit"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The GetApplLimit function returns the current application heap limit.
.IP "TopMem" 4
.IX Item "TopMem"
Return a pointer to the top of memory for the application.
.IP "NewHandle \s-1BYTECOUNT\s0" 4
.IX Item "NewHandle BYTECOUNT"
.PD 0
.IP "NewHandleSys \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleSys BYTECOUNT"
.IP "NewHandleClear \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleClear BYTECOUNT"
.IP "NewHandleSysClear \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleSysClear BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewHandleSys, NewHandleSysClear)
.Sp
Return a handle of \f(CW$BYTECOUNT\fR size.
.Sp
NewHandleSys returns a handle in the system heap.
.Sp
The NewHandleClear and NewHandleSysClear functions work much as the NewHandle
and NewHandleSys functions do but set
all bytes in the new block to 0 instead of leaving the contents of the block
undefined.
Currently, this is quite inefficient.
.IP "NewPtr \s-1BYTECOUNT\s0" 4
.IX Item "NewPtr BYTECOUNT"
.PD 0
.IP "NewPtrSys \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.IP "NewPtrClear \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrClear BYTECOUNT"
.PD 0
.IP "NewPtrSysClear \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrSysClear BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewPtrSys, NewPtrSysClear)
.Sp
Allocate a nonrelocatable block of memory of a specified size.
.Sp
NewPtrSys and NewPtrSysClear allocate blocks in the system heap.
.Sp
NewPtrClear and NewPtrSysClear allocate and zero the blocks (inefficiently).
.IP "MaxBlock" 4
.IX Item "MaxBlock"
.PD 0
.IP "MaxBlockSys" 4
.IX Item "MaxBlockSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (MaxBlockSys)
.Sp
The MaxBlock function returns the maximum contiguous space, in bytes, that you
could obtain after compacting the current heap zone. MaxBlock does not actually
do the compaction.
.Sp
MaxBlockSys does the same for the system heap.
.IP "StackSpace" 4
.IX Item "StackSpace"
The StackSpace function returns the current amount of stack space (in bytes)
between the current stack pointer and the application heap at the instant of
return from the trap.
.IP "NewEmptyHandle" 4
.IX Item "NewEmptyHandle"
.PD 0
.IP "NewEmptyHandleSys" 4
.IX Item "NewEmptyHandleSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewEmptyHandleSys)
.Sp
The NewEmptyHandle function initializes a new handle by allocating a master
pointer for it, but it does not allocate any memory for the handle to control.
NewEmptyHandle
sets the handle's master pointer to \s-1NIL\s0.
.Sp
NewEmptyHandleSys does the same for the system heap.
.IP "HLock \s-1HANDLE\s0" 4
.IX Item "HLock HANDLE"
Lock a relocatable block so that it does not move in the heap. If you plan to
dereference a handle and then allocate, move, or purge memory (or call a routine
that does so), then you should lock the handle before using the dereferenced
handle.
.IP "HUnlock \s-1HANDLE\s0" 4
.IX Item "HUnlock HANDLE"
Unlock a relocatable block so that it is free to move in its heap zone.
.IP "HPurge \s-1HANDLE\s0" 4
.IX Item "HPurge HANDLE"
Mark a relocatable block so that it can be purged if a memory request cannot be
fulfilled after compaction.
.IP "HNoPurge \s-1HANDLE\s0" 4
.IX Item "HNoPurge HANDLE"
Mark a relocatable block so that it cannot be purged.
.IP "HLockHi \s-1HANDLE\s0" 4
.IX Item "HLockHi HANDLE"
The HLockHi procedure attempts to move the relocatable block referenced by the
handle \f(CW$HANDLE\fR upward until it reaches a nonrelocatable block, a locked relocatable
block, or the top of the heap. Then HLockHi locks the block.
.IP "TempNewHandle \s-1BYTECOUNT\s0" 4
.IX Item "TempNewHandle BYTECOUNT"
The TempNewHandle function returns a handle to a block of size \f(CW$BYTECOUNT\fR from
temporary memory. If it
cannot allocate a block of that size, the function returns \s-1NIL\s0.
.IP "TempMaxMem" 4
.IX Item "TempMaxMem"
The TempMaxMem function compacts the current heap zone and returns the size of
the largest contiguous block available for temporary allocation.
.Sp
.Vb 1
\&    $SIZE = &TempMaxMem;
.Ve
.IP "TempFreeMem" 4
.IX Item "TempFreeMem"
The TempFreeMem function returns the total amount of free temporary memory that
you could allocate by calling TempNewHandle. The returned value is the total
number of free bytes. Because these bytes might be dispersed throughout memory,
it is ordinarily not possible to allocate a single relocatable block of that
size.
.Sp
.Vb 1
\&    $SIZE = &TempFreeMem;
.Ve
.IP "CompactMem \s-1BYTECOUNT\s0" 4
.IX Item "CompactMem BYTECOUNT"
.PD 0
.IP "CompactMemSys \s-1BYTECOUNT\s0" 4
.IX Item "CompactMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (CompactMemSys)
.Sp
The CompactMem function compacts the current heap zone by moving unlocked,
relocatable blocks down until they encounter nonrelocatable blocks or locked,
relocatable blocks, but not by purging blocks. It continues compacting until it
either finds a contiguous block of at least \f(CW$BYTECOUNT\fR free bytes or has compacted
the entire zone.
.Sp
The CompactMem function returns the size, in bytes, of the largest contiguous
free block for which it could make room, but it does not actually allocate that
block.
.Sp
CompactMemSys does the same for the system heap.
.IP "PurgeMem \s-1BYTECOUNT\s0" 4
.IX Item "PurgeMem BYTECOUNT"
.PD 0
.IP "PurgeMemSys \s-1BYTECOUNT\s0" 4
.IX Item "PurgeMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (PurgeMemSys)
.Sp
The PurgeMem procedure sequentially purges blocks from the current heap zone
until it either allocates a contiguous block of at least \f(CW$BYTECOUNT\fR free bytes or
has purged the entire zone. If it purges the entire zone without creating a
contiguous block of at least \f(CW$BYTECOUNT\fR free bytes, PurgeMem generates a
memFullErr.
.Sp
The PurgeMem procedure purges only relocatable, unlocked, purgeable blocks.
.Sp
The PurgeMem procedure does not actually attempt to allocate a block of  \f(CW$BYTECOUNT\fR
bytes.
.Sp
PurgeMemSys does the same for the system heap.
.IP "FreeMem" 4
.IX Item "FreeMem"
.PD 0
.IP "FreeMemSys" 4
.IX Item "FreeMemSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (FreeMemSys)
.Sp
The FreeMem function returns the total amount of free space (in bytes) in the
current heap zone. Note that it usually isn't possible to allocate a block of
that size, because of heap fragmentation due to nonrelocatable or locked blocks.
.Sp
FreeMemSys does the same for the system heap.
.IP "ReserveMem \s-1BYTECOUNT\s0" 4
.IX Item "ReserveMem BYTECOUNT"
.PD 0
.IP "ReserveMemSys \s-1BYTECOUNT\s0" 4
.IX Item "ReserveMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (ReserveMemSys)
.Sp
The ReserveMem procedure attempts to create free space for a block of \f(CW$BYTECOUNT\fR
contiguous logical bytes at the lowest possible position in the current heap
zone. It pursues every available means of placing the block as close as possible
to the bottom of the zone, including moving other relocatable blocks upward,
expanding the zone (if possible), and purging blocks from it.
.Sp
ReserveMemSys does the same for the system heap.
.IP "MaxMem" 4
.IX Item "MaxMem"
.PD 0
.IP "MaxMemSys" 4
.IX Item "MaxMemSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (MaxMemSys)
.Sp
Use the MaxMem function to compact and purge the current heap zone. The values
returned are the amount of memory available and the amount by which the zone can
grow.
.Sp
.Vb 1
\&    ($SIZE, $GROW) = &MaxMem;
.Ve
.Sp
MaxMemSys does the purge and compact of the system heap zone, and the \f(CW$GROW\fR value
is set to zero.
.IP "MoveHHi \s-1HANDLE\s0" 4
.IX Item "MoveHHi HANDLE"
The MoveHHi procedure attempts to move the relocatable block referenced by the
handle \f(CW$HANDLE\fR upward until it reaches a nonrelocatable block, a locked relocatable
block, or the top of the heap.
.IP "DisposePtr \s-1PTR\s0" 4
.IX Item "DisposePtr PTR"
Releases the memory occupied by the nonrelocatable block specified by \f(CW$PTR\fR.
.IP "GetPtrSize \s-1PTR\s0" 4
.IX Item "GetPtrSize PTR"
The GetPtrSize function returns the logical size, in bytes, of the nonrelocatable
block pointed to by \f(CW$PTR\fR.
.IP "SetPtrSize \s-1PTR\s0, \s-1NEWSIZE\s0" 4
.IX Item "SetPtrSize PTR, NEWSIZE"
The SetPtrSize procedure attempts to change the logical size of the
nonrelocatable block pointed to by \f(CW$PTR\fR. The new logical size is specified by
\&\f(CW$NEWSIZE\fR.
Return zero if no error was detected.
.IP "DisposeHandle \s-1HANDLE\s0" 4
.IX Item "DisposeHandle HANDLE"
The DisposeHandle procedure releases the memory occupied by the relocatable block
whose handle is \f(CW$HANDLE\fR. It also frees the handle's master pointer for other uses.
.IP "SetHandleSize \s-1HANDLE\s0, \s-1BYTECOUNT\s0" 4
.IX Item "SetHandleSize HANDLE, BYTECOUNT"
The SetHandleSize procedure attempts to change the logical size of the
relocatable block whose handle is \f(CW$HANDLE\fR. The new logical size is specified by
\&\f(CW$BYTECOUNT\fR.
Return zero if no error was detected.
.IP "GetHandleSize \s-1HANDLE\s0" 4
.IX Item "GetHandleSize HANDLE"
The GetHandleSize function returns the logical size, in bytes, of the relocatable
block whose handle is \f(CW$HANDLE\fR. In case of an error, GetHandleSize returns 0.
.IP "ReallocateHandle \s-1HANDLE\s0, \s-1BYTECOUNT\s0" 4
.IX Item "ReallocateHandle HANDLE, BYTECOUNT"
Allocates a new relocatable block with a logical size of \f(CW$BYTECOUNT\fR bytes. It
updates the handle \f(CW$HANDLE\fR by setting its master pointer to point to the new block. 
The new block is unlocked and unpurgeable.
Return zero if no error was detected.
.IP "EmptyHandle" 4
.IX Item "EmptyHandle"
Free memory taken by a relocatable block without freeing the relocatable block's
master pointer for other uses.
.IP "MoreMasters" 4
.IX Item "MoreMasters"
Call the MoreMasters procedure several times at the beginning of your program to
prevent the Memory Manager from running out of master pointers in the middle of
application execution. If it does run out, it allocates more, possibly causing
heap fragmentation.
.IP "BlockMove \s-1SOURCEPTR\s0, \s-1DESTPTR\s0, \s-1BYTECOUNT\s0" 4
.IX Item "BlockMove SOURCEPTR, DESTPTR, BYTECOUNT"
.PD 0
.IP "BlockMoveData \s-1SOURCEPTR\s0, \s-1DESTPTR\s0, \s-1BYTECOUNT\s0" 4
.IX Item "BlockMoveData SOURCEPTR, DESTPTR, BYTECOUNT"
.PD
The BlockMove/BlockMoveData procedure moves a block of \f(CW$BYTECOUNT\fR consecutive bytes from the
address designated by \f(CW$SOURCEPTR\fR to that designated by \f(CW$DESTPTR\fR.
.IP "PurgeSpace" 4
.IX Item "PurgeSpace"
Determine the total amount of free memory and the size of the largest allocatable
block after a purge of the heap.
.Sp
.Vb 1
\&    ($Total, $Contiguous) = &PurgeSpace;
.Ve
.IP "HGetState \s-1HANDLE\s0" 4
.IX Item "HGetState HANDLE"
Get the current properties of a relocatable block (perhaps so that you can change
and then later restore those properties).
.IP "HSetState \s-1HANDLE\s0, \s-1STATE\s0" 4
.IX Item "HSetState HANDLE, STATE"
Restore properties of a block after a call to HGetState.
.IP "HandToHand \s-1HANDLE\s0" 4
.IX Item "HandToHand HANDLE"
The HandToHand function attempts to copy the information in the relocatable block
to which \f(CW$HANDLE\fR is a handle.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "PtrToHand \s-1PTR\s0, \s-1BYTECOUNT\s0" 4
.IX Item "PtrToHand PTR, BYTECOUNT"
The PtrToHand function returns a newly created handle to a copy of
the number of bytes specified by \f(CW$BYTECOUNT\fR, beginning at the location
specified by \f(CW$PTR\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "PtrToXHand \s-1HANDLE\s0, \s-1PTR\s0, \s-1BYTECOUNT\s0" 4
.IX Item "PtrToXHand HANDLE, PTR, BYTECOUNT"
The PtrToXHand function makes the existing handle, specified by \f(CW$HANDLE\fR, a handle
to a copy of the number of bytes specified by \f(CW$BYTECOUNT\fR, beginning at
the location specified by \f(CW$PTR\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "HandAndHand \s-1AHNDLE\s0, \s-1BHNDLE\s0" 4
.IX Item "HandAndHand AHNDLE, BHNDLE"
The HandAndHand function concatenates the information from the relocatable block
to which \f(CW$AHNDL\fR is a handle onto the end of the relocatable block to which \f(CW$BHNDL\fR
is a handle. The \f(CW$AHNDL\fR variable remains unchanged.
Return zero if no error was detected.
.IP "PtrAndHand \s-1PTR\s0, \s-1HANDLE\s0, \s-1BYTECOUNT\s0" 4
.IX Item "PtrAndHand PTR, HANDLE, BYTECOUNT"
The PtrAndHand function takes the number of bytes specified by \f(CW$BYTECOUNT\fR, 
beginning at the location specified by \f(CW$PTR\fR, and concatenates them
onto the end of the relocatable block to which \f(CW$HANDLE\fR is a handle.
.PP
The low level interface is not likely to be needed, except for the \fIHLock()\fR function.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Memory5.18.3pm                          0100644 0001750 0001750 00000051765 12566241356 023712  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Memory 3"
.TH Memory 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Memory \- MacOS Memory Manager
.PP
Provide the MacPerl interface to the memory management routines in the MacOS.
.PP
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. You have been warned.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
The Memory module defines Ptr and Handle classes, and function interfaces to the 
memory management.
.PP
.Vb 3
\&    use Mac::Memory;
\&    $handle = new Handle;
\&    $handle2 = NewHandle;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The following packages and functions provide low level access to the memory
management functions.
.SS "Handle"
.IX Subsection "Handle"
Handle provides an object interface to do simple operations on MacOS handles.
The interface is simpler than the more general memory management functions.
.IP "new" 4
.IX Item "new"
.PD 0
.IP "new \s-1STRING\s0" 4
.IX Item "new STRING"
.PD
Create a new handle and return it. Copy \f(CW$STRING\fR into the handle if present.
Return a 0 value if a handle could not be created.
.Sp
.Vb 2
\&    $h = new Handle;
\&    $hs = new Handle("This string will now exist in hyperspace");
.Ve
.IP "size" 4
.IX Item "size"
Return the size of a handle (i.e., its data portion).
.Sp
.Vb 2
\&    die unless (new Handle)\->size == 0;
\&    die unless $hs\->size == 40;
.Ve
.IP "append \s-1DATA \s0" 4
.IX Item "append DATA "
Appends the \s-1DATA\s0 to the end of the handle
and returns the success as the result.
.Sp
.Vb 2
\&    $h\->append("This string will now exist in hyperspace");
\&    die unless $h\->size == 40;
.Ve
.IP "set \s-1OFFSET, LENGTH, DATA \s0" 4
.IX Item "set OFFSET, LENGTH, DATA "
.PD 0
.IP "set \s-1OFFSET, LENGTH \s0" 4
.IX Item "set OFFSET, LENGTH "
.IP "set \s-1OFFSET \s0" 4
.IX Item "set OFFSET "
.IP "set" 4
.IX Item "set"
.PD
Munge the contents of the handle with the \f(CW$DATA\fR (deleting if not present), for the
\&\f(CW$LENGTH\fR (through to the end of the handle contents if not present), starting at
\&\f(CW$OFFSET\fR (the beginning if not present).
.Sp
.Vb 1
\&    $h\->set(5, 6, "datum");
.Ve
.Sp
yields
.Sp
.Vb 1
\&    "This datum will now exist in hyperspace"
.Ve
.IP "get \s-1OFFSET, LENGTH \s0" 4
.IX Item "get OFFSET, LENGTH "
.PD 0
.IP "get \s-1OFFSET \s0" 4
.IX Item "get OFFSET "
.IP "get" 4
.IX Item "get"
.PD
Return a datum which is the contents of the memory referenced by \f(CW$HANDLE\fR, 
starting at \f(CW$OFFSET\fR (default zero), of length \f(CW$LENGTH\fR (default the rest
of the handle).
.Sp
.Vb 1
\&    die unless $hs\->get(5, 6) eq "string";
.Ve
.IP "address" 4
.IX Item "address"
Return the address of the memory block.
.IP "state" 4
.IX Item "state"
.PD 0
.IP "state \s-1NEWSTATE \s0" 4
.IX Item "state NEWSTATE "
.PD
Return the (locked) state of the handle, or return \s-1TRUE\s0 if the \f(CW$NEWSTATE\fR
of the handle is installed.
.Sp
.Vb 4
\&    my $state = $h\->state;
\&    HLock($h);
\&    # bunch of operations requiring $h to be locked
\&    $h\->state($state);  # so nested locks exit properly
.Ve
.Sp
More than the lock state is stored here, so restoring the actual state on leaving
a scope is required.
.IP "open \s-1MODE\s0" 4
.IX Item "open MODE"
Open a stream to a handle and return it.
.Sp
\&\s-1NOT DEFINED AT THE MOMENT\s0
.Sp
SysRet
_open(hand, mode)
	Handle	hand
	int		mode
	\s-1CODE:
	RETVAL\s0 = OpenHandle(hand, mode);
	\s-1OUTPUT:
	RETVAL\s0
.IP "dispose" 4
.IX Item "dispose"
Disposes of the handle.
Return zero if no error was detected.
.PP
Almost all of the memory management needs in MacPerl can be handled by the above interface
.SS "Ptr"
.IX Subsection "Ptr"
Ptr provides an object interface to do simple operations on MacOS pointers
(nonrelocatable heap blocks). There are very few good reasons to create pointers
like this.
.IP "size" 4
.IX Item "size"
Return the size of a pointer (i.e., its data portion).
.Sp
.Vb 1
\&    die unless $ptr\->size == 40;
.Ve
.IP "set \s-1OFFSET, DATA \s0" 4
.IX Item "set OFFSET, DATA "
.PD 0
.IP "get \s-1OFFSET, LENGTH \s0" 4
.IX Item "get OFFSET, LENGTH "
.IP "get \s-1OFFSET \s0" 4
.IX Item "get OFFSET "
.IP "get" 4
.IX Item "get"
.PD
Return a datum which is the contents of the memory referenced by \s-1PTR, \s0
starting at \f(CW$OFFSET\fR (default zero), of length \f(CW$LENGTH\fR (default the rest
of the block).
.Sp
.Vb 1
\&    die unless $ps\->get(5, 6) eq "string";
.Ve
.IP "address" 4
.IX Item "address"
Return the address of the memory block.
.IP "dispose" 4
.IX Item "dispose"
Disposes of the block.
Return zero if no error was detected.
.SS "Functions"
.IX Subsection "Functions"
.IP "GetApplLimit" 4
.IX Item "GetApplLimit"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The GetApplLimit function returns the current application heap limit.
.IP "TopMem" 4
.IX Item "TopMem"
Return a pointer to the top of memory for the application.
.IP "NewHandle \s-1BYTECOUNT\s0" 4
.IX Item "NewHandle BYTECOUNT"
.PD 0
.IP "NewHandleSys \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleSys BYTECOUNT"
.IP "NewHandleClear \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleClear BYTECOUNT"
.IP "NewHandleSysClear \s-1BYTECOUNT\s0" 4
.IX Item "NewHandleSysClear BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewHandleSys, NewHandleSysClear)
.Sp
Return a handle of \f(CW$BYTECOUNT\fR size.
.Sp
NewHandleSys returns a handle in the system heap.
.Sp
The NewHandleClear and NewHandleSysClear functions work much as the NewHandle
and NewHandleSys functions do but set
all bytes in the new block to 0 instead of leaving the contents of the block
undefined.
Currently, this is quite inefficient.
.IP "NewPtr \s-1BYTECOUNT\s0" 4
.IX Item "NewPtr BYTECOUNT"
.PD 0
.IP "NewPtrSys \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.IP "NewPtrClear \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrClear BYTECOUNT"
.PD 0
.IP "NewPtrSysClear \s-1BYTECOUNT\s0" 4
.IX Item "NewPtrSysClear BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewPtrSys, NewPtrSysClear)
.Sp
Allocate a nonrelocatable block of memory of a specified size.
.Sp
NewPtrSys and NewPtrSysClear allocate blocks in the system heap.
.Sp
NewPtrClear and NewPtrSysClear allocate and zero the blocks (inefficiently).
.IP "MaxBlock" 4
.IX Item "MaxBlock"
.PD 0
.IP "MaxBlockSys" 4
.IX Item "MaxBlockSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (MaxBlockSys)
.Sp
The MaxBlock function returns the maximum contiguous space, in bytes, that you
could obtain after compacting the current heap zone. MaxBlock does not actually
do the compaction.
.Sp
MaxBlockSys does the same for the system heap.
.IP "StackSpace" 4
.IX Item "StackSpace"
The StackSpace function returns the current amount of stack space (in bytes)
between the current stack pointer and the application heap at the instant of
return from the trap.
.IP "NewEmptyHandle" 4
.IX Item "NewEmptyHandle"
.PD 0
.IP "NewEmptyHandleSys" 4
.IX Item "NewEmptyHandleSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (NewEmptyHandleSys)
.Sp
The NewEmptyHandle function initializes a new handle by allocating a master
pointer for it, but it does not allocate any memory for the handle to control.
NewEmptyHandle
sets the handle's master pointer to \s-1NIL.\s0
.Sp
NewEmptyHandleSys does the same for the system heap.
.IP "HLock \s-1HANDLE\s0" 4
.IX Item "HLock HANDLE"
Lock a relocatable block so that it does not move in the heap. If you plan to
dereference a handle and then allocate, move, or purge memory (or call a routine
that does so), then you should lock the handle before using the dereferenced
handle.
.IP "HUnlock \s-1HANDLE\s0" 4
.IX Item "HUnlock HANDLE"
Unlock a relocatable block so that it is free to move in its heap zone.
.IP "HPurge \s-1HANDLE\s0" 4
.IX Item "HPurge HANDLE"
Mark a relocatable block so that it can be purged if a memory request cannot be
fulfilled after compaction.
.IP "HNoPurge \s-1HANDLE\s0" 4
.IX Item "HNoPurge HANDLE"
Mark a relocatable block so that it cannot be purged.
.IP "HLockHi \s-1HANDLE\s0" 4
.IX Item "HLockHi HANDLE"
The HLockHi procedure attempts to move the relocatable block referenced by the
handle \f(CW$HANDLE\fR upward until it reaches a nonrelocatable block, a locked relocatable
block, or the top of the heap. Then HLockHi locks the block.
.IP "TempNewHandle \s-1BYTECOUNT\s0" 4
.IX Item "TempNewHandle BYTECOUNT"
The TempNewHandle function returns a handle to a block of size \f(CW$BYTECOUNT\fR from
temporary memory. If it
cannot allocate a block of that size, the function returns \s-1NIL.\s0
.IP "TempMaxMem" 4
.IX Item "TempMaxMem"
The TempMaxMem function compacts the current heap zone and returns the size of
the largest contiguous block available for temporary allocation.
.Sp
.Vb 1
\&    $SIZE = &TempMaxMem;
.Ve
.IP "TempFreeMem" 4
.IX Item "TempFreeMem"
The TempFreeMem function returns the total amount of free temporary memory that
you could allocate by calling TempNewHandle. The returned value is the total
number of free bytes. Because these bytes might be dispersed throughout memory,
it is ordinarily not possible to allocate a single relocatable block of that
size.
.Sp
.Vb 1
\&    $SIZE = &TempFreeMem;
.Ve
.IP "CompactMem \s-1BYTECOUNT\s0" 4
.IX Item "CompactMem BYTECOUNT"
.PD 0
.IP "CompactMemSys \s-1BYTECOUNT\s0" 4
.IX Item "CompactMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (CompactMemSys)
.Sp
The CompactMem function compacts the current heap zone by moving unlocked,
relocatable blocks down until they encounter nonrelocatable blocks or locked,
relocatable blocks, but not by purging blocks. It continues compacting until it
either finds a contiguous block of at least \f(CW$BYTECOUNT\fR free bytes or has compacted
the entire zone.
.Sp
The CompactMem function returns the size, in bytes, of the largest contiguous
free block for which it could make room, but it does not actually allocate that
block.
.Sp
CompactMemSys does the same for the system heap.
.IP "PurgeMem \s-1BYTECOUNT\s0" 4
.IX Item "PurgeMem BYTECOUNT"
.PD 0
.IP "PurgeMemSys \s-1BYTECOUNT\s0" 4
.IX Item "PurgeMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (PurgeMemSys)
.Sp
The PurgeMem procedure sequentially purges blocks from the current heap zone
until it either allocates a contiguous block of at least \f(CW$BYTECOUNT\fR free bytes or
has purged the entire zone. If it purges the entire zone without creating a
contiguous block of at least \f(CW$BYTECOUNT\fR free bytes, PurgeMem generates a
memFullErr.
.Sp
The PurgeMem procedure purges only relocatable, unlocked, purgeable blocks.
.Sp
The PurgeMem procedure does not actually attempt to allocate a block of  \f(CW$BYTECOUNT\fR
bytes.
.Sp
PurgeMemSys does the same for the system heap.
.IP "FreeMem" 4
.IX Item "FreeMem"
.PD 0
.IP "FreeMemSys" 4
.IX Item "FreeMemSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (FreeMemSys)
.Sp
The FreeMem function returns the total amount of free space (in bytes) in the
current heap zone. Note that it usually isn't possible to allocate a block of
that size, because of heap fragmentation due to nonrelocatable or locked blocks.
.Sp
FreeMemSys does the same for the system heap.
.IP "ReserveMem \s-1BYTECOUNT\s0" 4
.IX Item "ReserveMem BYTECOUNT"
.PD 0
.IP "ReserveMemSys \s-1BYTECOUNT\s0" 4
.IX Item "ReserveMemSys BYTECOUNT"
.PD
\&\fBMac \s-1OS\s0 only.\fR (ReserveMemSys)
.Sp
The ReserveMem procedure attempts to create free space for a block of \f(CW$BYTECOUNT\fR
contiguous logical bytes at the lowest possible position in the current heap
zone. It pursues every available means of placing the block as close as possible
to the bottom of the zone, including moving other relocatable blocks upward,
expanding the zone (if possible), and purging blocks from it.
.Sp
ReserveMemSys does the same for the system heap.
.IP "MaxMem" 4
.IX Item "MaxMem"
.PD 0
.IP "MaxMemSys" 4
.IX Item "MaxMemSys"
.PD
\&\fBMac \s-1OS\s0 only.\fR (MaxMemSys)
.Sp
Use the MaxMem function to compact and purge the current heap zone. The values
returned are the amount of memory available and the amount by which the zone can
grow.
.Sp
.Vb 1
\&    ($SIZE, $GROW) = &MaxMem;
.Ve
.Sp
MaxMemSys does the purge and compact of the system heap zone, and the \f(CW$GROW\fR value
is set to zero.
.IP "MoveHHi \s-1HANDLE\s0" 4
.IX Item "MoveHHi HANDLE"
The MoveHHi procedure attempts to move the relocatable block referenced by the
handle \f(CW$HANDLE\fR upward until it reaches a nonrelocatable block, a locked relocatable
block, or the top of the heap.
.IP "DisposePtr \s-1PTR\s0" 4
.IX Item "DisposePtr PTR"
Releases the memory occupied by the nonrelocatable block specified by \f(CW$PTR\fR.
.IP "GetPtrSize \s-1PTR\s0" 4
.IX Item "GetPtrSize PTR"
The GetPtrSize function returns the logical size, in bytes, of the nonrelocatable
block pointed to by \f(CW$PTR\fR.
.IP "SetPtrSize \s-1PTR, NEWSIZE\s0" 4
.IX Item "SetPtrSize PTR, NEWSIZE"
The SetPtrSize procedure attempts to change the logical size of the
nonrelocatable block pointed to by \f(CW$PTR\fR. The new logical size is specified by
\&\f(CW$NEWSIZE\fR.
Return zero if no error was detected.
.IP "DisposeHandle \s-1HANDLE\s0" 4
.IX Item "DisposeHandle HANDLE"
The DisposeHandle procedure releases the memory occupied by the relocatable block
whose handle is \f(CW$HANDLE\fR. It also frees the handle's master pointer for other uses.
.IP "SetHandleSize \s-1HANDLE, BYTECOUNT\s0" 4
.IX Item "SetHandleSize HANDLE, BYTECOUNT"
The SetHandleSize procedure attempts to change the logical size of the
relocatable block whose handle is \f(CW$HANDLE\fR. The new logical size is specified by
\&\f(CW$BYTECOUNT\fR.
Return zero if no error was detected.
.IP "GetHandleSize \s-1HANDLE\s0" 4
.IX Item "GetHandleSize HANDLE"
The GetHandleSize function returns the logical size, in bytes, of the relocatable
block whose handle is \f(CW$HANDLE\fR. In case of an error, GetHandleSize returns 0.
.IP "ReallocateHandle \s-1HANDLE, BYTECOUNT\s0" 4
.IX Item "ReallocateHandle HANDLE, BYTECOUNT"
Allocates a new relocatable block with a logical size of \f(CW$BYTECOUNT\fR bytes. It
updates the handle \f(CW$HANDLE\fR by setting its master pointer to point to the new block. 
The new block is unlocked and unpurgeable.
Return zero if no error was detected.
.IP "EmptyHandle" 4
.IX Item "EmptyHandle"
Free memory taken by a relocatable block without freeing the relocatable block's
master pointer for other uses.
.IP "MoreMasters" 4
.IX Item "MoreMasters"
Call the MoreMasters procedure several times at the beginning of your program to
prevent the Memory Manager from running out of master pointers in the middle of
application execution. If it does run out, it allocates more, possibly causing
heap fragmentation.
.IP "BlockMove \s-1SOURCEPTR, DESTPTR, BYTECOUNT\s0" 4
.IX Item "BlockMove SOURCEPTR, DESTPTR, BYTECOUNT"
.PD 0
.IP "BlockMoveData \s-1SOURCEPTR, DESTPTR, BYTECOUNT\s0" 4
.IX Item "BlockMoveData SOURCEPTR, DESTPTR, BYTECOUNT"
.PD
The BlockMove/BlockMoveData procedure moves a block of \f(CW$BYTECOUNT\fR consecutive bytes from the
address designated by \f(CW$SOURCEPTR\fR to that designated by \f(CW$DESTPTR\fR.
.IP "PurgeSpace" 4
.IX Item "PurgeSpace"
Determine the total amount of free memory and the size of the largest allocatable
block after a purge of the heap.
.Sp
.Vb 1
\&    ($Total, $Contiguous) = &PurgeSpace;
.Ve
.IP "HGetState \s-1HANDLE\s0" 4
.IX Item "HGetState HANDLE"
Get the current properties of a relocatable block (perhaps so that you can change
and then later restore those properties).
.IP "HSetState \s-1HANDLE, STATE\s0" 4
.IX Item "HSetState HANDLE, STATE"
Restore properties of a block after a call to HGetState.
.IP "HandToHand \s-1HANDLE\s0" 4
.IX Item "HandToHand HANDLE"
The HandToHand function attempts to copy the information in the relocatable block
to which \f(CW$HANDLE\fR is a handle.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "PtrToHand \s-1PTR, BYTECOUNT\s0" 4
.IX Item "PtrToHand PTR, BYTECOUNT"
The PtrToHand function returns a newly created handle to a copy of
the number of bytes specified by \f(CW$BYTECOUNT\fR, beginning at the location
specified by \f(CW$PTR\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "PtrToXHand \s-1HANDLE, PTR, BYTECOUNT\s0" 4
.IX Item "PtrToXHand HANDLE, PTR, BYTECOUNT"
The PtrToXHand function makes the existing handle, specified by \f(CW$HANDLE\fR, a handle
to a copy of the number of bytes specified by \f(CW$BYTECOUNT\fR, beginning at
the location specified by \f(CW$PTR\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "HandAndHand \s-1AHNDLE, BHNDLE\s0" 4
.IX Item "HandAndHand AHNDLE, BHNDLE"
The HandAndHand function concatenates the information from the relocatable block
to which \f(CW$AHNDL\fR is a handle onto the end of the relocatable block to which \f(CW$BHNDL\fR
is a handle. The \f(CW$AHNDL\fR variable remains unchanged.
Return zero if no error was detected.
.IP "PtrAndHand \s-1PTR, HANDLE, BYTECOUNT\s0" 4
.IX Item "PtrAndHand PTR, HANDLE, BYTECOUNT"
The PtrAndHand function takes the number of bytes specified by \f(CW$BYTECOUNT\fR, 
beginning at the location specified by \f(CW$PTR\fR, and concatenates them
onto the end of the relocatable block to which \f(CW$HANDLE\fR is a handle.
.PP
The low level interface is not likely to be needed, except for the \fIHLock()\fR function.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::MoreFiles.3pm                           0100644 0001750 0001750 00000021560 12566241362 023776  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MoreFiles 3"
.TH MoreFiles 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::MoreFiles \- Sophisticated file management routines
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::MoreFiles;
\&
\&    $application = $Application{"MrPL"};
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "%Application" 4
.el .IP "\f(CW%Application\fR" 4
.IX Item "%Application"
The \f(CW%Application\fR hash will return the path to the application for a given 
signature, searching on all mounted volumes.
.SS "Functions"
.IX Subsection "Functions"
.IP "FSpCreateMinimum \s-1SPEC\s0" 4
.IX Item "FSpCreateMinimum SPEC"
Create a new file with no creator or file type.
The FSpCreateMinimum function creates a new file without attempting to set 
the the creator and file type of the new file.  This function is needed to
create a file in an AppleShare \*(L"dropbox\*(R" where the user can make
changes, but cannot see folder or files. The FSSpec in \s-1SPEC\s0 is used to create
the file.
.IP "FSpShare \s-1SPEC\s0" 4
.IX Item "FSpShare SPEC"
Establish a local volume or directory as a share point.
The FSpShare function establishes a local volume or directory as a
share point. \s-1SPEC\s0 is an FSSpec record specifying the share point.
.IP "FSpUnshare \s-1SPEC\s0" 4
.IX Item "FSpUnshare SPEC"
The FSpUnshare function removes a share point in \s-1SPEC.\s0
.IP "FSpFileCopy \s-1SRCSPEC, DSTSPEC, COPYNAME, PREFLIGHT\s0" 4
.IX Item "FSpFileCopy SRCSPEC, DSTSPEC, COPYNAME, PREFLIGHT"
The FSpFileCopy function duplicates a file and optionally renames it.
Since the \fIPBHCopyFile()\fR routine is only available on some
\&\s-1AFP\s0 server volumes under specific conditions, this routine
either uses \fIPBHCopyFile()\fR, or does all of the work \fIPBHCopyFile()\fR
does.  The \s-1SRCSPEC\s0 is used to
determine the location of the file to copy.  The \s-1DSTSPEC\s0 is
used to determine the location of the
destination directory.  If \s-1COPYNAME\s0 <> \s-1NIL,\s0 then it points
to the name of the new file.
.IP "FSpDirectoryCopy \s-1SRCSPEC, DSTSPEC, PREFLIGHT,\s0 [\s-1COPYERRHANDLER\s0]" 4
.IX Item "FSpDirectoryCopy SRCSPEC, DSTSPEC, PREFLIGHT, [COPYERRHANDLER]"
Make a copy of a directory structure in a new location.
The FSpDirectoryCopy function makes a copy of a directory structure in a
new location. \s-1COPYERRHANDLER\s0 is the Perl routine name to handle an
error, should one arise. It will be called as:
.Sp
.Vb 1
\&    $bailout = &$COPYERRHANDLER(ERRORCODE,OPERATION,SRCSPEC,DSTSPEC);
.Ve
.IP "FSpIterateDirectory \s-1SPEC, MAXLEVELS, ITERATEFILTER, YOURDATAPTR\s0" 4
.IX Item "FSpIterateDirectory SPEC, MAXLEVELS, ITERATEFILTER, YOURDATAPTR"
Iterate (scan) through a directory's content.
The FSpIterateDirectory function performs a recursive iteration (scan)
of the specified directory and calls your \s-1ITERATEFILTER\s0 function once
for each file and directory found.
.Sp
The \s-1MAXLEVELS\s0 parameter lets you control how deep the recursion goes.
If \s-1MAXLEVELS\s0 is 1, FSpIterateDirectory only scans the specified directory;
if \s-1MAXLEVELS\s0 is 2, FSpIterateDirectory scans the specified directory and
one subdirectory below the specified directory; etc. Set \s-1MAXLEVELS\s0 to
zero to scan all levels.
.Sp
The \s-1YOURDATAPTR\s0 parameter can point to whatever data structure you might
want to access from within the \s-1ITERATEFILTER.\s0 Your filter function will be
called as:
.Sp
.Vb 1
\&    $quit = &$filterFunction(YOURDATAPTR, SPEC);
.Ve
.IP "FSpDTGetAPPL \s-1VOLUME, CREATOR\s0" 4
.IX Item "FSpDTGetAPPL VOLUME, CREATOR"
The FSpDTGetAPPL function finds an application (file type '\s-1APPL\s0') with
the specified \s-1CREATOR\s0 on the specified \s-1VOLUME.\s0 It first tries to get
the application mapping from the desktop database. If that fails, then
it tries to find an application with the specified creator using
the File Manager's \fICatSearch()\fR routine. If that fails, then it tries to
find an application in the Desktop file.
Returns FSSpec or \f(CW\*(C`undef\*(C'\fR on failure.
.IP "FSpDTSetComment \s-1SPEC, COMMENT\s0" 4
.IX Item "FSpDTSetComment SPEC, COMMENT"
The FSpDTSetComment function sets a file or directory's Finder comment
field. The volume must support the Desktop Manager because you only
have read access to the Desktop file.
.IP "FSpDTGetComment \s-1SPEC\s0" 4
.IX Item "FSpDTGetComment SPEC"
The FSpDTGetComment function gets a file or directory's Finder comment
field (if any) from the Desktop Manager or if the Desktop Manager is
not available, from the Finder's Desktop file.
Returns Str255, or \f(CW\*(C`undef\*(C'\fR on failure.
.IP "FSpDTCopyComment \s-1SRCSPEC, DSTSPEC\s0" 4
.IX Item "FSpDTCopyComment SRCSPEC, DSTSPEC"
The FSpDTCopyComment function copies the desktop database comment from
the source to the destination object.  Both the source and the
destination volumes must support the Desktop Manager.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::MoreFiles5.16.3pm                       0100644 0001750 0001750 00000021354 12566241362 024311  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MoreFiles 3"
.TH MoreFiles 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::MoreFiles \- Sophisticated file management routines
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::MoreFiles;
\&
\&    $application = $Application{"MrPL"};
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "%Application" 4
.el .IP "\f(CW%Application\fR" 4
.IX Item "%Application"
The \f(CW%Application\fR hash will return the path to the application for a given 
signature, searching on all mounted volumes.
.SS "Functions"
.IX Subsection "Functions"
.IP "FSpCreateMinimum \s-1SPEC\s0" 4
.IX Item "FSpCreateMinimum SPEC"
Create a new file with no creator or file type.
The FSpCreateMinimum function creates a new file without attempting to set 
the the creator and file type of the new file.  This function is needed to
create a file in an AppleShare \*(L"dropbox\*(R" where the user can make
changes, but cannot see folder or files. The FSSpec in \s-1SPEC\s0 is used to create
the file.
.IP "FSpShare \s-1SPEC\s0" 4
.IX Item "FSpShare SPEC"
Establish a local volume or directory as a share point.
The FSpShare function establishes a local volume or directory as a
share point. \s-1SPEC\s0 is an FSSpec record specifying the share point.
.IP "FSpUnshare \s-1SPEC\s0" 4
.IX Item "FSpUnshare SPEC"
The FSpUnshare function removes a share point in \s-1SPEC\s0.
.IP "FSpFileCopy \s-1SRCSPEC\s0, \s-1DSTSPEC\s0, \s-1COPYNAME\s0, \s-1PREFLIGHT\s0" 4
.IX Item "FSpFileCopy SRCSPEC, DSTSPEC, COPYNAME, PREFLIGHT"
The FSpFileCopy function duplicates a file and optionally renames it.
Since the \fIPBHCopyFile()\fR routine is only available on some
\&\s-1AFP\s0 server volumes under specific conditions, this routine
either uses \fIPBHCopyFile()\fR, or does all of the work \fIPBHCopyFile()\fR
does.  The \s-1SRCSPEC\s0 is used to
determine the location of the file to copy.  The \s-1DSTSPEC\s0 is
used to determine the location of the
destination directory.  If \s-1COPYNAME\s0 <> \s-1NIL\s0, then it points
to the name of the new file.
.IP "FSpDirectoryCopy \s-1SRCSPEC\s0, \s-1DSTSPEC\s0, \s-1PREFLIGHT\s0, [\s-1COPYERRHANDLER\s0]" 4
.IX Item "FSpDirectoryCopy SRCSPEC, DSTSPEC, PREFLIGHT, [COPYERRHANDLER]"
Make a copy of a directory structure in a new location.
The FSpDirectoryCopy function makes a copy of a directory structure in a
new location. \s-1COPYERRHANDLER\s0 is the Perl routine name to handle an
error, should one arise. It will be called as:
.Sp
.Vb 1
\&    $bailout = &$COPYERRHANDLER(ERRORCODE,OPERATION,SRCSPEC,DSTSPEC);
.Ve
.IP "FSpIterateDirectory \s-1SPEC\s0, \s-1MAXLEVELS\s0, \s-1ITERATEFILTER\s0, \s-1YOURDATAPTR\s0" 4
.IX Item "FSpIterateDirectory SPEC, MAXLEVELS, ITERATEFILTER, YOURDATAPTR"
Iterate (scan) through a directory's content.
The FSpIterateDirectory function performs a recursive iteration (scan)
of the specified directory and calls your \s-1ITERATEFILTER\s0 function once
for each file and directory found.
.Sp
The \s-1MAXLEVELS\s0 parameter lets you control how deep the recursion goes.
If \s-1MAXLEVELS\s0 is 1, FSpIterateDirectory only scans the specified directory;
if \s-1MAXLEVELS\s0 is 2, FSpIterateDirectory scans the specified directory and
one subdirectory below the specified directory; etc. Set \s-1MAXLEVELS\s0 to
zero to scan all levels.
.Sp
The \s-1YOURDATAPTR\s0 parameter can point to whatever data structure you might
want to access from within the \s-1ITERATEFILTER\s0. Your filter function will be
called as:
.Sp
.Vb 1
\&    $quit = &$filterFunction(YOURDATAPTR, SPEC);
.Ve
.IP "FSpDTGetAPPL \s-1VOLUME\s0, \s-1CREATOR\s0" 4
.IX Item "FSpDTGetAPPL VOLUME, CREATOR"
The FSpDTGetAPPL function finds an application (file type '\s-1APPL\s0') with
the specified \s-1CREATOR\s0 on the specified \s-1VOLUME\s0. It first tries to get
the application mapping from the desktop database. If that fails, then
it tries to find an application with the specified creator using
the File Manager's \fICatSearch()\fR routine. If that fails, then it tries to
find an application in the Desktop file.
Returns FSSpec or \f(CW\*(C`undef\*(C'\fR on failure.
.IP "FSpDTSetComment \s-1SPEC\s0, \s-1COMMENT\s0" 4
.IX Item "FSpDTSetComment SPEC, COMMENT"
The FSpDTSetComment function sets a file or directory's Finder comment
field. The volume must support the Desktop Manager because you only
have read access to the Desktop file.
.IP "FSpDTGetComment \s-1SPEC\s0" 4
.IX Item "FSpDTGetComment SPEC"
The FSpDTGetComment function gets a file or directory's Finder comment
field (if any) from the Desktop Manager or if the Desktop Manager is
not available, from the Finder's Desktop file.
Returns Str255, or \f(CW\*(C`undef\*(C'\fR on failure.
.IP "FSpDTCopyComment \s-1SRCSPEC\s0, \s-1DSTSPEC\s0" 4
.IX Item "FSpDTCopyComment SRCSPEC, DSTSPEC"
The FSpDTCopyComment function copies the desktop database comment from
the source to the destination object.  Both the source and the
destination volumes must support the Desktop Manager.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::MoreFiles5.18.3pm                       0100644 0001750 0001750 00000021560 12566241362 024312  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MoreFiles 3"
.TH MoreFiles 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::MoreFiles \- Sophisticated file management routines
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::MoreFiles;
\&
\&    $application = $Application{"MrPL"};
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "%Application" 4
.el .IP "\f(CW%Application\fR" 4
.IX Item "%Application"
The \f(CW%Application\fR hash will return the path to the application for a given 
signature, searching on all mounted volumes.
.SS "Functions"
.IX Subsection "Functions"
.IP "FSpCreateMinimum \s-1SPEC\s0" 4
.IX Item "FSpCreateMinimum SPEC"
Create a new file with no creator or file type.
The FSpCreateMinimum function creates a new file without attempting to set 
the the creator and file type of the new file.  This function is needed to
create a file in an AppleShare \*(L"dropbox\*(R" where the user can make
changes, but cannot see folder or files. The FSSpec in \s-1SPEC\s0 is used to create
the file.
.IP "FSpShare \s-1SPEC\s0" 4
.IX Item "FSpShare SPEC"
Establish a local volume or directory as a share point.
The FSpShare function establishes a local volume or directory as a
share point. \s-1SPEC\s0 is an FSSpec record specifying the share point.
.IP "FSpUnshare \s-1SPEC\s0" 4
.IX Item "FSpUnshare SPEC"
The FSpUnshare function removes a share point in \s-1SPEC.\s0
.IP "FSpFileCopy \s-1SRCSPEC, DSTSPEC, COPYNAME, PREFLIGHT\s0" 4
.IX Item "FSpFileCopy SRCSPEC, DSTSPEC, COPYNAME, PREFLIGHT"
The FSpFileCopy function duplicates a file and optionally renames it.
Since the \fIPBHCopyFile()\fR routine is only available on some
\&\s-1AFP\s0 server volumes under specific conditions, this routine
either uses \fIPBHCopyFile()\fR, or does all of the work \fIPBHCopyFile()\fR
does.  The \s-1SRCSPEC\s0 is used to
determine the location of the file to copy.  The \s-1DSTSPEC\s0 is
used to determine the location of the
destination directory.  If \s-1COPYNAME\s0 <> \s-1NIL,\s0 then it points
to the name of the new file.
.IP "FSpDirectoryCopy \s-1SRCSPEC, DSTSPEC, PREFLIGHT,\s0 [\s-1COPYERRHANDLER\s0]" 4
.IX Item "FSpDirectoryCopy SRCSPEC, DSTSPEC, PREFLIGHT, [COPYERRHANDLER]"
Make a copy of a directory structure in a new location.
The FSpDirectoryCopy function makes a copy of a directory structure in a
new location. \s-1COPYERRHANDLER\s0 is the Perl routine name to handle an
error, should one arise. It will be called as:
.Sp
.Vb 1
\&    $bailout = &$COPYERRHANDLER(ERRORCODE,OPERATION,SRCSPEC,DSTSPEC);
.Ve
.IP "FSpIterateDirectory \s-1SPEC, MAXLEVELS, ITERATEFILTER, YOURDATAPTR\s0" 4
.IX Item "FSpIterateDirectory SPEC, MAXLEVELS, ITERATEFILTER, YOURDATAPTR"
Iterate (scan) through a directory's content.
The FSpIterateDirectory function performs a recursive iteration (scan)
of the specified directory and calls your \s-1ITERATEFILTER\s0 function once
for each file and directory found.
.Sp
The \s-1MAXLEVELS\s0 parameter lets you control how deep the recursion goes.
If \s-1MAXLEVELS\s0 is 1, FSpIterateDirectory only scans the specified directory;
if \s-1MAXLEVELS\s0 is 2, FSpIterateDirectory scans the specified directory and
one subdirectory below the specified directory; etc. Set \s-1MAXLEVELS\s0 to
zero to scan all levels.
.Sp
The \s-1YOURDATAPTR\s0 parameter can point to whatever data structure you might
want to access from within the \s-1ITERATEFILTER.\s0 Your filter function will be
called as:
.Sp
.Vb 1
\&    $quit = &$filterFunction(YOURDATAPTR, SPEC);
.Ve
.IP "FSpDTGetAPPL \s-1VOLUME, CREATOR\s0" 4
.IX Item "FSpDTGetAPPL VOLUME, CREATOR"
The FSpDTGetAPPL function finds an application (file type '\s-1APPL\s0') with
the specified \s-1CREATOR\s0 on the specified \s-1VOLUME.\s0 It first tries to get
the application mapping from the desktop database. If that fails, then
it tries to find an application with the specified creator using
the File Manager's \fICatSearch()\fR routine. If that fails, then it tries to
find an application in the Desktop file.
Returns FSSpec or \f(CW\*(C`undef\*(C'\fR on failure.
.IP "FSpDTSetComment \s-1SPEC, COMMENT\s0" 4
.IX Item "FSpDTSetComment SPEC, COMMENT"
The FSpDTSetComment function sets a file or directory's Finder comment
field. The volume must support the Desktop Manager because you only
have read access to the Desktop file.
.IP "FSpDTGetComment \s-1SPEC\s0" 4
.IX Item "FSpDTGetComment SPEC"
The FSpDTGetComment function gets a file or directory's Finder comment
field (if any) from the Desktop Manager or if the Desktop Manager is
not available, from the Finder's Desktop file.
Returns Str255, or \f(CW\*(C`undef\*(C'\fR on failure.
.IP "FSpDTCopyComment \s-1SRCSPEC, DSTSPEC\s0" 4
.IX Item "FSpDTCopyComment SRCSPEC, DSTSPEC"
The FSpDTCopyComment function copies the desktop database comment from
the source to the destination object.  Both the source and the
destination volumes must support the Desktop Manager.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Notification.3pm                        0100644 0001750 0001750 00000012352 12566241363 024537  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Notification 3"
.TH Notification 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Notification \- Macintosh Toolbox Interface to Notification Manager
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Types"
.IX Subsection "Types"
.IP "NMRec" 4
.IX Item "NMRec"
The notification record. Fields are:
.Sp
.Vb 5
\&    short     nmMark;      /* item to mark in Apple menu*/
\&    Handle    nmIcon;      /* handle to small icon*/
\&    Handle    nmSound;     /* handle to sound record*/
\&    Str255    nmStr;       /* string to appear in alert*/
\&    long      nmRefCon;    /* for application use*/
.Ve
.RS 4
.IP "new NMRec (\s-1KEY\s0 => \s-1VALUE...\s0)" 4
.IX Item "new NMRec (KEY => VALUE...)"
Create a new notification record and fill it in.
.RE
.RS 4
.RE
.SS "Functions"
.IX Subsection "Functions"
.IP "NMInstall \s-1REQUEST\s0" 4
.IX Item "NMInstall REQUEST"
Install a notification.
.IP "NMRemove \s-1REQUEST\s0" 4
.IX Item "NMRemove REQUEST"
Remove a notification.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Notification5.16.3pm                    0100644 0001750 0001750 00000012031 12566241364 025044  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Notification 3"
.TH Notification 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Notification \- Macintosh Toolbox Interface to Notification Manager
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Types"
.IX Subsection "Types"
.IP "NMRec" 4
.IX Item "NMRec"
The notification record. Fields are:
.Sp
.Vb 5
\&    short     nmMark;      /* item to mark in Apple menu*/
\&    Handle    nmIcon;      /* handle to small icon*/
\&    Handle    nmSound;     /* handle to sound record*/
\&    Str255    nmStr;       /* string to appear in alert*/
\&    long      nmRefCon;    /* for application use*/
.Ve
.RS 4
.IP "new NMRec (\s-1KEY\s0 => \s-1VALUE\s0...)" 4
.IX Item "new NMRec (KEY => VALUE...)"
Create a new notification record and fill it in.
.RE
.RS 4
.RE
.SS "Functions"
.IX Subsection "Functions"
.IP "NMInstall \s-1REQUEST\s0" 4
.IX Item "NMInstall REQUEST"
Install a notification.
.IP "NMRemove \s-1REQUEST\s0" 4
.IX Item "NMRemove REQUEST"
Remove a notification.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Notification5.18.3pm                    0100644 0001750 0001750 00000012352 12566241363 025053  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Notification 3"
.TH Notification 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Notification \- Macintosh Toolbox Interface to Notification Manager
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Types"
.IX Subsection "Types"
.IP "NMRec" 4
.IX Item "NMRec"
The notification record. Fields are:
.Sp
.Vb 5
\&    short     nmMark;      /* item to mark in Apple menu*/
\&    Handle    nmIcon;      /* handle to small icon*/
\&    Handle    nmSound;     /* handle to sound record*/
\&    Str255    nmStr;       /* string to appear in alert*/
\&    long      nmRefCon;    /* for application use*/
.Ve
.RS 4
.IP "new NMRec (\s-1KEY\s0 => \s-1VALUE...\s0)" 4
.IX Item "new NMRec (KEY => VALUE...)"
Create a new notification record and fill it in.
.RE
.RS 4
.RE
.SS "Functions"
.IX Subsection "Functions"
.IP "NMInstall \s-1REQUEST\s0" 4
.IX Item "NMInstall REQUEST"
Install a notification.
.IP "NMRemove \s-1REQUEST\s0" 4
.IX Item "NMRemove REQUEST"
Remove a notification.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::OSA.3pm                                 0100644 0001750 0001750 00000063733 12566241365 022546  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OSA 3"
.TH OSA 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::OSA \- Provide interface to Open Scripting Architecture
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::OSA;
\&
\&    use Mac::OSA qw(OSALoad OSAStore OSAExecute);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "kOSAComponentType" 4
.IX Item "kOSAComponentType"
.PD 0
.IP "kOSAGenericScriptingComponentSubtype" 4
.IX Item "kOSAGenericScriptingComponentSubtype"
.IP "kOSAFileType" 4
.IX Item "kOSAFileType"
.IP "kOSASuite" 4
.IX Item "kOSASuite"
.IP "kOSARecordedText" 4
.IX Item "kOSARecordedText"
.IP "kOSAScriptIsModified" 4
.IX Item "kOSAScriptIsModified"
.IP "kOSAScriptIsTypeCompiledScript" 4
.IX Item "kOSAScriptIsTypeCompiledScript"
.IP "kOSAScriptIsTypeScriptValue" 4
.IX Item "kOSAScriptIsTypeScriptValue"
.IP "kOSAScriptIsTypeScriptContext" 4
.IX Item "kOSAScriptIsTypeScriptContext"
.IP "kOSAScriptBestType" 4
.IX Item "kOSAScriptBestType"
.IP "kOSACanGetSource" 4
.IX Item "kOSACanGetSource"
.IP "typeOSADialectInfo" 4
.IX Item "typeOSADialectInfo"
.IP "keyOSADialectName" 4
.IX Item "keyOSADialectName"
.IP "keyOSADialectCode" 4
.IX Item "keyOSADialectCode"
.IP "keyOSADialectLangCode" 4
.IX Item "keyOSADialectLangCode"
.IP "keyOSADialectScriptCode" 4
.IX Item "keyOSADialectScriptCode"
.IP "kOSAScriptResourceType" 4
.IX Item "kOSAScriptResourceType"
.IP "typeOSAGenericStorage" 4
.IX Item "typeOSAGenericStorage"
.PD
Types and keywords.
.IP "kOSANullScript" 4
.IX Item "kOSANullScript"
.PD 0
.IP "kOSANullMode" 4
.IX Item "kOSANullMode"
.IP "kOSAModeNull" 4
.IX Item "kOSAModeNull"
.PD
Default values.
.IP "kOSASupportsCompiling" 4
.IX Item "kOSASupportsCompiling"
.PD 0
.IP "kOSASupportsGetSource" 4
.IX Item "kOSASupportsGetSource"
.IP "kOSASupportsAECoercion" 4
.IX Item "kOSASupportsAECoercion"
.IP "kOSASupportsAESending" 4
.IX Item "kOSASupportsAESending"
.IP "kOSASupportsRecording" 4
.IX Item "kOSASupportsRecording"
.IP "kOSASupportsConvenience" 4
.IX Item "kOSASupportsConvenience"
.IP "kOSASupportsDialects" 4
.IX Item "kOSASupportsDialects"
.IP "kOSASupportsEventHandling" 4
.IX Item "kOSASupportsEventHandling"
.PD
Feature flags.
.IP "kOSAModePreventGetSource" 4
.IX Item "kOSAModePreventGetSource"
.PD 0
.IP "kOSAModeNeverInteract" 4
.IX Item "kOSAModeNeverInteract"
.IP "kOSAModeCanInteract" 4
.IX Item "kOSAModeCanInteract"
.IP "kOSAModeAlwaysInteract" 4
.IX Item "kOSAModeAlwaysInteract"
.IP "kOSAModeDontReconnect" 4
.IX Item "kOSAModeDontReconnect"
.IP "kOSAModeCantSwitchLayer" 4
.IX Item "kOSAModeCantSwitchLayer"
.IP "kOSAModeDoRecord" 4
.IX Item "kOSAModeDoRecord"
.IP "kOSAModeCompileIntoContext" 4
.IX Item "kOSAModeCompileIntoContext"
.IP "kOSAModeAugmentContext" 4
.IX Item "kOSAModeAugmentContext"
.IP "kOSAModeDisplayForHumans" 4
.IX Item "kOSAModeDisplayForHumans"
.IP "kOSAModeDontStoreParent" 4
.IX Item "kOSAModeDontStoreParent"
.IP "kOSAModeDispatchToDirectObject" 4
.IX Item "kOSAModeDispatchToDirectObject"
.IP "kOSAModeDontGetDataForArguments" 4
.IX Item "kOSAModeDontGetDataForArguments"
.IP "kOSAModeDontDefine" 4
.IX Item "kOSAModeDontDefine"
.PD
Mode flags.
.IP "kOSAErrorNumber" 4
.IX Item "kOSAErrorNumber"
.PD 0
.IP "kOSAErrorMessage" 4
.IX Item "kOSAErrorMessage"
.IP "kOSAErrorBriefMessage" 4
.IX Item "kOSAErrorBriefMessage"
.IP "kOSAErrorApp" 4
.IX Item "kOSAErrorApp"
.IP "kOSAErrorPartialResult" 4
.IX Item "kOSAErrorPartialResult"
.IP "kOSAErrorOffendingObject" 4
.IX Item "kOSAErrorOffendingObject"
.IP "kOSAErrorExpectedType" 4
.IX Item "kOSAErrorExpectedType"
.IP "kOSAErrorRange" 4
.IX Item "kOSAErrorRange"
.IP "typeOSAErrorRange" 4
.IX Item "typeOSAErrorRange"
.IP "keyOSASourceStart" 4
.IX Item "keyOSASourceStart"
.IP "keyOSASourceEnd" 4
.IX Item "keyOSASourceEnd"
.PD
Error handling.
.IP "kOSAUseStandardDispatch" 4
.IX Item "kOSAUseStandardDispatch"
.PD 0
.IP "kOSANoDispatch" 4
.IX Item "kOSANoDispatch"
.IP "kOSADontUsePhac" 4
.IX Item "kOSADontUsePhac"
.IP "kGenericComponentVersion" 4
.IX Item "kGenericComponentVersion"
.PD
Dispatching flags
.SS "Functions"
.IX Subsection "Functions"
.IP "OSALoad \s-1SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS\s0" 4
.IX Item "OSALoad SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS"
The OSALoad function loads script data and returns a script \s-1ID.\s0 The generic
scripting component uses the descriptor record in the \s-1SCRIPTDATA\s0 parameter to
determine which scripting component should load the script. If the descriptor
record is of type typeOSAGenericStorage, the generic scripting component uses the
trailer at the end of the \s-1SCRIPTDATA\s0 to identify the scripting component. If the
descriptor record's type is the subtype value for another scripting component,
the generic scripting component uses the descriptor type to identify the
scripting component.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAStore \s-1SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSAStore SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS"
The OSAStore function returns script data in a descriptor record so that the data
can later be saved in a resource or written to the data fork of a document. You
can then reload the data for the descriptor record as a compiled script (although
possibly with a different script \s-1ID\s0) by passing the descriptor record to \fIOSALoad()\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAExecute \s-1SCRIPTINGCOMPONENT, COMPILEDSCRIPTID, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSAExecute SCRIPTINGCOMPONENT, COMPILEDSCRIPTID, CONTEXTID, MODEFLAGS"
The OSAExecute function executes the compiled script identified by the
\&\s-1COMPILEDSCRIPTID\s0 parameter, using the script context identified by the \s-1CONTEXTID\s0
parameter to maintain state information, such as the binding of variables, for
the compiled script. After successfully executing a script, OSAExecute returns
the script \s-1ID\s0 for a resulting script value, or, if execution does not result in a
value, \f(CW\*(C`undef\*(C'\fR.
.IP "OSADisplay \s-1SCRIPTINGCOMPONENT, SCRIPTVALUEID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSADisplay SCRIPTINGCOMPONENT, SCRIPTVALUEID, DESIREDTYPE, MODEFLAGS"
The OSADisplay function coerces the script value identified by \s-1SCRIPTVALUEID\s0 to a
descriptor record of the text type specified by the \s-1DESIREDTYPE\s0 parameter, if
possible. Valid types include all the standard text descriptor types defined in
the Apple Event Registry: Standard Suites, plus any special types supported by
the scripting component.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAScriptError \s-1SCRIPTINGCOMPONENT, SELECTOR, DESIREDTYPE\s0" 4
.IX Item "OSAScriptError SCRIPTINGCOMPONENT, SELECTOR, DESIREDTYPE"
Whenever the \fIOSAExecute()\fR function returns the error errOSAScriptError, you can use
the OSAScriptError function to get more specific information about the error from
the scripting component that encountered it. (This information remains available
only until the next call to the same scripting component.) The information
returned by OSAScriptError depends on the value passed in the \s-1SELECTOR\s0 parameter,
which also determines the descriptor type you should specify in the \s-1DESIREDTYPE\s0
parameter.
.Sp
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADispose \s-1SCRIPTINGCOMPONENT, SCRIPTID\s0" 4
.IX Item "OSADispose SCRIPTINGCOMPONENT, SCRIPTID"
The OSADispose function releases the memory assigned to the script data identified
by the \s-1SCRIPTID\s0 parameter. The \s-1SCRIPTID\s0 passed to the OSADispose function is no
longer valid if the function returns successfully. A scripting component can then
reuse that \s-1SCRIPTID\s0 for other script data. 
Return zero if no error was detected.
.IP "OSASetScriptInfo \s-1SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR, VALUE\s0" 4
.IX Item "OSASetScriptInfo SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR, VALUE"
The OSASetScriptInfo function sets script information according to the value you
pass in the selector parameter. If you use the kOSAScriptIsModified constant,
OSASetScriptInfo sets a value that indicates how many times the script data has
been modified since it was created or passed to OSALoad. Some scripting
components may provide additional constants.
Return zero if no error was detected.
.IP "OSAGetScriptInfo \s-1SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR\s0" 4
.IX Item "OSAGetScriptInfo SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR"
The OSAGetScriptInfo function returns various results according to the value you
pass in the \s-1SELECTOR\s0 parameter.
Returns an integer value which may need to be recast as the desired type.
.IP "OSASetProperty \s-1SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME, SCRIPTVALUEID\s0" 4
.IX Item "OSASetProperty SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME, SCRIPTVALUEID"
The OSASetProperty function sets the value of a script property in a specified script.
\&\s-1VARIABLENAME\s0 is an AEDesc.
.IP "OSAGetProperty \s-1SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME\s0" 4
.IX Item "OSAGetProperty SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME"
The OSAGetProperty function gets the value of a script property in a specified script.
\&\s-1VARIABLENAME\s0 is an AEDesc.  Returns an AEDesc.
.IP "OSAGetAppTerminology \s-1SCRIPTINGCOMPONENT, MODEFLAGS, FILE, TERMINOLOGYID\s0" 4
.IX Item "OSAGetAppTerminology SCRIPTINGCOMPONENT, MODEFLAGS, FILE, TERMINOLOGYID"
OSAGetAppTerminology gets one or more scripting terminology resources from
the specified file.  Returns an AEDesc.
.IP "OSAScriptingComponentName \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAScriptingComponentName SCRIPTINGCOMPONENT"
The OSAScriptingComponentName function returns a descriptor record that you can
coerce to a text descriptor type such as typeChar. This can be useful if you want
to display the name of the scripting language in which the user should write a
new script.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACompile \s-1SCRIPTINGCOMPONENT, SOURCEDATA, MODEFLAGS,\s0 [\s-1PREVIOUSSCRIPTID\s0]" 4
.IX Item "OSACompile SCRIPTINGCOMPONENT, SOURCEDATA, MODEFLAGS, [PREVIOUSSCRIPTID]"
You can pass a descriptor record containing source data suitable for a specific
scripting component (usually text) to the OSACompile function to obtain a script
\&\s-1ID\s0 for the equivalent compiled script or script context. To compile the source
data as a script context for use with \fIOSAExecuteEvent()\fR or \fIOSADoEvent()\fR, you must set
the kOSAModeCompileIntoContext flag, and the source data should include appropriate
handlers.
Return zero if no error was detected.
.IP "OSACopyID \s-1SCRIPTINGCOMPONENT, FROMID,\s0 [\s-1TOID\s0]" 4
.IX Item "OSACopyID SCRIPTINGCOMPONENT, FROMID, [TOID]"
The OSACopyID function replaces the script data identified by the script \s-1ID\s0 in
the \s-1TOID\s0 parameter with the script data identified by the script \s-1ID\s0 in the \s-1FROMID\s0
parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetSource \s-1SCRIPTINGCOMPONENT, SCRIPTID,\s0 [\s-1DESIREDTYPE\s0]" 4
.IX Item "OSAGetSource SCRIPTINGCOMPONENT, SCRIPTID, [DESIREDTYPE]"
The OSAGetSource function decompiles the script data identified by the specified
script \s-1ID\s0 and returns a descriptor record containing the equivalent source data.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACoerceFromDesc \s-1SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS\s0" 4
.IX Item "OSACoerceFromDesc SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS"
The OSACoerceFromDesc function coerces the descriptor record in the \s-1SCRIPTDATA\s0
parameter to the equivalent script value and returns a script \s-1ID\s0 for that value. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACoerceToDesc \s-1SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSACoerceToDesc SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS"
The OSACoerceToDesc function coerces the script value identified by \s-1SCRIPTID\s0
to a descriptor record of the type specified by the \s-1DESIREDTYPE\s0 parameter, if
possible.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetDefaultTarget \s-1SCRIPTINGCOMPONENT, TARGET\s0" 4
.IX Item "OSASetDefaultTarget SCRIPTINGCOMPONENT, TARGET"
The OSASetDefaultTarget function establishes the default target application for
Apple event sending and the default application from which the scripting
component should obtain terminology information. For example, AppleScript
statements that refer to the default application do not need to be enclosed in
\&\f(CW\*(C`tell/end tell\*(C'\fR statements. 
Return zero if no error was detected.
.IP "OSAStartRecording \s-1SCRIPTINGCOMPONENT,\s0 [\s-1COMPILEDSCRIPTTOMODIFYID\s0]" 4
.IX Item "OSAStartRecording SCRIPTINGCOMPONENT, [COMPILEDSCRIPTTOMODIFYID]"
The OSAStartRecording routine turns on Apple event recording. Subsequent Apple
events are recorded (that is, appended to any existing statements) in the
compiled script specified by the \s-1COMPILEDSCRIPTTOMODIFYID\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAStopRecording \s-1SCRIPTINGCOMPONENT, COMPILEDSCRIPTID\s0" 4
.IX Item "OSAStopRecording SCRIPTINGCOMPONENT, COMPILEDSCRIPTID"
The OSAStopRecording function turns off recording. If the script is not currently
open in a script editor window, the \s-1COMPILEDSCRIPTTOMODIFYID\s0 parameter supplied
to \fIOSAStartRecording()\fR is then augmented to contain the newly recorded statements.
If the script is currently open in a script editor window, the script data that
corresponds to the compiledScriptToModifyID parameter supplied to
\&\fIOSAStartRecording()\fR is updated continuously until the client application calls
OSAStopRecording. 
Return zero if no error was detected.
.IP "OSALoadExecute \s-1SCRIPTINGCOMPONENT, SCRIPTDATA, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSALoadExecute SCRIPTINGCOMPONENT, SCRIPTDATA, CONTEXTID, MODEFLAGS"
The OSALoadExecute function loads script data and executes the resulting compiled
script, using the script context identified by the \s-1CONTEXTID\s0 parameter to
maintain state information such as the binding of variables. After successfully
executing the script, OSALoadExecute disposes of the compiled script and returns
either the script \s-1ID\s0 for the resulting script value or, if execution does not
result in a value, the constant kOSANullScript. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACompileExecute \s-1SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSACompileExecute SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, MODEFLAGS"
The OSACompileExecute function compiles source data and executes the resulting
compiled script, using the script context identified by the \s-1CONTEXTID\s0 parameter
to maintain state information such as the binding of variables. After
successfully executing the script, OSACompileExecute disposes of the compiled
script and returns either the script \s-1ID\s0 for the resulting script value or, if
execution does not result in a value, the constant kOSANullScript.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADoScript \s-1SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSADoScript SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, DESIREDTYPE, MODEFLAGS"
Calling the OSADoScript function is equivalent to calling \fIOSACompile()\fR followed by
\&\fIOSAExecute()\fR and \fIOSADisplay()\fR. After compiling the source data, executing the
compiled script using the script context identified by the \s-1CONTEXTID\s0 parameter,
and returning the text equivalent of the resulting script value, OSADoScript
disposes of both the compiled script and the resulting script value.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetCurrentDialect \s-1SCRIPTINGCOMPONENT, DIALECTCODE\s0" 4
.IX Item "OSASetCurrentDialect SCRIPTINGCOMPONENT, DIALECTCODE"
Set the current dialect for a scripting component.
Return zero if no error was detected.
.IP "OSAGetCurrentDialect \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAGetCurrentDialect SCRIPTINGCOMPONENT"
Get the dialect code for the dialect currently being used by a scripting
component.
Returns the code for the current dialect of the specified scripting component.
.IP "OSAAvailableDialects \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAAvailableDialects SCRIPTINGCOMPONENT"
Obtain a descriptor list containing information about each of the currently
available dialects for a scripting component. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetDialectInfo \s-1SCRIPTINGCOMPONENT, DIALECTCODE, SELECTOR\s0" 4
.IX Item "OSAGetDialectInfo SCRIPTINGCOMPONENT, DIALECTCODE, SELECTOR"
After you obtain a list of dialect codes by calling \fIOSAAvailableDialectCodeList()\fR,
you can pass any of those codes to OSAGetDialectInfo to get information about the
corresponding dialect. The descriptor type of the descriptor record returned by
OSAGetDialectInfo depends on the constant specified in the \s-1SELECTOR\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAAvailableDialectCodeList \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAAvailableDialectCodeList SCRIPTINGCOMPONENT"
Obtain a descriptor list containing dialect codes for each of a scripting
component's currently available dialects. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAExecuteEvent \s-1SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSAExecuteEvent SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS"
The OSAExecuteEvent function attempts to use the script context specified by the
contextID parameter to handle the Apple event specified by the \s-1THEAPPLEEVENT\s0
parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADoEvent \s-1SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSADoEvent SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS"
The OSADoEvent function resembles both \fIOSADoScript()\fR and \fIOSAExecuteEvent()\fR.
However,
unlike \fIOSADoScript()\fR, the script OSADoEvent executes must be in the form of a
script context, and execution is initiated by an Apple event. Unlike
\&\fIOSAExecuteEvent()\fR, OSADoEvent returns a reply Apple event rather than the script \s-1ID\s0
of the resulting script value.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAMakeContext \s-1SCRIPTINGCOMPONENT, CONTEXTNAME,\s0 [\s-1PARENTCONTEXT\s0]" 4
.IX Item "OSAMakeContext SCRIPTINGCOMPONENT, CONTEXTNAME, [PARENTCONTEXT]"
The OSAMakeContext function creates a new script context that you may pass to
\&\fIOSAExecute()\fR or \fIOSAExecuteEvent()\fR. The new script context inherits the bindings of
the script context specified in the \s-1PARENTCONTEXT\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetDefaultScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAGetDefaultScriptingComponent GENERICSCRIPTINGCOMPONENT"
The OSAGetDefaultScriptingComponent function returns the subtype code for the
default scripting component. This is the scripting component that will be used by
\&\fIOSAStartRecording()\fR, \fIOSACompile()\fR, or \fIOSACompileExecute()\fR if no existing script \s-1ID\s0 is
specified. From the user's point of view, the default scripting component
corresponds to the scripting language selected in the Script Editor application
when the user first creates a new script.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetDefaultScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE\s0" 4
.IX Item "OSASetDefaultScriptingComponent GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE"
The OSASetDefaultScriptingComponent function sets the default scripting component
for the specified instance of the generic scripting component to the scripting
component identified by the \s-1SCRIPTINGSUBTYPE\s0 parameter.
Return zero if no error was detected.
.IP "OSAGetScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE\s0" 4
.IX Item "OSAGetScriptingComponent GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE"
The OSAGetScriptingComponent function returns an instance of the scripting
component identified by the
\&\s-1SCRIPTINGSUBTYPE\s0 parameter. Each instance of the generic scripting component
keeps track of a single instance of each component subtype, so
OSAGetScriptingComponent always returns the same instance of a specified
scripting component that the generic scripting component uses for standard
scripting component routines.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetScriptingComponentFromStored \s-1GENERICSCRIPTINGCOMPONENT, SCRIPTDATA\s0" 4
.IX Item "OSAGetScriptingComponentFromStored GENERICSCRIPTINGCOMPONENT, SCRIPTDATA"
The OSAGetScriptingComponentFromStored function returns the subtype code for the
scripting component that created the script
data specified by the \s-1SCRIPTDATA\s0 parameter. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGenericToRealID \s-1GENERICSCRIPTINGCOMPONENT, GENERICSCRIPTID\s0" 4
.IX Item "OSAGenericToRealID GENERICSCRIPTINGCOMPONENT, GENERICSCRIPTID"
Given a \s-1GENERICSCRIPTID \s0(that is, a script \s-1ID\s0 returned by a call to a standard
component routine via the generic scripting component), the OSAGenericToRealID
function returns the equivalent component-specific script \s-1ID\s0 and the component
instance that created that script \s-1ID\s0 as an array.
.IP "OSARealToGenericID \s-1GENERICSCRIPTINGCOMPONENT, THESCRIPTID, THEEXACTCOMPONENT\s0" 4
.IX Item "OSARealToGenericID GENERICSCRIPTINGCOMPONENT, THESCRIPTID, THEEXACTCOMPONENT"
The OSARealToGenericID function performs the reverse of the task performed by
\&\fIOSAGenericToRealID()\fR. Given a component-specific \s-1SCRIPTID\s0 and an exact scripting
component instance (that is, the component instance that created the
component-specific script \s-1ID\s0), the OSARealToGenericID function returns the
corresponding generic script \s-1ID.\s0
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::OSA5.16.3pm                             0100644 0001750 0001750 00000064330 12566241365 023052  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OSA 3"
.TH OSA 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::OSA \- Provide interface to Open Scripting Architecture
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::OSA;
\&
\&    use Mac::OSA qw(OSALoad OSAStore OSAExecute);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "kOSAComponentType" 4
.IX Item "kOSAComponentType"
.PD 0
.IP "kOSAGenericScriptingComponentSubtype" 4
.IX Item "kOSAGenericScriptingComponentSubtype"
.IP "kOSAFileType" 4
.IX Item "kOSAFileType"
.IP "kOSASuite" 4
.IX Item "kOSASuite"
.IP "kOSARecordedText" 4
.IX Item "kOSARecordedText"
.IP "kOSAScriptIsModified" 4
.IX Item "kOSAScriptIsModified"
.IP "kOSAScriptIsTypeCompiledScript" 4
.IX Item "kOSAScriptIsTypeCompiledScript"
.IP "kOSAScriptIsTypeScriptValue" 4
.IX Item "kOSAScriptIsTypeScriptValue"
.IP "kOSAScriptIsTypeScriptContext" 4
.IX Item "kOSAScriptIsTypeScriptContext"
.IP "kOSAScriptBestType" 4
.IX Item "kOSAScriptBestType"
.IP "kOSACanGetSource" 4
.IX Item "kOSACanGetSource"
.IP "typeOSADialectInfo" 4
.IX Item "typeOSADialectInfo"
.IP "keyOSADialectName" 4
.IX Item "keyOSADialectName"
.IP "keyOSADialectCode" 4
.IX Item "keyOSADialectCode"
.IP "keyOSADialectLangCode" 4
.IX Item "keyOSADialectLangCode"
.IP "keyOSADialectScriptCode" 4
.IX Item "keyOSADialectScriptCode"
.IP "kOSAScriptResourceType" 4
.IX Item "kOSAScriptResourceType"
.IP "typeOSAGenericStorage" 4
.IX Item "typeOSAGenericStorage"
.PD
Types and keywords.
.IP "kOSANullScript" 4
.IX Item "kOSANullScript"
.PD 0
.IP "kOSANullMode" 4
.IX Item "kOSANullMode"
.IP "kOSAModeNull" 4
.IX Item "kOSAModeNull"
.PD
Default values.
.IP "kOSASupportsCompiling" 4
.IX Item "kOSASupportsCompiling"
.PD 0
.IP "kOSASupportsGetSource" 4
.IX Item "kOSASupportsGetSource"
.IP "kOSASupportsAECoercion" 4
.IX Item "kOSASupportsAECoercion"
.IP "kOSASupportsAESending" 4
.IX Item "kOSASupportsAESending"
.IP "kOSASupportsRecording" 4
.IX Item "kOSASupportsRecording"
.IP "kOSASupportsConvenience" 4
.IX Item "kOSASupportsConvenience"
.IP "kOSASupportsDialects" 4
.IX Item "kOSASupportsDialects"
.IP "kOSASupportsEventHandling" 4
.IX Item "kOSASupportsEventHandling"
.PD
Feature flags.
.IP "kOSAModePreventGetSource" 4
.IX Item "kOSAModePreventGetSource"
.PD 0
.IP "kOSAModeNeverInteract" 4
.IX Item "kOSAModeNeverInteract"
.IP "kOSAModeCanInteract" 4
.IX Item "kOSAModeCanInteract"
.IP "kOSAModeAlwaysInteract" 4
.IX Item "kOSAModeAlwaysInteract"
.IP "kOSAModeDontReconnect" 4
.IX Item "kOSAModeDontReconnect"
.IP "kOSAModeCantSwitchLayer" 4
.IX Item "kOSAModeCantSwitchLayer"
.IP "kOSAModeDoRecord" 4
.IX Item "kOSAModeDoRecord"
.IP "kOSAModeCompileIntoContext" 4
.IX Item "kOSAModeCompileIntoContext"
.IP "kOSAModeAugmentContext" 4
.IX Item "kOSAModeAugmentContext"
.IP "kOSAModeDisplayForHumans" 4
.IX Item "kOSAModeDisplayForHumans"
.IP "kOSAModeDontStoreParent" 4
.IX Item "kOSAModeDontStoreParent"
.IP "kOSAModeDispatchToDirectObject" 4
.IX Item "kOSAModeDispatchToDirectObject"
.IP "kOSAModeDontGetDataForArguments" 4
.IX Item "kOSAModeDontGetDataForArguments"
.IP "kOSAModeDontDefine" 4
.IX Item "kOSAModeDontDefine"
.PD
Mode flags.
.IP "kOSAErrorNumber" 4
.IX Item "kOSAErrorNumber"
.PD 0
.IP "kOSAErrorMessage" 4
.IX Item "kOSAErrorMessage"
.IP "kOSAErrorBriefMessage" 4
.IX Item "kOSAErrorBriefMessage"
.IP "kOSAErrorApp" 4
.IX Item "kOSAErrorApp"
.IP "kOSAErrorPartialResult" 4
.IX Item "kOSAErrorPartialResult"
.IP "kOSAErrorOffendingObject" 4
.IX Item "kOSAErrorOffendingObject"
.IP "kOSAErrorExpectedType" 4
.IX Item "kOSAErrorExpectedType"
.IP "kOSAErrorRange" 4
.IX Item "kOSAErrorRange"
.IP "typeOSAErrorRange" 4
.IX Item "typeOSAErrorRange"
.IP "keyOSASourceStart" 4
.IX Item "keyOSASourceStart"
.IP "keyOSASourceEnd" 4
.IX Item "keyOSASourceEnd"
.PD
Error handling.
.IP "kOSAUseStandardDispatch" 4
.IX Item "kOSAUseStandardDispatch"
.PD 0
.IP "kOSANoDispatch" 4
.IX Item "kOSANoDispatch"
.IP "kOSADontUsePhac" 4
.IX Item "kOSADontUsePhac"
.IP "kGenericComponentVersion" 4
.IX Item "kGenericComponentVersion"
.PD
Dispatching flags
.SS "Functions"
.IX Subsection "Functions"
.IP "OSALoad \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTDATA\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSALoad SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS"
The OSALoad function loads script data and returns a script \s-1ID\s0. The generic
scripting component uses the descriptor record in the \s-1SCRIPTDATA\s0 parameter to
determine which scripting component should load the script. If the descriptor
record is of type typeOSAGenericStorage, the generic scripting component uses the
trailer at the end of the \s-1SCRIPTDATA\s0 to identify the scripting component. If the
descriptor record's type is the subtype value for another scripting component,
the generic scripting component uses the descriptor type to identify the
scripting component.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAStore \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTID\s0, \s-1DESIREDTYPE\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSAStore SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS"
The OSAStore function returns script data in a descriptor record so that the data
can later be saved in a resource or written to the data fork of a document. You
can then reload the data for the descriptor record as a compiled script (although
possibly with a different script \s-1ID\s0) by passing the descriptor record to \fIOSALoad()\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAExecute \s-1SCRIPTINGCOMPONENT\s0, \s-1COMPILEDSCRIPTID\s0, \s-1CONTEXTID\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSAExecute SCRIPTINGCOMPONENT, COMPILEDSCRIPTID, CONTEXTID, MODEFLAGS"
The OSAExecute function executes the compiled script identified by the
\&\s-1COMPILEDSCRIPTID\s0 parameter, using the script context identified by the \s-1CONTEXTID\s0
parameter to maintain state information, such as the binding of variables, for
the compiled script. After successfully executing a script, OSAExecute returns
the script \s-1ID\s0 for a resulting script value, or, if execution does not result in a
value, \f(CW\*(C`undef\*(C'\fR.
.IP "OSADisplay \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTVALUEID\s0, \s-1DESIREDTYPE\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSADisplay SCRIPTINGCOMPONENT, SCRIPTVALUEID, DESIREDTYPE, MODEFLAGS"
The OSADisplay function coerces the script value identified by \s-1SCRIPTVALUEID\s0 to a
descriptor record of the text type specified by the \s-1DESIREDTYPE\s0 parameter, if
possible. Valid types include all the standard text descriptor types defined in
the Apple Event Registry: Standard Suites, plus any special types supported by
the scripting component.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAScriptError \s-1SCRIPTINGCOMPONENT\s0, \s-1SELECTOR\s0, \s-1DESIREDTYPE\s0" 4
.IX Item "OSAScriptError SCRIPTINGCOMPONENT, SELECTOR, DESIREDTYPE"
Whenever the \fIOSAExecute()\fR function returns the error errOSAScriptError, you can use
the OSAScriptError function to get more specific information about the error from
the scripting component that encountered it. (This information remains available
only until the next call to the same scripting component.) The information
returned by OSAScriptError depends on the value passed in the \s-1SELECTOR\s0 parameter,
which also determines the descriptor type you should specify in the \s-1DESIREDTYPE\s0
parameter.
.Sp
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADispose \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTID\s0" 4
.IX Item "OSADispose SCRIPTINGCOMPONENT, SCRIPTID"
The OSADispose function releases the memory assigned to the script data identified
by the \s-1SCRIPTID\s0 parameter. The \s-1SCRIPTID\s0 passed to the OSADispose function is no
longer valid if the function returns successfully. A scripting component can then
reuse that \s-1SCRIPTID\s0 for other script data. 
Return zero if no error was detected.
.IP "OSASetScriptInfo \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTID\s0, \s-1SELECTOR\s0, \s-1VALUE\s0" 4
.IX Item "OSASetScriptInfo SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR, VALUE"
The OSASetScriptInfo function sets script information according to the value you
pass in the selector parameter. If you use the kOSAScriptIsModified constant,
OSASetScriptInfo sets a value that indicates how many times the script data has
been modified since it was created or passed to OSALoad. Some scripting
components may provide additional constants.
Return zero if no error was detected.
.IP "OSAGetScriptInfo \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTID\s0, \s-1SELECTOR\s0" 4
.IX Item "OSAGetScriptInfo SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR"
The OSAGetScriptInfo function returns various results according to the value you
pass in the \s-1SELECTOR\s0 parameter.
Returns an integer value which may need to be recast as the desired type.
.IP "OSASetProperty \s-1SCRIPTINGCOMPONENT\s0, \s-1MODEFLAGS\s0, \s-1SCRIPTID\s0, \s-1VARIABLENAME\s0, \s-1SCRIPTVALUEID\s0" 4
.IX Item "OSASetProperty SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME, SCRIPTVALUEID"
The OSASetProperty function sets the value of a script property in a specified script.
\&\s-1VARIABLENAME\s0 is an AEDesc.
.IP "OSAGetProperty \s-1SCRIPTINGCOMPONENT\s0, \s-1MODEFLAGS\s0, \s-1SCRIPTID\s0, \s-1VARIABLENAME\s0" 4
.IX Item "OSAGetProperty SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME"
The OSAGetProperty function gets the value of a script property in a specified script.
\&\s-1VARIABLENAME\s0 is an AEDesc.  Returns an AEDesc.
.IP "OSAGetAppTerminology \s-1SCRIPTINGCOMPONENT\s0, \s-1MODEFLAGS\s0, \s-1FILE\s0, \s-1TERMINOLOGYID\s0" 4
.IX Item "OSAGetAppTerminology SCRIPTINGCOMPONENT, MODEFLAGS, FILE, TERMINOLOGYID"
OSAGetAppTerminology gets one or more scripting terminology resources from
the specified file.  Returns an AEDesc.
.IP "OSAScriptingComponentName \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAScriptingComponentName SCRIPTINGCOMPONENT"
The OSAScriptingComponentName function returns a descriptor record that you can
coerce to a text descriptor type such as typeChar. This can be useful if you want
to display the name of the scripting language in which the user should write a
new script.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACompile \s-1SCRIPTINGCOMPONENT\s0, \s-1SOURCEDATA\s0, \s-1MODEFLAGS\s0, [\s-1PREVIOUSSCRIPTID\s0]" 4
.IX Item "OSACompile SCRIPTINGCOMPONENT, SOURCEDATA, MODEFLAGS, [PREVIOUSSCRIPTID]"
You can pass a descriptor record containing source data suitable for a specific
scripting component (usually text) to the OSACompile function to obtain a script
\&\s-1ID\s0 for the equivalent compiled script or script context. To compile the source
data as a script context for use with \fIOSAExecuteEvent()\fR or \fIOSADoEvent()\fR, you must set
the kOSAModeCompileIntoContext flag, and the source data should include appropriate
handlers.
Return zero if no error was detected.
.IP "OSACopyID \s-1SCRIPTINGCOMPONENT\s0, \s-1FROMID\s0, [\s-1TOID\s0]" 4
.IX Item "OSACopyID SCRIPTINGCOMPONENT, FROMID, [TOID]"
The OSACopyID function replaces the script data identified by the script \s-1ID\s0 in
the \s-1TOID\s0 parameter with the script data identified by the script \s-1ID\s0 in the \s-1FROMID\s0
parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetSource \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTID\s0, [\s-1DESIREDTYPE\s0]" 4
.IX Item "OSAGetSource SCRIPTINGCOMPONENT, SCRIPTID, [DESIREDTYPE]"
The OSAGetSource function decompiles the script data identified by the specified
script \s-1ID\s0 and returns a descriptor record containing the equivalent source data.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACoerceFromDesc \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTDATA\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSACoerceFromDesc SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS"
The OSACoerceFromDesc function coerces the descriptor record in the \s-1SCRIPTDATA\s0
parameter to the equivalent script value and returns a script \s-1ID\s0 for that value. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACoerceToDesc \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTID\s0, \s-1DESIREDTYPE\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSACoerceToDesc SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS"
The OSACoerceToDesc function coerces the script value identified by \s-1SCRIPTID\s0
to a descriptor record of the type specified by the \s-1DESIREDTYPE\s0 parameter, if
possible.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetDefaultTarget \s-1SCRIPTINGCOMPONENT\s0, \s-1TARGET\s0" 4
.IX Item "OSASetDefaultTarget SCRIPTINGCOMPONENT, TARGET"
The OSASetDefaultTarget function establishes the default target application for
Apple event sending and the default application from which the scripting
component should obtain terminology information. For example, AppleScript
statements that refer to the default application do not need to be enclosed in
\&\f(CW\*(C`tell/end tell\*(C'\fR statements. 
Return zero if no error was detected.
.IP "OSAStartRecording \s-1SCRIPTINGCOMPONENT\s0, [\s-1COMPILEDSCRIPTTOMODIFYID\s0]" 4
.IX Item "OSAStartRecording SCRIPTINGCOMPONENT, [COMPILEDSCRIPTTOMODIFYID]"
The OSAStartRecording routine turns on Apple event recording. Subsequent Apple
events are recorded (that is, appended to any existing statements) in the
compiled script specified by the \s-1COMPILEDSCRIPTTOMODIFYID\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAStopRecording \s-1SCRIPTINGCOMPONENT\s0, \s-1COMPILEDSCRIPTID\s0" 4
.IX Item "OSAStopRecording SCRIPTINGCOMPONENT, COMPILEDSCRIPTID"
The OSAStopRecording function turns off recording. If the script is not currently
open in a script editor window, the \s-1COMPILEDSCRIPTTOMODIFYID\s0 parameter supplied
to \fIOSAStartRecording()\fR is then augmented to contain the newly recorded statements.
If the script is currently open in a script editor window, the script data that
corresponds to the compiledScriptToModifyID parameter supplied to
\&\fIOSAStartRecording()\fR is updated continuously until the client application calls
OSAStopRecording. 
Return zero if no error was detected.
.IP "OSALoadExecute \s-1SCRIPTINGCOMPONENT\s0, \s-1SCRIPTDATA\s0, \s-1CONTEXTID\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSALoadExecute SCRIPTINGCOMPONENT, SCRIPTDATA, CONTEXTID, MODEFLAGS"
The OSALoadExecute function loads script data and executes the resulting compiled
script, using the script context identified by the \s-1CONTEXTID\s0 parameter to
maintain state information such as the binding of variables. After successfully
executing the script, OSALoadExecute disposes of the compiled script and returns
either the script \s-1ID\s0 for the resulting script value or, if execution does not
result in a value, the constant kOSANullScript. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACompileExecute \s-1SCRIPTINGCOMPONENT\s0, \s-1SOURCEDATA\s0, \s-1CONTEXTID\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSACompileExecute SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, MODEFLAGS"
The OSACompileExecute function compiles source data and executes the resulting
compiled script, using the script context identified by the \s-1CONTEXTID\s0 parameter
to maintain state information such as the binding of variables. After
successfully executing the script, OSACompileExecute disposes of the compiled
script and returns either the script \s-1ID\s0 for the resulting script value or, if
execution does not result in a value, the constant kOSANullScript.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADoScript \s-1SCRIPTINGCOMPONENT\s0, \s-1SOURCEDATA\s0, \s-1CONTEXTID\s0, \s-1DESIREDTYPE\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSADoScript SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, DESIREDTYPE, MODEFLAGS"
Calling the OSADoScript function is equivalent to calling \fIOSACompile()\fR followed by
\&\fIOSAExecute()\fR and \fIOSADisplay()\fR. After compiling the source data, executing the
compiled script using the script context identified by the \s-1CONTEXTID\s0 parameter,
and returning the text equivalent of the resulting script value, OSADoScript
disposes of both the compiled script and the resulting script value.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetCurrentDialect \s-1SCRIPTINGCOMPONENT\s0, \s-1DIALECTCODE\s0" 4
.IX Item "OSASetCurrentDialect SCRIPTINGCOMPONENT, DIALECTCODE"
Set the current dialect for a scripting component.
Return zero if no error was detected.
.IP "OSAGetCurrentDialect \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAGetCurrentDialect SCRIPTINGCOMPONENT"
Get the dialect code for the dialect currently being used by a scripting
component.
Returns the code for the current dialect of the specified scripting component.
.IP "OSAAvailableDialects \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAAvailableDialects SCRIPTINGCOMPONENT"
Obtain a descriptor list containing information about each of the currently
available dialects for a scripting component. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetDialectInfo \s-1SCRIPTINGCOMPONENT\s0, \s-1DIALECTCODE\s0, \s-1SELECTOR\s0" 4
.IX Item "OSAGetDialectInfo SCRIPTINGCOMPONENT, DIALECTCODE, SELECTOR"
After you obtain a list of dialect codes by calling \fIOSAAvailableDialectCodeList()\fR,
you can pass any of those codes to OSAGetDialectInfo to get information about the
corresponding dialect. The descriptor type of the descriptor record returned by
OSAGetDialectInfo depends on the constant specified in the \s-1SELECTOR\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAAvailableDialectCodeList \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAAvailableDialectCodeList SCRIPTINGCOMPONENT"
Obtain a descriptor list containing dialect codes for each of a scripting
component's currently available dialects. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAExecuteEvent \s-1SCRIPTINGCOMPONENT\s0, \s-1THEAPPLEEVENT\s0, \s-1CONTEXTID\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSAExecuteEvent SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS"
The OSAExecuteEvent function attempts to use the script context specified by the
contextID parameter to handle the Apple event specified by the \s-1THEAPPLEEVENT\s0
parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADoEvent \s-1SCRIPTINGCOMPONENT\s0, \s-1THEAPPLEEVENT\s0, \s-1CONTEXTID\s0, \s-1MODEFLAGS\s0" 4
.IX Item "OSADoEvent SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS"
The OSADoEvent function resembles both \fIOSADoScript()\fR and \fIOSAExecuteEvent()\fR.
However,
unlike \fIOSADoScript()\fR, the script OSADoEvent executes must be in the form of a
script context, and execution is initiated by an Apple event. Unlike
\&\fIOSAExecuteEvent()\fR, OSADoEvent returns a reply Apple event rather than the script \s-1ID\s0
of the resulting script value.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAMakeContext \s-1SCRIPTINGCOMPONENT\s0, \s-1CONTEXTNAME\s0, [\s-1PARENTCONTEXT\s0]" 4
.IX Item "OSAMakeContext SCRIPTINGCOMPONENT, CONTEXTNAME, [PARENTCONTEXT]"
The OSAMakeContext function creates a new script context that you may pass to
\&\fIOSAExecute()\fR or \fIOSAExecuteEvent()\fR. The new script context inherits the bindings of
the script context specified in the \s-1PARENTCONTEXT\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetDefaultScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAGetDefaultScriptingComponent GENERICSCRIPTINGCOMPONENT"
The OSAGetDefaultScriptingComponent function returns the subtype code for the
default scripting component. This is the scripting component that will be used by
\&\fIOSAStartRecording()\fR, \fIOSACompile()\fR, or \fIOSACompileExecute()\fR if no existing script \s-1ID\s0 is
specified. From the user's point of view, the default scripting component
corresponds to the scripting language selected in the Script Editor application
when the user first creates a new script.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetDefaultScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT\s0, \s-1SCRIPTINGSUBTYPE\s0" 4
.IX Item "OSASetDefaultScriptingComponent GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE"
The OSASetDefaultScriptingComponent function sets the default scripting component
for the specified instance of the generic scripting component to the scripting
component identified by the \s-1SCRIPTINGSUBTYPE\s0 parameter.
Return zero if no error was detected.
.IP "OSAGetScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT\s0, \s-1SCRIPTINGSUBTYPE\s0" 4
.IX Item "OSAGetScriptingComponent GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE"
The OSAGetScriptingComponent function returns an instance of the scripting
component identified by the
\&\s-1SCRIPTINGSUBTYPE\s0 parameter. Each instance of the generic scripting component
keeps track of a single instance of each component subtype, so
OSAGetScriptingComponent always returns the same instance of a specified
scripting component that the generic scripting component uses for standard
scripting component routines.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetScriptingComponentFromStored \s-1GENERICSCRIPTINGCOMPONENT\s0, \s-1SCRIPTDATA\s0" 4
.IX Item "OSAGetScriptingComponentFromStored GENERICSCRIPTINGCOMPONENT, SCRIPTDATA"
The OSAGetScriptingComponentFromStored function returns the subtype code for the
scripting component that created the script
data specified by the \s-1SCRIPTDATA\s0 parameter. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGenericToRealID \s-1GENERICSCRIPTINGCOMPONENT\s0, \s-1GENERICSCRIPTID\s0" 4
.IX Item "OSAGenericToRealID GENERICSCRIPTINGCOMPONENT, GENERICSCRIPTID"
Given a \s-1GENERICSCRIPTID\s0 (that is, a script \s-1ID\s0 returned by a call to a standard
component routine via the generic scripting component), the OSAGenericToRealID
function returns the equivalent component-specific script \s-1ID\s0 and the component
instance that created that script \s-1ID\s0 as an array.
.IP "OSARealToGenericID \s-1GENERICSCRIPTINGCOMPONENT\s0, \s-1THESCRIPTID\s0, \s-1THEEXACTCOMPONENT\s0" 4
.IX Item "OSARealToGenericID GENERICSCRIPTINGCOMPONENT, THESCRIPTID, THEEXACTCOMPONENT"
The OSARealToGenericID function performs the reverse of the task performed by
\&\fIOSAGenericToRealID()\fR. Given a component-specific \s-1SCRIPTID\s0 and an exact scripting
component instance (that is, the component instance that created the
component-specific script \s-1ID\s0), the OSARealToGenericID function returns the
corresponding generic script \s-1ID\s0.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::OSA5.18.3pm                             0100644 0001750 0001750 00000063733 12566241365 023062  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OSA 3"
.TH OSA 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::OSA \- Provide interface to Open Scripting Architecture
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::OSA;
\&
\&    use Mac::OSA qw(OSALoad OSAStore OSAExecute);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "kOSAComponentType" 4
.IX Item "kOSAComponentType"
.PD 0
.IP "kOSAGenericScriptingComponentSubtype" 4
.IX Item "kOSAGenericScriptingComponentSubtype"
.IP "kOSAFileType" 4
.IX Item "kOSAFileType"
.IP "kOSASuite" 4
.IX Item "kOSASuite"
.IP "kOSARecordedText" 4
.IX Item "kOSARecordedText"
.IP "kOSAScriptIsModified" 4
.IX Item "kOSAScriptIsModified"
.IP "kOSAScriptIsTypeCompiledScript" 4
.IX Item "kOSAScriptIsTypeCompiledScript"
.IP "kOSAScriptIsTypeScriptValue" 4
.IX Item "kOSAScriptIsTypeScriptValue"
.IP "kOSAScriptIsTypeScriptContext" 4
.IX Item "kOSAScriptIsTypeScriptContext"
.IP "kOSAScriptBestType" 4
.IX Item "kOSAScriptBestType"
.IP "kOSACanGetSource" 4
.IX Item "kOSACanGetSource"
.IP "typeOSADialectInfo" 4
.IX Item "typeOSADialectInfo"
.IP "keyOSADialectName" 4
.IX Item "keyOSADialectName"
.IP "keyOSADialectCode" 4
.IX Item "keyOSADialectCode"
.IP "keyOSADialectLangCode" 4
.IX Item "keyOSADialectLangCode"
.IP "keyOSADialectScriptCode" 4
.IX Item "keyOSADialectScriptCode"
.IP "kOSAScriptResourceType" 4
.IX Item "kOSAScriptResourceType"
.IP "typeOSAGenericStorage" 4
.IX Item "typeOSAGenericStorage"
.PD
Types and keywords.
.IP "kOSANullScript" 4
.IX Item "kOSANullScript"
.PD 0
.IP "kOSANullMode" 4
.IX Item "kOSANullMode"
.IP "kOSAModeNull" 4
.IX Item "kOSAModeNull"
.PD
Default values.
.IP "kOSASupportsCompiling" 4
.IX Item "kOSASupportsCompiling"
.PD 0
.IP "kOSASupportsGetSource" 4
.IX Item "kOSASupportsGetSource"
.IP "kOSASupportsAECoercion" 4
.IX Item "kOSASupportsAECoercion"
.IP "kOSASupportsAESending" 4
.IX Item "kOSASupportsAESending"
.IP "kOSASupportsRecording" 4
.IX Item "kOSASupportsRecording"
.IP "kOSASupportsConvenience" 4
.IX Item "kOSASupportsConvenience"
.IP "kOSASupportsDialects" 4
.IX Item "kOSASupportsDialects"
.IP "kOSASupportsEventHandling" 4
.IX Item "kOSASupportsEventHandling"
.PD
Feature flags.
.IP "kOSAModePreventGetSource" 4
.IX Item "kOSAModePreventGetSource"
.PD 0
.IP "kOSAModeNeverInteract" 4
.IX Item "kOSAModeNeverInteract"
.IP "kOSAModeCanInteract" 4
.IX Item "kOSAModeCanInteract"
.IP "kOSAModeAlwaysInteract" 4
.IX Item "kOSAModeAlwaysInteract"
.IP "kOSAModeDontReconnect" 4
.IX Item "kOSAModeDontReconnect"
.IP "kOSAModeCantSwitchLayer" 4
.IX Item "kOSAModeCantSwitchLayer"
.IP "kOSAModeDoRecord" 4
.IX Item "kOSAModeDoRecord"
.IP "kOSAModeCompileIntoContext" 4
.IX Item "kOSAModeCompileIntoContext"
.IP "kOSAModeAugmentContext" 4
.IX Item "kOSAModeAugmentContext"
.IP "kOSAModeDisplayForHumans" 4
.IX Item "kOSAModeDisplayForHumans"
.IP "kOSAModeDontStoreParent" 4
.IX Item "kOSAModeDontStoreParent"
.IP "kOSAModeDispatchToDirectObject" 4
.IX Item "kOSAModeDispatchToDirectObject"
.IP "kOSAModeDontGetDataForArguments" 4
.IX Item "kOSAModeDontGetDataForArguments"
.IP "kOSAModeDontDefine" 4
.IX Item "kOSAModeDontDefine"
.PD
Mode flags.
.IP "kOSAErrorNumber" 4
.IX Item "kOSAErrorNumber"
.PD 0
.IP "kOSAErrorMessage" 4
.IX Item "kOSAErrorMessage"
.IP "kOSAErrorBriefMessage" 4
.IX Item "kOSAErrorBriefMessage"
.IP "kOSAErrorApp" 4
.IX Item "kOSAErrorApp"
.IP "kOSAErrorPartialResult" 4
.IX Item "kOSAErrorPartialResult"
.IP "kOSAErrorOffendingObject" 4
.IX Item "kOSAErrorOffendingObject"
.IP "kOSAErrorExpectedType" 4
.IX Item "kOSAErrorExpectedType"
.IP "kOSAErrorRange" 4
.IX Item "kOSAErrorRange"
.IP "typeOSAErrorRange" 4
.IX Item "typeOSAErrorRange"
.IP "keyOSASourceStart" 4
.IX Item "keyOSASourceStart"
.IP "keyOSASourceEnd" 4
.IX Item "keyOSASourceEnd"
.PD
Error handling.
.IP "kOSAUseStandardDispatch" 4
.IX Item "kOSAUseStandardDispatch"
.PD 0
.IP "kOSANoDispatch" 4
.IX Item "kOSANoDispatch"
.IP "kOSADontUsePhac" 4
.IX Item "kOSADontUsePhac"
.IP "kGenericComponentVersion" 4
.IX Item "kGenericComponentVersion"
.PD
Dispatching flags
.SS "Functions"
.IX Subsection "Functions"
.IP "OSALoad \s-1SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS\s0" 4
.IX Item "OSALoad SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS"
The OSALoad function loads script data and returns a script \s-1ID.\s0 The generic
scripting component uses the descriptor record in the \s-1SCRIPTDATA\s0 parameter to
determine which scripting component should load the script. If the descriptor
record is of type typeOSAGenericStorage, the generic scripting component uses the
trailer at the end of the \s-1SCRIPTDATA\s0 to identify the scripting component. If the
descriptor record's type is the subtype value for another scripting component,
the generic scripting component uses the descriptor type to identify the
scripting component.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAStore \s-1SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSAStore SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS"
The OSAStore function returns script data in a descriptor record so that the data
can later be saved in a resource or written to the data fork of a document. You
can then reload the data for the descriptor record as a compiled script (although
possibly with a different script \s-1ID\s0) by passing the descriptor record to \fIOSALoad()\fR.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAExecute \s-1SCRIPTINGCOMPONENT, COMPILEDSCRIPTID, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSAExecute SCRIPTINGCOMPONENT, COMPILEDSCRIPTID, CONTEXTID, MODEFLAGS"
The OSAExecute function executes the compiled script identified by the
\&\s-1COMPILEDSCRIPTID\s0 parameter, using the script context identified by the \s-1CONTEXTID\s0
parameter to maintain state information, such as the binding of variables, for
the compiled script. After successfully executing a script, OSAExecute returns
the script \s-1ID\s0 for a resulting script value, or, if execution does not result in a
value, \f(CW\*(C`undef\*(C'\fR.
.IP "OSADisplay \s-1SCRIPTINGCOMPONENT, SCRIPTVALUEID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSADisplay SCRIPTINGCOMPONENT, SCRIPTVALUEID, DESIREDTYPE, MODEFLAGS"
The OSADisplay function coerces the script value identified by \s-1SCRIPTVALUEID\s0 to a
descriptor record of the text type specified by the \s-1DESIREDTYPE\s0 parameter, if
possible. Valid types include all the standard text descriptor types defined in
the Apple Event Registry: Standard Suites, plus any special types supported by
the scripting component.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAScriptError \s-1SCRIPTINGCOMPONENT, SELECTOR, DESIREDTYPE\s0" 4
.IX Item "OSAScriptError SCRIPTINGCOMPONENT, SELECTOR, DESIREDTYPE"
Whenever the \fIOSAExecute()\fR function returns the error errOSAScriptError, you can use
the OSAScriptError function to get more specific information about the error from
the scripting component that encountered it. (This information remains available
only until the next call to the same scripting component.) The information
returned by OSAScriptError depends on the value passed in the \s-1SELECTOR\s0 parameter,
which also determines the descriptor type you should specify in the \s-1DESIREDTYPE\s0
parameter.
.Sp
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADispose \s-1SCRIPTINGCOMPONENT, SCRIPTID\s0" 4
.IX Item "OSADispose SCRIPTINGCOMPONENT, SCRIPTID"
The OSADispose function releases the memory assigned to the script data identified
by the \s-1SCRIPTID\s0 parameter. The \s-1SCRIPTID\s0 passed to the OSADispose function is no
longer valid if the function returns successfully. A scripting component can then
reuse that \s-1SCRIPTID\s0 for other script data. 
Return zero if no error was detected.
.IP "OSASetScriptInfo \s-1SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR, VALUE\s0" 4
.IX Item "OSASetScriptInfo SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR, VALUE"
The OSASetScriptInfo function sets script information according to the value you
pass in the selector parameter. If you use the kOSAScriptIsModified constant,
OSASetScriptInfo sets a value that indicates how many times the script data has
been modified since it was created or passed to OSALoad. Some scripting
components may provide additional constants.
Return zero if no error was detected.
.IP "OSAGetScriptInfo \s-1SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR\s0" 4
.IX Item "OSAGetScriptInfo SCRIPTINGCOMPONENT, SCRIPTID, SELECTOR"
The OSAGetScriptInfo function returns various results according to the value you
pass in the \s-1SELECTOR\s0 parameter.
Returns an integer value which may need to be recast as the desired type.
.IP "OSASetProperty \s-1SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME, SCRIPTVALUEID\s0" 4
.IX Item "OSASetProperty SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME, SCRIPTVALUEID"
The OSASetProperty function sets the value of a script property in a specified script.
\&\s-1VARIABLENAME\s0 is an AEDesc.
.IP "OSAGetProperty \s-1SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME\s0" 4
.IX Item "OSAGetProperty SCRIPTINGCOMPONENT, MODEFLAGS, SCRIPTID, VARIABLENAME"
The OSAGetProperty function gets the value of a script property in a specified script.
\&\s-1VARIABLENAME\s0 is an AEDesc.  Returns an AEDesc.
.IP "OSAGetAppTerminology \s-1SCRIPTINGCOMPONENT, MODEFLAGS, FILE, TERMINOLOGYID\s0" 4
.IX Item "OSAGetAppTerminology SCRIPTINGCOMPONENT, MODEFLAGS, FILE, TERMINOLOGYID"
OSAGetAppTerminology gets one or more scripting terminology resources from
the specified file.  Returns an AEDesc.
.IP "OSAScriptingComponentName \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAScriptingComponentName SCRIPTINGCOMPONENT"
The OSAScriptingComponentName function returns a descriptor record that you can
coerce to a text descriptor type such as typeChar. This can be useful if you want
to display the name of the scripting language in which the user should write a
new script.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACompile \s-1SCRIPTINGCOMPONENT, SOURCEDATA, MODEFLAGS,\s0 [\s-1PREVIOUSSCRIPTID\s0]" 4
.IX Item "OSACompile SCRIPTINGCOMPONENT, SOURCEDATA, MODEFLAGS, [PREVIOUSSCRIPTID]"
You can pass a descriptor record containing source data suitable for a specific
scripting component (usually text) to the OSACompile function to obtain a script
\&\s-1ID\s0 for the equivalent compiled script or script context. To compile the source
data as a script context for use with \fIOSAExecuteEvent()\fR or \fIOSADoEvent()\fR, you must set
the kOSAModeCompileIntoContext flag, and the source data should include appropriate
handlers.
Return zero if no error was detected.
.IP "OSACopyID \s-1SCRIPTINGCOMPONENT, FROMID,\s0 [\s-1TOID\s0]" 4
.IX Item "OSACopyID SCRIPTINGCOMPONENT, FROMID, [TOID]"
The OSACopyID function replaces the script data identified by the script \s-1ID\s0 in
the \s-1TOID\s0 parameter with the script data identified by the script \s-1ID\s0 in the \s-1FROMID\s0
parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetSource \s-1SCRIPTINGCOMPONENT, SCRIPTID,\s0 [\s-1DESIREDTYPE\s0]" 4
.IX Item "OSAGetSource SCRIPTINGCOMPONENT, SCRIPTID, [DESIREDTYPE]"
The OSAGetSource function decompiles the script data identified by the specified
script \s-1ID\s0 and returns a descriptor record containing the equivalent source data.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACoerceFromDesc \s-1SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS\s0" 4
.IX Item "OSACoerceFromDesc SCRIPTINGCOMPONENT, SCRIPTDATA, MODEFLAGS"
The OSACoerceFromDesc function coerces the descriptor record in the \s-1SCRIPTDATA\s0
parameter to the equivalent script value and returns a script \s-1ID\s0 for that value. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACoerceToDesc \s-1SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSACoerceToDesc SCRIPTINGCOMPONENT, SCRIPTID, DESIREDTYPE, MODEFLAGS"
The OSACoerceToDesc function coerces the script value identified by \s-1SCRIPTID\s0
to a descriptor record of the type specified by the \s-1DESIREDTYPE\s0 parameter, if
possible.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetDefaultTarget \s-1SCRIPTINGCOMPONENT, TARGET\s0" 4
.IX Item "OSASetDefaultTarget SCRIPTINGCOMPONENT, TARGET"
The OSASetDefaultTarget function establishes the default target application for
Apple event sending and the default application from which the scripting
component should obtain terminology information. For example, AppleScript
statements that refer to the default application do not need to be enclosed in
\&\f(CW\*(C`tell/end tell\*(C'\fR statements. 
Return zero if no error was detected.
.IP "OSAStartRecording \s-1SCRIPTINGCOMPONENT,\s0 [\s-1COMPILEDSCRIPTTOMODIFYID\s0]" 4
.IX Item "OSAStartRecording SCRIPTINGCOMPONENT, [COMPILEDSCRIPTTOMODIFYID]"
The OSAStartRecording routine turns on Apple event recording. Subsequent Apple
events are recorded (that is, appended to any existing statements) in the
compiled script specified by the \s-1COMPILEDSCRIPTTOMODIFYID\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAStopRecording \s-1SCRIPTINGCOMPONENT, COMPILEDSCRIPTID\s0" 4
.IX Item "OSAStopRecording SCRIPTINGCOMPONENT, COMPILEDSCRIPTID"
The OSAStopRecording function turns off recording. If the script is not currently
open in a script editor window, the \s-1COMPILEDSCRIPTTOMODIFYID\s0 parameter supplied
to \fIOSAStartRecording()\fR is then augmented to contain the newly recorded statements.
If the script is currently open in a script editor window, the script data that
corresponds to the compiledScriptToModifyID parameter supplied to
\&\fIOSAStartRecording()\fR is updated continuously until the client application calls
OSAStopRecording. 
Return zero if no error was detected.
.IP "OSALoadExecute \s-1SCRIPTINGCOMPONENT, SCRIPTDATA, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSALoadExecute SCRIPTINGCOMPONENT, SCRIPTDATA, CONTEXTID, MODEFLAGS"
The OSALoadExecute function loads script data and executes the resulting compiled
script, using the script context identified by the \s-1CONTEXTID\s0 parameter to
maintain state information such as the binding of variables. After successfully
executing the script, OSALoadExecute disposes of the compiled script and returns
either the script \s-1ID\s0 for the resulting script value or, if execution does not
result in a value, the constant kOSANullScript. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSACompileExecute \s-1SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSACompileExecute SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, MODEFLAGS"
The OSACompileExecute function compiles source data and executes the resulting
compiled script, using the script context identified by the \s-1CONTEXTID\s0 parameter
to maintain state information such as the binding of variables. After
successfully executing the script, OSACompileExecute disposes of the compiled
script and returns either the script \s-1ID\s0 for the resulting script value or, if
execution does not result in a value, the constant kOSANullScript.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADoScript \s-1SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, DESIREDTYPE, MODEFLAGS\s0" 4
.IX Item "OSADoScript SCRIPTINGCOMPONENT, SOURCEDATA, CONTEXTID, DESIREDTYPE, MODEFLAGS"
Calling the OSADoScript function is equivalent to calling \fIOSACompile()\fR followed by
\&\fIOSAExecute()\fR and \fIOSADisplay()\fR. After compiling the source data, executing the
compiled script using the script context identified by the \s-1CONTEXTID\s0 parameter,
and returning the text equivalent of the resulting script value, OSADoScript
disposes of both the compiled script and the resulting script value.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetCurrentDialect \s-1SCRIPTINGCOMPONENT, DIALECTCODE\s0" 4
.IX Item "OSASetCurrentDialect SCRIPTINGCOMPONENT, DIALECTCODE"
Set the current dialect for a scripting component.
Return zero if no error was detected.
.IP "OSAGetCurrentDialect \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAGetCurrentDialect SCRIPTINGCOMPONENT"
Get the dialect code for the dialect currently being used by a scripting
component.
Returns the code for the current dialect of the specified scripting component.
.IP "OSAAvailableDialects \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAAvailableDialects SCRIPTINGCOMPONENT"
Obtain a descriptor list containing information about each of the currently
available dialects for a scripting component. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetDialectInfo \s-1SCRIPTINGCOMPONENT, DIALECTCODE, SELECTOR\s0" 4
.IX Item "OSAGetDialectInfo SCRIPTINGCOMPONENT, DIALECTCODE, SELECTOR"
After you obtain a list of dialect codes by calling \fIOSAAvailableDialectCodeList()\fR,
you can pass any of those codes to OSAGetDialectInfo to get information about the
corresponding dialect. The descriptor type of the descriptor record returned by
OSAGetDialectInfo depends on the constant specified in the \s-1SELECTOR\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAAvailableDialectCodeList \s-1SCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAAvailableDialectCodeList SCRIPTINGCOMPONENT"
Obtain a descriptor list containing dialect codes for each of a scripting
component's currently available dialects. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAExecuteEvent \s-1SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSAExecuteEvent SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS"
The OSAExecuteEvent function attempts to use the script context specified by the
contextID parameter to handle the Apple event specified by the \s-1THEAPPLEEVENT\s0
parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSADoEvent \s-1SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS\s0" 4
.IX Item "OSADoEvent SCRIPTINGCOMPONENT, THEAPPLEEVENT, CONTEXTID, MODEFLAGS"
The OSADoEvent function resembles both \fIOSADoScript()\fR and \fIOSAExecuteEvent()\fR.
However,
unlike \fIOSADoScript()\fR, the script OSADoEvent executes must be in the form of a
script context, and execution is initiated by an Apple event. Unlike
\&\fIOSAExecuteEvent()\fR, OSADoEvent returns a reply Apple event rather than the script \s-1ID\s0
of the resulting script value.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAMakeContext \s-1SCRIPTINGCOMPONENT, CONTEXTNAME,\s0 [\s-1PARENTCONTEXT\s0]" 4
.IX Item "OSAMakeContext SCRIPTINGCOMPONENT, CONTEXTNAME, [PARENTCONTEXT]"
The OSAMakeContext function creates a new script context that you may pass to
\&\fIOSAExecute()\fR or \fIOSAExecuteEvent()\fR. The new script context inherits the bindings of
the script context specified in the \s-1PARENTCONTEXT\s0 parameter.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetDefaultScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT\s0" 4
.IX Item "OSAGetDefaultScriptingComponent GENERICSCRIPTINGCOMPONENT"
The OSAGetDefaultScriptingComponent function returns the subtype code for the
default scripting component. This is the scripting component that will be used by
\&\fIOSAStartRecording()\fR, \fIOSACompile()\fR, or \fIOSACompileExecute()\fR if no existing script \s-1ID\s0 is
specified. From the user's point of view, the default scripting component
corresponds to the scripting language selected in the Script Editor application
when the user first creates a new script.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSASetDefaultScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE\s0" 4
.IX Item "OSASetDefaultScriptingComponent GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE"
The OSASetDefaultScriptingComponent function sets the default scripting component
for the specified instance of the generic scripting component to the scripting
component identified by the \s-1SCRIPTINGSUBTYPE\s0 parameter.
Return zero if no error was detected.
.IP "OSAGetScriptingComponent \s-1GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE\s0" 4
.IX Item "OSAGetScriptingComponent GENERICSCRIPTINGCOMPONENT, SCRIPTINGSUBTYPE"
The OSAGetScriptingComponent function returns an instance of the scripting
component identified by the
\&\s-1SCRIPTINGSUBTYPE\s0 parameter. Each instance of the generic scripting component
keeps track of a single instance of each component subtype, so
OSAGetScriptingComponent always returns the same instance of a specified
scripting component that the generic scripting component uses for standard
scripting component routines.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGetScriptingComponentFromStored \s-1GENERICSCRIPTINGCOMPONENT, SCRIPTDATA\s0" 4
.IX Item "OSAGetScriptingComponentFromStored GENERICSCRIPTINGCOMPONENT, SCRIPTDATA"
The OSAGetScriptingComponentFromStored function returns the subtype code for the
scripting component that created the script
data specified by the \s-1SCRIPTDATA\s0 parameter. 
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "OSAGenericToRealID \s-1GENERICSCRIPTINGCOMPONENT, GENERICSCRIPTID\s0" 4
.IX Item "OSAGenericToRealID GENERICSCRIPTINGCOMPONENT, GENERICSCRIPTID"
Given a \s-1GENERICSCRIPTID \s0(that is, a script \s-1ID\s0 returned by a call to a standard
component routine via the generic scripting component), the OSAGenericToRealID
function returns the equivalent component-specific script \s-1ID\s0 and the component
instance that created that script \s-1ID\s0 as an array.
.IP "OSARealToGenericID \s-1GENERICSCRIPTINGCOMPONENT, THESCRIPTID, THEEXACTCOMPONENT\s0" 4
.IX Item "OSARealToGenericID GENERICSCRIPTINGCOMPONENT, THESCRIPTID, THEEXACTCOMPONENT"
The OSARealToGenericID function performs the reverse of the task performed by
\&\fIOSAGenericToRealID()\fR. Given a component-specific \s-1SCRIPTID\s0 and an exact scripting
component instance (that is, the component instance that created the
component-specific script \s-1ID\s0), the OSARealToGenericID function returns the
corresponding generic script \s-1ID.\s0
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::OSA::Simple.3pm                         0100644 0001750 0001750 00000031167 12566241405 024073  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Simple 3"
.TH Simple 3 "2005-06-01" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::OSA::Simple \- Simple access to Mac::OSA
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\&    #!perl \-wl
\&    use Mac::OSA::Simple;
\&    osa_script(\*(AqLAND\*(Aq, <<\*(AqEOS\*(Aq);
\&      dialog.getInt ("Duration?",@examples.duration);
\&      dialog.getInt ("Amplitude?",@examples.amplitude);
\&      dialog.getInt ("Frequency?",@examples.frequency);
\&      speaker.sound (examples.duration, examples.amplitude,
\&          examples.frequency)
\&    EOS
\&
\&    print frontier(\*(Aqclock.now()\*(Aq);
\&
\&    applescript(\*(Aqbeep 3\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can access scripting components via the tied hash
\&\f(CW%ScriptComponents\fR which is automatically exported.  Components are
only opened if they have not been already, and are closed when the
program exits.  It is normally not necessary to use this hash, as it is
accessed internally when needed.
.PP
Also usually not necessary, but possibly useful, are all the functions
and constants from Mac::OSA, available with the \s-1EXPORT_TAG \s0\*(L"all\*(R".
.PP
\&\fB\s-1NOTE\s0\fR: Examples below show use of $^E.  On Mac \s-1OS,\s0 this will return the
signed Mac \s-1OS\s0 error number in numeric context, and the Mac \s-1OS\s0 error message
in string context.  But on Mac \s-1OS X,\s0 $^E support is unimplemented.  $! and $^E
will both return the \fIunsigned\fR error number.  You can get the correct error
number by adding 0 (such as \f(CW\*(C`$! + 0\*(C'\fR), and you can use Mac::Errors to get
the error text (this will also work under Mac \s-1OS\s0):
.PP
.Vb 2
\&        use Mac::Errors \*(Aq$MacError\*(Aq;
\&        my $res = FSpOpenResFile($file, 0) or die $MacError;
.Ve
.PP
See Mac::Errors on the \s-1CPAN\s0 for more information.
.SS "Functions"
.IX Subsection "Functions"
The following functions are automatically exported.
.IP "osa_script(\s-1SCRIPTCOMPONENT, SCRIPTTEXT\s0)" 4
.IX Item "osa_script(SCRIPTCOMPONENT, SCRIPTTEXT)"
Compiles and executes \s-1SCRIPTTEXT,\s0 using four-char \s-1SCRIPTCOMPONENT.\s0
Component is opened and closed behind the scenes, and \s-1SCRIPTTEXT\s0
is compiled, executed, and disposed of behind the scenes.  If
the script returns data, the function returns the data, else it
returns 1 or undef on failure.
.IP "applescript(\s-1SCRIPTTEXT\s0)" 4
.IX Item "applescript(SCRIPTTEXT)"
.PD 0
.IP "frontier(\s-1SCRIPTTEXT\s0)" 4
.IX Item "frontier(SCRIPTTEXT)"
.PD
Same thing as \f(CW\*(C`osa_script\*(C'\fR with \s-1SCRIPTCOMPONENT\s0 already set
('ascr' for AppleScript, '\s-1LAND\s0' for Frontier).
.IP "compile_osa_script(\s-1SCRIPTCOMPONENT, SCRIPTTEXT\s0)" 4
.IX Item "compile_osa_script(SCRIPTCOMPONENT, SCRIPTTEXT)"
Compiles script as \f(CW\*(C`osa_script\*(C'\fR above, but does not execute it.
Returns Mac::OSA::Simple object.  See \*(L"Methods\*(R" for more information.
.IP "compile_applescript(\s-1SCRIPTTEXT\s0)" 4
.IX Item "compile_applescript(SCRIPTTEXT)"
.PD 0
.IP "compile_frontier(\s-1SCRIPTTEXT\s0)" 4
.IX Item "compile_frontier(SCRIPTTEXT)"
.PD
Same thing as \f(CW\*(C`compile_osa_script\*(C'\fR with \s-1SCRIPTCOMPONENT\s0 already set.
.IP "load_osa_script(\s-1HANDLE\s0)" 4
.IX Item "load_osa_script(HANDLE)"
.PD 0
.IP "load_osa_script(\s-1FILE\s0 [, \s-1RESOURCEID\s0])" 4
.IX Item "load_osa_script(FILE [, RESOURCEID])"
.PD
In the first form, load compiled \s-1OSA\s0 script using data in Handle
(same data as returned by \f(CW\*(C`compiled\*(C'\fR method; see Mac::Memory).
In the second form, gets
script from \s-1FILE\s0 using \s-1RESOURCEID \s0(which is 128 by default).  Returns
Mac::OSA::Simple object.
.Sp
\&\fB\s-1NOTE\s0\fR: Because of a change in the parameters for this function,
a \s-1RESOURCEID\s0 value of 1 will not be recognized as a resource \s-1ID
\&\s0(the old parameter list had a value of 1 mean \*(L"load from file\*(R").
If you need to use a resource \s-1ID\s0 of 1, pass it in as both the
second and third parameter.  Sorry.  Why would you use 1 for
a resource \s-1ID,\s0 anyway??
.Sp
Example:
.Sp
.Vb 8
\&    use Mac::OSA::Simple qw(:all);
\&    use Mac::Resources;
\&    $res = FSpOpenResFile($file, 0) or die $^E;
\&    $scpt = Get1Resource(kOSAScriptResourceType, 128)
\&        or die $^E;
\&    $osa = load_osa_script($scpt);
\&    $osa\->execute;
\&    CloseResFile($res);
.Ve
.Sp
Same thing:
.Sp
.Vb 3
\&    use Mac::OSA::Simple;
\&    $osa = load_osa_script($file);
\&    $osa\->execute;
.Ve
.Sp
Another example:
.Sp
.Vb 3
\&    use Mac::OSA::Simple;
\&    $osa1 = compile_applescript(\*(Aqreturn "foo"\*(Aq);
\&    print $osa1\->execute;
\&
\&    # make copy of script in $osa1 and execute it
\&    $osa2 = load_osa_script($osa1\->compiled);
\&    print $osa2\->execute;
.Ve
.Sp
See \*(L"Methods\*(R" for more information.
.SS "Methods"
.IX Subsection "Methods"
This section describes methods for use on objects returned by
\&\f(CW\*(C`compile_osa_script\*(C'\fR and its related functions and \f(CW\*(C`load_osa_script\*(C'\fR.
.IP "compiled" 4
.IX Item "compiled"
Returns a Handle containing the raw compiled form of the script
(see Mac::Memory).
.IP "dispose" 4
.IX Item "dispose"
Disposes of \s-1OSA\s0 script.  Done automatically if not called explicitly.
.IP "execute" 4
.IX Item "execute"
Executes script.  Can be executed more than once.
.IP "call(\s-1CLASS, EVENT, ARGS, MODE\s0)" 4
.IX Item "call(CLASS, EVENT, ARGS, MODE)"
Calls a handler in the script, identified by \s-1CLASS\s0 and \s-1EVENT\s0 IDs.
Can be executed more than once.
.Sp
\&\s-1ARGS\s0 can be either a scalar or an arrayref.  \s-1MODE\s0 can be any combination
of modes from Mac::OSA listed under the \*(L"Mode flags\*(R" constants.
.Sp
Here is an example script:
.Sp
.Vb 5
\&        on \exC7event abcd1234E\exC8 (filename)
\&            tell app "Finder"
\&               return [URL of file filename, creator type of file filename]
\&            end
\&        end
.Ve
.Sp
\&\*(L"abcd\*(R" is the \s-1CLASS ID,\s0 and \*(L"1234\*(R" is the \s-1EVENT ID. \s0 They can be anything, as
long as they don't conflict with something else.  The characters \exC7 and \exC8
can be literal if in the Mac Roman charset, otherwise just use the values like
above.
.Sp
Parameters are passed to handlers as named values, like \*(L"(filename)\*(R".  Multiple
parameters can be passed as an arrayref in \s-1ARGS,\s0 and a list of values is returned:
.Sp
.Vb 2
\&        my $script = load_osa_script($path_to_script);
\&        my($url, $creator) = $script\->call(qw[abcd 1234], "my file");
.Ve
.Sp
You must pass in the same number of variables in \s-1ARGS\s0 that are expected by the
handler.
.IP "save(\s-1FILE\s0 [, \s-1ID\s0 [, \s-1NAME\s0]])" 4
.IX Item "save(FILE [, ID [, NAME]])"
Saves script in \s-1FILE\s0 with \s-1ID\s0 and \s-1NAME.  ID\s0 defaults to 128, \s-1NAME\s0
defaults to \*(L"MacPerl Script\*(R".  \s-1DANGEROUS\s0!  Will overwrite
existing resource or file!
.Sp
Saves to the data fork instead on Mac \s-1OS X,\s0 unless an \s-1ID\s0 is provided.
.Sp
The context used to load a script from disk (resource fork vs. data fork,
resource file vs. data file) will be used to save the script back, if
applicable, so the file's format will be preserved.
.IP "source" 4
.IX Item "source"
Returns text of script source, if available.
.SS "Script Context"
.IX Subsection "Script Context"
Scripts compiled by this module now compile scripts as
\&\fIscript contexts\fR, which, in part, means they can maintain state
information.  For example:
.PP
.Vb 6
\&        use Mac::OSA::Simple;
\&        my $script = compile_applescript(<<\*(AqSCRIPT\*(Aq) or die $^E;
\&        property foo: 20
\&        set foo to foo + 1
\&        SCRIPT
\&        print $script\->execute, "\en" for 0..2;
.Ve
.PP
Returns:
	21
	22
	23
.PP
Whereas in previous versions of this module, it would have returned:
	21
	21
	21
.PP
For a script that on disk, to maintain state information
in the saved version, remember to call \f(CW\*(C`$script\-\*(C'\fRsave(\s-1LIST\s0)>.
.SH "TODO"
.IX Header "TODO"
Work on error handling.  We don't want to die when a toolbox function
fails.  We'd rather return undef and have the user check $^E.
.PP
Should \f(CW\*(C`frontier\*(C'\fR and/or \f(CW\*(C`osa_script(\*(AqLAND\*(Aq, $script)\*(C'\fR launch
Frontier if it is not running?
.PP
Add \f(CW\*(C`run_osa_script\*(C'\fR, which could take script data in a Handle or
a path to a script (as with \f(CW\*(C`load_osa_script\*(C'\fR.
.PP
Should \f(CW\*(C`save\*(C'\fR have optional parameter for overwriting resource?
.PP
Should \f(CW\*(C`run_osa_script\*(C'\fR and \f(CW\*(C`execute\*(C'\fR take arguments?  If so, how?
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Nandor <pudge@pobox.com>, http://pudge.net/
.PP
Copyright (c) 1998\-2003 Chris Nandor.  All rights reserved.  This program
is free software; you can redistribute it and/or modify it under the same
terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mac::OSA, Mac::AppleEvents, Mac::AppleEvents::Simple, macperlcat.
                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::OSA::Simple5.16.3pm                     0100644 0001750 0001750 00000030734 12566241405 024404  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Simple 3"
.TH Simple 3 "2005-06-01" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::OSA::Simple \- Simple access to Mac::OSA
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\&    #!perl \-wl
\&    use Mac::OSA::Simple;
\&    osa_script(\*(AqLAND\*(Aq, <<\*(AqEOS\*(Aq);
\&      dialog.getInt ("Duration?",@examples.duration);
\&      dialog.getInt ("Amplitude?",@examples.amplitude);
\&      dialog.getInt ("Frequency?",@examples.frequency);
\&      speaker.sound (examples.duration, examples.amplitude,
\&          examples.frequency)
\&    EOS
\&
\&    print frontier(\*(Aqclock.now()\*(Aq);
\&
\&    applescript(\*(Aqbeep 3\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can access scripting components via the tied hash
\&\f(CW%ScriptComponents\fR which is automatically exported.  Components are
only opened if they have not been already, and are closed when the
program exits.  It is normally not necessary to use this hash, as it is
accessed internally when needed.
.PP
Also usually not necessary, but possibly useful, are all the functions
and constants from Mac::OSA, available with the \s-1EXPORT_TAG\s0 \*(L"all\*(R".
.PP
\&\fB\s-1NOTE\s0\fR: Examples below show use of $^E.  On Mac \s-1OS\s0, this will return the
signed Mac \s-1OS\s0 error number in numeric context, and the Mac \s-1OS\s0 error message
in string context.  But on Mac \s-1OS\s0 X, $^E support is unimplemented.  $! and $^E
will both return the \fIunsigned\fR error number.  You can get the correct error
number by adding 0 (such as \f(CW\*(C`$! + 0\*(C'\fR), and you can use Mac::Errors to get
the error text (this will also work under Mac \s-1OS\s0):
.PP
.Vb 2
\&        use Mac::Errors \*(Aq$MacError\*(Aq;
\&        my $res = FSpOpenResFile($file, 0) or die $MacError;
.Ve
.PP
See Mac::Errors on the \s-1CPAN\s0 for more information.
.SS "Functions"
.IX Subsection "Functions"
The following functions are automatically exported.
.IP "osa_script(\s-1SCRIPTCOMPONENT\s0, \s-1SCRIPTTEXT\s0)" 4
.IX Item "osa_script(SCRIPTCOMPONENT, SCRIPTTEXT)"
Compiles and executes \s-1SCRIPTTEXT\s0, using four-char \s-1SCRIPTCOMPONENT\s0.
Component is opened and closed behind the scenes, and \s-1SCRIPTTEXT\s0
is compiled, executed, and disposed of behind the scenes.  If
the script returns data, the function returns the data, else it
returns 1 or undef on failure.
.IP "applescript(\s-1SCRIPTTEXT\s0)" 4
.IX Item "applescript(SCRIPTTEXT)"
.PD 0
.IP "frontier(\s-1SCRIPTTEXT\s0)" 4
.IX Item "frontier(SCRIPTTEXT)"
.PD
Same thing as \f(CW\*(C`osa_script\*(C'\fR with \s-1SCRIPTCOMPONENT\s0 already set
('ascr' for AppleScript, '\s-1LAND\s0' for Frontier).
.IP "compile_osa_script(\s-1SCRIPTCOMPONENT\s0, \s-1SCRIPTTEXT\s0)" 4
.IX Item "compile_osa_script(SCRIPTCOMPONENT, SCRIPTTEXT)"
Compiles script as \f(CW\*(C`osa_script\*(C'\fR above, but does not execute it.
Returns Mac::OSA::Simple object.  See \*(L"Methods\*(R" for more information.
.IP "compile_applescript(\s-1SCRIPTTEXT\s0)" 4
.IX Item "compile_applescript(SCRIPTTEXT)"
.PD 0
.IP "compile_frontier(\s-1SCRIPTTEXT\s0)" 4
.IX Item "compile_frontier(SCRIPTTEXT)"
.PD
Same thing as \f(CW\*(C`compile_osa_script\*(C'\fR with \s-1SCRIPTCOMPONENT\s0 already set.
.IP "load_osa_script(\s-1HANDLE\s0)" 4
.IX Item "load_osa_script(HANDLE)"
.PD 0
.IP "load_osa_script(\s-1FILE\s0 [, \s-1RESOURCEID\s0])" 4
.IX Item "load_osa_script(FILE [, RESOURCEID])"
.PD
In the first form, load compiled \s-1OSA\s0 script using data in Handle
(same data as returned by \f(CW\*(C`compiled\*(C'\fR method; see Mac::Memory).
In the second form, gets
script from \s-1FILE\s0 using \s-1RESOURCEID\s0 (which is 128 by default).  Returns
Mac::OSA::Simple object.
.Sp
\&\fB\s-1NOTE\s0\fR: Because of a change in the parameters for this function,
a \s-1RESOURCEID\s0 value of 1 will not be recognized as a resource \s-1ID\s0
(the old parameter list had a value of 1 mean \*(L"load from file\*(R").
If you need to use a resource \s-1ID\s0 of 1, pass it in as both the
second and third parameter.  Sorry.  Why would you use 1 for
a resource \s-1ID\s0, anyway??
.Sp
Example:
.Sp
.Vb 8
\&    use Mac::OSA::Simple qw(:all);
\&    use Mac::Resources;
\&    $res = FSpOpenResFile($file, 0) or die $^E;
\&    $scpt = Get1Resource(kOSAScriptResourceType, 128)
\&        or die $^E;
\&    $osa = load_osa_script($scpt);
\&    $osa\->execute;
\&    CloseResFile($res);
.Ve
.Sp
Same thing:
.Sp
.Vb 3
\&    use Mac::OSA::Simple;
\&    $osa = load_osa_script($file);
\&    $osa\->execute;
.Ve
.Sp
Another example:
.Sp
.Vb 3
\&    use Mac::OSA::Simple;
\&    $osa1 = compile_applescript(\*(Aqreturn "foo"\*(Aq);
\&    print $osa1\->execute;
\&
\&    # make copy of script in $osa1 and execute it
\&    $osa2 = load_osa_script($osa1\->compiled);
\&    print $osa2\->execute;
.Ve
.Sp
See \*(L"Methods\*(R" for more information.
.SS "Methods"
.IX Subsection "Methods"
This section describes methods for use on objects returned by
\&\f(CW\*(C`compile_osa_script\*(C'\fR and its related functions and \f(CW\*(C`load_osa_script\*(C'\fR.
.IP "compiled" 4
.IX Item "compiled"
Returns a Handle containing the raw compiled form of the script
(see Mac::Memory).
.IP "dispose" 4
.IX Item "dispose"
Disposes of \s-1OSA\s0 script.  Done automatically if not called explicitly.
.IP "execute" 4
.IX Item "execute"
Executes script.  Can be executed more than once.
.IP "call(\s-1CLASS\s0, \s-1EVENT\s0, \s-1ARGS\s0, \s-1MODE\s0)" 4
.IX Item "call(CLASS, EVENT, ARGS, MODE)"
Calls a handler in the script, identified by \s-1CLASS\s0 and \s-1EVENT\s0 IDs.
Can be executed more than once.
.Sp
\&\s-1ARGS\s0 can be either a scalar or an arrayref.  \s-1MODE\s0 can be any combination
of modes from Mac::OSA listed under the \*(L"Mode flags\*(R" constants.
.Sp
Here is an example script:
.Sp
.Vb 5
\&        on \exC7event abcd1234E\exC8 (filename)
\&            tell app "Finder"
\&               return [URL of file filename, creator type of file filename]
\&            end
\&        end
.Ve
.Sp
\&\*(L"abcd\*(R" is the \s-1CLASS\s0 \s-1ID\s0, and \*(L"1234\*(R" is the \s-1EVENT\s0 \s-1ID\s0.  They can be anything, as
long as they don't conflict with something else.  The characters \exC7 and \exC8
can be literal if in the Mac Roman charset, otherwise just use the values like
above.
.Sp
Parameters are passed to handlers as named values, like \*(L"(filename)\*(R".  Multiple
parameters can be passed as an arrayref in \s-1ARGS\s0, and a list of values is returned:
.Sp
.Vb 2
\&        my $script = load_osa_script($path_to_script);
\&        my($url, $creator) = $script\->call(qw[abcd 1234], "my file");
.Ve
.Sp
You must pass in the same number of variables in \s-1ARGS\s0 that are expected by the
handler.
.IP "save(\s-1FILE\s0 [, \s-1ID\s0 [, \s-1NAME\s0]])" 4
.IX Item "save(FILE [, ID [, NAME]])"
Saves script in \s-1FILE\s0 with \s-1ID\s0 and \s-1NAME\s0.  \s-1ID\s0 defaults to 128, \s-1NAME\s0
defaults to \*(L"MacPerl Script\*(R".  \s-1DANGEROUS\s0!  Will overwrite
existing resource or file!
.Sp
Saves to the data fork instead on Mac \s-1OS\s0 X, unless an \s-1ID\s0 is provided.
.Sp
The context used to load a script from disk (resource fork vs. data fork,
resource file vs. data file) will be used to save the script back, if
applicable, so the file's format will be preserved.
.IP "source" 4
.IX Item "source"
Returns text of script source, if available.
.SS "Script Context"
.IX Subsection "Script Context"
Scripts compiled by this module now compile scripts as
\&\fIscript contexts\fR, which, in part, means they can maintain state
information.  For example:
.PP
.Vb 6
\&        use Mac::OSA::Simple;
\&        my $script = compile_applescript(<<\*(AqSCRIPT\*(Aq) or die $^E;
\&        property foo: 20
\&        set foo to foo + 1
\&        SCRIPT
\&        print $script\->execute, "\en" for 0..2;
.Ve
.PP
Returns:
	21
	22
	23
.PP
Whereas in previous versions of this module, it would have returned:
	21
	21
	21
.PP
For a script that on disk, to maintain state information
in the saved version, remember to call \f(CW\*(C`$script\-\*(C'\fRsave(\s-1LIST\s0)>.
.SH "TODO"
.IX Header "TODO"
Work on error handling.  We don't want to die when a toolbox function
fails.  We'd rather return undef and have the user check $^E.
.PP
Should \f(CW\*(C`frontier\*(C'\fR and/or \f(CW\*(C`osa_script(\*(AqLAND\*(Aq, $script)\*(C'\fR launch
Frontier if it is not running?
.PP
Add \f(CW\*(C`run_osa_script\*(C'\fR, which could take script data in a Handle or
a path to a script (as with \f(CW\*(C`load_osa_script\*(C'\fR.
.PP
Should \f(CW\*(C`save\*(C'\fR have optional parameter for overwriting resource?
.PP
Should \f(CW\*(C`run_osa_script\*(C'\fR and \f(CW\*(C`execute\*(C'\fR take arguments?  If so, how?
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Nandor <pudge@pobox.com>, http://pudge.net/
.PP
Copyright (c) 1998\-2003 Chris Nandor.  All rights reserved.  This program
is free software; you can redistribute it and/or modify it under the same
terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mac::OSA, Mac::AppleEvents, Mac::AppleEvents::Simple, macperlcat.
                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::OSA::Simple5.18.3pm                     0100644 0001750 0001750 00000031167 12566241405 024407  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Simple 3"
.TH Simple 3 "2005-06-01" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::OSA::Simple \- Simple access to Mac::OSA
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\&    #!perl \-wl
\&    use Mac::OSA::Simple;
\&    osa_script(\*(AqLAND\*(Aq, <<\*(AqEOS\*(Aq);
\&      dialog.getInt ("Duration?",@examples.duration);
\&      dialog.getInt ("Amplitude?",@examples.amplitude);
\&      dialog.getInt ("Frequency?",@examples.frequency);
\&      speaker.sound (examples.duration, examples.amplitude,
\&          examples.frequency)
\&    EOS
\&
\&    print frontier(\*(Aqclock.now()\*(Aq);
\&
\&    applescript(\*(Aqbeep 3\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can access scripting components via the tied hash
\&\f(CW%ScriptComponents\fR which is automatically exported.  Components are
only opened if they have not been already, and are closed when the
program exits.  It is normally not necessary to use this hash, as it is
accessed internally when needed.
.PP
Also usually not necessary, but possibly useful, are all the functions
and constants from Mac::OSA, available with the \s-1EXPORT_TAG \s0\*(L"all\*(R".
.PP
\&\fB\s-1NOTE\s0\fR: Examples below show use of $^E.  On Mac \s-1OS,\s0 this will return the
signed Mac \s-1OS\s0 error number in numeric context, and the Mac \s-1OS\s0 error message
in string context.  But on Mac \s-1OS X,\s0 $^E support is unimplemented.  $! and $^E
will both return the \fIunsigned\fR error number.  You can get the correct error
number by adding 0 (such as \f(CW\*(C`$! + 0\*(C'\fR), and you can use Mac::Errors to get
the error text (this will also work under Mac \s-1OS\s0):
.PP
.Vb 2
\&        use Mac::Errors \*(Aq$MacError\*(Aq;
\&        my $res = FSpOpenResFile($file, 0) or die $MacError;
.Ve
.PP
See Mac::Errors on the \s-1CPAN\s0 for more information.
.SS "Functions"
.IX Subsection "Functions"
The following functions are automatically exported.
.IP "osa_script(\s-1SCRIPTCOMPONENT, SCRIPTTEXT\s0)" 4
.IX Item "osa_script(SCRIPTCOMPONENT, SCRIPTTEXT)"
Compiles and executes \s-1SCRIPTTEXT,\s0 using four-char \s-1SCRIPTCOMPONENT.\s0
Component is opened and closed behind the scenes, and \s-1SCRIPTTEXT\s0
is compiled, executed, and disposed of behind the scenes.  If
the script returns data, the function returns the data, else it
returns 1 or undef on failure.
.IP "applescript(\s-1SCRIPTTEXT\s0)" 4
.IX Item "applescript(SCRIPTTEXT)"
.PD 0
.IP "frontier(\s-1SCRIPTTEXT\s0)" 4
.IX Item "frontier(SCRIPTTEXT)"
.PD
Same thing as \f(CW\*(C`osa_script\*(C'\fR with \s-1SCRIPTCOMPONENT\s0 already set
('ascr' for AppleScript, '\s-1LAND\s0' for Frontier).
.IP "compile_osa_script(\s-1SCRIPTCOMPONENT, SCRIPTTEXT\s0)" 4
.IX Item "compile_osa_script(SCRIPTCOMPONENT, SCRIPTTEXT)"
Compiles script as \f(CW\*(C`osa_script\*(C'\fR above, but does not execute it.
Returns Mac::OSA::Simple object.  See \*(L"Methods\*(R" for more information.
.IP "compile_applescript(\s-1SCRIPTTEXT\s0)" 4
.IX Item "compile_applescript(SCRIPTTEXT)"
.PD 0
.IP "compile_frontier(\s-1SCRIPTTEXT\s0)" 4
.IX Item "compile_frontier(SCRIPTTEXT)"
.PD
Same thing as \f(CW\*(C`compile_osa_script\*(C'\fR with \s-1SCRIPTCOMPONENT\s0 already set.
.IP "load_osa_script(\s-1HANDLE\s0)" 4
.IX Item "load_osa_script(HANDLE)"
.PD 0
.IP "load_osa_script(\s-1FILE\s0 [, \s-1RESOURCEID\s0])" 4
.IX Item "load_osa_script(FILE [, RESOURCEID])"
.PD
In the first form, load compiled \s-1OSA\s0 script using data in Handle
(same data as returned by \f(CW\*(C`compiled\*(C'\fR method; see Mac::Memory).
In the second form, gets
script from \s-1FILE\s0 using \s-1RESOURCEID \s0(which is 128 by default).  Returns
Mac::OSA::Simple object.
.Sp
\&\fB\s-1NOTE\s0\fR: Because of a change in the parameters for this function,
a \s-1RESOURCEID\s0 value of 1 will not be recognized as a resource \s-1ID
\&\s0(the old parameter list had a value of 1 mean \*(L"load from file\*(R").
If you need to use a resource \s-1ID\s0 of 1, pass it in as both the
second and third parameter.  Sorry.  Why would you use 1 for
a resource \s-1ID,\s0 anyway??
.Sp
Example:
.Sp
.Vb 8
\&    use Mac::OSA::Simple qw(:all);
\&    use Mac::Resources;
\&    $res = FSpOpenResFile($file, 0) or die $^E;
\&    $scpt = Get1Resource(kOSAScriptResourceType, 128)
\&        or die $^E;
\&    $osa = load_osa_script($scpt);
\&    $osa\->execute;
\&    CloseResFile($res);
.Ve
.Sp
Same thing:
.Sp
.Vb 3
\&    use Mac::OSA::Simple;
\&    $osa = load_osa_script($file);
\&    $osa\->execute;
.Ve
.Sp
Another example:
.Sp
.Vb 3
\&    use Mac::OSA::Simple;
\&    $osa1 = compile_applescript(\*(Aqreturn "foo"\*(Aq);
\&    print $osa1\->execute;
\&
\&    # make copy of script in $osa1 and execute it
\&    $osa2 = load_osa_script($osa1\->compiled);
\&    print $osa2\->execute;
.Ve
.Sp
See \*(L"Methods\*(R" for more information.
.SS "Methods"
.IX Subsection "Methods"
This section describes methods for use on objects returned by
\&\f(CW\*(C`compile_osa_script\*(C'\fR and its related functions and \f(CW\*(C`load_osa_script\*(C'\fR.
.IP "compiled" 4
.IX Item "compiled"
Returns a Handle containing the raw compiled form of the script
(see Mac::Memory).
.IP "dispose" 4
.IX Item "dispose"
Disposes of \s-1OSA\s0 script.  Done automatically if not called explicitly.
.IP "execute" 4
.IX Item "execute"
Executes script.  Can be executed more than once.
.IP "call(\s-1CLASS, EVENT, ARGS, MODE\s0)" 4
.IX Item "call(CLASS, EVENT, ARGS, MODE)"
Calls a handler in the script, identified by \s-1CLASS\s0 and \s-1EVENT\s0 IDs.
Can be executed more than once.
.Sp
\&\s-1ARGS\s0 can be either a scalar or an arrayref.  \s-1MODE\s0 can be any combination
of modes from Mac::OSA listed under the \*(L"Mode flags\*(R" constants.
.Sp
Here is an example script:
.Sp
.Vb 5
\&        on \exC7event abcd1234E\exC8 (filename)
\&            tell app "Finder"
\&               return [URL of file filename, creator type of file filename]
\&            end
\&        end
.Ve
.Sp
\&\*(L"abcd\*(R" is the \s-1CLASS ID,\s0 and \*(L"1234\*(R" is the \s-1EVENT ID. \s0 They can be anything, as
long as they don't conflict with something else.  The characters \exC7 and \exC8
can be literal if in the Mac Roman charset, otherwise just use the values like
above.
.Sp
Parameters are passed to handlers as named values, like \*(L"(filename)\*(R".  Multiple
parameters can be passed as an arrayref in \s-1ARGS,\s0 and a list of values is returned:
.Sp
.Vb 2
\&        my $script = load_osa_script($path_to_script);
\&        my($url, $creator) = $script\->call(qw[abcd 1234], "my file");
.Ve
.Sp
You must pass in the same number of variables in \s-1ARGS\s0 that are expected by the
handler.
.IP "save(\s-1FILE\s0 [, \s-1ID\s0 [, \s-1NAME\s0]])" 4
.IX Item "save(FILE [, ID [, NAME]])"
Saves script in \s-1FILE\s0 with \s-1ID\s0 and \s-1NAME.  ID\s0 defaults to 128, \s-1NAME\s0
defaults to \*(L"MacPerl Script\*(R".  \s-1DANGEROUS\s0!  Will overwrite
existing resource or file!
.Sp
Saves to the data fork instead on Mac \s-1OS X,\s0 unless an \s-1ID\s0 is provided.
.Sp
The context used to load a script from disk (resource fork vs. data fork,
resource file vs. data file) will be used to save the script back, if
applicable, so the file's format will be preserved.
.IP "source" 4
.IX Item "source"
Returns text of script source, if available.
.SS "Script Context"
.IX Subsection "Script Context"
Scripts compiled by this module now compile scripts as
\&\fIscript contexts\fR, which, in part, means they can maintain state
information.  For example:
.PP
.Vb 6
\&        use Mac::OSA::Simple;
\&        my $script = compile_applescript(<<\*(AqSCRIPT\*(Aq) or die $^E;
\&        property foo: 20
\&        set foo to foo + 1
\&        SCRIPT
\&        print $script\->execute, "\en" for 0..2;
.Ve
.PP
Returns:
	21
	22
	23
.PP
Whereas in previous versions of this module, it would have returned:
	21
	21
	21
.PP
For a script that on disk, to maintain state information
in the saved version, remember to call \f(CW\*(C`$script\-\*(C'\fRsave(\s-1LIST\s0)>.
.SH "TODO"
.IX Header "TODO"
Work on error handling.  We don't want to die when a toolbox function
fails.  We'd rather return undef and have the user check $^E.
.PP
Should \f(CW\*(C`frontier\*(C'\fR and/or \f(CW\*(C`osa_script(\*(AqLAND\*(Aq, $script)\*(C'\fR launch
Frontier if it is not running?
.PP
Add \f(CW\*(C`run_osa_script\*(C'\fR, which could take script data in a Handle or
a path to a script (as with \f(CW\*(C`load_osa_script\*(C'\fR.
.PP
Should \f(CW\*(C`save\*(C'\fR have optional parameter for overwriting resource?
.PP
Should \f(CW\*(C`run_osa_script\*(C'\fR and \f(CW\*(C`execute\*(C'\fR take arguments?  If so, how?
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Nandor <pudge@pobox.com>, http://pudge.net/
.PP
Copyright (c) 1998\-2003 Chris Nandor.  All rights reserved.  This program
is free software; you can redistribute it and/or modify it under the same
terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mac::OSA, Mac::AppleEvents, Mac::AppleEvents::Simple, macperlcat.
                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Processes.3pm                           0100644 0001750 0001750 00000030565 12566241367 024071  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Processes 3"
.TH Processes 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Processes \- Macintosh Toolbox Interface to Process Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::Processes;
\&
\&    while ( ($psn, $psi) = each(%Process) ) {
\&        print "$psn\et", 
\&               $psi\->processName,       " ", 
\&               $psi\->processNumber,     " ", 
\&               $psi\->processType,       " ", 
\&               $psi\->processSignature,  " ", 
\&               $psi\->processSize,       " ", 
\&               $psi\->processMode,       " ", 
\&               $psi\->processLocation,   " ", 
\&               $psi\->processLauncher,   " ", 
\&               $psi\->processLaunchDate, " ", 
\&               $psi\->processActiveTime, " ", 
\&               $psi\->processAppSpec,    "\en";
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "kNoProcess" 4
.IX Item "kNoProcess"
.PD 0
.IP "kSystemProcess" 4
.IX Item "kSystemProcess"
.IP "kCurrentProcess" 4
.IX Item "kCurrentProcess"
.PD
Special process IDs.
.IP "launchContinue" 4
.IX Item "launchContinue"
.PD 0
.IP "launchNoFileFlags" 4
.IX Item "launchNoFileFlags"
.IP "launchUseMinimum" 4
.IX Item "launchUseMinimum"
.IP "launchDontSwitch" 4
.IX Item "launchDontSwitch"
.IP "launchAllow24Bit" 4
.IX Item "launchAllow24Bit"
.IP "launchInhibitDaemon" 4
.IX Item "launchInhibitDaemon"
.PD
Launch flags.
.IP "modeDeskAccessory" 4
.IX Item "modeDeskAccessory"
.PD 0
.IP "modeMultiLaunch" 4
.IX Item "modeMultiLaunch"
.IP "modeNeedSuspendResume" 4
.IX Item "modeNeedSuspendResume"
.IP "modeCanBackground" 4
.IX Item "modeCanBackground"
.IP "modeDoesActivateOnFGSwitch" 4
.IX Item "modeDoesActivateOnFGSwitch"
.IP "modeOnlyBackground" 4
.IX Item "modeOnlyBackground"
.IP "modeGetFrontClicks" 4
.IX Item "modeGetFrontClicks"
.IP "modeGetAppDiedMsg" 4
.IX Item "modeGetAppDiedMsg"
.IP "mode32BitCompatible" 4
.IX Item "mode32BitCompatible"
.IP "modeHighLevelEventAware" 4
.IX Item "modeHighLevelEventAware"
.IP "modeLocalAndRemoteHLEvents" 4
.IX Item "modeLocalAndRemoteHLEvents"
.IP "modeStationeryAware" 4
.IX Item "modeStationeryAware"
.IP "modeUseTextEditServices" 4
.IX Item "modeUseTextEditServices"
.IP "modeDisplayManagerAware" 4
.IX Item "modeDisplayManagerAware"
.PD
Mode flags in \s-1SIZE\s0 resource.
.SS "LaunchParam"
.IX Subsection "LaunchParam"
This Perl hash maps onto the fields of a Launch Parameter Block.
.PP
The fields are:
.PP
.Vb 7
\&    launchFileFlags
\&    launchControlFlags
\&    launchAppSpec
\&    launchAvailableSize
\&    launchProcessSN
\&    launchPreferredSize
\&    launchMinimumSize
.Ve
.IP "new LaunchParam [\s-1ARGUMENTS\s0]" 4
.IX Item "new LaunchParam [ARGUMENTS]"
Returns LaunchParam.
.Sp
.Vb 2
\&    $launch = 
\&        new LaunchParam(launchAppSpec =E<gt> "hd:apps:myapp", launchMinimumSize => 32000);
.Ve
.IP "\s-1DESTROY LPB\s0" 4
.IX Item "DESTROY LPB"
.SS "ProcessInfo"
.IX Subsection "ProcessInfo"
This Perl hash allows access to the \f(CW\*(C`ProcessInfo\*(C'\fR structure.
.PP
The field names are:
.PP
.Vb 11
\&    processName
\&    processNumber
\&    processType
\&    processSignature
\&    processSize
\&    processMode
\&    processLocation
\&    processLauncher
\&    processLaunchDate
\&    processActiveTime
\&    processAppSpec
.Ve
.IP "\s-1DESTROY PI\s0" 4
.IX Item "DESTROY PI"
.SS "Functions"
.IX Subsection "Functions"
.PD 0
.IP "LaunchApplication \s-1LAUNCHPARAMS\s0" 4
.IX Item "LaunchApplication LAUNCHPARAMS"
.PD
The LaunchApplication function launches the application from the specified file
and returns the process serial number if the application is successfully launched.
Returns undef on failure.
.IP "LaunchDeskAccessory \s-1PFILESPEC, PDANAME\s0" 4
.IX Item "LaunchDeskAccessory PFILESPEC, PDANAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The LaunchDeskAccessory function searches the resource fork of the file specified
by the pFileSpec parameter for the desk accessory with the '\s-1DRVR\s0' resource name
specified in the pDAName parameter. If the '\s-1DRVR\s0' resource name is found,
LaunchDeskAccessory launches the corresponding desk accessory. If the desk
accessory is already open, it is brought to the front.
Returns zero on failure.
.IP "GetCurrentProcess" 4
.IX Item "GetCurrentProcess"
The GetCurrentProcess function returns the process serial
number of the process that is currently running, that is, the one currently
accessing the \s-1CPU.\s0
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetFrontProcess" 4
.IX Item "GetFrontProcess"
The GetFrontProcess function returns the process serial
number of the process running in the foreground.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetNextProcess \s-1PSN\s0" 4
.IX Item "GetNextProcess PSN"
Get information about the next process, if any, in the Process ManagerO\*~s internal
list of open processes.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetProcessInformation \s-1PSN\s0" 4
.IX Item "GetProcessInformation PSN"
The GetProcessInformation function returns, in a process information record,
information about the specified process. The information returned in the info
parameter includes the applicationO\*~s name as it appears in the Application menu,
the type and signature of the application, the address of the application
partition, the number of bytes in the application partition, the number of free
bytes in the application heap, the application that launched the application, the
time at which the application was launched, and the location of the application
file.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "SetFrontProcess \s-1PSN\s0" 4
.IX Item "SetFrontProcess PSN"
The SetFrontProcess function schedules the specified process to move to the
foreground. The specified process moves to the foreground after the current
foreground process makes a subsequent call to WaitNextEvent or EventAvail.
Returns zero on failure.
.IP "WakeUpProcess \s-1PSN\s0" 4
.IX Item "WakeUpProcess PSN"
The WakeUpProcess function makes a process suspended by \fIWaitNextEvent()\fR eligible to
receive \s-1CPU\s0 time. A process is suspended when the value of the sleep parameter in
the \fIWaitNextEvent()\fR function is not 0 and no events for that process are pending in
the event queue. This process remains suspended until the time specified in the
sleep parameter expires or an event becomes available for that process. You can
use WakeUpProcess to make the process eligible for execution before the time
specified in the sleep parameter expires.
Returns zero on failure.
.IP "SameProcess \s-1PSN1, PSN2\s0" 4
.IX Item "SameProcess PSN1, PSN2"
The SameProcess function compares two process serial numbers and determines
whether they refer to the same process.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "ExitToShell" 4
.IX Item "ExitToShell"
This function is not implemented: \fIExitToShell()\fR unsupported. Use exit.
.IP "GetProcessPID(\s-1PSN\s0)" 4
.IX Item "GetProcessPID(PSN)"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
Get the \s-1UNIX\s0 process \s-1ID\s0 corresponding to a process serial number.
.IP "GetProcessForPID(\s-1PID\s0)" 4
.IX Item "GetProcessForPID(PID)"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
Get the process serial number corresponding to a \s-1UNIX\s0 process \s-1ID.\s0
.IP "LSFindApplicationForInfo(creator, bundleID=NULL, name=NULL)" 4
.IX Item "LSFindApplicationForInfo(creator, bundleID=NULL, name=NULL)"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
Return the path to the application matching one or more of creator,
bundleID, and name.  Pass undef or empty string for unused parameters.
.Sp
.Vb 4
\&        $path = LSFindApplicationForInfo("R*ch");
\&        $path = LSFindApplicationForInfo(undef, "com.barebones.bbedit");
\&        $path = LSFindApplicationForInfo(undef, undef, "BBEdit.app");
\&        $path = LSFindApplicationForInfo("R*ch", "com.barebones.bbedit", "BBEdit.app");
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 176:" 4
.IX Item "Around line 176:"
Non-ASCII character seen before =encoding in 'ManagerO\*~s'. Assuming \s-1ISO8859\-1\s0
                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Processes5.16.3pm                       0100644 0001750 0001750 00000027671 12566241367 024407  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Processes 3"
.TH Processes 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Processes \- Macintosh Toolbox Interface to Process Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::Processes;
\&
\&    while ( ($psn, $psi) = each(%Process) ) {
\&        print "$psn\et", 
\&               $psi\->processName,       " ", 
\&               $psi\->processNumber,     " ", 
\&               $psi\->processType,       " ", 
\&               $psi\->processSignature,  " ", 
\&               $psi\->processSize,       " ", 
\&               $psi\->processMode,       " ", 
\&               $psi\->processLocation,   " ", 
\&               $psi\->processLauncher,   " ", 
\&               $psi\->processLaunchDate, " ", 
\&               $psi\->processActiveTime, " ", 
\&               $psi\->processAppSpec,    "\en";
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "kNoProcess" 4
.IX Item "kNoProcess"
.PD 0
.IP "kSystemProcess" 4
.IX Item "kSystemProcess"
.IP "kCurrentProcess" 4
.IX Item "kCurrentProcess"
.PD
Special process IDs.
.IP "launchContinue" 4
.IX Item "launchContinue"
.PD 0
.IP "launchNoFileFlags" 4
.IX Item "launchNoFileFlags"
.IP "launchUseMinimum" 4
.IX Item "launchUseMinimum"
.IP "launchDontSwitch" 4
.IX Item "launchDontSwitch"
.IP "launchAllow24Bit" 4
.IX Item "launchAllow24Bit"
.IP "launchInhibitDaemon" 4
.IX Item "launchInhibitDaemon"
.PD
Launch flags.
.IP "modeDeskAccessory" 4
.IX Item "modeDeskAccessory"
.PD 0
.IP "modeMultiLaunch" 4
.IX Item "modeMultiLaunch"
.IP "modeNeedSuspendResume" 4
.IX Item "modeNeedSuspendResume"
.IP "modeCanBackground" 4
.IX Item "modeCanBackground"
.IP "modeDoesActivateOnFGSwitch" 4
.IX Item "modeDoesActivateOnFGSwitch"
.IP "modeOnlyBackground" 4
.IX Item "modeOnlyBackground"
.IP "modeGetFrontClicks" 4
.IX Item "modeGetFrontClicks"
.IP "modeGetAppDiedMsg" 4
.IX Item "modeGetAppDiedMsg"
.IP "mode32BitCompatible" 4
.IX Item "mode32BitCompatible"
.IP "modeHighLevelEventAware" 4
.IX Item "modeHighLevelEventAware"
.IP "modeLocalAndRemoteHLEvents" 4
.IX Item "modeLocalAndRemoteHLEvents"
.IP "modeStationeryAware" 4
.IX Item "modeStationeryAware"
.IP "modeUseTextEditServices" 4
.IX Item "modeUseTextEditServices"
.IP "modeDisplayManagerAware" 4
.IX Item "modeDisplayManagerAware"
.PD
Mode flags in \s-1SIZE\s0 resource.
.SS "LaunchParam"
.IX Subsection "LaunchParam"
This Perl hash maps onto the fields of a Launch Parameter Block.
.PP
The fields are:
.PP
.Vb 7
\&    launchFileFlags
\&    launchControlFlags
\&    launchAppSpec
\&    launchAvailableSize
\&    launchProcessSN
\&    launchPreferredSize
\&    launchMinimumSize
.Ve
.IP "new LaunchParam [\s-1ARGUMENTS\s0]" 4
.IX Item "new LaunchParam [ARGUMENTS]"
Returns LaunchParam.
.Sp
.Vb 2
\&    $launch = 
\&        new LaunchParam(launchAppSpec =E<gt> "hd:apps:myapp", launchMinimumSize => 32000);
.Ve
.IP "\s-1DESTROY\s0 \s-1LPB\s0" 4
.IX Item "DESTROY LPB"
.SS "ProcessInfo"
.IX Subsection "ProcessInfo"
This Perl hash allows access to the \f(CW\*(C`ProcessInfo\*(C'\fR structure.
.PP
The field names are:
.PP
.Vb 11
\&    processName
\&    processNumber
\&    processType
\&    processSignature
\&    processSize
\&    processMode
\&    processLocation
\&    processLauncher
\&    processLaunchDate
\&    processActiveTime
\&    processAppSpec
.Ve
.IP "\s-1DESTROY\s0 \s-1PI\s0" 4
.IX Item "DESTROY PI"
.SS "Functions"
.IX Subsection "Functions"
.PD 0
.IP "LaunchApplication \s-1LAUNCHPARAMS\s0" 4
.IX Item "LaunchApplication LAUNCHPARAMS"
.PD
The LaunchApplication function launches the application from the specified file
and returns the process serial number if the application is successfully launched.
Returns undef on failure.
.IP "LaunchDeskAccessory \s-1PFILESPEC\s0, \s-1PDANAME\s0" 4
.IX Item "LaunchDeskAccessory PFILESPEC, PDANAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The LaunchDeskAccessory function searches the resource fork of the file specified
by the pFileSpec parameter for the desk accessory with the '\s-1DRVR\s0' resource name
specified in the pDAName parameter. If the '\s-1DRVR\s0' resource name is found,
LaunchDeskAccessory launches the corresponding desk accessory. If the desk
accessory is already open, it is brought to the front.
Returns zero on failure.
.IP "GetCurrentProcess" 4
.IX Item "GetCurrentProcess"
The GetCurrentProcess function returns the process serial
number of the process that is currently running, that is, the one currently
accessing the \s-1CPU\s0.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetFrontProcess" 4
.IX Item "GetFrontProcess"
The GetFrontProcess function returns the process serial
number of the process running in the foreground.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetNextProcess \s-1PSN\s0" 4
.IX Item "GetNextProcess PSN"
Get information about the next process, if any, in the Process ManagerO\*~s internal
list of open processes.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetProcessInformation \s-1PSN\s0" 4
.IX Item "GetProcessInformation PSN"
The GetProcessInformation function returns, in a process information record,
information about the specified process. The information returned in the info
parameter includes the applicationO\*~s name as it appears in the Application menu,
the type and signature of the application, the address of the application
partition, the number of bytes in the application partition, the number of free
bytes in the application heap, the application that launched the application, the
time at which the application was launched, and the location of the application
file.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "SetFrontProcess \s-1PSN\s0" 4
.IX Item "SetFrontProcess PSN"
The SetFrontProcess function schedules the specified process to move to the
foreground. The specified process moves to the foreground after the current
foreground process makes a subsequent call to WaitNextEvent or EventAvail.
Returns zero on failure.
.IP "WakeUpProcess \s-1PSN\s0" 4
.IX Item "WakeUpProcess PSN"
The WakeUpProcess function makes a process suspended by \fIWaitNextEvent()\fR eligible to
receive \s-1CPU\s0 time. A process is suspended when the value of the sleep parameter in
the \fIWaitNextEvent()\fR function is not 0 and no events for that process are pending in
the event queue. This process remains suspended until the time specified in the
sleep parameter expires or an event becomes available for that process. You can
use WakeUpProcess to make the process eligible for execution before the time
specified in the sleep parameter expires.
Returns zero on failure.
.IP "SameProcess \s-1PSN1\s0, \s-1PSN2\s0" 4
.IX Item "SameProcess PSN1, PSN2"
The SameProcess function compares two process serial numbers and determines
whether they refer to the same process.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "ExitToShell" 4
.IX Item "ExitToShell"
This function is not implemented: \fIExitToShell()\fR unsupported. Use exit.
.IP "GetProcessPID(\s-1PSN\s0)" 4
.IX Item "GetProcessPID(PSN)"
\&\fBMac \s-1OS\s0 X only.\fR
.Sp
Get the \s-1UNIX\s0 process \s-1ID\s0 corresponding to a process serial number.
.IP "GetProcessForPID(\s-1PID\s0)" 4
.IX Item "GetProcessForPID(PID)"
\&\fBMac \s-1OS\s0 X only.\fR
.Sp
Get the process serial number corresponding to a \s-1UNIX\s0 process \s-1ID\s0.
.IP "LSFindApplicationForInfo(creator, bundleID=NULL, name=NULL)" 4
.IX Item "LSFindApplicationForInfo(creator, bundleID=NULL, name=NULL)"
\&\fBMac \s-1OS\s0 X only.\fR
.Sp
Return the path to the application matching one or more of creator,
bundleID, and name.  Pass undef or empty string for unused parameters.
.Sp
.Vb 4
\&        $path = LSFindApplicationForInfo("R*ch");
\&        $path = LSFindApplicationForInfo(undef, "com.barebones.bbedit");
\&        $path = LSFindApplicationForInfo(undef, undef, "BBEdit.app");
\&        $path = LSFindApplicationForInfo("R*ch", "com.barebones.bbedit", "BBEdit.app");
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                       osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Processes5.18.3pm                       0100644 0001750 0001750 00000030565 12566241367 024405  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Processes 3"
.TH Processes 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Processes \- Macintosh Toolbox Interface to Process Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::Processes;
\&
\&    while ( ($psn, $psi) = each(%Process) ) {
\&        print "$psn\et", 
\&               $psi\->processName,       " ", 
\&               $psi\->processNumber,     " ", 
\&               $psi\->processType,       " ", 
\&               $psi\->processSignature,  " ", 
\&               $psi\->processSize,       " ", 
\&               $psi\->processMode,       " ", 
\&               $psi\->processLocation,   " ", 
\&               $psi\->processLauncher,   " ", 
\&               $psi\->processLaunchDate, " ", 
\&               $psi\->processActiveTime, " ", 
\&               $psi\->processAppSpec,    "\en";
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "kNoProcess" 4
.IX Item "kNoProcess"
.PD 0
.IP "kSystemProcess" 4
.IX Item "kSystemProcess"
.IP "kCurrentProcess" 4
.IX Item "kCurrentProcess"
.PD
Special process IDs.
.IP "launchContinue" 4
.IX Item "launchContinue"
.PD 0
.IP "launchNoFileFlags" 4
.IX Item "launchNoFileFlags"
.IP "launchUseMinimum" 4
.IX Item "launchUseMinimum"
.IP "launchDontSwitch" 4
.IX Item "launchDontSwitch"
.IP "launchAllow24Bit" 4
.IX Item "launchAllow24Bit"
.IP "launchInhibitDaemon" 4
.IX Item "launchInhibitDaemon"
.PD
Launch flags.
.IP "modeDeskAccessory" 4
.IX Item "modeDeskAccessory"
.PD 0
.IP "modeMultiLaunch" 4
.IX Item "modeMultiLaunch"
.IP "modeNeedSuspendResume" 4
.IX Item "modeNeedSuspendResume"
.IP "modeCanBackground" 4
.IX Item "modeCanBackground"
.IP "modeDoesActivateOnFGSwitch" 4
.IX Item "modeDoesActivateOnFGSwitch"
.IP "modeOnlyBackground" 4
.IX Item "modeOnlyBackground"
.IP "modeGetFrontClicks" 4
.IX Item "modeGetFrontClicks"
.IP "modeGetAppDiedMsg" 4
.IX Item "modeGetAppDiedMsg"
.IP "mode32BitCompatible" 4
.IX Item "mode32BitCompatible"
.IP "modeHighLevelEventAware" 4
.IX Item "modeHighLevelEventAware"
.IP "modeLocalAndRemoteHLEvents" 4
.IX Item "modeLocalAndRemoteHLEvents"
.IP "modeStationeryAware" 4
.IX Item "modeStationeryAware"
.IP "modeUseTextEditServices" 4
.IX Item "modeUseTextEditServices"
.IP "modeDisplayManagerAware" 4
.IX Item "modeDisplayManagerAware"
.PD
Mode flags in \s-1SIZE\s0 resource.
.SS "LaunchParam"
.IX Subsection "LaunchParam"
This Perl hash maps onto the fields of a Launch Parameter Block.
.PP
The fields are:
.PP
.Vb 7
\&    launchFileFlags
\&    launchControlFlags
\&    launchAppSpec
\&    launchAvailableSize
\&    launchProcessSN
\&    launchPreferredSize
\&    launchMinimumSize
.Ve
.IP "new LaunchParam [\s-1ARGUMENTS\s0]" 4
.IX Item "new LaunchParam [ARGUMENTS]"
Returns LaunchParam.
.Sp
.Vb 2
\&    $launch = 
\&        new LaunchParam(launchAppSpec =E<gt> "hd:apps:myapp", launchMinimumSize => 32000);
.Ve
.IP "\s-1DESTROY LPB\s0" 4
.IX Item "DESTROY LPB"
.SS "ProcessInfo"
.IX Subsection "ProcessInfo"
This Perl hash allows access to the \f(CW\*(C`ProcessInfo\*(C'\fR structure.
.PP
The field names are:
.PP
.Vb 11
\&    processName
\&    processNumber
\&    processType
\&    processSignature
\&    processSize
\&    processMode
\&    processLocation
\&    processLauncher
\&    processLaunchDate
\&    processActiveTime
\&    processAppSpec
.Ve
.IP "\s-1DESTROY PI\s0" 4
.IX Item "DESTROY PI"
.SS "Functions"
.IX Subsection "Functions"
.PD 0
.IP "LaunchApplication \s-1LAUNCHPARAMS\s0" 4
.IX Item "LaunchApplication LAUNCHPARAMS"
.PD
The LaunchApplication function launches the application from the specified file
and returns the process serial number if the application is successfully launched.
Returns undef on failure.
.IP "LaunchDeskAccessory \s-1PFILESPEC, PDANAME\s0" 4
.IX Item "LaunchDeskAccessory PFILESPEC, PDANAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The LaunchDeskAccessory function searches the resource fork of the file specified
by the pFileSpec parameter for the desk accessory with the '\s-1DRVR\s0' resource name
specified in the pDAName parameter. If the '\s-1DRVR\s0' resource name is found,
LaunchDeskAccessory launches the corresponding desk accessory. If the desk
accessory is already open, it is brought to the front.
Returns zero on failure.
.IP "GetCurrentProcess" 4
.IX Item "GetCurrentProcess"
The GetCurrentProcess function returns the process serial
number of the process that is currently running, that is, the one currently
accessing the \s-1CPU.\s0
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetFrontProcess" 4
.IX Item "GetFrontProcess"
The GetFrontProcess function returns the process serial
number of the process running in the foreground.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetNextProcess \s-1PSN\s0" 4
.IX Item "GetNextProcess PSN"
Get information about the next process, if any, in the Process ManagerO\*~s internal
list of open processes.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "GetProcessInformation \s-1PSN\s0" 4
.IX Item "GetProcessInformation PSN"
The GetProcessInformation function returns, in a process information record,
information about the specified process. The information returned in the info
parameter includes the applicationO\*~s name as it appears in the Application menu,
the type and signature of the application, the address of the application
partition, the number of bytes in the application partition, the number of free
bytes in the application heap, the application that launched the application, the
time at which the application was launched, and the location of the application
file.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "SetFrontProcess \s-1PSN\s0" 4
.IX Item "SetFrontProcess PSN"
The SetFrontProcess function schedules the specified process to move to the
foreground. The specified process moves to the foreground after the current
foreground process makes a subsequent call to WaitNextEvent or EventAvail.
Returns zero on failure.
.IP "WakeUpProcess \s-1PSN\s0" 4
.IX Item "WakeUpProcess PSN"
The WakeUpProcess function makes a process suspended by \fIWaitNextEvent()\fR eligible to
receive \s-1CPU\s0 time. A process is suspended when the value of the sleep parameter in
the \fIWaitNextEvent()\fR function is not 0 and no events for that process are pending in
the event queue. This process remains suspended until the time specified in the
sleep parameter expires or an event becomes available for that process. You can
use WakeUpProcess to make the process eligible for execution before the time
specified in the sleep parameter expires.
Returns zero on failure.
.IP "SameProcess \s-1PSN1, PSN2\s0" 4
.IX Item "SameProcess PSN1, PSN2"
The SameProcess function compares two process serial numbers and determines
whether they refer to the same process.
Return \f(CW\*(C`undef\*(C'\fR if an error was detected.
.IP "ExitToShell" 4
.IX Item "ExitToShell"
This function is not implemented: \fIExitToShell()\fR unsupported. Use exit.
.IP "GetProcessPID(\s-1PSN\s0)" 4
.IX Item "GetProcessPID(PSN)"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
Get the \s-1UNIX\s0 process \s-1ID\s0 corresponding to a process serial number.
.IP "GetProcessForPID(\s-1PID\s0)" 4
.IX Item "GetProcessForPID(PID)"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
Get the process serial number corresponding to a \s-1UNIX\s0 process \s-1ID.\s0
.IP "LSFindApplicationForInfo(creator, bundleID=NULL, name=NULL)" 4
.IX Item "LSFindApplicationForInfo(creator, bundleID=NULL, name=NULL)"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
Return the path to the application matching one or more of creator,
bundleID, and name.  Pass undef or empty string for unused parameters.
.Sp
.Vb 4
\&        $path = LSFindApplicationForInfo("R*ch");
\&        $path = LSFindApplicationForInfo(undef, "com.barebones.bbedit");
\&        $path = LSFindApplicationForInfo(undef, undef, "BBEdit.app");
\&        $path = LSFindApplicationForInfo("R*ch", "com.barebones.bbedit", "BBEdit.app");
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 176:" 4
.IX Item "Around line 176:"
Non-ASCII character seen before =encoding in 'ManagerO\*~s'. Assuming \s-1ISO8859\-1\s0
                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Resources.3pm                           0100644 0001750 0001750 00000064654 12566241370 024075  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Resources 3"
.TH Resources 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Resources \- Macintosh Toolbox Interface to the Resource Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Mac::Memory;
\&    use Mac::Resources;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "resSysHeap" 4
.IX Item "resSysHeap"
.PD 0
.IP "resPurgeable" 4
.IX Item "resPurgeable"
.IP "resLocked" 4
.IX Item "resLocked"
.IP "resProtected" 4
.IX Item "resProtected"
.IP "resPreload" 4
.IX Item "resPreload"
.IP "resChanged" 4
.IX Item "resChanged"
.PD
Resource flags.
.IP "mapReadOnly" 4
.IX Item "mapReadOnly"
.PD 0
.IP "mapCompact" 4
.IX Item "mapCompact"
.IP "mapChanged" 4
.IX Item "mapChanged"
.PD
Resource map flags.
.IP "kResFileNotOpened" 4
.IX Item "kResFileNotOpened"
Returned after an unsuccessful call to \f(CW\*(C`OpenResFile()\*(C'\fR.
.IP "kSystemResFile" 4
.IX Item "kSystemResFile"
The resource file reference number of the system file.
.SS "Functions"
.IX Subsection "Functions"
.IP "CloseResFile \s-1RFD\s0" 4
.IX Item "CloseResFile RFD"
Given a file reference number for a file whose resource fork is open, the
CloseResFile procedure performs four tasks. First, it updates the file by calling
the &UpdateResFile procedure. Second, it releases the memory occupied by each
resource in the resource fork by calling the &DisposeHandle procedure. Third, it
releases the memory occupied by the resource map. The fourth task is to close the
resource fork.
.IP "CurResFile" 4
.IX Item "CurResFile"
The CurResFile function returns the file reference number associated with the
current resource file. You can call this function when your application starts up
(before opening the resource fork of any other file) to get the file reference
number of your application's resource fork.
.Sp
.Vb 1
\&    $RFD = CurResFile;
.Ve
.IP "HomeResFile \s-1RESOURCE\s0" 4
.IX Item "HomeResFile RESOURCE"
Given a handle to a resource, the HomeResFile function returns the file reference
number for the resource fork containing the specified resource. If the given
handle isn't a handle to a resource, HomeResFile returns \*(D-1, and the &ResError
function returns the result code resNotFound. If HomeResFile returns 0, the
resource is in the System file's resource fork. If HomeResFile returns 1, the
resource is ROM-resident.
.Sp
.Vb 1
\&    $RFD = HomeResFile($Resource);
.Ve
.IP "CreateResFile \s-1NAME\s0" 4
.IX Item "CreateResFile NAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The CreateResFile procedure creates an empty resource file.
.Sp
.Vb 5
\&    if ( CreateResFile("Resource.rsrc")) {
\&        # error occurred
\&    } else {
\&        # proceed
\&    }
.Ve
.IP "OpenResFile \s-1NAME\s0" 4
.IX Item "OpenResFile NAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The OpenResFile function opens an existing resource file. It also makes this file
the current resource file.
.Sp
.Vb 5
\&    if ( defined($RFD = OpenResFile("Resource.rsrc")) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "UseResFile \s-1RFD\s0" 4
.IX Item "UseResFile RFD"
The UseResFile procedure searches the list of files whose resource forks have
been opened for the file specified by the \s-1RFD\s0 parameter. If the specified file
is found, the Resource Manager sets the current resource file to the specified
file. If there's no resource fork open for a file with that reference number,
UseResFile does nothing. To set the current resource file to the System file, use
0 for the refNum parameter.
.Sp
.Vb 5
\&    if (UseResFile($RFD)) {
\&        # error occurred
\&    } else {
\&        # proceed
\&    }
.Ve
.IP "CountTypes" 4
.IX Item "CountTypes"
.PD 0
.IP "Count1Types" 4
.IX Item "Count1Types"
.PD
The CountTypes (Count1Types) function reads the resource maps in memory for all resource forks
(the current resource fork) open to your application. It returns an integer representing the 
total number of unique resource types.
.Sp
.Vb 1
\&    $types = Count1Types;
.Ve
.IP "GetIndType \s-1INDEX\s0" 4
.IX Item "GetIndType INDEX"
.PD 0
.IP "Get1IndType \s-1INDEX\s0" 4
.IX Item "Get1IndType INDEX"
.PD
Given an index number from 1 to the number of resource types in all resource
forks (the current resource fork)
open to your application (as returned by CountTypes), the GetIndType
procedure returns a resource type. You can call
GetIndType repeatedly over the entire range of the index to get all the resource
types available in all resource forks open to your application. If the given
index isn't in the range from 1 to the number of resource types as returned by
CountTypes, \fIundef()\fR is returned.
.Sp
.Vb 4
\&    # Load up @resourceTypes with the types from the current file.
\&    for (1 .. Count1Types) {
\&        $resourceTypes[$_\-1] = Get1IndType($_);
\&    }
.Ve
.IP "SetResLoad \s-1BOOL\s0" 4
.IX Item "SetResLoad BOOL"
Enable and disable automatic loading of resource data into memory for routines
that return handles to resources.
.IP "CountResources \s-1TYPE\s0" 4
.IX Item "CountResources TYPE"
.PD 0
.IP "Count1Resources \s-1TYPE\s0" 4
.IX Item "Count1Resources TYPE"
.PD
Get the total number of available resources of a given type. Count1Resources
looks only at the current resource fork.
.Sp
.Vb 1
\&    $totalDialogsAvailable = CountResources "DITL";
.Ve
.IP "GetIndResource \s-1TYPE, INDEX\s0" 4
.IX Item "GetIndResource TYPE, INDEX"
.PD 0
.IP "Get1IndResource \s-1TYPE, INDEX\s0" 4
.IX Item "Get1IndResource TYPE, INDEX"
.PD
Given an index ranging from 1 to the number of resources of a given type returned
by &CountResources (&Count1Resources) (that is, the number of resources of that type 
in all resource forks open to your application), the GetIndResource function returns a 
handle to a resource of the given type. If you call GetIndResource repeatedly over the
entire range of the index, it returns handles to all resources of the given type
in all resource forks open to your application.
.Sp
.Vb 4
\&    # Load up handles of this type of resource
\&    for (1 .. CountResources("DITL")) {
\&        $dialogs[$_] = GetIndResource("DITL", $_);
\&    }
.Ve
.IP "GetResource \s-1TYPE, ID\s0" 4
.IX Item "GetResource TYPE, ID"
.PD 0
.IP "Get1Resource \s-1TYPE, ID\s0" 4
.IX Item "Get1Resource TYPE, ID"
.PD
Get resource data for a resource specified by resource type and resource \s-1ID.\s0
.Sp
.Vb 4
\&    $SFGdialog = GetResource("DITL", 6042);
\&    if ( defined $SFGdialog ) {
\&        # proceed
\&    }
.Ve
.IP "GetNamedResource \s-1TYPE, NAME\s0" 4
.IX Item "GetNamedResource TYPE, NAME"
.PD 0
.IP "Get1NamedResource \s-1TYPE, NAME\s0" 4
.IX Item "Get1NamedResource TYPE, NAME"
.PD
The GetNamedResource (Get1NamedResource) function searches the resource maps in memory for the
resource specified by the parameters \f(CW$TYPE\fR and \f(CW$NAME\fR.
.Sp
.Vb 4
\&    $SFGdialog = GetNamedResource("DITL", "Standard Get");
\&    if ( defined $SFGdialog ) {
\&        # proceed
\&    }
.Ve
.IP "LoadResource \s-1HANDLE\s0" 4
.IX Item "LoadResource HANDLE"
Given a handle to a resource, LoadResource reads the resource data into memory.
If the \s-1HANDLE\s0 parameter doesn't contain a handle to a resource, then LoadResource
returns undef.
.Sp
.Vb 5
\&    if (LoadResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "ReleaseResource \s-1HANDLE\s0" 4
.IX Item "ReleaseResource HANDLE"
Given a handle to a resource, ReleaseResource releases the memory occupied by the
resource data, if any, and sets the master pointer of the resource's handle in
the resource map in memory to \s-1NIL.\s0 If your application previously obtained a
handle to that resource, the handle is no longer valid. If your application
subsequently calls the Resource Manager to get the released resource, the
Resource Manager assigns a new handle.
.Sp
.Vb 5
\&    if ( ReleaseResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "DetachResource \s-1HANDLE\s0" 4
.IX Item "DetachResource HANDLE"
Given a handle to a resource, ReleaseResource releases the memory occupied by the
resource data, if any, and sets the master pointer of the resource's handle in
the resource map in memory to \s-1NIL.\s0 If your application previously obtained a
handle to that resource, the handle is no longer valid. If your application
subsequently calls the Resource Manager to get the released resource, the
Resource Manager assigns a new handle.
.Sp
.Vb 5
\&    if ( DetachResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "UniqueID \s-1TYPE\s0" 4
.IX Item "UniqueID TYPE"
.PD 0
.IP "Unique1ID \s-1TYPE\s0" 4
.IX Item "Unique1ID TYPE"
.PD
The UniqueID function returns as its function result a resource \s-1ID\s0 greater than 0
that isn't currently assigned to any resource of the specified type in any open
resource fork. You should use this function before adding a new resource to
ensure that you don't duplicate a resource \s-1ID\s0 and override an existing resource.
Unique1ID ensures uniqueness within the current resource fork.
.Sp
.Vb 1
\&    $id = Unique1ID("DITL");
.Ve
.IP "GetResAttrs \s-1HANDLE\s0" 4
.IX Item "GetResAttrs HANDLE"
Given a handle to a resource, the GetResAttrs function returns the resource's
attributes as recorded in its entry in the resource map in memory. If the value
of the theResource parameter isn't a handle to a valid resource, undef is returned.
.Sp
.Vb 4
\&    $resAttrs = GetResAttrs($HANDLE);
\&    if ( defined $resAttrs ) {
\&        # proceed
\&    }
.Ve
.IP "GetResInfo \s-1HANDLE\s0" 4
.IX Item "GetResInfo HANDLE"
Given a handle to a resource, the GetResInfo procedure returns the resource's
resource \s-1ID,\s0 resource type, and resource name. If the handle isn't a valid handle
to a resource, undef is returned.
.Sp
.Vb 4
\&    ($id, $type, $name) = GetResInfo($HANDLE);
\&    if ( defined $id ) {
\&        # proceed
\&    }
.Ve
.IP "SetResInfo \s-1HANDLE, ID, NAME\s0" 4
.IX Item "SetResInfo HANDLE, ID, NAME"
Given a handle to a resource, SetResInfo changes the resource \s-1ID\s0 and the resource
name of the specified resource to the values given in \s-1ID\s0 and \s-1NAME.\s0 If you pass
an empty string for the name parameter, the resource name is not changed.
.IP "AddResource \s-1HANDLE, TYPE, ID, NAME\s0" 4
.IX Item "AddResource HANDLE, TYPE, ID, NAME"
Given a handle to any type of data in memory (but not a handle to an existing
resource), AddResource adds the given handle, resource type, resource \s-1ID,\s0 and
resource name to the current resource file's resource map in memory. The
AddResource procedure sets the resChanged attribute to 1; it does not set any of
the resource's other attributesN\*~that is, all other attributes are set to 0.
.IP "GetResourceSizeOnDisk \s-1HANDLE\s0" 4
.IX Item "GetResourceSizeOnDisk HANDLE"
Given a handle to a resource, the GetResourceSizeOnDisk function checks the
resource on disk (not in memory) and returns its exact size, in bytes. If the
handle isn't a handle to a valid resource, undef is returned.
.Sp
.Vb 4
\&        $size = GetResourceSizeOnDisk($HANDLE);
\&        if ( defined $size ) {
\&                # proceed
\&        }
.Ve
.IP "GetMaxResourceSize \s-1HANDLE\s0" 4
.IX Item "GetMaxResourceSize HANDLE"
Like &GetResourceSizeOnDisk, GetMaxResourceSize takes a handle and returns the
size of the corresponding resource. However, GetMaxResourceSize does not check
the resource on disk; instead, it either checks the resource size in memory or,
if the resource is not in memory, calculates its size, in bytes, on the basis of
information in the resource map in memory. This gives you an approximate size for
the resource that you can count on as the resource's maximum size. It's possible
that the resource is actually smaller than the offsets in the resource map
indicate because the file has not yet been compacted. If you want the exact size
of a resource on disk, either call &GetResourceSizeOnDisk or call &UpdateResFile
before calling GetMaxResourceSize.
.Sp
.Vb 4
\&    $size = GetMaxResourceSize($HANDLE);
\&    if ( defined $size ) {
\&        # proceed
\&    }
.Ve
.IP "RsrcMapEntry \s-1HANDLE\s0" 4
.IX Item "RsrcMapEntry HANDLE"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Given a handle to a resource, RsrcMapEntry returns the offset of the specified
resource's entry from the beginning of the resource map in memory. If it doesn't
find the resource entry, RsrcMapEntry returns 0, and the ResError function
returns the result code resNotFound. If you pass a handle whose value is \s-1NIL,\s0
RsrcMapEntry returns arbitrary data.
.Sp
.Vb 4
\&    $offset = RsrcMapEntry($HANDLE);
\&    if ( defined $offset ) {
\&        # proceed
\&    }
.Ve
.IP "SetResAttrs \s-1HANDLE, ATTRS\s0" 4
.IX Item "SetResAttrs HANDLE, ATTRS"
Given a handle to a resource, SetResAttrs changes the resource attributes of the
resource to those specified in the attrs parameter. The SetResAttrs procedure
changes the information in the resource map in memory, not in the file on disk.
The resProtected attribute changes immediately. Other attribute changes take
effect the next time the specified resource is read into memory but are not made
permanent until the Resource Manager updates the resource fork.
.Sp
.Vb 5
\&    if ( SetResAttrs($HANDLE, $ATTRS) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "ChangedResource \s-1HANDLE\s0" 4
.IX Item "ChangedResource HANDLE"
Given a handle to a resource, the ChangedResource procedure sets the resChanged
attribute for that resource in the resource map in memory. If the resChanged
attribute for a resource has been set and your application calls &UpdateResFile or
quits, the Resource Manager writes the resource data for that resource (and for
all other resources whose resChanged attribute is set) and the entire resource
map to the resource fork of the corresponding file on disk. If the resChanged
attribute for a resource has been set and your application calls &WriteResource,
the Resource Manager writes only the resource data for that resource to disk.
.Sp
.Vb 5
\&    if ( ChangedResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "RemoveResource \s-1HANDLE\s0" 4
.IX Item "RemoveResource HANDLE"
Given a handle to a resource in the current resource file, RemoveResource removes
the resource entry (resource type, resource \s-1ID,\s0 resource name, if any, and
resource attributes) from the current resource file's resource map in memory.
.Sp
.Vb 5
\&    if ( RemoveResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "UpdateResFile \s-1RFD\s0" 4
.IX Item "UpdateResFile RFD"
Given the reference number of a file whose resource fork is open, UpdateResFile
performs three tasks. The first task is to change, add, or remove resource data
in the file's resource fork to match the resource map in memory. Changed resource
data for each resource is written only if that resource's resChanged bit has been
set by a successful call to &ChangedResource or &AddResource. The UpdateResFile
procedure calls the &WriteResource procedure to write changed or added resources
to the resource fork.
.Sp
.Vb 5
\&    if ( UpdateResFile($RFD) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "WriteResource \s-1HANDLE\s0" 4
.IX Item "WriteResource HANDLE"
Given a handle to a resource, WriteResource checks the resChanged attribute of
that resource. If the resChanged attribute is set to 1 (after a successful call
to the &ChangedResource or &AddResource procedure), WriteResource writes the
resource data in memory to the resource fork, then clears the resChanged
attribute in the resource's resource map in memory.
.Sp
.Vb 5
\&    if ( WriteResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "SetResPurge \s-1INSTALL\s0" 4
.IX Item "SetResPurge INSTALL"
Specify \s-1TRUE\s0 in the install parameter to make the Memory Manager pass the handle
for a resource to the Resource Manager before purging the resource data to which
the handle points. The Resource Manager determines whether the handle points to a
resource in the application heap. It also checks if the resource's resChanged
attribute is set to 1. If these two conditions are met, the Resource Manager
calls the &WriteResource procedure to write the resource's resource data to the
resource fork before returning control to the Memory Manager.
.Sp
Specify \s-1FALSE\s0 in the install parameter to restore the normal state, so that the
Memory Manager purges resource data when it needs to without calling the Resource
Manager.
.Sp
.Vb 5
\&    if ( SetResPurge(1) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "GetResFileAttrs \s-1RFD\s0" 4
.IX Item "GetResFileAttrs RFD"
Given a file reference number, the GetResFileAttrs function returns the
attributes of the file's resource fork. Specify 0 in \f(CW$RFD\fR to get
the attributes of the System file's resource fork. If there's no open resource
fork for the given file reference number, undef is returned.
.Sp
.Vb 4
\&    $rfa = GetResFileAttrs($RFD);
\&    if ( defined $rfa ) {
\&        # proceed
\&    }
.Ve
.IP "SetResFileAttrs \s-1RFD, ATTRS\s0" 4
.IX Item "SetResFileAttrs RFD, ATTRS"
Given a file reference number, the SetResFileAttrs procedure sets the attributes
of the file's resource fork to those specified in the attrs parameter. If the
refNum parameter is 0, it represents the System file's resource fork. However,
you shouldn't change the attributes of the System file's resource fork. If
there's no resource fork with the given reference number, SetResFileAttrs does
nothing, and the ResError function returns the result code noErr.
.Sp
.Vb 5
\&    if ( SetResFileAttrs($RFD, $ATTRS) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "RGetResource \s-1TYPE, ID\s0" 4
.IX Item "RGetResource TYPE, ID"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The RGetResource function searches the resource maps in memory for the resource
specified by the parameters \f(CW$TYPE\fR and \f(CW$ID\fR. The resource maps in memory, which
represent all open resource forks, are arranged as a linked list. The
RGetResource function first uses GetResource to search this list. The GetResource
function starts with the current resource file and progresses through the list in
order (that is, in reverse chronological order in which the resource forks were
opened) until it finds the resource's entry in one of the resource maps. If
GetResource doesn't find the specified resource in its search of the resource
maps of open resource forks (which includes the System file's resource fork),
RGetResource sets the global variable RomMapInsert to \s-1TRUE,\s0 then calls
GetResource again. In response, GetResource performs the same search, but this
time it looks in the resource map of the ROM-resident resources before searching
the resource map of the System file.
.Sp
.Vb 4
\&    $handle = RGetResource("DITL", 6042);
\&    if ( defined $handle ) {
\&        # proceed
\&    }
.Ve
.IP "FSpOpenResFile \s-1SPEC, PERMISSION\s0" 4
.IX Item "FSpOpenResFile SPEC, PERMISSION"
The FSpOpenResFile function opens the resource fork of the file identified by the
spec parameter. It also makes this file the current resource file.
.Sp
.Vb 4
\&    $sp = FSpOpenResFile($SPEC);
\&    if ( defined $sp ) {
\&        # proceed
\&    }
.Ve
.Sp
In addition to opening the resource fork for the file with the specified name,
FSpOpenResFile lets you specify in the permission parameter the read/write permission
of the resource fork the first time it is opened.
.IP "FSOpenResourceFile \s-1REF, FORKNAME, PERMISSION\s0" 4
.IX Item "FSOpenResourceFile REF, FORKNAME, PERMISSION"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
The FSOpenResourceFile function is like FSpOpenResFile, except that it can open
a resource file using the data fork or resource fork.  \f(CW$REF\fR is the
path to the resource file.  \f(CW$FORKNAME\fR is
\&\*(L"rsrc\*(R" for a resource fork; else the data fork will be used.  It also makes this
file the current resource file.
.IP "FSpCreateResFile \s-1SPEC, CREATOR, FILETYPE, SCRIPTTAG\s0" 4
.IX Item "FSpCreateResFile SPEC, CREATOR, FILETYPE, SCRIPTTAG"
The FSpCreateResFile procedure creates an empty resource fork for a file with the
specified \f(CW$FILETYPE\fR, \f(CW$CREATOR\fR, and \f(CW$SCRIPTTAG\fR in the location and with the name
designated by the spec parameter. (An empty resource fork contains no resource
data but does include a resource map.)
.Sp
.Vb 5
\&    if ( FSpCreateResFile($SPEC, $CREATOR, $FILETYPE, $SCRIPTTAG) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "FSCreateResourceFile \s-1PARENTREF, FILENAME, FORKNAME\s0" 4
.IX Item "FSCreateResourceFile PARENTREF, FILENAME, FORKNAME"
\&\fBMac \s-1OS X\s0 only.\fR
.Sp
The FSCreateResourceFile procedure is like FSpCreateResFile, except that it can
create a resource file in the data fork or resource fork.  \f(CW$PARENTREF\fR is the
oath of the directory where the new \f(CW$FILENAME\fR will be located.  \f(CW$FORKNAME\fR is
\&\*(L"rsrc\*(R" for a resource fork; else the data fork will be used.
.IP "ReadPartialResource \s-1HANDLE, OFFSET, BYTECOUNT\s0" 4
.IX Item "ReadPartialResource HANDLE, OFFSET, BYTECOUNT"
The ReadPartialResource procedure reads the resource subsection identified by the
theResource, offset, and count parameters.
.Sp
.Vb 1
\&    $data = ReadPartialResource($rsrc, 2000, 256);
.Ve
.IP "WritePartialResource \s-1HANDLE, OFFSET, DATA\s0" 4
.IX Item "WritePartialResource HANDLE, OFFSET, DATA"
The WritePartialResource procedure writes the data specified by \s-1DATA \s0
to the resource subsection identified by the \s-1HANDLE\s0 and \s-1OFFSET\s0 parameters.
.Sp
.Vb 5
\&    if ( WritePartialResource($HANDLE, $OFFSET, $DATA) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "SetResourceSize \s-1HANDLE, SIZE\s0" 4
.IX Item "SetResourceSize HANDLE, SIZE"
Given a handle to a resource, SetResourceSize sets the size field of the
specified resource on disk without writing the resource data. You can change the
size of any resource, regardless of the amount of memory you have available.
.Sp
.Vb 5
\&    if ( SetResource($HANDLE, $SIZE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 79:" 4
.IX Item "Around line 79:"
Non-ASCII character seen before =encoding in '\*(D-1,'. Assuming \s-1ISO8859\-1\s0
                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Resources5.16.3pm                       0100644 0001750 0001750 00000064230 12566241371 024376  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Resources 3"
.TH Resources 3 "2015-08-22" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Resources \- Macintosh Toolbox Interface to the Resource Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Mac::Memory;
\&    use Mac::Resources;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "resSysHeap" 4
.IX Item "resSysHeap"
.PD 0
.IP "resPurgeable" 4
.IX Item "resPurgeable"
.IP "resLocked" 4
.IX Item "resLocked"
.IP "resProtected" 4
.IX Item "resProtected"
.IP "resPreload" 4
.IX Item "resPreload"
.IP "resChanged" 4
.IX Item "resChanged"
.PD
Resource flags.
.IP "mapReadOnly" 4
.IX Item "mapReadOnly"
.PD 0
.IP "mapCompact" 4
.IX Item "mapCompact"
.IP "mapChanged" 4
.IX Item "mapChanged"
.PD
Resource map flags.
.IP "kResFileNotOpened" 4
.IX Item "kResFileNotOpened"
Returned after an unsuccessful call to \f(CW\*(C`OpenResFile()\*(C'\fR.
.IP "kSystemResFile" 4
.IX Item "kSystemResFile"
The resource file reference number of the system file.
.SS "Functions"
.IX Subsection "Functions"
.IP "CloseResFile \s-1RFD\s0" 4
.IX Item "CloseResFile RFD"
Given a file reference number for a file whose resource fork is open, the
CloseResFile procedure performs four tasks. First, it updates the file by calling
the &UpdateResFile procedure. Second, it releases the memory occupied by each
resource in the resource fork by calling the &DisposeHandle procedure. Third, it
releases the memory occupied by the resource map. The fourth task is to close the
resource fork.
.IP "CurResFile" 4
.IX Item "CurResFile"
The CurResFile function returns the file reference number associated with the
current resource file. You can call this function when your application starts up
(before opening the resource fork of any other file) to get the file reference
number of your application's resource fork.
.Sp
.Vb 1
\&    $RFD = CurResFile;
.Ve
.IP "HomeResFile \s-1RESOURCE\s0" 4
.IX Item "HomeResFile RESOURCE"
Given a handle to a resource, the HomeResFile function returns the file reference
number for the resource fork containing the specified resource. If the given
handle isn't a handle to a resource, HomeResFile returns \*(D-1, and the &ResError
function returns the result code resNotFound. If HomeResFile returns 0, the
resource is in the System file's resource fork. If HomeResFile returns 1, the
resource is ROM-resident.
.Sp
.Vb 1
\&    $RFD = HomeResFile($Resource);
.Ve
.IP "CreateResFile \s-1NAME\s0" 4
.IX Item "CreateResFile NAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The CreateResFile procedure creates an empty resource file.
.Sp
.Vb 5
\&    if ( CreateResFile("Resource.rsrc")) {
\&        # error occurred
\&    } else {
\&        # proceed
\&    }
.Ve
.IP "OpenResFile \s-1NAME\s0" 4
.IX Item "OpenResFile NAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The OpenResFile function opens an existing resource file. It also makes this file
the current resource file.
.Sp
.Vb 5
\&    if ( defined($RFD = OpenResFile("Resource.rsrc")) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "UseResFile \s-1RFD\s0" 4
.IX Item "UseResFile RFD"
The UseResFile procedure searches the list of files whose resource forks have
been opened for the file specified by the \s-1RFD\s0 parameter. If the specified file
is found, the Resource Manager sets the current resource file to the specified
file. If there's no resource fork open for a file with that reference number,
UseResFile does nothing. To set the current resource file to the System file, use
0 for the refNum parameter.
.Sp
.Vb 5
\&    if (UseResFile($RFD)) {
\&        # error occurred
\&    } else {
\&        # proceed
\&    }
.Ve
.IP "CountTypes" 4
.IX Item "CountTypes"
.PD 0
.IP "Count1Types" 4
.IX Item "Count1Types"
.PD
The CountTypes (Count1Types) function reads the resource maps in memory for all resource forks
(the current resource fork) open to your application. It returns an integer representing the 
total number of unique resource types.
.Sp
.Vb 1
\&    $types = Count1Types;
.Ve
.IP "GetIndType \s-1INDEX\s0" 4
.IX Item "GetIndType INDEX"
.PD 0
.IP "Get1IndType \s-1INDEX\s0" 4
.IX Item "Get1IndType INDEX"
.PD
Given an index number from 1 to the number of resource types in all resource
forks (the current resource fork)
open to your application (as returned by CountTypes), the GetIndType
procedure returns a resource type. You can call
GetIndType repeatedly over the entire range of the index to get all the resource
types available in all resource forks open to your application. If the given
index isn't in the range from 1 to the number of resource types as returned by
CountTypes, \fIundef()\fR is returned.
.Sp
.Vb 4
\&    # Load up @resourceTypes with the types from the current file.
\&    for (1 .. Count1Types) {
\&        $resourceTypes[$_\-1] = Get1IndType($_);
\&    }
.Ve
.IP "SetResLoad \s-1BOOL\s0" 4
.IX Item "SetResLoad BOOL"
Enable and disable automatic loading of resource data into memory for routines
that return handles to resources.
.IP "CountResources \s-1TYPE\s0" 4
.IX Item "CountResources TYPE"
.PD 0
.IP "Count1Resources \s-1TYPE\s0" 4
.IX Item "Count1Resources TYPE"
.PD
Get the total number of available resources of a given type. Count1Resources
looks only at the current resource fork.
.Sp
.Vb 1
\&    $totalDialogsAvailable = CountResources "DITL";
.Ve
.IP "GetIndResource \s-1TYPE\s0, \s-1INDEX\s0" 4
.IX Item "GetIndResource TYPE, INDEX"
.PD 0
.IP "Get1IndResource \s-1TYPE\s0, \s-1INDEX\s0" 4
.IX Item "Get1IndResource TYPE, INDEX"
.PD
Given an index ranging from 1 to the number of resources of a given type returned
by &CountResources (&Count1Resources) (that is, the number of resources of that type 
in all resource forks open to your application), the GetIndResource function returns a 
handle to a resource of the given type. If you call GetIndResource repeatedly over the
entire range of the index, it returns handles to all resources of the given type
in all resource forks open to your application.
.Sp
.Vb 4
\&    # Load up handles of this type of resource
\&    for (1 .. CountResources("DITL")) {
\&        $dialogs[$_] = GetIndResource("DITL", $_);
\&    }
.Ve
.IP "GetResource \s-1TYPE\s0, \s-1ID\s0" 4
.IX Item "GetResource TYPE, ID"
.PD 0
.IP "Get1Resource \s-1TYPE\s0, \s-1ID\s0" 4
.IX Item "Get1Resource TYPE, ID"
.PD
Get resource data for a resource specified by resource type and resource \s-1ID\s0.
.Sp
.Vb 4
\&    $SFGdialog = GetResource("DITL", 6042);
\&    if ( defined $SFGdialog ) {
\&        # proceed
\&    }
.Ve
.IP "GetNamedResource \s-1TYPE\s0, \s-1NAME\s0" 4
.IX Item "GetNamedResource TYPE, NAME"
.PD 0
.IP "Get1NamedResource \s-1TYPE\s0, \s-1NAME\s0" 4
.IX Item "Get1NamedResource TYPE, NAME"
.PD
The GetNamedResource (Get1NamedResource) function searches the resource maps in memory for the
resource specified by the parameters \f(CW$TYPE\fR and \f(CW$NAME\fR.
.Sp
.Vb 4
\&    $SFGdialog = GetNamedResource("DITL", "Standard Get");
\&    if ( defined $SFGdialog ) {
\&        # proceed
\&    }
.Ve
.IP "LoadResource \s-1HANDLE\s0" 4
.IX Item "LoadResource HANDLE"
Given a handle to a resource, LoadResource reads the resource data into memory.
If the \s-1HANDLE\s0 parameter doesn't contain a handle to a resource, then LoadResource
returns undef.
.Sp
.Vb 5
\&    if (LoadResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "ReleaseResource \s-1HANDLE\s0" 4
.IX Item "ReleaseResource HANDLE"
Given a handle to a resource, ReleaseResource releases the memory occupied by the
resource data, if any, and sets the master pointer of the resource's handle in
the resource map in memory to \s-1NIL\s0. If your application previously obtained a
handle to that resource, the handle is no longer valid. If your application
subsequently calls the Resource Manager to get the released resource, the
Resource Manager assigns a new handle.
.Sp
.Vb 5
\&    if ( ReleaseResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "DetachResource \s-1HANDLE\s0" 4
.IX Item "DetachResource HANDLE"
Given a handle to a resource, ReleaseResource releases the memory occupied by the
resource data, if any, and sets the master pointer of the resource's handle in
the resource map in memory to \s-1NIL\s0. If your application previously obtained a
handle to that resource, the handle is no longer valid. If your application
subsequently calls the Resource Manager to get the released resource, the
Resource Manager assigns a new handle.
.Sp
.Vb 5
\&    if ( DetachResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "UniqueID \s-1TYPE\s0" 4
.IX Item "UniqueID TYPE"
.PD 0
.IP "Unique1ID \s-1TYPE\s0" 4
.IX Item "Unique1ID TYPE"
.PD
The UniqueID function returns as its function result a resource \s-1ID\s0 greater than 0
that isn't currently assigned to any resource of the specified type in any open
resource fork. You should use this function before adding a new resource to
ensure that you don't duplicate a resource \s-1ID\s0 and override an existing resource.
Unique1ID ensures uniqueness within the current resource fork.
.Sp
.Vb 1
\&    $id = Unique1ID("DITL");
.Ve
.IP "GetResAttrs \s-1HANDLE\s0" 4
.IX Item "GetResAttrs HANDLE"
Given a handle to a resource, the GetResAttrs function returns the resource's
attributes as recorded in its entry in the resource map in memory. If the value
of the theResource parameter isn't a handle to a valid resource, undef is returned.
.Sp
.Vb 4
\&    $resAttrs = GetResAttrs($HANDLE);
\&    if ( defined $resAttrs ) {
\&        # proceed
\&    }
.Ve
.IP "GetResInfo \s-1HANDLE\s0" 4
.IX Item "GetResInfo HANDLE"
Given a handle to a resource, the GetResInfo procedure returns the resource's
resource \s-1ID\s0, resource type, and resource name. If the handle isn't a valid handle
to a resource, undef is returned.
.Sp
.Vb 4
\&    ($id, $type, $name) = GetResInfo($HANDLE);
\&    if ( defined $id ) {
\&        # proceed
\&    }
.Ve
.IP "SetResInfo \s-1HANDLE\s0, \s-1ID\s0, \s-1NAME\s0" 4
.IX Item "SetResInfo HANDLE, ID, NAME"
Given a handle to a resource, SetResInfo changes the resource \s-1ID\s0 and the resource
name of the specified resource to the values given in \s-1ID\s0 and \s-1NAME\s0. If you pass
an empty string for the name parameter, the resource name is not changed.
.IP "AddResource \s-1HANDLE\s0, \s-1TYPE\s0, \s-1ID\s0, \s-1NAME\s0" 4
.IX Item "AddResource HANDLE, TYPE, ID, NAME"
Given a handle to any type of data in memory (but not a handle to an existing
resource), AddResource adds the given handle, resource type, resource \s-1ID\s0, and
resource name to the current resource file's resource map in memory. The
AddResource procedure sets the resChanged attribute to 1; it does not set any of
the resource's other attributesN\*~that is, all other attributes are set to 0.
.IP "GetResourceSizeOnDisk \s-1HANDLE\s0" 4
.IX Item "GetResourceSizeOnDisk HANDLE"
Given a handle to a resource, the GetResourceSizeOnDisk function checks the
resource on disk (not in memory) and returns its exact size, in bytes. If the
handle isn't a handle to a valid resource, undef is returned.
.Sp
.Vb 4
\&        $size = GetResourceSizeOnDisk($HANDLE);
\&        if ( defined $size ) {
\&                # proceed
\&        }
.Ve
.IP "GetMaxResourceSize \s-1HANDLE\s0" 4
.IX Item "GetMaxResourceSize HANDLE"
Like &GetResourceSizeOnDisk, GetMaxResourceSize takes a handle and returns the
size of the corresponding resource. However, GetMaxResourceSize does not check
the resource on disk; instead, it either checks the resource size in memory or,
if the resource is not in memory, calculates its size, in bytes, on the basis of
information in the resource map in memory. This gives you an approximate size for
the resource that you can count on as the resource's maximum size. It's possible
that the resource is actually smaller than the offsets in the resource map
indicate because the file has not yet been compacted. If you want the exact size
of a resource on disk, either call &GetResourceSizeOnDisk or call &UpdateResFile
before calling GetMaxResourceSize.
.Sp
.Vb 4
\&    $size = GetMaxResourceSize($HANDLE);
\&    if ( defined $size ) {
\&        # proceed
\&    }
.Ve
.IP "RsrcMapEntry \s-1HANDLE\s0" 4
.IX Item "RsrcMapEntry HANDLE"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Given a handle to a resource, RsrcMapEntry returns the offset of the specified
resource's entry from the beginning of the resource map in memory. If it doesn't
find the resource entry, RsrcMapEntry returns 0, and the ResError function
returns the result code resNotFound. If you pass a handle whose value is \s-1NIL\s0,
RsrcMapEntry returns arbitrary data.
.Sp
.Vb 4
\&    $offset = RsrcMapEntry($HANDLE);
\&    if ( defined $offset ) {
\&        # proceed
\&    }
.Ve
.IP "SetResAttrs \s-1HANDLE\s0, \s-1ATTRS\s0" 4
.IX Item "SetResAttrs HANDLE, ATTRS"
Given a handle to a resource, SetResAttrs changes the resource attributes of the
resource to those specified in the attrs parameter. The SetResAttrs procedure
changes the information in the resource map in memory, not in the file on disk.
The resProtected attribute changes immediately. Other attribute changes take
effect the next time the specified resource is read into memory but are not made
permanent until the Resource Manager updates the resource fork.
.Sp
.Vb 5
\&    if ( SetResAttrs($HANDLE, $ATTRS) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "ChangedResource \s-1HANDLE\s0" 4
.IX Item "ChangedResource HANDLE"
Given a handle to a resource, the ChangedResource procedure sets the resChanged
attribute for that resource in the resource map in memory. If the resChanged
attribute for a resource has been set and your application calls &UpdateResFile or
quits, the Resource Manager writes the resource data for that resource (and for
all other resources whose resChanged attribute is set) and the entire resource
map to the resource fork of the corresponding file on disk. If the resChanged
attribute for a resource has been set and your application calls &WriteResource,
the Resource Manager writes only the resource data for that resource to disk.
.Sp
.Vb 5
\&    if ( ChangedResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "RemoveResource \s-1HANDLE\s0" 4
.IX Item "RemoveResource HANDLE"
Given a handle to a resource in the current resource file, RemoveResource removes
the resource entry (resource type, resource \s-1ID\s0, resource name, if any, and
resource attributes) from the current resource file's resource map in memory.
.Sp
.Vb 5
\&    if ( RemoveResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "UpdateResFile \s-1RFD\s0" 4
.IX Item "UpdateResFile RFD"
Given the reference number of a file whose resource fork is open, UpdateResFile
performs three tasks. The first task is to change, add, or remove resource data
in the file's resource fork to match the resource map in memory. Changed resource
data for each resource is written only if that resource's resChanged bit has been
set by a successful call to &ChangedResource or &AddResource. The UpdateResFile
procedure calls the &WriteResource procedure to write changed or added resources
to the resource fork.
.Sp
.Vb 5
\&    if ( UpdateResFile($RFD) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "WriteResource \s-1HANDLE\s0" 4
.IX Item "WriteResource HANDLE"
Given a handle to a resource, WriteResource checks the resChanged attribute of
that resource. If the resChanged attribute is set to 1 (after a successful call
to the &ChangedResource or &AddResource procedure), WriteResource writes the
resource data in memory to the resource fork, then clears the resChanged
attribute in the resource's resource map in memory.
.Sp
.Vb 5
\&    if ( WriteResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "SetResPurge \s-1INSTALL\s0" 4
.IX Item "SetResPurge INSTALL"
Specify \s-1TRUE\s0 in the install parameter to make the Memory Manager pass the handle
for a resource to the Resource Manager before purging the resource data to which
the handle points. The Resource Manager determines whether the handle points to a
resource in the application heap. It also checks if the resource's resChanged
attribute is set to 1. If these two conditions are met, the Resource Manager
calls the &WriteResource procedure to write the resource's resource data to the
resource fork before returning control to the Memory Manager.
.Sp
Specify \s-1FALSE\s0 in the install parameter to restore the normal state, so that the
Memory Manager purges resource data when it needs to without calling the Resource
Manager.
.Sp
.Vb 5
\&    if ( SetResPurge(1) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "GetResFileAttrs \s-1RFD\s0" 4
.IX Item "GetResFileAttrs RFD"
Given a file reference number, the GetResFileAttrs function returns the
attributes of the file's resource fork. Specify 0 in \f(CW$RFD\fR to get
the attributes of the System file's resource fork. If there's no open resource
fork for the given file reference number, undef is returned.
.Sp
.Vb 4
\&    $rfa = GetResFileAttrs($RFD);
\&    if ( defined $rfa ) {
\&        # proceed
\&    }
.Ve
.IP "SetResFileAttrs \s-1RFD\s0, \s-1ATTRS\s0" 4
.IX Item "SetResFileAttrs RFD, ATTRS"
Given a file reference number, the SetResFileAttrs procedure sets the attributes
of the file's resource fork to those specified in the attrs parameter. If the
refNum parameter is 0, it represents the System file's resource fork. However,
you shouldn't change the attributes of the System file's resource fork. If
there's no resource fork with the given reference number, SetResFileAttrs does
nothing, and the ResError function returns the result code noErr.
.Sp
.Vb 5
\&    if ( SetResFileAttrs($RFD, $ATTRS) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "RGetResource \s-1TYPE\s0, \s-1ID\s0" 4
.IX Item "RGetResource TYPE, ID"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The RGetResource function searches the resource maps in memory for the resource
specified by the parameters \f(CW$TYPE\fR and \f(CW$ID\fR. The resource maps in memory, which
represent all open resource forks, are arranged as a linked list. The
RGetResource function first uses GetResource to search this list. The GetResource
function starts with the current resource file and progresses through the list in
order (that is, in reverse chronological order in which the resource forks were
opened) until it finds the resource's entry in one of the resource maps. If
GetResource doesn't find the specified resource in its search of the resource
maps of open resource forks (which includes the System file's resource fork),
RGetResource sets the global variable RomMapInsert to \s-1TRUE\s0, then calls
GetResource again. In response, GetResource performs the same search, but this
time it looks in the resource map of the ROM-resident resources before searching
the resource map of the System file.
.Sp
.Vb 4
\&    $handle = RGetResource("DITL", 6042);
\&    if ( defined $handle ) {
\&        # proceed
\&    }
.Ve
.IP "FSpOpenResFile \s-1SPEC\s0, \s-1PERMISSION\s0" 4
.IX Item "FSpOpenResFile SPEC, PERMISSION"
The FSpOpenResFile function opens the resource fork of the file identified by the
spec parameter. It also makes this file the current resource file.
.Sp
.Vb 4
\&    $sp = FSpOpenResFile($SPEC);
\&    if ( defined $sp ) {
\&        # proceed
\&    }
.Ve
.Sp
In addition to opening the resource fork for the file with the specified name,
FSpOpenResFile lets you specify in the permission parameter the read/write permission
of the resource fork the first time it is opened.
.IP "FSOpenResourceFile \s-1REF\s0, \s-1FORKNAME\s0, \s-1PERMISSION\s0" 4
.IX Item "FSOpenResourceFile REF, FORKNAME, PERMISSION"
\&\fBMac \s-1OS\s0 X only.\fR
.Sp
The FSOpenResourceFile function is like FSpOpenResFile, except that it can open
a resource file using the data fork or resource fork.  \f(CW$REF\fR is the
path to the resource file.  \f(CW$FORKNAME\fR is
\&\*(L"rsrc\*(R" for a resource fork; else the data fork will be used.  It also makes this
file the current resource file.
.IP "FSpCreateResFile \s-1SPEC\s0, \s-1CREATOR\s0, \s-1FILETYPE\s0, \s-1SCRIPTTAG\s0" 4
.IX Item "FSpCreateResFile SPEC, CREATOR, FILETYPE, SCRIPTTAG"
The FSpCreateResFile procedure creates an empty resource fork for a file with the
specified \f(CW$FILETYPE\fR, \f(CW$CREATOR\fR, and \f(CW$SCRIPTTAG\fR in the location and with the name
designated by the spec parameter. (An empty resource fork contains no resource
data but does include a resource map.)
.Sp
.Vb 5
\&    if ( FSpCreateResFile($SPEC, $CREATOR, $FILETYPE, $SCRIPTTAG) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "FSCreateResourceFile \s-1PARENTREF\s0, \s-1FILENAME\s0, \s-1FORKNAME\s0" 4
.IX Item "FSCreateResourceFile PARENTREF, FILENAME, FORKNAME"
\&\fBMac \s-1OS\s0 X only.\fR
.Sp
The FSCreateResourceFile procedure is like FSpCreateResFile, except that it can
create a resource file in the data fork or resource fork.  \f(CW$PARENTREF\fR is the
oath of the directory where the new \f(CW$FILENAME\fR will be located.  \f(CW$FORKNAME\fR is
\&\*(L"rsrc\*(R" for a resource fork; else the data fork will be used.
.IP "ReadPartialResource \s-1HANDLE\s0, \s-1OFFSET\s0, \s-1BYTECOUNT\s0" 4
.IX Item "ReadPartialResource HANDLE, OFFSET, BYTECOUNT"
The ReadPartialResource procedure reads the resource subsection identified by the
theResource, offset, and count parameters.
.Sp
.Vb 1
\&    $data = ReadPartialResource($rsrc, 2000, 256);
.Ve
.IP "WritePartialResource \s-1HANDLE\s0, \s-1OFFSET\s0, \s-1DATA\s0" 4
.IX Item "WritePartialResource HANDLE, OFFSET, DATA"
The WritePartialResource procedure writes the data specified by \s-1DATA\s0 
to the resource subsection identified by the \s-1HANDLE\s0 and \s-1OFFSET\s0 parameters.
.Sp
.Vb 5
\&    if ( WritePartialResource($HANDLE, $OFFSET, $DATA) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.IP "SetResourceSize \s-1HANDLE\s0, \s-1SIZE\s0" 4
.IX Item "SetResourceSize HANDLE, SIZE"
Given a handle to a resource, SetResourceSize sets the size field of the
specified resource on disk without writing the resource data. You can change the
size of any resource, regardless of the amount of memory you have available.
.Sp
.Vb 5
\&    if ( SetResource($HANDLE, $SIZE) ) {
\&        # proceed
\&    } else {
\&        # error
\&    }
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>,
documentation by Bob Dalgleish <bob.dalgleish@sasknet.sk.ca>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
                                                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man3/Mac::Resources5.18.3pm                       0100644 0001750 0001750 00000064654 12566241370 024411  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Resources 3"
.TH Resources 3 "2015-08-22" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Resources \- Macintosh Toolbox Interface to the Resource Manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Mac::Memory;
\&    use Mac::Resources;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Constants"
.IX Subsection "Constants"
.IP "resSysHeap" 4
.IX Item "resSysHeap"
.PD 0
.IP "resPurgeable" 4
.IX Item "resPurgeable"
.IP "resLocked" 4
.IX Item "resLocked"
.IP "resProtected" 4
.IX Item "resProtected"
.IP "resPreload" 4
.IX Item "resPreload"
.IP "resChanged" 4
.IX Item "resChanged"
.PD
Resource flags.
.IP "mapReadOnly" 4
.IX Item "mapReadOnly"
.PD 0
.IP "mapCompact" 4
.IX Item "mapCompact"
.IP "mapChanged" 4
.IX Item "mapChanged"
.PD
Resource map flags.
.IP "kResFileNotOpened" 4
.IX Item "kResFileNotOpened"
Returned after an unsuccessful call to \f(CW\*(C`OpenResFile()\*(C'\fR.
.IP "kSystemResFile" 4
.IX Item "kSystemResFile"
The resource file reference number of the system file.
.SS "Functions"
.IX Subsection "Functions"
.IP "CloseResFile \s-1RFD\s0" 4
.IX Item "CloseResFile RFD"
Given a file reference number for a file whose resource fork is open, the
CloseResFile procedure performs four tasks. First, it updates the file by calling
the &UpdateResFile procedure. Second, it releases the memory occupied by each
resource in the resource fork by calling the &DisposeHandle procedure. Third, it
releases the memory occupied by the resource map. The fourth task is to close the
resource fork.
.IP "CurResFile" 4
.IX Item "CurResFile"
The CurResFile function returns the file reference number associated with the
current resource file. You can call this function when your application starts up
(before opening the resource fork of any other file) to get the file reference
number of your application's resource fork.
.Sp
.Vb 1
\&    $RFD = CurResFile;
.Ve
.IP "HomeResFile \s-1RESOURCE\s0" 4
.IX Item "HomeResFile RESOURCE"
Given a handle to a resource, the HomeResFile function returns the file reference
number for the resource fork containing the specified resource. If the given
handle isn't a handle to a resource, HomeResFile returns \*(D-1, and the &ResError
function returns the result code resNotFound. If HomeResFile returns 0, the
resource is in the System file's resource fork. If HomeResFile returns 1, the
resource is ROM-resident.
.Sp
.Vb 1
\&    $RFD = HomeResFile($Resource);
.Ve
.IP "CreateResFile \s-1NAME\s0" 4
.IX Item "CreateResFile NAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The CreateResFile procedure creates an empty resource file.
.Sp
.Vb 5
\&    if ( CreateResFile("Resource.rsrc")) {
\&        # error occurred
\&    } else {
\&        # proceed
\&    }
.Ve
.IP "OpenResFile \s-1NAME\s0" 4
.IX Item "OpenResFile NAME"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
The OpenResFile function opens an existing resource file. It also makes this file
the current resource file.
.Sp
.Vb 5
\&    if ( defined($RFD = OpenResFile("Resource.rsrc")) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "UseResFile \s-1RFD\s0" 4
.IX Item "UseResFile RFD"
The UseResFile procedure searches the list of files whose resource forks have
been opened for the file specified by the \s-1RFD\s0 parameter. If the specified file
is found, the Resource Manager sets the current resource file to the specified
file. If there's no resource fork open for a file with that reference number,
UseResFile does nothing. To set the current resource file to the System file, use
0 for the refNum parameter.
.Sp
.Vb 5
\&    if (UseResFile($RFD)) {
\&        # error occurred
\&    } else {
\&        # proceed
\&    }
.Ve
.IP "CountTypes" 4
.IX Item "CountTypes"
.PD 0
.IP "Count1Types" 4
.IX Item "Count1Types"
.PD
The CountTypes (Count1Types) function reads the resource maps in memory for all resource forks
(the current resource fork) open to your application. It returns an integer representing the 
total number of unique resource types.
.Sp
.Vb 1
\&    $types = Count1Types;
.Ve
.IP "GetIndType \s-1INDEX\s0" 4
.IX Item "GetIndType INDEX"
.PD 0
.IP "Get1IndType \s-1INDEX\s0" 4
.IX Item "Get1IndType INDEX"
.PD
Given an index number from 1 to the number of resource types in all resource
forks (the current resource fork)
open to your application (as returned by CountTypes), the GetIndType
procedure returns a resource type. You can call
GetIndType repeatedly over the entire range of the index to get all the resource
types available in all resource forks open to your application. If the given
index isn't in the range from 1 to the number of resource types as returned by
CountTypes, \fIundef()\fR is returned.
.Sp
.Vb 4
\&    # Load up @resourceTypes with the types from the current file.
\&    for (1 .. Count1Types) {
\&        $resourceTypes[$_\-1] = Get1IndType($_);
\&    }
.Ve
.IP "SetResLoad \s-1BOOL\s0" 4
.IX Item "SetResLoad BOOL"
Enable and disable automatic loading of resource data into memory for routines
that return handles to resources.
.IP "CountResources \s-1TYPE\s0" 4
.IX Item "CountResources TYPE"
.PD 0
.IP "Count1Resources \s-1TYPE\s0" 4
.IX Item "Count1Resources TYPE"
.PD
Get the total number of available resources of a given type. Count1Resources
looks only at the current resource fork.
.Sp
.Vb 1
\&    $totalDialogsAvailable = CountResources "DITL";
.Ve
.IP "GetIndResource \s-1TYPE, INDEX\s0" 4
.IX Item "GetIndResource TYPE, INDEX"
.PD 0
.IP "Get1IndResource \s-1TYPE, INDEX\s0" 4
.IX Item "Get1IndResource TYPE, INDEX"
.PD
Given an index ranging from 1 to the number of resources of a given type returned
by &CountResources (&Count1Resources) (that is, the number of resources of that type 
in all resource forks open to your application), the GetIndResource function returns a 
handle to a resource of the given type. If you call GetIndResource repeatedly over the
entire range of the index, it returns handles to all resources of the given type
in all resource forks open to your application.
.Sp
.Vb 4
\&    # Load up handles of this type of resource
\&    for (1 .. CountResources("DITL")) {
\&        $dialogs[$_] = GetIndResource("DITL", $_);
\&    }
.Ve
.IP "GetResource \s-1TYPE, ID\s0" 4
.IX Item "GetResource TYPE, ID"
.PD 0
.IP "Get1Resource \s-1TYPE, ID\s0" 4
.IX Item "Get1Resource TYPE, ID"
.PD
Get resource data for a resource specified by resource type and resource \s-1ID.\s0
.Sp
.Vb 4
\&    $SFGdialog = GetResource("DITL", 6042);
\&    if ( defined $SFGdialog ) {
\&        # proceed
\&    }
.Ve
.IP "GetNamedResource \s-1TYPE, NAME\s0" 4
.IX Item "GetNamedResource TYPE, NAME"
.PD 0
.IP "Get1NamedResource \s-1TYPE, NAME\s0" 4
.IX Item "Get1NamedResource TYPE, NAME"
.PD
The GetNamedResource (Get1NamedResource) function searches the resource maps in memory for the
resource specified by the parameters \f(CW$TYPE\fR and \f(CW$NAME\fR.
.Sp
.Vb 4
\&    $SFGdialog = GetNamedResource("DITL", "Standard Get");
\&    if ( defined $SFGdialog ) {
\&        # proceed
\&    }
.Ve
.IP "LoadResource \s-1HANDLE\s0" 4
.IX Item "LoadResource HANDLE"
Given a handle to a resource, LoadResource reads the resource data into memory.
If the \s-1HANDLE\s0 parameter doesn't contain a handle to a resource, then LoadResource
returns undef.
.Sp
.Vb 5
\&    if (LoadResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "ReleaseResource \s-1HANDLE\s0" 4
.IX Item "ReleaseResource HANDLE"
Given a handle to a resource, ReleaseResource releases the memory occupied by the
resource data, if any, and sets the master pointer of the resource's handle in
the resource map in memory to \s-1NIL.\s0 If your application previously obtained a
handle to that resource, the handle is no longer valid. If your application
subsequently calls the Resource Manager to get the released resource, the
Resource Manager assigns a new handle.
.Sp
.Vb 5
\&    if ( ReleaseResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "DetachResource \s-1HANDLE\s0" 4
.IX Item "DetachResource HANDLE"
Given a handle to a resource, ReleaseResource releases the memory occupied by the
resource data, if any, and sets the master pointer of the resource's handle in
the resource map in memory to \s-1NIL.\s0 If your application previously obtained a
handle to that resource, the handle is no longer valid. If your application
subsequently calls the Resource Manager to get the released resource, the
Resource Manager assigns a new handle.
.Sp
.Vb 5
\&    if ( DetachResource($HANDLE) ) {
\&        # proceed
\&    } else {
\&        # error occurred
\&    }
.Ve
.IP "UniqueID \s-1TYPE\s0" 4
.IX Item "UniqueID TYPE"
.PD 0
.IP "Unique1ID \s-1TYPE\s0" 4
.IX Item "Unique1ID TYPE"
.PD
The UniqueID function returns as its function result a resource \s-1ID\s0 greater than 0
that isn't currently assigned to any resource of the specified type in any open
resource fork. You should use this function before adding a new resource to
ensure that you don't duplicate a resource \s-1ID\s0 and override an existing resource.
Unique1ID ensures uniqueness within the current resource fork.
.Sp
.Vb 1
\&    $id = Unique1ID("DITL");
.Ve
.IP "GetResAttrs \s-1HANDLE\s0" 4
.IX Item "GetResAttrs HANDLE"
Given a handle to a resource, the GetResAttrs function returns the resource's
attributes as recorded in its entry in the resource map in memory. If the value
of the theResource parameter isn't a handle to a valid resource, undef is returned.
.Sp
.Vb 4
\&    $resAttrs = GetResAttrs($HANDLE);
\&    if ( defined $resAttrs ) {
\&        # proceed
\&    }
.Ve
.IP "GetResInfo \s-1HANDLE\s0" 4
.IX Item "GetResInfo HANDLE"
Given a handle to a resource, the GetResInfo procedure returns the resource's
resource \s-1ID,\s0 resource type, and resource name. If the handle isn't a valid handle
to a resource, undef is returned.
.Sp
.Vb 4
\&    ($id, $type, $name) = GetResInfo($HANDLE);
\&    if ( defined $id ) {
\&        # proceed
\&    }
.Ve
.IP "SetResInfo \s-1HANDLE, ID, NAME\s0" 4
.IX Item "SetResInfo HANDLE, ID, NAME"
Given a handle to a resource, SetResInfo changes the resource \s-1ID\s0 and the resource
name of the specified resource to the values given in \s-1ID\s0 and \s-1NAME.\s0 If you pass
an empty string for the name parameter, the resource name is not changed.
.IP "AddResource \s-1HANDLE, TYPE, ID, NAME\s0" 4
.IX Item "AddResource HANDLE, TYPE, ID, NAME"
Given a handle to any type of data in memory (but not a handle to an existing
resource), AddResource adds the given handle, resource type, resource \s-1ID,\s0 and
resource name to the current resource file's resource map in memory. The
AddResource procedure sets the resChanged attribute to 1; it does not set any of
the resource's other attributesN\*~that is, all other attributes are set to 0.
.IP "GetResourceSizeOnDisk \s-1HANDLE\s0" 4
.IX Item "GetResourceSizeOnDisk HANDLE"
Given a handle to a resource, the GetResourceSizeOnDisk function checks the
resource on disk (not in memory) and returns its exact size, in bytes. If the
handle isn't a handle to a valid resource, undef is returned.
.Sp
.Vb 4
\&        $size = GetResourceSizeOnDi