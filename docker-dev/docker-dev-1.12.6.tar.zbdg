eve the next page of results.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the flow log IDs parameter in the same request.</p>"
        }
      }
    },
    "DescribeFlowLogsResult":{
      "type":"structure",
      "members":{
        "FlowLogs":{
          "shape":"FlowLogSet",
          "documentation":"<p>Information about the flow logs.</p>",
          "locationName":"flowLogSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeHostsRequest":{
      "type":"structure",
      "members":{
        "HostIds":{
          "shape":"RequestHostIdList",
          "documentation":"<p>The IDs of the Dedicated hosts. The IDs are used for targeted instance launches.</p>",
          "locationName":"hostId"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to retrieve the next page of results.</p>",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error. You cannot specify this parameter and the host IDs parameter in the same request.</p>",
          "locationName":"maxResults"
        },
        "Filter":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li><p><code>instance-type</code> - The instance type size that the Dedicated host is configured to support.</p></li> <li><p><code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code> | <code>off</code>).</p></li> <li><p><code>host-reservation-id</code> - The ID of the reservation associated with this host.</p></li> <li><p><code>client-token</code> - The idempotency token you provided when you launched the instance</p></li> <li><p><code>state</code>- The allocation state of the Dedicated host (<code>available</code> | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code> | <code>released-permanent-failure</code>).</p></li> <li><p><code>availability-zone</code> - The Availability Zone of the host.</p> </li> </ul>",
          "locationName":"filter"
        }
      }
    },
    "DescribeHostsResult":{
      "type":"structure",
      "members":{
        "Hosts":{
          "shape":"HostList",
          "documentation":"<p>Information about the Dedicated hosts.</p>",
          "locationName":"hostSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeIdFormatRequest":{
      "type":"structure",
      "members":{
        "Resource":{
          "shape":"String",
          "documentation":"<p>The type of resource.</p>"
        }
      }
    },
    "DescribeIdFormatResult":{
      "type":"structure",
      "members":{
        "Statuses":{
          "shape":"IdFormatList",
          "documentation":"<p>Information about the ID format for the resource.</p>",
          "locationName":"statusSet"
        }
      }
    },
    "DescribeImageAttributeRequest":{
      "type":"structure",
      "required":[
        "ImageId",
        "Attribute"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>"
        },
        "Attribute":{
          "shape":"ImageAttributeName",
          "documentation":"<p>The AMI attribute.</p> <p><b>Note</b>: Depending on your account privileges, the <code>blockDeviceMapping</code> attribute may return a <code>Client.AuthFailure</code> error. If this happens, use <a>DescribeImages</a> to get information about the block device mapping for the AMI.</p>"
        }
      }
    },
    "DescribeImagesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ImageIds":{
          "shape":"ImageIdStringList",
          "documentation":"<p>One or more image IDs.</p> <p>Default: Describes all images available to you.</p>",
          "locationName":"ImageId"
        },
        "Owners":{
          "shape":"OwnerStringList",
          "documentation":"<p>Filters the images by the owner. Specify an AWS account ID, <code>amazon</code> (owner is Amazon), <code>aws-marketplace</code> (owner is AWS Marketplace), <code>self</code> (owner is the sender of the request). Omitting this option returns all images for which you have launch permissions, regardless of ownership.</p>",
          "locationName":"Owner"
        },
        "ExecutableUsers":{
          "shape":"ExecutableByStringList",
          "documentation":"<p>Scopes the images by users with explicit launch permissions. Specify an AWS account ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).</p>",
          "locationName":"ExecutableBy"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p><code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p><code>block-device-mapping.device-name</code> - The device name for the EBS volume (for example, <code>/dev/sdh</code>).</p> </li> <li> <p><code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the EBS volume.</p> </li> <li> <p><code>block-device-mapping.volume-size</code> - The volume size of the EBS volume, in GiB.</p> </li> <li> <p><code>block-device-mapping.volume-type</code> - The volume type of the EBS volume (<code>gp2</code> | <code>standard</code> | <code>io1</code>).</p> </li> <li> <p><code>description</code> - The description of the image (provided during image creation).</p> </li> <li> <p><code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p><code>image-id</code> - The ID of the image.</p> </li> <li> <p><code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> | <code>ramdisk</code>).</p> </li> <li> <p><code>is-public</code> - A Boolean that indicates whether the image is public.</p> </li> <li> <p><code>kernel-id</code> - The kernel ID.</p> </li> <li> <p><code>manifest-location</code> - The location of the image manifest.</p> </li> <li> <p><code>name</code> - The name of the AMI (provided during image creation).</p> </li> <li> <p><code>owner-alias</code> - The AWS account alias (for example, <code>amazon</code>).</p> </li> <li> <p><code>owner-id</code> - The AWS account ID of the image owner.</p> </li> <li> <p><code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</p> </li> <li> <p><code>product-code</code> - The product code.</p> </li> <li> <p><code>product-code.type</code> - The type of the product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p><code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p><code>root-device-name</code> - The name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p><code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p><code>state</code> - The state of the image (<code>available</code> | <code>pending</code> | <code>failed</code>).</p> </li> <li> <p><code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p><code>state-reason-message</code> - The message for the state change.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> | <code>hvm</code>).</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeImagesResult":{
      "type":"structure",
      "members":{
        "Images":{
          "shape":"ImageList",
          "documentation":"<p>Information about one or more images.</p>",
          "locationName":"imagesSet"
        }
      }
    },
    "DescribeImportImageTasksRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "ImportTaskIds":{
          "shape":"ImportTaskIdList",
          "documentation":"<p>A list of import image task IDs.</p>",
          "locationName":"ImportTaskId"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>A token that indicates the next page of results.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single request.</p>"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p>"
        }
      }
    },
    "DescribeImportImageTasksResult":{
      "type":"structure",
      "members":{
        "ImportImageTasks":{
          "shape":"ImportImageTaskList",
          "documentation":"<p>A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days.</p>",
          "locationName":"importImageTaskSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeImportSnapshotTasksRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "ImportTaskIds":{
          "shape":"ImportTaskIdList",
          "documentation":"<p>A list of import snapshot task IDs.</p>",
          "locationName":"ImportTaskId"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>A token that indicates the next page of results.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single request.</p>"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p>"
        }
      }
    },
    "DescribeImportSnapshotTasksResult":{
      "type":"structure",
      "members":{
        "ImportSnapshotTasks":{
          "shape":"ImportSnapshotTaskList",
          "documentation":"<p>A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days.</p>",
          "locationName":"importSnapshotTaskSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeInstanceAttributeRequest":{
      "type":"structure",
      "required":[
        "InstanceId",
        "Attribute"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "Attribute":{
          "shape":"InstanceAttributeName",
          "documentation":"<p>The instance attribute.</p>",
          "locationName":"attribute"
        }
      }
    },
    "DescribeInstanceStatusRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p> <p>Default: Describes all your instances.</p> <p>Constraints: Maximum 100 explicitly specified instance IDs.</p>",
          "locationName":"InstanceId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p><code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code> | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code> | <code>instance-stop</code>).</p> </li> <li> <p><code>event.description</code> - A description of the event.</p> </li> <li> <p><code>event.not-after</code> - The latest end time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p><code>event.not-before</code> - The earliest start time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p><code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p><code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p><code>instance-status.reachability</code> - Filters on instance status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p><code>instance-status.status</code> - The status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> <li> <p><code>system-status.reachability</code> - Filters on system status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p><code>system-status.status</code> - The system status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> </ul>",
          "locationName":"Filter"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to retrieve the next page of results.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the instance IDs parameter in the same request.</p>"
        },
        "IncludeAllInstances":{
          "shape":"Boolean",
          "documentation":"<p>When <code>true</code>, includes the health status for all instances. When <code>false</code>, includes the health status for running instances only.</p> <p>Default: <code>false</code></p>",
          "locationName":"includeAllInstances"
        }
      }
    },
    "DescribeInstanceStatusResult":{
      "type":"structure",
      "members":{
        "InstanceStatuses":{
          "shape":"InstanceStatusList",
          "documentation":"<p>One or more instance status descriptions.</p>",
          "locationName":"instanceStatusSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeInstancesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p> <p>Default: Describes all your instances.</p>",
          "locationName":"InstanceId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>affinity</code> - The affinity setting for an instance running on a Dedicated host (<code>default</code> | <code>host</code>).</p> </li> <li> <p><code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p><code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p><code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p> </li> <li> <p><code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p><code>block-device-mapping.device-name</code> - The device name for the EBS volume (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p><code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p><code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p><code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p><code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p><code>group-id</code> - The ID of the security group for the instance. EC2-Classic only.</p> </li> <li> <p><code>group-name</code> - The name of the security group for the instance. EC2-Classic only.</p> </li> <li> <p><code>host-Id</code> - The ID of the Dedicated host on which the instance is running, if applicable.</p> </li> <li> <p><code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p><code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p><code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p><code>instance-id</code> - The ID of the instance.</p> </li> <li> <p><code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p> </li> <li> <p><code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p><code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p><code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p><code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p><code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p><code>ip-address</code> - The public IP address of the instance.</p> </li> <li> <p><code>kernel-id</code> - The kernel ID.</p> </li> <li> <p><code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p><code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p><code>launch-time</code> - The time when the instance was launched.</p> </li> <li> <p><code>monitoring-state</code> - Indicates whether monitoring is enabled for the instance (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p><code>owner-id</code> - The AWS account ID of the instance owner.</p> </li> <li> <p><code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p><code>platform</code> - The platform. Use <code>windows</code> if you have Windows instances; otherwise, leave blank.</p> </li> <li> <p><code>private-dns-name</code> - The private DNS name of the instance.</p> </li> <li> <p><code>private-ip-address</code> - The private IP address of the instance.</p> </li> <li> <p><code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p><code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p><code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p><code>reason</code> - The reason for the current state of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p><code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p><code>reservation-id</code> - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you'll get one reservation ID. If you launch ten instances using the same launch request, you'll also get one reservation ID.</p> </li> <li> <p><code>root-device-name</code> - The name of the root device for the instance (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p> </li> <li> <p><code>root-device-type</code> - The type of root device that the instance uses (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p><code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p><code>spot-instance-request-id</code> - The ID of the Spot instance request.</p> </li> <li> <p><code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p><code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p><code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource, where <code>tag</code>:<i>key</i> is the tag's key. </p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p><code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> <li> <p><code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p><code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p><code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p><code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p><code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p><code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p><code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p><code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by AWS.</p> </li> <li> <p><code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p><code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p><code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p><code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p><code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p><code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p><code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p><code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p><code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p><code>network-interface.addresses.private-ip-address</code> - The private IP address associated with the network interface.</p> </li> <li> <p><code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p><code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p><code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p><code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p><code>network-interface.addresses.primary</code> - Specifies whether the IP address of the network interface is the primary private IP address.</p> </li> <li> <p><code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address with a network interface.</p> </li> <li> <p><code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IP address associated with the network interface.</p> </li> <li> <p><code>association.public-ip</code> - The address of the Elastic IP address bound to the network interface.</p> </li> <li> <p><code>association.ip-owner-id</code> - The owner of the Elastic IP address associated with the network interface.</p> </li> <li> <p><code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address for your network interface.</p> </li> <li> <p><code>association.association-id</code> - The association ID returned when the network interface was associated with an IP address.</p> </li> </ul>",
          "locationName":"Filter"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to request the next page of results.</p>",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the instance IDs parameter in the same request.</p>",
          "locationName":"maxResults"
        }
      }
    },
    "DescribeInstancesResult":{
      "type":"structure",
      "members":{
        "Reservations":{
          "shape":"ReservationList",
          "documentation":"<p>Zero or more reservations.</p>",
          "locationName":"reservationSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeInternetGatewaysRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InternetGatewayIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more Internet gateway IDs.</p> <p>Default: Describes all your Internet gateways.</p>",
          "locationName":"internetGatewayId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>available</code>). Present only if a VPC is attached.</p> </li> <li> <p><code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p><code>internet-gateway-id</code> - The ID of the Internet gateway.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeInternetGatewaysResult":{
      "type":"structure",
      "members":{
        "InternetGateways":{
          "shape":"InternetGatewayList",
          "documentation":"<p>Information about one or more Internet gateways.</p>",
          "locationName":"internetGatewaySet"
        }
      }
    },
    "DescribeKeyPairsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "KeyNames":{
          "shape":"KeyNameStringList",
          "documentation":"<p>One or more key pair names.</p> <p>Default: Describes all your key pairs.</p>",
          "locationName":"KeyName"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>fingerprint</code> - The fingerprint of the key pair.</p> </li> <li> <p><code>key-name</code> - The name of the key pair.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeKeyPairsResult":{
      "type":"structure",
      "members":{
        "KeyPairs":{
          "shape":"KeyPairList",
          "documentation":"<p>Information about one or more key pairs.</p>",
          "locationName":"keySet"
        }
      }
    },
    "DescribeMovingAddressesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "PublicIps":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more Elastic IP addresses.</p>",
          "locationName":"publicIp"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results.</p>",
          "locationName":"nextToken"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p> </li> </ul>",
          "locationName":"filter"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value outside of this range, an error is returned.</p> <p>Default: If no value is provided, the default is 1000.</p>",
          "locationName":"maxResults"
        }
      }
    },
    "DescribeMovingAddressesResult":{
      "type":"structure",
      "members":{
        "MovingAddressStatuses":{
          "shape":"MovingAddressStatusSet",
          "documentation":"<p>The status for each Elastic IP address.</p>",
          "locationName":"movingAddressStatusSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeNatGatewaysRequest":{
      "type":"structure",
      "members":{
        "NatGatewayIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more NAT gateway IDs.</p>",
          "locationName":"NatGatewayId"
        },
        "Filter":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>nat-gateway-id</code> - The ID of the NAT gateway.</p> </li> <li> <p><code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p><code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</p> </li> </ul>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value specified is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to retrieve the next page of results.</p>"
        }
      }
    },
    "DescribeNatGatewaysResult":{
      "type":"structure",
      "members":{
        "NatGateways":{
          "shape":"NatGatewayList",
          "documentation":"<p>Information about the NAT gateways.</p>",
          "locationName":"natGatewaySet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeNetworkAclsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "NetworkAclIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more network ACL IDs.</p> <p>Default: Describes all your network ACLs.</p>",
          "locationName":"NetworkAclId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>association.association-id</code> - The ID of an association ID for the ACL.</p> </li> <li> <p><code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p> </li> <li> <p><code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p><code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p> </li> <li> <p><code>entry.cidr</code> - The CIDR range specified in the entry.</p> </li> <li> <p><code>entry.egress</code> - Indicates whether the entry applies to egress traffic.</p> </li> <li> <p><code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p> </li> <li> <p><code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p> </li> <li> <p><code>entry.port-range.from</code> - The start of the port range specified in the entry. </p> </li> <li> <p><code>entry.port-range.to</code> - The end of the port range specified in the entry. </p> </li> <li> <p><code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p><code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p> </li> <li> <p><code>entry.rule-number</code> - The number of an entry (in other words, rule) in the ACL's set of entries.</p> </li> <li> <p><code>network-acl-id</code> - The ID of the network ACL.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC for the network ACL.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeNetworkAclsResult":{
      "type":"structure",
      "members":{
        "NetworkAcls":{
          "shape":"NetworkAclList",
          "documentation":"<p>Information about one or more network ACLs.</p>",
          "locationName":"networkAclSet"
        }
      }
    },
    "DescribeNetworkInterfaceAttributeRequest":{
      "type":"structure",
      "required":["NetworkInterfaceId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "Attribute":{
          "shape":"NetworkInterfaceAttribute",
          "documentation":"<p>The attribute of the network interface.</p>",
          "locationName":"attribute"
        }
      }
    },
    "DescribeNetworkInterfaceAttributeResult":{
      "type":"structure",
      "members":{
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "Description":{
          "shape":"AttributeValue",
          "documentation":"<p>The description of the network interface.</p>",
          "locationName":"description"
        },
        "SourceDestCheck":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether source/destination checking is enabled.</p>",
          "locationName":"sourceDestCheck"
        },
        "Groups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>The security groups associated with the network interface.</p>",
          "locationName":"groupSet"
        },
        "Attachment":{
          "shape":"NetworkInterfaceAttachment",
          "documentation":"<p>The attachment (if any) of the network interface.</p>",
          "locationName":"attachment"
        }
      }
    },
    "DescribeNetworkInterfacesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "NetworkInterfaceIds":{
          "shape":"NetworkInterfaceIdList",
          "documentation":"<p>One or more network interface IDs.</p> <p>Default: Describes all your network interfaces.</p>",
          "locationName":"NetworkInterfaceId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>addresses.private-ip-address</code> - The private IP addresses associated with the network interface.</p> </li> <li> <p><code>addresses.primary</code> - Whether the private IP address is the primary IP address associated with the network interface. </p> </li> <li> <p><code>addresses.association.public-ip</code> - The association ID returned when the network interface was associated with the Elastic IP address.</p> </li> <li> <p><code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p> </li> <li> <p><code>association.association-id</code> - The association ID returned when the network interface was associated with an IP address.</p> </li> <li> <p><code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address for your network interface.</p> </li> <li> <p><code>association.ip-owner-id</code> - The owner of the Elastic IP address associated with the network interface.</p> </li> <li> <p><code>association.public-ip</code> - The address of the Elastic IP address bound to the network interface.</p> </li> <li> <p><code>association.public-dns-name</code> - The public DNS name for the network interface.</p> </li> <li> <p><code>attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p><code>attachment.attach.time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p><code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p><code>attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p><code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p><code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p><code>attachment.nat-gateway-id</code> - The ID of the NAT gateway to which the network interface is attached.</p> </li> <li> <p><code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p><code>availability-zone</code> - The Availability Zone of the network interface.</p> </li> <li> <p><code>description</code> - The description of the network interface.</p> </li> <li> <p><code>group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p><code>group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p><code>mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p><code>network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p><code>owner-id</code> - The AWS account ID of the network interface owner.</p> </li> <li> <p><code>private-ip-address</code> - The private IP address or addresses of the network interface.</p> </li> <li> <p><code>private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p><code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p><code>requester-managed</code> - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p><code>source-desk-check</code> - Indicates whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p> </li> <li> <p><code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>; if a network interface is attached to an instance the status is <code>in-use</code>.</p> </li> <li> <p><code>subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC for the network interface.</p> </li> </ul>",
          "locationName":"filter"
        }
      }
    },
    "DescribeNetworkInterfacesResult":{
      "type":"structure",
      "members":{
        "NetworkInterfaces":{
          "shape":"NetworkInterfaceList",
          "documentation":"<p>Information about one or more network interfaces.</p>",
          "locationName":"networkInterfaceSet"
        }
      }
    },
    "DescribePlacementGroupsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "GroupNames":{
          "shape":"PlacementGroupStringList",
          "documentation":"<p>One or more placement group names.</p> <p>Default: Describes all your placement groups, or only those otherwise specified.</p>",
          "locationName":"groupName"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>group-name</code> - The name of the placement group.</p> </li> <li> <p><code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p><code>strategy</code> - The strategy of the placement group (<code>cluster</code>).</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribePlacementGroupsResult":{
      "type":"structure",
      "members":{
        "PlacementGroups":{
          "shape":"PlacementGroupList",
          "documentation":"<p>One or more placement groups.</p>",
          "locationName":"placementGroupSet"
        }
      }
    },
    "DescribePrefixListsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "PrefixListIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more prefix list IDs.</p>",
          "locationName":"PrefixListId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>prefix-list-id</code>: The ID of a prefix list.</p> </li> <li> <p><code>prefix-list-name</code>: The name of a prefix list.</p> </li> </ul>",
          "locationName":"Filter"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value specified is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of items to return. (You received this token from a prior call.)</p>"
        }
      }
    },
    "DescribePrefixListsResult":{
      "type":"structure",
      "members":{
        "PrefixLists":{
          "shape":"PrefixListSet",
          "documentation":"<p>All available prefix lists.</p>",
          "locationName":"prefixListSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeRegionsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "RegionNames":{
          "shape":"RegionNameStringList",
          "documentation":"<p>The names of one or more regions.</p>",
          "locationName":"RegionName"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>endpoint</code> - The endpoint of the region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p> </li> <li> <p><code>region-name</code> - The name of the region (for example, <code>us-east-1</code>).</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeRegionsResult":{
      "type":"structure",
      "members":{
        "Regions":{
          "shape":"RegionList",
          "documentation":"<p>Information about one or more regions.</p>",
          "locationName":"regionInfo"
        }
      }
    },
    "DescribeReservedInstancesListingsRequest":{
      "type":"structure",
      "members":{
        "ReservedInstancesId":{
          "shape":"String",
          "documentation":"<p>One or more Reserved Instance IDs.</p>",
          "locationName":"reservedInstancesId"
        },
        "ReservedInstancesListingId":{
          "shape":"String",
          "documentation":"<p>One or more Reserved Instance listing IDs.</p>",
          "locationName":"reservedInstancesListingId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>reserved-instances-id</code> - The ID of the Reserved Instances.</p> </li> <li> <p><code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p> </li> <li> <p><code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</p> </li> <li> <p><code>status-message</code> - The reason for the status.</p> </li> </ul>",
          "locationName":"filters"
        }
      }
    },
    "DescribeReservedInstancesListingsResult":{
      "type":"structure",
      "members":{
        "ReservedInstancesListings":{
          "shape":"ReservedInstancesListingList",
          "documentation":"<p>Information about the Reserved Instance listing.</p>",
          "locationName":"reservedInstancesListingsSet"
        }
      }
    },
    "DescribeReservedInstancesModificationsRequest":{
      "type":"structure",
      "members":{
        "ReservedInstancesModificationIds":{
          "shape":"ReservedInstancesModificationIdStringList",
          "documentation":"<p>IDs for the submitted modification request.</p>",
          "locationName":"ReservedInstancesModificationId"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to retrieve the next page of results. </p>",
          "locationName":"nextToken"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>client-token</code> - The idempotency token for the modification request.</p> </li> <li> <p><code>create-date</code> - The time when the modification request was created.</p> </li> <li> <p><code>effective-date</code> - The time when the modification becomes effective.</p> </li> <li> <p><code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p> </li> <li> <p><code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p> </li> <li> <p><code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p> </li> <li> <p><code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p> </li> <li> <p><code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p> </li> <li> <p><code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p> </li> <li> <p><code>reserved-instances-modification-id</code> - The ID of the modification request.</p> </li> <li> <p><code>status</code> - The status of the Reserved Instances modification request (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p> </li> <li> <p><code>status-message</code> - The reason for the status.</p> </li> <li> <p><code>update-date</code> - The time when the modification request was last updated.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeReservedInstancesModificationsResult":{
      "type":"structure",
      "members":{
        "ReservedInstancesModifications":{
          "shape":"ReservedInstancesModificationList",
          "documentation":"<p>The Reserved Instance modification information.</p>",
          "locationName":"reservedInstancesModificationsSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeReservedInstancesOfferingsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ReservedInstancesOfferingIds":{
          "shape":"ReservedInstancesOfferingIdStringList",
          "documentation":"<p>One or more Reserved Instances offering IDs.</p>",
          "locationName":"ReservedInstancesOfferingId"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type that the reservation will cover (for example, <code>m1.small</code>). For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the Reserved Instance can be used.</p>"
        },
        "ProductDescription":{
          "shape":"RIProductDescription",
          "documentation":"<p>The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the description are for use with Amazon VPC.</p>"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p><code>duration</code> - The duration of the Reserved Instance (for example, one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p><code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p><code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p><code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from both AWS and the Reserved Instance Marketplace are listed.</p> </li> <li> <p><code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>) </p> </li> <li> <p><code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.</p> </li> <li> <p><code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>",
          "locationName":"Filter"
        },
        "InstanceTenancy":{
          "shape":"Tenancy",
          "documentation":"<p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).</p> <p>Default: <code>default</code></p>",
          "locationName":"instanceTenancy"
        },
        "OfferingType":{
          "shape":"OfferingTypeValues",
          "documentation":"<p>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. </p>",
          "locationName":"offeringType"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to retrieve the next page of results. </p>",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. The maximum is 100.</p> <p>Default: 100</p>",
          "locationName":"maxResults"
        },
        "IncludeMarketplace":{
          "shape":"Boolean",
          "documentation":"<p>Include Reserved Instance Marketplace offerings in the response.</p>"
        },
        "MinDuration":{
          "shape":"Long",
          "documentation":"<p>The minimum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 2592000 (1 month)</p>"
        },
        "MaxDuration":{
          "shape":"Long",
          "documentation":"<p>The maximum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 94608000 (3 years)</p>"
        },
        "MaxInstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of instances to filter when searching for offerings.</p> <p>Default: 20</p>"
        }
      }
    },
    "DescribeReservedInstancesOfferingsResult":{
      "type":"structure",
      "members":{
        "ReservedInstancesOfferings":{
          "shape":"ReservedInstancesOfferingList",
          "documentation":"<p>A list of Reserved Instances offerings.</p>",
          "locationName":"reservedInstancesOfferingsSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeReservedInstancesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ReservedInstancesIds":{
          "shape":"ReservedInstancesIdStringList",
          "documentation":"<p>One or more Reserved Instance IDs.</p> <p>Default: Describes all your Reserved Instances, or only those otherwise specified.</p>",
          "locationName":"ReservedInstancesId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p><code>duration</code> - The duration of the Reserved Instance (one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p><code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</p> </li> <li> <p><code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p><code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p><code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).</p> </li> <li> <p><code>reserved-instances-id</code> - The ID of the Reserved Instance.</p> </li> <li> <p><code>start</code> - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).</p> </li> <li> <p><code>state</code> - The state of the Reserved Instance (<code>payment-pending</code> | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>",
          "locationName":"Filter"
        },
        "OfferingType":{
          "shape":"OfferingTypeValues",
          "documentation":"<p>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. </p>",
          "locationName":"offeringType"
        }
      }
    },
    "DescribeReservedInstancesResult":{
      "type":"structure",
      "members":{
        "ReservedInstances":{
          "shape":"ReservedInstancesList",
          "documentation":"<p>A list of Reserved Instances.</p>",
          "locationName":"reservedInstancesSet"
        }
      }
    },
    "DescribeRouteTablesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "RouteTableIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more route table IDs.</p> <p>Default: Describes all your route tables.</p>",
          "locationName":"RouteTableId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p><code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p><code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p><code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>).</p> </li> <li> <p><code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p><code>route.destination-cidr-block</code> - The CIDR range specified in a route in the table.</p> </li> <li> <p><code>route.destination-prefix-list-id</code> - The ID (prefix) of the AWS service specified in a route in the table.</p> </li> <li> <p><code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p><code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p><code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p><code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p><code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p><code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeRouteTablesResult":{
      "type":"structure",
      "members":{
        "RouteTables":{
          "shape":"RouteTableList",
          "documentation":"<p>Information about one or more route tables. </p>",
          "locationName":"routeTableSet"
        }
      }
    },
    "DescribeScheduledInstanceAvailabilityRequest":{
      "type":"structure",
      "required":[
        "Recurrence",
        "FirstSlotStartTimeRange"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "Recurrence":{
          "shape":"ScheduledInstanceRecurrenceRequest",
          "documentation":"<p>The schedule recurrence.</p>"
        },
        "FirstSlotStartTimeRange":{
          "shape":"SlotDateTimeRangeRequest",
          "documentation":"<p>The time period for the first schedule to start.</p>"
        },
        "MinSlotDurationInHours":{
          "shape":"Integer",
          "documentation":"<p>The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p>"
        },
        "MaxSlotDurationInHours":{
          "shape":"Integer",
          "documentation":"<p>The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code> and less than 1,720.</p>"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p><code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p><code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p><code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>",
          "locationName":"Filter"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeScheduledInstanceAvailability.</p>"
    },
    "DescribeScheduledInstanceAvailabilityResult":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        },
        "ScheduledInstanceAvailabilitySet":{
          "shape":"ScheduledInstanceAvailabilitySet",
          "documentation":"<p>Information about the available Scheduled Instances.</p>",
          "locationName":"scheduledInstanceAvailabilitySet"
        }
      },
      "documentation":"<p>Contains the output of DescribeScheduledInstanceAvailability.</p>"
    },
    "DescribeScheduledInstancesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "ScheduledInstanceIds":{
          "shape":"ScheduledInstanceIdRequestSet",
          "documentation":"<p>One or more Scheduled Instance IDs.</p>",
          "locationName":"ScheduledInstanceId"
        },
        "SlotStartTimeRange":{
          "shape":"SlotStartTimeRangeRequest",
          "documentation":"<p>The time period for the first schedule to start.</p>"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p><code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p><code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p><code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>",
          "locationName":"Filter"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeScheduledInstances.</p>"
    },
    "DescribeScheduledInstancesResult":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        },
        "ScheduledInstanceSet":{
          "shape":"ScheduledInstanceSet",
          "documentation":"<p>Information about the Scheduled Instances.</p>",
          "locationName":"scheduledInstanceSet"
        }
      },
      "documentation":"<p>Contains the output of DescribeScheduledInstances.</p>"
    },
    "DescribeSecurityGroupsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "GroupNames":{
          "shape":"GroupNameStringList",
          "documentation":"<p>[EC2-Classic and default VPC only] One or more security group names. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the <code>group-name</code> filter to describe security groups by name.</p> <p>Default: Describes all your security groups.</p>",
          "locationName":"GroupName"
        },
        "GroupIds":{
          "shape":"GroupIdStringList",
          "documentation":"<p>One or more security group IDs. Required for security groups in a nondefault VPC.</p> <p>Default: Describes all your security groups.</p>",
          "locationName":"GroupId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p> <ul> <li> <p><code>description</code> - The description of the security group.</p> </li> <li> <p><code>egress.ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS service to which the security group allows access.</p> </li> <li> <p><code>group-id</code> - The ID of the security group. </p> </li> <li> <p><code>group-name</code> - The name of the security group.</p> </li> <li> <p><code>ip-permission.cidr</code> - A CIDR range that has been granted permission.</p> </li> <li> <p><code>ip-permission.from-port</code> - The start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p><code>ip-permission.group-id</code> - The ID of a security group that has been granted permission.</p> </li> <li> <p><code>ip-permission.group-name</code> - The name of a security group that has been granted permission.</p> </li> <li> <p><code>ip-permission.protocol</code> - The IP protocol for the permission (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p><code>ip-permission.to-port</code> - The end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p><code>ip-permission.user-id</code> - The ID of an AWS account that has been granted permission.</p> </li> <li> <p><code>owner-id</code> - The AWS account ID of the owner of the security group.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the security group.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the security group.</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeSecurityGroupsResult":{
      "type":"structure",
      "members":{
        "SecurityGroups":{
          "shape":"SecurityGroupList",
          "documentation":"<p>Information about one or more security groups.</p>",
          "locationName":"securityGroupInfo"
        }
      }
    },
    "DescribeSnapshotAttributeRequest":{
      "type":"structure",
      "required":[
        "SnapshotId",
        "Attribute"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the EBS snapshot.</p>"
        },
        "Attribute":{
          "shape":"SnapshotAttributeName",
          "documentation":"<p>The snapshot attribute you would like to view.</p>"
        }
      }
    },
    "DescribeSnapshotAttributeResult":{
      "type":"structure",
      "members":{
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the EBS snapshot.</p>",
          "locationName":"snapshotId"
        },
        "CreateVolumePermissions":{
          "shape":"CreateVolumePermissionList",
          "documentation":"<p>A list of permissions for creating volumes from the snapshot.</p>",
          "locationName":"createVolumePermission"
        },
        "ProductCodes":{
          "shape":"ProductCodeList",
          "documentation":"<p>A list of product codes.</p>",
          "locationName":"productCodes"
        }
      }
    },
    "DescribeSnapshotsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SnapshotIds":{
          "shape":"SnapshotIdStringList",
          "documentation":"<p>One or more snapshot IDs.</p> <p>Default: Describes snapshots for which you have launch permissions.</p>",
          "locationName":"SnapshotId"
        },
        "OwnerIds":{
          "shape":"OwnerStringList",
          "documentation":"<p>Returns the snapshots owned by the specified owner. Multiple owners can be specified.</p>",
          "locationName":"Owner"
        },
        "RestorableByUserIds":{
          "shape":"RestorableByStringList",
          "documentation":"<p>One or more AWS accounts IDs that can create volumes from the snapshot.</p>",
          "locationName":"RestorableBy"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>description</code> - A description of the snapshot.</p> </li> <li> <p><code>owner-alias</code> - The AWS account alias (for example, <code>amazon</code>) that owns the snapshot.</p> </li> <li> <p><code>owner-id</code> - The ID of the AWS account that owns the snapshot.</p> </li> <li> <p><code>progress</code> - The progress of the snapshot, as a percentage (for example, 80%).</p> </li> <li> <p><code>snapshot-id</code> - The snapshot ID.</p> </li> <li> <p><code>start-time</code> - The time stamp when the snapshot was initiated.</p> </li> <li> <p><code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code> | <code>error</code>).</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>volume-id</code> - The ID of the volume the snapshot is for.</p> </li> <li> <p><code>volume-size</code> - The size of the volume, in GiB.</p> </li> </ul>",
          "locationName":"Filter"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.</p>"
        }
      }
    },
    "DescribeSnapshotsResult":{
      "type":"structure",
      "members":{
        "Snapshots":{
          "shape":"SnapshotList",
          "documentation":"<p>Information about the snapshots.</p>",
          "locationName":"snapshotSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code> request. When the results of a <code>DescribeSnapshots</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeSpotDatafeedSubscriptionRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeSpotDatafeedSubscription.</p>"
    },
    "DescribeSpotDatafeedSubscriptionResult":{
      "type":"structure",
      "members":{
        "SpotDatafeedSubscription":{
          "shape":"SpotDatafeedSubscription",
          "documentation":"<p>The Spot instance data feed subscription.</p>",
          "locationName":"spotDatafeedSubscription"
        }
      },
      "documentation":"<p>Contains the output of DescribeSpotDatafeedSubscription.</p>"
    },
    "DescribeSpotFleetInstancesRequest":{
      "type":"structure",
      "required":["SpotFleetRequestId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SpotFleetRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestId"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results.</p>",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "locationName":"maxResults"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeSpotFleetInstances.</p>"
    },
    "DescribeSpotFleetInstancesResponse":{
      "type":"structure",
      "required":[
        "SpotFleetRequestId",
        "ActiveInstances"
      ],
      "members":{
        "SpotFleetRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestId"
        },
        "ActiveInstances":{
          "shape":"ActiveInstanceSet",
          "documentation":"<p>The running instances. Note that this list is refreshed periodically and might be out of date.</p>",
          "locationName":"activeInstanceSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      },
      "documentation":"<p>Contains the output of DescribeSpotFleetInstances.</p>"
    },
    "DescribeSpotFleetRequestHistoryRequest":{
      "type":"structure",
      "required":[
        "SpotFleetRequestId",
        "StartTime"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SpotFleetRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestId"
        },
        "EventType":{
          "shape":"EventType",
          "documentation":"<p>The type of events to describe. By default, all events are described.</p>",
          "locationName":"eventType"
        },
        "StartTime":{
          "shape":"DateTime",
          "documentation":"<p>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"startTime"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results.</p>",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "locationName":"maxResults"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeSpotFleetRequestHistory.</p>"
    },
    "DescribeSpotFleetRequestHistoryResponse":{
      "type":"structure",
      "required":[
        "SpotFleetRequestId",
        "StartTime",
        "LastEvaluatedTime",
        "HistoryRecords"
      ],
      "members":{
        "SpotFleetRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestId"
        },
        "StartTime":{
          "shape":"DateTime",
          "documentation":"<p>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"startTime"
        },
        "LastEvaluatedTime":{
          "shape":"DateTime",
          "documentation":"<p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>",
          "locationName":"lastEvaluatedTime"
        },
        "HistoryRecords":{
          "shape":"HistoryRecords",
          "documentation":"<p>Information about the events in the history of the Spot fleet request.</p>",
          "locationName":"historyRecordSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      },
      "documentation":"<p>Contains the output of DescribeSpotFleetRequestHistory.</p>"
    },
    "DescribeSpotFleetRequestsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SpotFleetRequestIds":{
          "shape":"ValueStringList",
          "documentation":"<p>The IDs of the Spot fleet requests.</p>",
          "locationName":"spotFleetRequestId"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results.</p>",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "locationName":"maxResults"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeSpotFleetRequests.</p>"
    },
    "DescribeSpotFleetRequestsResponse":{
      "type":"structure",
      "required":["SpotFleetRequestConfigs"],
      "members":{
        "SpotFleetRequestConfigs":{
          "shape":"SpotFleetRequestConfigSet",
          "documentation":"<p>Information about the configuration of your Spot fleet.</p>",
          "locationName":"spotFleetRequestConfigSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      },
      "documentation":"<p>Contains the output of DescribeSpotFleetRequests.</p>"
    },
    "DescribeSpotInstanceRequestsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SpotInstanceRequestIds":{
          "shape":"SpotInstanceRequestIdList",
          "documentation":"<p>One or more Spot instance request IDs.</p>",
          "locationName":"SpotInstanceRequestId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availability-zone-group</code> - The Availability Zone group.</p> </li> <li> <p><code>create-time</code> - The time stamp when the Spot instance request was created.</p> </li> <li> <p><code>fault-code</code> - The fault code related to the request.</p> </li> <li> <p><code>fault-message</code> - The fault message related to the request.</p> </li> <li> <p><code>instance-id</code> - The ID of the instance that fulfilled the request.</p> </li> <li> <p><code>launch-group</code> - The Spot instance launch group.</p> </li> <li> <p><code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p><code>launch.block-device-mapping.device-name</code> - The device name for the Amazon EBS volume (for example, <code>/dev/sdh</code>).</p> </li> <li> <p><code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the Amazon EBS volume.</p> </li> <li> <p><code>launch.block-device-mapping.volume-size</code> - The size of the Amazon EBS volume, in GiB.</p> </li> <li> <p><code>launch.block-device-mapping.volume-type</code> - The type of the Amazon EBS volume (<code>gp2</code> | <code>standard</code> | <code>io1</code>).</p> </li> <li> <p><code>launch.group-id</code> - The security group for the instance.</p> </li> <li> <p><code>launch.image-id</code> - The ID of the AMI.</p> </li> <li> <p><code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p><code>launch.kernel-id</code> - The kernel ID.</p> </li> <li> <p><code>launch.key-name</code> - The name of the key pair the instance launched with.</p> </li> <li> <p><code>launch.monitoring-enabled</code> - Whether monitoring is enabled for the Spot instance.</p> </li> <li> <p><code>launch.ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p><code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p><code>network-interface.device-index</code> - The index of the device for the network interface attachment on the instance.</p> </li> <li> <p><code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p><code>network-interface.description</code> - A description of the network interface.</p> </li> <li> <p><code>network-interface.private-ip-address</code> - The primary private IP address of the network interface.</p> </li> <li> <p><code>network-interface.delete-on-termination</code> - Indicates whether the network interface is deleted when the instance is terminated.</p> </li> <li> <p><code>network-interface.group-id</code> - The ID of the security group associated with the network interface.</p> </li> <li> <p><code>network-interface.group-name</code> - The name of the security group associated with the network interface.</p> </li> <li> <p><code>network-interface.addresses.primary</code> - Indicates whether the IP address is the primary private IP address.</p> </li> <li> <p><code>product-description</code> - The product description associated with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p> </li> <li> <p><code>spot-instance-request-id</code> - The Spot instance request ID.</p> </li> <li> <p><code>spot-price</code> - The maximum hourly price for any Spot instance launched to fulfill the request.</p> </li> <li> <p><code>state</code> - The state of the Spot instance request (<code>open</code> | <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>). Spot bid status information can help you track your Amazon EC2 Spot instance requests. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html\">Spot Bid Status</a> in the Amazon Elastic Compute Cloud User Guide.</p> </li> <li> <p><code>status-code</code> - The short code describing the most recent evaluation of your Spot instance request.</p> </li> <li> <p><code>status-message</code> - The message explaining the status of the Spot instance request.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>type</code> - The type of Spot instance request (<code>one-time</code> | <code>persistent</code>).</p> </li> <li> <p><code>launched-availability-zone</code> - The Availability Zone in which the bid is launched.</p> </li> <li> <p><code>valid-from</code> - The start date of the request.</p> </li> <li> <p><code>valid-until</code> - The end date of the request.</p> </li> </ul>",
          "locationName":"Filter"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeSpotInstanceRequests.</p>"
    },
    "DescribeSpotInstanceRequestsResult":{
      "type":"structure",
      "members":{
        "SpotInstanceRequests":{
          "shape":"SpotInstanceRequestList",
          "documentation":"<p>One or more Spot instance requests.</p>",
          "locationName":"spotInstanceRequestSet"
        }
      },
      "documentation":"<p>Contains the output of DescribeSpotInstanceRequests.</p>"
    },
    "DescribeSpotPriceHistoryRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "StartTime":{
          "shape":"DateTime",
          "documentation":"<p>The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"startTime"
        },
        "EndTime":{
          "shape":"DateTime",
          "documentation":"<p>The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"endTime"
        },
        "InstanceTypes":{
          "shape":"InstanceTypeList",
          "documentation":"<p>Filters the results by the specified instance types.</p>",
          "locationName":"InstanceType"
        },
        "ProductDescriptions":{
          "shape":"ProductDescriptionList",
          "documentation":"<p>Filters the results by the specified basic product descriptions.</p>",
          "locationName":"ProductDescription"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availability-zone</code> - The Availability Zone for which prices should be returned.</p> </li> <li> <p><code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p><code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p> </li> <li> <p><code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p> </li> <li> <p><code>timestamp</code> - The timestamp of the Spot price history, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.</p> </li> </ul>",
          "locationName":"Filter"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>Filters the results by the specified Availability Zone.</p>",
          "locationName":"availabilityZone"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>",
          "locationName":"maxResults"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results.</p>",
          "locationName":"nextToken"
        }
      },
      "documentation":"<p>Contains the parameters for DescribeSpotPriceHistory.</p>"
    },
    "DescribeSpotPriceHistoryResult":{
      "type":"structure",
      "members":{
        "SpotPriceHistory":{
          "shape":"SpotPriceHistoryList",
          "documentation":"<p>The historical Spot prices.</p>",
          "locationName":"spotPriceHistorySet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      },
      "documentation":"<p>Contains the output of DescribeSpotPriceHistory.</p>"
    },
    "DescribeSubnetsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SubnetIds":{
          "shape":"SubnetIdStringList",
          "documentation":"<p>One or more subnet IDs.</p> <p>Default: Describes all your subnets.</p>",
          "locationName":"SubnetId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>availabilityZone</code> - The Availability Zone for the subnet. You can also use <code>availability-zone</code> as the filter name.</p> </li> <li> <p><code>available-ip-address-count</code> - The number of IP addresses in the subnet that are available.</p> </li> <li> <p><code>cidrBlock</code> - The CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidr-block</code> as the filter names.</p> </li> <li> <p><code>defaultForAz</code> - Indicates whether this is the default subnet for the Availability Zone. You can also use <code>default-for-az</code> as the filter name.</p> </li> <li> <p><code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p><code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeSubnetsResult":{
      "type":"structure",
      "members":{
        "Subnets":{
          "shape":"SubnetList",
          "documentation":"<p>Information about one or more subnets.</p>",
          "locationName":"subnetSet"
        }
      }
    },
    "DescribeTagsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>key</code> - The tag key.</p> </li> <li> <p><code>resource-id</code> - The resource ID.</p> </li> <li> <p><code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p> </li> <li> <p><code>value</code> - The tag value.</p> </li> </ul>",
          "locationName":"Filter"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. </p>",
          "locationName":"maxResults"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to retrieve the next page of results.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeTagsResult":{
      "type":"structure",
      "members":{
        "Tags":{
          "shape":"TagDescriptionList",
          "documentation":"<p>A list of tags.</p>",
          "locationName":"tagSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return..</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeVolumeAttributeRequest":{
      "type":"structure",
      "required":["VolumeId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume.</p>"
        },
        "Attribute":{
          "shape":"VolumeAttributeName",
          "documentation":"<p>The instance attribute.</p>"
        }
      }
    },
    "DescribeVolumeAttributeResult":{
      "type":"structure",
      "members":{
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume.</p>",
          "locationName":"volumeId"
        },
        "AutoEnableIO":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>The state of <code>autoEnableIO</code> attribute.</p>",
          "locationName":"autoEnableIO"
        },
        "ProductCodes":{
          "shape":"ProductCodeList",
          "documentation":"<p>A list of product codes.</p>",
          "locationName":"productCodes"
        }
      }
    },
    "DescribeVolumeStatusRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VolumeIds":{
          "shape":"VolumeIdStringList",
          "documentation":"<p>One or more volume IDs.</p> <p>Default: Describes all your volumes.</p>",
          "locationName":"VolumeId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).</p> </li> <li> <p><code>action.description</code> - A description of the action.</p> </li> <li> <p><code>action.event-id</code> - The event ID associated with the action.</p> </li> <li> <p><code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p><code>event.description</code> - A description of the event.</p> </li> <li> <p><code>event.event-id</code> - The event ID.</p> </li> <li> <p><code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code> | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).</p> </li> <li> <p><code>event.not-after</code> - The latest end time for the event.</p> </li> <li> <p><code>event.not-before</code> - The earliest start time for the event.</p> </li> <li> <p><code>volume-status.details-name</code> - The cause for <code>volume-status.status</code> (<code>io-enabled</code> | <code>io-performance</code>).</p> </li> <li> <p><code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code> (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).</p> </li> <li> <p><code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code> | <code>warning</code> | <code>insufficient-data</code>).</p> </li> </ul>",
          "locationName":"Filter"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code> request. When the results of the request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of volume results returned by <code>DescribeVolumeStatus</code> in paginated output. When this parameter is used, the request only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.</p>"
        }
      }
    },
    "DescribeVolumeStatusResult":{
      "type":"structure",
      "members":{
        "VolumeStatuses":{
          "shape":"VolumeStatusList",
          "documentation":"<p>A list of volumes.</p>",
          "locationName":"volumeStatusSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeVolumesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VolumeIds":{
          "shape":"VolumeIdStringList",
          "documentation":"<p>One or more volume IDs.</p>",
          "locationName":"VolumeId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>attachment.attach-time</code> - The time stamp when the attachment initiated.</p> </li> <li> <p><code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance termination.</p> </li> <li> <p><code>attachment.device</code> - The device name that is exposed to the instance (for example, <code>/dev/sda1</code>).</p> </li> <li> <p><code>attachment.instance-id</code> - The ID of the instance the volume is attached to.</p> </li> <li> <p><code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p><code>availability-zone</code> - The Availability Zone in which the volume was created.</p> </li> <li> <p><code>create-time</code> - The time stamp when the volume was created.</p> </li> <li> <p><code>encrypted</code> - The encryption status of the volume.</p> </li> <li> <p><code>size</code> - The size of the volume, in GiB.</p> </li> <li> <p><code>snapshot-id</code> - The snapshot from which the volume was created.</p> </li> <li> <p><code>status</code> - The status of the volume (<code>creating</code> | <code>available</code> | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>volume-id</code> - The volume ID.</p> </li> <li> <p><code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code> for General Purpose (SSD) volumes, <code>io1</code> for Provisioned IOPS (SSD) volumes, or <code>standard</code> for Magnetic volumes.</p> </li> </ul>",
          "locationName":"Filter"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.</p>",
          "locationName":"maxResults"
        }
      }
    },
    "DescribeVolumesResult":{
      "type":"structure",
      "members":{
        "Volumes":{
          "shape":"VolumeList",
          "documentation":"<p>Information about the volumes.</p>",
          "locationName":"volumeSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code> request. When the results of a <code>DescribeVolumes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeVpcAttributeRequest":{
      "type":"structure",
      "required":[
        "VpcId",
        "Attribute"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>"
        },
        "Attribute":{
          "shape":"VpcAttributeName",
          "documentation":"<p>The VPC attribute.</p>"
        }
      }
    },
    "DescribeVpcAttributeResult":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "EnableDnsSupport":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.</p>",
          "locationName":"enableDnsSupport"
        },
        "EnableDnsHostnames":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.</p>",
          "locationName":"enableDnsHostnames"
        }
      }
    },
    "DescribeVpcClassicLinkDnsSupportRequest":{
      "type":"structure",
      "members":{
        "VpcIds":{
          "shape":"VpcClassicLinkIdList",
          "documentation":"<p>One or more VPC IDs.</p>"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "locationName":"maxResults"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>The token for the next set of items to return. (You received this token from a prior call.)</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeVpcClassicLinkDnsSupportResult":{
      "type":"structure",
      "members":{
        "Vpcs":{
          "shape":"ClassicLinkDnsSupportList",
          "documentation":"<p>Information about the ClassicLink DNS support status of the VPCs.</p>",
          "locationName":"vpcs"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>The token to use when requesting the next set of items.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeVpcClassicLinkRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpcIds":{
          "shape":"VpcClassicLinkIdList",
          "documentation":"<p>One or more VPCs for which you want to describe the ClassicLink status.</p>",
          "locationName":"VpcId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeVpcClassicLinkResult":{
      "type":"structure",
      "members":{
        "Vpcs":{
          "shape":"VpcClassicLinkList",
          "documentation":"<p>The ClassicLink status of one or more VPCs.</p>",
          "locationName":"vpcSet"
        }
      }
    },
    "DescribeVpcEndpointServicesRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of items to return. (You received this token from a prior call.)</p>"
        }
      }
    },
    "DescribeVpcEndpointServicesResult":{
      "type":"structure",
      "members":{
        "ServiceNames":{
          "shape":"ValueStringList",
          "documentation":"<p>A list of supported AWS services.</p>",
          "locationName":"serviceNameSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeVpcEndpointsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "VpcEndpointIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more endpoint IDs.</p>",
          "locationName":"VpcEndpointId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>service-name</code>: The name of the AWS service.</p> </li> <li> <p><code>vpc-id</code>: The ID of the VPC in which the endpoint resides.</p> </li> <li> <p><code>vpc-endpoint-id</code>: The ID of the endpoint.</p> </li> <li> <p><code>vpc-endpoint-state</code>: The state of the endpoint. (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>)</p> </li> </ul>",
          "locationName":"Filter"
        },
        "MaxResults":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of items to return. (You received this token from a prior call.)</p>"
        }
      }
    },
    "DescribeVpcEndpointsResult":{
      "type":"structure",
      "members":{
        "VpcEndpoints":{
          "shape":"VpcEndpointSet",
          "documentation":"<p>Information about the endpoints.</p>",
          "locationName":"vpcEndpointSet"
        },
        "NextToken":{
          "shape":"String",
          "documentation":"<p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>",
          "locationName":"nextToken"
        }
      }
    },
    "DescribeVpcPeeringConnectionsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpcPeeringConnectionIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more VPC peering connection IDs.</p> <p>Default: Describes all your VPC peering connections.</p>",
          "locationName":"VpcPeeringConnectionId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>accepter-vpc-info.cidr-block</code> - The CIDR block of the peer VPC.</p> </li> <li> <p><code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the peer VPC.</p> </li> <li> <p><code>accepter-vpc-info.vpc-id</code> - The ID of the peer VPC.</p> </li> <li> <p><code>expiration-time</code> - The expiration date and time for the VPC peering connection.</p> </li> <li> <p><code>requester-vpc-info.cidr-block</code> - The CIDR block of the requester&apos;s VPC.</p> </li> <li> <p><code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the requester VPC.</p> </li> <li> <p><code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p> </li> <li> <p><code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code> | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code> | <code>deleted</code> | <code>rejected</code>).</p> </li> <li> <p><code>status-message</code> - A message that provides more information about the status of the VPC peering connection, if applicable.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeVpcPeeringConnectionsResult":{
      "type":"structure",
      "members":{
        "VpcPeeringConnections":{
          "shape":"VpcPeeringConnectionList",
          "documentation":"<p>Information about the VPC peering connections.</p>",
          "locationName":"vpcPeeringConnectionSet"
        }
      }
    },
    "DescribeVpcsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpcIds":{
          "shape":"VpcIdStringList",
          "documentation":"<p>One or more VPC IDs.</p> <p>Default: Describes all your VPCs.</p>",
          "locationName":"VpcId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>cidr</code> - The CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li> <li> <p><code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p><code>isDefault</code> - Indicates whether the VPC is the default VPC.</p> </li> <li> <p><code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeVpcsResult":{
      "type":"structure",
      "members":{
        "Vpcs":{
          "shape":"VpcList",
          "documentation":"<p>Information about one or more VPCs.</p>",
          "locationName":"vpcSet"
        }
      }
    },
    "DescribeVpnConnectionsRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpnConnectionIds":{
          "shape":"VpnConnectionIdStringList",
          "documentation":"<p>One or more VPN connection IDs.</p> <p>Default: Describes your VPN connections.</p>",
          "locationName":"VpnConnectionId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p> </li> <li> <p><code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p> </li> <li> <p><code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p><code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p> </li> <li> <p><code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p> </li> <li> <p><code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p><code>vpn-connection-id</code> - The ID of the VPN connection.</p> </li> <li> <p><code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeVpnConnectionsResult":{
      "type":"structure",
      "members":{
        "VpnConnections":{
          "shape":"VpnConnectionList",
          "documentation":"<p>Information about one or more VPN connections.</p>",
          "locationName":"vpnConnectionSet"
        }
      }
    },
    "DescribeVpnGatewaysRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpnGatewayIds":{
          "shape":"VpnGatewayIdStringList",
          "documentation":"<p>One or more virtual private gateway IDs.</p> <p>Default: Describes all your virtual private gateways.</p>",
          "locationName":"VpnGatewayId"
        },
        "Filters":{
          "shape":"FilterList",
          "documentation":"<p>One or more filters.</p> <ul> <li> <p><code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p><code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p><code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p> </li> <li> <p><code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p><code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p><code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p><code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p><code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p><code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p> </li> </ul>",
          "locationName":"Filter"
        }
      }
    },
    "DescribeVpnGatewaysResult":{
      "type":"structure",
      "members":{
        "VpnGateways":{
          "shape":"VpnGatewayList",
          "documentation":"<p>Information about one or more virtual private gateways.</p>",
          "locationName":"vpnGatewaySet"
        }
      }
    },
    "DetachClassicLinkVpcRequest":{
      "type":"structure",
      "required":[
        "InstanceId",
        "VpcId"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance to unlink from the VPC.</p>",
          "locationName":"instanceId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p> The ID of the VPC to which the instance is linked.</p>",
          "locationName":"vpcId"
        }
      }
    },
    "DetachClassicLinkVpcResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>",
          "locationName":"return"
        }
      }
    },
    "DetachInternetGatewayRequest":{
      "type":"structure",
      "required":[
        "InternetGatewayId",
        "VpcId"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InternetGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the Internet gateway.</p>",
          "locationName":"internetGatewayId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        }
      }
    },
    "DetachNetworkInterfaceRequest":{
      "type":"structure",
      "required":["AttachmentId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "AttachmentId":{
          "shape":"String",
          "documentation":"<p>The ID of the attachment.</p>",
          "locationName":"attachmentId"
        },
        "Force":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to force a detachment.</p>",
          "locationName":"force"
        }
      }
    },
    "DetachVolumeRequest":{
      "type":"structure",
      "required":["VolumeId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume.</p>"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>"
        },
        "Device":{
          "shape":"String",
          "documentation":"<p>The device name.</p>"
        },
        "Force":{
          "shape":"Boolean",
          "documentation":"<p>Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.</p>"
        }
      }
    },
    "DetachVpnGatewayRequest":{
      "type":"structure",
      "required":[
        "VpnGatewayId",
        "VpcId"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpnGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the virtual private gateway.</p>"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>"
        }
      }
    },
    "DeviceType":{
      "type":"string",
      "enum":[
        "ebs",
        "instance-store"
      ]
    },
    "DhcpConfiguration":{
      "type":"structure",
      "members":{
        "Key":{
          "shape":"String",
          "documentation":"<p>The name of a DHCP option.</p>",
          "locationName":"key"
        },
        "Values":{
          "shape":"DhcpConfigurationValueList",
          "documentation":"<p>One or more values for the DHCP option.</p>",
          "locationName":"valueSet"
        }
      },
      "documentation":"<p>Describes a DHCP configuration option.</p>"
    },
    "DhcpConfigurationList":{
      "type":"list",
      "member":{
        "shape":"DhcpConfiguration",
        "locationName":"item"
      }
    },
    "DhcpConfigurationValueList":{
      "type":"list",
      "member":{
        "shape":"AttributeValue",
        "locationName":"item"
      }
    },
    "DhcpOptions":{
      "type":"structure",
      "members":{
        "DhcpOptionsId":{
          "shape":"String",
          "documentation":"<p>The ID of the set of DHCP options.</p>",
          "locationName":"dhcpOptionsId"
        },
        "DhcpConfigurations":{
          "shape":"DhcpConfigurationList",
          "documentation":"<p>One or more DHCP options in the set.</p>",
          "locationName":"dhcpConfigurationSet"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the DHCP options set.</p>",
          "locationName":"tagSet"
        }
      },
      "documentation":"<p>Describes a set of DHCP options.</p>"
    },
    "DhcpOptionsIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"DhcpOptionsId"
      }
    },
    "DhcpOptionsList":{
      "type":"list",
      "member":{
        "shape":"DhcpOptions",
        "locationName":"item"
      }
    },
    "DisableVgwRoutePropagationRequest":{
      "type":"structure",
      "required":[
        "RouteTableId",
        "GatewayId"
      ],
      "members":{
        "RouteTableId":{
          "shape":"String",
          "documentation":"<p>The ID of the route table.</p>"
        },
        "GatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the virtual private gateway.</p>"
        }
      }
    },
    "DisableVpcClassicLinkDnsSupportRequest":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>"
        }
      }
    },
    "DisableVpcClassicLinkDnsSupportResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>",
          "locationName":"return"
        }
      }
    },
    "DisableVpcClassicLinkRequest":{
      "type":"structure",
      "required":["VpcId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        }
      }
    },
    "DisableVpcClassicLinkResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>",
          "locationName":"return"
        }
      }
    },
    "DisassociateAddressRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</p>"
        },
        "AssociationId":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The association ID. Required for EC2-VPC.</p>"
        }
      }
    },
    "DisassociateRouteTableRequest":{
      "type":"structure",
      "required":["AssociationId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "AssociationId":{
          "shape":"String",
          "documentation":"<p>The association ID representing the current association between the route table and subnet.</p>",
          "locationName":"associationId"
        }
      }
    },
    "DiskImage":{
      "type":"structure",
      "members":{
        "Image":{
          "shape":"DiskImageDetail",
          "documentation":"<p>Information about the disk image.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the disk image.</p>"
        },
        "Volume":{
          "shape":"VolumeDetail",
          "documentation":"<p>Information about the volume.</p>"
        }
      },
      "documentation":"<p>Describes a disk image.</p>"
    },
    "DiskImageDescription":{
      "type":"structure",
      "required":[
        "Format",
        "Size",
        "ImportManifestUrl"
      ],
      "members":{
        "Format":{
          "shape":"DiskImageFormat",
          "documentation":"<p>The disk image format.</p>",
          "locationName":"format"
        },
        "Size":{
          "shape":"Long",
          "documentation":"<p>The size of the disk image, in GiB.</p>",
          "locationName":"size"
        },
        "ImportManifestUrl":{
          "shape":"String",
          "documentation":"<p>A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html\">VM Import Manifest</a>.</p>",
          "locationName":"importManifestUrl"
        },
        "Checksum":{
          "shape":"String",
          "documentation":"<p>The checksum computed for the disk image.</p>",
          "locationName":"checksum"
        }
      },
      "documentation":"<p>Describes a disk image.</p>"
    },
    "DiskImageDetail":{
      "type":"structure",
      "required":[
        "Format",
        "Bytes",
        "ImportManifestUrl"
      ],
      "members":{
        "Format":{
          "shape":"DiskImageFormat",
          "documentation":"<p>The disk image format.</p>",
          "locationName":"format"
        },
        "Bytes":{
          "shape":"Long",
          "documentation":"<p>The size of the disk image, in GiB.</p>",
          "locationName":"bytes"
        },
        "ImportManifestUrl":{
          "shape":"String",
          "documentation":"<p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html\">VM Import Manifest</a>.</p>",
          "locationName":"importManifestUrl"
        }
      },
      "documentation":"<p>Describes a disk image.</p>"
    },
    "DiskImageFormat":{
      "type":"string",
      "enum":[
        "VMDK",
        "RAW",
        "VHD"
      ]
    },
    "DiskImageList":{
      "type":"list",
      "member":{"shape":"DiskImage"}
    },
    "DiskImageVolumeDescription":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Size":{
          "shape":"Long",
          "documentation":"<p>The size of the volume, in GiB.</p>",
          "locationName":"size"
        },
        "Id":{
          "shape":"String",
          "documentation":"<p>The volume identifier.</p>",
          "locationName":"id"
        }
      },
      "documentation":"<p>Describes a disk image volume.</p>"
    },
    "DomainType":{
      "type":"string",
      "enum":[
        "vpc",
        "standard"
      ]
    },
    "Double":{"type":"double"},
    "EbsBlockDevice":{
      "type":"structure",
      "members":{
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the snapshot.</p>",
          "locationName":"snapshotId"
        },
        "VolumeSize":{
          "shape":"Integer",
          "documentation":"<p>The size of the volume, in GiB.</p> <p>Constraints: <code>1-1024</code> for <code>standard</code> volumes, <code>1-16384</code> for <code>gp2</code> volumes, and <code>4-16384</code> for <code>io1</code> volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>",
          "locationName":"volumeSize"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the EBS volume is deleted on instance termination.</p>",
          "locationName":"deleteOnTermination"
        },
        "VolumeType":{
          "shape":"VolumeType",
          "documentation":"<p>The volume type. <code>gp2</code> for General Purpose (SSD) volumes, <code>io1</code> for Provisioned IOPS (SSD) volumes, and <code>standard</code> for Magnetic volumes.</p> <p>Default: <code>standard</code></p>",
          "locationName":"volumeType"
        },
        "Iops":{
          "shape":"Integer",
          "documentation":"<p>The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose (SSD) volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose (SSD) baseline performance, I/O credits, and bursting, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100 to 20000 for Provisioned IOPS (SSD) volumes and 3 to 10000 for General Purpose (SSD) volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code> volumes; it is not used in requests to create <code>standard</code> or <code>gp2</code> volumes.</p>",
          "locationName":"iops"
        },
        "Encrypted":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the EBS volume is encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption.</p>",
          "locationName":"encrypted"
        }
      },
      "documentation":"<p>Describes a block device for an EBS volume.</p>"
    },
    "EbsInstanceBlockDevice":{
      "type":"structure",
      "members":{
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the EBS volume.</p>",
          "locationName":"volumeId"
        },
        "Status":{
          "shape":"AttachmentStatus",
          "documentation":"<p>The attachment state.</p>",
          "locationName":"status"
        },
        "AttachTime":{
          "shape":"DateTime",
          "documentation":"<p>The time stamp when the attachment initiated.</p>",
          "locationName":"attachTime"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the volume is deleted on instance termination.</p>",
          "locationName":"deleteOnTermination"
        }
      },
      "documentation":"<p>Describes a parameter used to set up an EBS volume in a block device mapping.</p>"
    },
    "EbsInstanceBlockDeviceSpecification":{
      "type":"structure",
      "members":{
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the EBS volume.</p>",
          "locationName":"volumeId"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the volume is deleted on instance termination.</p>",
          "locationName":"deleteOnTermination"
        }
      }
    },
    "EnableVgwRoutePropagationRequest":{
      "type":"structure",
      "required":[
        "RouteTableId",
        "GatewayId"
      ],
      "members":{
        "RouteTableId":{
          "shape":"String",
          "documentation":"<p>The ID of the route table.</p>"
        },
        "GatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the virtual private gateway.</p>"
        }
      }
    },
    "EnableVolumeIORequest":{
      "type":"structure",
      "required":["VolumeId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume.</p>",
          "locationName":"volumeId"
        }
      }
    },
    "EnableVpcClassicLinkDnsSupportRequest":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC. </p>"
        }
      }
    },
    "EnableVpcClassicLinkDnsSupportResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>",
          "locationName":"return"
        }
      }
    },
    "EnableVpcClassicLinkRequest":{
      "type":"structure",
      "required":["VpcId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        }
      }
    },
    "EnableVpcClassicLinkResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>",
          "locationName":"return"
        }
      }
    },
    "EventCode":{
      "type":"string",
      "enum":[
        "instance-reboot",
        "system-reboot",
        "system-maintenance",
        "instance-retirement",
        "instance-stop"
      ]
    },
    "EventInformation":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance. This information is available only for <code>instanceChange</code> events.</p>",
          "locationName":"instanceId"
        },
        "EventSubType":{
          "shape":"String",
          "documentation":"<p>The event.</p> <p>The following are the <code>error</code> events.</p> <ul> <li> <p><code>iamFleetRoleInvalid</code> - The Spot fleet did not have the required permissions either to launch or terminate an instance.</p> </li> <li> <p><code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.</p> </li> <li> <p><code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid. For more information, see the description of the event.</p> </li> <li> <p><code>spotInstanceCountLimitExceeded</code> - You've reached the limit on the number of Spot instances that you can launch.</p> </li> </ul> <p>The following are the <code>fleetRequestChange</code> events.</p> <ul> <li> <p><code>active</code> - The Spot fleet has been validated and Amazon EC2 is attempting to maintain the target number of running Spot instances.</p> </li> <li> <p><code>cancelled</code> - The Spot fleet is canceled and has no running Spot instances. The Spot fleet will be deleted two days after its instances were terminated.</p> </li> <li> <p><code>cancelled_running</code> - The Spot fleet is canceled and will not launch additional Spot instances, but its existing Spot instances continue to run until they are interrupted or terminated.</p> </li> <li> <p><code>cancelled_terminating</code> - The Spot fleet is canceled and its Spot instances are terminating.</p> </li> <li> <p><code>expired</code> - The Spot fleet request has expired. A subsequent event indicates that the instances were terminated, if the request was created with <code>TerminateInstancesWithExpiration</code> set.</p> </li> <li> <p><code>modify_in_progress</code> - A request to modify the Spot fleet request was accepted and is in progress.</p> </li> <li> <p><code>modify_successful</code> - The Spot fleet request was modified.</p> </li> <li> <p><code>price_update</code> - The bid price for a launch configuration was adjusted because it was too high. This change is permanent.</p> </li> <li> <p><code>submitted</code> - The Spot fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of Spot instances.</p> </li> </ul> <p>The following are the <code>instanceChange</code> events.</p> <ul> <li> <p><code>launched</code> - A bid was fulfilled and a new instance was launched.</p> </li> <li> <p><code>terminated</code> - An instance was terminated by the user.</p> </li> </ul>",
          "locationName":"eventSubType"
        },
        "EventDescription":{
          "shape":"String",
          "documentation":"<p>The description of the event.</p>",
          "locationName":"eventDescription"
        }
      },
      "documentation":"<p>Describes a Spot fleet event.</p>"
    },
    "EventType":{
      "type":"string",
      "enum":[
        "instanceChange",
        "fleetRequestChange",
        "error"
      ]
    },
    "ExcessCapacityTerminationPolicy":{
      "type":"string",
      "enum":[
        "noTermination",
        "default"
      ]
    },
    "ExecutableByStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ExecutableBy"
      }
    },
    "ExportEnvironment":{
      "type":"string",
      "enum":[
        "citrix",
        "vmware",
        "microsoft"
      ]
    },
    "ExportTask":{
      "type":"structure",
      "members":{
        "ExportTaskId":{
          "shape":"String",
          "documentation":"<p>The ID of the export task.</p>",
          "locationName":"exportTaskId"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the resource being exported.</p>",
          "locationName":"description"
        },
        "State":{
          "shape":"ExportTaskState",
          "documentation":"<p>The state of the export task.</p>",
          "locationName":"state"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>The status message related to the export task.</p>",
          "locationName":"statusMessage"
        },
        "InstanceExportDetails":{
          "shape":"InstanceExportDetails",
          "documentation":"<p>Information about the instance to export.</p>",
          "locationName":"instanceExport"
        },
        "ExportToS3Task":{
          "shape":"ExportToS3Task",
          "documentation":"<p>Information about the export task.</p>",
          "locationName":"exportToS3"
        }
      },
      "documentation":"<p>Describes an instance export task.</p>"
    },
    "ExportTaskIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ExportTaskId"
      }
    },
    "ExportTaskList":{
      "type":"list",
      "member":{
        "shape":"ExportTask",
        "locationName":"item"
      }
    },
    "ExportTaskState":{
      "type":"string",
      "enum":[
        "active",
        "cancelling",
        "cancelled",
        "completed"
      ]
    },
    "ExportToS3Task":{
      "type":"structure",
      "members":{
        "DiskImageFormat":{
          "shape":"DiskImageFormat",
          "documentation":"<p>The format for the exported image.</p>",
          "locationName":"diskImageFormat"
        },
        "ContainerFormat":{
          "shape":"ContainerFormat",
          "documentation":"<p>The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.</p>",
          "locationName":"containerFormat"
        },
        "S3Bucket":{
          "shape":"String",
          "documentation":"<p>The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.</p>",
          "locationName":"s3Bucket"
        },
        "S3Key":{
          "shape":"String",
          "documentation":"<p>The encryption key for your S3 bucket.</p>",
          "locationName":"s3Key"
        }
      },
      "documentation":"<p>Describes the format and location for an instance export task.</p>"
    },
    "ExportToS3TaskSpecification":{
      "type":"structure",
      "members":{
        "DiskImageFormat":{
          "shape":"DiskImageFormat",
          "documentation":"<p>The format for the exported image.</p>",
          "locationName":"diskImageFormat"
        },
        "ContainerFormat":{
          "shape":"ContainerFormat",
          "documentation":"<p>The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.</p>",
          "locationName":"containerFormat"
        },
        "S3Bucket":{
          "shape":"String",
          "documentation":"<p>The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.</p>",
          "locationName":"s3Bucket"
        },
        "S3Prefix":{
          "shape":"String",
          "documentation":"<p>The image is written to a single object in the S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.</p>",
          "locationName":"s3Prefix"
        }
      },
      "documentation":"<p>Describes an instance export task.</p>"
    },
    "Filter":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"String",
          "documentation":"<p>The name of the filter. Filter names are case-sensitive.</p>"
        },
        "Values":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more filter values. Filter values are case-sensitive.</p>",
          "locationName":"Value"
        }
      },
      "documentation":"<p>A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria, such as tags, attributes, or IDs.</p>"
    },
    "FilterList":{
      "type":"list",
      "member":{
        "shape":"Filter",
        "locationName":"Filter"
      }
    },
    "Float":{"type":"float"},
    "FlowLog":{
      "type":"structure",
      "members":{
        "CreationTime":{
          "shape":"DateTime",
          "documentation":"<p>The date and time the flow log was created.</p>",
          "locationName":"creationTime"
        },
        "FlowLogId":{
          "shape":"String",
          "documentation":"<p>The flow log ID.</p>",
          "locationName":"flowLogId"
        },
        "FlowLogStatus":{
          "shape":"String",
          "documentation":"<p>The status of the flow log (<code>ACTIVE</code>).</p>",
          "locationName":"flowLogStatus"
        },
        "ResourceId":{
          "shape":"String",
          "documentation":"<p>The ID of the resource on which the flow log was created.</p>",
          "locationName":"resourceId"
        },
        "TrafficType":{
          "shape":"TrafficType",
          "documentation":"<p>The type of traffic captured for the flow log.</p>",
          "locationName":"trafficType"
        },
        "LogGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the flow log group.</p>",
          "locationName":"logGroupName"
        },
        "DeliverLogsStatus":{
          "shape":"String",
          "documentation":"<p>The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p>",
          "locationName":"deliverLogsStatus"
        },
        "DeliverLogsErrorMessage":{
          "shape":"String",
          "documentation":"<p>Information about the error that occurred. <code>Rate limited</code> indicates that CloudWatch logs throttling has been applied for one or more network interfaces, or that you've reached the limit on the number of CloudWatch Logs log groups that you can create. <code>Access error</code> indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. <code>Unknown error</code> indicates an internal error.</p>",
          "locationName":"deliverLogsErrorMessage"
        },
        "DeliverLogsPermissionArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the IAM role that posts logs to CloudWatch Logs.</p>",
          "locationName":"deliverLogsPermissionArn"
        }
      },
      "documentation":"<p>Describes a flow log.</p>"
    },
    "FlowLogSet":{
      "type":"list",
      "member":{
        "shape":"FlowLog",
        "locationName":"item"
      }
    },
    "FlowLogsResourceType":{
      "type":"string",
      "enum":[
        "VPC",
        "Subnet",
        "NetworkInterface"
      ]
    },
    "GatewayType":{
      "type":"string",
      "enum":["ipsec.1"]
    },
    "GetConsoleOutputRequest":{
      "type":"structure",
      "required":["InstanceId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>"
        }
      }
    },
    "GetConsoleOutputResult":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "Timestamp":{
          "shape":"DateTime",
          "documentation":"<p>The time the output was last updated.</p>",
          "locationName":"timestamp"
        },
        "Output":{
          "shape":"String",
          "documentation":"<p>The console output, Base64 encoded. If using a command line tool, the tools decode the output for you. </p>",
          "locationName":"output"
        }
      }
    },
    "GetPasswordDataRequest":{
      "type":"structure",
      "required":["InstanceId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the Windows instance.</p>"
        }
      }
    },
    "GetPasswordDataResult":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the Windows instance.</p>",
          "locationName":"instanceId"
        },
        "Timestamp":{
          "shape":"DateTime",
          "documentation":"<p>The time the data was last updated.</p>",
          "locationName":"timestamp"
        },
        "PasswordData":{
          "shape":"String",
          "documentation":"<p>The password of the instance.</p>",
          "locationName":"passwordData"
        }
      }
    },
    "GroupIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"groupId"
      }
    },
    "GroupIdentifier":{
      "type":"structure",
      "members":{
        "GroupName":{
          "shape":"String",
          "documentation":"<p>The name of the security group.</p>",
          "locationName":"groupName"
        },
        "GroupId":{
          "shape":"String",
          "documentation":"<p>The ID of the security group.</p>",
          "locationName":"groupId"
        }
      },
      "documentation":"<p>Describes a security group.</p>"
    },
    "GroupIdentifierList":{
      "type":"list",
      "member":{
        "shape":"GroupIdentifier",
        "locationName":"item"
      }
    },
    "GroupNameStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"GroupName"
      }
    },
    "HistoryRecord":{
      "type":"structure",
      "required":[
        "Timestamp",
        "EventType",
        "EventInformation"
      ],
      "members":{
        "Timestamp":{
          "shape":"DateTime",
          "documentation":"<p>The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"timestamp"
        },
        "EventType":{
          "shape":"EventType",
          "documentation":"<p>The event type.</p> <ul> <li> <p><code>error</code> - Indicates an error with the Spot fleet request.</p> </li> <li> <p><code>fleetRequestChange</code> - Indicates a change in the status or configuration of the Spot fleet request.</p> </li> <li> <p><code>instanceChange</code> - Indicates that an instance was launched or terminated.</p> </li> </ul>",
          "locationName":"eventType"
        },
        "EventInformation":{
          "shape":"EventInformation",
          "documentation":"<p>Information about the event.</p>",
          "locationName":"eventInformation"
        }
      },
      "documentation":"<p>Describes an event in the history of the Spot fleet request.</p>"
    },
    "HistoryRecords":{
      "type":"list",
      "member":{
        "shape":"HistoryRecord",
        "locationName":"item"
      }
    },
    "Host":{
      "type":"structure",
      "members":{
        "HostId":{
          "shape":"String",
          "documentation":"<p>The ID of the Dedicated host.</p>",
          "locationName":"hostId"
        },
        "AutoPlacement":{
          "shape":"AutoPlacement",
          "documentation":"<p>Whether auto-placement is on or off.</p>",
          "locationName":"autoPlacement"
        },
        "HostReservationId":{
          "shape":"String",
          "documentation":"<p>The reservation ID of the Dedicated host. This returns a <code>null</code> response if the Dedicated host doesn't have an associated reservation.</p>",
          "locationName":"hostReservationId"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p>",
          "locationName":"clientToken"
        },
        "HostProperties":{
          "shape":"HostProperties",
          "documentation":"<p>The hardware specifications of the Dedicated host.</p>",
          "locationName":"hostProperties"
        },
        "State":{
          "shape":"AllocationState",
          "documentation":"<p>The Dedicated host's state.</p>",
          "locationName":"state"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone of the Dedicated host.</p>",
          "locationName":"availabilityZone"
        },
        "Instances":{
          "shape":"HostInstanceList",
          "documentation":"<p>The IDs and instance type that are currently running on the Dedicated host.</p>",
          "locationName":"instances"
        },
        "AvailableCapacity":{
          "shape":"AvailableCapacity",
          "documentation":"<p>The number of new instances that can be launched onto the Dedicated host.</p>",
          "locationName":"availableCapacity"
        }
      },
      "documentation":"<p>Describes the properties of the Dedicated host.</p>"
    },
    "HostInstance":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>the IDs of instances that are running on the Dedicated host.</p>",
          "locationName":"instanceId"
        },
        "InstanceType":{
          "shape":"String",
          "documentation":"<p>The instance type size (e.g., m3.medium) of the running instance.</p>",
          "locationName":"instanceType"
        }
      }
    },
    "HostInstanceList":{
      "type":"list",
      "member":{
        "shape":"HostInstance",
        "locationName":"item"
      }
    },
    "HostList":{
      "type":"list",
      "member":{
        "shape":"Host",
        "locationName":"item"
      }
    },
    "HostProperties":{
      "type":"structure",
      "members":{
        "Sockets":{
          "shape":"Integer",
          "documentation":"<p>The number of sockets on the Dedicated host.</p>",
          "locationName":"sockets"
        },
        "Cores":{
          "shape":"Integer",
          "documentation":"<p>The number of cores on the Dedicated host.</p>",
          "locationName":"cores"
        },
        "TotalVCpus":{
          "shape":"Integer",
          "documentation":"<p>The number of vCPUs on the Dedicated host.</p>",
          "locationName":"totalVCpus"
        },
        "InstanceType":{
          "shape":"String",
          "documentation":"<p>The instance type size that the Dedicated host supports (e.g., m3.medium).</p>",
          "locationName":"instanceType"
        }
      }
    },
    "HostTenancy":{
      "type":"string",
      "enum":[
        "dedicated",
        "host"
      ]
    },
    "HypervisorType":{
      "type":"string",
      "enum":[
        "ovm",
        "xen"
      ]
    },
    "IamInstanceProfile":{
      "type":"structure",
      "members":{
        "Arn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the instance profile.</p>",
          "locationName":"arn"
        },
        "Id":{
          "shape":"String",
          "documentation":"<p>The ID of the instance profile.</p>",
          "locationName":"id"
        }
      },
      "documentation":"<p>Describes an IAM instance profile.</p>"
    },
    "IamInstanceProfileSpecification":{
      "type":"structure",
      "members":{
        "Arn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the instance profile.</p>",
          "locationName":"arn"
        },
        "Name":{
          "shape":"String",
          "documentation":"<p>The name of the instance profile.</p>",
          "locationName":"name"
        }
      },
      "documentation":"<p>Describes an IAM instance profile.</p>"
    },
    "IcmpTypeCode":{
      "type":"structure",
      "members":{
        "Type":{
          "shape":"Integer",
          "documentation":"<p>The ICMP code. A value of -1 means all codes for the specified ICMP type.</p>",
          "locationName":"type"
        },
        "Code":{
          "shape":"Integer",
          "documentation":"<p>The ICMP type. A value of -1 means all types.</p>",
          "locationName":"code"
        }
      },
      "documentation":"<p>Describes the ICMP type and code.</p>"
    },
    "IdFormat":{
      "type":"structure",
      "members":{
        "Resource":{
          "shape":"String",
          "documentation":"<p>The type of resource.</p>",
          "locationName":"resource"
        },
        "UseLongIds":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether longer IDs (17-character IDs) are enabled for the resource.</p>",
          "locationName":"useLongIds"
        },
        "Deadline":{
          "shape":"DateTime",
          "documentation":"<p>The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.</p>",
          "locationName":"deadline"
        }
      },
      "documentation":"<p>Describes the ID format for a resource.</p>"
    },
    "IdFormatList":{
      "type":"list",
      "member":{
        "shape":"IdFormat",
        "locationName":"item"
      }
    },
    "Image":{
      "type":"structure",
      "members":{
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>",
          "locationName":"imageId"
        },
        "ImageLocation":{
          "shape":"String",
          "documentation":"<p>The location of the AMI.</p>",
          "locationName":"imageLocation"
        },
        "State":{
          "shape":"ImageState",
          "documentation":"<p>The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance.</p>",
          "locationName":"imageState"
        },
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the image owner.</p>",
          "locationName":"imageOwnerId"
        },
        "CreationDate":{
          "shape":"String",
          "documentation":"<p>The date and time the image was created.</p>",
          "locationName":"creationDate"
        },
        "Public":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.</p>",
          "locationName":"isPublic"
        },
        "ProductCodes":{
          "shape":"ProductCodeList",
          "documentation":"<p>Any product codes associated with the AMI.</p>",
          "locationName":"productCodes"
        },
        "Architecture":{
          "shape":"ArchitectureValues",
          "documentation":"<p>The architecture of the image.</p>",
          "locationName":"architecture"
        },
        "ImageType":{
          "shape":"ImageTypeValues",
          "documentation":"<p>The type of image.</p>",
          "locationName":"imageType"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The kernel associated with the image, if any. Only applicable for machine images.</p>",
          "locationName":"kernelId"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The RAM disk associated with the image, if any. Only applicable for machine images.</p>",
          "locationName":"ramdiskId"
        },
        "Platform":{
          "shape":"PlatformValues",
          "documentation":"<p>The value is <code>Windows</code> for Windows AMIs; otherwise blank.</p>",
          "locationName":"platform"
        },
        "SriovNetSupport":{
          "shape":"String",
          "documentation":"<p>Specifies whether enhanced networking is enabled.</p>",
          "locationName":"sriovNetSupport"
        },
        "StateReason":{
          "shape":"StateReason",
          "documentation":"<p>The reason for the state change.</p>",
          "locationName":"stateReason"
        },
        "ImageOwnerAlias":{
          "shape":"String",
          "documentation":"<p>The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or the AWS account ID of the AMI owner.</p>",
          "locationName":"imageOwnerAlias"
        },
        "Name":{
          "shape":"String",
          "documentation":"<p>The name of the AMI that was provided during image creation.</p>",
          "locationName":"name"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description of the AMI that was provided during image creation.</p>",
          "locationName":"description"
        },
        "RootDeviceType":{
          "shape":"DeviceType",
          "documentation":"<p>The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.</p>",
          "locationName":"rootDeviceType"
        },
        "RootDeviceName":{
          "shape":"String",
          "documentation":"<p>The device name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p>",
          "locationName":"rootDeviceName"
        },
        "BlockDeviceMappings":{
          "shape":"BlockDeviceMappingList",
          "documentation":"<p>Any block device mapping entries.</p>",
          "locationName":"blockDeviceMapping"
        },
        "VirtualizationType":{
          "shape":"VirtualizationType",
          "documentation":"<p>The type of virtualization of the AMI.</p>",
          "locationName":"virtualizationType"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the image.</p>",
          "locationName":"tagSet"
        },
        "Hypervisor":{
          "shape":"HypervisorType",
          "documentation":"<p>The hypervisor type of the image.</p>",
          "locationName":"hypervisor"
        }
      },
      "documentation":"<p>Describes an image.</p>"
    },
    "ImageAttribute":{
      "type":"structure",
      "members":{
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>",
          "locationName":"imageId"
        },
        "LaunchPermissions":{
          "shape":"LaunchPermissionList",
          "documentation":"<p>One or more launch permissions.</p>",
          "locationName":"launchPermission"
        },
        "ProductCodes":{
          "shape":"ProductCodeList",
          "documentation":"<p>One or more product codes.</p>",
          "locationName":"productCodes"
        },
        "KernelId":{
          "shape":"AttributeValue",
          "documentation":"<p>The kernel ID.</p>",
          "locationName":"kernel"
        },
        "RamdiskId":{
          "shape":"AttributeValue",
          "documentation":"<p>The RAM disk ID.</p>",
          "locationName":"ramdisk"
        },
        "Description":{
          "shape":"AttributeValue",
          "documentation":"<p>A description for the AMI.</p>",
          "locationName":"description"
        },
        "SriovNetSupport":{
          "shape":"AttributeValue",
          "locationName":"sriovNetSupport"
        },
        "BlockDeviceMappings":{
          "shape":"BlockDeviceMappingList",
          "documentation":"<p>One or more block device mapping entries.</p>",
          "locationName":"blockDeviceMapping"
        }
      },
      "documentation":"<p>Describes an image attribute.</p>"
    },
    "ImageAttributeName":{
      "type":"string",
      "enum":[
        "description",
        "kernel",
        "ramdisk",
        "launchPermission",
        "productCodes",
        "blockDeviceMapping",
        "sriovNetSupport"
      ]
    },
    "ImageDiskContainer":{
      "type":"structure",
      "members":{
        "Description":{
          "shape":"String",
          "documentation":"<p>The description of the disk image.</p>"
        },
        "Format":{
          "shape":"String",
          "documentation":"<p>The format of the disk image being imported.</p> <p>Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code></p>"
        },
        "Url":{
          "shape":"String",
          "documentation":"<p>The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an Amazon S3 URL (s3://..)</p>"
        },
        "UserBucket":{
          "shape":"UserBucket",
          "documentation":"<p>The S3 bucket for the disk image.</p>"
        },
        "DeviceName":{
          "shape":"String",
          "documentation":"<p>The block device mapping for the disk.</p>"
        },
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the EBS snapshot to be used for importing the snapshot.</p>"
        }
      },
      "documentation":"<p>Describes the disk container object for an import image task.</p>"
    },
    "ImageDiskContainerList":{
      "type":"list",
      "member":{
        "shape":"ImageDiskContainer",
        "locationName":"item"
      }
    },
    "ImageIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ImageId"
      }
    },
    "ImageList":{
      "type":"list",
      "member":{
        "shape":"Image",
        "locationName":"item"
      }
    },
    "ImageState":{
      "type":"string",
      "enum":[
        "pending",
        "available",
        "invalid",
        "deregistered",
        "transient",
        "failed",
        "error"
      ]
    },
    "ImageTypeValues":{
      "type":"string",
      "enum":[
        "machine",
        "kernel",
        "ramdisk"
      ]
    },
    "ImportImageRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description string for the import image task.</p>"
        },
        "DiskContainers":{
          "shape":"ImageDiskContainerList",
          "documentation":"<p>Information about the disk containers.</p>",
          "locationName":"DiskContainer"
        },
        "LicenseType":{
          "shape":"String",
          "documentation":"<p>The license type to be used for the Amazon Machine Image (AMI) after importing.</p> <p><b>Note:</b> You may only use BYOL if you have existing licenses with rights to use these licenses in a third party cloud like AWS. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/VMImportPrerequisites.html\">VM Import/Export Prerequisites</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Valid values: <code>AWS</code> | <code>BYOL</code></p>"
        },
        "Hypervisor":{
          "shape":"String",
          "documentation":"<p>The target hypervisor platform.</p> <p>Valid values: <code>xen</code></p>"
        },
        "Architecture":{
          "shape":"String",
          "documentation":"<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code></p>"
        },
        "Platform":{
          "shape":"String",
          "documentation":"<p>The operating system of the virtual machine.</p> <p>Valid values: <code>Windows</code> | <code>Linux</code></p>"
        },
        "ClientData":{
          "shape":"ClientData",
          "documentation":"<p>The client-specific data.</p>"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>The token to enable idempotency for VM import requests.</p>"
        },
        "RoleName":{
          "shape":"String",
          "documentation":"<p>The name of the role to use when not using the default role, 'vmimport'.</p>"
        }
      }
    },
    "ImportImageResult":{
      "type":"structure",
      "members":{
        "ImportTaskId":{
          "shape":"String",
          "documentation":"<p>The task ID of the import image task.</p>",
          "locationName":"importTaskId"
        },
        "Architecture":{
          "shape":"String",
          "documentation":"<p>The architecture of the virtual machine.</p>",
          "locationName":"architecture"
        },
        "LicenseType":{
          "shape":"String",
          "documentation":"<p>The license type of the virtual machine.</p>",
          "locationName":"licenseType"
        },
        "Platform":{
          "shape":"String",
          "documentation":"<p>The operating system of the virtual machine.</p>",
          "locationName":"platform"
        },
        "Hypervisor":{
          "shape":"String",
          "documentation":"<p>The target hypervisor of the import task.</p>",
          "locationName":"hypervisor"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the import task.</p>",
          "locationName":"description"
        },
        "SnapshotDetails":{
          "shape":"SnapshotDetailList",
          "documentation":"<p>Information about the snapshots.</p>",
          "locationName":"snapshotDetailSet"
        },
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the Amazon Machine Image (AMI) created by the import task.</p>",
          "locationName":"imageId"
        },
        "Progress":{
          "shape":"String",
          "documentation":"<p>The progress of the task.</p>",
          "locationName":"progress"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>A detailed status message of the import task.</p>",
          "locationName":"statusMessage"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>A brief status of the task.</p>",
          "locationName":"status"
        }
      }
    },
    "ImportImageTask":{
      "type":"structure",
      "members":{
        "ImportTaskId":{
          "shape":"String",
          "documentation":"<p>The ID of the import image task.</p>",
          "locationName":"importTaskId"
        },
        "Architecture":{
          "shape":"String",
          "documentation":"<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code></p>",
          "locationName":"architecture"
        },
        "LicenseType":{
          "shape":"String",
          "documentation":"<p>The license type of the virtual machine.</p>",
          "locationName":"licenseType"
        },
        "Platform":{
          "shape":"String",
          "documentation":"<p>The description string for the import image task.</p>",
          "locationName":"platform"
        },
        "Hypervisor":{
          "shape":"String",
          "documentation":"<p>The target hypervisor for the import task.</p> <p>Valid values: <code>xen</code></p>",
          "locationName":"hypervisor"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the import task.</p>",
          "locationName":"description"
        },
        "SnapshotDetails":{
          "shape":"SnapshotDetailList",
          "documentation":"<p>Information about the snapshots.</p>",
          "locationName":"snapshotDetailSet"
        },
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the Amazon Machine Image (AMI) of the imported virtual machine.</p>",
          "locationName":"imageId"
        },
        "Progress":{
          "shape":"String",
          "documentation":"<p>The percentage of progress of the import image task.</p>",
          "locationName":"progress"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>A descriptive status message for the import image task.</p>",
          "locationName":"statusMessage"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>A brief status for the import image task.</p>",
          "locationName":"status"
        }
      },
      "documentation":"<p>Describes an import image task.</p>"
    },
    "ImportImageTaskList":{
      "type":"list",
      "member":{
        "shape":"ImportImageTask",
        "locationName":"item"
      }
    },
    "ImportInstanceLaunchSpecification":{
      "type":"structure",
      "members":{
        "Architecture":{
          "shape":"ArchitectureValues",
          "documentation":"<p>The architecture of the instance.</p>",
          "locationName":"architecture"
        },
        "GroupNames":{
          "shape":"SecurityGroupStringList",
          "documentation":"<p>One or more security group names.</p>",
          "locationName":"GroupName"
        },
        "GroupIds":{
          "shape":"SecurityGroupIdStringList",
          "documentation":"<p>One or more security group IDs.</p>",
          "locationName":"GroupId"
        },
        "AdditionalInfo":{
          "shape":"String",
          "documentation":"<p>Reserved.</p>",
          "locationName":"additionalInfo"
        },
        "UserData":{
          "shape":"UserData",
          "documentation":"<p>The Base64-encoded MIME user data to be made available to the instance.</p>",
          "locationName":"userData"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type. For more information about the instance types that you can import, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/VMImportPrerequisites.html\">Before You Get Started</a> in the Amazon Elastic Compute Cloud User Guide.</p>",
          "locationName":"instanceType"
        },
        "Placement":{
          "shape":"Placement",
          "documentation":"<p>The placement information for the instance.</p>",
          "locationName":"placement"
        },
        "Monitoring":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether monitoring is enabled.</p>",
          "locationName":"monitoring"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The ID of the subnet in which to launch the instance.</p>",
          "locationName":"subnetId"
        },
        "InstanceInitiatedShutdownBehavior":{
          "shape":"ShutdownBehavior",
          "documentation":"<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p>",
          "locationName":"instanceInitiatedShutdownBehavior"
        },
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] An available IP address from the IP address range of the subnet.</p>",
          "locationName":"privateIpAddress"
        }
      },
      "documentation":"<p>Describes the launch specification for VM import.</p>"
    },
    "ImportInstanceRequest":{
      "type":"structure",
      "required":["Platform"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description for the instance being imported.</p>",
          "locationName":"description"
        },
        "LaunchSpecification":{
          "shape":"ImportInstanceLaunchSpecification",
          "documentation":"<p>The launch specification.</p>",
          "locationName":"launchSpecification"
        },
        "DiskImages":{
          "shape":"DiskImageList",
          "documentation":"<p>The disk image.</p>",
          "locationName":"diskImage"
        },
        "Platform":{
          "shape":"PlatformValues",
          "documentation":"<p>The instance operating system.</p>",
          "locationName":"platform"
        }
      }
    },
    "ImportInstanceResult":{
      "type":"structure",
      "members":{
        "ConversionTask":{
          "shape":"ConversionTask",
          "documentation":"<p>Information about the conversion task.</p>",
          "locationName":"conversionTask"
        }
      }
    },
    "ImportInstanceTaskDetails":{
      "type":"structure",
      "required":["Volumes"],
      "members":{
        "Volumes":{
          "shape":"ImportInstanceVolumeDetailSet",
          "documentation":"<p>One or more volumes.</p>",
          "locationName":"volumes"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "Platform":{
          "shape":"PlatformValues",
          "documentation":"<p>The instance operating system.</p>",
          "locationName":"platform"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the task.</p>",
          "locationName":"description"
        }
      },
      "documentation":"<p>Describes an import instance task.</p>"
    },
    "ImportInstanceVolumeDetailItem":{
      "type":"structure",
      "required":[
        "BytesConverted",
        "AvailabilityZone",
        "Image",
        "Volume",
        "Status"
      ],
      "members":{
        "BytesConverted":{
          "shape":"Long",
          "documentation":"<p>The number of bytes converted so far.</p>",
          "locationName":"bytesConverted"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone where the resulting instance will reside.</p>",
          "locationName":"availabilityZone"
        },
        "Image":{
          "shape":"DiskImageDescription",
          "documentation":"<p>The image.</p>",
          "locationName":"image"
        },
        "Volume":{
          "shape":"DiskImageVolumeDescription",
          "documentation":"<p>The volume.</p>",
          "locationName":"volume"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>The status of the import of this particular disk image.</p>",
          "locationName":"status"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>The status information or errors related to the disk image.</p>",
          "locationName":"statusMessage"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the task.</p>",
          "locationName":"description"
        }
      },
      "documentation":"<p>Describes an import volume task.</p>"
    },
    "ImportInstanceVolumeDetailSet":{
      "type":"list",
      "member":{
        "shape":"ImportInstanceVolumeDetailItem",
        "locationName":"item"
      }
    },
    "ImportKeyPairRequest":{
      "type":"structure",
      "required":[
        "KeyName",
        "PublicKeyMaterial"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "KeyName":{
          "shape":"String",
          "documentation":"<p>A unique name for the key pair.</p>",
          "locationName":"keyName"
        },
        "PublicKeyMaterial":{
          "shape":"Blob",
          "documentation":"<p>The public key. You must base64 encode the public key material before sending it to AWS.</p>",
          "locationName":"publicKeyMaterial"
        }
      }
    },
    "ImportKeyPairResult":{
      "type":"structure",
      "members":{
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The key pair name you provided.</p>",
          "locationName":"keyName"
        },
        "KeyFingerprint":{
          "shape":"String",
          "documentation":"<p>The MD5 public key fingerprint as specified in section 4 of RFC 4716.</p>",
          "locationName":"keyFingerprint"
        }
      }
    },
    "ImportSnapshotRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description string for the import snapshot task.</p>"
        },
        "DiskContainer":{
          "shape":"SnapshotDiskContainer",
          "documentation":"<p>Information about the disk container.</p>"
        },
        "ClientData":{
          "shape":"ClientData",
          "documentation":"<p>The client-specific data.</p>"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>Token to enable idempotency for VM import requests.</p>"
        },
        "RoleName":{
          "shape":"String",
          "documentation":"<p>The name of the role to use when not using the default role, 'vmimport'.</p>"
        }
      }
    },
    "ImportSnapshotResult":{
      "type":"structure",
      "members":{
        "ImportTaskId":{
          "shape":"String",
          "documentation":"<p>The ID of the import snapshot task.</p>",
          "locationName":"importTaskId"
        },
        "SnapshotTaskDetail":{
          "shape":"SnapshotTaskDetail",
          "documentation":"<p>Information about the import snapshot task.</p>",
          "locationName":"snapshotTaskDetail"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the import snapshot task.</p>",
          "locationName":"description"
        }
      }
    },
    "ImportSnapshotTask":{
      "type":"structure",
      "members":{
        "ImportTaskId":{
          "shape":"String",
          "documentation":"<p>The ID of the import snapshot task.</p>",
          "locationName":"importTaskId"
        },
        "SnapshotTaskDetail":{
          "shape":"SnapshotTaskDetail",
          "documentation":"<p>Describes an import snapshot task.</p>",
          "locationName":"snapshotTaskDetail"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the import snapshot task.</p>",
          "locationName":"description"
        }
      },
      "documentation":"<p>Describes an import snapshot task.</p>"
    },
    "ImportSnapshotTaskList":{
      "type":"list",
      "member":{
        "shape":"ImportSnapshotTask",
        "locationName":"item"
      }
    },
    "ImportTaskIdList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ImportTaskId"
      }
    },
    "ImportVolumeRequest":{
      "type":"structure",
      "required":[
        "AvailabilityZone",
        "Image",
        "Volume"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone for the resulting EBS volume.</p>",
          "locationName":"availabilityZone"
        },
        "Image":{
          "shape":"DiskImageDetail",
          "documentation":"<p>The disk image.</p>",
          "locationName":"image"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the volume.</p>",
          "locationName":"description"
        },
        "Volume":{
          "shape":"VolumeDetail",
          "documentation":"<p>The volume size.</p>",
          "locationName":"volume"
        }
      }
    },
    "ImportVolumeResult":{
      "type":"structure",
      "members":{
        "ConversionTask":{
          "shape":"ConversionTask",
          "documentation":"<p>Information about the conversion task.</p>",
          "locationName":"conversionTask"
        }
      }
    },
    "ImportVolumeTaskDetails":{
      "type":"structure",
      "required":[
        "BytesConverted",
        "AvailabilityZone",
        "Image",
        "Volume"
      ],
      "members":{
        "BytesConverted":{
          "shape":"Long",
          "documentation":"<p>The number of bytes converted so far.</p>",
          "locationName":"bytesConverted"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone where the resulting volume will reside.</p>",
          "locationName":"availabilityZone"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description you provided when starting the import volume task.</p>",
          "locationName":"description"
        },
        "Image":{
          "shape":"DiskImageDescription",
          "documentation":"<p>The image.</p>",
          "locationName":"image"
        },
        "Volume":{
          "shape":"DiskImageVolumeDescription",
          "documentation":"<p>The volume.</p>",
          "locationName":"volume"
        }
      },
      "documentation":"<p>Describes an import volume task.</p>"
    },
    "Instance":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI used to launch the instance.</p>",
          "locationName":"imageId"
        },
        "State":{
          "shape":"InstanceState",
          "documentation":"<p>The current state of the instance.</p>",
          "locationName":"instanceState"
        },
        "PrivateDnsName":{
          "shape":"String",
          "documentation":"<p>The private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.</p>",
          "locationName":"privateDnsName"
        },
        "PublicDnsName":{
          "shape":"String",
          "documentation":"<p>The public DNS name assigned to the instance. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.</p>",
          "locationName":"dnsName"
        },
        "StateTransitionReason":{
          "shape":"String",
          "documentation":"<p>The reason for the most recent state transition. This might be an empty string.</p>",
          "locationName":"reason"
        },
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair, if this instance was launched with an associated key pair.</p>",
          "locationName":"keyName"
        },
        "AmiLaunchIndex":{
          "shape":"Integer",
          "documentation":"<p>The AMI launch index, which can be used to find this instance in the launch group.</p>",
          "locationName":"amiLaunchIndex"
        },
        "ProductCodes":{
          "shape":"ProductCodeList",
          "documentation":"<p>The product codes attached to this instance, if applicable.</p>",
          "locationName":"productCodes"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type.</p>",
          "locationName":"instanceType"
        },
        "LaunchTime":{
          "shape":"DateTime",
          "documentation":"<p>The time the instance was launched.</p>",
          "locationName":"launchTime"
        },
        "Placement":{
          "shape":"Placement",
          "documentation":"<p>The location where the instance launched, if applicable.</p>",
          "locationName":"placement"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The kernel associated with this instance, if applicable.</p>",
          "locationName":"kernelId"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The RAM disk associated with this instance, if applicable.</p>",
          "locationName":"ramdiskId"
        },
        "Platform":{
          "shape":"PlatformValues",
          "documentation":"<p>The value is <code>Windows</code> for Windows instances; otherwise blank.</p>",
          "locationName":"platform"
        },
        "Monitoring":{
          "shape":"Monitoring",
          "documentation":"<p>The monitoring information for the instance.</p>",
          "locationName":"monitoring"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The ID of the subnet in which the instance is running.</p>",
          "locationName":"subnetId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The ID of the VPC in which the instance is running.</p>",
          "locationName":"vpcId"
        },
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The private IP address assigned to the instance.</p>",
          "locationName":"privateIpAddress"
        },
        "PublicIpAddress":{
          "shape":"String",
          "documentation":"<p>The public IP address assigned to the instance, if applicable.</p>",
          "locationName":"ipAddress"
        },
        "StateReason":{
          "shape":"StateReason",
          "documentation":"<p>The reason for the most recent state transition.</p>",
          "locationName":"stateReason"
        },
        "Architecture":{
          "shape":"ArchitectureValues",
          "documentation":"<p>The architecture of the image.</p>",
          "locationName":"architecture"
        },
        "RootDeviceType":{
          "shape":"DeviceType",
          "documentation":"<p>The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.</p>",
          "locationName":"rootDeviceType"
        },
        "RootDeviceName":{
          "shape":"String",
          "documentation":"<p>The root device name (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p>",
          "locationName":"rootDeviceName"
        },
        "BlockDeviceMappings":{
          "shape":"InstanceBlockDeviceMappingList",
          "documentation":"<p>Any block device mapping entries for the instance.</p>",
          "locationName":"blockDeviceMapping"
        },
        "VirtualizationType":{
          "shape":"VirtualizationType",
          "documentation":"<p>The virtualization type of the instance.</p>",
          "locationName":"virtualizationType"
        },
        "InstanceLifecycle":{
          "shape":"InstanceLifecycleType",
          "documentation":"<p>Indicates whether this is a Spot instance or a Scheduled Instance.</p>",
          "locationName":"instanceLifecycle"
        },
        "SpotInstanceRequestId":{
          "shape":"String",
          "documentation":"<p>If the request is a Spot instance request, the ID of the request.</p>",
          "locationName":"spotInstanceRequestId"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>The idempotency token you provided when you launched the instance, if applicable.</p>",
          "locationName":"clientToken"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the instance.</p>",
          "locationName":"tagSet"
        },
        "SecurityGroups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>One or more security groups for the instance.</p>",
          "locationName":"groupSet"
        },
        "SourceDestCheck":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the instance to perform NAT. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>",
          "locationName":"sourceDestCheck"
        },
        "Hypervisor":{
          "shape":"HypervisorType",
          "documentation":"<p>The hypervisor type of the instance.</p>",
          "locationName":"hypervisor"
        },
        "NetworkInterfaces":{
          "shape":"InstanceNetworkInterfaceList",
          "documentation":"<p>[EC2-VPC] One or more network interfaces for the instance.</p>",
          "locationName":"networkInterfaceSet"
        },
        "IamInstanceProfile":{
          "shape":"IamInstanceProfile",
          "documentation":"<p>The IAM instance profile associated with the instance, if applicable.</p>",
          "locationName":"iamInstanceProfile"
        },
        "EbsOptimized":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>",
          "locationName":"ebsOptimized"
        },
        "SriovNetSupport":{
          "shape":"String",
          "documentation":"<p>Specifies whether enhanced networking is enabled. </p>",
          "locationName":"sriovNetSupport"
        }
      },
      "documentation":"<p>Describes an instance.</p>"
    },
    "InstanceAttribute":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "InstanceType":{
          "shape":"AttributeValue",
          "documentation":"<p>The instance type.</p>",
          "locationName":"instanceType"
        },
        "KernelId":{
          "shape":"AttributeValue",
          "documentation":"<p>The kernel ID.</p>",
          "locationName":"kernel"
        },
        "RamdiskId":{
          "shape":"AttributeValue",
          "documentation":"<p>The RAM disk ID.</p>",
          "locationName":"ramdisk"
        },
        "UserData":{
          "shape":"AttributeValue",
          "documentation":"<p>The Base64-encoded MIME user data.</p>",
          "locationName":"userData"
        },
        "DisableApiTermination":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>If the value is <code>true</code>, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.</p>",
          "locationName":"disableApiTermination"
        },
        "InstanceInitiatedShutdownBehavior":{
          "shape":"AttributeValue",
          "documentation":"<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p>",
          "locationName":"instanceInitiatedShutdownBehavior"
        },
        "RootDeviceName":{
          "shape":"AttributeValue",
          "documentation":"<p>The name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p>",
          "locationName":"rootDeviceName"
        },
        "BlockDeviceMappings":{
          "shape":"InstanceBlockDeviceMappingList",
          "documentation":"<p>The block device mapping of the instance.</p>",
          "locationName":"blockDeviceMapping"
        },
        "ProductCodes":{
          "shape":"ProductCodeList",
          "documentation":"<p>A list of product codes.</p>",
          "locationName":"productCodes"
        },
        "EbsOptimized":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether the instance is optimized for EBS I/O.</p>",
          "locationName":"ebsOptimized"
        },
        "SriovNetSupport":{
          "shape":"AttributeValue",
          "locationName":"sriovNetSupport"
        },
        "SourceDestCheck":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether source/destination checking is enabled. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT.</p>",
          "locationName":"sourceDestCheck"
        },
        "Groups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>The security groups associated with the instance.</p>",
          "locationName":"groupSet"
        }
      },
      "documentation":"<p>Describes an instance attribute.</p>"
    },
    "InstanceAttributeName":{
      "type":"string",
      "enum":[
        "instanceType",
        "kernel",
        "ramdisk",
        "userData",
        "disableApiTermination",
        "instanceInitiatedShutdownBehavior",
        "rootDeviceName",
        "blockDeviceMapping",
        "productCodes",
        "sourceDestCheck",
        "groupSet",
        "ebsOptimized",
        "sriovNetSupport"
      ]
    },
    "InstanceBlockDeviceMapping":{
      "type":"structure",
      "members":{
        "DeviceName":{
          "shape":"String",
          "documentation":"<p>The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>",
          "locationName":"deviceName"
        },
        "Ebs":{
          "shape":"EbsInstanceBlockDevice",
          "documentation":"<p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>",
          "locationName":"ebs"
        }
      },
      "documentation":"<p>Describes a block device mapping.</p>"
    },
    "InstanceBlockDeviceMappingList":{
      "type":"list",
      "member":{
        "shape":"InstanceBlockDeviceMapping",
        "locationName":"item"
      }
    },
    "InstanceBlockDeviceMappingSpecification":{
      "type":"structure",
      "members":{
        "DeviceName":{
          "shape":"String",
          "documentation":"<p>The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>",
          "locationName":"deviceName"
        },
        "Ebs":{
          "shape":"EbsInstanceBlockDeviceSpecification",
          "documentation":"<p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>",
          "locationName":"ebs"
        },
        "VirtualName":{
          "shape":"String",
          "documentation":"<p>The virtual device name.</p>",
          "locationName":"virtualName"
        },
        "NoDevice":{
          "shape":"String",
          "documentation":"<p>suppress the specified device included in the block device mapping.</p>",
          "locationName":"noDevice"
        }
      },
      "documentation":"<p>Describes a block device mapping entry.</p>"
    },
    "InstanceBlockDeviceMappingSpecificationList":{
      "type":"list",
      "member":{
        "shape":"InstanceBlockDeviceMappingSpecification",
        "locationName":"item"
      }
    },
    "InstanceCapacity":{
      "type":"structure",
      "members":{
        "InstanceType":{
          "shape":"String",
          "documentation":"<p>The instance type size supported by the Dedicated host.</p>",
          "locationName":"instanceType"
        },
        "AvailableCapacity":{
          "shape":"Integer",
          "documentation":"<p>The number of instances that can still be launched onto the Dedicated host.</p>",
          "locationName":"availableCapacity"
        },
        "TotalCapacity":{
          "shape":"Integer",
          "documentation":"<p>The total number of instances that can be launched onto the Dedicated host.</p>",
          "locationName":"totalCapacity"
        }
      },
      "documentation":"<p>Information about the instance type that the Dedicated host supports.</p>"
    },
    "InstanceCount":{
      "type":"structure",
      "members":{
        "State":{
          "shape":"ListingState",
          "documentation":"<p>The states of the listed Reserved Instances.</p>",
          "locationName":"state"
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of listed Reserved Instances in the state specified by the <code>state</code>.</p>",
          "locationName":"instanceCount"
        }
      },
      "documentation":"<p>Describes a Reserved Instance listing state.</p>"
    },
    "InstanceCountList":{
      "type":"list",
      "member":{
        "shape":"InstanceCount",
        "locationName":"item"
      }
    },
    "InstanceExportDetails":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the resource being exported.</p>",
          "locationName":"instanceId"
        },
        "TargetEnvironment":{
          "shape":"ExportEnvironment",
          "documentation":"<p>The target virtualization environment.</p>",
          "locationName":"targetEnvironment"
        }
      },
      "documentation":"<p>Describes an instance to export.</p>"
    },
    "InstanceIdSet":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"item"
      }
    },
    "InstanceIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"InstanceId"
      }
    },
    "InstanceLifecycleType":{
      "type":"string",
      "enum":[
        "spot",
        "scheduled"
      ]
    },
    "InstanceList":{
      "type":"list",
      "member":{
        "shape":"Instance",
        "locationName":"item"
      }
    },
    "InstanceMonitoring":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "Monitoring":{
          "shape":"Monitoring",
          "documentation":"<p>The monitoring information.</p>",
          "locationName":"monitoring"
        }
      },
      "documentation":"<p>Describes the monitoring information of the instance.</p>"
    },
    "InstanceMonitoringList":{
      "type":"list",
      "member":{
        "shape":"InstanceMonitoring",
        "locationName":"item"
      }
    },
    "InstanceNetworkInterface":{
      "type":"structure",
      "members":{
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet.</p>",
          "locationName":"subnetId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description.</p>",
          "locationName":"description"
        },
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The ID of the AWS account that created the network interface.</p>",
          "locationName":"ownerId"
        },
        "Status":{
          "shape":"NetworkInterfaceStatus",
          "documentation":"<p>The status of the network interface.</p>",
          "locationName":"status"
        },
        "MacAddress":{
          "shape":"String",
          "documentation":"<p>The MAC address.</p>",
          "locationName":"macAddress"
        },
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The IP address of the network interface within the subnet.</p>",
          "locationName":"privateIpAddress"
        },
        "PrivateDnsName":{
          "shape":"String",
          "documentation":"<p>The private DNS name.</p>",
          "locationName":"privateDnsName"
        },
        "SourceDestCheck":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether to validate network traffic to or from this network interface.</p>",
          "locationName":"sourceDestCheck"
        },
        "Groups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>One or more security groups.</p>",
          "locationName":"groupSet"
        },
        "Attachment":{
          "shape":"InstanceNetworkInterfaceAttachment",
          "documentation":"<p>The network interface attachment.</p>",
          "locationName":"attachment"
        },
        "Association":{
          "shape":"InstanceNetworkInterfaceAssociation",
          "documentation":"<p>The association information for an Elastic IP associated with the network interface.</p>",
          "locationName":"association"
        },
        "PrivateIpAddresses":{
          "shape":"InstancePrivateIpAddressList",
          "documentation":"<p>The private IP addresses associated with the network interface.</p>",
          "locationName":"privateIpAddressesSet"
        }
      },
      "documentation":"<p>Describes a network interface.</p>"
    },
    "InstanceNetworkInterfaceAssociation":{
      "type":"structure",
      "members":{
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>The public IP address or Elastic IP address bound to the network interface.</p>",
          "locationName":"publicIp"
        },
        "PublicDnsName":{
          "shape":"String",
          "documentation":"<p>The public DNS name.</p>",
          "locationName":"publicDnsName"
        },
        "IpOwnerId":{
          "shape":"String",
          "documentation":"<p>The ID of the owner of the Elastic IP address.</p>",
          "locationName":"ipOwnerId"
        }
      },
      "documentation":"<p>Describes association information for an Elastic IP address.</p>"
    },
    "InstanceNetworkInterfaceAttachment":{
      "type":"structure",
      "members":{
        "AttachmentId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface attachment.</p>",
          "locationName":"attachmentId"
        },
        "DeviceIndex":{
          "shape":"Integer",
          "documentation":"<p>The index of the device on the instance for the network interface attachment.</p>",
          "locationName":"deviceIndex"
        },
        "Status":{
          "shape":"AttachmentStatus",
          "documentation":"<p>The attachment state.</p>",
          "locationName":"status"
        },
        "AttachTime":{
          "shape":"DateTime",
          "documentation":"<p>The time stamp when the attachment initiated.</p>",
          "locationName":"attachTime"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the network interface is deleted when the instance is terminated.</p>",
          "locationName":"deleteOnTermination"
        }
      },
      "documentation":"<p>Describes a network interface attachment.</p>"
    },
    "InstanceNetworkInterfaceList":{
      "type":"list",
      "member":{
        "shape":"InstanceNetworkInterface",
        "locationName":"item"
      }
    },
    "InstanceNetworkInterfaceSpecification":{
      "type":"structure",
      "members":{
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "DeviceIndex":{
          "shape":"Integer",
          "documentation":"<p>The index of the device on the instance for the network interface attachment. If you are specifying a network interface in a <a>RunInstances</a> request, you must provide the device index.</p>",
          "locationName":"deviceIndex"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet associated with the network string. Applies only if creating a network interface when launching an instance.</p>",
          "locationName":"subnetId"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description of the network interface. Applies only if creating a network interface when launching an instance.</p>",
          "locationName":"description"
        },
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The private IP address of the network interface. Applies only if creating a network interface when launching an instance.</p>",
          "locationName":"privateIpAddress"
        },
        "Groups":{
          "shape":"SecurityGroupIdStringList",
          "documentation":"<p>The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.</p>",
          "locationName":"SecurityGroupId"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>If set to <code>true</code>, the interface is deleted when the instance is terminated. You can specify <code>true</code> only if creating a new network interface when launching an instance.</p>",
          "locationName":"deleteOnTermination"
        },
        "PrivateIpAddresses":{
          "shape":"PrivateIpAddressSpecificationList",
          "documentation":"<p>One or more private IP addresses to assign to the network interface. Only one private IP address can be designated as primary.</p>",
          "locationName":"privateIpAddressesSet",
          "queryName":"PrivateIpAddresses"
        },
        "SecondaryPrivateIpAddressCount":{
          "shape":"Integer",
          "documentation":"<p>The number of secondary private IP addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option.</p>",
          "locationName":"secondaryPrivateIpAddressCount"
        },
        "AssociatePublicIpAddress":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether to assign a public IP address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.</p>",
          "locationName":"associatePublicIpAddress"
        }
      },
      "documentation":"<p>Describes a network interface.</p>"
    },
    "InstanceNetworkInterfaceSpecificationList":{
      "type":"list",
      "member":{
        "shape":"InstanceNetworkInterfaceSpecification",
        "locationName":"item"
      }
    },
    "InstancePrivateIpAddress":{
      "type":"structure",
      "members":{
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The private IP address of the network interface.</p>",
          "locationName":"privateIpAddress"
        },
        "PrivateDnsName":{
          "shape":"String",
          "documentation":"<p>The private DNS name.</p>",
          "locationName":"privateDnsName"
        },
        "Primary":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether this IP address is the primary private IP address of the network interface.</p>",
          "locationName":"primary"
        },
        "Association":{
          "shape":"InstanceNetworkInterfaceAssociation",
          "documentation":"<p>The association information for an Elastic IP address for the network interface.</p>",
          "locationName":"association"
        }
      },
      "documentation":"<p>Describes a private IP address.</p>"
    },
    "InstancePrivateIpAddressList":{
      "type":"list",
      "member":{
        "shape":"InstancePrivateIpAddress",
        "locationName":"item"
      }
    },
    "InstanceState":{
      "type":"structure",
      "members":{
        "Code":{
          "shape":"Integer",
          "documentation":"<p>The low byte represents the state. The high byte is an opaque internal value and should be ignored.</p> <ul> <li><p><code>0</code> : <code>pending</code></p></li> <li><p><code>16</code> : <code>running</code></p></li> <li><p><code>32</code> : <code>shutting-down</code></p></li> <li><p><code>48</code> : <code>terminated</code></p></li> <li><p><code>64</code> : <code>stopping</code></p></li> <li><p><code>80</code> : <code>stopped</code></p></li> </ul>",
          "locationName":"code"
        },
        "Name":{
          "shape":"InstanceStateName",
          "documentation":"<p>The current state of the instance.</p>",
          "locationName":"name"
        }
      },
      "documentation":"<p>Describes the current state of the instance.</p>"
    },
    "InstanceStateChange":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "CurrentState":{
          "shape":"InstanceState",
          "documentation":"<p>The current state of the instance.</p>",
          "locationName":"currentState"
        },
        "PreviousState":{
          "shape":"InstanceState",
          "documentation":"<p>The previous state of the instance.</p>",
          "locationName":"previousState"
        }
      },
      "documentation":"<p>Describes an instance state change.</p>"
    },
    "InstanceStateChangeList":{
      "type":"list",
      "member":{
        "shape":"InstanceStateChange",
        "locationName":"item"
      }
    },
    "InstanceStateName":{
      "type":"string",
      "enum":[
        "pending",
        "running",
        "shutting-down",
        "terminated",
        "stopping",
        "stopped"
      ]
    },
    "InstanceStatus":{
      "type":"structure",
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone of the instance.</p>",
          "locationName":"availabilityZone"
        },
        "Events":{
          "shape":"InstanceStatusEventList",
          "documentation":"<p>Any scheduled events associated with the instance.</p>",
          "locationName":"eventsSet"
        },
        "InstanceState":{
          "shape":"InstanceState",
          "documentation":"<p>The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state.</p>",
          "locationName":"instanceState"
        },
        "SystemStatus":{
          "shape":"InstanceStatusSummary",
          "documentation":"<p>Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.</p>",
          "locationName":"systemStatus"
        },
        "InstanceStatus":{
          "shape":"InstanceStatusSummary",
          "documentation":"<p>Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.</p>",
          "locationName":"instanceStatus"
        }
      },
      "documentation":"<p>Describes the status of an instance.</p>"
    },
    "InstanceStatusDetails":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"StatusName",
          "documentation":"<p>The type of instance status.</p>",
          "locationName":"name"
        },
        "Status":{
          "shape":"StatusType",
          "documentation":"<p>The status.</p>",
          "locationName":"status"
        },
        "ImpairedSince":{
          "shape":"DateTime",
          "documentation":"<p>The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.</p>",
          "locationName":"impairedSince"
        }
      },
      "documentation":"<p>Describes the instance status.</p>"
    },
    "InstanceStatusDetailsList":{
      "type":"list",
      "member":{
        "shape":"InstanceStatusDetails",
        "locationName":"item"
      }
    },
    "InstanceStatusEvent":{
      "type":"structure",
      "members":{
        "Code":{
          "shape":"EventCode",
          "documentation":"<p>The event code.</p>",
          "locationName":"code"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the event.</p> <p>After a scheduled event is completed, it can still be described for up to a week. If the event has been completed, this description starts with the following text: [Completed].</p>",
          "locationName":"description"
        },
        "NotBefore":{
          "shape":"DateTime",
          "documentation":"<p>The earliest scheduled start time for the event.</p>",
          "locationName":"notBefore"
        },
        "NotAfter":{
          "shape":"DateTime",
          "documentation":"<p>The latest scheduled end time for the event.</p>",
          "locationName":"notAfter"
        }
      },
      "documentation":"<p>Describes a scheduled event for an instance.</p>"
    },
    "InstanceStatusEventList":{
      "type":"list",
      "member":{
        "shape":"InstanceStatusEvent",
        "locationName":"item"
      }
    },
    "InstanceStatusList":{
      "type":"list",
      "member":{
        "shape":"InstanceStatus",
        "locationName":"item"
      }
    },
    "InstanceStatusSummary":{
      "type":"structure",
      "members":{
        "Status":{
          "shape":"SummaryStatus",
          "documentation":"<p>The status.</p>",
          "locationName":"status"
        },
        "Details":{
          "shape":"InstanceStatusDetailsList",
          "documentation":"<p>The system instance health or application instance health.</p>",
          "locationName":"details"
        }
      },
      "documentation":"<p>Describes the status of an instance.</p>"
    },
    "InstanceType":{
      "type":"string",
      "enum":[
        "t1.micro",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "cr1.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "cc1.4xlarge",
        "cc2.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "cg1.4xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge"
      ]
    },
    "InstanceTypeList":{
      "type":"list",
      "member":{"shape":"InstanceType"}
    },
    "Integer":{"type":"integer"},
    "InternetGateway":{
      "type":"structure",
      "members":{
        "InternetGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the Internet gateway.</p>",
          "locationName":"internetGatewayId"
        },
        "Attachments":{
          "shape":"InternetGatewayAttachmentList",
          "documentation":"<p>Any VPCs attached to the Internet gateway.</p>",
          "locationName":"attachmentSet"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the Internet gateway.</p>",
          "locationName":"tagSet"
        }
      },
      "documentation":"<p>Describes an Internet gateway.</p>"
    },
    "InternetGatewayAttachment":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "State":{
          "shape":"AttachmentStatus",
          "documentation":"<p>The current state of the attachment.</p>",
          "locationName":"state"
        }
      },
      "documentation":"<p>Describes the attachment of a VPC to an Internet gateway.</p>"
    },
    "InternetGatewayAttachmentList":{
      "type":"list",
      "member":{
        "shape":"InternetGatewayAttachment",
        "locationName":"item"
      }
    },
    "InternetGatewayList":{
      "type":"list",
      "member":{
        "shape":"InternetGateway",
        "locationName":"item"
      }
    },
    "IpPermission":{
      "type":"structure",
      "members":{
        "IpProtocol":{
          "shape":"String",
          "documentation":"<p>The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers</a>). </p> <p>[EC2-VPC only] When you authorize or revoke security group rules, you can use <code>-1</code> to specify all.</p>",
          "locationName":"ipProtocol"
        },
        "FromPort":{
          "shape":"Integer",
          "documentation":"<p>The start of port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types.</p>",
          "locationName":"fromPort"
        },
        "ToPort":{
          "shape":"Integer",
          "documentation":"<p>The end of port range for the TCP and UDP protocols, or an ICMP code. A value of <code>-1</code> indicates all ICMP codes for the specified ICMP type.</p>",
          "locationName":"toPort"
        },
        "UserIdGroupPairs":{
          "shape":"UserIdGroupPairList",
          "documentation":"<p>One or more security group and AWS account ID pairs.</p>",
          "locationName":"groups"
        },
        "IpRanges":{
          "shape":"IpRangeList",
          "documentation":"<p>One or more IP ranges.</p>",
          "locationName":"ipRanges"
        },
        "PrefixListIds":{
          "shape":"PrefixListIdList",
          "documentation":"<p>(Valid for <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupEgress</a> and <a>DescribeSecurityGroups</a> only) One or more prefix list IDs for an AWS service. In an <a>AuthorizeSecurityGroupEgress</a> request, this is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.</p>",
          "locationName":"prefixListIds"
        }
      },
      "documentation":"<p>Describes a security group rule.</p>"
    },
    "IpPermissionList":{
      "type":"list",
      "member":{
        "shape":"IpPermission",
        "locationName":"item"
      }
    },
    "IpRange":{
      "type":"structure",
      "members":{
        "CidrIp":{
          "shape":"String",
          "documentation":"<p>The CIDR range. You can either specify a CIDR range or a source security group, not both.</p>",
          "locationName":"cidrIp"
        }
      },
      "documentation":"<p>Describes an IP range.</p>"
    },
    "IpRangeList":{
      "type":"list",
      "member":{
        "shape":"IpRange",
        "locationName":"item"
      }
    },
    "KeyNameStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"KeyName"
      }
    },
    "KeyPair":{
      "type":"structure",
      "members":{
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair.</p>",
          "locationName":"keyName"
        },
        "KeyFingerprint":{
          "shape":"String",
          "documentation":"<p>The SHA-1 digest of the DER encoded private key.</p>",
          "locationName":"keyFingerprint"
        },
        "KeyMaterial":{
          "shape":"String",
          "documentation":"<p>An unencrypted PEM encoded RSA private key.</p>",
          "locationName":"keyMaterial"
        }
      },
      "documentation":"<p>Describes a key pair.</p>"
    },
    "KeyPairInfo":{
      "type":"structure",
      "members":{
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair.</p>",
          "locationName":"keyName"
        },
        "KeyFingerprint":{
          "shape":"String",
          "documentation":"<p>If you used <a>CreateKeyPair</a> to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used <a>ImportKeyPair</a> to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.</p>",
          "locationName":"keyFingerprint"
        }
      },
      "documentation":"<p>Describes a key pair.</p>"
    },
    "KeyPairList":{
      "type":"list",
      "member":{
        "shape":"KeyPairInfo",
        "locationName":"item"
      }
    },
    "LaunchPermission":{
      "type":"structure",
      "members":{
        "UserId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID.</p>",
          "locationName":"userId"
        },
        "Group":{
          "shape":"PermissionGroup",
          "documentation":"<p>The name of the group.</p>",
          "locationName":"group"
        }
      },
      "documentation":"<p>Describes a launch permission.</p>"
    },
    "LaunchPermissionList":{
      "type":"list",
      "member":{
        "shape":"LaunchPermission",
        "locationName":"item"
      }
    },
    "LaunchPermissionModifications":{
      "type":"structure",
      "members":{
        "Add":{
          "shape":"LaunchPermissionList",
          "documentation":"<p>The AWS account ID to add to the list of launch permissions for the AMI.</p>"
        },
        "Remove":{
          "shape":"LaunchPermissionList",
          "documentation":"<p>The AWS account ID to remove from the list of launch permissions for the AMI.</p>"
        }
      },
      "documentation":"<p>Describes a launch permission modification.</p>"
    },
    "LaunchSpecification":{
      "type":"structure",
      "members":{
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>",
          "locationName":"imageId"
        },
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair.</p>",
          "locationName":"keyName"
        },
        "SecurityGroups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.</p>",
          "locationName":"groupSet"
        },
        "UserData":{
          "shape":"String",
          "documentation":"<p>The Base64-encoded MIME user data to make available to the instances.</p>",
          "locationName":"userData"
        },
        "AddressingType":{
          "shape":"String",
          "documentation":"<p>Deprecated.</p>",
          "locationName":"addressingType"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type.</p>",
          "locationName":"instanceType"
        },
        "Placement":{
          "shape":"SpotPlacement",
          "documentation":"<p>The placement information for the instance.</p>",
          "locationName":"placement"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The ID of the kernel.</p>",
          "locationName":"kernelId"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The ID of the RAM disk.</p>",
          "locationName":"ramdiskId"
        },
        "BlockDeviceMappings":{
          "shape":"BlockDeviceMappingList",
          "documentation":"<p>One or more block device mapping entries.</p>",
          "locationName":"blockDeviceMapping"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet in which to launch the instance.</p>",
          "locationName":"subnetId"
        },
        "NetworkInterfaces":{
          "shape":"InstanceNetworkInterfaceSpecificationList",
          "documentation":"<p>One or more network interfaces.</p>",
          "locationName":"networkInterfaceSet"
        },
        "IamInstanceProfile":{
          "shape":"IamInstanceProfileSpecification",
          "documentation":"<p>The IAM instance profile.</p>",
          "locationName":"iamInstanceProfile"
        },
        "EbsOptimized":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code></p>",
          "locationName":"ebsOptimized"
        },
        "Monitoring":{
          "shape":"RunInstancesMonitoringEnabled",
          "locationName":"monitoring"
        }
      },
      "documentation":"<p>Describes the launch specification for an instance.</p>"
    },
    "LaunchSpecsList":{
      "type":"list",
      "member":{
        "shape":"SpotFleetLaunchSpecification",
        "locationName":"item"
      },
      "min":1
    },
    "ListingState":{
      "type":"string",
      "enum":[
        "available",
        "sold",
        "cancelled",
        "pending"
      ]
    },
    "ListingStatus":{
      "type":"string",
      "enum":[
        "active",
        "pending",
        "cancelled",
        "closed"
      ]
    },
    "Long":{"type":"long"},
    "MaxResults":{
      "type":"integer",
      "max":255,
      "min":5
    },
    "ModifyHostsRequest":{
      "type":"structure",
      "required":[
        "HostIds",
        "AutoPlacement"
      ],
      "members":{
        "HostIds":{
          "shape":"RequestHostIdList",
          "documentation":"<p>The host IDs of the Dedicated hosts you want to modify.</p>",
          "locationName":"hostId"
        },
        "AutoPlacement":{
          "shape":"AutoPlacement",
          "documentation":"<p>Specify whether to enable or disable auto-placement.</p>",
          "locationName":"autoPlacement"
        }
      }
    },
    "ModifyHostsResult":{
      "type":"structure",
      "members":{
        "Successful":{
          "shape":"ResponseHostIdList",
          "documentation":"<p>The IDs of the Dedicated hosts that were successfully modified.</p>",
          "locationName":"successful"
        },
        "Unsuccessful":{
          "shape":"UnsuccessfulItemList",
          "documentation":"<p>The IDs of the Dedicated hosts that could not be modified. Check whether the setting you requested can be used.</p>",
          "locationName":"unsuccessful"
        }
      }
    },
    "ModifyIdFormatRequest":{
      "type":"structure",
      "required":[
        "Resource",
        "UseLongIds"
      ],
      "members":{
        "Resource":{
          "shape":"String",
          "documentation":"<p>The type of resource.</p>"
        },
        "UseLongIds":{
          "shape":"Boolean",
          "documentation":"<p>Indicate whether the resource should use longer IDs (17-character IDs).</p>"
        }
      }
    },
    "ModifyImageAttributeRequest":{
      "type":"structure",
      "required":["ImageId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>"
        },
        "Attribute":{
          "shape":"String",
          "documentation":"<p>The name of the attribute to modify.</p>"
        },
        "OperationType":{
          "shape":"OperationType",
          "documentation":"<p>The operation type.</p>"
        },
        "UserIds":{
          "shape":"UserIdStringList",
          "documentation":"<p>One or more AWS account IDs. This is only valid when modifying the <code>launchPermission</code> attribute.</p>",
          "locationName":"UserId"
        },
        "UserGroups":{
          "shape":"UserGroupStringList",
          "documentation":"<p>One or more user groups. This is only valid when modifying the <code>launchPermission</code> attribute.</p>",
          "locationName":"UserGroup"
        },
        "ProductCodes":{
          "shape":"ProductCodeStringList",
          "documentation":"<p>One or more product codes. After you add a product code to an AMI, it can't be removed. This is only valid when modifying the <code>productCodes</code> attribute.</p>",
          "locationName":"ProductCode"
        },
        "Value":{
          "shape":"String",
          "documentation":"<p>The value of the attribute being modified. This is only valid when modifying the <code>description</code> attribute.</p>"
        },
        "LaunchPermission":{
          "shape":"LaunchPermissionModifications",
          "documentation":"<p>A launch permission modification.</p>"
        },
        "Description":{
          "shape":"AttributeValue",
          "documentation":"<p>A description for the AMI.</p>"
        }
      }
    },
    "ModifyInstanceAttributeRequest":{
      "type":"structure",
      "required":["InstanceId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "Attribute":{
          "shape":"InstanceAttributeName",
          "documentation":"<p>The name of the attribute.</p>",
          "locationName":"attribute"
        },
        "Value":{
          "shape":"String",
          "documentation":"<p>A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code> attribute.</p>",
          "locationName":"value"
        },
        "BlockDeviceMappings":{
          "shape":"InstanceBlockDeviceMappingSpecificationList",
          "documentation":"<p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is deleted when the instance is terminated.</p> <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM\">Updating the Block Device Mapping when Launching an Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>",
          "locationName":"blockDeviceMapping"
        },
        "SourceDestCheck":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Specifies whether source/destination checking is enabled. A value of <code>true</code> means that checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT.</p>"
        },
        "DisableApiTermination":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>If the value is <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this paramater for Spot Instances.</p>",
          "locationName":"disableApiTermination"
        },
        "InstanceType":{
          "shape":"AttributeValue",
          "documentation":"<p>Changes the instance type to the specified value. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Types</a>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.</p>",
          "locationName":"instanceType"
        },
        "Kernel":{
          "shape":"AttributeValue",
          "documentation":"<p>Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\">PV-GRUB</a>.</p>",
          "locationName":"kernel"
        },
        "Ramdisk":{
          "shape":"AttributeValue",
          "documentation":"<p>Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\">PV-GRUB</a>.</p>",
          "locationName":"ramdisk"
        },
        "UserData":{
          "shape":"BlobAttributeValue",
          "documentation":"<p>Changes the instance's user data to the specified value.</p>",
          "locationName":"userData"
        },
        "InstanceInitiatedShutdownBehavior":{
          "shape":"AttributeValue",
          "documentation":"<p>Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p>",
          "locationName":"instanceInitiatedShutdownBehavior"
        },
        "Groups":{
          "shape":"GroupIdStringList",
          "documentation":"<p>[EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name.</p>",
          "locationName":"GroupId"
        },
        "EbsOptimized":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Specifies whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>",
          "locationName":"ebsOptimized"
        },
        "SriovNetSupport":{
          "shape":"AttributeValue",
          "documentation":"<p>Set to <code>simple</code> to enable enhanced networking for the instance.</p> <p>There is no way to disable enhanced networking at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>",
          "locationName":"sriovNetSupport"
        }
      }
    },
    "ModifyInstancePlacementRequest":{
      "type":"structure",
      "required":["InstanceId"],
      "members":{
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance that you are modifying.</p>",
          "locationName":"instanceId"
        },
        "Tenancy":{
          "shape":"HostTenancy",
          "documentation":"<p>The tenancy of the instance that you are modifying.</p>",
          "locationName":"tenancy"
        },
        "Affinity":{
          "shape":"Affinity",
          "documentation":"<p>The new affinity setting for the instance.</p>",
          "locationName":"affinity"
        },
        "HostId":{
          "shape":"String",
          "documentation":"<p>The ID of the Dedicated host that the instance will have affinity with.</p>",
          "locationName":"hostId"
        }
      }
    },
    "ModifyInstancePlacementResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>",
          "locationName":"return"
        }
      }
    },
    "ModifyNetworkInterfaceAttributeRequest":{
      "type":"structure",
      "required":["NetworkInterfaceId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "Description":{
          "shape":"AttributeValue",
          "documentation":"<p>A description for the network interface.</p>",
          "locationName":"description"
        },
        "SourceDestCheck":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether source/destination checking is enabled. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>",
          "locationName":"sourceDestCheck"
        },
        "Groups":{
          "shape":"SecurityGroupIdStringList",
          "documentation":"<p>Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.</p>",
          "locationName":"SecurityGroupId"
        },
        "Attachment":{
          "shape":"NetworkInterfaceAttachmentChanges",
          "documentation":"<p>Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.</p>",
          "locationName":"attachment"
        }
      }
    },
    "ModifyReservedInstancesRequest":{
      "type":"structure",
      "required":[
        "ReservedInstancesIds",
        "TargetConfigurations"
      ],
      "members":{
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
          "locationName":"clientToken"
        },
        "ReservedInstancesIds":{
          "shape":"ReservedInstancesIdStringList",
          "documentation":"<p>The IDs of the Reserved Instances to modify.</p>",
          "locationName":"ReservedInstancesId"
        },
        "TargetConfigurations":{
          "shape":"ReservedInstancesConfigurationList",
          "documentation":"<p>The configuration settings for the Reserved Instances to modify.</p>",
          "locationName":"ReservedInstancesConfigurationSetItemType"
        }
      }
    },
    "ModifyReservedInstancesResult":{
      "type":"structure",
      "members":{
        "ReservedInstancesModificationId":{
          "shape":"String",
          "documentation":"<p>The ID for the modification.</p>",
          "locationName":"reservedInstancesModificationId"
        }
      }
    },
    "ModifySnapshotAttributeRequest":{
      "type":"structure",
      "required":["SnapshotId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the snapshot.</p>"
        },
        "Attribute":{
          "shape":"SnapshotAttributeName",
          "documentation":"<p>The snapshot attribute to modify.</p> <note> <p>Only volume creation permissions may be modified at the customer level.</p> </note>"
        },
        "OperationType":{
          "shape":"OperationType",
          "documentation":"<p>The type of operation to perform to the attribute.</p>"
        },
        "UserIds":{
          "shape":"UserIdStringList",
          "documentation":"<p>The account ID to modify for the snapshot.</p>",
          "locationName":"UserId"
        },
        "GroupNames":{
          "shape":"GroupNameStringList",
          "documentation":"<p>The group to modify for the snapshot.</p>",
          "locationName":"UserGroup"
        },
        "CreateVolumePermission":{
          "shape":"CreateVolumePermissionModifications",
          "documentation":"<p>A JSON representation of the snapshot attribute modification.</p>"
        }
      }
    },
    "ModifySpotFleetRequestRequest":{
      "type":"structure",
      "required":["SpotFleetRequestId"],
      "members":{
        "SpotFleetRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestId"
        },
        "TargetCapacity":{
          "shape":"Integer",
          "documentation":"<p>The size of the fleet.</p>",
          "locationName":"targetCapacity"
        },
        "ExcessCapacityTerminationPolicy":{
          "shape":"ExcessCapacityTerminationPolicy",
          "documentation":"<p>Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.</p>",
          "locationName":"excessCapacityTerminationPolicy"
        }
      },
      "documentation":"<p>Contains the parameters for ModifySpotFleetRequest.</p>"
    },
    "ModifySpotFleetRequestResponse":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>",
          "locationName":"return"
        }
      },
      "documentation":"<p>Contains the output of ModifySpotFleetRequest.</p>"
    },
    "ModifySubnetAttributeRequest":{
      "type":"structure",
      "required":["SubnetId"],
      "members":{
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet.</p>",
          "locationName":"subnetId"
        },
        "MapPublicIpOnLaunch":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Specify <code>true</code> to indicate that instances launched into the specified subnet should be assigned public IP address.</p>"
        }
      }
    },
    "ModifyVolumeAttributeRequest":{
      "type":"structure",
      "required":["VolumeId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume.</p>"
        },
        "AutoEnableIO":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether the volume should be auto-enabled for I/O operations.</p>"
        }
      }
    },
    "ModifyVpcAttributeRequest":{
      "type":"structure",
      "required":["VpcId"],
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "EnableDnsSupport":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" will succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. </p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>"
        },
        "EnableDnsHostnames":{
          "shape":"AttributeBooleanValue",
          "documentation":"<p>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.</p>"
        }
      }
    },
    "ModifyVpcEndpointRequest":{
      "type":"structure",
      "required":["VpcEndpointId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "VpcEndpointId":{
          "shape":"String",
          "documentation":"<p>The ID of the endpoint.</p>"
        },
        "ResetPolicy":{
          "shape":"Boolean",
          "documentation":"<p>Specify <code>true</code> to reset the policy document to the default policy. The default policy allows access to the service.</p>"
        },
        "PolicyDocument":{
          "shape":"String",
          "documentation":"<p>A policy document to attach to the endpoint. The policy must be in valid JSON format. </p>"
        },
        "AddRouteTableIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more route tables IDs to associate with the endpoint.</p>",
          "locationName":"AddRouteTableId"
        },
        "RemoveRouteTableIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more route table IDs to disassociate from the endpoint.</p>",
          "locationName":"RemoveRouteTableId"
        }
      }
    },
    "ModifyVpcEndpointResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>",
          "locationName":"return"
        }
      }
    },
    "MonitorInstancesRequest":{
      "type":"structure",
      "required":["InstanceIds"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p>",
          "locationName":"InstanceId"
        }
      }
    },
    "MonitorInstancesResult":{
      "type":"structure",
      "members":{
        "InstanceMonitorings":{
          "shape":"InstanceMonitoringList",
          "documentation":"<p>Monitoring information for one or more instances.</p>",
          "locationName":"instancesSet"
        }
      }
    },
    "Monitoring":{
      "type":"structure",
      "members":{
        "State":{
          "shape":"MonitoringState",
          "documentation":"<p>Indicates whether monitoring is enabled for the instance.</p>",
          "locationName":"state"
        }
      },
      "documentation":"<p>Describes the monitoring for the instance.</p>"
    },
    "MonitoringState":{
      "type":"string",
      "enum":[
        "disabled",
        "disabling",
        "enabled",
        "pending"
      ]
    },
    "MoveAddressToVpcRequest":{
      "type":"structure",
      "required":["PublicIp"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>The Elastic IP address.</p>",
          "locationName":"publicIp"
        }
      }
    },
    "MoveAddressToVpcResult":{
      "type":"structure",
      "members":{
        "AllocationId":{
          "shape":"String",
          "documentation":"<p>The allocation ID for the Elastic IP address.</p>",
          "locationName":"allocationId"
        },
        "Status":{
          "shape":"Status",
          "documentation":"<p>The status of the move of the IP address.</p>",
          "locationName":"status"
        }
      }
    },
    "MoveStatus":{
      "type":"string",
      "enum":[
        "movingToVpc",
        "restoringToClassic"
      ]
    },
    "MovingAddressStatus":{
      "type":"structure",
      "members":{
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>The Elastic IP address.</p>",
          "locationName":"publicIp"
        },
        "MoveStatus":{
          "shape":"MoveStatus",
          "documentation":"<p>The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.</p>",
          "locationName":"moveStatus"
        }
      },
      "documentation":"<p>Describes the status of a moving Elastic IP address.</p>"
    },
    "MovingAddressStatusSet":{
      "type":"list",
      "member":{
        "shape":"MovingAddressStatus",
        "locationName":"item"
      }
    },
    "NatGateway":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC in which the NAT gateway is located.</p>",
          "locationName":"vpcId"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet in which the NAT gateway is located.</p>",
          "locationName":"subnetId"
        },
        "NatGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the NAT gateway.</p>",
          "locationName":"natGatewayId"
        },
        "CreateTime":{
          "shape":"DateTime",
          "documentation":"<p>The date and time the NAT gateway was created.</p>",
          "locationName":"createTime"
        },
        "DeleteTime":{
          "shape":"DateTime",
          "documentation":"<p>The date and time the NAT gateway was deleted, if applicable.</p>",
          "locationName":"deleteTime"
        },
        "NatGatewayAddresses":{
          "shape":"NatGatewayAddressList",
          "documentation":"<p>Information about the IP addresses and network interface associated with the NAT gateway.</p>",
          "locationName":"natGatewayAddressSet"
        },
        "State":{
          "shape":"NatGatewayState",
          "documentation":"<p>The state of the NAT gateway.</p>",
          "locationName":"state"
        },
        "FailureCode":{
          "shape":"String",
          "documentation":"<p>If the NAT gateway could not be created, specifies the error code for the failure. (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code> | <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code> | <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)</p>",
          "locationName":"failureCode"
        },
        "FailureMessage":{
          "shape":"String",
          "documentation":"<p>If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code. </p> <ul> <li>For InsufficientFreeAddressesInSubnet: <code>Subnet has insufficient free addresses to create this NAT gateway</code></li> <li>For Gateway.NotAttached: <code>Network vpc-xxxxxxxx has no Internet gateway attached</code></li> <li>For InvalidAllocationID.NotFound: <code>Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway</code></li> <li>For Resource.AlreadyAssociated: <code>Elastic IP address eipalloc-xxxxxxxx is already associated</code></li> <li>For InternalError: <code>Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again.</code></li> <li>For InvalidSubnetID.NotFound: <code>The specified subnet subnet-xxxxxxxx does not exist or could not be found.</code></li> </ul>",
          "locationName":"failureMessage"
        }
      },
      "documentation":"<p>Describes a NAT gateway.</p>"
    },
    "NatGatewayAddress":{
      "type":"structure",
      "members":{
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>The Elastic IP address associated with the NAT gateway.</p>",
          "locationName":"publicIp"
        },
        "AllocationId":{
          "shape":"String",
          "documentation":"<p>The allocation ID of the Elastic IP address that's associated with the NAT gateway.</p>",
          "locationName":"allocationId"
        },
        "PrivateIp":{
          "shape":"String",
          "documentation":"<p>The private IP address associated with the Elastic IP address.</p>",
          "locationName":"privateIp"
        },
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface associated with the NAT gateway.</p>",
          "locationName":"networkInterfaceId"
        }
      },
      "documentation":"<p>Describes the IP addresses and network interface associated with a NAT gateway.</p>"
    },
    "NatGatewayAddressList":{
      "type":"list",
      "member":{
        "shape":"NatGatewayAddress",
        "locationName":"item"
      }
    },
    "NatGatewayList":{
      "type":"list",
      "member":{
        "shape":"NatGateway",
        "locationName":"item"
      }
    },
    "NatGatewayState":{
      "type":"string",
      "enum":[
        "pending",
        "failed",
        "available",
        "deleting",
        "deleted"
      ]
    },
    "NetworkAcl":{
      "type":"structure",
      "members":{
        "NetworkAclId":{
          "shape":"String",
          "documentation":"<p>The ID of the network ACL.</p>",
          "locationName":"networkAclId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC for the network ACL.</p>",
          "locationName":"vpcId"
        },
        "IsDefault":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether this is the default network ACL for the VPC.</p>",
          "locationName":"default"
        },
        "Entries":{
          "shape":"NetworkAclEntryList",
          "documentation":"<p>One or more entries (rules) in the network ACL.</p>",
          "locationName":"entrySet"
        },
        "Associations":{
          "shape":"NetworkAclAssociationList",
          "documentation":"<p>Any associations between the network ACL and one or more subnets</p>",
          "locationName":"associationSet"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the network ACL.</p>",
          "locationName":"tagSet"
        }
      },
      "documentation":"<p>Describes a network ACL.</p>"
    },
    "NetworkAclAssociation":{
      "type":"structure",
      "members":{
        "NetworkAclAssociationId":{
          "shape":"String",
          "documentation":"<p>The ID of the association between a network ACL and a subnet.</p>",
          "locationName":"networkAclAssociationId"
        },
        "NetworkAclId":{
          "shape":"String",
          "documentation":"<p>The ID of the network ACL.</p>",
          "locationName":"networkAclId"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet.</p>",
          "locationName":"subnetId"
        }
      },
      "documentation":"<p>Describes an association between a network ACL and a subnet.</p>"
    },
    "NetworkAclAssociationList":{
      "type":"list",
      "member":{
        "shape":"NetworkAclAssociation",
        "locationName":"item"
      }
    },
    "NetworkAclEntry":{
      "type":"structure",
      "members":{
        "RuleNumber":{
          "shape":"Integer",
          "documentation":"<p>The rule number for the entry. ACL entries are processed in ascending order by rule number.</p>",
          "locationName":"ruleNumber"
        },
        "Protocol":{
          "shape":"String",
          "documentation":"<p>The protocol. A value of <code>-1</code> means all protocols.</p>",
          "locationName":"protocol"
        },
        "RuleAction":{
          "shape":"RuleAction",
          "documentation":"<p>Indicates whether to allow or deny the traffic that matches the rule.</p>",
          "locationName":"ruleAction"
        },
        "Egress":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).</p>",
          "locationName":"egress"
        },
        "CidrBlock":{
          "shape":"String",
          "documentation":"<p>The network range to allow or deny, in CIDR notation.</p>",
          "locationName":"cidrBlock"
        },
        "IcmpTypeCode":{
          "shape":"IcmpTypeCode",
          "documentation":"<p>ICMP protocol: The ICMP type and code.</p>",
          "locationName":"icmpTypeCode"
        },
        "PortRange":{
          "shape":"PortRange",
          "documentation":"<p>TCP or UDP protocols: The range of ports the rule applies to.</p>",
          "locationName":"portRange"
        }
      },
      "documentation":"<p>Describes an entry in a network ACL.</p>"
    },
    "NetworkAclEntryList":{
      "type":"list",
      "member":{
        "shape":"NetworkAclEntry",
        "locationName":"item"
      }
    },
    "NetworkAclList":{
      "type":"list",
      "member":{
        "shape":"NetworkAcl",
        "locationName":"item"
      }
    },
    "NetworkInterface":{
      "type":"structure",
      "members":{
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet.</p>",
          "locationName":"subnetId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone.</p>",
          "locationName":"availabilityZone"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description.</p>",
          "locationName":"description"
        },
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the owner of the network interface.</p>",
          "locationName":"ownerId"
        },
        "RequesterId":{
          "shape":"String",
          "documentation":"<p>The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).</p>",
          "locationName":"requesterId"
        },
        "RequesterManaged":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the network interface is being managed by AWS.</p>",
          "locationName":"requesterManaged"
        },
        "Status":{
          "shape":"NetworkInterfaceStatus",
          "documentation":"<p>The status of the network interface.</p>",
          "locationName":"status"
        },
        "MacAddress":{
          "shape":"String",
          "documentation":"<p>The MAC address.</p>",
          "locationName":"macAddress"
        },
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The IP address of the network interface within the subnet.</p>",
          "locationName":"privateIpAddress"
        },
        "PrivateDnsName":{
          "shape":"String",
          "documentation":"<p>The private DNS name.</p>",
          "locationName":"privateDnsName"
        },
        "SourceDestCheck":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether traffic to or from the instance is validated.</p>",
          "locationName":"sourceDestCheck"
        },
        "Groups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>Any security groups for the network interface.</p>",
          "locationName":"groupSet"
        },
        "Attachment":{
          "shape":"NetworkInterfaceAttachment",
          "documentation":"<p>The network interface attachment.</p>",
          "locationName":"attachment"
        },
        "Association":{
          "shape":"NetworkInterfaceAssociation",
          "documentation":"<p>The association information for an Elastic IP associated with the network interface.</p>",
          "locationName":"association"
        },
        "TagSet":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the network interface.</p>",
          "locationName":"tagSet"
        },
        "PrivateIpAddresses":{
          "shape":"NetworkInterfacePrivateIpAddressList",
          "documentation":"<p>The private IP addresses associated with the network interface.</p>",
          "locationName":"privateIpAddressesSet"
        },
        "InterfaceType":{
          "shape":"NetworkInterfaceType",
          "documentation":"<p>The type of interface. </p>",
          "locationName":"interfaceType"
        }
      },
      "documentation":"<p>Describes a network interface.</p>"
    },
    "NetworkInterfaceAssociation":{
      "type":"structure",
      "members":{
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>The address of the Elastic IP address bound to the network interface.</p>",
          "locationName":"publicIp"
        },
        "PublicDnsName":{
          "shape":"String",
          "documentation":"<p>The public DNS name.</p>",
          "locationName":"publicDnsName"
        },
        "IpOwnerId":{
          "shape":"String",
          "documentation":"<p>The ID of the Elastic IP address owner.</p>",
          "locationName":"ipOwnerId"
        },
        "AllocationId":{
          "shape":"String",
          "documentation":"<p>The allocation ID.</p>",
          "locationName":"allocationId"
        },
        "AssociationId":{
          "shape":"String",
          "documentation":"<p>The association ID.</p>",
          "locationName":"associationId"
        }
      },
      "documentation":"<p>Describes association information for an Elastic IP address.</p>"
    },
    "NetworkInterfaceAttachment":{
      "type":"structure",
      "members":{
        "AttachmentId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface attachment.</p>",
          "locationName":"attachmentId"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "InstanceOwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the owner of the instance.</p>",
          "locationName":"instanceOwnerId"
        },
        "DeviceIndex":{
          "shape":"Integer",
          "documentation":"<p>The device index of the network interface attachment on the instance.</p>",
          "locationName":"deviceIndex"
        },
        "Status":{
          "shape":"AttachmentStatus",
          "documentation":"<p>The attachment state.</p>",
          "locationName":"status"
        },
        "AttachTime":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp indicating when the attachment initiated.</p>",
          "locationName":"attachTime"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the network interface is deleted when the instance is terminated.</p>",
          "locationName":"deleteOnTermination"
        }
      },
      "documentation":"<p>Describes a network interface attachment.</p>"
    },
    "NetworkInterfaceAttachmentChanges":{
      "type":"structure",
      "members":{
        "AttachmentId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface attachment.</p>",
          "locationName":"attachmentId"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the network interface is deleted when the instance is terminated.</p>",
          "locationName":"deleteOnTermination"
        }
      },
      "documentation":"<p>Describes an attachment change.</p>"
    },
    "NetworkInterfaceAttribute":{
      "type":"string",
      "enum":[
        "description",
        "groupSet",
        "sourceDestCheck",
        "attachment"
      ]
    },
    "NetworkInterfaceIdList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"item"
      }
    },
    "NetworkInterfaceList":{
      "type":"list",
      "member":{
        "shape":"NetworkInterface",
        "locationName":"item"
      }
    },
    "NetworkInterfacePrivateIpAddress":{
      "type":"structure",
      "members":{
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The private IP address.</p>",
          "locationName":"privateIpAddress"
        },
        "PrivateDnsName":{
          "shape":"String",
          "documentation":"<p>The private DNS name.</p>",
          "locationName":"privateDnsName"
        },
        "Primary":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether this IP address is the primary private IP address of the network interface.</p>",
          "locationName":"primary"
        },
        "Association":{
          "shape":"NetworkInterfaceAssociation",
          "documentation":"<p>The association information for an Elastic IP address associated with the network interface.</p>",
          "locationName":"association"
        }
      },
      "documentation":"<p>Describes the private IP address of a network interface.</p>"
    },
    "NetworkInterfacePrivateIpAddressList":{
      "type":"list",
      "member":{
        "shape":"NetworkInterfacePrivateIpAddress",
        "locationName":"item"
      }
    },
    "NetworkInterfaceStatus":{
      "type":"string",
      "enum":[
        "available",
        "attaching",
        "in-use",
        "detaching"
      ]
    },
    "NetworkInterfaceType":{
      "type":"string",
      "enum":[
        "interface",
        "natGateway"
      ]
    },
    "NewDhcpConfiguration":{
      "type":"structure",
      "members":{
        "Key":{
          "shape":"String",
          "locationName":"key"
        },
        "Values":{
          "shape":"ValueStringList",
          "locationName":"Value"
        }
      }
    },
    "NewDhcpConfigurationList":{
      "type":"list",
      "member":{
        "shape":"NewDhcpConfiguration",
        "locationName":"item"
      }
    },
    "NextToken":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "OccurrenceDayRequestSet":{
      "type":"list",
      "member":{
        "shape":"Integer",
        "locationName":"OccurenceDay"
      }
    },
    "OccurrenceDaySet":{
      "type":"list",
      "member":{
        "shape":"Integer",
        "locationName":"item"
      }
    },
    "OfferingTypeValues":{
      "type":"string",
      "enum":[
        "Heavy Utilization",
        "Medium Utilization",
        "Light Utilization",
        "No Upfront",
        "Partial Upfront",
        "All Upfront"
      ]
    },
    "OperationType":{
      "type":"string",
      "enum":[
        "add",
        "remove"
      ]
    },
    "OwnerStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"Owner"
      }
    },
    "PermissionGroup":{
      "type":"string",
      "enum":["all"]
    },
    "Placement":{
      "type":"structure",
      "members":{
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone of the instance.</p>",
          "locationName":"availabilityZone"
        },
        "GroupName":{
          "shape":"String",
          "documentation":"<p>The name of the placement group the instance is in (for cluster compute instances).</p>",
          "locationName":"groupName"
        },
        "Tenancy":{
          "shape":"Tenancy",
          "documentation":"<p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for the <a>ImportInstance</a> command.</p>",
          "locationName":"tenancy"
        },
        "HostId":{
          "shape":"String",
          "documentation":"<p>The ID of the Dedicted host on which the instance resides. This parameter is not support for the <a>ImportInstance</a> command.</p>",
          "locationName":"hostId"
        },
        "Affinity":{
          "shape":"String",
          "documentation":"<p>The affinity setting for the instance on the Dedicated host. This parameter is not supported for the <a>ImportInstance</a> command.</p>",
          "locationName":"affinity"
        }
      },
      "documentation":"<p>Describes the placement for the instance.</p>"
    },
    "PlacementGroup":{
      "type":"structure",
      "members":{
        "GroupName":{
          "shape":"String",
          "documentation":"<p>The name of the placement group.</p>",
          "locationName":"groupName"
        },
        "Strategy":{
          "shape":"PlacementStrategy",
          "documentation":"<p>The placement strategy.</p>",
          "locationName":"strategy"
        },
        "State":{
          "shape":"PlacementGroupState",
          "documentation":"<p>The state of the placement group.</p>",
          "locationName":"state"
        }
      },
      "documentation":"<p>Describes a placement group.</p>"
    },
    "PlacementGroupList":{
      "type":"list",
      "member":{
        "shape":"PlacementGroup",
        "locationName":"item"
      }
    },
    "PlacementGroupState":{
      "type":"string",
      "enum":[
        "pending",
        "available",
        "deleting",
        "deleted"
      ]
    },
    "PlacementGroupStringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "PlacementStrategy":{
      "type":"string",
      "enum":["cluster"]
    },
    "PlatformValues":{
      "type":"string",
      "enum":["Windows"]
    },
    "PortRange":{
      "type":"structure",
      "members":{
        "From":{
          "shape":"Integer",
          "documentation":"<p>The first port in the range.</p>",
          "locationName":"from"
        },
        "To":{
          "shape":"Integer",
          "documentation":"<p>The last port in the range.</p>",
          "locationName":"to"
        }
      },
      "documentation":"<p>Describes a range of ports.</p>"
    },
    "PrefixList":{
      "type":"structure",
      "members":{
        "PrefixListId":{
          "shape":"String",
          "documentation":"<p>The ID of the prefix. </p>",
          "locationName":"prefixListId"
        },
        "PrefixListName":{
          "shape":"String",
          "documentation":"<p>The name of the prefix.</p>",
          "locationName":"prefixListName"
        },
        "Cidrs":{
          "shape":"ValueStringList",
          "documentation":"<p>The IP address range of the AWS service.</p>",
          "locationName":"cidrSet"
        }
      },
      "documentation":"<p>Describes prefixes for AWS services. </p>"
    },
    "PrefixListId":{
      "type":"structure",
      "members":{
        "PrefixListId":{
          "shape":"String",
          "documentation":"<p>The ID of the prefix.</p>",
          "locationName":"prefixListId"
        }
      },
      "documentation":"<p>The ID of the prefix.</p>"
    },
    "PrefixListIdList":{
      "type":"list",
      "member":{
        "shape":"PrefixListId",
        "locationName":"item"
      }
    },
    "PrefixListSet":{
      "type":"list",
      "member":{
        "shape":"PrefixList",
        "locationName":"item"
      }
    },
    "PriceSchedule":{
      "type":"structure",
      "members":{
        "Term":{
          "shape":"Long",
          "documentation":"<p>The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.</p>",
          "locationName":"term"
        },
        "Price":{
          "shape":"Double",
          "documentation":"<p>The fixed price for the term.</p>",
          "locationName":"price"
        },
        "CurrencyCode":{
          "shape":"CurrencyCodeValues",
          "documentation":"<p>The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.</p>",
          "locationName":"currencyCode"
        },
        "Active":{
          "shape":"Boolean",
          "documentation":"<p>The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.</p> <p>A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.</p>",
          "locationName":"active"
        }
      },
      "documentation":"<p>Describes the price for a Reserved Instance.</p>"
    },
    "PriceScheduleList":{
      "type":"list",
      "member":{
        "shape":"PriceSchedule",
        "locationName":"item"
      }
    },
    "PriceScheduleSpecification":{
      "type":"structure",
      "members":{
        "Term":{
          "shape":"Long",
          "documentation":"<p>The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.</p>",
          "locationName":"term"
        },
        "Price":{
          "shape":"Double",
          "documentation":"<p>The fixed price for the term.</p>",
          "locationName":"price"
        },
        "CurrencyCode":{
          "shape":"CurrencyCodeValues",
          "documentation":"<p>The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.</p>",
          "locationName":"currencyCode"
        }
      },
      "documentation":"<p>Describes the price for a Reserved Instance.</p>"
    },
    "PriceScheduleSpecificationList":{
      "type":"list",
      "member":{
        "shape":"PriceScheduleSpecification",
        "locationName":"item"
      }
    },
    "PricingDetail":{
      "type":"structure",
      "members":{
        "Price":{
          "shape":"Double",
          "documentation":"<p>The price per instance.</p>",
          "locationName":"price"
        },
        "Count":{
          "shape":"Integer",
          "documentation":"<p>The number of reservations available for the price.</p>",
          "locationName":"count"
        }
      },
      "documentation":"<p>Describes a Reserved Instance offering.</p>"
    },
    "PricingDetailsList":{
      "type":"list",
      "member":{
        "shape":"PricingDetail",
        "locationName":"item"
      }
    },
    "PrivateIpAddressConfigSet":{
      "type":"list",
      "member":{
        "shape":"ScheduledInstancesPrivateIpAddressConfig",
        "locationName":"PrivateIpAddressConfigSet"
      }
    },
    "PrivateIpAddressSpecification":{
      "type":"structure",
      "required":["PrivateIpAddress"],
      "members":{
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The private IP addresses.</p>",
          "locationName":"privateIpAddress"
        },
        "Primary":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the private IP address is the primary private IP address. Only one IP address can be designated as primary.</p>",
          "locationName":"primary"
        }
      },
      "documentation":"<p>Describes a secondary private IP address for a network interface.</p>"
    },
    "PrivateIpAddressSpecificationList":{
      "type":"list",
      "member":{
        "shape":"PrivateIpAddressSpecification",
        "locationName":"item"
      }
    },
    "PrivateIpAddressStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"PrivateIpAddress"
      }
    },
    "ProductCode":{
      "type":"structure",
      "members":{
        "ProductCodeId":{
          "shape":"String",
          "documentation":"<p>The product code.</p>",
          "locationName":"productCode"
        },
        "ProductCodeType":{
          "shape":"ProductCodeValues",
          "documentation":"<p>The type of product code.</p>",
          "locationName":"type"
        }
      },
      "documentation":"<p>Describes a product code.</p>"
    },
    "ProductCodeList":{
      "type":"list",
      "member":{
        "shape":"ProductCode",
        "locationName":"item"
      }
    },
    "ProductCodeStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ProductCode"
      }
    },
    "ProductCodeValues":{
      "type":"string",
      "enum":[
        "devpay",
        "marketplace"
      ]
    },
    "ProductDescriptionList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "PropagatingVgw":{
      "type":"structure",
      "members":{
        "GatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the virtual private gateway (VGW).</p>",
          "locationName":"gatewayId"
        }
      },
      "documentation":"<p>Describes a virtual private gateway propagating route.</p>"
    },
    "PropagatingVgwList":{
      "type":"list",
      "member":{
        "shape":"PropagatingVgw",
        "locationName":"item"
      }
    },
    "PublicIpStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"PublicIp"
      }
    },
    "PurchaseRequest":{
      "type":"structure",
      "required":[
        "PurchaseToken",
        "InstanceCount"
      ],
      "members":{
        "PurchaseToken":{
          "shape":"String",
          "documentation":"<p>The purchase token.</p>"
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of instances.</p>"
        }
      },
      "documentation":"<p>Describes a request to purchase Scheduled Instances.</p>"
    },
    "PurchaseRequestSet":{
      "type":"list",
      "member":{
        "shape":"PurchaseRequest",
        "locationName":"PurchaseRequest"
      },
      "min":1
    },
    "PurchaseReservedInstancesOfferingRequest":{
      "type":"structure",
      "required":[
        "ReservedInstancesOfferingId",
        "InstanceCount"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ReservedInstancesOfferingId":{
          "shape":"String",
          "documentation":"<p>The ID of the Reserved Instance offering to purchase.</p>"
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of Reserved Instances to purchase.</p>"
        },
        "LimitPrice":{
          "shape":"ReservedInstanceLimitPrice",
          "documentation":"<p>Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.</p>",
          "locationName":"limitPrice"
        }
      }
    },
    "PurchaseReservedInstancesOfferingResult":{
      "type":"structure",
      "members":{
        "ReservedInstancesId":{
          "shape":"String",
          "documentation":"<p>The IDs of the purchased Reserved Instances.</p>",
          "locationName":"reservedInstancesId"
        }
      }
    },
    "PurchaseScheduledInstancesRequest":{
      "type":"structure",
      "required":["PurchaseRequests"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
          "idempotencyToken":true
        },
        "PurchaseRequests":{
          "shape":"PurchaseRequestSet",
          "documentation":"<p>One or more purchase requests.</p>",
          "locationName":"PurchaseRequest"
        }
      },
      "documentation":"<p>Contains the parameters for PurchaseScheduledInstances.</p>"
    },
    "PurchaseScheduledInstancesResult":{
      "type":"structure",
      "members":{
        "ScheduledInstanceSet":{
          "shape":"PurchasedScheduledInstanceSet",
          "documentation":"<p>Information about the Scheduled Instances.</p>",
          "locationName":"scheduledInstanceSet"
        }
      },
      "documentation":"<p>Contains the output of PurchaseScheduledInstances.</p>"
    },
    "PurchasedScheduledInstanceSet":{
      "type":"list",
      "member":{
        "shape":"ScheduledInstance",
        "locationName":"item"
      }
    },
    "RIProductDescription":{
      "type":"string",
      "enum":[
        "Linux/UNIX",
        "Linux/UNIX (Amazon VPC)",
        "Windows",
        "Windows (Amazon VPC)"
      ]
    },
    "ReasonCodesList":{
      "type":"list",
      "member":{
        "shape":"ReportInstanceReasonCodes",
        "locationName":"item"
      }
    },
    "RebootInstancesRequest":{
      "type":"structure",
      "required":["InstanceIds"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p>",
          "locationName":"InstanceId"
        }
      }
    },
    "RecurringCharge":{
      "type":"structure",
      "members":{
        "Frequency":{
          "shape":"RecurringChargeFrequency",
          "documentation":"<p>The frequency of the recurring charge.</p>",
          "locationName":"frequency"
        },
        "Amount":{
          "shape":"Double",
          "documentation":"<p>The amount of the recurring charge.</p>",
          "locationName":"amount"
        }
      },
      "documentation":"<p>Describes a recurring charge.</p>"
    },
    "RecurringChargeFrequency":{
      "type":"string",
      "enum":["Hourly"]
    },
    "RecurringChargesList":{
      "type":"list",
      "member":{
        "shape":"RecurringCharge",
        "locationName":"item"
      }
    },
    "Region":{
      "type":"structure",
      "members":{
        "RegionName":{
          "shape":"String",
          "documentation":"<p>The name of the region.</p>",
          "locationName":"regionName"
        },
        "Endpoint":{
          "shape":"String",
          "documentation":"<p>The region service endpoint.</p>",
          "locationName":"regionEndpoint"
        }
      },
      "documentation":"<p>Describes a region.</p>"
    },
    "RegionList":{
      "type":"list",
      "member":{
        "shape":"Region",
        "locationName":"item"
      }
    },
    "RegionNameStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"RegionName"
      }
    },
    "RegisterImageRequest":{
      "type":"structure",
      "required":["Name"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ImageLocation":{
          "shape":"String",
          "documentation":"<p>The full path to your AMI manifest in Amazon S3 storage.</p>"
        },
        "Name":{
          "shape":"String",
          "documentation":"<p>A name for your AMI.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>",
          "locationName":"name"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description for your AMI.</p>",
          "locationName":"description"
        },
        "Architecture":{
          "shape":"ArchitectureValues",
          "documentation":"<p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>",
          "locationName":"architecture"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The ID of the kernel.</p>",
          "locationName":"kernelId"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The ID of the RAM disk.</p>",
          "locationName":"ramdiskId"
        },
        "RootDeviceName":{
          "shape":"String",
          "documentation":"<p>The name of the root device (for example, <code>/dev/sda1</code>, or <code>/dev/xvda</code>).</p>",
          "locationName":"rootDeviceName"
        },
        "BlockDeviceMappings":{
          "shape":"BlockDeviceMappingRequestList",
          "documentation":"<p>One or more block device mapping entries.</p>",
          "locationName":"BlockDeviceMapping"
        },
        "VirtualizationType":{
          "shape":"String",
          "documentation":"<p>The type of virtualization.</p> <p>Default: <code>paravirtual</code></p>",
          "locationName":"virtualizationType"
        },
        "SriovNetSupport":{
          "shape":"String",
          "documentation":"<p>Set to <code>simple</code> to enable enhanced networking for the AMI and any instances that you launch from the AMI.</p> <p>There is no way to disable enhanced networking at this time.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>",
          "locationName":"sriovNetSupport"
        }
      }
    },
    "RegisterImageResult":{
      "type":"structure",
      "members":{
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the newly registered AMI.</p>",
          "locationName":"imageId"
        }
      }
    },
    "RejectVpcPeeringConnectionRequest":{
      "type":"structure",
      "required":["VpcPeeringConnectionId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "VpcPeeringConnectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC peering connection.</p>",
          "locationName":"vpcPeeringConnectionId"
        }
      }
    },
    "RejectVpcPeeringConnectionResult":{
      "type":"structure",
      "members":{
        "Return":{
          "shape":"Boolean",
          "documentation":"<p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>",
          "locationName":"return"
        }
      }
    },
    "ReleaseAddressRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</p>"
        },
        "AllocationId":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The allocation ID. Required for EC2-VPC.</p>"
        }
      }
    },
    "ReleaseHostsRequest":{
      "type":"structure",
      "required":["HostIds"],
      "members":{
        "HostIds":{
          "shape":"RequestHostIdList",
          "documentation":"<p>The IDs of the Dedicated hosts you want to release.</p>",
          "locationName":"hostId"
        }
      }
    },
    "ReleaseHostsResult":{
      "type":"structure",
      "members":{
        "Successful":{
          "shape":"ResponseHostIdList",
          "documentation":"<p>The IDs of the Dedicated hosts that were successfully released.</p>",
          "locationName":"successful"
        },
        "Unsuccessful":{
          "shape":"UnsuccessfulItemList",
          "documentation":"<p>The IDs of the Dedicated hosts that could not be released, including an error message.</p>",
          "locationName":"unsuccessful"
        }
      }
    },
    "ReplaceNetworkAclAssociationRequest":{
      "type":"structure",
      "required":[
        "AssociationId",
        "NetworkAclId"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "AssociationId":{
          "shape":"String",
          "documentation":"<p>The ID of the current association between the original network ACL and the subnet.</p>",
          "locationName":"associationId"
        },
        "NetworkAclId":{
          "shape":"String",
          "documentation":"<p>The ID of the new network ACL to associate with the subnet.</p>",
          "locationName":"networkAclId"
        }
      }
    },
    "ReplaceNetworkAclAssociationResult":{
      "type":"structure",
      "members":{
        "NewAssociationId":{
          "shape":"String",
          "documentation":"<p>The ID of the new association.</p>",
          "locationName":"newAssociationId"
        }
      }
    },
    "ReplaceNetworkAclEntryRequest":{
      "type":"structure",
      "required":[
        "NetworkAclId",
        "RuleNumber",
        "Protocol",
        "RuleAction",
        "Egress",
        "CidrBlock"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "NetworkAclId":{
          "shape":"String",
          "documentation":"<p>The ID of the ACL.</p>",
          "locationName":"networkAclId"
        },
        "RuleNumber":{
          "shape":"Integer",
          "documentation":"<p>The rule number of the entry to replace.</p>",
          "locationName":"ruleNumber"
        },
        "Protocol":{
          "shape":"String",
          "documentation":"<p>The IP protocol. You can specify <code>all</code> or <code>-1</code> to mean all protocols.</p>",
          "locationName":"protocol"
        },
        "RuleAction":{
          "shape":"RuleAction",
          "documentation":"<p>Indicates whether to allow or deny the traffic that matches the rule.</p>",
          "locationName":"ruleAction"
        },
        "Egress":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether to replace the egress rule.</p> <p>Default: If no value is specified, we replace the ingress rule.</p>",
          "locationName":"egress"
        },
        "CidrBlock":{
          "shape":"String",
          "documentation":"<p>The network range to allow or deny, in CIDR notation.</p>",
          "locationName":"cidrBlock"
        },
        "IcmpTypeCode":{
          "shape":"IcmpTypeCode",
          "documentation":"<p>ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.</p>",
          "locationName":"Icmp"
        },
        "PortRange":{
          "shape":"PortRange",
          "documentation":"<p>TCP or UDP protocols: The range of ports the rule applies to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.</p>",
          "locationName":"portRange"
        }
      }
    },
    "ReplaceRouteRequest":{
      "type":"structure",
      "required":[
        "RouteTableId",
        "DestinationCidrBlock"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "RouteTableId":{
          "shape":"String",
          "documentation":"<p>The ID of the route table.</p>",
          "locationName":"routeTableId"
        },
        "DestinationCidrBlock":{
          "shape":"String",
          "documentation":"<p>The CIDR address block used for the destination match. The value you provide must match the CIDR of an existing route in the table.</p>",
          "locationName":"destinationCidrBlock"
        },
        "GatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of an Internet gateway or virtual private gateway.</p>",
          "locationName":"gatewayId"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of a NAT instance in your VPC.</p>",
          "locationName":"instanceId"
        },
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of a network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "VpcPeeringConnectionId":{
          "shape":"String",
          "documentation":"<p>The ID of a VPC peering connection.</p>",
          "locationName":"vpcPeeringConnectionId"
        },
        "NatGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of a NAT gateway.</p>",
          "locationName":"natGatewayId"
        }
      }
    },
    "ReplaceRouteTableAssociationRequest":{
      "type":"structure",
      "required":[
        "AssociationId",
        "RouteTableId"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "AssociationId":{
          "shape":"String",
          "documentation":"<p>The association ID.</p>",
          "locationName":"associationId"
        },
        "RouteTableId":{
          "shape":"String",
          "documentation":"<p>The ID of the new route table to associate with the subnet.</p>",
          "locationName":"routeTableId"
        }
      }
    },
    "ReplaceRouteTableAssociationResult":{
      "type":"structure",
      "members":{
        "NewAssociationId":{
          "shape":"String",
          "documentation":"<p>The ID of the new association.</p>",
          "locationName":"newAssociationId"
        }
      }
    },
    "ReportInstanceReasonCodes":{
      "type":"string",
      "enum":[
        "instance-stuck-in-state",
        "unresponsive",
        "not-accepting-credentials",
        "password-not-available",
        "performance-network",
        "performance-instance-store",
        "performance-ebs-volume",
        "performance-other",
        "other"
      ]
    },
    "ReportInstanceStatusRequest":{
      "type":"structure",
      "required":[
        "Instances",
        "Status",
        "ReasonCodes"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "Instances":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instances.</p>",
          "locationName":"instanceId"
        },
        "Status":{
          "shape":"ReportStatusType",
          "documentation":"<p>The status of all instances listed.</p>",
          "locationName":"status"
        },
        "StartTime":{
          "shape":"DateTime",
          "documentation":"<p>The time at which the reported instance health state began.</p>",
          "locationName":"startTime"
        },
        "EndTime":{
          "shape":"DateTime",
          "documentation":"<p>The time at which the reported instance health state ended.</p>",
          "locationName":"endTime"
        },
        "ReasonCodes":{
          "shape":"ReasonCodesList",
          "documentation":"<p>One or more reason codes that describes the health state of your instance.</p> <ul> <li><p><code>instance-stuck-in-state</code>: My instance is stuck in a state.</p></li> <li><p><code>unresponsive</code>: My instance is unresponsive.</p></li> <li><p><code>not-accepting-credentials</code>: My instance is not accepting my credentials.</p></li> <li><p><code>password-not-available</code>: A password is not available for my instance.</p></li> <li><p><code>performance-network</code>: My instance is experiencing performance problems which I believe are network related.</p></li> <li><p><code>performance-instance-store</code>: My instance is experiencing performance problems which I believe are related to the instance stores.</p></li> <li><p><code>performance-ebs-volume</code>: My instance is experiencing performance problems which I believe are related to an EBS volume.</p></li> <li><p><code>performance-other</code>: My instance is experiencing performance problems.</p></li> <li><p><code>other</code>: [explain using the description parameter]</p></li> </ul>",
          "locationName":"reasonCode"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>Descriptive text about the health state of your instance.</p>",
          "locationName":"description"
        }
      }
    },
    "ReportStatusType":{
      "type":"string",
      "enum":[
        "ok",
        "impaired"
      ]
    },
    "RequestHostIdList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"item"
      }
    },
    "RequestSpotFleetRequest":{
      "type":"structure",
      "required":["SpotFleetRequestConfig"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SpotFleetRequestConfig":{
          "shape":"SpotFleetRequestConfigData",
          "documentation":"<p>The configuration for the Spot fleet request.</p>",
          "locationName":"spotFleetRequestConfig"
        }
      },
      "documentation":"<p>Contains the parameters for RequestSpotFleet.</p>"
    },
    "RequestSpotFleetResponse":{
      "type":"structure",
      "required":["SpotFleetRequestId"],
      "members":{
        "SpotFleetRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestId"
        }
      },
      "documentation":"<p>Contains the output of RequestSpotFleet.</p>"
    },
    "RequestSpotInstancesRequest":{
      "type":"structure",
      "required":["SpotPrice"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SpotPrice":{
          "shape":"String",
          "documentation":"<p>The maximum hourly price (bid) for any Spot instance launched to fulfill the request.</p>",
          "locationName":"spotPrice"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>",
          "locationName":"clientToken"
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of Spot instances to launch.</p> <p>Default: 1</p>",
          "locationName":"instanceCount"
        },
        "Type":{
          "shape":"SpotInstanceType",
          "documentation":"<p>The Spot instance request type.</p> <p>Default: <code>one-time</code></p>",
          "locationName":"type"
        },
        "ValidFrom":{
          "shape":"DateTime",
          "documentation":"<p>The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.</p> <p>Default: The request is effective indefinitely.</p>",
          "locationName":"validFrom"
        },
        "ValidUntil":{
          "shape":"DateTime",
          "documentation":"<p>The end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.</p> <p>Default: The request is effective indefinitely.</p>",
          "locationName":"validUntil"
        },
        "LaunchGroup":{
          "shape":"String",
          "documentation":"<p>The instance launch group. Launch groups are Spot instances that launch together and terminate together.</p> <p>Default: Instances are launched and terminated individually</p>",
          "locationName":"launchGroup"
        },
        "AvailabilityZoneGroup":{
          "shape":"String",
          "documentation":"<p>The user-specified name for a logical grouping of bids.</p> <p>When you specify an Availability Zone group in a Spot Instance request, all Spot instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to bids for Spot Instances of the same instance type. Any additional Spot instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.</p> <p>If there is no active instance running in the Availability Zone group that you specify for a new Spot instance request (all instances are terminated, the bid is expired, or the bid falls below current market), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.</p> <p>Default: Instances are launched in any available Availability Zone.</p>",
          "locationName":"availabilityZoneGroup"
        },
        "BlockDurationMinutes":{
          "shape":"Integer",
          "documentation":"<p>The required duration for the Spot instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p> <p>The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.</p> <p>Note that you can't specify an Availability Zone group or a launch group if you specify a duration.</p>",
          "locationName":"blockDurationMinutes"
        },
        "LaunchSpecification":{"shape":"RequestSpotLaunchSpecification"}
      },
      "documentation":"<p>Contains the parameters for RequestSpotInstances.</p>"
    },
    "RequestSpotInstancesResult":{
      "type":"structure",
      "members":{
        "SpotInstanceRequests":{
          "shape":"SpotInstanceRequestList",
          "documentation":"<p>One or more Spot instance requests.</p>",
          "locationName":"spotInstanceRequestSet"
        }
      },
      "documentation":"<p>Contains the output of RequestSpotInstances.</p>"
    },
    "RequestSpotLaunchSpecification":{
      "type":"structure",
      "members":{
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>",
          "locationName":"imageId"
        },
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair.</p>",
          "locationName":"keyName"
        },
        "SecurityGroups":{
          "shape":"ValueStringList",
          "locationName":"SecurityGroup"
        },
        "UserData":{
          "shape":"String",
          "documentation":"<p>The Base64-encoded MIME user data to make available to the instances.</p>",
          "locationName":"userData"
        },
        "AddressingType":{
          "shape":"String",
          "documentation":"<p>Deprecated.</p>",
          "locationName":"addressingType"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type.</p>",
          "locationName":"instanceType"
        },
        "Placement":{
          "shape":"SpotPlacement",
          "documentation":"<p>The placement information for the instance.</p>",
          "locationName":"placement"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The ID of the kernel.</p>",
          "locationName":"kernelId"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The ID of the RAM disk.</p>",
          "locationName":"ramdiskId"
        },
        "BlockDeviceMappings":{
          "shape":"BlockDeviceMappingList",
          "documentation":"<p>One or more block device mapping entries.</p>",
          "locationName":"blockDeviceMapping"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet in which to launch the instance.</p>",
          "locationName":"subnetId"
        },
        "NetworkInterfaces":{
          "shape":"InstanceNetworkInterfaceSpecificationList",
          "documentation":"<p>One or more network interfaces.</p>",
          "locationName":"NetworkInterface"
        },
        "IamInstanceProfile":{
          "shape":"IamInstanceProfileSpecification",
          "documentation":"<p>The IAM instance profile.</p>",
          "locationName":"iamInstanceProfile"
        },
        "EbsOptimized":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code></p>",
          "locationName":"ebsOptimized"
        },
        "Monitoring":{
          "shape":"RunInstancesMonitoringEnabled",
          "locationName":"monitoring"
        },
        "SecurityGroupIds":{
          "shape":"ValueStringList",
          "locationName":"SecurityGroupId"
        }
      },
      "documentation":"<p>Describes the launch specification for an instance.</p>"
    },
    "Reservation":{
      "type":"structure",
      "members":{
        "ReservationId":{
          "shape":"String",
          "documentation":"<p>The ID of the reservation.</p>",
          "locationName":"reservationId"
        },
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The ID of the AWS account that owns the reservation.</p>",
          "locationName":"ownerId"
        },
        "RequesterId":{
          "shape":"String",
          "documentation":"<p>The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).</p>",
          "locationName":"requesterId"
        },
        "Groups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>[EC2-Classic only] One or more security groups.</p>",
          "locationName":"groupSet"
        },
        "Instances":{
          "shape":"InstanceList",
          "documentation":"<p>One or more instances.</p>",
          "locationName":"instancesSet"
        }
      },
      "documentation":"<p>Describes a reservation.</p>"
    },
    "ReservationList":{
      "type":"list",
      "member":{
        "shape":"Reservation",
        "locationName":"item"
      }
    },
    "ReservedInstanceLimitPrice":{
      "type":"structure",
      "members":{
        "Amount":{
          "shape":"Double",
          "documentation":"<p>Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).</p>",
          "locationName":"amount"
        },
        "CurrencyCode":{
          "shape":"CurrencyCodeValues",
          "documentation":"<p>The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.</p>",
          "locationName":"currencyCode"
        }
      },
      "documentation":"<p>Describes the limit price of a Reserved Instance offering.</p>"
    },
    "ReservedInstanceState":{
      "type":"string",
      "enum":[
        "payment-pending",
        "active",
        "payment-failed",
        "retired"
      ]
    },
    "ReservedInstances":{
      "type":"structure",
      "members":{
        "ReservedInstancesId":{
          "shape":"String",
          "documentation":"<p>The ID of the Reserved Instance.</p>",
          "locationName":"reservedInstancesId"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type on which the Reserved Instance can be used.</p>",
          "locationName":"instanceType"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the Reserved Instance can be used.</p>",
          "locationName":"availabilityZone"
        },
        "Start":{
          "shape":"DateTime",
          "documentation":"<p>The date and time the Reserved Instance started.</p>",
          "locationName":"start"
        },
        "End":{
          "shape":"DateTime",
          "documentation":"<p>The time when the Reserved Instance expires.</p>",
          "locationName":"end"
        },
        "Duration":{
          "shape":"Long",
          "documentation":"<p>The duration of the Reserved Instance, in seconds.</p>",
          "locationName":"duration"
        },
        "UsagePrice":{
          "shape":"Float",
          "documentation":"<p>The usage price of the Reserved Instance, per hour.</p>",
          "locationName":"usagePrice"
        },
        "FixedPrice":{
          "shape":"Float",
          "documentation":"<p>The purchase price of the Reserved Instance.</p>",
          "locationName":"fixedPrice"
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of reservations purchased.</p>",
          "locationName":"instanceCount"
        },
        "ProductDescription":{
          "shape":"RIProductDescription",
          "documentation":"<p>The Reserved Instance product platform description.</p>",
          "locationName":"productDescription"
        },
        "State":{
          "shape":"ReservedInstanceState",
          "documentation":"<p>The state of the Reserved Instance purchase.</p>",
          "locationName":"state"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the resource.</p>",
          "locationName":"tagSet"
        },
        "InstanceTenancy":{
          "shape":"Tenancy",
          "documentation":"<p>The tenancy of the instance.</p>",
          "locationName":"instanceTenancy"
        },
        "CurrencyCode":{
          "shape":"CurrencyCodeValues",
          "documentation":"<p>The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.</p>",
          "locationName":"currencyCode"
        },
        "OfferingType":{
          "shape":"OfferingTypeValues",
          "documentation":"<p>The Reserved Instance offering type.</p>",
          "locationName":"offeringType"
        },
        "RecurringCharges":{
          "shape":"RecurringChargesList",
          "documentation":"<p>The recurring charge tag assigned to the resource.</p>",
          "locationName":"recurringCharges"
        }
      },
      "documentation":"<p>Describes a Reserved Instance.</p>"
    },
    "ReservedInstancesConfiguration":{
      "type":"structure",
      "members":{
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone for the modified Reserved Instances.</p>",
          "locationName":"availabilityZone"
        },
        "Platform":{
          "shape":"String",
          "documentation":"<p>The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.</p>",
          "locationName":"platform"
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of modified Reserved Instances.</p>",
          "locationName":"instanceCount"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type for the modified Reserved Instances.</p>",
          "locationName":"instanceType"
        }
      },
      "documentation":"<p>Describes the configuration settings for the modified Reserved Instances.</p>"
    },
    "ReservedInstancesConfigurationList":{
      "type":"list",
      "member":{
        "shape":"ReservedInstancesConfiguration",
        "locationName":"item"
      }
    },
    "ReservedInstancesId":{
      "type":"structure",
      "members":{
        "ReservedInstancesId":{
          "shape":"String",
          "documentation":"<p>The ID of the Reserved Instance.</p>",
          "locationName":"reservedInstancesId"
        }
      },
      "documentation":"<p>Describes the ID of a Reserved Instance.</p>"
    },
    "ReservedInstancesIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ReservedInstancesId"
      }
    },
    "ReservedInstancesList":{
      "type":"list",
      "member":{
        "shape":"ReservedInstances",
        "locationName":"item"
      }
    },
    "ReservedInstancesListing":{
      "type":"structure",
      "members":{
        "ReservedInstancesListingId":{
          "shape":"String",
          "documentation":"<p>The ID of the Reserved Instance listing.</p>",
          "locationName":"reservedInstancesListingId"
        },
        "ReservedInstancesId":{
          "shape":"String",
          "documentation":"<p>The ID of the Reserved Instance.</p>",
          "locationName":"reservedInstancesId"
        },
        "CreateDate":{
          "shape":"DateTime",
          "documentation":"<p>The time the listing was created.</p>",
          "locationName":"createDate"
        },
        "UpdateDate":{
          "shape":"DateTime",
          "documentation":"<p>The last modified timestamp of the listing.</p>",
          "locationName":"updateDate"
        },
        "Status":{
          "shape":"ListingStatus",
          "documentation":"<p>The status of the Reserved Instance listing.</p>",
          "locationName":"status"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>The reason for the current status of the Reserved Instance listing. The response can be blank.</p>",
          "locationName":"statusMessage"
        },
        "InstanceCounts":{
          "shape":"InstanceCountList",
          "documentation":"<p>The number of instances in this state.</p>",
          "locationName":"instanceCounts"
        },
        "PriceSchedules":{
          "shape":"PriceScheduleList",
          "documentation":"<p>The price of the Reserved Instance listing.</p>",
          "locationName":"priceSchedules"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the resource.</p>",
          "locationName":"tagSet"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
          "locationName":"clientToken"
        }
      },
      "documentation":"<p>Describes a Reserved Instance listing.</p>"
    },
    "ReservedInstancesListingList":{
      "type":"list",
      "member":{
        "shape":"ReservedInstancesListing",
        "locationName":"item"
      }
    },
    "ReservedInstancesModification":{
      "type":"structure",
      "members":{
        "ReservedInstancesModificationId":{
          "shape":"String",
          "documentation":"<p>A unique ID for the Reserved Instance modification.</p>",
          "locationName":"reservedInstancesModificationId"
        },
        "ReservedInstancesIds":{
          "shape":"ReservedIntancesIds",
          "documentation":"<p>The IDs of one or more Reserved Instances.</p>",
          "locationName":"reservedInstancesSet"
        },
        "ModificationResults":{
          "shape":"ReservedInstancesModificationResultList",
          "documentation":"<p>Contains target configurations along with their corresponding new Reserved Instance IDs.</p>",
          "locationName":"modificationResultSet"
        },
        "CreateDate":{
          "shape":"DateTime",
          "documentation":"<p>The time when the modification request was created.</p>",
          "locationName":"createDate"
        },
        "UpdateDate":{
          "shape":"DateTime",
          "documentation":"<p>The time when the modification request was last updated.</p>",
          "locationName":"updateDate"
        },
        "EffectiveDate":{
          "shape":"DateTime",
          "documentation":"<p>The time for the modification to become effective.</p>",
          "locationName":"effectiveDate"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>The status of the Reserved Instances modification request.</p>",
          "locationName":"status"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>The reason for the status.</p>",
          "locationName":"statusMessage"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
          "locationName":"clientToken"
        }
      },
      "documentation":"<p>Describes a Reserved Instance modification.</p>"
    },
    "ReservedInstancesModificationIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ReservedInstancesModificationId"
      }
    },
    "ReservedInstancesModificationList":{
      "type":"list",
      "member":{
        "shape":"ReservedInstancesModification",
        "locationName":"item"
      }
    },
    "ReservedInstancesModificationResult":{
      "type":"structure",
      "members":{
        "ReservedInstancesId":{
          "shape":"String",
          "documentation":"<p>The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.</p>",
          "locationName":"reservedInstancesId"
        },
        "TargetConfiguration":{
          "shape":"ReservedInstancesConfiguration",
          "documentation":"<p>The target Reserved Instances configurations supplied as part of the modification request.</p>",
          "locationName":"targetConfiguration"
        }
      }
    },
    "ReservedInstancesModificationResultList":{
      "type":"list",
      "member":{
        "shape":"ReservedInstancesModificationResult",
        "locationName":"item"
      }
    },
    "ReservedInstancesOffering":{
      "type":"structure",
      "members":{
        "ReservedInstancesOfferingId":{
          "shape":"String",
          "documentation":"<p>The ID of the Reserved Instance offering.</p>",
          "locationName":"reservedInstancesOfferingId"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type on which the Reserved Instance can be used.</p>",
          "locationName":"instanceType"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the Reserved Instance can be used.</p>",
          "locationName":"availabilityZone"
        },
        "Duration":{
          "shape":"Long",
          "documentation":"<p>The duration of the Reserved Instance, in seconds.</p>",
          "locationName":"duration"
        },
        "UsagePrice":{
          "shape":"Float",
          "documentation":"<p>The usage price of the Reserved Instance, per hour.</p>",
          "locationName":"usagePrice"
        },
        "FixedPrice":{
          "shape":"Float",
          "documentation":"<p>The purchase price of the Reserved Instance.</p>",
          "locationName":"fixedPrice"
        },
        "ProductDescription":{
          "shape":"RIProductDescription",
          "documentation":"<p>The Reserved Instance product platform description.</p>",
          "locationName":"productDescription"
        },
        "InstanceTenancy":{
          "shape":"Tenancy",
          "documentation":"<p>The tenancy of the instance.</p>",
          "locationName":"instanceTenancy"
        },
        "CurrencyCode":{
          "shape":"CurrencyCodeValues",
          "documentation":"<p>The currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.</p>",
          "locationName":"currencyCode"
        },
        "OfferingType":{
          "shape":"OfferingTypeValues",
          "documentation":"<p>The Reserved Instance offering type.</p>",
          "locationName":"offeringType"
        },
        "RecurringCharges":{
          "shape":"RecurringChargesList",
          "documentation":"<p>The recurring charge tag assigned to the resource.</p>",
          "locationName":"recurringCharges"
        },
        "Marketplace":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is <code>true</code>.</p>",
          "locationName":"marketplace"
        },
        "PricingDetails":{
          "shape":"PricingDetailsList",
          "documentation":"<p>The pricing details of the Reserved Instance offering.</p>",
          "locationName":"pricingDetailsSet"
        }
      },
      "documentation":"<p>Describes a Reserved Instance offering.</p>"
    },
    "ReservedInstancesOfferingIdStringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "ReservedInstancesOfferingList":{
      "type":"list",
      "member":{
        "shape":"ReservedInstancesOffering",
        "locationName":"item"
      }
    },
    "ReservedIntancesIds":{
      "type":"list",
      "member":{
        "shape":"ReservedInstancesId",
        "locationName":"item"
      }
    },
    "ResetImageAttributeName":{
      "type":"string",
      "enum":["launchPermission"]
    },
    "ResetImageAttributeRequest":{
      "type":"structure",
      "required":[
        "ImageId",
        "Attribute"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>"
        },
        "Attribute":{
          "shape":"ResetImageAttributeName",
          "documentation":"<p>The attribute to reset (currently you can only reset the launch permission attribute).</p>"
        }
      }
    },
    "ResetInstanceAttributeRequest":{
      "type":"structure",
      "required":[
        "InstanceId",
        "Attribute"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "Attribute":{
          "shape":"InstanceAttributeName",
          "documentation":"<p>The attribute to reset.</p>",
          "locationName":"attribute"
        }
      }
    },
    "ResetNetworkInterfaceAttributeRequest":{
      "type":"structure",
      "required":["NetworkInterfaceId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "SourceDestCheck":{
          "shape":"String",
          "documentation":"<p>The source/destination checking attribute. Resets the value to <code>true</code>.</p>",
          "locationName":"sourceDestCheck"
        }
      }
    },
    "ResetSnapshotAttributeRequest":{
      "type":"structure",
      "required":[
        "SnapshotId",
        "Attribute"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the snapshot.</p>"
        },
        "Attribute":{
          "shape":"SnapshotAttributeName",
          "documentation":"<p>The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.</p>"
        }
      }
    },
    "ResourceIdList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "ResourceType":{
      "type":"string",
      "enum":[
        "customer-gateway",
        "dhcp-options",
        "image",
        "instance",
        "internet-gateway",
        "network-acl",
        "network-interface",
        "reserved-instances",
        "route-table",
        "snapshot",
        "spot-instances-request",
        "subnet",
        "security-group",
        "volume",
        "vpc",
        "vpn-connection",
        "vpn-gateway"
      ]
    },
    "ResponseHostIdList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"item"
      }
    },
    "RestorableByStringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "RestoreAddressToClassicRequest":{
      "type":"structure",
      "required":["PublicIp"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>The Elastic IP address.</p>",
          "locationName":"publicIp"
        }
      }
    },
    "RestoreAddressToClassicResult":{
      "type":"structure",
      "members":{
        "Status":{
          "shape":"Status",
          "documentation":"<p>The move status for the IP address.</p>",
          "locationName":"status"
        },
        "PublicIp":{
          "shape":"String",
          "documentation":"<p>The Elastic IP address.</p>",
          "locationName":"publicIp"
        }
      }
    },
    "RevokeSecurityGroupEgressRequest":{
      "type":"structure",
      "required":["GroupId"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "GroupId":{
          "shape":"String",
          "documentation":"<p>The ID of the security group.</p>",
          "locationName":"groupId"
        },
        "SourceSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead.</p>",
          "locationName":"sourceSecurityGroupName"
        },
        "SourceSecurityGroupOwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account number for a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead.</p>",
          "locationName":"sourceSecurityGroupOwnerId"
        },
        "IpProtocol":{
          "shape":"String",
          "documentation":"<p>The IP protocol name or number. We recommend that you specify the protocol in a set of IP permissions instead.</p>",
          "locationName":"ipProtocol"
        },
        "FromPort":{
          "shape":"Integer",
          "documentation":"<p>The start of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.</p>",
          "locationName":"fromPort"
        },
        "ToPort":{
          "shape":"Integer",
          "documentation":"<p>The end of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.</p>",
          "locationName":"toPort"
        },
        "CidrIp":{
          "shape":"String",
          "documentation":"<p>The CIDR IP address range. We recommend that you specify the CIDR range in a set of IP permissions instead.</p>",
          "locationName":"cidrIp"
        },
        "IpPermissions":{
          "shape":"IpPermissionList",
          "documentation":"<p>A set of IP permissions. You can't specify a destination security group and a CIDR IP address range.</p>",
          "locationName":"ipPermissions"
        }
      }
    },
    "RevokeSecurityGroupIngressRequest":{
      "type":"structure",
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "GroupName":{
          "shape":"String",
          "documentation":"<p>[EC2-Classic, default VPC] The name of the security group.</p>"
        },
        "GroupId":{
          "shape":"String",
          "documentation":"<p>The ID of the security group. Required for a security group in a nondefault VPC.</p>"
        },
        "SourceSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC.</p>"
        },
        "SourceSecurityGroupOwnerId":{
          "shape":"String",
          "documentation":"<p>[EC2-Classic, default VPC] The AWS account ID of the source security group. For EC2-VPC, the source security group must be in the same VPC. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.</p>"
        },
        "IpProtocol":{
          "shape":"String",
          "documentation":"<p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers</a>). Use <code>-1</code> to specify all.</p>"
        },
        "FromPort":{
          "shape":"Integer",
          "documentation":"<p>The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types.</p>"
        },
        "ToPort":{
          "shape":"Integer",
          "documentation":"<p>The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type.</p>"
        },
        "CidrIp":{
          "shape":"String",
          "documentation":"<p>The CIDR IP address range. You can't specify this parameter when specifying a source security group.</p>"
        },
        "IpPermissions":{
          "shape":"IpPermissionList",
          "documentation":"<p>A set of IP permissions. You can't specify a source security group and a CIDR IP address range.</p>"
        }
      }
    },
    "Route":{
      "type":"structure",
      "members":{
        "DestinationCidrBlock":{
          "shape":"String",
          "documentation":"<p>The CIDR block used for the destination match.</p>",
          "locationName":"destinationCidrBlock"
        },
        "DestinationPrefixListId":{
          "shape":"String",
          "documentation":"<p>The prefix of the AWS service.</p>",
          "locationName":"destinationPrefixListId"
        },
        "GatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of a gateway attached to your VPC.</p>",
          "locationName":"gatewayId"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of a NAT instance in your VPC.</p>",
          "locationName":"instanceId"
        },
        "InstanceOwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the owner of the instance.</p>",
          "locationName":"instanceOwnerId"
        },
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "VpcPeeringConnectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC peering connection.</p>",
          "locationName":"vpcPeeringConnectionId"
        },
        "NatGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of a NAT gateway.</p>",
          "locationName":"natGatewayId"
        },
        "State":{
          "shape":"RouteState",
          "documentation":"<p>The state of the route. The <code>blackhole</code> state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).</p>",
          "locationName":"state"
        },
        "Origin":{
          "shape":"RouteOrigin",
          "documentation":"<p>Describes how the route was created.</p> <ul> <li><code>CreateRouteTable</code> indicates that route was automatically created when the route table was created.</li> <li><code>CreateRoute</code> indicates that the route was manually added to the route table.</li> <li><code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</li> </ul>",
          "locationName":"origin"
        }
      },
      "documentation":"<p>Describes a route in a route table.</p>"
    },
    "RouteList":{
      "type":"list",
      "member":{
        "shape":"Route",
        "locationName":"item"
      }
    },
    "RouteOrigin":{
      "type":"string",
      "enum":[
        "CreateRouteTable",
        "CreateRoute",
        "EnableVgwRoutePropagation"
      ]
    },
    "RouteState":{
      "type":"string",
      "enum":[
        "active",
        "blackhole"
      ]
    },
    "RouteTable":{
      "type":"structure",
      "members":{
        "RouteTableId":{
          "shape":"String",
          "documentation":"<p>The ID of the route table.</p>",
          "locationName":"routeTableId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "Routes":{
          "shape":"RouteList",
          "documentation":"<p>The routes in the route table.</p>",
          "locationName":"routeSet"
        },
        "Associations":{
          "shape":"RouteTableAssociationList",
          "documentation":"<p>The associations between the route table and one or more subnets.</p>",
          "locationName":"associationSet"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the route table.</p>",
          "locationName":"tagSet"
        },
        "PropagatingVgws":{
          "shape":"PropagatingVgwList",
          "documentation":"<p>Any virtual private gateway (VGW) propagating routes.</p>",
          "locationName":"propagatingVgwSet"
        }
      },
      "documentation":"<p>Describes a route table.</p>"
    },
    "RouteTableAssociation":{
      "type":"structure",
      "members":{
        "RouteTableAssociationId":{
          "shape":"String",
          "documentation":"<p>The ID of the association between a route table and a subnet.</p>",
          "locationName":"routeTableAssociationId"
        },
        "RouteTableId":{
          "shape":"String",
          "documentation":"<p>The ID of the route table.</p>",
          "locationName":"routeTableId"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet. A subnet ID is not returned for an implicit association.</p>",
          "locationName":"subnetId"
        },
        "Main":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether this is the main route table.</p>",
          "locationName":"main"
        }
      },
      "documentation":"<p>Describes an association between a route table and a subnet.</p>"
    },
    "RouteTableAssociationList":{
      "type":"list",
      "member":{
        "shape":"RouteTableAssociation",
        "locationName":"item"
      }
    },
    "RouteTableList":{
      "type":"list",
      "member":{
        "shape":"RouteTable",
        "locationName":"item"
      }
    },
    "RuleAction":{
      "type":"string",
      "enum":[
        "allow",
        "deny"
      ]
    },
    "RunInstancesMonitoringEnabled":{
      "type":"structure",
      "required":["Enabled"],
      "members":{
        "Enabled":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether monitoring is enabled for the instance.</p>",
          "locationName":"enabled"
        }
      },
      "documentation":"<p>Describes the monitoring for the instance.</p>"
    },
    "RunInstancesRequest":{
      "type":"structure",
      "required":[
        "ImageId",
        "MinCount",
        "MaxCount"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI, which you can get by calling <a>DescribeImages</a>.</p>"
        },
        "MinCount":{
          "shape":"Integer",
          "documentation":"<p>The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</p>"
        },
        "MaxCount":{
          "shape":"Integer",
          "documentation":"<p>The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\">How many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</p>"
        },
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair. You can create a key pair using <a>CreateKeyPair</a> or <a>ImportKeyPair</a>.</p> <important> <p>If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.</p> </important>"
        },
        "SecurityGroups":{
          "shape":"SecurityGroupStringList",
          "documentation":"<p>[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead.</p> <p>Default: Amazon EC2 uses the default security group.</p>",
          "locationName":"SecurityGroup"
        },
        "SecurityGroupIds":{
          "shape":"SecurityGroupIdStringList",
          "documentation":"<p>One or more security group IDs. You can create a security group using <a>CreateSecurityGroup</a>.</p> <p>Default: Amazon EC2 uses the default security group.</p>",
          "locationName":"SecurityGroupId"
        },
        "UserData":{
          "shape":"String",
          "documentation":"<p>Data to configure the instance, or a script to run during instance launch. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html\">Running Commands on Your Linux Instance at Launch</a> (Linux) and <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data\">Adding User Data</a> (Windows). For API calls, the text must be base64-encoded. For command line tools, the encoding is performed for you, and you can load the text from a file.</p>"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: <code>m1.small</code></p>"
        },
        "Placement":{
          "shape":"Placement",
          "documentation":"<p>The placement for the instance.</p>"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The ID of the kernel.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The ID of the RAM disk.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>"
        },
        "BlockDeviceMappings":{
          "shape":"BlockDeviceMappingRequestList",
          "documentation":"<p>The block device mapping.</p>",
          "locationName":"BlockDeviceMapping"
        },
        "Monitoring":{
          "shape":"RunInstancesMonitoringEnabled",
          "documentation":"<p>The monitoring for the instance.</p>"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The ID of the subnet to launch the instance into.</p>"
        },
        "DisableApiTermination":{
          "shape":"Boolean",
          "documentation":"<p>If you set this parameter to <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. If you set this parameter to <code>true</code> and then later want to be able to terminate the instance, you must first change the value of the <code>disableApiTermination</code> attribute to <code>false</code> using <a>ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can terminate the instance by running the shutdown command from the instance.</p> <p>Default: <code>false</code></p>",
          "locationName":"disableApiTermination"
        },
        "InstanceInitiatedShutdownBehavior":{
          "shape":"ShutdownBehavior",
          "documentation":"<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p> <p>Default: <code>stop</code></p>",
          "locationName":"instanceInitiatedShutdownBehavior"
        },
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The primary IP address. You must specify a value from the IP address range of the subnet.</p> <p>Only one private IP address can be designated as primary. Therefore, you can't specify this parameter if <code>PrivateIpAddresses.n.Primary</code> is set to <code>true</code> and <code>PrivateIpAddresses.n.PrivateIpAddress</code> is set to an IP address. </p> <p>Default: We select an IP address from the IP address range of the subnet.</p>",
          "locationName":"privateIpAddress"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>",
          "locationName":"clientToken"
        },
        "AdditionalInfo":{
          "shape":"String",
          "documentation":"<p>Reserved.</p>",
          "locationName":"additionalInfo"
        },
        "NetworkInterfaces":{
          "shape":"InstanceNetworkInterfaceSpecificationList",
          "documentation":"<p>One or more network interfaces.</p>",
          "locationName":"networkInterface"
        },
        "IamInstanceProfile":{
          "shape":"IamInstanceProfileSpecification",
          "documentation":"<p>The IAM instance profile.</p>",
          "locationName":"iamInstanceProfile"
        },
        "EbsOptimized":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code></p>",
          "locationName":"ebsOptimized"
        }
      }
    },
    "RunScheduledInstancesRequest":{
      "type":"structure",
      "required":[
        "ScheduledInstanceId",
        "LaunchSpecification"
      ],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>"
        },
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
          "idempotencyToken":true
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of instances.</p> <p>Default: 1</p>"
        },
        "ScheduledInstanceId":{
          "shape":"String",
          "documentation":"<p>The Scheduled Instance ID.</p>"
        },
        "LaunchSpecification":{
          "shape":"ScheduledInstancesLaunchSpecification",
          "documentation":"<p>The launch specification.</p>"
        }
      },
      "documentation":"<p>Contains the parameters for RunScheduledInstances.</p>"
    },
    "RunScheduledInstancesResult":{
      "type":"structure",
      "members":{
        "InstanceIdSet":{
          "shape":"InstanceIdSet",
          "documentation":"<p>The IDs of the newly launched instances.</p>",
          "locationName":"instanceIdSet"
        }
      },
      "documentation":"<p>Contains the output of RunScheduledInstances.</p>"
    },
    "S3Storage":{
      "type":"structure",
      "members":{
        "Bucket":{
          "shape":"String",
          "documentation":"<p>The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</p>",
          "locationName":"bucket"
        },
        "Prefix":{
          "shape":"String",
          "documentation":"<p>The beginning of the file name of the AMI.</p>",
          "locationName":"prefix"
        },
        "AWSAccessKeyId":{
          "shape":"String",
          "documentation":"<p>The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html\">Best Practices for Managing AWS Access Keys</a>.</p>"
        },
        "UploadPolicy":{
          "shape":"Blob",
          "documentation":"<p>A Base64-encoded Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.</p>",
          "locationName":"uploadPolicy"
        },
        "UploadPolicySignature":{
          "shape":"String",
          "documentation":"<p>The signature of the Base64 encoded JSON document.</p>",
          "locationName":"uploadPolicySignature"
        }
      },
      "documentation":"<p>Describes the storage parameters for S3 and S3 buckets for an instance store-backed AMI.</p>"
    },
    "ScheduledInstance":{
      "type":"structure",
      "members":{
        "ScheduledInstanceId":{
          "shape":"String",
          "documentation":"<p>The Scheduled Instance ID.</p>",
          "locationName":"scheduledInstanceId"
        },
        "InstanceType":{
          "shape":"String",
          "documentation":"<p>The instance type.</p>",
          "locationName":"instanceType"
        },
        "Platform":{
          "shape":"String",
          "documentation":"<p>The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>",
          "locationName":"platform"
        },
        "NetworkPlatform":{
          "shape":"String",
          "documentation":"<p>The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>",
          "locationName":"networkPlatform"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone.</p>",
          "locationName":"availabilityZone"
        },
        "SlotDurationInHours":{
          "shape":"Integer",
          "documentation":"<p>The number of hours in the schedule.</p>",
          "locationName":"slotDurationInHours"
        },
        "Recurrence":{
          "shape":"ScheduledInstanceRecurrence",
          "documentation":"<p>The schedule recurrence.</p>",
          "locationName":"recurrence"
        },
        "PreviousSlotEndTime":{
          "shape":"DateTime",
          "documentation":"<p>The time that the previous schedule ended or will end.</p>",
          "locationName":"previousSlotEndTime"
        },
        "NextSlotStartTime":{
          "shape":"DateTime",
          "documentation":"<p>The time for the next schedule to start.</p>",
          "locationName":"nextSlotStartTime"
        },
        "HourlyPrice":{
          "shape":"String",
          "documentation":"<p>The hourly price for a single instance.</p>",
          "locationName":"hourlyPrice"
        },
        "TotalScheduledInstanceHours":{
          "shape":"Integer",
          "documentation":"<p>The total number of hours for a single instance for the entire term.</p>",
          "locationName":"totalScheduledInstanceHours"
        },
        "InstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of instances.</p>",
          "locationName":"instanceCount"
        },
        "TermStartDate":{
          "shape":"DateTime",
          "documentation":"<p>The start date for the Scheduled Instance.</p>",
          "locationName":"termStartDate"
        },
        "TermEndDate":{
          "shape":"DateTime",
          "documentation":"<p>The end date for the Scheduled Instance.</p>",
          "locationName":"termEndDate"
        },
        "CreateDate":{
          "shape":"DateTime",
          "documentation":"<p>The date when the Scheduled Instance was purchased.</p>",
          "locationName":"createDate"
        }
      },
      "documentation":"<p>Describes a Scheduled Instance.</p>"
    },
    "ScheduledInstanceAvailability":{
      "type":"structure",
      "members":{
        "InstanceType":{
          "shape":"String",
          "documentation":"<p>The instance type. You can specify one of the C3, C4, M4, or R3 instance types.</p>",
          "locationName":"instanceType"
        },
        "Platform":{
          "shape":"String",
          "documentation":"<p>The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>",
          "locationName":"platform"
        },
        "NetworkPlatform":{
          "shape":"String",
          "documentation":"<p>The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>",
          "locationName":"networkPlatform"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone.</p>",
          "locationName":"availabilityZone"
        },
        "PurchaseToken":{
          "shape":"String",
          "documentation":"<p>The purchase token. This token expires in two hours.</p>",
          "locationName":"purchaseToken"
        },
        "SlotDurationInHours":{
          "shape":"Integer",
          "documentation":"<p>The number of hours in the schedule.</p>",
          "locationName":"slotDurationInHours"
        },
        "Recurrence":{
          "shape":"ScheduledInstanceRecurrence",
          "documentation":"<p>The schedule recurrence.</p>",
          "locationName":"recurrence"
        },
        "FirstSlotStartTime":{
          "shape":"DateTime",
          "documentation":"<p>The time period for the first schedule to start.</p>",
          "locationName":"firstSlotStartTime"
        },
        "HourlyPrice":{
          "shape":"String",
          "documentation":"<p>The hourly price for a single instance.</p>",
          "locationName":"hourlyPrice"
        },
        "TotalScheduledInstanceHours":{
          "shape":"Integer",
          "documentation":"<p>The total number of hours for a single instance for the entire term.</p>",
          "locationName":"totalScheduledInstanceHours"
        },
        "AvailableInstanceCount":{
          "shape":"Integer",
          "documentation":"<p>The number of available instances.</p>",
          "locationName":"availableInstanceCount"
        },
        "MinTermDurationInDays":{
          "shape":"Integer",
          "documentation":"<p>The minimum term. The only possible value is 365 days.</p>",
          "locationName":"minTermDurationInDays"
        },
        "MaxTermDurationInDays":{
          "shape":"Integer",
          "documentation":"<p>The maximum term. The only possible value is 365 days.</p>",
          "locationName":"maxTermDurationInDays"
        }
      },
      "documentation":"<p>Describes a schedule that is available for your Scheduled Instances.</p>"
    },
    "ScheduledInstanceAvailabilitySet":{
      "type":"list",
      "member":{
        "shape":"ScheduledInstanceAvailability",
        "locationName":"item"
      }
    },
    "ScheduledInstanceIdRequestSet":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ScheduledInstanceId"
      }
    },
    "ScheduledInstanceRecurrence":{
      "type":"structure",
      "members":{
        "Frequency":{
          "shape":"String",
          "documentation":"<p>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</p>",
          "locationName":"frequency"
        },
        "Interval":{
          "shape":"Integer",
          "documentation":"<p>The interval quantity. The interval unit depends on the value of <code>frequency</code>. For example, every 2 weeks or every 2 months.</p>",
          "locationName":"interval"
        },
        "OccurrenceDaySet":{
          "shape":"OccurrenceDaySet",
          "documentation":"<p>The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).</p>",
          "locationName":"occurrenceDaySet"
        },
        "OccurrenceRelativeToEnd":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the occurrence is relative to the end of the specified week or month.</p>",
          "locationName":"occurrenceRelativeToEnd"
        },
        "OccurrenceUnit":{
          "shape":"String",
          "documentation":"<p>The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).</p>",
          "locationName":"occurrenceUnit"
        }
      },
      "documentation":"<p>Describes the recurring schedule for a Scheduled Instance.</p>"
    },
    "ScheduledInstanceRecurrenceRequest":{
      "type":"structure",
      "members":{
        "Frequency":{
          "shape":"String",
          "documentation":"<p>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</p>"
        },
        "Interval":{
          "shape":"Integer",
          "documentation":"<p>The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months.</p>"
        },
        "OccurrenceDays":{
          "shape":"OccurrenceDayRequestSet",
          "documentation":"<p>The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.</p>",
          "locationName":"OccurrenceDay"
        },
        "OccurrenceRelativeToEnd":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule.</p>"
        },
        "OccurrenceUnit":{
          "shape":"String",
          "documentation":"<p>The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule.</p>"
        }
      },
      "documentation":"<p>Describes the recurring schedule for a Scheduled Instance.</p>"
    },
    "ScheduledInstanceSet":{
      "type":"list",
      "member":{
        "shape":"ScheduledInstance",
        "locationName":"item"
      }
    },
    "ScheduledInstancesBlockDeviceMapping":{
      "type":"structure",
      "members":{
        "DeviceName":{
          "shape":"String",
          "documentation":"<p>The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>"
        },
        "NoDevice":{
          "shape":"String",
          "documentation":"<p>Suppresses the specified device included in the block device mapping of the AMI.</p>"
        },
        "VirtualName":{
          "shape":"String",
          "documentation":"<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>"
        },
        "Ebs":{
          "shape":"ScheduledInstancesEbs",
          "documentation":"<p>Parameters used to set up EBS volumes automatically when the instance is launched.</p>"
        }
      },
      "documentation":"<p>Describes a block device mapping for a Scheduled Instance.</p>"
    },
    "ScheduledInstancesBlockDeviceMappingSet":{
      "type":"list",
      "member":{
        "shape":"ScheduledInstancesBlockDeviceMapping",
        "locationName":"BlockDeviceMapping"
      }
    },
    "ScheduledInstancesEbs":{
      "type":"structure",
      "members":{
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the snapshot.</p>"
        },
        "VolumeSize":{
          "shape":"Integer",
          "documentation":"<p>The size of the volume, in GiB.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the volume is deleted on instance termination.</p>"
        },
        "VolumeType":{
          "shape":"String",
          "documentation":"<p>The volume type. <code>gp2</code> for General Purpose (SSD) volumes, <code>io1</code> for Provisioned IOPS (SSD) volumes, and <code>standard</code> for Magnetic volumes.</p> <p>Default: <code>standard</code></p>"
        },
        "Iops":{
          "shape":"Integer",
          "documentation":"<p>The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose (SSD) volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose (SSD) baseline performance, I/O credits, and bursting, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100 to 20000 for Provisioned IOPS (SSD) volumes and 3 to 10000 for General Purpose (SSD) volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code> volumes; it is not used in requests to create <code>standard</code> or <code>gp2</code> volumes.</p>"
        },
        "Encrypted":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them.</p>"
        }
      },
      "documentation":"<p>Describes an EBS volume for a Scheduled Instance.</p>"
    },
    "ScheduledInstancesIamInstanceProfile":{
      "type":"structure",
      "members":{
        "Arn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN).</p>"
        },
        "Name":{
          "shape":"String",
          "documentation":"<p>The name.</p>"
        }
      },
      "documentation":"<p>Describes an IAM instance profile for a Scheduled Instance.</p>"
    },
    "ScheduledInstancesLaunchSpecification":{
      "type":"structure",
      "required":["ImageId"],
      "members":{
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the Amazon Machine Image (AMI).</p>"
        },
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair.</p>"
        },
        "SecurityGroupIds":{
          "shape":"ScheduledInstancesSecurityGroupIdSet",
          "documentation":"<p>The IDs of one or more security groups.</p>",
          "locationName":"SecurityGroupId"
        },
        "UserData":{
          "shape":"String",
          "documentation":"<p>The base64-encoded MIME user data.</p>"
        },
        "Placement":{
          "shape":"ScheduledInstancesPlacement",
          "documentation":"<p>The placement information.</p>"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The ID of the kernel.</p>"
        },
        "InstanceType":{
          "shape":"String",
          "documentation":"<p>The instance type.</p>"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The ID of the RAM disk.</p>"
        },
        "BlockDeviceMappings":{
          "shape":"ScheduledInstancesBlockDeviceMappingSet",
          "documentation":"<p>One or more block device mapping entries.</p>",
          "locationName":"BlockDeviceMapping"
        },
        "Monitoring":{
          "shape":"ScheduledInstancesMonitoring",
          "documentation":"<p>Enable or disable monitoring for the instances.</p>"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet in which to launch the instances.</p>"
        },
        "NetworkInterfaces":{
          "shape":"ScheduledInstancesNetworkInterfaceSet",
          "documentation":"<p>One or more network interfaces.</p>",
          "locationName":"NetworkInterface"
        },
        "IamInstanceProfile":{
          "shape":"ScheduledInstancesIamInstanceProfile",
          "documentation":"<p>The IAM instance profile.</p>"
        },
        "EbsOptimized":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code></p>"
        }
      },
      "documentation":"<p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>"
    },
    "ScheduledInstancesMonitoring":{
      "type":"structure",
      "members":{
        "Enabled":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether monitoring is enabled.</p>"
        }
      },
      "documentation":"<p>Describes whether monitoring is enabled for a Scheduled Instance.</p>"
    },
    "ScheduledInstancesNetworkInterface":{
      "type":"structure",
      "members":{
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>"
        },
        "DeviceIndex":{
          "shape":"Integer",
          "documentation":"<p>The index of the device for the network interface attachment.</p>"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description.</p>"
        },
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The IP address of the network interface within the subnet.</p>"
        },
        "PrivateIpAddressConfigs":{
          "shape":"PrivateIpAddressConfigSet",
          "documentation":"<p>The private IP addresses.</p>",
          "locationName":"PrivateIpAddressConfig"
        },
        "SecondaryPrivateIpAddressCount":{
          "shape":"Integer",
          "documentation":"<p>The number of secondary private IP addresses.</p>"
        },
        "AssociatePublicIpAddress":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether to assign a public IP address to instances launched in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.</p>"
        },
        "Groups":{
          "shape":"ScheduledInstancesSecurityGroupIdSet",
          "documentation":"<p>The IDs of one or more security groups.</p>",
          "locationName":"Group"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether to delete the interface when the instance is terminated.</p>"
        }
      },
      "documentation":"<p>Describes a network interface for a Scheduled Instance.</p>"
    },
    "ScheduledInstancesNetworkInterfaceSet":{
      "type":"list",
      "member":{
        "shape":"ScheduledInstancesNetworkInterface",
        "locationName":"NetworkInterface"
      }
    },
    "ScheduledInstancesPlacement":{
      "type":"structure",
      "members":{
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone.</p>"
        },
        "GroupName":{
          "shape":"String",
          "documentation":"<p>The name of the placement group.</p>"
        }
      },
      "documentation":"<p>Describes the placement for a Scheduled Instance.</p>"
    },
    "ScheduledInstancesPrivateIpAddressConfig":{
      "type":"structure",
      "members":{
        "PrivateIpAddress":{
          "shape":"String",
          "documentation":"<p>The IP address.</p>"
        },
        "Primary":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether this is a primary IP address. Otherwise, this is a secondary IP address.</p>"
        }
      },
      "documentation":"<p>Describes a private IP address for a Scheduled Instance.</p>"
    },
    "ScheduledInstancesSecurityGroupIdSet":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SecurityGroupId"
      }
    },
    "SecurityGroup":{
      "type":"structure",
      "members":{
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the owner of the security group.</p>",
          "locationName":"ownerId"
        },
        "GroupName":{
          "shape":"String",
          "documentation":"<p>The name of the security group.</p>",
          "locationName":"groupName"
        },
        "GroupId":{
          "shape":"String",
          "documentation":"<p>The ID of the security group.</p>",
          "locationName":"groupId"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the security group.</p>",
          "locationName":"groupDescription"
        },
        "IpPermissions":{
          "shape":"IpPermissionList",
          "documentation":"<p>One or more inbound rules associated with the security group.</p>",
          "locationName":"ipPermissions"
        },
        "IpPermissionsEgress":{
          "shape":"IpPermissionList",
          "documentation":"<p>[EC2-VPC] One or more outbound rules associated with the security group.</p>",
          "locationName":"ipPermissionsEgress"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>[EC2-VPC] The ID of the VPC for the security group.</p>",
          "locationName":"vpcId"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the security group.</p>",
          "locationName":"tagSet"
        }
      },
      "documentation":"<p>Describes a security group</p>"
    },
    "SecurityGroupIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SecurityGroupId"
      }
    },
    "SecurityGroupList":{
      "type":"list",
      "member":{
        "shape":"SecurityGroup",
        "locationName":"item"
      }
    },
    "SecurityGroupStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SecurityGroup"
      }
    },
    "ShutdownBehavior":{
      "type":"string",
      "enum":[
        "stop",
        "terminate"
      ]
    },
    "SlotDateTimeRangeRequest":{
      "type":"structure",
      "required":[
        "EarliestTime",
        "LatestTime"
      ],
      "members":{
        "EarliestTime":{
          "shape":"DateTime",
          "documentation":"<p>The earliest date and time, in UTC, for the Scheduled Instance to start.</p>"
        },
        "LatestTime":{
          "shape":"DateTime",
          "documentation":"<p>The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.</p>"
        }
      },
      "documentation":"<p>Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day.</p>"
    },
    "SlotStartTimeRangeRequest":{
      "type":"structure",
      "members":{
        "EarliestTime":{
          "shape":"DateTime",
          "documentation":"<p>The earliest date and time, in UTC, for the Scheduled Instance to start.</p>"
        },
        "LatestTime":{
          "shape":"DateTime",
          "documentation":"<p>The latest date and time, in UTC, for the Scheduled Instance to start.</p>"
        }
      },
      "documentation":"<p>Describes the time period for a Scheduled Instance to start its first schedule.</p>"
    },
    "Snapshot":{
      "type":"structure",
      "members":{
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The ID of the snapshot. Each snapshot receives a unique identifier when it is created.</p>",
          "locationName":"snapshotId"
        },
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume that was used to create the snapshot.</p>",
          "locationName":"volumeId"
        },
        "State":{
          "shape":"SnapshotState",
          "documentation":"<p>The snapshot state.</p>",
          "locationName":"status"
        },
        "StateMessage":{
          "shape":"String",
          "documentation":"<p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by the <a>DescribeSnapshots</a> API operation.</p>",
          "locationName":"statusMessage"
        },
        "StartTime":{
          "shape":"DateTime",
          "documentation":"<p>The time stamp when the snapshot was initiated.</p>",
          "locationName":"startTime"
        },
        "Progress":{
          "shape":"String",
          "documentation":"<p>The progress of the snapshot, as a percentage.</p>",
          "locationName":"progress"
        },
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the EBS snapshot owner.</p>",
          "locationName":"ownerId"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description for the snapshot.</p>",
          "locationName":"description"
        },
        "VolumeSize":{
          "shape":"Integer",
          "documentation":"<p>The size of the volume, in GiB.</p>",
          "locationName":"volumeSize"
        },
        "OwnerAlias":{
          "shape":"String",
          "documentation":"<p>The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or AWS account ID that owns the snapshot.</p>",
          "locationName":"ownerAlias"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the snapshot.</p>",
          "locationName":"tagSet"
        },
        "Encrypted":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the snapshot is encrypted.</p>",
          "locationName":"encrypted"
        },
        "KmsKeyId":{
          "shape":"String",
          "documentation":"<p>The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.</p>",
          "locationName":"kmsKeyId"
        },
        "DataEncryptionKeyId":{
          "shape":"String",
          "documentation":"<p>The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by the <a>DescribeSnapshots</a> API operation.</p>",
          "locationName":"dataEncryptionKeyId"
        }
      },
      "documentation":"<p>Describes a snapshot.</p>"
    },
    "SnapshotAttributeName":{
      "type":"string",
      "enum":[
        "productCodes",
        "createVolumePermission"
      ]
    },
    "SnapshotDetail":{
      "type":"structure",
      "members":{
        "DiskImageSize":{
          "shape":"Double",
          "documentation":"<p>The size of the disk in the snapshot, in GiB.</p>",
          "locationName":"diskImageSize"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description for the snapshot.</p>",
          "locationName":"description"
        },
        "Format":{
          "shape":"String",
          "documentation":"<p>The format of the disk image from which the snapshot is created.</p>",
          "locationName":"format"
        },
        "Url":{
          "shape":"String",
          "documentation":"<p>The URL used to access the disk image.</p>",
          "locationName":"url"
        },
        "UserBucket":{
          "shape":"UserBucketDetails",
          "locationName":"userBucket"
        },
        "DeviceName":{
          "shape":"String",
          "documentation":"<p>The block device mapping for the snapshot.</p>",
          "locationName":"deviceName"
        },
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The snapshot ID of the disk being imported.</p>",
          "locationName":"snapshotId"
        },
        "Progress":{
          "shape":"String",
          "documentation":"<p>The percentage of progress for the task.</p>",
          "locationName":"progress"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>A detailed status message for the snapshot creation.</p>",
          "locationName":"statusMessage"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>A brief status of the snapshot creation.</p>",
          "locationName":"status"
        }
      },
      "documentation":"<p>Describes the snapshot created from the imported disk.</p>"
    },
    "SnapshotDetailList":{
      "type":"list",
      "member":{
        "shape":"SnapshotDetail",
        "locationName":"item"
      }
    },
    "SnapshotDiskContainer":{
      "type":"structure",
      "members":{
        "Description":{
          "shape":"String",
          "documentation":"<p>The description of the disk image being imported.</p>"
        },
        "Format":{
          "shape":"String",
          "documentation":"<p>The format of the disk image being imported.</p> <p>Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code></p>"
        },
        "Url":{
          "shape":"String",
          "documentation":"<p>The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..).</p>"
        },
        "UserBucket":{"shape":"UserBucket"}
      },
      "documentation":"<p>The disk container object for the import snapshot request.</p>"
    },
    "SnapshotIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SnapshotId"
      }
    },
    "SnapshotList":{
      "type":"list",
      "member":{
        "shape":"Snapshot",
        "locationName":"item"
      }
    },
    "SnapshotState":{
      "type":"string",
      "enum":[
        "pending",
        "completed",
        "error"
      ]
    },
    "SnapshotTaskDetail":{
      "type":"structure",
      "members":{
        "DiskImageSize":{
          "shape":"Double",
          "documentation":"<p>The size of the disk in the snapshot, in GiB.</p>",
          "locationName":"diskImageSize"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description of the snapshot.</p>",
          "locationName":"description"
        },
        "Format":{
          "shape":"String",
          "documentation":"<p>The format of the disk image from which the snapshot is created.</p>",
          "locationName":"format"
        },
        "Url":{
          "shape":"String",
          "documentation":"<p>The URL of the disk image from which the snapshot is created.</p>",
          "locationName":"url"
        },
        "UserBucket":{
          "shape":"UserBucketDetails",
          "documentation":"<p>The S3 bucket for the disk image.</p>",
          "locationName":"userBucket"
        },
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The snapshot ID of the disk being imported.</p>",
          "locationName":"snapshotId"
        },
        "Progress":{
          "shape":"String",
          "documentation":"<p>The percentage of completion for the import snapshot task.</p>",
          "locationName":"progress"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>A detailed status message for the import snapshot task.</p>",
          "locationName":"statusMessage"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>A brief status for the import snapshot task.</p>",
          "locationName":"status"
        }
      },
      "documentation":"<p>Details about the import snapshot task.</p>"
    },
    "SpotDatafeedSubscription":{
      "type":"structure",
      "members":{
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the account.</p>",
          "locationName":"ownerId"
        },
        "Bucket":{
          "shape":"String",
          "documentation":"<p>The Amazon S3 bucket where the Spot instance data feed is located.</p>",
          "locationName":"bucket"
        },
        "Prefix":{
          "shape":"String",
          "documentation":"<p>The prefix that is prepended to data feed files.</p>",
          "locationName":"prefix"
        },
        "State":{
          "shape":"DatafeedSubscriptionState",
          "documentation":"<p>The state of the Spot instance data feed subscription.</p>",
          "locationName":"state"
        },
        "Fault":{
          "shape":"SpotInstanceStateFault",
          "documentation":"<p>The fault codes for the Spot instance request, if any.</p>",
          "locationName":"fault"
        }
      },
      "documentation":"<p>Describes the data feed for a Spot instance.</p>"
    },
    "SpotFleetLaunchSpecification":{
      "type":"structure",
      "members":{
        "ImageId":{
          "shape":"String",
          "documentation":"<p>The ID of the AMI.</p>",
          "locationName":"imageId"
        },
        "KeyName":{
          "shape":"String",
          "documentation":"<p>The name of the key pair.</p>",
          "locationName":"keyName"
        },
        "SecurityGroups":{
          "shape":"GroupIdentifierList",
          "documentation":"<p>One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.</p>",
          "locationName":"groupSet"
        },
        "UserData":{
          "shape":"String",
          "documentation":"<p>The Base64-encoded MIME user data to make available to the instances.</p>",
          "locationName":"userData"
        },
        "AddressingType":{
          "shape":"String",
          "documentation":"<p>Deprecated.</p>",
          "locationName":"addressingType"
        },
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type.</p>",
          "locationName":"instanceType"
        },
        "Placement":{
          "shape":"SpotPlacement",
          "documentation":"<p>The placement information.</p>",
          "locationName":"placement"
        },
        "KernelId":{
          "shape":"String",
          "documentation":"<p>The ID of the kernel.</p>",
          "locationName":"kernelId"
        },
        "RamdiskId":{
          "shape":"String",
          "documentation":"<p>The ID of the RAM disk.</p>",
          "locationName":"ramdiskId"
        },
        "BlockDeviceMappings":{
          "shape":"BlockDeviceMappingList",
          "documentation":"<p>One or more block device mapping entries.</p>",
          "locationName":"blockDeviceMapping"
        },
        "Monitoring":{
          "shape":"SpotFleetMonitoring",
          "documentation":"<p>Enable or disable monitoring for the instances.</p>",
          "locationName":"monitoring"
        },
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet in which to launch the instances. To specify multiple subnets, separate them using commas; for example, \"subnet-a61dafcf, subnet-65ea5f08\".</p>",
          "locationName":"subnetId"
        },
        "NetworkInterfaces":{
          "shape":"InstanceNetworkInterfaceSpecificationList",
          "documentation":"<p>One or more network interfaces.</p>",
          "locationName":"networkInterfaceSet"
        },
        "IamInstanceProfile":{
          "shape":"IamInstanceProfileSpecification",
          "documentation":"<p>The IAM instance profile.</p>",
          "locationName":"iamInstanceProfile"
        },
        "EbsOptimized":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code></p>",
          "locationName":"ebsOptimized"
        },
        "WeightedCapacity":{
          "shape":"Double",
          "documentation":"<p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms (instances or a performance characteristic such as vCPUs, memory, or I/O).</p> <p>If the target capacity divided by this value is not a whole number, we round the number of instances to the next whole number. If this value is not specified, the default is 1.</p>",
          "locationName":"weightedCapacity"
        },
        "SpotPrice":{
          "shape":"String",
          "documentation":"<p>The bid price per unit hour for the specified instance type. If this value is not specified, the default is the Spot bid price specified for the fleet. To determine the bid price per unit hour, divide the Spot bid price by the value of <code>WeightedCapacity</code>.</p>",
          "locationName":"spotPrice"
        }
      },
      "documentation":"<p>Describes the launch specification for one or more Spot instances.</p>"
    },
    "SpotFleetMonitoring":{
      "type":"structure",
      "members":{
        "Enabled":{
          "shape":"Boolean",
          "documentation":"<p>Enables monitoring for the instance.</p> <p>Default: <code>false</code></p>",
          "locationName":"enabled"
        }
      },
      "documentation":"<p>Describes whether monitoring is enabled.</p>"
    },
    "SpotFleetRequestConfig":{
      "type":"structure",
      "required":[
        "SpotFleetRequestId",
        "SpotFleetRequestState",
        "SpotFleetRequestConfig",
        "CreateTime"
      ],
      "members":{
        "SpotFleetRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestId"
        },
        "SpotFleetRequestState":{
          "shape":"BatchState",
          "documentation":"<p>The state of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestState"
        },
        "SpotFleetRequestConfig":{
          "shape":"SpotFleetRequestConfigData",
          "documentation":"<p>Information about the configuration of the Spot fleet request.</p>",
          "locationName":"spotFleetRequestConfig"
        },
        "CreateTime":{
          "shape":"DateTime",
          "documentation":"<p>The creation date and time of the request.</p>",
          "locationName":"createTime"
        }
      },
      "documentation":"<p>Describes a Spot fleet request.</p>"
    },
    "SpotFleetRequestConfigData":{
      "type":"structure",
      "required":[
        "SpotPrice",
        "TargetCapacity",
        "IamFleetRole",
        "LaunchSpecifications"
      ],
      "members":{
        "ClientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p>",
          "locationName":"clientToken"
        },
        "SpotPrice":{
          "shape":"String",
          "documentation":"<p>The bid price per unit hour.</p>",
          "locationName":"spotPrice"
        },
        "TargetCapacity":{
          "shape":"Integer",
          "documentation":"<p>The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O.</p>",
          "locationName":"targetCapacity"
        },
        "ValidFrom":{
          "shape":"DateTime",
          "documentation":"<p>The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately.</p>",
          "locationName":"validFrom"
        },
        "ValidUntil":{
          "shape":"DateTime",
          "documentation":"<p>The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new Spot instance requests are placed or enabled to fulfill the request.</p>",
          "locationName":"validUntil"
        },
        "TerminateInstancesWithExpiration":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether running Spot instances should be terminated when the Spot fleet request expires.</p>",
          "locationName":"terminateInstancesWithExpiration"
        },
        "IamFleetRole":{
          "shape":"String",
          "documentation":"<p>Grants the Spot fleet permission to terminate Spot instances on your behalf when you cancel its Spot fleet request using <a>CancelSpotFleetRequests</a> or when the Spot fleet request expires, if you set <code>terminateInstancesWithExpiration</code>.</p>",
          "locationName":"iamFleetRole"
        },
        "LaunchSpecifications":{
          "shape":"LaunchSpecsList",
          "documentation":"<p>Information about the launch specifications for the Spot fleet request.</p>",
          "locationName":"launchSpecifications"
        },
        "ExcessCapacityTerminationPolicy":{
          "shape":"ExcessCapacityTerminationPolicy",
          "documentation":"<p>Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.</p>",
          "locationName":"excessCapacityTerminationPolicy"
        },
        "AllocationStrategy":{
          "shape":"AllocationStrategy",
          "documentation":"<p>Indicates how to allocate the target capacity across the Spot pools specified by the Spot fleet request. The default is <code>lowestPrice</code>.</p>",
          "locationName":"allocationStrategy"
        }
      },
      "documentation":"<p>Describes the configuration of a Spot fleet request.</p>"
    },
    "SpotFleetRequestConfigSet":{
      "type":"list",
      "member":{
        "shape":"SpotFleetRequestConfig",
        "locationName":"item"
      }
    },
    "SpotInstanceRequest":{
      "type":"structure",
      "members":{
        "SpotInstanceRequestId":{
          "shape":"String",
          "documentation":"<p>The ID of the Spot instance request.</p>",
          "locationName":"spotInstanceRequestId"
        },
        "SpotPrice":{
          "shape":"String",
          "documentation":"<p>The maximum hourly price (bid) for the Spot instance launched to fulfill the request.</p>",
          "locationName":"spotPrice"
        },
        "Type":{
          "shape":"SpotInstanceType",
          "documentation":"<p>The Spot instance request type.</p>",
          "locationName":"type"
        },
        "State":{
          "shape":"SpotInstanceState",
          "documentation":"<p>The state of the Spot instance request. Spot bid status information can help you track your Spot instance requests. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html\">Spot Bid Status</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>",
          "locationName":"state"
        },
        "Fault":{
          "shape":"SpotInstanceStateFault",
          "documentation":"<p>The fault codes for the Spot instance request, if any.</p>",
          "locationName":"fault"
        },
        "Status":{
          "shape":"SpotInstanceStatus",
          "documentation":"<p>The status code and status message describing the Spot instance request.</p>",
          "locationName":"status"
        },
        "ValidFrom":{
          "shape":"DateTime",
          "documentation":"<p>The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The request becomes active at this date and time.</p>",
          "locationName":"validFrom"
        },
        "ValidUntil":{
          "shape":"DateTime",
          "documentation":"<p>The end date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached.</p>",
          "locationName":"validUntil"
        },
        "LaunchGroup":{
          "shape":"String",
          "documentation":"<p>The instance launch group. Launch groups are Spot instances that launch together and terminate together.</p>",
          "locationName":"launchGroup"
        },
        "AvailabilityZoneGroup":{
          "shape":"String",
          "documentation":"<p>The Availability Zone group. If you specify the same Availability Zone group for all Spot instance requests, all Spot instances are launched in the same Availability Zone.</p>",
          "locationName":"availabilityZoneGroup"
        },
        "LaunchSpecification":{
          "shape":"LaunchSpecification",
          "documentation":"<p>Additional information for launching instances.</p>",
          "locationName":"launchSpecification"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The instance ID, if an instance has been launched to fulfill the Spot instance request.</p>",
          "locationName":"instanceId"
        },
        "CreateTime":{
          "shape":"DateTime",
          "documentation":"<p>The date and time when the Spot instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"createTime"
        },
        "ProductDescription":{
          "shape":"RIProductDescription",
          "documentation":"<p>The product description associated with the Spot instance.</p>",
          "locationName":"productDescription"
        },
        "BlockDurationMinutes":{
          "shape":"Integer",
          "documentation":"<p>The duration for the Spot instance, in minutes.</p>",
          "locationName":"blockDurationMinutes"
        },
        "ActualBlockHourlyPrice":{
          "shape":"String",
          "documentation":"<p>If you specified a duration and your Spot instance request was fulfilled, this is the fixed hourly price in effect for the Spot instance while it runs.</p>",
          "locationName":"actualBlockHourlyPrice"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the resource.</p>",
          "locationName":"tagSet"
        },
        "LaunchedAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the bid is launched.</p>",
          "locationName":"launchedAvailabilityZone"
        }
      },
      "documentation":"<p>Describes a Spot instance request.</p>"
    },
    "SpotInstanceRequestIdList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SpotInstanceRequestId"
      }
    },
    "SpotInstanceRequestList":{
      "type":"list",
      "member":{
        "shape":"SpotInstanceRequest",
        "locationName":"item"
      }
    },
    "SpotInstanceState":{
      "type":"string",
      "enum":[
        "open",
        "active",
        "closed",
        "cancelled",
        "failed"
      ]
    },
    "SpotInstanceStateFault":{
      "type":"structure",
      "members":{
        "Code":{
          "shape":"String",
          "documentation":"<p>The reason code for the Spot instance state change.</p>",
          "locationName":"code"
        },
        "Message":{
          "shape":"String",
          "documentation":"<p>The message for the Spot instance state change.</p>",
          "locationName":"message"
        }
      },
      "documentation":"<p>Describes a Spot instance state change.</p>"
    },
    "SpotInstanceStatus":{
      "type":"structure",
      "members":{
        "Code":{
          "shape":"String",
          "documentation":"<p>The status code. For a list of status codes, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand\">Spot Bid Status Codes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>",
          "locationName":"code"
        },
        "UpdateTime":{
          "shape":"DateTime",
          "documentation":"<p>The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"updateTime"
        },
        "Message":{
          "shape":"String",
          "documentation":"<p>The description for the status code.</p>",
          "locationName":"message"
        }
      },
      "documentation":"<p>Describes the status of a Spot instance request.</p>"
    },
    "SpotInstanceType":{
      "type":"string",
      "enum":[
        "one-time",
        "persistent"
      ]
    },
    "SpotPlacement":{
      "type":"structure",
      "members":{
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone.</p> <p>[Spot fleet only] To specify multiple Availability Zones, separate them using commas; for example, \"us-west-2a, us-west-2b\".</p>",
          "locationName":"availabilityZone"
        },
        "GroupName":{
          "shape":"String",
          "documentation":"<p>The name of the placement group (for cluster instances).</p>",
          "locationName":"groupName"
        }
      },
      "documentation":"<p>Describes Spot instance placement.</p>"
    },
    "SpotPrice":{
      "type":"structure",
      "members":{
        "InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type.</p>",
          "locationName":"instanceType"
        },
        "ProductDescription":{
          "shape":"RIProductDescription",
          "documentation":"<p>A general description of the AMI.</p>",
          "locationName":"productDescription"
        },
        "SpotPrice":{
          "shape":"String",
          "documentation":"<p>The maximum price (bid) that you are willing to pay for a Spot instance.</p>",
          "locationName":"spotPrice"
        },
        "Timestamp":{
          "shape":"DateTime",
          "documentation":"<p>The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>",
          "locationName":"timestamp"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone.</p>",
          "locationName":"availabilityZone"
        }
      },
      "documentation":"<p>Describes the maximum hourly price (bid) for any Spot instance launched to fulfill the request.</p>"
    },
    "SpotPriceHistoryList":{
      "type":"list",
      "member":{
        "shape":"SpotPrice",
        "locationName":"item"
      }
    },
    "StartInstancesRequest":{
      "type":"structure",
      "required":["InstanceIds"],
      "members":{
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p>",
          "locationName":"InstanceId"
        },
        "AdditionalInfo":{
          "shape":"String",
          "documentation":"<p>Reserved.</p>",
          "locationName":"additionalInfo"
        },
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        }
      }
    },
    "StartInstancesResult":{
      "type":"structure",
      "members":{
        "StartingInstances":{
          "shape":"InstanceStateChangeList",
          "documentation":"<p>Information about one or more started instances.</p>",
          "locationName":"instancesSet"
        }
      }
    },
    "State":{
      "type":"string",
      "enum":[
        "Pending",
        "Available",
        "Deleting",
        "Deleted"
      ]
    },
    "StateReason":{
      "type":"structure",
      "members":{
        "Code":{
          "shape":"String",
          "documentation":"<p>The reason code for the state change.</p>",
          "locationName":"code"
        },
        "Message":{
          "shape":"String",
          "documentation":"<p>The message for the state change.</p> <ul> <li><p><code>Server.SpotInstanceTermination</code>: A Spot instance was terminated due to an increase in the market price.</p></li> <li><p><code>Server.InternalError</code>: An internal error occurred during instance launch, resulting in termination.</p></li> <li><p><code>Server.InsufficientInstanceCapacity</code>: There was insufficient instance capacity to satisfy the launch request.</p></li> <li><p><code>Client.InternalError</code>: A client error caused the instance to terminate on launch.</p></li> <li><p><code>Client.InstanceInitiatedShutdown</code>: The instance was shut down using the <code>shutdown -h</code> command from the instance.</p></li> <li><p><code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p></li> <li><p><code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your limits.</p></li> <li><p><code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p></li> </ul>",
          "locationName":"message"
        }
      },
      "documentation":"<p>Describes a state change.</p>"
    },
    "Status":{
      "type":"string",
      "enum":[
        "MoveInProgress",
        "InVpc",
        "InClassic"
      ]
    },
    "StatusName":{
      "type":"string",
      "enum":["reachability"]
    },
    "StatusType":{
      "type":"string",
      "enum":[
        "passed",
        "failed",
        "insufficient-data",
        "initializing"
      ]
    },
    "StopInstancesRequest":{
      "type":"structure",
      "required":["InstanceIds"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p>",
          "locationName":"InstanceId"
        },
        "Force":{
          "shape":"Boolean",
          "documentation":"<p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p> <p>Default: <code>false</code></p>",
          "locationName":"force"
        }
      }
    },
    "StopInstancesResult":{
      "type":"structure",
      "members":{
        "StoppingInstances":{
          "shape":"InstanceStateChangeList",
          "documentation":"<p>Information about one or more stopped instances.</p>",
          "locationName":"instancesSet"
        }
      }
    },
    "Storage":{
      "type":"structure",
      "members":{
        "S3":{
          "shape":"S3Storage",
          "documentation":"<p>An Amazon S3 storage location.</p>"
        }
      },
      "documentation":"<p>Describes the storage location for an instance store-backed AMI.</p>"
    },
    "String":{"type":"string"},
    "Subnet":{
      "type":"structure",
      "members":{
        "SubnetId":{
          "shape":"String",
          "documentation":"<p>The ID of the subnet.</p>",
          "locationName":"subnetId"
        },
        "State":{
          "shape":"SubnetState",
          "documentation":"<p>The current state of the subnet.</p>",
          "locationName":"state"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC the subnet is in.</p>",
          "locationName":"vpcId"
        },
        "CidrBlock":{
          "shape":"String",
          "documentation":"<p>The CIDR block assigned to the subnet.</p>",
          "locationName":"cidrBlock"
        },
        "AvailableIpAddressCount":{
          "shape":"Integer",
          "documentation":"<p>The number of unused IP addresses in the subnet. Note that the IP addresses for any stopped instances are considered unavailable.</p>",
          "locationName":"availableIpAddressCount"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone of the subnet.</p>",
          "locationName":"availabilityZone"
        },
        "DefaultForAz":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether this is the default subnet for the Availability Zone.</p>",
          "locationName":"defaultForAz"
        },
        "MapPublicIpOnLaunch":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether instances launched in this subnet receive a public IP address.</p>",
          "locationName":"mapPublicIpOnLaunch"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the subnet.</p>",
          "locationName":"tagSet"
        }
      },
      "documentation":"<p>Describes a subnet.</p>"
    },
    "SubnetIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SubnetId"
      }
    },
    "SubnetList":{
      "type":"list",
      "member":{
        "shape":"Subnet",
        "locationName":"item"
      }
    },
    "SubnetState":{
      "type":"string",
      "enum":[
        "pending",
        "available"
      ]
    },
    "SummaryStatus":{
      "type":"string",
      "enum":[
        "ok",
        "impaired",
        "insufficient-data",
        "not-applicable",
        "initializing"
      ]
    },
    "Tag":{
      "type":"structure",
      "members":{
        "Key":{
          "shape":"String",
          "documentation":"<p>The key of the tag. </p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code></p>",
          "locationName":"key"
        },
        "Value":{
          "shape":"String",
          "documentation":"<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</p>",
          "locationName":"value"
        }
      },
      "documentation":"<p>Describes a tag.</p>"
    },
    "TagDescription":{
      "type":"structure",
      "members":{
        "ResourceId":{
          "shape":"String",
          "documentation":"<p>The ID of the resource. For example, <code>ami-1a2b3c4d</code>.</p>",
          "locationName":"resourceId"
        },
        "ResourceType":{
          "shape":"ResourceType",
          "documentation":"<p>The resource type.</p>",
          "locationName":"resourceType"
        },
        "Key":{
          "shape":"String",
          "documentation":"<p>The tag key.</p>",
          "locationName":"key"
        },
        "Value":{
          "shape":"String",
          "documentation":"<p>The tag value.</p>",
          "locationName":"value"
        }
      },
      "documentation":"<p>Describes a tag.</p>"
    },
    "TagDescriptionList":{
      "type":"list",
      "member":{
        "shape":"TagDescription",
        "locationName":"item"
      }
    },
    "TagList":{
      "type":"list",
      "member":{
        "shape":"Tag",
        "locationName":"item"
      }
    },
    "TelemetryStatus":{
      "type":"string",
      "enum":[
        "UP",
        "DOWN"
      ]
    },
    "Tenancy":{
      "type":"string",
      "enum":[
        "default",
        "dedicated",
        "host"
      ]
    },
    "TerminateInstancesRequest":{
      "type":"structure",
      "required":["InstanceIds"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p>",
          "locationName":"InstanceId"
        }
      }
    },
    "TerminateInstancesResult":{
      "type":"structure",
      "members":{
        "TerminatingInstances":{
          "shape":"InstanceStateChangeList",
          "documentation":"<p>Information about one or more terminated instances.</p>",
          "locationName":"instancesSet"
        }
      }
    },
    "TrafficType":{
      "type":"string",
      "enum":[
        "ACCEPT",
        "REJECT",
        "ALL"
      ]
    },
    "UnassignPrivateIpAddressesRequest":{
      "type":"structure",
      "required":[
        "NetworkInterfaceId",
        "PrivateIpAddresses"
      ],
      "members":{
        "NetworkInterfaceId":{
          "shape":"String",
          "documentation":"<p>The ID of the network interface.</p>",
          "locationName":"networkInterfaceId"
        },
        "PrivateIpAddresses":{
          "shape":"PrivateIpAddressStringList",
          "documentation":"<p>The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.</p>",
          "locationName":"privateIpAddress"
        }
      }
    },
    "UnmonitorInstancesRequest":{
      "type":"structure",
      "required":["InstanceIds"],
      "members":{
        "DryRun":{
          "shape":"Boolean",
          "documentation":"<p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>",
          "locationName":"dryRun"
        },
        "InstanceIds":{
          "shape":"InstanceIdStringList",
          "documentation":"<p>One or more instance IDs.</p>",
          "locationName":"InstanceId"
        }
      }
    },
    "UnmonitorInstancesResult":{
      "type":"structure",
      "members":{
        "InstanceMonitorings":{
          "shape":"InstanceMonitoringList",
          "documentation":"<p>Monitoring information for one or more instances.</p>",
          "locationName":"instancesSet"
        }
      }
    },
    "UnsuccessfulItem":{
      "type":"structure",
      "required":["Error"],
      "members":{
        "ResourceId":{
          "shape":"String",
          "documentation":"<p>The ID of the resource.</p>",
          "locationName":"resourceId"
        },
        "Error":{
          "shape":"UnsuccessfulItemError",
          "documentation":"<p>Information about the error.</p>",
          "locationName":"error"
        }
      },
      "documentation":"<p>Information about items that were not successfully processed in a batch call.</p>"
    },
    "UnsuccessfulItemError":{
      "type":"structure",
      "required":[
        "Code",
        "Message"
      ],
      "members":{
        "Code":{
          "shape":"String",
          "documentation":"<p>The error code.</p>",
          "locationName":"code"
        },
        "Message":{
          "shape":"String",
          "documentation":"<p>The error message accompanying the error code.</p>",
          "locationName":"message"
        }
      },
      "documentation":"<p>Information about the error that occurred. For more information about errors, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html\">Error Codes</a>.</p>"
    },
    "UnsuccessfulItemList":{
      "type":"list",
      "member":{
        "shape":"UnsuccessfulItem",
        "locationName":"item"
      }
    },
    "UnsuccessfulItemSet":{
      "type":"list",
      "member":{
        "shape":"UnsuccessfulItem",
        "locationName":"item"
      }
    },
    "UserBucket":{
      "type":"structure",
      "members":{
        "S3Bucket":{
          "shape":"String",
          "documentation":"<p>The name of the S3 bucket where the disk image is located.</p>"
        },
        "S3Key":{
          "shape":"String",
          "documentation":"<p>The file name of the disk image.</p>"
        }
      },
      "documentation":"<p>Describes the S3 bucket for the disk image.</p>"
    },
    "UserBucketDetails":{
      "type":"structure",
      "members":{
        "S3Bucket":{
          "shape":"String",
          "documentation":"<p>The S3 bucket from which the disk image was created.</p>",
          "locationName":"s3Bucket"
        },
        "S3Key":{
          "shape":"String",
          "documentation":"<p>The file name of the disk image.</p>",
          "locationName":"s3Key"
        }
      },
      "documentation":"<p>Describes the S3 bucket for the disk image.</p>"
    },
    "UserData":{
      "type":"structure",
      "members":{
        "Data":{
          "shape":"String",
          "documentation":"<p>The Base64-encoded MIME user data for the instance.</p>",
          "locationName":"data"
        }
      },
      "documentation":"<p>Describes the user data to be made available to an instance.</p>"
    },
    "UserGroupStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"UserGroup"
      }
    },
    "UserIdGroupPair":{
      "type":"structure",
      "members":{
        "UserId":{
          "shape":"String",
          "documentation":"<p>The ID of an AWS account.</p>",
          "locationName":"userId"
        },
        "GroupName":{
          "shape":"String",
          "documentation":"<p>The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use <code>GroupId</code>.</p>",
          "locationName":"groupName"
        },
        "GroupId":{
          "shape":"String",
          "documentation":"<p>The ID of the security group.</p>",
          "locationName":"groupId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC for the referenced security group, if applicable.</p>",
          "locationName":"vpcId"
        },
        "VpcPeeringConnectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC peering connection, if applicable. </p>",
          "locationName":"vpcPeeringConnectionId"
        },
        "PeeringStatus":{
          "shape":"String",
          "documentation":"<p>The status of a VPC peering connection, if applicable.</p>",
          "locationName":"peeringStatus"
        }
      },
      "documentation":"<p>Describes a security group and AWS account ID pair. </p>"
    },
    "UserIdGroupPairList":{
      "type":"list",
      "member":{
        "shape":"UserIdGroupPair",
        "locationName":"item"
      }
    },
    "UserIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"UserId"
      }
    },
    "ValueStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"item"
      }
    },
    "VgwTelemetry":{
      "type":"structure",
      "members":{
        "OutsideIpAddress":{
          "shape":"String",
          "documentation":"<p>The Internet-routable IP address of the virtual private gateway's outside interface.</p>",
          "locationName":"outsideIpAddress"
        },
        "Status":{
          "shape":"TelemetryStatus",
          "documentation":"<p>The status of the VPN tunnel.</p>",
          "locationName":"status"
        },
        "LastStatusChange":{
          "shape":"DateTime",
          "documentation":"<p>The date and time of the last change in status.</p>",
          "locationName":"lastStatusChange"
        },
        "StatusMessage":{
          "shape":"String",
          "documentation":"<p>If an error occurs, a description of the error.</p>",
          "locationName":"statusMessage"
        },
        "AcceptedRouteCount":{
          "shape":"Integer",
          "documentation":"<p>The number of accepted routes.</p>",
          "locationName":"acceptedRouteCount"
        }
      },
      "documentation":"<p>Describes telemetry for a VPN tunnel.</p>"
    },
    "VgwTelemetryList":{
      "type":"list",
      "member":{
        "shape":"VgwTelemetry",
        "locationName":"item"
      }
    },
    "VirtualizationType":{
      "type":"string",
      "enum":[
        "hvm",
        "paravirtual"
      ]
    },
    "Volume":{
      "type":"structure",
      "members":{
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume.</p>",
          "locationName":"volumeId"
        },
        "Size":{
          "shape":"Integer",
          "documentation":"<p>The size of the volume, in GiBs.</p>",
          "locationName":"size"
        },
        "SnapshotId":{
          "shape":"String",
          "documentation":"<p>The snapshot from which the volume was created, if applicable.</p>",
          "locationName":"snapshotId"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone for the volume.</p>",
          "locationName":"availabilityZone"
        },
        "State":{
          "shape":"VolumeState",
          "documentation":"<p>The volume state.</p>",
          "locationName":"status"
        },
        "CreateTime":{
          "shape":"DateTime",
          "documentation":"<p>The time stamp when volume creation was initiated.</p>",
          "locationName":"createTime"
        },
        "Attachments":{
          "shape":"VolumeAttachmentList",
          "documentation":"<p>Information about the volume attachments.</p>",
          "locationName":"attachmentSet"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the volume.</p>",
          "locationName":"tagSet"
        },
        "VolumeType":{
          "shape":"VolumeType",
          "documentation":"<p>The volume type. This can be <code>gp2</code> for General Purpose (SSD) volumes, <code>io1</code> for Provisioned IOPS (SSD) volumes, or <code>standard</code> for Magnetic volumes.</p>",
          "locationName":"volumeType"
        },
        "Iops":{
          "shape":"Integer",
          "documentation":"<p>The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose (SSD) volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose (SSD) baseline performance, I/O credits, and bursting, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100 to 20000 for Provisioned IOPS (SSD) volumes and 3 to 10000 for General Purpose (SSD) volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code> volumes; it is not used in requests to create <code>standard</code> or <code>gp2</code> volumes.</p>",
          "locationName":"iops"
        },
        "Encrypted":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the volume will be encrypted.</p>",
          "locationName":"encrypted"
        },
        "KmsKeyId":{
          "shape":"String",
          "documentation":"<p>The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.</p>",
          "locationName":"kmsKeyId"
        }
      },
      "documentation":"<p>Describes a volume.</p>"
    },
    "VolumeAttachment":{
      "type":"structure",
      "members":{
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The ID of the volume.</p>",
          "locationName":"volumeId"
        },
        "InstanceId":{
          "shape":"String",
          "documentation":"<p>The ID of the instance.</p>",
          "locationName":"instanceId"
        },
        "Device":{
          "shape":"String",
          "documentation":"<p>The device name.</p>",
          "locationName":"device"
        },
        "State":{
          "shape":"VolumeAttachmentState",
          "documentation":"<p>The attachment state of the volume.</p>",
          "locationName":"status"
        },
        "AttachTime":{
          "shape":"DateTime",
          "documentation":"<p>The time stamp when the attachment initiated.</p>",
          "locationName":"attachTime"
        },
        "DeleteOnTermination":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the EBS volume is deleted on instance termination.</p>",
          "locationName":"deleteOnTermination"
        }
      },
      "documentation":"<p>Describes volume attachment details.</p>"
    },
    "VolumeAttachmentList":{
      "type":"list",
      "member":{
        "shape":"VolumeAttachment",
        "locationName":"item"
      }
    },
    "VolumeAttachmentState":{
      "type":"string",
      "enum":[
        "attaching",
        "attached",
        "detaching",
        "detached"
      ]
    },
    "VolumeAttributeName":{
      "type":"string",
      "enum":[
        "autoEnableIO",
        "productCodes"
      ]
    },
    "VolumeDetail":{
      "type":"structure",
      "required":["Size"],
      "members":{
        "Size":{
          "shape":"Long",
          "documentation":"<p>The size of the volume, in GiB.</p>",
          "locationName":"size"
        }
      },
      "documentation":"<p>Describes an EBS volume.</p>"
    },
    "VolumeIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"VolumeId"
      }
    },
    "VolumeList":{
      "type":"list",
      "member":{
        "shape":"Volume",
        "locationName":"item"
      }
    },
    "VolumeState":{
      "type":"string",
      "enum":[
        "creating",
        "available",
        "in-use",
        "deleting",
        "deleted",
        "error"
      ]
    },
    "VolumeStatusAction":{
      "type":"structure",
      "members":{
        "Code":{
          "shape":"String",
          "documentation":"<p>The code identifying the operation, for example, <code>enable-volume-io</code>.</p>",
          "locationName":"code"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the operation.</p>",
          "locationName":"description"
        },
        "EventType":{
          "shape":"String",
          "documentation":"<p>The event type associated with this operation.</p>",
          "locationName":"eventType"
        },
        "EventId":{
          "shape":"String",
          "documentation":"<p>The ID of the event associated with this operation.</p>",
          "locationName":"eventId"
        }
      },
      "documentation":"<p>Describes a volume status operation code.</p>"
    },
    "VolumeStatusActionsList":{
      "type":"list",
      "member":{
        "shape":"VolumeStatusAction",
        "locationName":"item"
      }
    },
    "VolumeStatusDetails":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"VolumeStatusName",
          "documentation":"<p>The name of the volume status.</p>",
          "locationName":"name"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>The intended status of the volume status.</p>",
          "locationName":"status"
        }
      },
      "documentation":"<p>Describes a volume status.</p>"
    },
    "VolumeStatusDetailsList":{
      "type":"list",
      "member":{
        "shape":"VolumeStatusDetails",
        "locationName":"item"
      }
    },
    "VolumeStatusEvent":{
      "type":"structure",
      "members":{
        "EventType":{
          "shape":"String",
          "documentation":"<p>The type of this event.</p>",
          "locationName":"eventType"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the event.</p>",
          "locationName":"description"
        },
        "NotBefore":{
          "shape":"DateTime",
          "documentation":"<p>The earliest start time of the event.</p>",
          "locationName":"notBefore"
        },
        "NotAfter":{
          "shape":"DateTime",
          "documentation":"<p>The latest end time of the event.</p>",
          "locationName":"notAfter"
        },
        "EventId":{
          "shape":"String",
          "documentation":"<p>The ID of this event.</p>",
          "locationName":"eventId"
        }
      },
      "documentation":"<p>Describes a volume status event.</p>"
    },
    "VolumeStatusEventsList":{
      "type":"list",
      "member":{
        "shape":"VolumeStatusEvent",
        "locationName":"item"
      }
    },
    "VolumeStatusInfo":{
      "type":"structure",
      "members":{
        "Status":{
          "shape":"VolumeStatusInfoStatus",
          "documentation":"<p>The status of the volume.</p>",
          "locationName":"status"
        },
        "Details":{
          "shape":"VolumeStatusDetailsList",
          "documentation":"<p>The details of the volume status.</p>",
          "locationName":"details"
        }
      },
      "documentation":"<p>Describes the status of a volume.</p>"
    },
    "VolumeStatusInfoStatus":{
      "type":"string",
      "enum":[
        "ok",
        "impaired",
        "insufficient-data"
      ]
    },
    "VolumeStatusItem":{
      "type":"structure",
      "members":{
        "VolumeId":{
          "shape":"String",
          "documentation":"<p>The volume ID.</p>",
          "locationName":"volumeId"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone of the volume.</p>",
          "locationName":"availabilityZone"
        },
        "VolumeStatus":{
          "shape":"VolumeStatusInfo",
          "documentation":"<p>The volume status.</p>",
          "locationName":"volumeStatus"
        },
        "Events":{
          "shape":"VolumeStatusEventsList",
          "documentation":"<p>A list of events associated with the volume.</p>",
          "locationName":"eventsSet"
        },
        "Actions":{
          "shape":"VolumeStatusActionsList",
          "documentation":"<p>The details of the operation.</p>",
          "locationName":"actionsSet"
        }
      },
      "documentation":"<p>Describes the volume status.</p>"
    },
    "VolumeStatusList":{
      "type":"list",
      "member":{
        "shape":"VolumeStatusItem",
        "locationName":"item"
      }
    },
    "VolumeStatusName":{
      "type":"string",
      "enum":[
        "io-enabled",
        "io-performance"
      ]
    },
    "VolumeType":{
      "type":"string",
      "enum":[
        "standard",
        "io1",
        "gp2"
      ]
    },
    "Vpc":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "State":{
          "shape":"VpcState",
          "documentation":"<p>The current state of the VPC.</p>",
          "locationName":"state"
        },
        "CidrBlock":{
          "shape":"String",
          "documentation":"<p>The CIDR block for the VPC.</p>",
          "locationName":"cidrBlock"
        },
        "DhcpOptionsId":{
          "shape":"String",
          "documentation":"<p>The ID of the set of DHCP options you've associated with the VPC (or <code>default</code> if the default options are associated with the VPC).</p>",
          "locationName":"dhcpOptionsId"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the VPC.</p>",
          "locationName":"tagSet"
        },
        "InstanceTenancy":{
          "shape":"Tenancy",
          "documentation":"<p>The allowed tenancy of instances launched into the VPC.</p>",
          "locationName":"instanceTenancy"
        },
        "IsDefault":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the VPC is the default VPC.</p>",
          "locationName":"isDefault"
        }
      },
      "documentation":"<p>Describes a VPC.</p>"
    },
    "VpcAttachment":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "State":{
          "shape":"AttachmentStatus",
          "documentation":"<p>The current state of the attachment.</p>",
          "locationName":"state"
        }
      },
      "documentation":"<p>Describes an attachment between a virtual private gateway and a VPC.</p>"
    },
    "VpcAttachmentList":{
      "type":"list",
      "member":{
        "shape":"VpcAttachment",
        "locationName":"item"
      }
    },
    "VpcAttributeName":{
      "type":"string",
      "enum":[
        "enableDnsSupport",
        "enableDnsHostnames"
      ]
    },
    "VpcClassicLink":{
      "type":"structure",
      "members":{
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        },
        "ClassicLinkEnabled":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the VPC is enabled for ClassicLink.</p>",
          "locationName":"classicLinkEnabled"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the VPC.</p>",
          "locationName":"tagSet"
        }
      },
      "documentation":"<p>Describes whether a VPC is enabled for ClassicLink.</p>"
    },
    "VpcClassicLinkIdList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"VpcId"
      }
    },
    "VpcClassicLinkList":{
      "type":"list",
      "member":{
        "shape":"VpcClassicLink",
        "locationName":"item"
      }
    },
    "VpcEndpoint":{
      "type":"structure",
      "members":{
        "VpcEndpointId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC endpoint.</p>",
          "locationName":"vpcEndpointId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC to which the endpoint is associated.</p>",
          "locationName":"vpcId"
        },
        "ServiceName":{
          "shape":"String",
          "documentation":"<p>The name of the AWS service to which the endpoint is associated.</p>",
          "locationName":"serviceName"
        },
        "State":{
          "shape":"State",
          "documentation":"<p>The state of the VPC endpoint.</p>",
          "locationName":"state"
        },
        "PolicyDocument":{
          "shape":"String",
          "documentation":"<p>The policy document associated with the endpoint.</p>",
          "locationName":"policyDocument"
        },
        "RouteTableIds":{
          "shape":"ValueStringList",
          "documentation":"<p>One or more route tables associated with the endpoint.</p>",
          "locationName":"routeTableIdSet"
        },
        "CreationTimestamp":{
          "shape":"DateTime",
          "documentation":"<p>The date and time the VPC endpoint was created.</p>",
          "locationName":"creationTimestamp"
        }
      },
      "documentation":"<p>Describes a VPC endpoint.</p>"
    },
    "VpcEndpointSet":{
      "type":"list",
      "member":{
        "shape":"VpcEndpoint",
        "locationName":"item"
      }
    },
    "VpcIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"VpcId"
      }
    },
    "VpcList":{
      "type":"list",
      "member":{
        "shape":"Vpc",
        "locationName":"item"
      }
    },
    "VpcPeeringConnection":{
      "type":"structure",
      "members":{
        "AccepterVpcInfo":{
          "shape":"VpcPeeringConnectionVpcInfo",
          "documentation":"<p>The information of the peer VPC.</p>",
          "locationName":"accepterVpcInfo"
        },
        "ExpirationTime":{
          "shape":"DateTime",
          "documentation":"<p>The time that an unaccepted VPC peering connection will expire.</p>",
          "locationName":"expirationTime"
        },
        "RequesterVpcInfo":{
          "shape":"VpcPeeringConnectionVpcInfo",
          "documentation":"<p>The information of the requester VPC.</p>",
          "locationName":"requesterVpcInfo"
        },
        "Status":{
          "shape":"VpcPeeringConnectionStateReason",
          "documentation":"<p>The status of the VPC peering connection.</p>",
          "locationName":"status"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the resource.</p>",
          "locationName":"tagSet"
        },
        "VpcPeeringConnectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC peering connection.</p>",
          "locationName":"vpcPeeringConnectionId"
        }
      },
      "documentation":"<p>Describes a VPC peering connection.</p>"
    },
    "VpcPeeringConnectionList":{
      "type":"list",
      "member":{
        "shape":"VpcPeeringConnection",
        "locationName":"item"
      }
    },
    "VpcPeeringConnectionStateReason":{
      "type":"structure",
      "members":{
        "Code":{
          "shape":"VpcPeeringConnectionStateReasonCode",
          "documentation":"<p>The status of the VPC peering connection.</p>",
          "locationName":"code"
        },
        "Message":{
          "shape":"String",
          "documentation":"<p>A message that provides more information about the status, if applicable.</p>",
          "locationName":"message"
        }
      },
      "documentation":"<p>Describes the status of a VPC peering connection.</p>"
    },
    "VpcPeeringConnectionStateReasonCode":{
      "type":"string",
      "enum":[
        "initiating-request",
        "pending-acceptance",
        "active",
        "deleted",
        "rejected",
        "failed",
        "expired",
        "provisioning",
        "deleting"
      ]
    },
    "VpcPeeringConnectionVpcInfo":{
      "type":"structure",
      "members":{
        "CidrBlock":{
          "shape":"String",
          "documentation":"<p>The CIDR block for the VPC.</p>",
          "locationName":"cidrBlock"
        },
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the VPC owner.</p>",
          "locationName":"ownerId"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPC.</p>",
          "locationName":"vpcId"
        }
      },
      "documentation":"<p>Describes a VPC in a VPC peering connection.</p>"
    },
    "VpcState":{
      "type":"string",
      "enum":[
        "pending",
        "available"
      ]
    },
    "VpnConnection":{
      "type":"structure",
      "members":{
        "VpnConnectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the VPN connection.</p>",
          "locationName":"vpnConnectionId"
        },
        "State":{
          "shape":"VpnState",
          "documentation":"<p>The current state of the VPN connection.</p>",
          "locationName":"state"
        },
        "CustomerGatewayConfiguration":{
          "shape":"String",
          "documentation":"<p>The configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the <a>CreateVpnConnection</a> response; however, it's present in the <a>DescribeVpnConnections</a> response only if the VPN connection is in the <code>pending</code> or <code>available</code> state.</p>",
          "locationName":"customerGatewayConfiguration"
        },
        "Type":{
          "shape":"GatewayType",
          "documentation":"<p>The type of VPN connection.</p>",
          "locationName":"type"
        },
        "CustomerGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the customer gateway at your end of the VPN connection.</p>",
          "locationName":"customerGatewayId"
        },
        "VpnGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the virtual private gateway at the AWS side of the VPN connection.</p>",
          "locationName":"vpnGatewayId"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the VPN connection.</p>",
          "locationName":"tagSet"
        },
        "VgwTelemetry":{
          "shape":"VgwTelemetryList",
          "documentation":"<p>Information about the VPN tunnel.</p>",
          "locationName":"vgwTelemetry"
        },
        "Options":{
          "shape":"VpnConnectionOptions",
          "documentation":"<p>The VPN connection options.</p>",
          "locationName":"options"
        },
        "Routes":{
          "shape":"VpnStaticRouteList",
          "documentation":"<p>The static routes associated with the VPN connection.</p>",
          "locationName":"routes"
        }
      },
      "documentation":"<p>Describes a VPN connection.</p>"
    },
    "VpnConnectionIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"VpnConnectionId"
      }
    },
    "VpnConnectionList":{
      "type":"list",
      "member":{
        "shape":"VpnConnection",
        "locationName":"item"
      }
    },
    "VpnConnectionOptions":{
      "type":"structure",
      "members":{
        "StaticRoutesOnly":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.</p>",
          "locationName":"staticRoutesOnly"
        }
      },
      "documentation":"<p>Describes VPN connection options.</p>"
    },
    "VpnConnectionOptionsSpecification":{
      "type":"structure",
      "members":{
        "StaticRoutesOnly":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.</p>",
          "locationName":"staticRoutesOnly"
        }
      },
      "documentation":"<p>Describes VPN connection options.</p>"
    },
    "VpnGateway":{
      "type":"structure",
      "members":{
        "VpnGatewayId":{
          "shape":"String",
          "documentation":"<p>The ID of the virtual private gateway.</p>",
          "locationName":"vpnGatewayId"
        },
        "State":{
          "shape":"VpnState",
          "documentation":"<p>The current state of the virtual private gateway.</p>",
          "locationName":"state"
        },
        "Type":{
          "shape":"GatewayType",
          "documentation":"<p>The type of VPN connection the virtual private gateway supports.</p>",
          "locationName":"type"
        },
        "AvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned. </p>",
          "locationName":"availabilityZone"
        },
        "VpcAttachments":{
          "shape":"VpcAttachmentList",
          "documentation":"<p>Any VPCs attached to the virtual private gateway.</p>",
          "locationName":"attachments"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>Any tags assigned to the virtual private gateway.</p>",
          "locationName":"tagSet"
        }
      },
      "documentation":"<p>Describes a virtual private gateway.</p>"
    },
    "VpnGatewayIdStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"VpnGatewayId"
      }
    },
    "VpnGatewayList":{
      "type":"list",
      "member":{
        "shape":"VpnGateway",
        "locationName":"item"
      }
    },
    "VpnState":{
      "type":"string",
      "enum":[
        "pending",
        "available",
        "deleting",
        "deleted"
      ]
    },
    "VpnStaticRoute":{
      "type":"structure",
      "members":{
        "DestinationCidrBlock":{
          "shape":"String",
          "documentation":"<p>The CIDR block associated with the local subnet of the customer data center.</p>",
          "locationName":"destinationCidrBlock"
        },
        "Source":{
          "shape":"VpnStaticRouteSource",
          "documentation":"<p>Indicates how the routes were provided.</p>",
          "locationName":"source"
        },
        "State":{
          "shape":"VpnState",
          "documentation":"<p>The current state of the static route.</p>",
          "locationName":"state"
        }
      },
      "documentation":"<p>Describes a static route for a VPN connection.</p>"
    },
    "VpnStaticRouteList":{
      "type":"list",
      "member":{
        "shape":"VpnStaticRoute",
        "locationName":"item"
      }
    },
    "VpnStaticRouteSource":{
      "type":"string",
      "enum":["Static"]
    },
    "ZoneNameStringList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ZoneName"
      }
    }
  },
  "documentation":"<fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster.</p>"
}
                                                                                                                                                                                                                                                             usr/local/lib/python2.7/dist-packages/botocore/data/ec2/2015-10-01/waiters-2.json                   0100644 0000000 0000062 00000034110 13077704371 025156  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "version": 2,
  "waiters": {
    "InstanceExists": {
      "delay": 5,
      "maxAttempts": 40,
      "operation": "DescribeInstances",
      "acceptors": [
        {
          "matcher": "path",
          "expected": true,
          "argument": "length(Reservations[]) > `0`",
          "state": "success"
        },
        {
          "matcher": "error",
          "expected": "InvalidInstanceIDNotFound",
          "state": "retry"
        }
      ]
    },
    "BundleTaskComplete": {
      "delay": 15,
      "operation": "DescribeBundleTasks",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "complete",
          "matcher": "pathAll",
          "state": "success",
          "argument": "BundleTasks[].State"
        },
        {
          "expected": "failed",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "BundleTasks[].State"
        }
      ]
    },
    "ConsoleOutputAvailable": {
      "operation": "GetConsoleOutput",
      "maxAttempts": 40,
      "delay": 15,
      "acceptors": [
        {
          "state": "success",
          "matcher": "path",
          "argument": "length(Output || '') > `0`",
          "expected": true
        }
      ]
    },
    "ConversionTaskCancelled": {
      "delay": 15,
      "operation": "DescribeConversionTasks",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "cancelled",
          "matcher": "pathAll",
          "state": "success",
          "argument": "ConversionTasks[].State"
        }
      ]
    },
    "ConversionTaskCompleted": {
      "delay": 15,
      "operation": "DescribeConversionTasks",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "completed",
          "matcher": "pathAll",
          "state": "success",
          "argument": "ConversionTasks[].State"
        },
        {
          "expected": "cancelled",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ConversionTasks[].State"
        },
        {
          "expected": "cancelling",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ConversionTasks[].State"
        }
      ]
    },
    "ConversionTaskDeleted": {
      "delay": 15,
      "operation": "DescribeConversionTasks",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success",
          "argument": "ConversionTasks[].State"
        }
      ]
    },
    "CustomerGatewayAvailable": {
      "delay": 15,
      "operation": "DescribeCustomerGateways",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "CustomerGateways[].State"
        },
        {
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CustomerGateways[].State"
        },
        {
          "expected": "deleting",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CustomerGateways[].State"
        }
      ]
    },
    "ExportTaskCancelled": {
      "delay": 15,
      "operation": "DescribeExportTasks",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "cancelled",
          "matcher": "pathAll",
          "state": "success",
          "argument": "ExportTasks[].State"
        }
      ]
    },
    "ExportTaskCompleted": {
      "delay": 15,
      "operation": "DescribeExportTasks",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "completed",
          "matcher": "pathAll",
          "state": "success",
          "argument": "ExportTasks[].State"
        }
      ]
    },
    "ImageAvailable": {
      "operation": "DescribeImages",
      "maxAttempts": 40,
      "delay": 15,
      "acceptors": [
        {
          "state": "success",
          "matcher": "pathAll",
          "argument": "Images[].State",
          "expected": "available"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "Images[].State",
          "expected": "failed"
        }
      ]
    },
    "InstanceRunning": {
      "delay": 15,
      "operation": "DescribeInstances",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "running",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "expected": "shutting-down",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "expected": "terminated",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "expected": "stopping",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "matcher": "error",
          "expected": "InvalidInstanceIDNotFound",
          "state": "retry"
        }
      ]
    },
    "InstanceStatusOk": {
      "operation": "DescribeInstanceStatus",
      "maxAttempts": 40,
      "delay": 15,
      "acceptors": [
        {
          "state": "success",
          "matcher": "pathAll",
          "argument": "InstanceStatuses[].InstanceStatus.Status",
          "expected": "ok"
        },
        {
          "matcher": "error",
          "expected": "InvalidInstanceIDNotFound",
          "state": "retry"
        }
      ]
    },
    "InstanceStopped": {
      "delay": 15,
      "operation": "DescribeInstances",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "stopped",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "expected": "pending",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "expected": "terminated",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Reservations[].Instances[].State.Name"
        }
      ]
    },
    "InstanceTerminated": {
      "delay": 15,
      "operation": "DescribeInstances",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "terminated",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "expected": "pending",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Reservations[].Instances[].State.Name"
        },
        {
          "expected": "stopping",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Reservations[].Instances[].State.Name"
        }
      ]
    },
    "KeyPairExists": {
      "operation": "DescribeKeyPairs",
      "delay": 5,
      "maxAttempts": 6,
      "acceptors": [
        {
          "expected": true,
          "matcher": "pathAll",
          "state": "success",
          "argument": "length(KeyPairs[].KeyName) > `0`"
        },
        {
          "expected": "InvalidKeyPairNotFound",
          "matcher": "error",
          "state": "retry"
        }
      ]
    },
    "NatGatewayAvailable": {
      "operation": "DescribeNatGateways",
      "delay": 15,
      "maxAttempts": 40,
      "acceptors": [
        {
          "state": "success",
          "matcher": "pathAll",
          "argument": "NatGateways[].State",
          "expected": "available"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "NatGateways[].State",
          "expected": "failed"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "NatGateways[].State",
          "expected": "deleting"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "NatGateways[].State",
          "expected": "deleted"
        },
        {
          "state": "retry",
          "matcher": "error",
          "expected": "InvalidNatGatewayIDNotFound"
        }
      ]
    },
    "NetworkInterfaceAvailable": {
      "operation": "DescribeNetworkInterfaces",
      "delay": 20,
      "maxAttempts": 10,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "NetworkInterfaces[].Status"
        },
        {
          "expected": "InvalidNetworkInterfaceIDNotFound",
          "matcher": "error",
          "state": "failure"
        }
      ]
    },
    "PasswordDataAvailable": {
      "operation": "GetPasswordData",
      "maxAttempts": 40,
      "delay": 15,
      "acceptors": [
        {
          "state": "success",
          "matcher": "path",
          "argument": "length(PasswordData) > `0`",
          "expected": true
        }
      ]
    },
    "SnapshotCompleted": {
      "delay": 15,
      "operation": "DescribeSnapshots",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "completed",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Snapshots[].State"
        }
      ]
    },
    "SpotInstanceRequestFulfilled": {
      "operation": "DescribeSpotInstanceRequests",
      "maxAttempts": 40,
      "delay": 15,
      "acceptors": [
        {
          "state": "success",
          "matcher": "pathAll",
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "fulfilled"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "schedule-expired"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "canceled-before-fulfillment"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "bad-parameters"
        },
        {
          "state": "failure",
          "matcher": "pathAny",
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "system-error"
        }
      ]
    },
    "SubnetAvailable": {
      "delay": 15,
      "operation": "DescribeSubnets",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Subnets[].State"
        }
      ]
    },
    "SystemStatusOk": {
      "operation": "DescribeInstanceStatus",
      "maxAttempts": 40,
      "delay": 15,
      "acceptors": [
        {
          "state": "success",
          "matcher": "pathAll",
          "argument": "InstanceStatuses[].SystemStatus.Status",
          "expected": "ok"
        }
      ]
    },
    "VolumeAvailable": {
      "delay": 15,
      "operation": "DescribeVolumes",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Volumes[].State"
        },
        {
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Volumes[].State"
        }
      ]
    },
    "VolumeDeleted": {
      "delay": 15,
      "operation": "DescribeVolumes",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Volumes[].State"
        },
        {
          "matcher": "error",
          "expected": "InvalidVolumeNotFound",
          "state": "success"
        }
      ]
    },
    "VolumeInUse": {
      "delay": 15,
      "operation": "DescribeVolumes",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "in-use",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Volumes[].State"
        },
        {
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "Volumes[].State"
        }
      ]
    },
    "VpcAvailable": {
      "delay": 15,
      "operation": "DescribeVpcs",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "Vpcs[].State"
        }
      ]
    },
    "VpnConnectionAvailable": {
      "delay": 15,
      "operation": "DescribeVpnConnections",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "VpnConnections[].State"
        },
        {
          "expected": "deleting",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "VpnConnections[].State"
        },
        {
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "VpnConnections[].State"
        }
      ]
    },
    "VpnConnectionDeleted": {
      "delay": 15,
      "operation": "DescribeVpnConnections",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success",
          "argument": "VpnConnections[].State"
        },
        {
          "expected": "pending",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "VpnConnections[].State"
        }
      ]
    },
    "VpcPeeringConnectionExists": {
      "delay": 15,
      "operation": "DescribeVpcPeeringConnections",
      "maxAttempts": 40,
      "acceptors": [
        {
          "matcher": "status",
          "expected": 200,
          "state": "success"
        },
        {
          "matcher": "error",
          "expected": "InvalidVpcPeeringConnectionIDNotFound",
          "state": "retry"
        }
      ]
    }
  }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/ecr/                                            0042755 0000000 0000062 00000000000 13077704402 021524  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/ecr/2015-09-21/                                 0042755 0000000 0000062 00000000000 13077704402 022561  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/ecr/2015-09-21/service-2.json                   0100644 0000000 0000062 00000137076 13077704371 025271  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "version":"2.0",
  "metadata":{
    "apiVersion":"2015-09-21",
    "endpointPrefix":"ecr",
    "jsonVersion":"1.1",
    "protocol":"json",
    "serviceAbbreviation":"Amazon ECR",
    "serviceFullName":"Amazon EC2 Container Registry",
    "signatureVersion":"v4",
    "targetPrefix":"AmazonEC2ContainerRegistry_V20150921"
  },
  "operations":{
    "BatchCheckLayerAvailability":{
      "name":"BatchCheckLayerAvailability",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"BatchCheckLayerAvailabilityRequest"},
      "output":{"shape":"BatchCheckLayerAvailabilityResponse"},
      "errors":[
        {"shape":"RepositoryNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ServerException"}
      ],
      "documentation":"<p>Check the availability of multiple image layers in a specified registry and repository.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>"
    },
    "BatchDeleteImage":{
      "name":"BatchDeleteImage",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"BatchDeleteImageRequest"},
      "output":{"shape":"BatchDeleteImageResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"}
      ],
      "documentation":"<p>Deletes a list of specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p>"
    },
    "BatchGetImage":{
      "name":"BatchGetImage",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"BatchGetImageRequest"},
      "output":{"shape":"BatchGetImageResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"}
      ],
      "documentation":"<p>Gets detailed information for specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p>"
    },
    "CompleteLayerUpload":{
      "name":"CompleteLayerUpload",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CompleteLayerUploadRequest"},
      "output":{"shape":"CompleteLayerUploadResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"},
        {"shape":"UploadNotFoundException"},
        {"shape":"InvalidLayerException"},
        {"shape":"LayerPartTooSmallException"},
        {"shape":"LayerAlreadyExistsException"},
        {"shape":"EmptyUploadException"}
      ],
      "documentation":"<p>Inform Amazon ECR that the image layer upload for a specified registry, repository name, and upload ID, has completed. You can optionally provide a <code>sha256</code> digest of the image layer for data validation purposes.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>"
    },
    "CreateRepository":{
      "name":"CreateRepository",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateRepositoryRequest"},
      "output":{"shape":"CreateRepositoryResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryAlreadyExistsException"},
        {"shape":"LimitExceededException"}
      ],
      "documentation":"<p>Creates an image repository.</p>"
    },
    "DeleteRepository":{
      "name":"DeleteRepository",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteRepositoryRequest"},
      "output":{"shape":"DeleteRepositoryResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"},
        {"shape":"RepositoryNotEmptyException"}
      ],
      "documentation":"<p>Deletes an existing image repository. If a repository contains images, you must use the <code>force</code> option to delete it.</p>"
    },
    "DeleteRepositoryPolicy":{
      "name":"DeleteRepositoryPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteRepositoryPolicyRequest"},
      "output":{"shape":"DeleteRepositoryPolicyResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"},
        {"shape":"RepositoryPolicyNotFoundException"}
      ],
      "documentation":"<p>Deletes the repository policy from a specified repository.</p>"
    },
    "DescribeRepositories":{
      "name":"DescribeRepositories",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeRepositoriesRequest"},
      "output":{"shape":"DescribeRepositoriesResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"}
      ],
      "documentation":"<p>Describes image repositories in a registry.</p>"
    },
    "GetAuthorizationToken":{
      "name":"GetAuthorizationToken",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetAuthorizationTokenRequest"},
      "output":{"shape":"GetAuthorizationTokenResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Retrieves a token that is valid for a specified registry for 12 hours. This command allows you to use the <code>docker</code> CLI to push and pull images with Amazon ECR. If you do not specify a registry, the default registry is assumed.</p> <p>The <code>authorizationToken</code> returned for each registry specified is a base64 encoded string that can be decoded and used in a <code>docker login</code> command to authenticate to a registry. The AWS CLI offers an <code>aws ecr get-login</code> command that simplifies the login process.</p>"
    },
    "GetDownloadUrlForLayer":{
      "name":"GetDownloadUrlForLayer",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetDownloadUrlForLayerRequest"},
      "output":{"shape":"GetDownloadUrlForLayerResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"LayersNotFoundException"},
        {"shape":"LayerInaccessibleException"},
        {"shape":"RepositoryNotFoundException"}
      ],
      "documentation":"<p>Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>"
    },
    "GetRepositoryPolicy":{
      "name":"GetRepositoryPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetRepositoryPolicyRequest"},
      "output":{"shape":"GetRepositoryPolicyResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"},
        {"shape":"RepositoryPolicyNotFoundException"}
      ],
      "documentation":"<p>Retrieves the repository policy for a specified repository.</p>"
    },
    "InitiateLayerUpload":{
      "name":"InitiateLayerUpload",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"InitiateLayerUploadRequest"},
      "output":{"shape":"InitiateLayerUploadResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"}
      ],
      "documentation":"<p>Notify Amazon ECR that you intend to upload an image layer. </p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>"
    },
    "ListImages":{
      "name":"ListImages",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListImagesRequest"},
      "output":{"shape":"ListImagesResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"}
      ],
      "documentation":"<p>Lists all the image IDs for a given repository.</p>"
    },
    "PutImage":{
      "name":"PutImage",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"PutImageRequest"},
      "output":{"shape":"PutImageResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"},
        {"shape":"ImageAlreadyExistsException"},
        {"shape":"LayersNotFoundException"},
        {"shape":"LimitExceededException"}
      ],
      "documentation":"<p>Creates or updates the image manifest associated with an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>"
    },
    "SetRepositoryPolicy":{
      "name":"SetRepositoryPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"SetRepositoryPolicyRequest"},
      "output":{"shape":"SetRepositoryPolicyResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"RepositoryNotFoundException"}
      ],
      "documentation":"<p>Applies a repository policy on a specified repository to control access permissions.</p>"
    },
    "UploadLayerPart":{
      "name":"UploadLayerPart",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UploadLayerPartRequest"},
      "output":{"shape":"UploadLayerPartResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidLayerPartException"},
        {"shape":"RepositoryNotFoundException"},
        {"shape":"UploadNotFoundException"},
        {"shape":"LimitExceededException"}
      ],
      "documentation":"<p>Uploads an image layer part to Amazon ECR.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers. Use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>"
    }
  },
  "shapes":{
    "Arn":{"type":"string"},
    "AuthorizationData":{
      "type":"structure",
      "members":{
        "authorizationToken":{
          "shape":"Base64",
          "documentation":"<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>"
        },
        "expiresAt":{
          "shape":"ExpirationTimestamp",
          "documentation":"<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>"
        },
        "proxyEndpoint":{
          "shape":"ProxyEndpoint",
          "documentation":"<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.</p>"
        }
      },
      "documentation":"<p>An object representing authorization data for an Amazon ECR registry.</p>"
    },
    "AuthorizationDataList":{
      "type":"list",
      "member":{"shape":"AuthorizationData"}
    },
    "Base64":{
      "type":"string",
      "pattern":"^\\S+$"
    },
    "BatchCheckLayerAvailabilityRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "layerDigests"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository that is associated with the image layers to check.</p>"
        },
        "layerDigests":{
          "shape":"BatchedOperationLayerDigestList",
          "documentation":"<p>The digests of the image layers to check.</p>"
        }
      }
    },
    "BatchCheckLayerAvailabilityResponse":{
      "type":"structure",
      "members":{
        "layers":{
          "shape":"LayerList",
          "documentation":"<p>A list of image layer objects corresponding to the image layer references in the request.</p>"
        },
        "failures":{
          "shape":"LayerFailureList",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "BatchDeleteImageRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "imageIds"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository that contains the image to delete.</p>"
        },
        "imageIds":{
          "shape":"ImageIdentifierList",
          "documentation":"<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>"
        }
      },
      "documentation":"<p>Deletes specified images within a specified repository. Images are specified with either the <code>imageTag</code> or <code>imageDigest</code>.</p>"
    },
    "BatchDeleteImageResponse":{
      "type":"structure",
      "members":{
        "imageIds":{
          "shape":"ImageIdentifierList",
          "documentation":"<p>The image IDs of the deleted images.</p>"
        },
        "failures":{
          "shape":"ImageFailureList",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "BatchGetImageRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "imageIds"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository that contains the images to describe.</p>"
        },
        "imageIds":{
          "shape":"ImageIdentifierList",
          "documentation":"<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>"
        }
      }
    },
    "BatchGetImageResponse":{
      "type":"structure",
      "members":{
        "images":{
          "shape":"ImageList",
          "documentation":"<p>A list of image objects corresponding to the image references in the request.</p>"
        },
        "failures":{
          "shape":"ImageFailureList",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "BatchedOperationLayerDigest":{
      "type":"string",
      "max":1000,
      "min":0
    },
    "BatchedOperationLayerDigestList":{
      "type":"list",
      "member":{"shape":"BatchedOperationLayerDigest"},
      "max":100,
      "min":1
    },
    "CompleteLayerUploadRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "uploadId",
        "layerDigests"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository to associate with the image layer.</p>"
        },
        "uploadId":{
          "shape":"UploadId",
          "documentation":"<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>"
        },
        "layerDigests":{
          "shape":"LayerDigestList",
          "documentation":"<p>The <code>sha256</code> digest of the image layer.</p>"
        }
      }
    },
    "CompleteLayerUploadResponse":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The registry ID associated with the request.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository name associated with the request.</p>"
        },
        "uploadId":{
          "shape":"UploadId",
          "documentation":"<p>The upload ID associated with the layer.</p>"
        },
        "layerDigest":{
          "shape":"LayerDigest",
          "documentation":"<p>The <code>sha256</code> digest of the image layer.</p>"
        }
      }
    },
    "CreateRepositoryRequest":{
      "type":"structure",
      "required":["repositoryName"],
      "members":{
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>"
        }
      }
    },
    "CreateRepositoryResponse":{
      "type":"structure",
      "members":{
        "repository":{"shape":"Repository"}
      }
    },
    "DeleteRepositoryPolicyRequest":{
      "type":"structure",
      "required":["repositoryName"],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository that is associated with the repository policy to delete.</p>"
        }
      }
    },
    "DeleteRepositoryPolicyResponse":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The registry ID associated with the request.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository name associated with the request.</p>"
        },
        "policyText":{
          "shape":"RepositoryPolicyText",
          "documentation":"<p>The JSON repository policy that was deleted from the repository.</p>"
        }
      }
    },
    "DeleteRepositoryRequest":{
      "type":"structure",
      "required":["repositoryName"],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository to delete.</p>"
        },
        "force":{
          "shape":"ForceFlag",
          "documentation":"<p>Force the deletion of the repository if it contains images.</p>"
        }
      }
    },
    "DeleteRepositoryResponse":{
      "type":"structure",
      "members":{
        "repository":{"shape":"Repository"}
      }
    },
    "DescribeRepositoriesRequest":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryNames":{
          "shape":"RepositoryNameList",
          "documentation":"<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described. </p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>"
        }
      }
    },
    "DescribeRepositoriesResponse":{
      "type":"structure",
      "members":{
        "repositories":{
          "shape":"RepositoryList",
          "documentation":"<p>A list of repository objects corresponding to valid repositories.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "EmptyUploadException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified layer upload does not contain any layer parts.</p>",
      "exception":true
    },
    "ExceptionMessage":{"type":"string"},
    "ExpirationTimestamp":{"type":"timestamp"},
    "ForceFlag":{"type":"boolean"},
    "GetAuthorizationTokenRegistryIdList":{
      "type":"list",
      "member":{"shape":"RegistryId"},
      "max":10,
      "min":1
    },
    "GetAuthorizationTokenRequest":{
      "type":"structure",
      "members":{
        "registryIds":{
          "shape":"GetAuthorizationTokenRegistryIdList",
          "documentation":"<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>"
        }
      }
    },
    "GetAuthorizationTokenResponse":{
      "type":"structure",
      "members":{
        "authorizationData":{
          "shape":"AuthorizationDataList",
          "documentation":"<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>"
        }
      }
    },
    "GetDownloadUrlForLayerRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "layerDigest"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository that is associated with the image layer to download.</p>"
        },
        "layerDigest":{
          "shape":"LayerDigest",
          "documentation":"<p>The digest of the image layer to download.</p>"
        }
      }
    },
    "GetDownloadUrlForLayerResponse":{
      "type":"structure",
      "members":{
        "downloadUrl":{
          "shape":"Url",
          "documentation":"<p>The pre-signed Amazon S3 download URL for the requested layer.</p>"
        },
        "layerDigest":{
          "shape":"LayerDigest",
          "documentation":"<p>The digest of the image layer to download.</p>"
        }
      }
    },
    "GetRepositoryPolicyRequest":{
      "type":"structure",
      "required":["repositoryName"],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository whose policy you want to retrieve.</p>"
        }
      }
    },
    "GetRepositoryPolicyResponse":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The registry ID associated with the request.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository name associated with the request.</p>"
        },
        "policyText":{
          "shape":"RepositoryPolicyText",
          "documentation":"<p>The JSON repository policy text associated with the repository.</p>"
        }
      }
    },
    "Image":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry containing the image.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository associated with the image.</p>"
        },
        "imageId":{
          "shape":"ImageIdentifier",
          "documentation":"<p>An object containing the image tag and image digest associated with an image.</p>"
        },
        "imageManifest":{
          "shape":"ImageManifest",
          "documentation":"<p>The image manifest associated with the image.</p>"
        }
      },
      "documentation":"<p>Object representing an image.</p>"
    },
    "ImageAlreadyExistsException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified image has already been pushed, and there are no changes to the manifest or image tag since the last push.</p>",
      "exception":true
    },
    "ImageDigest":{"type":"string"},
    "ImageFailure":{
      "type":"structure",
      "members":{
        "imageId":{
          "shape":"ImageIdentifier",
          "documentation":"<p>The image ID associated with the failure.</p>"
        },
        "failureCode":{
          "shape":"ImageFailureCode",
          "documentation":"<p>The code associated with the failure.</p>"
        },
        "failureReason":{
          "shape":"ImageFailureReason",
          "documentation":"<p>The reason for the failure.</p>"
        }
      }
    },
    "ImageFailureCode":{
      "type":"string",
      "enum":[
        "InvalidImageDigest",
        "InvalidImageTag",
        "ImageTagDoesNotMatchDigest",
        "ImageNotFound",
        "MissingDigestAndTag"
      ]
    },
    "ImageFailureList":{
      "type":"list",
      "member":{"shape":"ImageFailure"}
    },
    "ImageFailureReason":{"type":"string"},
    "ImageIdentifier":{
      "type":"structure",
      "members":{
        "imageDigest":{
          "shape":"ImageDigest",
          "documentation":"<p>The <code>sha256</code> digest of the image manifest.</p>"
        },
        "imageTag":{
          "shape":"ImageTag",
          "documentation":"<p>The tag used for the image.</p>"
        }
      }
    },
    "ImageIdentifierList":{
      "type":"list",
      "member":{"shape":"ImageIdentifier"},
      "max":100,
      "min":1
    },
    "ImageList":{
      "type":"list",
      "member":{"shape":"Image"}
    },
    "ImageManifest":{"type":"string"},
    "ImageTag":{"type":"string"},
    "InitiateLayerUploadRequest":{
      "type":"structure",
      "required":["repositoryName"],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository that you intend to upload layers to.</p>"
        }
      }
    },
    "InitiateLayerUploadResponse":{
      "type":"structure",
      "members":{
        "uploadId":{
          "shape":"UploadId",
          "documentation":"<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>"
        },
        "partSize":{
          "shape":"PartSize",
          "documentation":"<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>"
        }
      }
    },
    "InvalidLayerException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The layer digest calculation performed by Amazon ECR upon receipt of the image layer does not match the digest specified.</p>",
      "exception":true
    },
    "InvalidLayerPartException":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The registry ID associated with the exception.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository name associated with the exception.</p>"
        },
        "uploadId":{
          "shape":"UploadId",
          "documentation":"<p>The upload ID associated with the exception.</p>"
        },
        "lastValidByteReceived":{
          "shape":"PartSize",
          "documentation":"<p>The last valid byte received from the layer part upload that is associated with the exception.</p>"
        },
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The layer part size is not valid, or the first byte specified is not consecutive to the last byte of a previous layer part upload.</p>",
      "exception":true
    },
    "InvalidParameterException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
      "exception":true
    },
    "Layer":{
      "type":"structure",
      "members":{
        "layerDigest":{
          "shape":"LayerDigest",
          "documentation":"<p>The <code>sha256</code> digest of the image layer.</p>"
        },
        "layerAvailability":{
          "shape":"LayerAvailability",
          "documentation":"<p>The availability status of the image layer. Valid values are <code>AVAILABLE</code> and <code>UNAVAILABLE</code>.</p>"
        },
        "layerSize":{
          "shape":"LayerSizeInBytes",
          "documentation":"<p>The size, in bytes, of the image layer.</p>"
        }
      }
    },
    "LayerAlreadyExistsException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The image layer already exists in the associated repository.</p>",
      "exception":true
    },
    "LayerAvailability":{
      "type":"string",
      "enum":[
        "AVAILABLE",
        "UNAVAILABLE"
      ]
    },
    "LayerDigest":{
      "type":"string",
      "pattern":"[a-zA-Z0-9-_+.]+:[a-fA-F0-9]+"
    },
    "LayerDigestList":{
      "type":"list",
      "member":{"shape":"LayerDigest"},
      "max":100,
      "min":1
    },
    "LayerFailure":{
      "type":"structure",
      "members":{
        "layerDigest":{
          "shape":"BatchedOperationLayerDigest",
          "documentation":"<p>The layer digest associated with the failure.</p>"
        },
        "failureCode":{
          "shape":"LayerFailureCode",
          "documentation":"<p>The failure code associated with the failure.</p>"
        },
        "failureReason":{
          "shape":"LayerFailureReason",
          "documentation":"<p>The reason for the failure.</p>"
        }
      }
    },
    "LayerFailureCode":{
      "type":"string",
      "enum":[
        "InvalidLayerDigest",
        "MissingLayerDigest"
      ]
    },
    "LayerFailureList":{
      "type":"list",
      "member":{"shape":"LayerFailure"}
    },
    "LayerFailureReason":{"type":"string"},
    "LayerInaccessibleException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified layer is not available because it is not associated with an image. Unassociated image layers may be cleaned up at any time.</p>",
      "exception":true
    },
    "LayerList":{
      "type":"list",
      "member":{"shape":"Layer"}
    },
    "LayerPartBlob":{"type":"blob"},
    "LayerPartTooSmallException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>Layer parts must be at least 5 MiB in size.</p>",
      "exception":true
    },
    "LayerSizeInBytes":{"type":"long"},
    "LayersNotFoundException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>",
      "exception":true
    },
    "LimitExceededException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon EC2 Container Registry User Guide.</p>",
      "exception":true
    },
    "ListImagesRequest":{
      "type":"structure",
      "required":["repositoryName"],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository whose image IDs are to be listed.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>"
        }
      }
    },
    "ListImagesResponse":{
      "type":"structure",
      "members":{
        "imageIds":{
          "shape":"ImageIdentifierList",
          "documentation":"<p>The list of image IDs for the requested repository.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "MaxResults":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "NextToken":{"type":"string"},
    "PartSize":{
      "type":"long",
      "min":0
    },
    "ProxyEndpoint":{"type":"string"},
    "PutImageRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "imageManifest"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository in which to put the image.</p>"
        },
        "imageManifest":{
          "shape":"ImageManifest",
          "documentation":"<p>The image manifest corresponding to the image to be uploaded.</p>"
        }
      }
    },
    "PutImageResponse":{
      "type":"structure",
      "members":{
        "image":{
          "shape":"Image",
          "documentation":"<p>Details of the image uploaded.</p>"
        }
      }
    },
    "RegistryId":{
      "type":"string",
      "pattern":"[0-9]{12}"
    },
    "Repository":{
      "type":"structure",
      "members":{
        "repositoryArn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>"
        },
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repository.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository.</p>"
        }
      },
      "documentation":"<p>Object representing a repository.</p>"
    },
    "RepositoryAlreadyExistsException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified repository already exists in the specified registry.</p>",
      "exception":true
    },
    "RepositoryList":{
      "type":"list",
      "member":{"shape":"Repository"}
    },
    "RepositoryName":{
      "type":"string",
      "max":256,
      "min":2,
      "pattern":"(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*"
    },
    "RepositoryNameList":{
      "type":"list",
      "member":{"shape":"RepositoryName"},
      "max":100,
      "min":1
    },
    "RepositoryNotEmptyException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified repository contains images. To delete a repository that contains images, you must force the deletion with the <code>force</code> parameter.</p>",
      "exception":true
    },
    "RepositoryNotFoundException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
      "exception":true
    },
    "RepositoryPolicyNotFoundException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The specified repository and registry combination does not have an associated repository policy.</p>",
      "exception":true
    },
    "RepositoryPolicyText":{
      "type":"string",
      "max":10240,
      "min":0
    },
    "ServerException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>These errors are usually caused by a server-side issue.</p>",
      "exception":true,
      "fault":true
    },
    "SetRepositoryPolicyRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "policyText"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository to receive the policy.</p>"
        },
        "policyText":{
          "shape":"RepositoryPolicyText",
          "documentation":"<p>The JSON repository policy text to apply to the repository.</p>"
        },
        "force":{
          "shape":"ForceFlag",
          "documentation":"<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>"
        }
      }
    },
    "SetRepositoryPolicyResponse":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The registry ID associated with the request.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository name associated with the request.</p>"
        },
        "policyText":{
          "shape":"RepositoryPolicyText",
          "documentation":"<p>The JSON repository policy text applied to the repository.</p>"
        }
      }
    },
    "UploadId":{
      "type":"string",
      "pattern":"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
    },
    "UploadLayerPartRequest":{
      "type":"structure",
      "required":[
        "repositoryName",
        "uploadId",
        "partFirstByte",
        "partLastByte",
        "layerPartBlob"
      ],
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The name of the repository that you are uploading layer parts to.</p>"
        },
        "uploadId":{
          "shape":"UploadId",
          "documentation":"<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>"
        },
        "partFirstByte":{
          "shape":"PartSize",
          "documentation":"<p>The integer value of the first byte of the layer part.</p>"
        },
        "partLastByte":{
          "shape":"PartSize",
          "documentation":"<p>The integer value of the last byte of the layer part.</p>"
        },
        "layerPartBlob":{
          "shape":"LayerPartBlob",
          "documentation":"<p>The base64-encoded layer part payload.</p>"
        }
      }
    },
    "UploadLayerPartResponse":{
      "type":"structure",
      "members":{
        "registryId":{
          "shape":"RegistryId",
          "documentation":"<p>The registry ID associated with the request.</p>"
        },
        "repositoryName":{
          "shape":"RepositoryName",
          "documentation":"<p>The repository name associated with the request.</p>"
        },
        "uploadId":{
          "shape":"UploadId",
          "documentation":"<p>The upload ID associated with the request.</p>"
        },
        "lastByteReceived":{
          "shape":"PartSize",
          "documentation":"<p>The integer value of the last byte received in the request.</p>"
        }
      }
    },
    "UploadNotFoundException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ExceptionMessage",
          "documentation":"<p>The error message associated with the exception.</p>"
        }
      },
      "documentation":"<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>",
      "exception":true
    },
    "Url":{"type":"string"}
  },
  "documentation":"<p>Amazon EC2 Container Registry (Amazon ECR) is a managed AWS Docker registry service. Customers can use the familiar Docker CLI to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry. Amazon ECR supports private Docker repositories with resource-based permissions using AWS IAM so that specific users or Amazon EC2 instances can access repositories and images. Developers can use the Docker CLI to author and manage images.</p>"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  usr/local/lib/python2.7/dist-packages/botocore/data/ecs/                                            0042755 0000000 0000062 00000000000 13077704402 021525  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/ecs/2014-11-13/                                 0042755 0000000 0000062 00000000000 13077704402 022553  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/ecs/2014-11-13/paginators-1.json                0100644 0000000 0000062 00000001674 13077704371 025763  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
	"pagination": {
		"ListClusters": {
			"input_token": "nextToken",
			"output_token": "nextToken",
			"limit_key": "maxResults",
			"result_key": "clusterArns"
		},
		"ListContainerInstances": {
			"input_token": "nextToken",
			"output_token": "nextToken",
			"limit_key": "maxResults",
			"result_key": "containerInstanceArns"
		},
		"ListTaskDefinitions": {
			"input_token": "nextToken",
			"output_token": "nextToken",
			"limit_key": "maxResults",
			"result_key": "taskDefinitionArns"
		},
		"ListTaskDefinitionFamilies": {
			"input_token": "nextToken",
			"output_token": "nextToken",
			"limit_key": "maxResults",
			"result_key": "families"
		},
		"ListTasks": {
			"input_token": "nextToken",
			"output_token": "nextToken",
			"limit_key": "maxResults",
			"result_key": "taskArns"
		},
		"ListServices": {
			"input_token": "nextToken",
			"output_token": "nextToken",
			"limit_key": "maxResults",
			"result_key": "serviceArns"
		}
	}
}
                                                                    usr/local/lib/python2.7/dist-packages/botocore/data/ecs/2014-11-13/service-2.json                   0100644 0000000 0000062 00000405124 13077704371 025253  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "version":"2.0",
  "metadata":{
    "apiVersion":"2014-11-13",
    "endpointPrefix":"ecs",
    "jsonVersion":"1.1",
    "protocol":"json",
    "serviceAbbreviation":"Amazon ECS",
    "serviceFullName":"Amazon EC2 Container Service",
    "signatureVersion":"v4",
    "targetPrefix":"AmazonEC2ContainerServiceV20141113"
  },
  "operations":{
    "CreateCluster":{
      "name":"CreateCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateClusterRequest"},
      "output":{"shape":"CreateClusterResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code> cluster when you launch your first container instance. However, you can create your own cluster with a unique name with the <code>CreateCluster</code> action.</p>"
    },
    "CreateService":{
      "name":"CreateService",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateServiceRequest"},
      "output":{"shape":"CreateServiceResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Runs and maintains a desired number of tasks from a specified task definition. If the number of tasks running in a service drops below <code>desiredCount</code>, Amazon ECS spawns another instantiation of the task in the specified cluster. To update an existing service, see <a>UpdateService</a>.</p> <p>You can optionally specify a deployment configuration for your service. During a deployment (which is triggered by changing the task definition of a service with an <a>UpdateService</a> operation), the service scheduler uses the <code>minimumHealthyPercent</code> and <code>maximumPercent</code> parameters to determine the deployment strategy.</p> <p>If the <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore the <code>desiredCount</code> temporarily during a deployment. For example, if your service has a <code>desiredCount</code> of four tasks, a <code>minimumHealthyPercent</code> of 50% allows the scheduler to stop two existing tasks before starting two new tasks. Tasks for services that <i>do not</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code> state; tasks for services that <i>do</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code> state and the container instance it is hosted on is reported as healthy by the load balancer. The default value for <code>minimumHealthyPercent</code> is 50% in the console and 100% for the AWS CLI, the AWS SDKs, and the APIs.</p> <p>The <code>maximumPercent</code> parameter represents an upper limit on the number of running tasks during a deployment, which enables you to define the deployment batch size. For example, if your service has a <code>desiredCount</code> of four tasks, a <code>maximumPercent</code> value of 200% starts four new tasks before stopping the four older tasks (provided that the cluster resources required to do this are available). The default value for <code>maximumPercent</code> is 200%.</p> <p>When the service scheduler launches new tasks, it attempts to balance them across the Availability Zones in your cluster with the following logic:</p> <ul> <li> <p>Determine which of the container instances in your cluster can support your service's task definition (for example, they have the required CPU, memory, ports, and container instance attributes).</p> </li> <li> <p>Sort the valid container instances by the fewest number of running tasks for this service in the same Availability Zone as the instance. For example, if zone A has one running service task and zones B and C each have zero, valid container instances in either zone B or C are considered optimal for placement.</p> </li> <li> <p>Place the new service task on a valid container instance in an optimal Availability Zone (based on the previous steps), favoring container instances with the fewest number of running tasks for this service.</p> </li> </ul>"
    },
    "DeleteCluster":{
      "name":"DeleteCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteClusterRequest"},
      "output":{"shape":"DeleteClusterResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"},
        {"shape":"ClusterContainsContainerInstancesException"},
        {"shape":"ClusterContainsServicesException"}
      ],
      "documentation":"<p>Deletes the specified cluster. You must deregister all container instances from this cluster before you may delete it. You can list the container instances in a cluster with <a>ListContainerInstances</a> and deregister them with <a>DeregisterContainerInstance</a>.</p>"
    },
    "DeleteService":{
      "name":"DeleteService",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteServiceRequest"},
      "output":{"shape":"DeleteServiceResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"},
        {"shape":"ServiceNotFoundException"}
      ],
      "documentation":"<p>Deletes a specified service within a cluster. You can delete a service if you have no running tasks in it and the desired task count is zero. If the service is actively maintaining tasks, you cannot delete it, and you must update the service to a desired task count of zero. For more information, see <a>UpdateService</a>.</p> <note> <p>When you delete a service, if there are still running tasks that require cleanup, the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the service is no longer visible in the console or in <a>ListServices</a> API operations. After the tasks have stopped, then the service status moves from <code>DRAINING</code> to <code>INACTIVE</code>. Services in the <code>DRAINING</code> or <code>INACTIVE</code> status can still be viewed with <a>DescribeServices</a> API operations; however, in the future, <code>INACTIVE</code> services may be cleaned up and purged from Amazon ECS record keeping, and <a>DescribeServices</a> API operations on those services will return a <code>ServiceNotFoundException</code> error.</p> </note>"
    },
    "DeregisterContainerInstance":{
      "name":"DeregisterContainerInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeregisterContainerInstanceRequest"},
      "output":{"shape":"DeregisterContainerInstanceResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Deregisters an Amazon ECS container instance from the specified cluster. This instance is no longer available to run tasks.</p> <p>If you intend to use the container instance for some other purpose after deregistration, you should stop all of the tasks running on the container instance before deregistration to avoid any orphaned tasks from consuming resources.</p> <p>Deregistering a container instance removes the instance from a cluster, but it does not terminate the EC2 instance; if you are finished using the instance, be sure to terminate it in the Amazon EC2 console to stop billing.</p> <note><p>When you terminate a container instance, it is automatically deregistered from your cluster.</p></note>"
    },
    "DeregisterTaskDefinition":{
      "name":"DeregisterTaskDefinition",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeregisterTaskDefinitionRequest"},
      "output":{"shape":"DeregisterTaskDefinitionResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Deregisters the specified task definition by family and revision. Upon deregistration, the task definition is marked as <code>INACTIVE</code>. Existing tasks and services that reference an <code>INACTIVE</code> task definition continue to run without disruption. Existing services that reference an <code>INACTIVE</code> task definition can still scale up or down by modifying the service's desired count.</p> <p>You cannot use an <code>INACTIVE</code> task definition to run new tasks or create new services, and you cannot update an existing service to reference an <code>INACTIVE</code> task definition (although there may be up to a 10 minute window following deregistration where these restrictions have not yet taken effect).</p>"
    },
    "DescribeClusters":{
      "name":"DescribeClusters",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeClustersRequest"},
      "output":{"shape":"DescribeClustersResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Describes one or more of your clusters.</p>"
    },
    "DescribeContainerInstances":{
      "name":"DescribeContainerInstances",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeContainerInstancesRequest"},
      "output":{"shape":"DescribeContainerInstancesResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Describes Amazon EC2 Container Service container instances. Returns metadata about registered and remaining resources on each container instance requested.</p>"
    },
    "DescribeServices":{
      "name":"DescribeServices",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeServicesRequest"},
      "output":{"shape":"DescribeServicesResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Describes the specified services running in your cluster.</p>"
    },
    "DescribeTaskDefinition":{
      "name":"DescribeTaskDefinition",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeTaskDefinitionRequest"},
      "output":{"shape":"DescribeTaskDefinitionResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Describes a task definition. You can specify a <code>family</code> and <code>revision</code> to find information about a specific task definition, or you can simply specify the family to find the latest <code>ACTIVE</code> revision in that family.</p> <note> <p>You can only describe <code>INACTIVE</code> task definitions while an active task or service references them.</p> </note>"
    },
    "DescribeTasks":{
      "name":"DescribeTasks",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeTasksRequest"},
      "output":{"shape":"DescribeTasksResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Describes a specified task or tasks.</p>"
    },
    "DiscoverPollEndpoint":{
      "name":"DiscoverPollEndpoint",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DiscoverPollEndpointRequest"},
      "output":{"shape":"DiscoverPollEndpointResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"}
      ],
      "documentation":"<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Returns an endpoint for the Amazon EC2 Container Service agent to poll for updates.</p>"
    },
    "ListClusters":{
      "name":"ListClusters",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListClustersRequest"},
      "output":{"shape":"ListClustersResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Returns a list of existing clusters.</p>"
    },
    "ListContainerInstances":{
      "name":"ListContainerInstances",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListContainerInstancesRequest"},
      "output":{"shape":"ListContainerInstancesResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Returns a list of container instances in a specified cluster.</p>"
    },
    "ListServices":{
      "name":"ListServices",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListServicesRequest"},
      "output":{"shape":"ListServicesResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Lists the services that are running in a specified cluster.</p>"
    },
    "ListTaskDefinitionFamilies":{
      "name":"ListTaskDefinitionFamilies",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTaskDefinitionFamiliesRequest"},
      "output":{"shape":"ListTaskDefinitionFamiliesResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Returns a list of task definition families that are registered to your account (which may include task definition families that no longer have any <code>ACTIVE</code> task definitions). You can filter the results with the <code>familyPrefix</code> parameter.</p>"
    },
    "ListTaskDefinitions":{
      "name":"ListTaskDefinitions",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTaskDefinitionsRequest"},
      "output":{"shape":"ListTaskDefinitionsResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Returns a list of task definitions that are registered to your account. You can filter the results by family name with the <code>familyPrefix</code> parameter or by status with the <code>status</code> parameter.</p>"
    },
    "ListTasks":{
      "name":"ListTasks",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTasksRequest"},
      "output":{"shape":"ListTasksResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"},
        {"shape":"ServiceNotFoundException"}
      ],
      "documentation":"<p>Returns a list of tasks for a specified cluster. You can filter the results by family name, by a particular container instance, or by the desired status of the task with the <code>family</code>, <code>containerInstance</code>, and <code>desiredStatus</code> parameters.</p>"
    },
    "RegisterContainerInstance":{
      "name":"RegisterContainerInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RegisterContainerInstanceRequest"},
      "output":{"shape":"RegisterContainerInstanceResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"}
      ],
      "documentation":"<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Registers an EC2 instance into the specified cluster. This instance becomes available to place containers on.</p>"
    },
    "RegisterTaskDefinition":{
      "name":"RegisterTaskDefinition",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RegisterTaskDefinitionRequest"},
      "output":{"shape":"RegisterTaskDefinitionResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"<p>Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>. Optionally, you can add data volumes to your containers with the <code>volumes</code> parameter. For more information about task definition parameters and defaults, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Amazon ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>"
    },
    "RunTask":{
      "name":"RunTask",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RunTaskRequest"},
      "output":{"shape":"RunTaskResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Start a task using random placement and the default Amazon ECS scheduler. To use your own scheduler or place a task on a specific container instance, use <code>StartTask</code> instead.</p> <important> <p>The <code>count</code> parameter is limited to 10 tasks per call.</p> </important>"
    },
    "StartTask":{
      "name":"StartTask",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StartTaskRequest"},
      "output":{"shape":"StartTaskResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Starts a new task from the specified task definition on the specified container instance or instances. To use the default Amazon ECS scheduler to place your task, use <code>RunTask</code> instead.</p> <important> <p>The list of container instances to start tasks on is limited to 10.</p> </important>"
    },
    "StopTask":{
      "name":"StopTask",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopTaskRequest"},
      "output":{"shape":"StopTaskResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"}
      ],
      "documentation":"<p>Stops a running task.</p> <p>When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code> and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.</p>"
    },
    "SubmitContainerStateChange":{
      "name":"SubmitContainerStateChange",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"SubmitContainerStateChangeRequest"},
      "output":{"shape":"SubmitContainerStateChangeResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"}
      ],
      "documentation":"<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Sent to acknowledge that a container changed states.</p>"
    },
    "SubmitTaskStateChange":{
      "name":"SubmitTaskStateChange",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"SubmitTaskStateChangeRequest"},
      "output":{"shape":"SubmitTaskStateChangeResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"}
      ],
      "documentation":"<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Sent to acknowledge that a task changed states.</p>"
    },
    "UpdateContainerAgent":{
      "name":"UpdateContainerAgent",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateContainerAgentRequest"},
      "output":{"shape":"UpdateContainerAgentResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"},
        {"shape":"UpdateInProgressException"},
        {"shape":"NoUpdateAvailableException"},
        {"shape":"MissingVersionException"}
      ],
      "documentation":"<p>Updates the Amazon ECS container agent on a specified container instance. Updating the Amazon ECS container agent does not interrupt running tasks or services on the container instance. The process for updating the agent differs depending on whether your container instance was launched with the Amazon ECS-optimized AMI or another operating system.</p> <p><code>UpdateContainerAgent</code> requires the Amazon ECS-optimized AMI or Amazon Linux with the <code>ecs-init</code> service installed and running. For help updating the Amazon ECS container agent on other operating systems, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent\">Manually Updating the Amazon ECS Container Agent</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>"
    },
    "UpdateService":{
      "name":"UpdateService",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateServiceRequest"},
      "output":{"shape":"UpdateServiceResponse"},
      "errors":[
        {"shape":"ServerException"},
        {"shape":"ClientException"},
        {"shape":"InvalidParameterException"},
        {"shape":"ClusterNotFoundException"},
        {"shape":"ServiceNotFoundException"},
        {"shape":"ServiceNotActiveException"}
      ],
      "documentation":"<p>Modifies the desired count, deployment configuration, or task definition used in a service.</p> <p>You can add to or subtract from the number of instantiations of a task definition in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code> parameter.</p> <p>You can use <a>UpdateService</a> to modify your task definition and deploy a new version of your service.</p> <p>You can also update the deployment configuration of a service. When a deployment is triggered by updating the task definition of a service, the service scheduler uses the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>, to determine the deployment strategy.</p> <p>If the <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore the <code>desiredCount</code> temporarily during a deployment. For example, if your service has a <code>desiredCount</code> of four tasks, a <code>minimumHealthyPercent</code> of 50% allows the scheduler to stop two existing tasks before starting two new tasks. Tasks for services that <i>do not</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code> state; tasks for services that <i>do</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code> state and the container instance it is hosted on is reported as healthy by the load balancer.</p> <p>The <code>maximumPercent</code> parameter represents an upper limit on the number of running tasks during a deployment, which enables you to define the deployment batch size. For example, if your service has a <code>desiredCount</code> of four tasks, a <code>maximumPercent</code> value of 200% starts four new tasks before stopping the four older tasks (provided that the cluster resources required to do this are available).</p> <p>When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code> and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.</p> <p>When the service scheduler launches new tasks, it attempts to balance them across the Availability Zones in your cluster with the following logic:</p> <ul> <li> <p>Determine which of the container instances in your cluster can support your service's task definition (for example, they have the required CPU, memory, ports, and container instance attributes).</p> </li> <li> <p>Sort the valid container instances by the fewest number of running tasks for this service in the same Availability Zone as the instance. For example, if zone A has one running service task and zones B and C each have zero, valid container instances in either zone B or C are considered optimal for placement.</p> </li> <li> <p>Place the new service task on a valid container instance in an optimal Availability Zone (based on the previous steps), favoring container instances with the fewest number of running tasks for this service.</p> </li> </ul>"
    }
  },
  "shapes":{
    "AgentUpdateStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "STAGING",
        "STAGED",
        "UPDATING",
        "UPDATED",
        "FAILED"
      ]
    },
    "Attribute":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the container instance attribute.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of the container instance attribute (at this time, the value here is <code>Null</code>, but this could change in future revisions for expandability).</p>"
        }
      },
      "documentation":"<p>The attributes applicable to a container instance when it is registered.</p>"
    },
    "Attributes":{
      "type":"list",
      "member":{"shape":"Attribute"}
    },
    "Boolean":{"type":"boolean"},
    "BoxedBoolean":{
      "type":"boolean",
      "box":true
    },
    "BoxedInteger":{
      "type":"integer",
      "box":true
    },
    "ClientException":{
      "type":"structure",
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>These errors are usually caused by a client action, such as using an action or resource on behalf of a user that doesn't have permission to use the action or resource, or specifying an identifier that is not valid.</p>",
      "exception":true
    },
    "Cluster":{
      "type":"structure",
      "members":{
        "clusterArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the cluster, the AWS account ID of the cluster owner, the <code>cluster</code> namespace, and then the cluster name. For example, arn:aws:ecs:<i>region</i>:<i>012345678910</i>:cluster/<i>test</i>.</p>"
        },
        "clusterName":{
          "shape":"String",
          "documentation":"<p>A user-generated string that you use to identify your cluster.</p>"
        },
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the cluster. The valid values are <code>ACTIVE</code> or <code>INACTIVE</code>. <code>ACTIVE</code> indicates that you can register container instances with the cluster and the associated instances can accept tasks.</p>"
        },
        "registeredContainerInstancesCount":{
          "shape":"Integer",
          "documentation":"<p>The number of container instances registered into the cluster.</p>"
        },
        "runningTasksCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks in the cluster that are in the <code>RUNNING</code> state.</p>"
        },
        "pendingTasksCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks in the cluster that are in the <code>PENDING</code> state.</p>"
        },
        "activeServicesCount":{
          "shape":"Integer",
          "documentation":"<p>The number of services that are running on the cluster in an <code>ACTIVE</code> state. You can view these services with <a>ListServices</a>.</p>"
        }
      },
      "documentation":"<p>A regional grouping of one or more container instances on which you can run task requests. Each account receives a default cluster the first time you use the Amazon ECS service, but you may also create other clusters. Clusters may contain more than one instance type simultaneously.</p>"
    },
    "ClusterContainsContainerInstancesException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>You cannot delete a cluster that has registered container instances. You must first deregister the container instances before you can delete the cluster. For more information, see <a>DeregisterContainerInstance</a>.</p>",
      "exception":true
    },
    "ClusterContainsServicesException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>You cannot delete a cluster that contains services. You must first update the service to reduce its desired task count to 0 and then delete the service. For more information, see <a>UpdateService</a> and <a>DeleteService</a>.</p>",
      "exception":true
    },
    "ClusterNotFoundException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>The specified cluster could not be found. You can view your available clusters with <a>ListClusters</a>. Amazon ECS clusters are region-specific.</p>",
      "exception":true
    },
    "Clusters":{
      "type":"list",
      "member":{"shape":"Cluster"}
    },
    "Container":{
      "type":"structure",
      "members":{
        "containerArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the container.</p>"
        },
        "taskArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the task.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the container.</p>"
        },
        "lastStatus":{
          "shape":"String",
          "documentation":"<p>The last known status of the container.</p>"
        },
        "exitCode":{
          "shape":"BoxedInteger",
          "documentation":"<p>The exit code returned from the container.</p>"
        },
        "reason":{
          "shape":"String",
          "documentation":"<p>A short (255 max characters) human-readable string to provide additional detail about a running or stopped container.</p>"
        },
        "networkBindings":{
          "shape":"NetworkBindings",
          "documentation":"<p>The network bindings associated with the container.</p>"
        }
      },
      "documentation":"<p>A Docker container that is part of a task.</p>"
    },
    "ContainerDefinition":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of a container. If you are linking multiple containers together in a task definition, the <code>name</code> of one container can be entered in the <code>links</code> of another container to connect the containers. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. This parameter maps to <code>name</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--name</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>. </p>"
        },
        "image":{
          "shape":"String",
          "documentation":"<p>The image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker Hub registry are available by default. Other repositories are specified with <code><i>repository-url</i>/<i>image</i>:<i>tag</i></code>. Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number signs are allowed. This parameter maps to <code>Image</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>IMAGE</code> parameter of <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p> <ul> <li>Images in official repositories on Docker Hub use a single name (for example, <code>ubuntu</code> or <code>mongo</code>).</li> <li>Images in other repositories on Docker Hub are qualified with an organization name (for example, <code>amazon/amazon-ecs-agent</code>).</li> <li>Images in other online repositories are qualified further by a domain name (for example, <code>quay.io/assemblyline/ubuntu</code>).</li> </ul>"
        },
        "cpu":{
          "shape":"Integer",
          "documentation":"<p>The number of <code>cpu</code> units reserved for the container. A container instance has 1,024 <code>cpu</code> units for every CPU core. This parameter specifies the minimum amount of CPU to reserve for a container, and containers share unallocated CPU units with other containers on the instance with the same ratio as their allocated amount. This parameter maps to <code>CpuShares</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--cpu-shares</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p> <note> <p>You can determine the number of CPU units that are available per EC2 instance type by multiplying the vCPUs listed for that instance type on the <a href=\"http://aws.amazon.com/ec2/instance-types/\">Amazon EC2 Instances</a> detail page by 1,024.</p> </note> <p>For example, if you run a single-container task on a single-core instance type with 512 CPU units specified for that container, and that is the only task running on the container instance, that container could use the full 1,024 CPU unit share at any given time. However, if you launched another copy of the same task on that container instance, each task would be guaranteed a minimum of 512 CPU units when needed, and each container could float to higher CPU usage if the other container was not using it, but if both tasks were 100% active all of the time, they would be limited to 512 CPU units.</p> <p>The Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for running containers. For more information, see <a href=\"https://docs.docker.com/reference/run/#cpu-share-constraint\">CPU share constraint</a> in the Docker documentation. The minimum valid CPU share value that the Linux kernel allows is 2; however, the CPU parameter is not required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null), the behavior varies based on your Amazon ECS container agent version:</p> <ul> <li><b>Agent versions less than or equal to 1.1.0:</b> Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are passed to Docker as 1, which the Linux kernel converts to 2 CPU shares.</li> <li><b>Agent versions greater than or equal to 1.2.0:</b> Null, zero, and CPU values of 1 are passed to Docker as 2.</li></ul>"
        },
        "memory":{
          "shape":"Integer",
          "documentation":"<p>The number of MiB of memory to reserve for the container. You must specify a non-zero integer for this parameter; the Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers. If your container attempts to exceed the memory allocated here, the container is killed. This parameter maps to <code>Memory</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--memory</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "links":{
          "shape":"StringList",
          "documentation":"<p>The <code>link</code> parameter allows containers to communicate with each other without the need for port mappings, using the <code>name</code> parameter and optionally, an <code>alias</code> for the link. This construct is analogous to <code>name:alias</code> in Docker links. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed for each <code>name</code> and <code>alias</code>. For more information on linking Docker containers, see <a href=\"https://docs.docker.com/userguide/dockerlinks/\">https://docs.docker.com/userguide/dockerlinks/</a>. This parameter maps to <code>Links</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--link</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\"><code>docker run</code></a>.</p> <important> <p>Containers that are collocated on a single container instance may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved on the container instance using security groups and VPC settings.</p> </important>"
        },
        "portMappings":{
          "shape":"PortMappingList",
          "documentation":"<p>The list of port mappings for the container. Port mappings allow containers to access ports on the host container instance to send or receive traffic. This parameter maps to <code>PortBindings</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--publish</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p> <note> <p>After a task reaches the <code>RUNNING</code> status, manual and automatic host and container port assignments are visible in the <b>Network Bindings</b> section of a container description of a selected task in the Amazon ECS console, or the <code>networkBindings</code> section <a>DescribeTasks</a> responses.</p> </note>"
        },
        "essential":{
          "shape":"BoxedBoolean",
          "documentation":"<p>If the <code>essential</code> parameter of a container is marked as <code>true</code>, the failure of that container stops the task. If the <code>essential</code> parameter of a container is marked as <code>false</code>, then its failure does not affect the rest of the containers in a task. If this parameter is omitted, a container is assumed to be essential.</p> <note> <p>All tasks must have at least one essential container.</p> </note>"
        },
        "entryPoint":{
          "shape":"StringList",
          "documentation":"<important> <p>Early versions of the Amazon ECS container agent do not properly handle <code>entryPoint</code> parameters. If you have problems using <code>entryPoint</code>, update your container agent or enter your commands and arguments as <code>command</code> array items instead.</p> </important> <p>The entry point that is passed to the container. This parameter maps to <code>Entrypoint</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--entrypoint</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>. For more information, see <a href=\"https://docs.docker.com/reference/builder/#entrypoint\">https://docs.docker.com/reference/builder/#entrypoint</a>.</p>"
        },
        "command":{
          "shape":"StringList",
          "documentation":"<p>The command that is passed to the container. This parameter maps to <code>Cmd</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>COMMAND</code> parameter to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>. For more information, see <a href=\"https://docs.docker.com/reference/builder/#cmd\">https://docs.docker.com/reference/builder/#cmd</a>.</p>"
        },
        "environment":{
          "shape":"EnvironmentVariables",
          "documentation":"<p>The environment variables to pass to a container. This parameter maps to <code>Env</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--env</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p> <important> <p>We do not recommend using plain text environment variables for sensitive information, such as credential data.</p> </important>"
        },
        "mountPoints":{
          "shape":"MountPointList",
          "documentation":"<p>The mount points for data volumes in your container. This parameter maps to <code>Volumes</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--volume</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "volumesFrom":{
          "shape":"VolumeFromList",
          "documentation":"<p>Data volumes to mount from another container. This parameter maps to <code>VolumesFrom</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--volumes-from</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "hostname":{
          "shape":"String",
          "documentation":"<p>The hostname to use for your container. This parameter maps to <code>Hostname</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--hostname</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "user":{
          "shape":"String",
          "documentation":"<p>The user name to use inside the container. This parameter maps to <code>User</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--user</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "workingDirectory":{
          "shape":"String",
          "documentation":"<p>The working directory in which to run commands inside the container. This parameter maps to <code>WorkingDir</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--workdir</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "disableNetworking":{
          "shape":"BoxedBoolean",
          "documentation":"<p>When this parameter is true, networking is disabled within the container. This parameter maps to <code>NetworkDisabled</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a>.</p>"
        },
        "privileged":{
          "shape":"BoxedBoolean",
          "documentation":"<p>When this parameter is true, the container is given elevated privileges on the host container instance (similar to the <code>root</code> user). This parameter maps to <code>Privileged</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--privileged</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "readonlyRootFilesystem":{
          "shape":"BoxedBoolean",
          "documentation":"<p>When this parameter is true, the container is given read-only access to its root file system. This parameter maps to <code>ReadonlyRootfs</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--read-only</code> option to <code>docker run</code>.</p>"
        },
        "dnsServers":{
          "shape":"StringList",
          "documentation":"<p>A list of DNS servers that are presented to the container. This parameter maps to <code>Dns</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--dns</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "dnsSearchDomains":{
          "shape":"StringList",
          "documentation":"<p>A list of DNS search domains that are presented to the container. This parameter maps to <code>DnsSearch</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--dns-search</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "extraHosts":{
          "shape":"HostEntryList",
          "documentation":"<p>A list of hostnames and IP address mappings to append to the <code>/etc/hosts</code> file on the container. This parameter maps to <code>ExtraHosts</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--add-host</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p>"
        },
        "dockerSecurityOptions":{
          "shape":"StringList",
          "documentation":"<p>A list of strings to provide custom labels for SELinux and AppArmor multi-level security systems. This parameter maps to <code>SecurityOpt</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--security-opt</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>.</p> <note> <p>The Amazon ECS container agent running on a container instance must register with the <code>ECS_SELINUX_CAPABLE=true</code> or <code>ECS_APPARMOR_CAPABLE=true</code> environment variables before containers placed on that instance can use these security options. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/developerguide/ecs-agent-config.html\">Amazon ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p> </note>"
        },
        "dockerLabels":{
          "shape":"DockerLabelsMap",
          "documentation":"<p>A key/value map of labels to add to the container. This parameter maps to <code>Labels</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--label</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>. This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log into your container instance and run the following command: <code>sudo docker version | grep \"Server API version\"</code> </p>"
        },
        "ulimits":{
          "shape":"UlimitList",
          "documentation":"<p>A list of <code>ulimits</code> to set in the container. This parameter maps to <code>Ulimits</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--ulimit</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>. Valid naming values are displayed in the <a>Ulimit</a> data type. This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log into your container instance and run the following command: <code>sudo docker version | grep \"Server API version\"</code></p>"
        },
        "logConfiguration":{
          "shape":"LogConfiguration",
          "documentation":"<p>The log configuration specification for the container. This parameter maps to <code>LogConfig</code> in the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-a-container\">Create a container</a> section of the <a href=\"https://docs.docker.com/reference/api/docker_remote_api_v1.19/\">Docker Remote API</a> and the <code>--log-driver</code> option to <a href=\"https://docs.docker.com/reference/commandline/run/\">docker run</a>. Valid log drivers are displayed in the <a>LogConfiguration</a> data type. This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log into your container instance and run the following command: <code>sudo docker version | grep \"Server API version\"</code></p> <note> <p>The Amazon ECS container agent running on a container instance must register the logging drivers available on that instance with the <code>ECS_AVAILABLE_LOGGING_DRIVERS</code> environment variable before containers placed on that instance can use these log configuration options. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/developerguide/ecs-agent-config.html\">Amazon ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p> </note>"
        }
      },
      "documentation":"<p>Container definitions are used in task definitions to describe the different containers that are launched as part of a task.</p>"
    },
    "ContainerDefinitions":{
      "type":"list",
      "member":{"shape":"ContainerDefinition"}
    },
    "ContainerInstance":{
      "type":"structure",
      "members":{
        "containerInstanceArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the container instance. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the container instance, the AWS account ID of the container instance owner, the <code>container-instance</code> namespace, and then the container instance ID. For example, arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>.</p>"
        },
        "ec2InstanceId":{
          "shape":"String",
          "documentation":"<p>The EC2 instance ID of the container instance.</p>"
        },
        "versionInfo":{
          "shape":"VersionInfo",
          "documentation":"<p>The version information for the Amazon ECS container agent and Docker daemon running on the container instance.</p>"
        },
        "remainingResources":{
          "shape":"Resources",
          "documentation":"<p>The remaining resources of the container instance that are available for new tasks.</p>"
        },
        "registeredResources":{
          "shape":"Resources",
          "documentation":"<p>The registered resources on the container instance that are in use by current tasks.</p>"
        },
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the container instance. The valid values are <code>ACTIVE</code> or <code>INACTIVE</code>. <code>ACTIVE</code> indicates that the container instance can accept tasks.</p>"
        },
        "agentConnected":{
          "shape":"Boolean",
          "documentation":"<p>This parameter returns <code>true</code> if the agent is actually connected to Amazon ECS. Registered instances with an agent that may be unhealthy or stopped return <code>false</code>, and instances without a connected agent cannot accept placement requests.</p>"
        },
        "runningTasksCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks on the container instance that are in the <code>RUNNING</code> status.</p>"
        },
        "pendingTasksCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks on the container instance that are in the <code>PENDING</code> status.</p>"
        },
        "agentUpdateStatus":{
          "shape":"AgentUpdateStatus",
          "documentation":"<p>The status of the most recent agent update. If an update has never been requested, this value is <code>NULL</code>.</p>"
        },
        "attributes":{
          "shape":"Attributes",
          "documentation":"<p>The attributes set for the container instance by the Amazon ECS container agent at instance registration.</p>"
        }
      },
      "documentation":"<p>An EC2 instance that is running the Amazon ECS agent and has been registered with a cluster.</p>"
    },
    "ContainerInstances":{
      "type":"list",
      "member":{"shape":"ContainerInstance"}
    },
    "ContainerOverride":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the container that receives the override.</p>"
        },
        "command":{
          "shape":"StringList",
          "documentation":"<p>The command to send to the container that overrides the default command from the Docker image or the task definition.</p>"
        },
        "environment":{
          "shape":"EnvironmentVariables",
          "documentation":"<p>The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition.</p>"
        }
      },
      "documentation":"<p>The overrides that should be sent to a container.</p>"
    },
    "ContainerOverrides":{
      "type":"list",
      "member":{"shape":"ContainerOverride"}
    },
    "Containers":{
      "type":"list",
      "member":{"shape":"Container"}
    },
    "CreateClusterRequest":{
      "type":"structure",
      "members":{
        "clusterName":{
          "shape":"String",
          "documentation":"<p>The name of your cluster. If you do not specify a name for your cluster, you create a cluster named <code>default</code>. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.</p>"
        }
      }
    },
    "CreateClusterResponse":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"Cluster",
          "documentation":"<p>The full description of your new cluster.</p>"
        }
      }
    },
    "CreateServiceRequest":{
      "type":"structure",
      "required":[
        "serviceName",
        "taskDefinition",
        "desiredCount"
      ],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster on which to run your service. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "serviceName":{
          "shape":"String",
          "documentation":"<p>The name of your service. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. Service names must be unique within a cluster, but you can have similarly named services in multiple clusters within a region or across multiple regions.</p>"
        },
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition to run in your service. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used.</p>"
        },
        "loadBalancers":{
          "shape":"LoadBalancers",
          "documentation":"<p>A list of load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer.</p>"
        },
        "desiredCount":{
          "shape":"BoxedInteger",
          "documentation":"<p>The number of instantiations of the specified task definition to place and keep running on your cluster.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. Up to 32 ASCII characters are allowed.</p>"
        },
        "role":{
          "shape":"String",
          "documentation":"<p>The name or full Amazon Resource Name (ARN) of the IAM role that allows your Amazon ECS container agent to make calls to your load balancer on your behalf. This parameter is only required if you are using a load balancer with your service.</p>"
        },
        "deploymentConfiguration":{
          "shape":"DeploymentConfiguration",
          "documentation":"<p>Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks. </p>"
        }
      }
    },
    "CreateServiceResponse":{
      "type":"structure",
      "members":{
        "service":{
          "shape":"Service",
          "documentation":"<p>The full description of your service following the create call.</p>"
        }
      }
    },
    "DeleteClusterRequest":{
      "type":"structure",
      "required":["cluster"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster to delete.</p>"
        }
      }
    },
    "DeleteClusterResponse":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"Cluster",
          "documentation":"<p>The full description of the deleted cluster.</p>"
        }
      }
    },
    "DeleteServiceRequest":{
      "type":"structure",
      "required":["service"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The name of the cluster that hosts the service to delete. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "service":{
          "shape":"String",
          "documentation":"<p>The name of the service to delete.</p>"
        }
      }
    },
    "DeleteServiceResponse":{
      "type":"structure",
      "members":{
        "service":{
          "shape":"Service",
          "documentation":"<p>The full description of the deleted service.</p>"
        }
      }
    },
    "Deployment":{
      "type":"structure",
      "members":{
        "id":{
          "shape":"String",
          "documentation":"<p>The ID of the deployment.</p>"
        },
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the deployment. Valid values are <code>PRIMARY</code> (for the most recent deployment), <code>ACTIVE</code> (for previous deployments that still have tasks running, but are being replaced with the <code>PRIMARY</code> deployment), and <code>INACTIVE</code> (for deployments that have been completely replaced).</p>"
        },
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The most recent task definition that was specified for the service to use.</p>"
        },
        "desiredCount":{
          "shape":"Integer",
          "documentation":"<p>The most recent desired count of tasks that was specified for the service to deploy or maintain.</p>"
        },
        "pendingCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks in the deployment that are in the <code>PENDING</code> status.</p>"
        },
        "runningCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks in the deployment that are in the <code>RUNNING</code> status.</p>"
        },
        "createdAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Unix time in seconds and milliseconds when the service was created.</p>"
        },
        "updatedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Unix time in seconds and milliseconds when the service was last updated.</p>"
        }
      },
      "documentation":"<p>The details of an Amazon ECS service deployment.</p>"
    },
    "DeploymentConfiguration":{
      "type":"structure",
      "members":{
        "maximumPercent":{
          "shape":"BoxedInteger",
          "documentation":"<p>The upper limit (as a percentage of the service's <code>desiredCount</code>) of the number of running tasks that can be running in a service during a deployment. The maximum number of tasks during a deployment is the <code>desiredCount</code> multiplied by the <code>maximumPercent</code>/100, rounded down to the nearest integer value.</p>"
        },
        "minimumHealthyPercent":{
          "shape":"BoxedInteger",
          "documentation":"<p>The lower limit (as a percentage of the service's <code>desiredCount</code>) of the number of running tasks that must remain running and healthy in a service during a deployment. The minimum healthy tasks during a deployment is the <code>desiredCount</code> multiplied by the <code>minimumHealthyPercent</code>/100, rounded up to the nearest integer value.</p>"
        }
      },
      "documentation":"<p>Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks.</p>"
    },
    "Deployments":{
      "type":"list",
      "member":{"shape":"Deployment"}
    },
    "DeregisterContainerInstanceRequest":{
      "type":"structure",
      "required":["containerInstance"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instance to deregister. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "containerInstance":{
          "shape":"String",
          "documentation":"<p>The container instance ID or full Amazon Resource Name (ARN) of the container instance to deregister. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the container instance, the AWS account ID of the container instance owner, the <code>container-instance</code> namespace, and then the container instance ID. For example, arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>.</p>"
        },
        "force":{
          "shape":"BoxedBoolean",
          "documentation":"<p>Forces the deregistration of the container instance. If you have tasks running on the container instance when you deregister it with the <code>force</code> option, these tasks remain running and they continue to pass Elastic Load Balancing load balancer health checks until you terminate the instance or the tasks stop through some other means, but they are orphaned (no longer monitored or accounted for by Amazon ECS). If an orphaned task on your container instance is part of an Amazon ECS service, then the service scheduler starts another copy of that task, on a different container instance if possible.</p>"
        }
      }
    },
    "DeregisterContainerInstanceResponse":{
      "type":"structure",
      "members":{
        "containerInstance":{"shape":"ContainerInstance"}
      }
    },
    "DeregisterTaskDefinitionRequest":{
      "type":"structure",
      "required":["taskDefinition"],
      "members":{
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition to deregister. You must specify a <code>revision</code>.</p>"
        }
      }
    },
    "DeregisterTaskDefinitionResponse":{
      "type":"structure",
      "members":{
        "taskDefinition":{
          "shape":"TaskDefinition",
          "documentation":"<p>The full description of the deregistered task.</p>"
        }
      }
    },
    "DescribeClustersRequest":{
      "type":"structure",
      "members":{
        "clusters":{
          "shape":"StringList",
          "documentation":"<p>A space-separated list of cluster names or full cluster Amazon Resource Name (ARN) entries. If you do not specify a cluster, the default cluster is assumed.</p>"
        }
      }
    },
    "DescribeClustersResponse":{
      "type":"structure",
      "members":{
        "clusters":{
          "shape":"Clusters",
          "documentation":"<p>The list of clusters.</p>"
        },
        "failures":{
          "shape":"Failures",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "DescribeContainerInstancesRequest":{
      "type":"structure",
      "required":["containerInstances"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instances to describe. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "containerInstances":{
          "shape":"StringList",
          "documentation":"<p>A space-separated list of container instance IDs or full Amazon Resource Name (ARN) entries.</p>"
        }
      }
    },
    "DescribeContainerInstancesResponse":{
      "type":"structure",
      "members":{
        "containerInstances":{
          "shape":"ContainerInstances",
          "documentation":"<p>The list of container instances.</p>"
        },
        "failures":{
          "shape":"Failures",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "DescribeServicesRequest":{
      "type":"structure",
      "required":["services"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The name of the cluster that hosts the service to describe. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "services":{
          "shape":"StringList",
          "documentation":"<p>A list of services to describe.</p>"
        }
      }
    },
    "DescribeServicesResponse":{
      "type":"structure",
      "members":{
        "services":{
          "shape":"Services",
          "documentation":"<p>The list of services described.</p>"
        },
        "failures":{
          "shape":"Failures",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "DescribeTaskDefinitionRequest":{
      "type":"structure",
      "required":["taskDefinition"],
      "members":{
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code> and <code>revision</code> (<code>family:revision</code>) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.</p>"
        }
      }
    },
    "DescribeTaskDefinitionResponse":{
      "type":"structure",
      "members":{
        "taskDefinition":{
          "shape":"TaskDefinition",
          "documentation":"<p>The full task definition description.</p>"
        }
      }
    },
    "DescribeTasksRequest":{
      "type":"structure",
      "required":["tasks"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task to describe. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "tasks":{
          "shape":"StringList",
          "documentation":"<p>A space-separated list of task IDs or full Amazon Resource Name (ARN) entries.</p>"
        }
      }
    },
    "DescribeTasksResponse":{
      "type":"structure",
      "members":{
        "tasks":{
          "shape":"Tasks",
          "documentation":"<p>The list of tasks.</p>"
        },
        "failures":{
          "shape":"Failures",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "DesiredStatus":{
      "type":"string",
      "enum":[
        "RUNNING",
        "PENDING",
        "STOPPED"
      ]
    },
    "DiscoverPollEndpointRequest":{
      "type":"structure",
      "members":{
        "containerInstance":{
          "shape":"String",
          "documentation":"<p>The container instance ID or full Amazon Resource Name (ARN) of the container instance. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the container instance, the AWS account ID of the container instance owner, the <code>container-instance</code> namespace, and then the container instance ID. For example, arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>.</p>"
        },
        "cluster":{
          "shape":"String",
          "documentation":"<p>The cluster that the container instance belongs to.</p>"
        }
      }
    },
    "DiscoverPollEndpointResponse":{
      "type":"structure",
      "members":{
        "endpoint":{
          "shape":"String",
          "documentation":"<p>The endpoint for the Amazon ECS agent to poll.</p>"
        },
        "telemetryEndpoint":{
          "shape":"String",
          "documentation":"<p>The telemetry endpoint for the Amazon ECS agent.</p>"
        }
      }
    },
    "DockerLabelsMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "Double":{"type":"double"},
    "EnvironmentVariables":{
      "type":"list",
      "member":{"shape":"KeyValuePair"}
    },
    "Failure":{
      "type":"structure",
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the failed resource.</p>"
        },
        "reason":{
          "shape":"String",
          "documentation":"<p>The reason for the failure.</p>"
        }
      },
      "documentation":"<p>A failed resource.</p>"
    },
    "Failures":{
      "type":"list",
      "member":{"shape":"Failure"}
    },
    "HostEntry":{
      "type":"structure",
      "required":[
        "hostname",
        "ipAddress"
      ],
      "members":{
        "hostname":{
          "shape":"String",
          "documentation":"<p>The hostname to use in the <code>/etc/hosts</code> entry.</p>"
        },
        "ipAddress":{
          "shape":"String",
          "documentation":"<p>The IP address to use in the <code>/etc/hosts</code> entry.</p>"
        }
      },
      "documentation":"<p>Hostnames and IP address entries that are added to the <code>/etc/hosts</code> file of a container via the <code>extraHosts</code> parameter of its <a>ContainerDefinition</a>. </p>"
    },
    "HostEntryList":{
      "type":"list",
      "member":{"shape":"HostEntry"}
    },
    "HostVolumeProperties":{
      "type":"structure",
      "members":{
        "sourcePath":{
          "shape":"String",
          "documentation":"<p>The path on the host container instance that is presented to the container. If this parameter is empty, then the Docker daemon has assigned a host path for you. If the <code>host</code> parameter contains a <code>sourcePath</code> file location, then the data volume persists at the specified location on the host container instance until you delete it manually. If the <code>sourcePath</code> value does not exist on the host container instance, the Docker daemon creates it. If the location does exist, the contents of the source path folder are exported.</p>"
        }
      },
      "documentation":"<p>Details on a container instance host volume.</p>"
    },
    "Integer":{"type":"integer"},
    "InvalidParameterException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
      "exception":true
    },
    "KeyValuePair":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the key value pair. For environment variables, this is the name of the environment variable.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of the key value pair. For environment variables, this is the value of the environment variable.</p>"
        }
      },
      "documentation":"<p>A key and value pair object.</p>"
    },
    "ListClustersRequest":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"BoxedInteger",
          "documentation":"<p>The maximum number of cluster results returned by <code>ListClusters</code> in paginated output. When this parameter is used, <code>ListClusters</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListClusters</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListClusters</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
        }
      }
    },
    "ListClustersResponse":{
      "type":"structure",
      "members":{
        "clusterArns":{
          "shape":"StringList",
          "documentation":"<p>The list of full Amazon Resource Name (ARN) entries for each cluster associated with your account.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>ListClusters</code> request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "ListContainerInstancesRequest":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instances to list. If you do not specify a cluster, the default cluster is assumed..</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>ListContainerInstances</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"BoxedInteger",
          "documentation":"<p>The maximum number of container instance results returned by <code>ListContainerInstances</code> in paginated output. When this parameter is used, <code>ListContainerInstances</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListContainerInstances</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListContainerInstances</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
        }
      }
    },
    "ListContainerInstancesResponse":{
      "type":"structure",
      "members":{
        "containerInstanceArns":{
          "shape":"StringList",
          "documentation":"<p>The list of container instances with full Amazon Resource Name (ARN) entries for each container instance associated with the specified cluster.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>ListContainerInstances</code> request. When the results of a <code>ListContainerInstances</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "ListServicesRequest":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the services to list. If you do not specify a cluster, the default cluster is assumed..</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>ListServices</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"BoxedInteger",
          "documentation":"<p>The maximum number of container instance results returned by <code>ListServices</code> in paginated output. When this parameter is used, <code>ListServices</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListServices</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 10. If this parameter is not used, then <code>ListServices</code> returns up to 10 results and a <code>nextToken</code> value if applicable.</p>"
        }
      }
    },
    "ListServicesResponse":{
      "type":"structure",
      "members":{
        "serviceArns":{
          "shape":"StringList",
          "documentation":"<p>The list of full Amazon Resource Name (ARN) entries for each service associated with the specified cluster.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>ListServices</code> request. When the results of a <code>ListServices</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "ListTaskDefinitionFamiliesRequest":{
      "type":"structure",
      "members":{
        "familyPrefix":{
          "shape":"String",
          "documentation":"<p>The <code>familyPrefix</code> is a string that is used to filter the results of <code>ListTaskDefinitionFamilies</code>. If you specify a <code>familyPrefix</code>, only task definition family names that begin with the <code>familyPrefix</code> string are returned.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>ListTaskDefinitionFamilies</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"BoxedInteger",
          "documentation":"<p>The maximum number of task definition family results returned by <code>ListTaskDefinitionFamilies</code> in paginated output. When this parameter is used, <code>ListTaskDefinitions</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListTaskDefinitionFamilies</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitionFamilies</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
        }
      }
    },
    "ListTaskDefinitionFamiliesResponse":{
      "type":"structure",
      "members":{
        "families":{
          "shape":"StringList",
          "documentation":"<p>The list of task definition family names that match the <code>ListTaskDefinitionFamilies</code> request.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>ListTaskDefinitionFamilies</code> request. When the results of a <code>ListTaskDefinitionFamilies</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "ListTaskDefinitionsRequest":{
      "type":"structure",
      "members":{
        "familyPrefix":{
          "shape":"String",
          "documentation":"<p>The full family name with which to filter the <code>ListTaskDefinitions</code> results. Specifying a <code>familyPrefix</code> limits the listed task definitions to task definition revisions that belong to that family.</p>"
        },
        "status":{
          "shape":"TaskDefinitionStatus",
          "documentation":"<p>The task definition status with which to filter the <code>ListTaskDefinitions</code> results. By default, only <code>ACTIVE</code> task definitions are listed. By setting this parameter to <code>INACTIVE</code>, you can view task definitions that are <code>INACTIVE</code> as long as an active task or service still references them. If you paginate the resulting output, be sure to keep the <code>status</code> value constant in each subsequent request.</p>"
        },
        "sort":{
          "shape":"SortOrder",
          "documentation":"<p>The order in which to sort the results. Valid values are <code>ASC</code> and <code>DESC</code>. By default (<code>ASC</code>), task definitions are listed lexicographically by family name and in ascending numerical order by revision so that the newest task definitions in a family are listed last. Setting this parameter to <code>DESC</code> reverses the sort order on family name and revision so that the newest task definitions in a family are listed first.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>ListTaskDefinitions</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"BoxedInteger",
          "documentation":"<p>The maximum number of task definition results returned by <code>ListTaskDefinitions</code> in paginated output. When this parameter is used, <code>ListTaskDefinitions</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListTaskDefinitions</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitions</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
        }
      }
    },
    "ListTaskDefinitionsResponse":{
      "type":"structure",
      "members":{
        "taskDefinitionArns":{
          "shape":"StringList",
          "documentation":"<p>The list of task definition Amazon Resource Name (ARN) entries for the <code>ListTaskDefinitions</code> request.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>ListTaskDefinitions</code> request. When the results of a <code>ListTaskDefinitions</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "ListTasksRequest":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the tasks to list. If you do not specify a cluster, the default cluster is assumed..</p>"
        },
        "containerInstance":{
          "shape":"String",
          "documentation":"<p>The container instance ID or full Amazon Resource Name (ARN) of the container instance with which to filter the <code>ListTasks</code> results. Specifying a <code>containerInstance</code> limits the results to tasks that belong to that container instance.</p>"
        },
        "family":{
          "shape":"String",
          "documentation":"<p>The name of the family with which to filter the <code>ListTasks</code> results. Specifying a <code>family</code> limits the results to tasks that belong to that family.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value returned from a previous paginated <code>ListTasks</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
        },
        "maxResults":{
          "shape":"BoxedInteger",
          "documentation":"<p>The maximum number of task results returned by <code>ListTasks</code> in paginated output. When this parameter is used, <code>ListTasks</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListTasks</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTasks</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
        },
        "startedBy":{
          "shape":"String",
          "documentation":"<p>The <code>startedBy</code> value with which to filter the task results. Specifying a <code>startedBy</code> value limits the results to tasks that were started with that value.</p>"
        },
        "serviceName":{
          "shape":"String",
          "documentation":"<p>The name of the service with which to filter the <code>ListTasks</code> results. Specifying a <code>serviceName</code> limits the results to tasks that belong to that service.</p>"
        },
        "desiredStatus":{
          "shape":"DesiredStatus",
          "documentation":"<p>The task status with which to filter the <code>ListTasks</code> results. Specifying a <code>desiredStatus</code> of <code>STOPPED</code> limits the results to tasks that are in the <code>STOPPED</code> status, which can be useful for debugging tasks that are not starting properly or have died or finished. The default status filter is <code>RUNNING</code>.</p>"
        }
      }
    },
    "ListTasksResponse":{
      "type":"structure",
      "members":{
        "taskArns":{
          "shape":"StringList",
          "documentation":"<p>The list of task Amazon Resource Name (ARN) entries for the <code>ListTasks</code> request.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The <code>nextToken</code> value to include in a future <code>ListTasks</code> request. When the results of a <code>ListTasks</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
        }
      }
    },
    "LoadBalancer":{
      "type":"structure",
      "members":{
        "loadBalancerName":{
          "shape":"String",
          "documentation":"<p>The name of the load balancer.</p>"
        },
        "containerName":{
          "shape":"String",
          "documentation":"<p>The name of the container (as it appears in a container definition) to associate with the load balancer.</p>"
        },
        "containerPort":{
          "shape":"BoxedInteger",
          "documentation":"<p>The port on the container to associate with the load balancer. This port must correspond to a <code>containerPort</code> in the service's task definition. Your container instances must allow ingress traffic on the <code>hostPort</code> of the port mapping.</p>"
        }
      },
      "documentation":"<p>Details on a load balancer that is used with a service.</p>"
    },
    "LoadBalancers":{
      "type":"list",
      "member":{"shape":"LoadBalancer"}
    },
    "LogConfiguration":{
      "type":"structure",
      "required":["logDriver"],
      "members":{
        "logDriver":{
          "shape":"LogDriver",
          "documentation":"<p>The log driver to use for the container. This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log into your container instance and run the following command: <code>sudo docker version | grep \"Server API version\"</code></p>"
        },
        "options":{
          "shape":"LogConfigurationOptionsMap",
          "documentation":"<p>The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log into your container instance and run the following command: <code>sudo docker version | grep \"Server API version\"</code></p>"
        }
      },
      "documentation":"<p>Log configuration options to send to a custom log driver for the container.</p>"
    },
    "LogConfigurationOptionsMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "LogDriver":{
      "type":"string",
      "enum":[
        "json-file",
        "syslog",
        "journald",
        "gelf",
        "fluentd"
      ]
    },
    "Long":{"type":"long"},
    "MissingVersionException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>Amazon ECS is unable to determine the current version of the Amazon ECS container agent on the container instance and does not have enough information to proceed with an update. This could be because the agent running on the container instance is an older or custom version that does not use our version information.</p>",
      "exception":true
    },
    "MountPoint":{
      "type":"structure",
      "members":{
        "sourceVolume":{
          "shape":"String",
          "documentation":"<p>The name of the volume to mount.</p>"
        },
        "containerPath":{
          "shape":"String",
          "documentation":"<p>The path on the container to mount the host volume at.</p>"
        },
        "readOnly":{
          "shape":"BoxedBoolean",
          "documentation":"<p>If this value is <code>true</code>, the container has read-only access to the volume. If this value is <code>false</code>, then the container can write to the volume. The default value is <code>false</code>.</p>"
        }
      },
      "documentation":"<p>Details on a volume mount point that is used in a container definition.</p>"
    },
    "MountPointList":{
      "type":"list",
      "member":{"shape":"MountPoint"}
    },
    "NetworkBinding":{
      "type":"structure",
      "members":{
        "bindIP":{
          "shape":"String",
          "documentation":"<p>The IP address that the container is bound to on the container instance.</p>"
        },
        "containerPort":{
          "shape":"BoxedInteger",
          "documentation":"<p>The port number on the container that is be used with the network binding.</p>"
        },
        "hostPort":{
          "shape":"BoxedInteger",
          "documentation":"<p>The port number on the host that is used with the network binding.</p>"
        },
        "protocol":{
          "shape":"TransportProtocol",
          "documentation":"<p>The protocol used for the network binding.</p>"
        }
      },
      "documentation":"<p>Details on the network bindings between a container and its host container instance. After a task reaches the <code>RUNNING</code> status, manual and automatic host and container port assignments are visible in the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.</p>"
    },
    "NetworkBindings":{
      "type":"list",
      "member":{"shape":"NetworkBinding"}
    },
    "NoUpdateAvailableException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>There is no update available for this Amazon ECS container agent. This could be because the agent is already running the latest version, or it is so old that there is no update path to the current version.</p>",
      "exception":true
    },
    "PortMapping":{
      "type":"structure",
      "members":{
        "containerPort":{
          "shape":"Integer",
          "documentation":"<p>The port number on the container that is bound to the user-specified or automatically assigned host port. If you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range (for more information, see <code>hostPort</code>).</p>"
        },
        "hostPort":{
          "shape":"Integer",
          "documentation":"<p>The port number on the container instance to reserve for your container. You can specify a non-reserved host port for your container port mapping, or you can omit the <code>hostPort</code> (or set it to <code>0</code>) while specifying a <code>containerPort</code> and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version.</p> <p>The default ephemeral port range is 49153 to 65535, and this range is used for Docker versions prior to 1.6.0. For Docker version 1.6.0 and later, the Docker daemon tries to read the ephemeral port range from <code>/proc/sys/net/ipv4/ip_local_port_range</code>; if this kernel parameter is unavailable, the default ephemeral port range is used. You should not attempt to specify a host port in the ephemeral port range, because these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range.</p> <p>The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent port 51678. Any host port that was previously specified in a running task is also reserved while the task is running (after a task stops, the host port is released).The current reserved ports are displayed in the <code>remainingResources</code> of <a>DescribeContainerInstances</a> output, and a container instance may have up to 50 reserved ports at a time, including the default reserved ports (automatically assigned ports do not count toward this limit).</p>"
        },
        "protocol":{
          "shape":"TransportProtocol",
          "documentation":"<p>The protocol used for the port mapping. Valid values are <code>tcp</code> and <code>udp</code>. The default is <code>tcp</code>.</p>"
        }
      },
      "documentation":"<p>Port mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition. After a task reaches the <code>RUNNING</code> status, manual and automatic host and container port assignments are visible in the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.</p>"
    },
    "PortMappingList":{
      "type":"list",
      "member":{"shape":"PortMapping"}
    },
    "RegisterContainerInstanceRequest":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster with which to register your container instance. If you do not specify a cluster, the default cluster is assumed..</p>"
        },
        "instanceIdentityDocument":{
          "shape":"String",
          "documentation":"<p>The instance identity document for the EC2 instance to register. This document can be found by running the following command from the instance: <code>curl http://169.254.169.254/latest/dynamic/instance-identity/document/</code></p>"
        },
        "instanceIdentityDocumentSignature":{
          "shape":"String",
          "documentation":"<p>The instance identity document signature for the EC2 instance to register. This signature can be found by running the following command from the instance: <code>curl http://169.254.169.254/latest/dynamic/instance-identity/signature/</code></p>"
        },
        "totalResources":{
          "shape":"Resources",
          "documentation":"<p>The resources available on the instance.</p>"
        },
        "versionInfo":{
          "shape":"VersionInfo",
          "documentation":"<p>The version information for the Amazon ECS container agent and Docker daemon running on the container instance.</p>"
        },
        "containerInstanceArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the container instance (if it was previously registered).</p>"
        },
        "attributes":{
          "shape":"Attributes",
          "documentation":"<p>The container instance attributes that this container instance supports.</p>"
        }
      }
    },
    "RegisterContainerInstanceResponse":{
      "type":"structure",
      "members":{
        "containerInstance":{"shape":"ContainerInstance"}
      }
    },
    "RegisterTaskDefinitionRequest":{
      "type":"structure",
      "required":[
        "family",
        "containerDefinitions"
      ],
      "members":{
        "family":{
          "shape":"String",
          "documentation":"<p>You must specify a <code>family</code> for a task definition, which allows you to track multiple versions of the same task definition. The <code>family</code> is used as a name for your task definition. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.</p>"
        },
        "containerDefinitions":{
          "shape":"ContainerDefinitions",
          "documentation":"<p>A list of container definitions in JSON format that describe the different containers that make up your task.</p>"
        },
        "volumes":{
          "shape":"VolumeList",
          "documentation":"<p>A list of volume definitions in JSON format that containers in your task may use.</p>"
        }
      }
    },
    "RegisterTaskDefinitionResponse":{
      "type":"structure",
      "members":{
        "taskDefinition":{
          "shape":"TaskDefinition",
          "documentation":"<p>The full description of the registered task definition.</p>"
        }
      }
    },
    "RequiresAttributes":{
      "type":"list",
      "member":{"shape":"Attribute"}
    },
    "Resource":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the resource, such as <code>CPU</code>, <code>MEMORY</code>, <code>PORTS</code>, or a user-defined resource.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the resource, such as <code>INTEGER</code>, <code>DOUBLE</code>, <code>LONG</code>, or <code>STRINGSET</code>.</p>"
        },
        "doubleValue":{
          "shape":"Double",
          "documentation":"<p>When the <code>doubleValue</code> type is set, the value of the resource must be a double precision floating-point type.</p>"
        },
        "longValue":{
          "shape":"Long",
          "documentation":"<p>When the <code>longValue</code> type is set, the value of the resource must be an extended precision floating-point type.</p>"
        },
        "integerValue":{
          "shape":"Integer",
          "documentation":"<p>When the <code>integerValue</code> type is set, the value of the resource must be an integer.</p>"
        },
        "stringSetValue":{
          "shape":"StringList",
          "documentation":"<p>When the <code>stringSetValue</code> type is set, the value of the resource must be a string type.</p>"
        }
      },
      "documentation":"<p>Describes the resources available for a container instance.</p>"
    },
    "Resources":{
      "type":"list",
      "member":{"shape":"Resource"}
    },
    "RunTaskRequest":{
      "type":"structure",
      "required":["taskDefinition"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster on which to run your task. If you do not specify a cluster, the default cluster is assumed..</p>"
        },
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition to run. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used.</p>"
        },
        "overrides":{
          "shape":"TaskOverride",
          "documentation":"<p>A list of container overrides in JSON format that specify the name of a container in the specified task definition and the overrides it should receive. You can override the default command for a container (that is specified in the task definition or Docker image) with a <code>command</code> override. You can also override existing environment variables (that are specified in the task definition or Docker image) on a container or add new environment variables to it with an <code>environment</code> override.</p> <note> <p>A total of 8192 characters are allowed for overrides. This limit includes the JSON formatting characters of the override structure.</p> </note>"
        },
        "count":{
          "shape":"BoxedInteger",
          "documentation":"<p>The number of instantiations of the specified task to place on your cluster.</p> <important> <p>The <code>count</code> parameter is limited to 10 tasks per call.</p> </important>"
        },
        "startedBy":{
          "shape":"String",
          "documentation":"<p>An optional tag specified when a task is started. For example if you automatically trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the <code>startedBy</code> parameter. You can then identify which tasks belong to that job by filtering the results of a <a>ListTasks</a> call with the <code>startedBy</code> value.</p> <p>If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter contains the deployment ID of the service that starts it.</p>"
        }
      }
    },
    "RunTaskResponse":{
      "type":"structure",
      "members":{
        "tasks":{
          "shape":"Tasks",
          "documentation":"<p>A full description of the tasks that were run. Each task that was successfully placed on your cluster are described here.</p>"
        },
        "failures":{
          "shape":"Failures",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "ServerException":{
      "type":"structure",
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>These errors are usually caused by a server issue.</p>",
      "exception":true,
      "fault":true
    },
    "Service":{
      "type":"structure",
      "members":{
        "serviceArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) that identifies the service. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the service, the AWS account ID of the service owner, the <code>service</code> namespace, and then the service name. For example, arn:aws:ecs:<i>region</i>:<i>012345678910</i>:service/<i>my-service</i>.</p>"
        },
        "serviceName":{
          "shape":"String",
          "documentation":"<p>The name of your service. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. Service names must be unique within a cluster, but you can have similarly named services in multiple clusters within a region or across multiple regions.</p>"
        },
        "clusterArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the of the cluster that hosts the service.</p>"
        },
        "loadBalancers":{
          "shape":"LoadBalancers",
          "documentation":"<p>A list of load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer.</p>"
        },
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the service. The valid values are <code>ACTIVE</code>, <code>DRAINING</code>, or <code>INACTIVE</code>.</p>"
        },
        "desiredCount":{
          "shape":"Integer",
          "documentation":"<p>The desired number of instantiations of the task definition to keep running on the service. This value is specified when the service is created with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.</p>"
        },
        "runningCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks in the cluster that are in the <code>RUNNING</code> state.</p>"
        },
        "pendingCount":{
          "shape":"Integer",
          "documentation":"<p>The number of tasks in the cluster that are in the <code>PENDING</code> state.</p>"
        },
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The task definition to use for tasks in the service. This value is specified when the service is created with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.</p>"
        },
        "deploymentConfiguration":{
          "shape":"DeploymentConfiguration",
          "documentation":"<p>Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks.</p>"
        },
        "deployments":{
          "shape":"Deployments",
          "documentation":"<p>The current state of deployments for the service.</p>"
        },
        "roleArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role associated with the service that allows the Amazon ECS container agent to register container instances with a load balancer. </p>"
        },
        "events":{
          "shape":"ServiceEvents",
          "documentation":"<p>The event stream for your service. A maximum of 100 of the latest events are displayed.</p>"
        }
      },
      "documentation":"<p>Details on a service within a cluster</p>"
    },
    "ServiceEvent":{
      "type":"structure",
      "members":{
        "id":{
          "shape":"String",
          "documentation":"<p>The ID string of the event.</p>"
        },
        "createdAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Unix time in seconds and milliseconds when the event was triggered.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The event message.</p>"
        }
      },
      "documentation":"<p>Details on an event associated with a service.</p>"
    },
    "ServiceEvents":{
      "type":"list",
      "member":{"shape":"ServiceEvent"}
    },
    "ServiceNotActiveException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>The specified service is not active. You cannot update a service that is not active. If you have previously deleted a service, you can re-create it with <a>CreateService</a>.</p>",
      "exception":true
    },
    "ServiceNotFoundException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>The specified service could not be found. You can view your available services with <a>ListServices</a>. Amazon ECS services are cluster-specific and region-specific.</p>",
      "exception":true
    },
    "Services":{
      "type":"list",
      "member":{"shape":"Service"}
    },
    "SortOrder":{
      "type":"string",
      "enum":[
        "ASC",
        "DESC"
      ]
    },
    "StartTaskRequest":{
      "type":"structure",
      "required":[
        "taskDefinition",
        "containerInstances"
      ],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster on which to start your task. If you do not specify a cluster, the default cluster is assumed..</p>"
        },
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition to start. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used.</p>"
        },
        "overrides":{
          "shape":"TaskOverride",
          "documentation":"<p>A list of container overrides in JSON format that specify the name of a container in the specified task definition and the overrides it should receive. You can override the default command for a container (that is specified in the task definition or Docker image) with a <code>command</code> override. You can also override existing environment variables (that are specified in the task definition or Docker image) on a container or add new environment variables to it with an <code>environment</code> override.</p> <note> <p>A total of 8192 characters are allowed for overrides. This limit includes the JSON formatting characters of the override structure.</p> </note>"
        },
        "containerInstances":{
          "shape":"StringList",
          "documentation":"<p>The container instance IDs or full Amazon Resource Name (ARN) entries for the container instances on which you would like to place your task.</p> <important> <p>The list of container instances to start tasks on is limited to 10.</p> </important>"
        },
        "startedBy":{
          "shape":"String",
          "documentation":"<p>An optional tag specified when a task is started. For example if you automatically trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the <code>startedBy</code> parameter. You can then identify which tasks belong to that job by filtering the results of a <a>ListTasks</a> call with the <code>startedBy</code> value.</p> <p>If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter contains the deployment ID of the service that starts it.</p>"
        }
      }
    },
    "StartTaskResponse":{
      "type":"structure",
      "members":{
        "tasks":{
          "shape":"Tasks",
          "documentation":"<p>A full description of the tasks that were started. Each task that was successfully placed on your container instances are described here.</p>"
        },
        "failures":{
          "shape":"Failures",
          "documentation":"<p>Any failures associated with the call.</p>"
        }
      }
    },
    "StopTaskRequest":{
      "type":"structure",
      "required":["task"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task to stop. If you do not specify a cluster, the default cluster is assumed..</p>"
        },
        "task":{
          "shape":"String",
          "documentation":"<p>The task ID or full Amazon Resource Name (ARN) entry of the task to stop.</p>"
        },
        "reason":{
          "shape":"String",
          "documentation":"<p>An optional message specified when a task is stopped. For example, if you are using a custom scheduler, you can use this parameter to specify the reason for stopping the task here, and the message will appear in subsequent <a>DescribeTasks</a> API operations on this task. Up to 255 characters are allowed in this message.</p>"
        }
      }
    },
    "StopTaskResponse":{
      "type":"structure",
      "members":{
        "task":{"shape":"Task"}
      }
    },
    "String":{"type":"string"},
    "StringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "SubmitContainerStateChangeRequest":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container.</p>"
        },
        "task":{
          "shape":"String",
          "documentation":"<p>The task ID or full Amazon Resource Name (ARN) of the task that hosts the container.</p>"
        },
        "containerName":{
          "shape":"String",
          "documentation":"<p>The name of the container.</p>"
        },
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the state change request.</p>"
        },
        "exitCode":{
          "shape":"BoxedInteger",
          "documentation":"<p>The exit code returned for the state change request.</p>"
        },
        "reason":{
          "shape":"String",
          "documentation":"<p>The reason for the state change request.</p>"
        },
        "networkBindings":{
          "shape":"NetworkBindings",
          "documentation":"<p>The network bindings of the container.</p>"
        }
      }
    },
    "SubmitContainerStateChangeResponse":{
      "type":"structure",
      "members":{
        "acknowledgment":{
          "shape":"String",
          "documentation":"<p>Acknowledgement of the state change.</p>"
        }
      }
    },
    "SubmitTaskStateChangeRequest":{
      "type":"structure",
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task.</p>"
        },
        "task":{
          "shape":"String",
          "documentation":"<p>The task ID or full Amazon Resource Name (ARN) of the task in the state change request.</p>"
        },
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the state change request.</p>"
        },
        "reason":{
          "shape":"String",
          "documentation":"<p>The reason for the state change request.</p>"
        }
      }
    },
    "SubmitTaskStateChangeResponse":{
      "type":"structure",
      "members":{
        "acknowledgment":{
          "shape":"String",
          "documentation":"<p>Acknowledgement of the state change.</p>"
        }
      }
    },
    "Task":{
      "type":"structure",
      "members":{
        "taskArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the task.</p>"
        },
        "clusterArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the of the cluster that hosts the task.</p>"
        },
        "taskDefinitionArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the of the task definition that creates the task.</p>"
        },
        "containerInstanceArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the container instances that host the task.</p>"
        },
        "overrides":{
          "shape":"TaskOverride",
          "documentation":"<p>One or more container overrides.</p>"
        },
        "lastStatus":{
          "shape":"String",
          "documentation":"<p>The last known status of the task.</p>"
        },
        "desiredStatus":{
          "shape":"String",
          "documentation":"<p>The desired status of the task.</p>"
        },
        "containers":{
          "shape":"Containers",
          "documentation":"<p>The containers associated with the task.</p>"
        },
        "startedBy":{
          "shape":"String",
          "documentation":"<p>The tag specified when a task is started. If the task is started by an Amazon ECS service, then the <code>startedBy</code> parameter contains the deployment ID of the service that starts it.</p>"
        },
        "stoppedReason":{
          "shape":"String",
          "documentation":"<p>The reason the task was stopped.</p>"
        },
        "createdAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Unix time in seconds and milliseconds when the task was created (the task entered the <code>PENDING</code> state).</p>"
        },
        "startedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Unix time in seconds and milliseconds when the task was started (the task transitioned from the <code>PENDING</code> state to the <code>RUNNING</code> state).</p>"
        },
        "stoppedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Unix time in seconds and milliseconds when the task was stopped (the task transitioned from the <code>RUNNING</code> state to the <code>STOPPED</code> state).</p>"
        }
      },
      "documentation":"<p>Details on a task in a cluster.</p>"
    },
    "TaskDefinition":{
      "type":"structure",
      "members":{
        "taskDefinitionArn":{
          "shape":"String",
          "documentation":"<p>The full Amazon Resource Name (ARN) of the of the task definition.</p>"
        },
        "containerDefinitions":{
          "shape":"ContainerDefinitions",
          "documentation":"<p>A list of container definitions in JSON format that describe the different containers that make up your task. For more information about container definition parameters and defaults, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Amazon ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>"
        },
        "family":{
          "shape":"String",
          "documentation":"<p>The family of your task definition, used as the definition name.</p>"
        },
        "revision":{
          "shape":"Integer",
          "documentation":"<p>The revision of the task in a particular family. The revision is a version number of a task definition in a family. When you register a task definition for the first time, the revision is <code>1</code>; each time you register a new revision of a task definition in the same family, the revision value always increases by one (even if you have deregistered previous revisions in this family).</p>"
        },
        "volumes":{
          "shape":"VolumeList",
          "documentation":"<p>The list of volumes in a task. For more information about volume definition parameters and defaults, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Amazon ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>"
        },
        "status":{
          "shape":"TaskDefinitionStatus",
          "documentation":"<p>The status of the task definition.</p>"
        },
        "requiresAttributes":{
          "shape":"RequiresAttributes",
          "documentation":"<p>The container instance attributes required by your task.</p>"
        }
      },
      "documentation":"<p>Details of a task definition.</p>"
    },
    "TaskDefinitionStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "TaskOverride":{
      "type":"structure",
      "members":{
        "containerOverrides":{
          "shape":"ContainerOverrides",
          "documentation":"<p>One or more container overrides sent to a task.</p>"
        }
      },
      "documentation":"<p>The overrides associated with a task.</p>"
    },
    "Tasks":{
      "type":"list",
      "member":{"shape":"Task"}
    },
    "Timestamp":{"type":"timestamp"},
    "TransportProtocol":{
      "type":"string",
      "enum":[
        "tcp",
        "udp"
      ]
    },
    "Ulimit":{
      "type":"structure",
      "required":[
        "name",
        "softLimit",
        "hardLimit"
      ],
      "members":{
        "name":{
          "shape":"UlimitName",
          "documentation":"<p>The <code>type</code> of the <code>ulimit</code>.</p>"
        },
        "softLimit":{
          "shape":"Integer",
          "documentation":"<p>The soft limit for the ulimit type.</p>"
        },
        "hardLimit":{
          "shape":"Integer",
          "documentation":"<p>The hard limit for the ulimit type.</p>"
        }
      },
      "documentation":"<p>The <code>ulimit</code> settings to pass to the container.</p>"
    },
    "UlimitList":{
      "type":"list",
      "member":{"shape":"Ulimit"}
    },
    "UlimitName":{
      "type":"string",
      "enum":[
        "core",
        "cpu",
        "data",
        "fsize",
        "locks",
        "memlock",
        "msgqueue",
        "nice",
        "nofile",
        "nproc",
        "rss",
        "rtprio",
        "rttime",
        "sigpending",
        "stack"
      ]
    },
    "UpdateContainerAgentRequest":{
      "type":"structure",
      "required":["containerInstance"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that your container instance is running on. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "containerInstance":{
          "shape":"String",
          "documentation":"<p>The container instance ID or full Amazon Resource Name (ARN) entries for the container instance on which you would like to update the Amazon ECS container agent.</p>"
        }
      }
    },
    "UpdateContainerAgentResponse":{
      "type":"structure",
      "members":{
        "containerInstance":{"shape":"ContainerInstance"}
      }
    },
    "UpdateInProgressException":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>There is already a current Amazon ECS container agent update in progress on the specified container instance. If the container agent becomes disconnected while it is in a transitional stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can get stuck in that state. However, when the agent reconnects, it resumes where it stopped previously.</p>",
      "exception":true
    },
    "UpdateServiceRequest":{
      "type":"structure",
      "required":["service"],
      "members":{
        "cluster":{
          "shape":"String",
          "documentation":"<p>The short name or full Amazon Resource Name (ARN) of the cluster that your service is running on. If you do not specify a cluster, the default cluster is assumed.</p>"
        },
        "service":{
          "shape":"String",
          "documentation":"<p>The name of the service to update.</p>"
        },
        "desiredCount":{
          "shape":"BoxedInteger",
          "documentation":"<p>The number of instantiations of the task to place and keep running in your service.</p>"
        },
        "taskDefinition":{
          "shape":"String",
          "documentation":"<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition to run in your service. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used. If you modify the task definition with <code>UpdateService</code>, Amazon ECS spawns a task with the new version of the task definition and then stops an old task after the new version is running.</p>"
        },
        "deploymentConfiguration":{
          "shape":"DeploymentConfiguration",
          "documentation":"<p>Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks. </p>"
        }
      }
    },
    "UpdateServiceResponse":{
      "type":"structure",
      "members":{
        "service":{
          "shape":"Service",
          "documentation":"<p>The full description of your service following the update call.</p>"
        }
      }
    },
    "VersionInfo":{
      "type":"structure",
      "members":{
        "agentVersion":{
          "shape":"String",
          "documentation":"<p>The version number of the Amazon ECS container agent.</p>"
        },
        "agentHash":{
          "shape":"String",
          "documentation":"<p>The Git commit hash for the Amazon ECS container agent build on the <a href=\"https://github.com/aws/amazon-ecs-agent/commits/master\">amazon-ecs-agent </a> GitHub repository.</p>"
        },
        "dockerVersion":{
          "shape":"String",
          "documentation":"<p>The Docker version running on the container instance.</p>"
        }
      },
      "documentation":"<p>The Docker and Amazon ECS container agent version information about a container instance.</p>"
    },
    "Volume":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. This name is referenced in the <code>sourceVolume</code> parameter of container definition <code>mountPoints</code>.</p>"
        },
        "host":{
          "shape":"HostVolumeProperties",
          "documentation":"<p>The contents of the <code>host</code> parameter determine whether your data volume persists on the host container instance and where it is stored. If the host parameter is empty, then the Docker daemon assigns a host path for your data volume, but the data is not guaranteed to persist after the containers associated with it stop running.</p>"
        }
      },
      "documentation":"<p>A data volume used in a task definition.</p>"
    },
    "VolumeFrom":{
      "type":"structure",
      "members":{
        "sourceContainer":{
          "shape":"String",
          "documentation":"<p>The name of the container to mount volumes from.</p>"
        },
        "readOnly":{
          "shape":"BoxedBoolean",
          "documentation":"<p>If this value is <code>true</code>, the container has read-only access to the volume. If this value is <code>false</code>, then the container can write to the volume. The default value is <code>false</code>.</p>"
        }
      },
      "documentation":"<p>Details on a data volume from another container.</p>"
    },
    "VolumeFromList":{
      "type":"list",
      "member":{"shape":"VolumeFrom"}
    },
    "VolumeList":{
      "type":"list",
      "member":{"shape":"Volume"}
    }
  },
  "documentation":"<p>Amazon EC2 Container Service (Amazon ECS) is a highly scalable, fast, container management service that makes it easy to run, stop, and manage Docker containers on a cluster of EC2 instances. Amazon ECS lets you launch and stop container-enabled applications with simple API calls, allows you to get the state of your cluster from a centralized service, and gives you access to many familiar Amazon EC2 features like security groups, Amazon EBS volumes, and IAM roles.</p> <p>You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs, isolation policies, and availability requirements. Amazon EC2 Container Service eliminates the need for you to operate your own cluster management and configuration management systems or worry about scaling your management infrastructure.</p>"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                            usr/local/lib/python2.7/dist-packages/botocore/data/ecs/2014-11-13/waiters-2.json                   0100644 0000000 0000062 00000004315 13077704371 025266  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "version": 2,
  "waiters": {
    "TasksRunning": {
      "delay": 6,
      "operation": "DescribeTasks",
      "maxAttempts": 100,
      "acceptors": [
        {
          "expected": "STOPPED",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "tasks[].lastStatus"
        },
        {
          "expected": "MISSING",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "failures[].reason"
        },
        {
          "expected": "RUNNING",
          "matcher": "pathAll",
          "state": "success",
          "argument": "tasks[].lastStatus"
        }
      ]
    },
    "TasksStopped": {
      "delay": 6,
      "operation": "DescribeTasks",
      "maxAttempts": 100,
      "acceptors": [
        {
          "expected": "STOPPED",
          "matcher": "pathAll",
          "state": "success",
          "argument": "tasks[].lastStatus"
        }
      ]
    },
    "ServicesStable": {
      "delay": 15,
      "operation": "DescribeServices",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "MISSING",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "failures[].reason"
        },
        {
          "expected": "DRAINING",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "services[].status"
        },
        {
          "expected": "INACTIVE",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "services[].status"
        },
        {
          "expected": true,
          "matcher": "path",
          "state": "success",
          "argument": "services | [@[?length(deployments)!=`1`], @[?desiredCount!=runningCount]][] | length(@) == `0`"
        }
      ]
    },
    "ServicesInactive": {
      "delay": 15,
      "operation": "DescribeServices",
      "maxAttempts": 40,
      "acceptors": [
        {
          "expected": "MISSING",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "failures[].reason"
        },
        {
          "expected": "INACTIVE",
          "matcher": "pathAny",
          "state": "success",
          "argument": "services[].status"
        }
      ]
    }
  }
}
                                                                                                                                                                                                                                                                                                                   usr/local/lib/python2.7/dist-packages/botocore/data/efs/                                            0042755 0000000 0000062 00000000000 13077704402 021530  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/efs/2015-02-01/                                 0042755 0000000 0000062 00000000000 13077704402 022554  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/efs/2015-02-01/service-2.json                   0100644 0000000 0000062 00000157331 13077704371 025260  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "version":"2.0",
  "metadata":{
    "apiVersion":"2015-02-01",
    "endpointPrefix":"elasticfilesystem",
    "serviceAbbreviation":"EFS",
    "serviceFullName":"Amazon Elastic File System",
    "signatureVersion":"v4",
    "protocol":"rest-json"
  },
  "documentation":"<fullname>Amazon Elastic File System</fullname>",
  "operations":{
    "CreateFileSystem":{
      "name":"CreateFileSystem",
      "http":{
        "method":"POST",
        "requestUri":"/2015-02-01/file-systems",
        "responseCode":201
      },
      "input":{"shape":"CreateFileSystemRequest"},
      "output":{
        "shape":"FileSystemDescription",
        "documentation":"<p>This object provides description of a file system.</p>"
      },
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemAlreadyExists",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if the file system you are trying to create already exists, with the creation token you provided.</p>"
        },
        {
          "shape":"FileSystemLimitExceeded",
          "error":{"httpStatusCode":403},
          "exception":true,
          "documentation":"<p>Returned if the AWS account has already created maximum number of file systems allowed per account. </p>"
        }
      ],
      "documentation":"<p> Creates a new, empty file system. The operation requires a creation token in the request that Amazon EFS uses to ensure idempotent creation (calling the operation with same creation token has no effect). If a file system does not currently exist that is owned by the caller's AWS account with the specified creation token, this operation does the following: </p> <ul> <li>Creates a new, empty file system. The file system will have an Amazon EFS assigned ID, and an initial lifecycle state \"creating\". </li> <li> Returns with the description of the created file system. </li> </ul> <p>Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with the ID of the existing file system.</p> <note>For basic use cases, you can use a randomly generated UUID for the creation token.</note> <p> The idempotent operation allows you to retry a <code>CreateFileSystem</code> call without risk of creating an extra file system. This can happen when an initial call fails in a way that leaves it uncertain whether or not a file system was actually created. An example might be that a transport level timeout occurred or your connection was reset. As long as you use the same creation token, if the initial call had succeeded in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code> error. </p> <note>The <code>CreateFileSystem</code> call returns while the file system's lifecycle state is still \"creating\". You can check the file system creation status by calling the <a>DescribeFileSystems</a> API, which among other things returns the file system state.</note> <p> After the file system is fully created, Amazon EFS sets its lifecycle state to \"available\", at which point you can create one or more mount targets for the file system (<a>CreateMountTarget</a>) in your VPC. You mount your Amazon EFS file system on an EC2 instances in your VPC via the mount target. For more information, see <a href=\"http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html\">Amazon EFS: How it Works</a> </p> <p> This operation requires permission for the <code>elasticfilesystem:CreateFileSystem</code> action. </p>"
    },
    "CreateMountTarget":{
      "name":"CreateMountTarget",
      "http":{
        "method":"POST",
        "requestUri":"/2015-02-01/mount-targets",
        "responseCode":200
      },
      "input":{"shape":"CreateMountTargetRequest"},
      "output":{
        "shape":"MountTargetDescription",
        "documentation":"<p>This object provides description of a mount target.</p>"
      },
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
        },
        {
          "shape":"IncorrectFileSystemLifeCycleState",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if the file system's life cycle state is not \"created\".</p>"
        },
        {
          "shape":"MountTargetConflict",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if the mount target would violate one of the specified restrictions based on the file system's existing mount targets.</p>"
        },
        {
          "shape":"SubnetNotFound",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if there is no subnet with ID <code>SubnetId</code> provided in the request.</p>"
        },
        {
          "shape":"NoFreeAddressesInSubnet",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if <code>IpAddress</code> was not specified in the request and there are no free IP addresses in the subnet.</p>"
        },
        {
          "shape":"IpAddressInUse",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if the request specified an <code>IpAddress</code> that is already in use in the subnet.</p>"
        },
        {
          "shape":"NetworkInterfaceLimitExceeded",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p> The calling account has reached the ENI limit for the specific AWS region. Client should try to delete some ENIs or get its account limit raised. For more information, go to <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html\">Amazon VPC Limits</a> in the Amazon Virtual Private Cloud User Guide (see the Network interfaces per VPC entry in the table). </p>"
        },
        {
          "shape":"SecurityGroupLimitExceeded",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the size of <code>SecurityGroups</code> specified in the request is greater than five.</p>"
        },
        {
          "shape":"SecurityGroupNotFound",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if one of the specified security groups does not exist in the subnet's VPC.</p>"
        },
        {
          "shape":"UnsupportedAvailabilityZone",
          "error":{"httpStatusCode":400},
          "exception":true
        }
      ],
      "documentation":"<p>Creates a mount target for a file system. You can then mount the file system on EC2 instances via the mount target. </p> <p>You can create one mount target in each Availability Zone in your VPC. All EC2 instances in a VPC within a given Availability Zone share a single mount target for a given file system. If you have multiple subnets in an Availability Zone, you create a mount target in one of the subnets. EC2 instances do not need to be in the same subnet as the mount target in order to access their file system. For more information, see <a href=\"http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html\">Amazon EFS: How it Works</a>. </p> <p>In the request, you also specify a file system ID for which you are creating the mount target and the file system's lifecycle state must be \"available\" (see <a>DescribeFileSystems</a>).</p> <p> In the request, you also provide a subnet ID, which serves several purposes:</p> <ul> <li>It determines the VPC in which Amazon EFS creates the mount target.</li> <li>It determines the Availability Zone in which Amazon EFS creates the mount target. </li> <li>It determines the IP address range from which Amazon EFS selects the IP address of the mount target if you don't specify an IP address in the request. </li> </ul> <p>After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code> and an <code>IpAddress</code>. You use this IP address when mounting the file system in an EC2 instance. You can also use the mount target's DNS name when mounting the file system. The EC2 instance on which you mount the file system via the mount target can resolve the mount target's DNS name to its IP address. For more information, see <a href=\"http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation\">How it Works: Implementation Overview</a>. </p> <p> Note that you can create mount targets for a file system in only one VPC, and there can be only one mount target per Availability Zone. That is, if the file system already has one or more mount targets created for it, the request to add another mount target must meet the following requirements: </p> <ul> <li> <p>The subnet specified in the request must belong to the same VPC as the subnets of the existing mount targets.</p> </li> <li>The subnet specified in the request must not be in the same Availability Zone as any of the subnets of the existing mount targets.</li> </ul> <p>If the request satisfies the requirements, Amazon EFS does the following:</p> <ul> <li>Creates a new mount target in the specified subnet. </li> <li>Also creates a new network interface in the subnet as follows: <ul> <li>If the request provides an <code>IpAddress</code>, Amazon EFS assigns that IP address to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet (in the same way that the Amazon EC2 <code>CreateNetworkInterface</code> call does when a request does not specify a primary private IP address).</li> <li>If the request provides <code>SecurityGroups</code>, this network interface is associated with those security groups. Otherwise, it belongs to the default security group for the subnet's VPC.</li> <li>Assigns the description <code>\"Mount target <i>fsmt-id</i> for file system <i>fs-id</i>\"</code> where <code><i>fsmt-id</i></code> is the mount target ID, and <code><i>fs-id</i></code> is the <code>FileSystemId</code>.</li> <li>Sets the <code>requesterManaged</code> property of the network interface to \"true\", and the <code>requesterId</code> value to \"EFS\".</li> </ul> <p>Each Amazon EFS mount target has one corresponding requestor-managed EC2 network interface. After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code> field in the mount target's description to the network interface ID, and the <code>IpAddress</code> field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code> operation fails.</p> </li> </ul> <note>The <code>CreateMountTarget</code> call returns only after creating the network interface, but while the mount target state is still \"creating\". You can check the mount target creation status by calling the <a>DescribeFileSystems</a> API, which among other things returns the mount target state.</note> <p>We recommend you create a mount target in each of the Availability Zones. There are cost considerations for using a file system in an Availability Zone through a mount target created in another Availability Zone. For more information, go to <a href=\"http://aws.amazon.com/efs/\">Amazon EFS</a> product detail page. In addition, by always using a mount target local to the instance's Availability Zone, you eliminate a partial failure scenario; if the Availability Zone in which your mount target is created goes down, then you won't be able to access your file system through that mount target. </p> <p>This operation requires permission for the following action on the file system:</p> <ul> <li> <code>elasticfilesystem:CreateMountTarget</code> </li> </ul> <p>This operation also requires permission for the following Amazon EC2 actions:</p> <ul> <li> <code>ec2:DescribeSubnets</code> </li> <li> <code>ec2:DescribeNetworkInterfaces</code> </li> <li> <code>ec2:CreateNetworkInterface</code> </li> </ul>"
    },
    "CreateTags":{
      "name":"CreateTags",
      "http":{
        "method":"POST",
        "requestUri":"/2015-02-01/create-tags/{FileSystemId}",
        "responseCode":204
      },
      "input":{"shape":"CreateTagsRequest"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
        }
      ],
      "documentation":"<p>Creates or overwrites tags associated with a file system. Each tag is a key-value pair. If a tag key specified in the request already exists on the file system, this operation overwrites its value with the value provided in the request. If you add the \"Name\" tag to your file system, Amazon EFS returns it in the response to the <a>DescribeFileSystems</a> API. </p> <p>This operation requires permission for the <code>elasticfilesystem:CreateTags</code> action.</p>"
    },
    "DeleteFileSystem":{
      "name":"DeleteFileSystem",
      "http":{
        "method":"DELETE",
        "requestUri":"/2015-02-01/file-systems/{FileSystemId}",
        "responseCode":204
      },
      "input":{"shape":"DeleteFileSystemRequest"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
        },
        {
          "shape":"FileSystemInUse",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if a file system has mount targets. </p>"
        }
      ],
      "documentation":"<p> Deletes a file system, permanently severing access to its contents. Upon return, the file system no longer exists and you will not be able to access any contents of the deleted file system. </p> <p> You cannot delete a file system that is in use. That is, if the file system has any mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a> and <a>DeleteMountTarget</a>. </p> <note>The <code>DeleteFileSystem</code> call returns while the file system state is still \"deleting\". You can check the file system deletion status by calling the <a>DescribeFileSystems</a> API, which returns a list of file systems in your account. If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a> will return a 404 \"FileSystemNotFound\" error.</note> <p>This operation requires permission for the <code>elasticfilesystem:DeleteFileSystem</code> action.</p>"
    },
    "DeleteMountTarget":{
      "name":"DeleteMountTarget",
      "http":{
        "method":"DELETE",
        "requestUri":"/2015-02-01/mount-targets/{MountTargetId}",
        "responseCode":204
      },
      "input":{"shape":"DeleteMountTargetRequest"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"DependencyTimeout",
          "error":{"httpStatusCode":504},
          "exception":true,
          "documentation":"<p>The service timed out trying to fulfill the request, and the client should try the call again.</p>"
        },
        {
          "shape":"MountTargetNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if there is no mount target with the specified ID found in the caller's account.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified mount target. </p> <p> This operation forcibly breaks any mounts of the file system via the mount target being deleted, which might disrupt instances or applications using those mounts. To avoid applications getting cut off abruptly, you might consider unmounting any mounts of the mount target, if feasible. The operation also deletes the associated network interface. Uncommitted writes may be lost, but breaking a mount target using this operation does not corrupt the file system itself. The file system you created remains. You can mount an EC2 instance in your VPC using another mount target. </p> <p> This operation requires permission for the following action on the file system: </p> <ul> <li> <code>elasticfilesystem:DeleteMountTarget</code> </li> </ul> <note>The <code>DeleteMountTarget</code> call returns while the mount target state is still \"deleting\". You can check the mount target deletion by calling the <a>DescribeMountTargets</a> API, which returns a list of mount target descriptions for the given file system. </note> <p>The operation also requires permission for the following Amazon EC2 action on the mount target's network interface:</p> <ul> <li> <code>ec2:DeleteNetworkInterface</code> </li> </ul>"
    },
    "DeleteTags":{
      "name":"DeleteTags",
      "http":{
        "method":"POST",
        "requestUri":"/2015-02-01/delete-tags/{FileSystemId}",
        "responseCode":204
      },
      "input":{"shape":"DeleteTagsRequest"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
        }
      ],
      "documentation":"<p>Deletes the specified tags from a file system. If the <code>DeleteTags</code> request includes a tag key that does not exist, Amazon EFS ignores it; it is not an error. For more information about tags and related restrictions, go to <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> <p>This operation requires permission for the <code>elasticfilesystem:DeleteTags</code> action.</p>"
    },
    "DescribeFileSystems":{
      "name":"DescribeFileSystems",
      "http":{
        "method":"GET",
        "requestUri":"/2015-02-01/file-systems",
        "responseCode":200
      },
      "input":{"shape":"DescribeFileSystemsRequest"},
      "output":{"shape":"DescribeFileSystemsResponse"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
        }
      ],
      "documentation":"<p>Returns the description of a specific Amazon EFS file system if either the file system <code>CreationToken</code> or the <code>FileSystemId</code> is provided; otherwise, returns descriptions of all file systems owned by the caller's AWS account in the AWS region of the endpoint that you're calling.</p> <p> When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code> parameter to limit the number of descriptions in a response. If more file system descriptions remain, Amazon EFS returns a <code>NextMarker</code>, an opaque token, in the response. In this case, you should send a subsequent request with the <code>Marker</code> request parameter set to the value of <code>NextMarker</code>. </p> <p> So to retrieve a list of your file system descriptions, the expected usage of this API is an iterative process of first calling <code>DescribeFileSystems</code> without the <code>Marker</code> and then continuing to call it with the <code>Marker</code> parameter set to the value of the <code>NextMarker</code> from the previous response until the response has no <code>NextMarker</code>. </p> <p> Note that the implementation may return fewer than <code>MaxItems</code> file system descriptions while still including a <code>NextMarker</code> value. </p> <p> The order of file systems returned in the response of one <code>DescribeFileSystems</code> call, and the order of file systems returned across the responses of a multi-call iteration, is unspecified. </p> <p> This operation requires permission for the <code>elasticfilesystem:DescribeFileSystems</code> action. </p>"
    },
    "DescribeMountTargetSecurityGroups":{
      "name":"DescribeMountTargetSecurityGroups",
      "http":{
        "method":"GET",
        "requestUri":"/2015-02-01/mount-targets/{MountTargetId}/security-groups",
        "responseCode":200
      },
      "input":{"shape":"DescribeMountTargetSecurityGroupsRequest"},
      "output":{"shape":"DescribeMountTargetSecurityGroupsResponse"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"MountTargetNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if there is no mount target with the specified ID found in the caller's account.</p>"
        },
        {
          "shape":"IncorrectMountTargetState",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if the mount target is not in the correct state for the operation.</p>"
        }
      ],
      "documentation":"<p>Returns the security groups currently in effect for a mount target. This operation requires that the network interface of the mount target has been created and the life cycle state of the mount target is not \"deleted\".</p> <p>This operation requires permissions for the following actions:</p> <ul> <li> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount target's file system. </li> <li> <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network interface. </li> </ul>"
    },
    "DescribeMountTargets":{
      "name":"DescribeMountTargets",
      "http":{
        "method":"GET",
        "requestUri":"/2015-02-01/mount-targets",
        "responseCode":200
      },
      "input":{"shape":"DescribeMountTargetsRequest"},
      "output":{"shape":"DescribeMountTargetsResponse"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
        },
        {
          "shape":"MountTargetNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if there is no mount target with the specified ID found in the caller's account.</p>"
        }
      ],
      "documentation":"<p>Returns the descriptions of all the current mount targets, or a specific mount target, for a file system. When requesting all of the current mount targets, the order of mount targets returned in the response is unspecified.</p> <p>This operation requires permission for the <code>elasticfilesystem:DescribeMountTargets</code> action, on either the file system id that you specify in <code>FileSystemId</code>, or on the file system of the mount target that you specify in <code>MountTargetId</code>.</p>"
    },
    "DescribeTags":{
      "name":"DescribeTags",
      "http":{
        "method":"GET",
        "requestUri":"/2015-02-01/tags/{FileSystemId}/",
        "responseCode":200
      },
      "input":{"shape":"DescribeTagsRequest"},
      "output":{"shape":"DescribeTagsResponse"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"FileSystemNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
        }
      ],
      "documentation":"<p>Returns the tags associated with a file system. The order of tags returned in the response of one <code>DescribeTags</code> call, and the order of tags returned across the responses of a multi-call iteration (when using pagination), is unspecified. </p> <p> This operation requires permission for the <code>elasticfilesystem:DescribeTags</code> action. </p>"
    },
    "ModifyMountTargetSecurityGroups":{
      "name":"ModifyMountTargetSecurityGroups",
      "http":{
        "method":"PUT",
        "requestUri":"/2015-02-01/mount-targets/{MountTargetId}/security-groups",
        "responseCode":204
      },
      "input":{"shape":"ModifyMountTargetSecurityGroupsRequest"},
      "errors":[
        {
          "shape":"BadRequest",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
        },
        {
          "shape":"InternalServerError",
          "error":{"httpStatusCode":500},
          "exception":true,
          "documentation":"<p>Returned if an error occurred on the server side.</p>"
        },
        {
          "shape":"MountTargetNotFound",
          "error":{"httpStatusCode":404},
          "exception":true,
          "documentation":"<p>Returned if there is no mount target with the specified ID found in the caller's account.</p>"
        },
        {
          "shape":"IncorrectMountTargetState",
          "error":{"httpStatusCode":409},
          "exception":true,
          "documentation":"<p>Returned if the mount target is not in the correct state for the operation.</p>"
        },
        {
          "shape":"SecurityGroupLimitExceeded",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if the size of <code>SecurityGroups</code> specified in the request is greater than five.</p>"
        },
        {
          "shape":"SecurityGroupNotFound",
          "error":{"httpStatusCode":400},
          "exception":true,
          "documentation":"<p>Returned if one of the specified security groups does not exist in the subnet's VPC.</p>"
        }
      ],
      "documentation":"<p>Modifies the set of security groups in effect for a mount target.</p> <p>When you create a mount target, Amazon EFS also creates a new network interface (see <a>CreateMountTarget</a>). This operation replaces the security groups in effect for the network interface associated with a mount target, with the <code>SecurityGroups</code> provided in the request. This operation requires that the network interface of the mount target has been created and the life cycle state of the mount target is not \"deleted\". </p> <p>The operation requires permissions for the following actions:</p> <ul> <li> <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount target's file system. </li> <li> <code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target's network interface. </li> </ul>"
    }
  },
  "shapes":{
    "AwsAccountId":{"type":"string"},
    "BadRequest":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>"
    },
    "CreateFileSystemRequest":{
      "type":"structure",
      "required":["CreationToken"],
      "members":{
        "CreationToken":{
          "shape":"CreationToken",
          "documentation":"<p>String of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</p>"
        }
      }
    },
    "CreateMountTargetRequest":{
      "type":"structure",
      "required":[
        "FileSystemId",
        "SubnetId"
      ],
      "members":{
        "FileSystemId":{
          "shape":"FileSystemId",
          "documentation":"<p>The ID of the file system for which to create the mount target.</p>"
        },
        "SubnetId":{
          "shape":"SubnetId",
          "documentation":"<p>The ID of the subnet to add the mount target in.</p>"
        },
        "IpAddress":{
          "shape":"IpAddress",
          "documentation":"<p>A valid IPv4 address within the address range of the specified subnet.</p>"
        },
        "SecurityGroups":{
          "shape":"SecurityGroups",
          "documentation":"<p> Up to 5 VPC security group IDs, of the form \"sg-xxxxxxxx\". These must be for the same VPC as subnet specified. </p>"
        }
      }
    },
    "CreateTagsRequest":{
      "type":"structure",
      "required":[
        "FileSystemId",
        "Tags"
      ],
      "members":{
        "FileSystemId":{
          "shape":"FileSystemId",
          "location":"uri",
          "locationName":"FileSystemId",
          "documentation":"<p>String. The ID of the file system whose tags you want to modify. This operation modifies only the tags and not the file system.</p>"
        },
        "Tags":{
          "shape":"Tags",
          "documentation":"<p> An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value pair. </p>"
        }
      }
    },
    "CreationToken":{
      "type":"string",
      "min":1,
      "max":64
    },
    "DeleteFileSystemRequest":{
      "type":"structure",
      "required":["FileSystemId"],
      "members":{
        "FileSystemId":{
          "shape":"FileSystemId",
          "location":"uri",
          "locationName":"FileSystemId",
          "documentation":"<p>The ID of the file system you want to delete.</p>"
        }
      }
    },
    "DeleteMountTargetRequest":{
      "type":"structure",
      "required":["MountTargetId"],
      "members":{
        "MountTargetId":{
          "shape":"MountTargetId",
          "location":"uri",
          "locationName":"MountTargetId",
          "documentation":"<p>String. The ID of the mount target to delete.</p>"
        }
      }
    },
    "DeleteTagsRequest":{
      "type":"structure",
      "required":[
        "FileSystemId",
        "TagKeys"
      ],
      "members":{
        "FileSystemId":{
          "shape":"FileSystemId",
          "location":"uri",
          "locationName":"FileSystemId",
          "documentation":"<p>String. The ID of the file system whose tags you want to delete.</p>"
        },
        "TagKeys":{
          "shape":"TagKeys",
          "documentation":"<p>A list of tag keys to delete.</p>"
        }
      }
    },
    "DependencyTimeout":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":504},
      "exception":true,
      "documentation":"<p>The service timed out trying to fulfill the request, and the client should try the call again.</p>"
    },
    "DescribeFileSystemsRequest":{
      "type":"structure",
      "members":{
        "MaxItems":{
          "shape":"MaxItems",
          "location":"querystring",
          "locationName":"MaxItems",
          "documentation":"<p>Optional integer. Specifies the maximum number of file systems to return in the response. This parameter value must be greater than 0. The number of items Amazon EFS returns will be the minimum of the <code>MaxItems</code> parameter specified in the request and the service's internal maximum number of items per page. </p>"
        },
        "Marker":{
          "shape":"Marker",
          "location":"querystring",
          "locationName":"Marker",
          "documentation":"<p> Optional string. Opaque pagination token returned from a previous <code>DescribeFileSystems</code> operation. If present, specifies to continue the list from where the returning call had left off. </p>"
        },
        "CreationToken":{
          "shape":"CreationToken",
          "location":"querystring",
          "locationName":"CreationToken",
          "documentation":"<p> Optional string. Restricts the list to the file system with this creation token (you specify a creation token at the time of creating an Amazon EFS file system). </p>"
        },
        "FileSystemId":{
          "shape":"FileSystemId",
          "location":"querystring",
          "locationName":"FileSystemId",
          "documentation":"<p>Optional string. File system ID whose description you want to retrieve. </p>"
        }
      }
    },
    "DescribeFileSystemsResponse":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"Marker",
          "documentation":"<p>A string, present if provided by caller in the request.</p>"
        },
        "FileSystems":{
          "shape":"FileSystemDescriptions",
          "documentation":"<p>An array of file system descriptions.</p>"
        },
        "NextMarker":{
          "shape":"Marker",
          "documentation":"<p>A string, present if there are more file systems than returned in the response. You can use the <code>NextMarker</code> in the subsequent request to fetch the descriptions.</p>"
        }
      }
    },
    "DescribeMountTargetSecurityGroupsRequest":{
      "type":"structure",
      "required":["MountTargetId"],
      "members":{
        "MountTargetId":{
          "shape":"MountTargetId",
          "location":"uri",
          "locationName":"MountTargetId",
          "documentation":"<p>The ID of the mount target whose security groups you want to retrieve.</p>"
        }
      }
    },
    "DescribeMountTargetSecurityGroupsResponse":{
      "type":"structure",
      "required":["SecurityGroups"],
      "members":{
        "SecurityGroups":{
          "shape":"SecurityGroups",
          "documentation":"<p>An array of security groups.</p>"
        }
      }
    },
    "DescribeMountTargetsRequest":{
      "type":"structure",
      "members":{
        "MaxItems":{
          "shape":"MaxItems",
          "location":"querystring",
          "locationName":"MaxItems",
          "documentation":"<p>Optional. Maximum number of mount targets to return in the response. It must be an integer with a value greater than zero.</p>"
        },
        "Marker":{
          "shape":"Marker",
          "location":"querystring",
          "locationName":"Marker",
          "documentation":"<p>Optional. String. Opaque pagination token returned from a previous <code>DescribeMountTargets</code> operation. If present, it specifies to continue the list from where the previous returning call left off.</p>"
        },
        "FileSystemId":{
          "shape":"FileSystemId",
          "location":"querystring",
          "locationName":"FileSystemId",
          "documentation":"<p>Optional. String. The ID of the file system whose mount targets you want to list. It must be included in your request if <code>MountTargetId</code> is not included.</p>"
        },
        "MountTargetId":{
          "shape":"MountTargetId",
          "location":"querystring",
          "locationName":"MountTargetId",
          "documentation":"<p>Optional. String. The ID of the mount target that you want to have described. It must be included in your request if <code>FileSystemId</code> is not included.</p>"
        }
      }
    },
    "DescribeMountTargetsResponse":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"Marker",
          "documentation":"<p>If the request included the <code>Marker</code>, the response returns that value in this field.</p>"
        },
        "MountTargets":{
          "shape":"MountTargetDescriptions",
          "documentation":"<p>Returns the file system's mount targets as an array of <code>MountTargetDescription</code> objects.</p>"
        },
        "NextMarker":{
          "shape":"Marker",
          "documentation":"<p>If a value is present, there are more mount targets to return. In a subsequent request, you can provide <code>Marker</code> in your request with this value to retrieve the next set of mount targets.</p>"
        }
      }
    },
    "DescribeTagsRequest":{
      "type":"structure",
      "required":["FileSystemId"],
      "members":{
        "MaxItems":{
          "shape":"MaxItems",
          "location":"querystring",
          "locationName":"MaxItems",
          "documentation":"<p>Optional. Maximum number of file system tags to return in the response. It must be an integer with a value greater than zero.</p>"
        },
        "Marker":{
          "shape":"Marker",
          "location":"querystring",
          "locationName":"Marker",
          "documentation":"<p>Optional. String. Opaque pagination token returned from a previous <code>DescribeTags</code> operation. If present, it specifies to continue the list from where the previous call left off.</p>"
        },
        "FileSystemId":{
          "shape":"FileSystemId",
          "location":"uri",
          "locationName":"FileSystemId",
          "documentation":"<p>The ID of the file system whose tag set you want to retrieve.</p>"
        }
      }
    },
    "DescribeTagsResponse":{
      "type":"structure",
      "required":["Tags"],
      "members":{
        "Marker":{
          "shape":"Marker",
          "documentation":"<p>If the request included a <code>Marker</code>, the response returns that value in this field.</p>"
        },
        "Tags":{
          "shape":"Tags",
          "documentation":"<p>Returns tags associated with the file system as an array of <code>Tag</code> objects. </p>"
        },
        "NextMarker":{
          "shape":"Marker",
          "documentation":"<p>If a value is present, there are more tags to return. In a subsequent request, you can provide the value of <code>NextMarker</code> as the value of the <code>Marker</code> parameter in your next request to retrieve the next set of tags.</p>"
        }
      }
    },
    "ErrorCode":{
      "type":"string",
      "min":1
    },
    "ErrorMessage":{"type":"string"},
    "FileSystemAlreadyExists":{
      "type":"structure",
      "required":[
        "ErrorCode",
        "FileSystemId"
      ],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"},
        "FileSystemId":{"shape":"FileSystemId"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>Returned if the file system you are trying to create already exists, with the creation token you provided.</p>"
    },
    "FileSystemDescription":{
      "type":"structure",
      "required":[
        "OwnerId",
        "CreationToken",
        "FileSystemId",
        "CreationTime",
        "LifeCycleState",
        "NumberOfMountTargets",
        "SizeInBytes"
      ],
      "members":{
        "OwnerId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.</p>"
        },
        "CreationToken":{
          "shape":"CreationToken",
          "documentation":"<p>Opaque string specified in the request. </p>"
        },
        "FileSystemId":{
          "shape":"FileSystemId",
          "documentation":"<p>The file system ID assigned by Amazon EFS.</p>"
        },
        "CreationTime":{
          "shape":"Timestamp",
          "documentation":"<p>The time at which the file system was created, in seconds, since 1970-01-01T00:00:00Z.</p>"
        },
        "LifeCycleState":{
          "shape":"LifeCycleState",
          "documentation":"<p>A predefined string value that indicates the lifecycle phase of the file system. </p>"
        },
        "Name":{
          "shape":"TagValue",
          "documentation":"<p>You can add tags to a file system (see <a>CreateTags</a>) including a \"Name\" tag. If the file system has a \"Name\" tag, Amazon EFS returns the value in this field. </p>"
        },
        "NumberOfMountTargets":{
          "shape":"MountTargetCount",
          "documentation":"<p>The current number of mount targets (see <a>CreateMountTarget</a>) the file system has.</p>"
        },
        "SizeInBytes":{
          "shape":"FileSystemSize",
          "documentation":"<p> This object provides the latest known metered size of data stored in the file system, in bytes, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. Note that the value does not represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value will represent actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size the file system was at any instant in time. </p>"
        }
      },
      "documentation":"<p>This object provides description of a file system.</p>"
    },
    "FileSystemDescriptions":{
      "type":"list",
      "member":{"shape":"FileSystemDescription"}
    },
    "FileSystemId":{"type":"string"},
    "FileSystemInUse":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>Returned if a file system has mount targets. </p>"
    },
    "FileSystemLimitExceeded":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":403},
      "exception":true,
      "documentation":"<p>Returned if the AWS account has already created maximum number of file systems allowed per account. </p>"
    },
    "FileSystemNotFound":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":404},
      "exception":true,
      "documentation":"<p>Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.</p>"
    },
    "FileSystemSize":{
      "type":"structure",
      "required":["Value"],
      "members":{
        "Value":{
          "shape":"FileSystemSizeValue",
          "documentation":"<p>The latest known metered size, in bytes, of data stored in the file system.</p>"
        },
        "Timestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.</p>"
        }
      },
      "documentation":"<p>This object provides the latest known metered size, in bytes, of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. Note that the value does not represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value will represent the actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not necessarily the exact size the file system was at any instant in time.</p>"
    },
    "FileSystemSizeValue":{
      "type":"long",
      "min":0
    },
    "IncorrectFileSystemLifeCycleState":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>Returned if the file system's life cycle state is not \"created\".</p>"
    },
    "IncorrectMountTargetState":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>Returned if the mount target is not in the correct state for the operation.</p>"
    },
    "InternalServerError":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":500},
      "exception":true,
      "documentation":"<p>Returned if an error occurred on the server side.</p>"
    },
    "IpAddress":{"type":"string"},
    "IpAddressInUse":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>Returned if the request specified an <code>IpAddress</code> that is already in use in the subnet.</p>"
    },
    "LifeCycleState":{
      "type":"string",
      "enum":[
        "creating",
        "available",
        "deleting",
        "deleted"
      ]
    },
    "Marker":{"type":"string"},
    "MaxItems":{
      "type":"integer",
      "min":1
    },
    "ModifyMountTargetSecurityGroupsRequest":{
      "type":"structure",
      "required":["MountTargetId"],
      "members":{
        "MountTargetId":{
          "shape":"MountTargetId",
          "location":"uri",
          "locationName":"MountTargetId",
          "documentation":"<p>The ID of the mount target whose security groups you want to modify.</p>"
        },
        "SecurityGroups":{
          "shape":"SecurityGroups",
          "documentation":"<p>An array of up to five VPC security group IDs.</p>"
        }
      }
    },
    "MountTargetConflict":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>Returned if the mount target would violate one of the specified restrictions based on the file system's existing mount targets.</p>"
    },
    "MountTargetCount":{
      "type":"integer",
      "min":0
    },
    "MountTargetDescription":{
      "type":"structure",
      "required":[
        "MountTargetId",
        "FileSystemId",
        "SubnetId",
        "LifeCycleState"
      ],
      "members":{
        "OwnerId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The AWS account ID that owns the resource.</p>"
        },
        "MountTargetId":{
          "shape":"MountTargetId",
          "documentation":"<p>The system-assigned mount target ID. </p>"
        },
        "FileSystemId":{
          "shape":"FileSystemId",
          "documentation":"<p>The ID of the file system for which the mount target is intended.</p>"
        },
        "SubnetId":{
          "shape":"SubnetId",
          "documentation":"<p>The ID of the subnet that the mount target is in.</p>"
        },
        "LifeCycleState":{
          "shape":"LifeCycleState",
          "documentation":"<p>The lifecycle state the mount target is in.</p>"
        },
        "IpAddress":{
          "shape":"IpAddress",
          "documentation":"<p>The address at which the file system may be mounted via the mount target.</p>"
        },
        "NetworkInterfaceId":{
          "shape":"NetworkInterfaceId",
          "documentation":"<p>The ID of the network interface that Amazon EFS created when it created the mount target.</p>"
        }
      },
      "documentation":"<p>This object provides description of a mount target.</p>"
    },
    "MountTargetDescriptions":{
      "type":"list",
      "member":{"shape":"MountTargetDescription"}
    },
    "MountTargetId":{"type":"string"},
    "MountTargetNotFound":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":404},
      "exception":true,
      "documentation":"<p>Returned if there is no mount target with the specified ID found in the caller's account.</p>"
    },
    "NetworkInterfaceId":{"type":"string"},
    "NetworkInterfaceLimitExceeded":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p> The calling account has reached the ENI limit for the specific AWS region. Client should try to delete some ENIs or get its account limit raised. For more information, go to <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html\">Amazon VPC Limits</a> in the Amazon Virtual Private Cloud User Guide (see the Network interfaces per VPC entry in the table). </p>"
    },
    "NoFreeAddressesInSubnet":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true,
      "documentation":"<p>Returned if <code>IpAddress</code> was not specified in the request and there are no free IP addresses in the subnet.</p>"
    },
    "SecurityGroup":{"type":"string"},
    "SecurityGroupLimitExceeded":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>Returned if the size of <code>SecurityGroups</code> specified in the request is greater than five.</p>"
    },
    "SecurityGroupNotFound":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>Returned if one of the specified security groups does not exist in the subnet's VPC.</p>"
    },
    "SecurityGroups":{
      "type":"list",
      "member":{"shape":"SecurityGroup"},
      "max":5
    },
    "SubnetId":{"type":"string"},
    "SubnetNotFound":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true,
      "documentation":"<p>Returned if there is no subnet with ID <code>SubnetId</code> provided in the request.</p>"
    },
    "Tag":{
      "type":"structure",
      "required":[
        "Key",
        "Value"
      ],
      "members":{
        "Key":{
          "shape":"TagKey",
          "documentation":"<p>Tag key, a string. The key must not start with \"aws:\".</p>"
        },
        "Value":{
          "shape":"TagValue",
          "documentation":"<p>Value of the tag key.</p>"
        }
      },
      "documentation":"<p>A tag is a pair of key and value. The allowed characters in keys and values are letters, whitespace, and numbers, representable in UTF-8, and the characters '+', '-', '=', '.', '_', ':', and '/'. </p>"
    },
    "TagKey":{
      "type":"string",
      "min":1,
      "max":128
    },
    "TagKeys":{
      "type":"list",
      "member":{"shape":"TagKey"}
    },
    "TagValue":{
      "type":"string",
      "max":256
    },
    "Tags":{
      "type":"list",
      "member":{"shape":"Tag"}
    },
    "Timestamp":{"type":"timestamp"},
    "UnsupportedAvailabilityZone":{
      "type":"structure",
      "required":["ErrorCode"],
      "members":{
        "ErrorCode":{"shape":"ErrorCode"},
        "Message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true
    }
  },
  "examples":{
  }
}
                                                                                                                                                                                                                                                                                                       usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/                                    0042755 0000000 0000062 00000000000 13077704402 023220  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/2014-09-30/                         0042755 0000000 0000062 00000000000 13077704402 024254  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/2014-09-30/paginators-1.json        0100644 0000000 0000062 00000004173 13077704371 027461  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "pagination": {
    "DescribeCacheClusters": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheClusters"
    },
    "DescribeCacheEngineVersions": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheEngineVersions"
    },
    "DescribeCacheParameterGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheParameterGroups"
    },
    "DescribeCacheParameters": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Parameters"
    },
    "DescribeCacheSecurityGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheSecurityGroups"
    },
    "DescribeCacheSubnetGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheSubnetGroups"
    },
    "DescribeEngineDefaultParameters": {
      "input_token": "Marker",
      "output_token": "EngineDefaults.Marker",
      "limit_key": "MaxRecords",
      "result_key": "EngineDefaults.Parameters"
    },
    "DescribeEvents": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Events"
    },
    "DescribeReservedCacheNodes": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReservedCacheNodes"
    },
    "DescribeReservedCacheNodesOfferings": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReservedCacheNodesOfferings"
    },
    "DescribeReplicationGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReplicationGroups"
    },
    "DescribeSnapshots": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Snapshots"
    }
  }
}
                                                                                                                                                                                                                                                                                                                                                                                                     usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/2014-09-30/service-2.json           0100644 0000000 0000062 00000663450 13077704371 026764  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "metadata":{
    "apiVersion":"2014-09-30",
    "endpointPrefix":"elasticache",
    "serviceFullName":"Amazon ElastiCache",
    "signatureVersion":"v4",
    "xmlNamespace":"http://elasticache.amazonaws.com/doc/2014-09-30/",
    "protocol":"query"
  },
  "documentation":"<fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers gain all of the benefits of a high-performance, in-memory cache with far less of the administrative burden of launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>",
  "operations":{
    "AuthorizeCacheSecurityGroupIngress":{
      "name":"AuthorizeCacheSecurityGroupIngress",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"AuthorizeCacheSecurityGroupIngressMessage",
        "documentation":"<p>Represents the input of an <i>AuthorizeCacheSecurityGroupIngress</i> operation.</p>"
      },
      "output":{
        "shape":"AuthorizeCacheSecurityGroupIngressResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>AuthorizeCacheSecurityGroupIngress</i> </li> <li> <i>CreateCacheSecurityGroup</i> </li> <li> <i>RevokeCacheSecurityGroupIngress</i> </li> </ul>",
        "resultWrapper":"AuthorizeCacheSecurityGroupIngressResult"
      },
      "errors":[
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"InvalidCacheSecurityGroupStateFault",
          "error":{
            "code":"InvalidCacheSecurityGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
        },
        {
          "shape":"AuthorizationAlreadyExistsFault",
          "error":{
            "code":"AuthorizationAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified Amazon EC2 security group is already authorized for the specified cache security group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>AuthorizeCacheSecurityGroupIngress</i> operation allows network ingress to a cache security group. Applications using ElastiCache must be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization mechanism.</p>"
    },
    "CopySnapshot":{
      "name":"CopySnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CopySnapshotMessage",
        "documentation":"<p>Represents the input of a <i>CopySnapshotMessage</i> operation.</p>"
      },
      "output":{
        "shape":"CopySnapshotResult",
        "wrapper":true,
        "documentation":"<p>Represents a copy of an entire cache cluster as of the time when the snapshot was taken.</p>",
        "resultWrapper":"CopySnapshotResult"
      },
      "errors":[
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"SnapshotNotFoundFault",
          "error":{
            "code":"SnapshotNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested snapshot name does not refer to an existing snapshot.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"InvalidSnapshotStateFault",
          "error":{
            "code":"InvalidSnapshotState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the snapshot does not allow the requested action to occur.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CopySnapshot</i> operation makes a copy of an existing snapshot.</p>"
    },
    "CreateCacheCluster":{
      "name":"CreateCacheCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheClusterMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheCluster</i> operation.</p>"
      },
      "output":{
        "shape":"CreateCacheClusterResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific cache cluster.</p>",
        "resultWrapper":"CreateCacheClusterResult"
      },
      "errors":[
        {
          "shape":"ReplicationGroupNotFoundFault",
          "error":{
            "code":"ReplicationGroupNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group does not exist.</p>"
        },
        {
          "shape":"InvalidReplicationGroupStateFault",
          "error":{
            "code":"InvalidReplicationGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested replication group is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"CacheClusterAlreadyExistsFault",
          "error":{
            "code":"CacheClusterAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a cache cluster with the given identifier.</p>"
        },
        {
          "shape":"InsufficientCacheClusterCapacityFault",
          "error":{
            "code":"InsufficientCacheClusterCapacity",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node type is not available in the specified Availability Zone.</p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        },
        {
          "shape":"ClusterQuotaForCustomerExceededFault",
          "error":{
            "code":"ClusterQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache clusters per customer.</p>"
        },
        {
          "shape":"NodeQuotaForClusterExceededFault",
          "error":{
            "code":"NodeQuotaForClusterExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForCustomerExceededFault",
          "error":{
            "code":"NodeQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer. </p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidVPCNetworkStateFault",
          "error":{
            "code":"InvalidVPCNetworkStateFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The VPC network is in an invalid state.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheCluster</i> operation creates a cache cluster. All nodes in the cache cluster run the same protocol-compliant cache engine software, either Memcached or Redis.</p>"
    },
    "CreateCacheParameterGroup":{
      "name":"CreateCacheParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheParameterGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheParameterGroup</i> operation.</p>"
      },
      "output":{
        "shape":"CreateCacheParameterGroupResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of a <i>CreateCacheParameterGroup</i> operation.</p>",
        "resultWrapper":"CreateCacheParameterGroupResult"
      },
      "errors":[
        {
          "shape":"CacheParameterGroupQuotaExceededFault",
          "error":{
            "code":"CacheParameterGroupQuotaExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of cache security groups.</p>"
        },
        {
          "shape":"CacheParameterGroupAlreadyExistsFault",
          "error":{
            "code":"CacheParameterGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>A cache parameter group with the requested name already exists.</p>"
        },
        {
          "shape":"InvalidCacheParameterGroupStateFault",
          "error":{
            "code":"InvalidCacheParameterGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache parameter group does not allow the requested action to occur. </p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheParameterGroup</i> operation creates a new cache parameter group. A cache parameter group is a collection of parameters that you apply to all of the nodes in a cache cluster.</p>"
    },
    "CreateCacheSecurityGroup":{
      "name":"CreateCacheSecurityGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheSecurityGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheSecurityGroup</i> operation.</p>"
      },
      "output":{
        "shape":"CreateCacheSecurityGroupResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>AuthorizeCacheSecurityGroupIngress</i> </li> <li> <i>CreateCacheSecurityGroup</i> </li> <li> <i>RevokeCacheSecurityGroupIngress</i> </li> </ul>",
        "resultWrapper":"CreateCacheSecurityGroupResult"
      },
      "errors":[
        {
          "shape":"CacheSecurityGroupAlreadyExistsFault",
          "error":{
            "code":"CacheSecurityGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>A cache security group with the specified name already exists.</p>"
        },
        {
          "shape":"CacheSecurityGroupQuotaExceededFault",
          "error":{
            "code":"QuotaExceeded.CacheSecurityGroup",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache security groups.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheSecurityGroup</i> operation creates a new cache security group. Use a cache security group to control access to one or more cache clusters.</p> <p>Cache security groups are only used when you are creating a cache cluster outside of an Amazon Virtual Private Cloud (VPC). If you are creating a cache cluster inside of a VPC, use a cache subnet group instead. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html\">CreateCacheSubnetGroup</a>.</p>"
    },
    "CreateCacheSubnetGroup":{
      "name":"CreateCacheSubnetGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheSubnetGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheSubnetGroup</i> operation.</p>"
      },
      "output":{
        "shape":"CreateCacheSubnetGroupResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>CreateCacheSubnetGroup</i> </li> <li> <i>ModifyCacheSubnetGroup</i> </li> </ul>",
        "resultWrapper":"CreateCacheSubnetGroupResult"
      },
      "errors":[
        {
          "shape":"CacheSubnetGroupAlreadyExistsFault",
          "error":{
            "code":"CacheSubnetGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache subnet group name is already in use by an existing cache subnet group.</p>"
        },
        {
          "shape":"CacheSubnetGroupQuotaExceededFault",
          "error":{
            "code":"CacheSubnetGroupQuotaExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache subnet groups.</p>"
        },
        {
          "shape":"CacheSubnetQuotaExceededFault",
          "error":{
            "code":"CacheSubnetQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of subnets in a cache subnet group.</p>"
        },
        {
          "shape":"InvalidSubnet",
          "error":{
            "code":"InvalidSubnet",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>An invalid subnet identifier was specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheSubnetGroup</i> operation creates a new cache subnet group.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (VPC).</p>"
    },
    "CreateReplicationGroup":{
      "name":"CreateReplicationGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateReplicationGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateReplicationGroup</i> operation.</p>"
      },
      "output":{
        "shape":"CreateReplicationGroupResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific replication group.</p>",
        "resultWrapper":"CreateReplicationGroupResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"ReplicationGroupAlreadyExistsFault",
          "error":{
            "code":"ReplicationGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group already exists.</p>"
        },
        {
          "shape":"InsufficientCacheClusterCapacityFault",
          "error":{
            "code":"InsufficientCacheClusterCapacity",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node type is not available in the specified Availability Zone.</p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        },
        {
          "shape":"ClusterQuotaForCustomerExceededFault",
          "error":{
            "code":"ClusterQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache clusters per customer.</p>"
        },
        {
          "shape":"NodeQuotaForClusterExceededFault",
          "error":{
            "code":"NodeQuotaForClusterExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForCustomerExceededFault",
          "error":{
            "code":"NodeQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer. </p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidVPCNetworkStateFault",
          "error":{
            "code":"InvalidVPCNetworkStateFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The VPC network is in an invalid state.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateReplicationGroup</i> operation creates a replication group. A replication group is a collection of cache clusters, where one of the cache clusters is a read/write primary and the others are read-only replicas. Writes to the primary are automatically propagated to the replicas.</p> <p>When you create a replication group, you must specify an existing cache cluster that is in the primary role. When the replication group has been successfully created, you can add one or more read replica replicas to it, up to a total of five read replicas.</p> <p><b>Note:</b> This action is valid only for Redis.</p>"
    },
    "CreateSnapshot":{
      "name":"CreateSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateSnapshotMessage",
        "documentation":"<p>Represents the input of a <i>CreateSnapshot</i> operation.</p>"
      },
      "output":{
        "shape":"CreateSnapshotResult",
        "wrapper":true,
        "documentation":"<p>Represents a copy of an entire cache cluster as of the time when the snapshot was taken.</p>",
        "resultWrapper":"CreateSnapshotResult"
      },
      "errors":[
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"SnapshotFeatureNotSupportedFault",
          "error":{
            "code":"SnapshotFeatureNotSupportedFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You attempted one of the following actions:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <i>t1.micro</i> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateSnapshot</i> operation creates a copy of an entire cache cluster at a specific moment in time.</p>"
    },
    "DeleteCacheCluster":{
      "name":"DeleteCacheCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheClusterMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheCluster</i> operation.</p>"
      },
      "output":{
        "shape":"DeleteCacheClusterResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific cache cluster.</p>",
        "resultWrapper":"DeleteCacheClusterResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"SnapshotFeatureNotSupportedFault",
          "error":{
            "code":"SnapshotFeatureNotSupportedFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You attempted one of the following actions:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <i>t1.micro</i> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheCluster</i> operation deletes a previously provisioned cache cluster. <i>DeleteCacheCluster</i> deletes all associated cache nodes, node endpoints and the cache cluster itself. When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the cache cluster; you cannot cancel or revert this operation.</p> <p>This API cannot be used to delete a cache cluster that is the last read replica of a replication group that has automatic failover mode enabled.</p>"
    },
    "DeleteCacheParameterGroup":{
      "name":"DeleteCacheParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheParameterGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheParameterGroup</i> operation.</p>"
      },
      "errors":[
        {
          "shape":"InvalidCacheParameterGroupStateFault",
          "error":{
            "code":"InvalidCacheParameterGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache parameter group does not allow the requested action to occur. </p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheParameterGroup</i> operation deletes the specified cache parameter group. You cannot delete a cache parameter group if it is associated with any cache clusters.</p>"
    },
    "DeleteCacheSecurityGroup":{
      "name":"DeleteCacheSecurityGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheSecurityGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheSecurityGroup</i> operation.</p>"
      },
      "errors":[
        {
          "shape":"InvalidCacheSecurityGroupStateFault",
          "error":{
            "code":"InvalidCacheSecurityGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheSecurityGroup</i> operation deletes a cache security group.</p>"
    },
    "DeleteCacheSubnetGroup":{
      "name":"DeleteCacheSubnetGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheSubnetGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheSubnetGroup</i> operation.</p>"
      },
      "errors":[
        {
          "shape":"CacheSubnetGroupInUse",
          "error":{
            "code":"CacheSubnetGroupInUse",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group is currently in use.</p>"
        },
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheSubnetGroup</i> operation deletes a cache subnet group.</p>"
    },
    "DeleteReplicationGroup":{
      "name":"DeleteReplicationGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteReplicationGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteReplicationGroup</i> operation.</p>"
      },
      "output":{
        "shape":"DeleteReplicationGroupResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific replication group.</p>",
        "resultWrapper":"DeleteReplicationGroupResult"
      },
      "errors":[
        {
          "shape":"ReplicationGroupNotFoundFault",
          "error":{
            "code":"ReplicationGroupNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group does not exist.</p>"
        },
        {
          "shape":"InvalidReplicationGroupStateFault",
          "error":{
            "code":"InvalidReplicationGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested replication group is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"SnapshotFeatureNotSupportedFault",
          "error":{
            "code":"SnapshotFeatureNotSupportedFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You attempted one of the following actions:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <i>t1.micro</i> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteReplicationGroup</i> operation deletes an existing cluster. By default, this operation deletes the entire cluster, including the primary node group and all of the read replicas. You can optionally delete only the read replicas, while retaining the primary node group.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p>"
    },
    "DeleteSnapshot":{
      "name":"DeleteSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteSnapshotMessage",
        "documentation":"<p>Represents the input of a <i>DeleteSnapshot</i> operation.</p>"
      },
      "output":{
        "shape":"DeleteSnapshotResult",
        "wrapper":true,
        "documentation":"<p>Represents a copy of an entire cache cluster as of the time when the snapshot was taken.</p>",
        "resultWrapper":"DeleteSnapshotResult"
      },
      "errors":[
        {
          "shape":"SnapshotNotFoundFault",
          "error":{
            "code":"SnapshotNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested snapshot name does not refer to an existing snapshot.</p>"
        },
        {
          "shape":"InvalidSnapshotStateFault",
          "error":{
            "code":"InvalidSnapshotState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the snapshot does not allow the requested action to occur.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteSnapshot</i> operation deletes an existing snapshot. When you receive a successful response from this operation, ElastiCache immediately begins deleting the snapshot; you cannot cancel or revert this operation.</p>"
    },
    "DescribeCacheClusters":{
      "name":"DescribeCacheClusters",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeCacheClustersMessage",
        "documentation":"<p>Represents the input of a <i>DescribeCacheClusters</i> operation.</p>"
      },
      "output":{
        "shape":"CacheClusterMessage",
        "documentation":"<p>Represents the output of a <i>DescribeCacheClusters</i> operation.</p>",
        "resultWrapper":"DescribeCacheClustersResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeCacheClusters</i> operation returns information about all provisioned cache clusters if no cache cluster identifier is specified, or about a specific cache cluster if a cache cluster identifier is supplied.</p> <p>By default, abbreviated information about the cache clusters(s) will be returned. You can use the optional <i>ShowDetails</i> flag to retrieve detailed information about the cache nodes associated with the cache clusters. These details include the DNS address and port for the cache node endpoint.</p> <p>If the cluster is in the CREATING state, only cluster level information will be displayed until all of the nodes are successfully provisioned.</p> <p>If the cluster is in the DELETING state, only cluster level information will be displayed.</p> <p>If cache nodes are currently being added to the cache cluster, node endpoint information and creation time for the additional nodes will not be displayed until they are completely provisioned. When the cache cluster state is <i>available</i>, the cluster is ready for use.</p> <p>If cache nodes are currently being removed from the cache cluster, no endpoint information for the removed nodes is displayed.</p>"
    },
    "DescribeCacheEngineVersions":{
      "name":"DescribeCacheEngineVersions",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeCacheEngineVersionsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeCacheEngineVersions</i> operation.</p>"
      },
      "output":{
        "shape":"CacheEngineVersionMessage",
        "documentation":"<p>Represents the output of a <a>DescribeCacheEngineVersions</a> operation.</p>",
        "resultWrapper":"DescribeCacheEngineVersionsResult"
      },
      "documentation":"<p>The <i>DescribeCacheEngineVersions</i> operation returns a list of the available cache engines and their versions.</p>"
    },
    "DescribeCacheParameterGroups":{
      "name":"DescribeCacheParameterGroups",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeCacheParameterGroupsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeCacheParameterGroups</i> operation.</p>"
      },
      "output":{
        "shape":"CacheParameterGroupsMessage",
        "documentation":"<p>Represents the output of a <i>DescribeCacheParameterGroups</i> operation.</p>",
        "resultWrapper":"DescribeCacheParameterGroupsResult"
      },
      "errors":[
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeCacheParameterGroups</i> operation returns a list of cache parameter group descriptions. If a cache parameter group name is specified, the list will contain only the descriptions for that group.</p>"
    },
    "DescribeCacheParameters":{
      "name":"DescribeCacheParameters",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeCacheParametersMessage",
        "documentation":"<p>Represents the input of a <i>DescribeCacheParameters</i> operation.</p>"
      },
      "output":{
        "shape":"CacheParameterGroupDetails",
        "documentation":"<p>Represents the output of a <i>DescribeCacheParameters</i> operation.</p>",
        "resultWrapper":"DescribeCacheParametersResult"
      },
      "errors":[
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeCacheParameters</i> operation returns the detailed parameter list for a particular cache parameter group.</p>"
    },
    "DescribeCacheSecurityGroups":{
      "name":"DescribeCacheSecurityGroups",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeCacheSecurityGroupsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeCacheSecurityGroups</i> operation.</p>"
      },
      "output":{
        "shape":"CacheSecurityGroupMessage",
        "documentation":"<p>Represents the output of a <i>DescribeCacheSecurityGroups</i> operation.</p>",
        "resultWrapper":"DescribeCacheSecurityGroupsResult"
      },
      "errors":[
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeCacheSecurityGroups</i> operation returns a list of cache security group descriptions. If a cache security group name is specified, the list will contain only the description of that group.</p>"
    },
    "DescribeCacheSubnetGroups":{
      "name":"DescribeCacheSubnetGroups",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeCacheSubnetGroupsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeCacheSubnetGroups</i> operation.</p>"
      },
      "output":{
        "shape":"CacheSubnetGroupMessage",
        "documentation":"<p>Represents the output of a <i>DescribeCacheSubnetGroups</i> operation.</p>",
        "resultWrapper":"DescribeCacheSubnetGroupsResult"
      },
      "errors":[
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeCacheSubnetGroups</i> operation returns a list of cache subnet group descriptions. If a subnet group name is specified, the list will contain only the description of that group.</p>"
    },
    "DescribeEngineDefaultParameters":{
      "name":"DescribeEngineDefaultParameters",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeEngineDefaultParametersMessage",
        "documentation":"<p>Represents the input of a <i>DescribeEngineDefaultParameters</i> operation.</p>"
      },
      "output":{
        "shape":"DescribeEngineDefaultParametersResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of a <i>DescribeEngineDefaultParameters</i> operation.</p>",
        "resultWrapper":"DescribeEngineDefaultParametersResult"
      },
      "errors":[
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeEngineDefaultParameters</i> operation returns the default engine and system parameter information for the specified cache engine.</p>"
    },
    "DescribeEvents":{
      "name":"DescribeEvents",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeEventsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeEvents</i> operation.</p>"
      },
      "output":{
        "shape":"EventsMessage",
        "documentation":"<p>Represents the output of a <i>DescribeEvents</i> operation.</p>",
        "resultWrapper":"DescribeEventsResult"
      },
      "errors":[
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeEvents</i> operation returns events related to cache clusters, cache security groups, and cache parameter groups. You can obtain events specific to a particular cache cluster, cache security group, or cache parameter group by providing the name as a parameter.</p> <p>By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days' worth of events if necessary.</p>"
    },
    "DescribeReplicationGroups":{
      "name":"DescribeReplicationGroups",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeReplicationGroupsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeReplicationGroups</i> operation.</p>"
      },
      "output":{
        "shape":"ReplicationGroupMessage",
        "documentation":"<p>Represents the output of a <i>DescribeReplicationGroups</i> operation.</p>",
        "resultWrapper":"DescribeReplicationGroupsResult"
      },
      "errors":[
        {
          "shape":"ReplicationGroupNotFoundFault",
          "error":{
            "code":"ReplicationGroupNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group does not exist.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeReplicationGroups</i> operation returns information about a particular replication group. If no identifier is specified, <i>DescribeReplicationGroups</i> returns information about all replication groups.</p>"
    },
    "DescribeReservedCacheNodes":{
      "name":"DescribeReservedCacheNodes",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeReservedCacheNodesMessage",
        "documentation":"<p>Represents the input of a <i>DescribeReservedCacheNodes</i> operation.</p>"
      },
      "output":{
        "shape":"ReservedCacheNodeMessage",
        "documentation":"<p>Represents the output of a <i>DescribeReservedCacheNodes</i> operation.</p>",
        "resultWrapper":"DescribeReservedCacheNodesResult"
      },
      "errors":[
        {
          "shape":"ReservedCacheNodeNotFoundFault",
          "error":{
            "code":"ReservedCacheNodeNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested reserved cache node was not found.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeReservedCacheNodes</i> operation returns information about reserved cache nodes for this account, or about a specified reserved cache node.</p>"
    },
    "DescribeReservedCacheNodesOfferings":{
      "name":"DescribeReservedCacheNodesOfferings",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeReservedCacheNodesOfferingsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeReservedCacheNodesOfferings</i> operation.</p>"
      },
      "output":{
        "shape":"ReservedCacheNodesOfferingMessage",
        "documentation":"<p>Represents the output of a <i>DescribeReservedCacheNodesOfferings</i> operation.</p>",
        "resultWrapper":"DescribeReservedCacheNodesOfferingsResult"
      },
      "errors":[
        {
          "shape":"ReservedCacheNodesOfferingNotFoundFault",
          "error":{
            "code":"ReservedCacheNodesOfferingNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node offering does not exist.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeReservedCacheNodesOfferings</i> operation lists available reserved cache node offerings.</p>"
    },
    "DescribeSnapshots":{
      "name":"DescribeSnapshots",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeSnapshotsMessage",
        "documentation":"<p>Represents the input of a <i>DescribeSnapshotsMessage</i> operation.</p>"
      },
      "output":{
        "shape":"DescribeSnapshotsListMessage",
        "documentation":"<p>Represents the output of a <i>DescribeSnapshots</i> operation.</p>",
        "resultWrapper":"DescribeSnapshotsResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"SnapshotNotFoundFault",
          "error":{
            "code":"SnapshotNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested snapshot name does not refer to an existing snapshot.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DescribeSnapshots</i> operation returns information about cache cluster snapshots. By default, <i>DescribeSnapshots</i> lists all of your snapshots; it can optionally describe a single snapshot, or just the snapshots associated with a particular cache cluster.</p>"
    },
    "ModifyCacheCluster":{
      "name":"ModifyCacheCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"ModifyCacheClusterMessage",
        "documentation":"<p>Represents the input of a <i>ModifyCacheCluster</i> operation.</p>"
      },
      "output":{
        "shape":"ModifyCacheClusterResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific cache cluster.</p>",
        "resultWrapper":"ModifyCacheClusterResult"
      },
      "errors":[
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"InvalidCacheSecurityGroupStateFault",
          "error":{
            "code":"InvalidCacheSecurityGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
        },
        {
          "shape":"InsufficientCacheClusterCapacityFault",
          "error":{
            "code":"InsufficientCacheClusterCapacity",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node type is not available in the specified Availability Zone.</p>"
        },
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForClusterExceededFault",
          "error":{
            "code":"NodeQuotaForClusterExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForCustomerExceededFault",
          "error":{
            "code":"NodeQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer. </p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidVPCNetworkStateFault",
          "error":{
            "code":"InvalidVPCNetworkStateFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The VPC network is in an invalid state.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>ModifyCacheCluster</i> operation modifies the settings for a cache cluster. You can use this operation to change one or more cluster configuration parameters by specifying the parameters and the new values.</p>"
    },
    "ModifyCacheParameterGroup":{
      "name":"ModifyCacheParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"ModifyCacheParameterGroupMessage",
        "documentation":"<p>Represents the input of a <i>ModifyCacheParameterGroup</i> operation.</p>"
      },
      "output":{
        "shape":"CacheParameterGroupNameMessage",
        "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>ModifyCacheParameterGroup</i> </li> <li> <i>ResetCacheParameterGroup</i> </li> </ul>",
        "resultWrapper":"ModifyCacheParameterGroupResult"
      },
      "errors":[
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidCacheParameterGroupStateFault",
          "error":{
            "code":"InvalidCacheParameterGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache parameter group does not allow the requested action to occur. </p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>ModifyCacheParameterGroup</i> operation modifies the parameters of a cache parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.</p>"
    },
    "ModifyCacheSubnetGroup":{
      "name":"ModifyCacheSubnetGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"ModifyCacheSubnetGroupMessage",
        "documentation":"<p>Represents the input of a <i>ModifyCacheSubnetGroup</i> operation.</p>"
      },
      "output":{
        "shape":"ModifyCacheSubnetGroupResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>CreateCacheSubnetGroup</i> </li> <li> <i>ModifyCacheSubnetGroup</i> </li> </ul>",
        "resultWrapper":"ModifyCacheSubnetGroupResult"
      },
      "errors":[
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        },
        {
          "shape":"CacheSubnetQuotaExceededFault",
          "error":{
            "code":"CacheSubnetQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of subnets in a cache subnet group.</p>"
        },
        {
          "shape":"SubnetInUse",
          "error":{
            "code":"SubnetInUse",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested subnet is being used by another cache subnet group.</p>"
        },
        {
          "shape":"InvalidSubnet",
          "error":{
            "code":"InvalidSubnet",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>An invalid subnet identifier was specified.</p>"
        }
      ],
      "documentation":"<p>The <i>ModifyCacheSubnetGroup</i> operation modifies an existing cache subnet group.</p>"
    },
    "ModifyReplicationGroup":{
      "name":"ModifyReplicationGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"ModifyReplicationGroupMessage",
        "documentation":"<p>Represents the input of a <i>ModifyReplicationGroups</i> operation.</p>"
      },
      "output":{
        "shape":"ModifyReplicationGroupResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific replication group.</p>",
        "resultWrapper":"ModifyReplicationGroupResult"
      },
      "errors":[
        {
          "shape":"ReplicationGroupNotFoundFault",
          "error":{
            "code":"ReplicationGroupNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group does not exist.</p>"
        },
        {
          "shape":"InvalidReplicationGroupStateFault",
          "error":{
            "code":"InvalidReplicationGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested replication group is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"InvalidCacheSecurityGroupStateFault",
          "error":{
            "code":"InvalidCacheSecurityGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
        },
        {
          "shape":"InsufficientCacheClusterCapacityFault",
          "error":{
            "code":"InsufficientCacheClusterCapacity",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node type is not available in the specified Availability Zone.</p>"
        },
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForClusterExceededFault",
          "error":{
            "code":"NodeQuotaForClusterExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForCustomerExceededFault",
          "error":{
            "code":"NodeQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer. </p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidVPCNetworkStateFault",
          "error":{
            "code":"InvalidVPCNetworkStateFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The VPC network is in an invalid state.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>ModifyReplicationGroup</i> operation modifies the settings for a replication group.</p>"
    },
    "PurchaseReservedCacheNodesOffering":{
      "name":"PurchaseReservedCacheNodesOffering",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"PurchaseReservedCacheNodesOfferingMessage",
        "documentation":"<p>Represents the input of a <i>PurchaseReservedCacheNodesOffering</i> operation.</p>"
      },
      "output":{
        "shape":"PurchaseReservedCacheNodesOfferingResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of a <i>PurchaseReservedCacheNodesOffering</i> operation.</p>",
        "resultWrapper":"PurchaseReservedCacheNodesOfferingResult"
      },
      "errors":[
        {
          "shape":"ReservedCacheNodesOfferingNotFoundFault",
          "error":{
            "code":"ReservedCacheNodesOfferingNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node offering does not exist.</p>"
        },
        {
          "shape":"ReservedCacheNodeAlreadyExistsFault",
          "error":{
            "code":"ReservedCacheNodeAlreadyExists",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a reservation with the given identifier.</p>"
        },
        {
          "shape":"ReservedCacheNodeQuotaExceededFault",
          "error":{
            "code":"ReservedCacheNodeQuotaExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the user's cache node quota.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>PurchaseReservedCacheNodesOffering</i> operation allows you to purchase a reserved cache node offering.</p>"
    },
    "RebootCacheCluster":{
      "name":"RebootCacheCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"RebootCacheClusterMessage",
        "documentation":"<p>Represents the input of a <i>RebootCacheCluster</i> operation.</p>"
      },
      "output":{
        "shape":"RebootCacheClusterResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific cache cluster.</p>",
        "resultWrapper":"RebootCacheClusterResult"
      },
      "errors":[
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        }
      ],
      "documentation":"<p>The <i>RebootCacheCluster</i> operation reboots some, or all, of the cache nodes within a provisioned cache cluster. This API will apply any modified cache parameter groups to the cache cluster. The reboot action takes place as soon as possible, and results in a momentary outage to the cache cluster. During the reboot, the cache cluster status is set to REBOOTING.</p> <p>The reboot causes the contents of the cache (for each cache node being rebooted) to be lost.</p> <p>When the reboot is complete, a cache cluster event is created.</p>"
    },
    "ResetCacheParameterGroup":{
      "name":"ResetCacheParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"ResetCacheParameterGroupMessage",
        "documentation":"<p>Represents the input of a <i>ResetCacheParameterGroup</i> operation.</p>"
      },
      "output":{
        "shape":"CacheParameterGroupNameMessage",
        "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>ModifyCacheParameterGroup</i> </li> <li> <i>ResetCacheParameterGroup</i> </li> </ul>",
        "resultWrapper":"ResetCacheParameterGroupResult"
      },
      "errors":[
        {
          "shape":"InvalidCacheParameterGroupStateFault",
          "error":{
            "code":"InvalidCacheParameterGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache parameter group does not allow the requested action to occur. </p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>ResetCacheParameterGroup</i> operation modifies the parameters of a cache parameter group to the engine or system default value. You can reset specific parameters by submitting a list of parameter names. To reset the entire cache parameter group, specify the <i>ResetAllParameters</i> and <i>CacheParameterGroupName</i> parameters.</p>"
    },
    "RevokeCacheSecurityGroupIngress":{
      "name":"RevokeCacheSecurityGroupIngress",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"RevokeCacheSecurityGroupIngressMessage",
        "documentation":"<p>Represents the input of a <i>RevokeCacheSecurityGroupIngress</i> operation.</p>"
      },
      "output":{
        "shape":"RevokeCacheSecurityGroupIngressResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>AuthorizeCacheSecurityGroupIngress</i> </li> <li> <i>CreateCacheSecurityGroup</i> </li> <li> <i>RevokeCacheSecurityGroupIngress</i> </li> </ul>",
        "resultWrapper":"RevokeCacheSecurityGroupIngressResult"
      },
      "errors":[
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"AuthorizationNotFoundFault",
          "error":{
            "code":"AuthorizationNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified Amazon EC2 security group is not authorized for the specified cache security group.</p>"
        },
        {
          "shape":"InvalidCacheSecurityGroupStateFault",
          "error":{
            "code":"InvalidCacheSecurityGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>RevokeCacheSecurityGroupIngress</i> operation revokes ingress from a cache security group. Use this operation to disallow access from an Amazon EC2 security group that had been previously authorized.</p>"
    }
  },
  "shapes":{
    "AZMode":{
      "type":"string",
      "enum":[
        "single-az",
        "cross-az"
      ]
    },
    "AuthorizationAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"AuthorizationAlreadyExists",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The specified Amazon EC2 security group is already authorized for the specified cache security group.</p>"
    },
    "AuthorizationNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"AuthorizationNotFound",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The specified Amazon EC2 security group is not authorized for the specified cache security group.</p>"
    },
    "AuthorizeCacheSecurityGroupIngressMessage":{
      "type":"structure",
      "required":[
        "CacheSecurityGroupName",
        "EC2SecurityGroupName",
        "EC2SecurityGroupOwnerId"
      ],
      "members":{
        "CacheSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The cache security group which will allow network ingress.</p>"
        },
        "EC2SecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The Amazon EC2 security group to be authorized for ingress to the cache security group.</p>"
        },
        "EC2SecurityGroupOwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account number of the Amazon EC2 security group owner. Note that this is not the same thing as an AWS access key ID - you must provide a valid AWS account number for this parameter.</p>"
        }
      },
      "documentation":"<p>Represents the input of an <i>AuthorizeCacheSecurityGroupIngress</i> operation.</p>"
    },
    "AutomaticFailoverStatus":{
      "type":"string",
      "enum":[
        "enabled",
        "disabled",
        "enabling",
        "disabling"
      ]
    },
    "AvailabilityZone":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"String",
          "documentation":"<p>The name of the Availability Zone.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Describes an Availability Zone in which the cache cluster is launched.</p>"
    },
    "AvailabilityZonesList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"AvailabilityZone"
      }
    },
    "AwsQueryErrorMessage":{"type":"string"},
    "Boolean":{"type":"boolean"},
    "BooleanOptional":{"type":"boolean"},
    "CacheCluster":{
      "type":"structure",
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The user-supplied identifier of the cache cluster. This identifier is a unique key that identifies a cache cluster.</p>"
        },
        "ConfigurationEndpoint":{"shape":"Endpoint"},
        "ClientDownloadLandingPage":{
          "shape":"String",
          "documentation":"<p>The URL of the web page where you can download the latest ElastiCache client library.</p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The name of the compute and memory capacity node type for the cache cluster.</p>"
        },
        "Engine":{
          "shape":"String",
          "documentation":"<p>The name of the cache engine (<i>memcached</i> or <i>redis</i>) to be used for this cache cluster.</p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The version of the cache engine version that is used in this cache cluster.</p>"
        },
        "CacheClusterStatus":{
          "shape":"String",
          "documentation":"<p>The current state of this cache cluster, one of the following values: <i>available</i>, <i>creating</i>, <i>deleted</i>, <i>deleting</i>, <i>incompatible-network</i>, <i>modifying</i>, <i>rebooting cache cluster nodes</i>, <i>restore-failed</i>, or <i>snapshotting</i>.</p>"
        },
        "NumCacheNodes":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of cache nodes in the cache cluster.</p>"
        },
        "PreferredAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The name of the Availability Zone in which the cache cluster is located or \"Multiple\" if the cache nodes are located in different Availability Zones.</p>"
        },
        "CacheClusterCreateTime":{
          "shape":"TStamp",
          "documentation":"<p>The date and time when the cache cluster was created.</p>"
        },
        "PreferredMaintenanceWindow":{
          "shape":"String",
          "documentation":"<p>The time range (in UTC) during which weekly system maintenance can occur.</p>"
        },
        "PendingModifiedValues":{"shape":"PendingModifiedValues"},
        "NotificationConfiguration":{"shape":"NotificationConfiguration"},
        "CacheSecurityGroups":{
          "shape":"CacheSecurityGroupMembershipList",
          "documentation":"<p>A list of cache security group elements, composed of name and status sub-elements.</p>"
        },
        "CacheParameterGroup":{"shape":"CacheParameterGroupStatus"},
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache subnet group associated with the cache cluster.</p>"
        },
        "CacheNodes":{
          "shape":"CacheNodeList",
          "documentation":"<p>A list of cache nodes that are members of the cache cluster.</p>"
        },
        "AutoMinorVersionUpgrade":{
          "shape":"Boolean",
          "documentation":"<p>If <code>true</code>, then minor version patches are applied automatically; if <code>false</code>, then automatic minor version patches are disabled.</p>"
        },
        "SecurityGroups":{
          "shape":"SecurityGroupMembershipList",
          "documentation":"<p>A list of VPC Security Groups associated with the cache cluster.</p>"
        },
        "ReplicationGroupId":{
          "shape":"String",
          "documentation":"<p>The replication group to which this cache cluster belongs. If this field is empty, the cache cluster is not associated with any replication group.</p>"
        },
        "SnapshotRetentionLimit":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set <i>SnapshotRetentionLimit</i> to 5, then a snapshot that was taken today will be retained for 5 days before being deleted.</p> <p><b>Important</b><br>If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>"
        },
        "SnapshotWindow":{
          "shape":"String",
          "documentation":"<p>The daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster.</p> <p>Example: <code>05:00-09:00</code></p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Contains all of the attributes of a specific cache cluster.</p>"
    },
    "CacheClusterAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheClusterAlreadyExists",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>You already have a cache cluster with the given identifier.</p>"
    },
    "CacheClusterList":{
      "type":"list",
      "member":{
        "shape":"CacheCluster",
        "locationName":"CacheCluster"
      }
    },
    "CacheClusterMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "CacheClusters":{
          "shape":"CacheClusterList",
          "documentation":"<p>A list of cache clusters. Each item in the list contains detailed information about one cache cluster.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeCacheClusters</i> operation.</p>"
    },
    "CacheClusterNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheClusterNotFound",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
    },
    "CacheEngineVersion":{
      "type":"structure",
      "members":{
        "Engine":{
          "shape":"String",
          "documentation":"<p>The name of the cache engine.</p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The version number of the cache engine.</p>"
        },
        "CacheParameterGroupFamily":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group family associated with this cache engine.</p>"
        },
        "CacheEngineDescription":{
          "shape":"String",
          "documentation":"<p>The description of the cache engine.</p>"
        },
        "CacheEngineVersionDescription":{
          "shape":"String",
          "documentation":"<p>The description of the cache engine version.</p>"
        }
      },
      "documentation":"<p>Provides all of the details about a particular cache engine version.</p>"
    },
    "CacheEngineVersionList":{
      "type":"list",
      "member":{
        "shape":"CacheEngineVersion",
        "locationName":"CacheEngineVersion"
      }
    },
    "CacheEngineVersionMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "CacheEngineVersions":{
          "shape":"CacheEngineVersionList",
          "documentation":"<p>A list of cache engine version details. Each element in the list contains detailed information about one cache engine version.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <a>DescribeCacheEngineVersions</a> operation.</p>"
    },
    "CacheNode":{
      "type":"structure",
      "members":{
        "CacheNodeId":{
          "shape":"String",
          "documentation":"<p>The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The combination of cluster ID and node ID uniquely identifies every cache node used in a customer's AWS account.</p>"
        },
        "CacheNodeStatus":{
          "shape":"String",
          "documentation":"<p>The current state of this cache node.</p>"
        },
        "CacheNodeCreateTime":{
          "shape":"TStamp",
          "documentation":"<p>The date and time when the cache node was created.</p>"
        },
        "Endpoint":{
          "shape":"Endpoint",
          "documentation":"<p>The hostname and IP address for connecting to this cache node.</p>"
        },
        "ParameterGroupStatus":{
          "shape":"String",
          "documentation":"<p>The status of the parameter group applied to this cache node.</p>"
        },
        "SourceCacheNodeId":{
          "shape":"String",
          "documentation":"<p>The ID of the primary node to which this read replica node is synchronized. If this field is empty, then this node is not associated with a primary cache cluster.</p>"
        },
        "CustomerAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone where this node was created and now resides.</p>"
        }
      },
      "documentation":"<p>Represents an individual cache node within a cache cluster. Each cache node runs its own instance of the cluster's protocol-compliant caching software - either Memcached or Redis.</p>"
    },
    "CacheNodeIdsList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"CacheNodeId"
      }
    },
    "CacheNodeList":{
      "type":"list",
      "member":{
        "shape":"CacheNode",
        "locationName":"CacheNode"
      }
    },
    "CacheNodeTypeSpecificParameter":{
      "type":"structure",
      "members":{
        "ParameterName":{
          "shape":"String",
          "documentation":"<p>The name of the parameter.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the parameter.</p>"
        },
        "Source":{
          "shape":"String",
          "documentation":"<p>The source of the parameter value.</p>"
        },
        "DataType":{
          "shape":"String",
          "documentation":"<p>The valid data type for the parameter.</p>"
        },
        "AllowedValues":{
          "shape":"String",
          "documentation":"<p>The valid range of values for the parameter.</p>"
        },
        "IsModifiable":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.</p>"
        },
        "MinimumEngineVersion":{
          "shape":"String",
          "documentation":"<p>The earliest cache engine version to which the parameter can apply.</p>"
        },
        "CacheNodeTypeSpecificValues":{
          "shape":"CacheNodeTypeSpecificValueList",
          "documentation":"<p>A list of cache node types and their corresponding values for this parameter.</p>"
        }
      },
      "documentation":"<p>A parameter that has a different value for each cache node type it is applied to. For example, in a Redis cache cluster, a <i>cache.m1.large</i> cache node type would have a larger <i>maxmemory</i> value than a <i>cache.m1.small</i> type.</p>"
    },
    "CacheNodeTypeSpecificParametersList":{
      "type":"list",
      "member":{
        "shape":"CacheNodeTypeSpecificParameter",
        "locationName":"CacheNodeTypeSpecificParameter"
      }
    },
    "CacheNodeTypeSpecificValue":{
      "type":"structure",
      "members":{
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The cache node type for which this value applies.</p>"
        },
        "Value":{
          "shape":"String",
          "documentation":"<p>The value for the cache node type.</p>"
        }
      },
      "documentation":"<p>A value that applies only to a certain cache node type.</p>"
    },
    "CacheNodeTypeSpecificValueList":{
      "type":"list",
      "member":{
        "shape":"CacheNodeTypeSpecificValue",
        "locationName":"CacheNodeTypeSpecificValue"
      }
    },
    "CacheParameterGroup":{
      "type":"structure",
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group.</p>"
        },
        "CacheParameterGroupFamily":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group family that this cache parameter group is compatible with.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description for this cache parameter group.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Represents the output of a <i>CreateCacheParameterGroup</i> operation.</p>"
    },
    "CacheParameterGroupAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheParameterGroupAlreadyExists",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>A cache parameter group with the requested name already exists.</p>"
    },
    "CacheParameterGroupDetails":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "Parameters":{
          "shape":"ParametersList",
          "documentation":"<p>A list of <a>Parameter</a> instances.</p>"
        },
        "CacheNodeTypeSpecificParameters":{
          "shape":"CacheNodeTypeSpecificParametersList",
          "documentation":"<p>A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeCacheParameters</i> operation.</p>"
    },
    "CacheParameterGroupList":{
      "type":"list",
      "member":{
        "shape":"CacheParameterGroup",
        "locationName":"CacheParameterGroup"
      }
    },
    "CacheParameterGroupNameMessage":{
      "type":"structure",
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group.</p>"
        }
      },
      "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>ModifyCacheParameterGroup</i> </li> <li> <i>ResetCacheParameterGroup</i> </li> </ul>"
    },
    "CacheParameterGroupNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheParameterGroupNotFound",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
    },
    "CacheParameterGroupQuotaExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheParameterGroupQuotaExceeded",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the maximum number of cache security groups.</p>"
    },
    "CacheParameterGroupStatus":{
      "type":"structure",
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group.</p>"
        },
        "ParameterApplyStatus":{
          "shape":"String",
          "documentation":"<p>The status of parameter updates.</p>"
        },
        "CacheNodeIdsToReboot":{
          "shape":"CacheNodeIdsList",
          "documentation":"<p>A list of the cache node IDs which need to be rebooted for parameter changes to be applied. A node ID is a numeric identifier (0001, 0002, etc.).</p>"
        }
      },
      "documentation":"<p>The status of the cache parameter group.</p>"
    },
    "CacheParameterGroupsMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "CacheParameterGroups":{
          "shape":"CacheParameterGroupList",
          "documentation":"<p>A list of cache parameter groups. Each element in the list contains detailed information about one cache parameter group.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeCacheParameterGroups</i> operation.</p>"
    },
    "CacheSecurityGroup":{
      "type":"structure",
      "members":{
        "OwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the cache security group owner.</p>"
        },
        "CacheSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache security group.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description of the cache security group.</p>"
        },
        "EC2SecurityGroups":{
          "shape":"EC2SecurityGroupList",
          "documentation":"<p>A list of Amazon EC2 security groups that are associated with this cache security group.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>AuthorizeCacheSecurityGroupIngress</i> </li> <li> <i>CreateCacheSecurityGroup</i> </li> <li> <i>RevokeCacheSecurityGroupIngress</i> </li> </ul>"
    },
    "CacheSecurityGroupAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheSecurityGroupAlreadyExists",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>A cache security group with the specified name already exists.</p>"
    },
    "CacheSecurityGroupMembership":{
      "type":"structure",
      "members":{
        "CacheSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache security group.</p>"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>The membership status in the cache security group. The status changes when a cache security group is modified, or when the cache security groups assigned to a cache cluster are modified.</p>"
        }
      },
      "documentation":"<p>Represents a cache cluster's status within a particular cache security group.</p>"
    },
    "CacheSecurityGroupMembershipList":{
      "type":"list",
      "member":{
        "shape":"CacheSecurityGroupMembership",
        "locationName":"CacheSecurityGroup"
      }
    },
    "CacheSecurityGroupMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "CacheSecurityGroups":{
          "shape":"CacheSecurityGroups",
          "documentation":"<p>A list of cache security groups. Each element in the list contains detailed information about one group.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeCacheSecurityGroups</i> operation.</p>"
    },
    "CacheSecurityGroupNameList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"CacheSecurityGroupName"
      }
    },
    "CacheSecurityGroupNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheSecurityGroupNotFound",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
    },
    "CacheSecurityGroupQuotaExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"QuotaExceeded.CacheSecurityGroup",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache security groups.</p>"
    },
    "CacheSecurityGroups":{
      "type":"list",
      "member":{
        "shape":"CacheSecurityGroup",
        "locationName":"CacheSecurityGroup"
      }
    },
    "CacheSubnetGroup":{
      "type":"structure",
      "members":{
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache subnet group.</p>"
        },
        "CacheSubnetGroupDescription":{
          "shape":"String",
          "documentation":"<p>The description of the cache subnet group.</p>"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.</p>"
        },
        "Subnets":{
          "shape":"SubnetList",
          "documentation":"<p>A list of subnets associated with the cache subnet group.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Represents the output of one of the following operations:</p> <ul> <li> <i>CreateCacheSubnetGroup</i> </li> <li> <i>ModifyCacheSubnetGroup</i> </li> </ul>"
    },
    "CacheSubnetGroupAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheSubnetGroupAlreadyExists",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p> The requested cache subnet group name is already in use by an existing cache subnet group.</p>"
    },
    "CacheSubnetGroupInUse":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheSubnetGroupInUse",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested cache subnet group is currently in use.</p>"
    },
    "CacheSubnetGroupMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "CacheSubnetGroups":{
          "shape":"CacheSubnetGroups",
          "documentation":"<p>A list of cache subnet groups. Each element in the list contains detailed information about one group.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeCacheSubnetGroups</i> operation.</p>"
    },
    "CacheSubnetGroupNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheSubnetGroupNotFoundFault",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
    },
    "CacheSubnetGroupQuotaExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheSubnetGroupQuotaExceeded",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache subnet groups.</p>"
    },
    "CacheSubnetGroups":{
      "type":"list",
      "member":{
        "shape":"CacheSubnetGroup",
        "locationName":"CacheSubnetGroup"
      }
    },
    "CacheSubnetQuotaExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"CacheSubnetQuotaExceededFault",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the allowed number of subnets in a cache subnet group.</p>"
    },
    "ClusterIdList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"ClusterId"
      }
    },
    "ClusterQuotaForCustomerExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"ClusterQuotaForCustomerExceeded",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache clusters per customer.</p>"
    },
    "CopySnapshotMessage":{
      "type":"structure",
      "required":[
        "SourceSnapshotName",
        "TargetSnapshotName"
      ],
      "members":{
        "SourceSnapshotName":{
          "shape":"String",
          "documentation":"<p>The name of an existing snapshot from which to copy.</p>"
        },
        "TargetSnapshotName":{
          "shape":"String",
          "documentation":"<p>A name for the copied snapshot.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>CopySnapshotMessage</i> operation.</p>"
    },
    "CreateCacheClusterMessage":{
      "type":"structure",
      "required":["CacheClusterId"],
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The node group identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li>A name must contain from 1 to 20 alphanumeric characters or hyphens.</li> <li>The first character must be a letter.</li> <li>A name cannot end with a hyphen or contain two consecutive hyphens.</li> </ul>"
        },
        "ReplicationGroupId":{
          "shape":"String",
          "documentation":"<p>The ID of the replication group to which this cache cluster should belong. If this parameter is specified, the cache cluster will be added to the specified replication group as a read replica; otherwise, the cache cluster will be a standalone primary that is not part of any replication group.</p> <p>If the specified replication group is Automatic Failover enabled and the availability zone is not specified, the cache cluster will be created in availability zones that provide the best spread of read replicas across availability zones.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>"
        },
        "AZMode":{
          "shape":"AZMode",
          "documentation":"<p>Specifies whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region.</p> <p>This parameter is only supported for Memcached cache clusters.</p> <p>If the <code>AZMode</code> and <code>PreferredAvailabilityZones</code> are not specified, ElastiCache assumes <code>single-az</code> mode.</p>"
        },
        "PreferredAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The EC2 Availability Zone in which the cache cluster will be created.</p> <p>All nodes belonging to this Memcached cache cluster are placed in the preferred Availability Zone. If you want to create your nodes across multiple Availability Zones, use <code>PreferredAvailabilityZones</code>.</p> <p>Default: System chosen Availability Zone.</p>"
        },
        "PreferredAvailabilityZones":{
          "shape":"PreferredAvailabilityZoneList",
          "documentation":"<p>A list of the Availability Zones in which cache nodes will be created. The order of the zones in the list is not important.</p> <p>This option is only supported on Memcached.</p> <p>If you want all the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code> instead, or repeat the Availability Zone multiple times in the list.</p> <p>Default: System chosen Availability Zones.</p> <p>Example: One Memcached node in each of three different Availability Zones: <code>PreferredAvailabilityZones.member.1=us-east-1a&amp;PreferredAvailabilityZones.member.2=us-east-1b&amp;PreferredAvailabilityZones.member.3=us-east-1d</code></p> <p>Example: All three Memcached nodes in one Availability Zone: <code>PreferredAvailabilityZones.member.1=us-east-1a&amp;PreferredAvailabilityZones.member.2=us-east-1a&amp;PreferredAvailabilityZones.member.3=us-east-1a</code></p>"
        },
        "NumCacheNodes":{
          "shape":"IntegerOptional",
          "documentation":"<p>The initial number of cache nodes that the cache cluster will have.</p> <p>For Memcached, valid values are between 1 and 20. If you need to exceed this limit, please fill out the ElastiCache Limit Increase Request form at <a href=\"http://aws.amazon.com/contact-us/elasticache-node-limit-request/\">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p> <p>For Redis, only single-node cache cluster are supported at this time, so the value for this parameter must be 1.</p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The compute and memory capacity of the nodes in the node group.</p> <p>Valid node types are as follows:</p> <ul> <li>General purpose: <ul> <li>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code></li> <li>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code></li> </ul></li> <li>Compute optimized: <code>cache.c1.xlarge</code></li> <li>Memory optimized <ul> <li>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code></li> <li>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code></li> </ul></li> </ul> <p><b>Notes:</b></p> <ul> <li>All t2 instances are created in an Amazon Virtual Private Cloud (VPC).</li> <li>Redis backup/restore is not supported for t2 instances.</li> <li>Redis Append-only files (AOF) functionality is not supported for t1 or t2 instances.</li> </ul> <p>For a complete listing of cache node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#CacheParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#CacheParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>. </p>"
        },
        "Engine":{
          "shape":"String",
          "documentation":"<p>The name of the cache engine to be used for this cache cluster.</p> <p>Valid values for this parameter are:</p> <p><code>memcached</code> | <code>redis</code></p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The version number of the cache engine to be used for this cache cluster. To view the supported cache engine versions, use the <i>DescribeCacheEngineVersions</i> operation.</p>"
        },
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the parameter group to associate with this cache cluster. If this argument is omitted, the default parameter group for the specified engine is used.</p>"
        },
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the subnet group to be used for the cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster in an Amazon Virtual Private Cloud (VPC).</p>"
        },
        "CacheSecurityGroupNames":{
          "shape":"CacheSecurityGroupNameList",
          "documentation":"<p>A list of security group names to associate with this cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster outside of an Amazon Virtual Private Cloud (VPC).</p>"
        },
        "SecurityGroupIds":{
          "shape":"SecurityGroupIdsList",
          "documentation":"<p>One or more VPC security groups associated with the cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster in an Amazon Virtual Private Cloud (VPC).</p>"
        },
        "SnapshotArns":{
          "shape":"SnapshotArnsList",
          "documentation":"<p>A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file will be used to populate the node group. The Amazon S3 object name in the ARN cannot contain any commas.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code></p>"
        },
        "SnapshotName":{
          "shape":"String",
          "documentation":"<p>The name of a snapshot from which to restore data into the new node group. The snapshot status changes to <code>restoring</code> while the new node group is being created.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>"
        },
        "PreferredMaintenanceWindow":{
          "shape":"String",
          "documentation":"<p>The weekly time range (in UTC) during which system maintenance can occur.</p> <p>Example: <code>sun:05:00-sun:09:00</code></p>"
        },
        "Port":{
          "shape":"IntegerOptional",
          "documentation":"<p>The port number on which each of the cache nodes will accept connections.</p>"
        },
        "NotificationTopicArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications will be sent.</p>"
        },
        "AutoMinorVersionUpgrade":{
          "shape":"BooleanOptional",
          "documentation":"<p>Determines whether minor engine upgrades will be applied automatically to the node group during the maintenance window. A value of <code>true</code> allows these upgrades to occur; <code>false</code> disables automatic upgrades.</p> <p>Default: <code>true</code></p>"
        },
        "SnapshotRetentionLimit":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of days for which ElastiCache will retain automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, then a snapshot that was taken today will be retained for 5 days before being deleted.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>"
        },
        "SnapshotWindow":{
          "shape":"String",
          "documentation":"<p>The daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your node group.</p> <p>Example: <code>05:00-09:00</code></p> <p>If you do not specify this parameter, then ElastiCache will automatically choose an appropriate time range.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>CreateCacheCluster</i> operation.</p>"
    },
    "CreateCacheParameterGroupMessage":{
      "type":"structure",
      "required":[
        "CacheParameterGroupName",
        "CacheParameterGroupFamily",
        "Description"
      ],
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>A user-specified name for the cache parameter group.</p>"
        },
        "CacheParameterGroupFamily":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group family the cache parameter group can be used with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code></p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A user-specified description for the cache parameter group.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>CreateCacheParameterGroup</i> operation.</p>"
    },
    "CreateCacheSecurityGroupMessage":{
      "type":"structure",
      "required":[
        "CacheSecurityGroupName",
        "Description"
      ],
      "members":{
        "CacheSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>A name for the cache security group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Cannot be the word \"Default\".</p> <p>Example: <code>mysecuritygroup</code></p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description for the cache security group.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>CreateCacheSecurityGroup</i> operation.</p>"
    },
    "CreateCacheSubnetGroupMessage":{
      "type":"structure",
      "required":[
        "CacheSubnetGroupName",
        "CacheSubnetGroupDescription",
        "SubnetIds"
      ],
      "members":{
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>A name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code></p>"
        },
        "CacheSubnetGroupDescription":{
          "shape":"String",
          "documentation":"<p>A description for the cache subnet group.</p>"
        },
        "SubnetIds":{
          "shape":"SubnetIdentifierList",
          "documentation":"<p>A list of VPC subnet IDs for the cache subnet group.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>CreateCacheSubnetGroup</i> operation.</p>"
    },
    "CreateReplicationGroupMessage":{
      "type":"structure",
      "required":[
        "ReplicationGroupId",
        "ReplicationGroupDescription"
      ],
      "members":{
        "ReplicationGroupId":{
          "shape":"String",
          "documentation":"<p>The replication group identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li>A name must contain from 1 to 20 alphanumeric characters or hyphens.</li> <li>The first character must be a letter.</li> <li>A name cannot end with a hyphen or contain two consecutive hyphens.</li> </ul>"
        },
        "ReplicationGroupDescription":{
          "shape":"String",
          "documentation":"<p>A user-created description for the replication group.</p>"
        },
        "PrimaryClusterId":{
          "shape":"String",
          "documentation":"<p>The identifier of the cache cluster that will serve as the primary for this replication group. This cache cluster must already exist and have a status of <i>available</i>.</p> <p>This parameter is not required if <i>NumCacheClusters</i> is specified.</p>"
        },
        "AutomaticFailoverEnabled":{
          "shape":"BooleanOptional",
          "documentation":"<p>Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails.</p> <p>If <code>true</code>, automatic failover is enabled for this replication group. If <code>false</code>, automatic failover is disabled for this replication group.</p> <p>Default: false</p>"
        },
        "NumCacheClusters":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of cache clusters this replication group will initially have.</p> <p>If <i>AutomaticFailover</i> is <code>enabled</code>, the value of this parameter must be at least 2.</p> <p>The maximum permitted value for <i>NumCacheClusters</i> is 6 (primary plus 5 replicas). If you need to exceed this limit, please fill out the ElastiCache Limit Increase Request forrm at <a href=\"http://aws.amazon.com/contact-us/elasticache-node-limit-request\">http://aws.amazon.com/contact-us/elasticache-node-limit-request</a>.</p>"
        },
        "PreferredCacheClusterAZs":{
          "shape":"AvailabilityZonesList",
          "documentation":"<p>A list of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is not important.</p> <p>Default: system chosen availability zones.</p> <p>Example: One Redis cache cluster in each of three availability zones. PreferredAvailabilityZones.member.1=us-east-1a PreferredAvailabilityZones.member.2=us-east-1c PreferredAvailabilityZones.member.3=us-east-1d</p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The compute and memory capacity of the nodes in the node group.</p> <p>Valid node types are as follows:</p> <ul> <li>General purpose: <ul> <li>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code></li> <li>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code></li> </ul></li> <li>Compute optimized: <code>cache.c1.xlarge</code></li> <li>Memory optimized <ul> <li>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code></li> <li>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code></li> </ul></li> </ul> <p><b>Notes:</b></p> <ul> <li>All t2 instances are created in an Amazon Virtual Private Cloud (VPC).</li> <li>Redis backup/restore is not supported for t2 instances.</li> <li>Redis Append-only files (AOF) functionality is not supported for t1 or t2 instances.</li> </ul> <p>For a complete listing of cache node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#CacheParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#CacheParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>. </p>"
        },
        "Engine":{
          "shape":"String",
          "documentation":"<p>The name of the cache engine to be used for the cache clusters in this replication group.</p> <p>Default: redis</p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The version number of the cach engine to be used for the cache clusters in this replication group. To view the supported cache engine versions, use the <i>DescribeCacheEngineVersions</i> operation.</p>"
        },
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.</p>"
        },
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache subnet group to be used for the replication group.</p>"
        },
        "CacheSecurityGroupNames":{
          "shape":"CacheSecurityGroupNameList",
          "documentation":"<p>A list of cache security group names to associate with this replication group.</p>"
        },
        "SecurityGroupIds":{
          "shape":"SecurityGroupIdsList",
          "documentation":"<p>One or more Amazon VPC security groups associated with this replication group.</p> <p>Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (VPC).</p>"
        },
        "SnapshotArns":{
          "shape":"SnapshotArnsList",
          "documentation":"<p>A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file will be used to populate the node group. The Amazon S3 object name in the ARN cannot contain any commas.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code></p>"
        },
        "SnapshotName":{
          "shape":"String",
          "documentation":"<p>The name of a snapshot from which to restore data into the new node group. The snapshot status changes to <code>restoring</code> while the new node group is being created.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>"
        },
        "PreferredMaintenanceWindow":{
          "shape":"String",
          "documentation":"<p>The weekly time range (in UTC) during which system maintenance can occur.</p> <p>Example: <code>sun:05:00-sun:09:00</code></p>"
        },
        "Port":{
          "shape":"IntegerOptional",
          "documentation":"<p>The port number on which each member of the replication group will accept connections.</p>"
        },
        "NotificationTopicArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications will be sent.</p>"
        },
        "AutoMinorVersionUpgrade":{
          "shape":"BooleanOptional",
          "documentation":"<p>Determines whether minor engine upgrades will be applied automatically to the node group during the maintenance window. A value of <code>true</code> allows these upgrades to occur; <code>false</code> disables automatic upgrades.</p> <p>Default: <code>true</code></p>"
        },
        "SnapshotRetentionLimit":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of days for which ElastiCache will retain automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, then a snapshot that was taken today will be retained for 5 days before being deleted.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>"
        },
        "SnapshotWindow":{
          "shape":"String",
          "documentation":"<p>The daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your node group.</p> <p>Example: <code>05:00-09:00</code></p> <p>If you do not specify this parameter, then ElastiCache will automatically choose an appropriate time range.</p> <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>CreateReplicationGroup</i> operation.</p>"
    },
    "CreateSnapshotMessage":{
      "type":"structure",
      "required":[
        "CacheClusterId",
        "SnapshotName"
      ],
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The identifier of an existing cache cluster. The snapshot will be created from this cache cluster.</p>"
        },
        "SnapshotName":{
          "shape":"String",
          "documentation":"<p>A name for the snapshot being created.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>CreateSnapshot</i> operation.</p>"
    },
    "DeleteCacheClusterMessage":{
      "type":"structure",
      "required":["CacheClusterId"],
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The cache cluster identifier for the cluster to be deleted. This parameter is not case sensitive.</p>"
        },
        "FinalSnapshotIdentifier":{
          "shape":"String",
          "documentation":"<p>The user-supplied name of a final cache cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cache cluster immediately afterward.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DeleteCacheCluster</i> operation.</p>"
    },
    "DeleteCacheParameterGroupMessage":{
      "type":"structure",
      "required":["CacheParameterGroupName"],
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group to delete.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DeleteCacheParameterGroup</i> operation.</p>"
    },
    "DeleteCacheSecurityGroupMessage":{
      "type":"structure",
      "required":["CacheSecurityGroupName"],
      "members":{
        "CacheSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache security group to delete.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DeleteCacheSecurityGroup</i> operation.</p>"
    },
    "DeleteCacheSubnetGroupMessage":{
      "type":"structure",
      "required":["CacheSubnetGroupName"],
      "members":{
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache subnet group to delete.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DeleteCacheSubnetGroup</i> operation.</p>"
    },
    "DeleteReplicationGroupMessage":{
      "type":"structure",
      "required":["ReplicationGroupId"],
      "members":{
        "ReplicationGroupId":{
          "shape":"String",
          "documentation":"<p>The identifier for the cluster to be deleted. This parameter is not case sensitive.</p>"
        },
        "RetainPrimaryCluster":{
          "shape":"BooleanOptional",
          "documentation":"<p>If set to <i>true</i>, all of the read replicas will be deleted, but the primary node will be retained.</p>"
        },
        "FinalSnapshotIdentifier":{
          "shape":"String",
          "documentation":"<p>The name of a final node group snapshot. ElastiCache creates the snapshot from the primary node in the cluster, rather than one of the replicas; this is to ensure that it captures the freshest data. After the final snapshot is taken, the cluster is immediately deleted.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DeleteReplicationGroup</i> operation.</p>"
    },
    "DeleteSnapshotMessage":{
      "type":"structure",
      "required":["SnapshotName"],
      "members":{
        "SnapshotName":{
          "shape":"String",
          "documentation":"<p>The name of the snapshot to be deleted.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DeleteSnapshot</i> operation.</p>"
    },
    "DescribeCacheClustersMessage":{
      "type":"structure",
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The user-supplied cluster identifier. If this parameter is specified, only information about that specific cache cluster is returned. This parameter isn't case sensitive.</p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        },
        "ShowCacheNodeInfo":{
          "shape":"BooleanOptional",
          "documentation":"<p>An optional flag that can be included in the DescribeCacheCluster request to retrieve information about the individual cache nodes.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeCacheClusters</i> operation.</p>"
    },
    "DescribeCacheEngineVersionsMessage":{
      "type":"structure",
      "members":{
        "Engine":{
          "shape":"String",
          "documentation":"<p>The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code></p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The cache engine version to return.</p> <p>Example: <code>1.4.14</code></p>"
        },
        "CacheParameterGroupFamily":{
          "shape":"String",
          "documentation":"<p>The name of a specific cache parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li>Must be 1 to 255 alphanumeric characters</li> <li>First character must be a letter</li> <li>Cannot end with a hyphen or contain two consecutive hyphens</li> </ul>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        },
        "DefaultOnly":{
          "shape":"Boolean",
          "documentation":"<p>If <i>true</i>, specifies that only the default version of the specified engine or engine and major version combination is to be returned.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeCacheEngineVersions</i> operation.</p>"
    },
    "DescribeCacheParameterGroupsMessage":{
      "type":"structure",
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of a specific cache parameter group to return details for.</p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeCacheParameterGroups</i> operation.</p>"
    },
    "DescribeCacheParametersMessage":{
      "type":"structure",
      "required":["CacheParameterGroupName"],
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of a specific cache parameter group to return details for.</p>"
        },
        "Source":{
          "shape":"String",
          "documentation":"<p>The parameter types to return.</p> <p>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code></p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeCacheParameters</i> operation.</p>"
    },
    "DescribeCacheSecurityGroupsMessage":{
      "type":"structure",
      "members":{
        "CacheSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache security group to return details for.</p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeCacheSecurityGroups</i> operation.</p>"
    },
    "DescribeCacheSubnetGroupsMessage":{
      "type":"structure",
      "members":{
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache subnet group to return details for.</p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeCacheSubnetGroups</i> operation.</p>"
    },
    "DescribeEngineDefaultParametersMessage":{
      "type":"structure",
      "required":["CacheParameterGroupFamily"],
      "members":{
        "CacheParameterGroupFamily":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group family. Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code></p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeEngineDefaultParameters</i> operation.</p>"
    },
    "DescribeEventsMessage":{
      "type":"structure",
      "members":{
        "SourceIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.</p>"
        },
        "SourceType":{
          "shape":"SourceType",
          "documentation":"<p>The event source to retrieve events for. If no value is specified, all events are returned.</p> <p>Valid values are: <code>cache-cluster</code> | <code>cache-parameter-group</code> | <code>cache-security-group</code> | <code>cache-subnet-group</code></p>"
        },
        "StartTime":{
          "shape":"TStamp",
          "documentation":"<p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</p>"
        },
        "EndTime":{
          "shape":"TStamp",
          "documentation":"<p>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</p>"
        },
        "Duration":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of minutes' worth of events to retrieve.</p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeEvents</i> operation.</p>"
    },
    "DescribeReplicationGroupsMessage":{
      "type":"structure",
      "members":{
        "ReplicationGroupId":{
          "shape":"String",
          "documentation":"<p>The identifier for the replication group to be described. This parameter is not case sensitive.</p> <p>If you do not specify this parameter, information about all replication groups is returned.</p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeReplicationGroups</i> operation.</p>"
    },
    "DescribeReservedCacheNodesMessage":{
      "type":"structure",
      "members":{
        "ReservedCacheNodeId":{
          "shape":"String",
          "documentation":"<p>The reserved cache node identifier filter value. Use this parameter to show only the reservation that matches the specified reservation ID.</p>"
        },
        "ReservedCacheNodesOfferingId":{
          "shape":"String",
          "documentation":"<p>The offering identifier filter value. Use this parameter to show only purchased reservations matching the specified offering identifier.</p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The cache node type filter value. Use this parameter to show only those reservations matching the specified cache node type.</p>"
        },
        "Duration":{
          "shape":"String",
          "documentation":"<p>The duration filter value, specified in years or seconds. Use this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></p>"
        },
        "ProductDescription":{
          "shape":"String",
          "documentation":"<p>The product description filter value. Use this parameter to show only those reservations matching the specified product description.</p>"
        },
        "OfferingType":{
          "shape":"String",
          "documentation":"<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid values: <code>\"Light Utilization\" | \"Medium Utilization\" | \"Heavy Utilization\"</code></p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeReservedCacheNodes</i> operation.</p>"
    },
    "DescribeReservedCacheNodesOfferingsMessage":{
      "type":"structure",
      "members":{
        "ReservedCacheNodesOfferingId":{
          "shape":"String",
          "documentation":"<p>The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code></p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The cache node type filter value. Use this parameter to show only the available offerings matching the specified cache node type.</p>"
        },
        "Duration":{
          "shape":"String",
          "documentation":"<p>Duration filter value, specified in years or seconds. Use this parameter to show only reservations for a given duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></p>"
        },
        "ProductDescription":{
          "shape":"String",
          "documentation":"<p>The product description filter value. Use this parameter to show only the available offerings matching the specified product description.</p>"
        },
        "OfferingType":{
          "shape":"String",
          "documentation":"<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>\"Light Utilization\" | \"Medium Utilization\" | \"Heavy Utilization\"</code></p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeReservedCacheNodesOfferings</i> operation.</p>"
    },
    "DescribeSnapshotsListMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        },
        "Snapshots":{
          "shape":"SnapshotList",
          "documentation":"<p>A list of snapshots. Each item in the list contains detailed information about one snapshot.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeSnapshots</i> operation.</p>"
    },
    "DescribeSnapshotsMessage":{
      "type":"structure",
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>A user-supplied cluster identifier. If this parameter is specified, only snapshots associated with that specific cache cluster will be described.</p>"
        },
        "SnapshotName":{
          "shape":"String",
          "documentation":"<p>A user-supplied name of the snapshot. If this parameter is specified, only this snapshot will be described.</p>"
        },
        "SnapshotSource":{
          "shape":"String",
          "documentation":"<p>If set to <code>system</code>, the output shows snapshots that were automatically created by ElastiCache. If set to <code>user</code> the output shows snapshots that were manually created. If omitted, the output shows both automatically and manually created snapshots.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <i>MaxRecords</i>.</p>"
        },
        "MaxRecords":{
          "shape":"IntegerOptional",
          "documentation":"<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20; maximum 50.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>DescribeSnapshotsMessage</i> operation.</p>"
    },
    "Double":{"type":"double"},
    "EC2SecurityGroup":{
      "type":"structure",
      "members":{
        "Status":{
          "shape":"String",
          "documentation":"<p>The status of the Amazon EC2 security group.</p>"
        },
        "EC2SecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon EC2 security group.</p>"
        },
        "EC2SecurityGroupOwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account ID of the Amazon EC2 security group owner.</p>"
        }
      },
      "documentation":"<p>Provides ownership and status information for an Amazon EC2 security group.</p>"
    },
    "EC2SecurityGroupList":{
      "type":"list",
      "member":{
        "shape":"EC2SecurityGroup",
        "locationName":"EC2SecurityGroup"
      }
    },
    "Endpoint":{
      "type":"structure",
      "members":{
        "Address":{
          "shape":"String",
          "documentation":"<p>The DNS hostname of the cache node.</p>"
        },
        "Port":{
          "shape":"Integer",
          "documentation":"<p>The port number that the cache engine is listening on.</p>"
        }
      },
      "documentation":"<p>Represents the information required for client programs to connect to a cache node.</p>"
    },
    "EngineDefaults":{
      "type":"structure",
      "members":{
        "CacheParameterGroupFamily":{
          "shape":"String",
          "documentation":"<p>Specifies the name of the cache parameter group family to which the engine default parameters apply.</p>"
        },
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "Parameters":{
          "shape":"ParametersList",
          "documentation":"<p>Contains a list of engine default parameters.</p>"
        },
        "CacheNodeTypeSpecificParameters":{
          "shape":"CacheNodeTypeSpecificParametersList",
          "documentation":"<p>A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Represents the output of a <i>DescribeEngineDefaultParameters</i> operation.</p>"
    },
    "Event":{
      "type":"structure",
      "members":{
        "SourceIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier for the source of the event. For example, if the event occurred at the cache cluster level, the identifier would be the name of the cache cluster.</p>"
        },
        "SourceType":{
          "shape":"SourceType",
          "documentation":"<p>Specifies the origin of this event - a cache cluster, a parameter group, a security group, etc.</p>"
        },
        "Message":{
          "shape":"String",
          "documentation":"<p>The text of the event.</p>"
        },
        "Date":{
          "shape":"TStamp",
          "documentation":"<p>The date and time when the event occurred.</p>"
        }
      },
      "documentation":"<p>Represents a single occurrence of something interesting within the system. Some examples of events are creating a cache cluster, adding or removing a cache node, or rebooting a node.</p>"
    },
    "EventList":{
      "type":"list",
      "member":{
        "shape":"Event",
        "locationName":"Event"
      }
    },
    "EventsMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "Events":{
          "shape":"EventList",
          "documentation":"<p>A list of events. Each element in the list contains detailed information about one event.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeEvents</i> operation.</p>"
    },
    "InsufficientCacheClusterCapacityFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InsufficientCacheClusterCapacity",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested cache node type is not available in the specified Availability Zone.</p>"
    },
    "Integer":{"type":"integer"},
    "IntegerOptional":{"type":"integer"},
    "InvalidCacheClusterStateFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InvalidCacheClusterState",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
    },
    "InvalidCacheParameterGroupStateFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InvalidCacheParameterGroupState",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The current state of the cache parameter group does not allow the requested action to occur. </p>"
    },
    "InvalidCacheSecurityGroupStateFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InvalidCacheSecurityGroupState",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
    },
    "InvalidParameterCombinationException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"AwsQueryErrorMessage",
          "documentation":"<p>Two or more parameters that must not be used together were used together.</p>"
        }
      },
      "error":{
        "code":"InvalidParameterCombination",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>Two or more incompatible parameters were specified.</p>"
    },
    "InvalidParameterValueException":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"AwsQueryErrorMessage",
          "documentation":"<p>A parameter value is invalid.</p>"
        }
      },
      "error":{
        "code":"InvalidParameterValue",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The value for a parameter is invalid.</p>"
    },
    "InvalidReplicationGroupStateFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InvalidReplicationGroupState",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested replication group is not in the <i>available</i> state.</p>"
    },
    "InvalidSnapshotStateFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InvalidSnapshotState",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The current state of the snapshot does not allow the requested action to occur.</p>"
    },
    "InvalidSubnet":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InvalidSubnet",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>An invalid subnet identifier was specified.</p>"
    },
    "InvalidVPCNetworkStateFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"InvalidVPCNetworkStateFault",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The VPC network is in an invalid state.</p>"
    },
    "ModifyCacheClusterMessage":{
      "type":"structure",
      "required":["CacheClusterId"],
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The cache cluster identifier. This value is stored as a lowercase string.</p>"
        },
        "NumCacheNodes":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of cache nodes that the cache cluster should have. If the value for <code>NumCacheNodes</code> is greater than the sum of the number of current cache nodes and the number of cache nodes pending creation (which may be zero), then more nodes will be added. If the value is less than the number of existing cache nodes, then nodes will be removed. If the value is equal to the number of current cache nodes, then any pending add or remove requests are canceled.</p> <p>If you are removing cache nodes, you must use the <code>CacheNodeIdsToRemove</code> parameter to provide the IDs of the specific cache nodes to remove.</p> <p>For cache clusters running Redis, the value of <code>NumCacheNodes</code>must be 1.</p> <p><b>Note:</b><br>Adding or removing Memcached cache nodes can be applied immediately or as a pending action. See <code>ApplyImmediately</code>.<br> A pending action to modify the number of cache nodes in a cluster during its maintenance window, whether by adding or removing nodes in accordance with the scale out architecture, is not queued. The customer's latest request to add or remove nodes to the cluster overrides any previous pending actions to modify the number of cache nodes in the cluster. For example, a request to remove 2 nodes would override a previous pending action to remove 3 nodes. Similarly, a request to add 2 nodes would override a previous pending action to remove 3 nodes and vice versa. As Memcached cache nodes may now be provisioned in different Availability Zones with flexible cache node placement, a request to add nodes does not automatically override a previous pending action to add nodes. The customer can modify the previous pending action to add more nodes or explicitly cancel the pending request and retry the new request. To cancel pending actions to modify the number of cache nodes in a cluster, use the <code>ModifyCacheCluster</code> request and set <code>NumCacheNodes</code> equal to the number of cache nodes currently in the cache cluster.</p>"
        },
        "CacheNodeIdsToRemove":{
          "shape":"CacheNodeIdsList",
          "documentation":"<p>A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002, etc.). This parameter is only valid when NumCacheNodes is less than the existing number of cache nodes. The number of cache node IDs supplied in this parameter must match the difference between the existing number of cache nodes in the cluster or pending cache nodes, whichever is greater, and the value of <i>NumCacheNodes</i> in the request.</p> <p>For example: If you have 3 active cache nodes, 7 pending cache nodes, and the number of cache nodes in this <code>ModifyCacheCluser</code> call is 5, you must list 2 (7 - 5) cache node IDs to remove.</p>"
        },
        "AZMode":{
          "shape":"AZMode",
          "documentation":"<p>Specifies whether the new nodes in this Memcached cache cluster are all created in a single Availability Zone or created across multiple Availability Zones.</p> <p>Valid values: <code>single-az</code> | <code>cross-az</code>.</p> <p>This option is only supported for Memcached cache clusters.</p>"
        },
        "NewAvailabilityZones":{
          "shape":"PreferredAvailabilityZoneList",
          "documentation":"<p>The list of Availability Zones where the new Memcached cache nodes will be created.</p> <p>This parameter is only valid when <code>NumCacheNodes</code> in the request is greater than the sum of the number of active cache nodes and the number of cache nodes pending creation (which may be zero). The number of Availability Zones supplied in this list must match the cache nodes being added in this request.</p> <p>This option is only supported on Memcached clusters.</p> <p>Scenarios: <ul> <li> <b>Scenario 1:</b> You have 3 active nodes and wish to add 2 nodes.<br> Specify <code>NumCacheNodes=5</code> (3 + 2) and optionally specify two Availability Zones for the two new nodes.</li> <li> <b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending creation (from the scenario 1 call) and want to add 1 more node.<br> Specify <code>NumCacheNodes=6</code> ((3 + 2) + 1)</li> and optionally specify an Availability Zone for the new node. <li> <b>Scenario 3:</b> You want to cancel all pending actions.<br> Specify <code>NumCacheNodes=3</code> to cancel all pending actions.</li> </ul> </p> <p>The Availability Zone placement of nodes pending creation cannot be modified. If you wish to cancel any nodes pending creation, add 0 nodes by setting <code>NumCacheNodes</code> to the number of current nodes.</p> <p>If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone. Only newly created nodes can be located in different Availability Zones. For guidance on how to move existing Memcached nodes to different Availability Zones, see the <b>Availability Zone Considerations</b> section of <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheNode.Memcached.html\">Cache Node Considerations for Memcached</a>.</p> <p><b>Impact of new add/remove requests upon pending requests</b></p> <table> <tr> <th>Scenarios</th> <th>Pending Operation</th> <th>New Request</th> <th>Results</th> </tr> <tr> <td>Scenario-1</td> <td>Delete</td> <td>Delete</td> <td>The new delete, pending or immediate, replaces the pending delete.</td> </tr> <tr> <td>Scenario-2</td> <td>Delete</td> <td>Create</td> <td>The new create, pending or immediate, replaces the pending delete.</td> </tr> <tr> <td>Scenario-3</td> <td>Create</td> <td>Delete</td> <td>The new delete, pending or immediate, replaces the pending create.</td> </tr> <tr> <td>Scenario-4</td> <td>Create</td> <td>Create</td> <td>The new create is added to the pending create.<br/> <b>Important:</b><br/>If the new create request is <b>Apply Immediately - Yes</b>, all creates are performed immediately. If the new create request is <b>Apply Immediately - No</b>, all creates are pending.</td> </tr> </table> <p>Example: <code>NewAvailabilityZones.member.1=us-east-1a&amp;NewAvailabilityZones.member.2=us-east-1b&amp;NewAvailabilityZones.member.3=us-east-1d</code></p>"
        },
        "CacheSecurityGroupNames":{
          "shape":"CacheSecurityGroupNameList",
          "documentation":"<p>A list of cache security group names to authorize on this cache cluster. This change is asynchronously applied as soon as possible.</p> <p>This parameter can be used only with clusters that are created outside of an Amazon Virtual Private Cloud (VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be \"Default\".</p>"
        },
        "SecurityGroupIds":{
          "shape":"SecurityGroupIdsList",
          "documentation":"<p>Specifies the VPC Security Groups associated with the cache cluster.</p> <p>This parameter can be used only with clusters that are created in an Amazon Virtual Private Cloud (VPC).</p>"
        },
        "PreferredMaintenanceWindow":{
          "shape":"String",
          "documentation":"<p>The weekly time range (in UTC) during which system maintenance can occur. Note that system maintenance may result in an outage. This change is made immediately. If you are moving this window to the current time, there must be at least 120 minutes between the current time and end of the window to ensure that pending changes are applied.</p>"
        },
        "NotificationTopicArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.</p>"
        },
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group to apply to this cache cluster. This change is asynchronously applied as soon as possible for parameters when the <i>ApplyImmediately</i> parameter is specified as <i>true</i> for this request.</p>"
        },
        "NotificationTopicStatus":{
          "shape":"String",
          "documentation":"<p>The status of the Amazon SNS notification topic. Notifications are sent only if the status is <i>active</i>.</p> <p>Valid values: <code>active</code> | <code>inactive</code></p>"
        },
        "ApplyImmediately":{
          "shape":"Boolean",
          "documentation":"<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <i>PreferredMaintenanceWindow</i> setting for the cache cluster.</p> <p>If <code>false</code>, then changes to the cache cluster are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <important>If you perform a <code>ModifyCacheCluster</code> before a pending modification is applied, the pending modification is replaced by the newer modification.</important> <p>Valid values: <code>true</code> | <code>false</code></p> <p>Default: <code>false</code></p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The upgraded version of the cache engine to be run on the cache nodes.</p>"
        },
        "AutoMinorVersionUpgrade":{
          "shape":"BooleanOptional",
          "documentation":"<p>If <code>true</code>, then minor engine upgrades will be applied automatically to the cache cluster during the maintenance window.</p> <p>Valid values: <code>true</code> | <code>false</code></p> <p>Default: <code>true</code></p>"
        },
        "SnapshotRetentionLimit":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set <i>SnapshotRetentionLimit</i> to 5, then a snapshot that was taken today will be retained for 5 days before being deleted.</p> <p><b>Important</b><br>If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>"
        },
        "SnapshotWindow":{
          "shape":"String",
          "documentation":"<p>The daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. </p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>ModifyCacheCluster</i> operation.</p>"
    },
    "ModifyCacheParameterGroupMessage":{
      "type":"structure",
      "required":[
        "CacheParameterGroupName",
        "ParameterNameValues"
      ],
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group to modify.</p>"
        },
        "ParameterNameValues":{
          "shape":"ParameterNameValueList",
          "documentation":"<p>An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>ModifyCacheParameterGroup</i> operation.</p>"
    },
    "ModifyCacheSubnetGroupMessage":{
      "type":"structure",
      "required":["CacheSubnetGroupName"],
      "members":{
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code></p>"
        },
        "CacheSubnetGroupDescription":{
          "shape":"String",
          "documentation":"<p>A description for the cache subnet group.</p>"
        },
        "SubnetIds":{
          "shape":"SubnetIdentifierList",
          "documentation":"<p>The EC2 subnet IDs for the cache subnet group.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>ModifyCacheSubnetGroup</i> operation.</p>"
    },
    "ModifyReplicationGroupMessage":{
      "type":"structure",
      "required":["ReplicationGroupId"],
      "members":{
        "ReplicationGroupId":{
          "shape":"String",
          "documentation":"<p>The identifier of the replication group to modify.</p>"
        },
        "ReplicationGroupDescription":{
          "shape":"String",
          "documentation":"<p>A description for the replication group. Maximum length is 255 characters.</p>"
        },
        "PrimaryClusterId":{
          "shape":"String",
          "documentation":"<p>If this parameter is specified, ElastiCache will promote each of the cache clusters in the specified replication group to the primary role. The nodes of all other cache clusters in the replication group will be read replicas.</p>"
        },
        "SnapshottingClusterId":{
          "shape":"String",
          "documentation":"<p>The cache cluster ID that will be used as the daily snapshot source for the replication group.</p>"
        },
        "AutomaticFailoverEnabled":{
          "shape":"BooleanOptional",
          "documentation":"<p>Whether a read replica will be automatically promoted to read/write primary if the existing primary encounters a failure.</p> <p>Valid values: <code>true</code> | <code>false</code></p>"
        },
        "CacheSecurityGroupNames":{
          "shape":"CacheSecurityGroupNameList",
          "documentation":"<p>A list of cache security group names to authorize for the clusters in this replication group. This change is asynchronously applied as soon as possible.</p> <p>This parameter can be used only with replication group containing cache clusters running outside of an Amazon Virtual Private Cloud (VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be \"Default\".</p>"
        },
        "SecurityGroupIds":{
          "shape":"SecurityGroupIdsList",
          "documentation":"<p>Specifies the VPC Security Groups associated with the cache clusters in the replication group.</p> <p>This parameter can be used only with replication group containing cache clusters running in an Amazon Virtual Private Cloud (VPC).</p>"
        },
        "PreferredMaintenanceWindow":{
          "shape":"String",
          "documentation":"<p>The weekly time range (in UTC) during which replication group system maintenance can occur. Note that system maintenance may result in an outage. This change is made immediately. If you are moving this window to the current time, there must be at least 120 minutes between the current time and end of the window to ensure that pending changes are applied.</p>"
        },
        "NotificationTopicArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.</p>"
        },
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group to apply to all of the clusters in this replication group. This change is asynchronously applied as soon as possible for parameters when the <i>ApplyImmediately</i> parameter is specified as <i>true</i> for this request.</p>"
        },
        "NotificationTopicStatus":{
          "shape":"String",
          "documentation":"<p>The status of the Amazon SNS notification topic for the replication group. Notifications are sent only if the status is <i>active</i>.</p> <p>Valid values: <code>active</code> | <code>inactive</code></p>"
        },
        "ApplyImmediately":{
          "shape":"Boolean",
          "documentation":"<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <i>PreferredMaintenanceWindow</i> setting for the replication group.</p> <p>If <code>false</code>, then changes to the nodes in the replication group are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <p>Valid values: <code>true</code> | <code>false</code></p> <p>Default: <code>false</code></p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The upgraded version of the cache engine to be run on the cache clusters in the replication group.</p>"
        },
        "AutoMinorVersionUpgrade":{
          "shape":"BooleanOptional",
          "documentation":"<p>Determines whether minor engine upgrades will be applied automatically to all of the clusters in the replication group during the maintenance window. A value of <code>true</code> allows these upgrades to occur; <code>false</code> disables automatic upgrades.</p>"
        },
        "SnapshotRetentionLimit":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of days for which ElastiCache will retain automatic node group snapshots before deleting them. For example, if you set <i>SnapshotRetentionLimit</i> to 5, then a snapshot that was taken today will be retained for 5 days before being deleted.</p> <p><b>Important</b><br>If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>"
        },
        "SnapshotWindow":{
          "shape":"String",
          "documentation":"<p>The daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of the node group specified by <i>SnapshottingClusterId</i>.</p> <p>Example: <code>05:00-09:00</code></p> <p>If you do not specify this parameter, then ElastiCache will automatically choose an appropriate time range.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>ModifyReplicationGroups</i> operation.</p>"
    },
    "NodeGroup":{
      "type":"structure",
      "members":{
        "NodeGroupId":{
          "shape":"String",
          "documentation":"<p>The identifier for the node group. A replication group contains only one node group; therefore, the node group ID is 0001.</p>"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>"
        },
        "PrimaryEndpoint":{"shape":"Endpoint"},
        "NodeGroupMembers":{
          "shape":"NodeGroupMemberList",
          "documentation":"<p>A list containing information about individual nodes within the node group.</p>"
        }
      },
      "documentation":"<p>Represents a collection of cache nodes in a replication group.</p>"
    },
    "NodeGroupList":{
      "type":"list",
      "member":{
        "shape":"NodeGroup",
        "locationName":"NodeGroup"
      }
    },
    "NodeGroupMember":{
      "type":"structure",
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The ID of the cache cluster to which the node belongs.</p>"
        },
        "CacheNodeId":{
          "shape":"String",
          "documentation":"<p>The ID of the node within its cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>"
        },
        "ReadEndpoint":{"shape":"Endpoint"},
        "PreferredAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The name of the Availability Zone in which the node is located.</p>"
        },
        "CurrentRole":{
          "shape":"String",
          "documentation":"<p>The role that is currently assigned to the node - <i>primary</i> or <i>replica</i>.</p>"
        }
      },
      "documentation":"<p>Represents a single node within a node group.</p>"
    },
    "NodeGroupMemberList":{
      "type":"list",
      "member":{
        "shape":"NodeGroupMember",
        "locationName":"NodeGroupMember"
      }
    },
    "NodeQuotaForClusterExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"NodeQuotaForClusterExceeded",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.</p>"
    },
    "NodeQuotaForCustomerExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"NodeQuotaForCustomerExceeded",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer. </p>"
    },
    "NodeSnapshot":{
      "type":"structure",
      "members":{
        "CacheNodeId":{
          "shape":"String",
          "documentation":"<p>The cache node identifier for the node in the source cache cluster.</p>"
        },
        "CacheSize":{
          "shape":"String",
          "documentation":"<p>The size of the cache on the source cache node.</p>"
        },
        "CacheNodeCreateTime":{
          "shape":"TStamp",
          "documentation":"<p>The date and time when the cache node was created in the source cache cluster.</p>"
        },
        "SnapshotCreateTime":{
          "shape":"TStamp",
          "documentation":"<p>The date and time when the source node's metadata and cache data set was obtained for the snapshot.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Represents an individual cache node in a snapshot of a cache cluster.</p>"
    },
    "NodeSnapshotList":{
      "type":"list",
      "member":{
        "shape":"NodeSnapshot",
        "locationName":"NodeSnapshot"
      }
    },
    "NotificationConfiguration":{
      "type":"structure",
      "members":{
        "TopicArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) that identifies the topic.</p>"
        },
        "TopicStatus":{
          "shape":"String",
          "documentation":"<p>The current state of the topic.</p>"
        }
      },
      "documentation":"<p>Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).</p>"
    },
    "Parameter":{
      "type":"structure",
      "members":{
        "ParameterName":{
          "shape":"String",
          "documentation":"<p>The name of the parameter.</p>"
        },
        "ParameterValue":{
          "shape":"String",
          "documentation":"<p>The value of the parameter.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>A description of the parameter.</p>"
        },
        "Source":{
          "shape":"String",
          "documentation":"<p>The source of the parameter.</p>"
        },
        "DataType":{
          "shape":"String",
          "documentation":"<p>The valid data type for the parameter.</p>"
        },
        "AllowedValues":{
          "shape":"String",
          "documentation":"<p>The valid range of values for the parameter.</p>"
        },
        "IsModifiable":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.</p>"
        },
        "MinimumEngineVersion":{
          "shape":"String",
          "documentation":"<p>The earliest cache engine version to which the parameter can apply.</p>"
        }
      },
      "documentation":"<p>Describes an individual setting that controls some aspect of ElastiCache behavior.</p>"
    },
    "ParameterNameValue":{
      "type":"structure",
      "members":{
        "ParameterName":{
          "shape":"String",
          "documentation":"<p>The name of the parameter.</p>"
        },
        "ParameterValue":{
          "shape":"String",
          "documentation":"<p>The value of the parameter.</p>"
        }
      },
      "documentation":"<p>Describes a name-value pair that is used to update the value of a parameter.</p>"
    },
    "ParameterNameValueList":{
      "type":"list",
      "member":{
        "shape":"ParameterNameValue",
        "locationName":"ParameterNameValue"
      }
    },
    "ParametersList":{
      "type":"list",
      "member":{
        "shape":"Parameter",
        "locationName":"Parameter"
      }
    },
    "PendingAutomaticFailoverStatus":{
      "type":"string",
      "enum":[
        "enabled",
        "disabled"
      ]
    },
    "PendingModifiedValues":{
      "type":"structure",
      "members":{
        "NumCacheNodes":{
          "shape":"IntegerOptional",
          "documentation":"<p>The new number of cache nodes for the cache cluster.</p>"
        },
        "CacheNodeIdsToRemove":{
          "shape":"CacheNodeIdsList",
          "documentation":"<p>A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The new cache engine version that the cache cluster will run.</p>"
        }
      },
      "documentation":"<p>A group of settings that will be applied to the cache cluster in the future, or that are currently being applied.</p>"
    },
    "PreferredAvailabilityZoneList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"PreferredAvailabilityZone"
      }
    },
    "PurchaseReservedCacheNodesOfferingMessage":{
      "type":"structure",
      "required":["ReservedCacheNodesOfferingId"],
      "members":{
        "ReservedCacheNodesOfferingId":{
          "shape":"String",
          "documentation":"<p>The ID of the reserved cache node offering to purchase.</p> <p>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</p>"
        },
        "ReservedCacheNodeId":{
          "shape":"String",
          "documentation":"<p>A customer-specified identifier to track this reservation.</p> <p>Example: myreservationID</p>"
        },
        "CacheNodeCount":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of cache node instances to reserve.</p> <p>Default: <code>1</code></p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>PurchaseReservedCacheNodesOffering</i> operation.</p>"
    },
    "RebootCacheClusterMessage":{
      "type":"structure",
      "required":[
        "CacheClusterId",
        "CacheNodeIdsToReboot"
      ],
      "members":{
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The cache cluster identifier. This parameter is stored as a lowercase string.</p>"
        },
        "CacheNodeIdsToReboot":{
          "shape":"CacheNodeIdsList",
          "documentation":"<p>A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cache cluster, specify all of the cache node IDs.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>RebootCacheCluster</i> operation.</p>"
    },
    "RecurringCharge":{
      "type":"structure",
      "members":{
        "RecurringChargeAmount":{
          "shape":"Double",
          "documentation":"<p>The monetary amount of the recurring charge.</p>"
        },
        "RecurringChargeFrequency":{
          "shape":"String",
          "documentation":"<p>The frequency of the recurring charge.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Contains the specific price and frequency of a recurring charges for a reserved cache node, or for a reserved cache node offering.</p>"
    },
    "RecurringChargeList":{
      "type":"list",
      "member":{
        "shape":"RecurringCharge",
        "locationName":"RecurringCharge"
      }
    },
    "ReplicationGroup":{
      "type":"structure",
      "members":{
        "ReplicationGroupId":{
          "shape":"String",
          "documentation":"<p>The identifier for the replication group.</p>"
        },
        "Description":{
          "shape":"String",
          "documentation":"<p>The description of the replication group.</p>"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>"
        },
        "PendingModifiedValues":{
          "shape":"ReplicationGroupPendingModifiedValues",
          "documentation":"<p>A group of settings to be applied to the replication group, either immediately or during the next maintenance window.</p>"
        },
        "MemberClusters":{
          "shape":"ClusterIdList",
          "documentation":"<p>The names of all the cache clusters that are part of this replication group.</p>"
        },
        "NodeGroups":{
          "shape":"NodeGroupList",
          "documentation":"<p>A single element list with information about the nodes in the replication group.</p>"
        },
        "SnapshottingClusterId":{
          "shape":"String",
          "documentation":"<p>The cache cluster ID that is used as the daily snapshot source for the replication group.</p>"
        },
        "AutomaticFailover":{
          "shape":"AutomaticFailoverStatus",
          "documentation":"<p>Indicates the status of automatic failover for this replication group.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Contains all of the attributes of a specific replication group.</p>"
    },
    "ReplicationGroupAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"ReplicationGroupAlreadyExists",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The specified replication group already exists.</p>"
    },
    "ReplicationGroupList":{
      "type":"list",
      "member":{
        "shape":"ReplicationGroup",
        "locationName":"ReplicationGroup"
      }
    },
    "ReplicationGroupMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "ReplicationGroups":{
          "shape":"ReplicationGroupList",
          "documentation":"<p>A list of replication groups. Each item in the list contains detailed information about one replication group.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeReplicationGroups</i> operation.</p>"
    },
    "ReplicationGroupNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"ReplicationGroupNotFoundFault",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The specified replication group does not exist.</p>"
    },
    "ReplicationGroupPendingModifiedValues":{
      "type":"structure",
      "members":{
        "PrimaryClusterId":{
          "shape":"String",
          "documentation":"<p>The primary cluster ID which will be applied immediately (if <code>--apply-immediately</code> was specified), or during the next maintenance window.</p>"
        },
        "AutomaticFailoverStatus":{
          "shape":"PendingAutomaticFailoverStatus",
          "documentation":"<p>Indicates the status of automatic failover for this replication group.</p>"
        }
      },
      "documentation":"<p>The settings to be applied to the replication group, either immediately or during the next maintenance window.</p>"
    },
    "ReservedCacheNode":{
      "type":"structure",
      "members":{
        "ReservedCacheNodeId":{
          "shape":"String",
          "documentation":"<p>The unique identifier for the reservation.</p>"
        },
        "ReservedCacheNodesOfferingId":{
          "shape":"String",
          "documentation":"<p>The offering identifier.</p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The cache node type for the reserved cache nodes.</p>"
        },
        "StartTime":{
          "shape":"TStamp",
          "documentation":"<p>The time the reservation started.</p>"
        },
        "Duration":{
          "shape":"Integer",
          "documentation":"<p>The duration of the reservation in seconds.</p>"
        },
        "FixedPrice":{
          "shape":"Double",
          "documentation":"<p>The fixed price charged for this reserved cache node.</p>"
        },
        "UsagePrice":{
          "shape":"Double",
          "documentation":"<p>The hourly price charged for this reserved cache node.</p>"
        },
        "CacheNodeCount":{
          "shape":"Integer",
          "documentation":"<p>The number of cache nodes that have been reserved.</p>"
        },
        "ProductDescription":{
          "shape":"String",
          "documentation":"<p>The description of the reserved cache node.</p>"
        },
        "OfferingType":{
          "shape":"String",
          "documentation":"<p>The offering type of this reserved cache node.</p>"
        },
        "State":{
          "shape":"String",
          "documentation":"<p>The state of the reserved cache node.</p>"
        },
        "RecurringCharges":{
          "shape":"RecurringChargeList",
          "documentation":"<p>The recurring price charged to run this reserved cache node.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Represents the output of a <i>PurchaseReservedCacheNodesOffering</i> operation.</p>"
    },
    "ReservedCacheNodeAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"ReservedCacheNodeAlreadyExists",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>You already have a reservation with the given identifier.</p>"
    },
    "ReservedCacheNodeList":{
      "type":"list",
      "member":{
        "shape":"ReservedCacheNode",
        "locationName":"ReservedCacheNode"
      }
    },
    "ReservedCacheNodeMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "ReservedCacheNodes":{
          "shape":"ReservedCacheNodeList",
          "documentation":"<p>A list of reserved cache nodes. Each element in the list contains detailed information about one node.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeReservedCacheNodes</i> operation.</p>"
    },
    "ReservedCacheNodeNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"ReservedCacheNodeNotFound",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested reserved cache node was not found.</p>"
    },
    "ReservedCacheNodeQuotaExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"ReservedCacheNodeQuotaExceeded",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the user's cache node quota.</p>"
    },
    "ReservedCacheNodesOffering":{
      "type":"structure",
      "members":{
        "ReservedCacheNodesOfferingId":{
          "shape":"String",
          "documentation":"<p>A unique identifier for the reserved cache node offering.</p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The cache node type for the reserved cache node.</p>"
        },
        "Duration":{
          "shape":"Integer",
          "documentation":"<p>The duration of the offering. in seconds.</p>"
        },
        "FixedPrice":{
          "shape":"Double",
          "documentation":"<p>The fixed price charged for this offering.</p>"
        },
        "UsagePrice":{
          "shape":"Double",
          "documentation":"<p>The hourly price charged for this offering.</p>"
        },
        "ProductDescription":{
          "shape":"String",
          "documentation":"<p>The cache engine used by the offering.</p>"
        },
        "OfferingType":{
          "shape":"String",
          "documentation":"<p>The offering type.</p>"
        },
        "RecurringCharges":{
          "shape":"RecurringChargeList",
          "documentation":"<p>The recurring price charged to run this reserved cache node.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Describes all of the attributes of a reserved cache node offering.</p>"
    },
    "ReservedCacheNodesOfferingList":{
      "type":"list",
      "member":{
        "shape":"ReservedCacheNodesOffering",
        "locationName":"ReservedCacheNodesOffering"
      }
    },
    "ReservedCacheNodesOfferingMessage":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"String",
          "documentation":"<p>Provides an identifier to allow retrieval of paginated results.</p>"
        },
        "ReservedCacheNodesOfferings":{
          "shape":"ReservedCacheNodesOfferingList",
          "documentation":"<p>A list of reserved cache node offerings. Each element in the list contains detailed information about one offering.</p>"
        }
      },
      "documentation":"<p>Represents the output of a <i>DescribeReservedCacheNodesOfferings</i> operation.</p>"
    },
    "ReservedCacheNodesOfferingNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"ReservedCacheNodesOfferingNotFound",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested cache node offering does not exist.</p>"
    },
    "ResetCacheParameterGroupMessage":{
      "type":"structure",
      "required":[
        "CacheParameterGroupName",
        "ParameterNameValues"
      ],
      "members":{
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache parameter group to reset.</p>"
        },
        "ResetAllParameters":{
          "shape":"Boolean",
          "documentation":"<p>If <i>true</i>, all parameters in the cache parameter group will be reset to default values. If <i>false</i>, no such action occurs.</p> <p>Valid values: <code>true</code> | <code>false</code></p>"
        },
        "ParameterNameValues":{
          "shape":"ParameterNameValueList",
          "documentation":"<p>An array of parameter names to be reset. If you are not resetting the entire cache parameter group, you must specify at least one parameter name.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>ResetCacheParameterGroup</i> operation.</p>"
    },
    "RevokeCacheSecurityGroupIngressMessage":{
      "type":"structure",
      "required":[
        "CacheSecurityGroupName",
        "EC2SecurityGroupName",
        "EC2SecurityGroupOwnerId"
      ],
      "members":{
        "CacheSecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache security group to revoke ingress from.</p>"
        },
        "EC2SecurityGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon EC2 security group to revoke access from.</p>"
        },
        "EC2SecurityGroupOwnerId":{
          "shape":"String",
          "documentation":"<p>The AWS account number of the Amazon EC2 security group owner. Note that this is not the same thing as an AWS access key ID - you must provide a valid AWS account number for this parameter.</p>"
        }
      },
      "documentation":"<p>Represents the input of a <i>RevokeCacheSecurityGroupIngress</i> operation.</p>"
    },
    "SecurityGroupIdsList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SecurityGroupId"
      }
    },
    "SecurityGroupMembership":{
      "type":"structure",
      "members":{
        "SecurityGroupId":{
          "shape":"String",
          "documentation":"<p>The identifier of the cache security group.</p>"
        },
        "Status":{
          "shape":"String",
          "documentation":"<p>The status of the cache security group membership. The status changes whenever a cache security group is modified, or when the cache security groups assigned to a cache cluster are modified.</p>"
        }
      },
      "documentation":"<p>Represents a single cache security group and its status..</p>"
    },
    "SecurityGroupMembershipList":{
      "type":"list",
      "member":{"shape":"SecurityGroupMembership"}
    },
    "Snapshot":{
      "type":"structure",
      "members":{
        "SnapshotName":{
          "shape":"String",
          "documentation":"<p>The name of a snapshot. For an automatic snapshot, the name is system-generated; for a manual snapshot, this is the user-provided name.</p>"
        },
        "CacheClusterId":{
          "shape":"String",
          "documentation":"<p>The user-supplied identifier of the source cache cluster.</p>"
        },
        "SnapshotStatus":{
          "shape":"String",
          "documentation":"<p>The status of the snapshot. Valid values: <code>creating</code> | <code>available</code> | <code>restoring</code> | <code>copying</code> | <code>deleting</code>.</p>"
        },
        "SnapshotSource":{
          "shape":"String",
          "documentation":"<p>Indicates whether the snapshot is from an automatic backup (<code>automated</code>) or was created manually (<code>manual</code>).</p>"
        },
        "CacheNodeType":{
          "shape":"String",
          "documentation":"<p>The name of the compute and memory capacity node type for the source cache cluster.</p>"
        },
        "Engine":{
          "shape":"String",
          "documentation":"<p>The name of the cache engine (<i>memcached</i> or <i>redis</i>) used by the source cache cluster.</p>"
        },
        "EngineVersion":{
          "shape":"String",
          "documentation":"<p>The version of the cache engine version that is used by the source cache cluster.</p>"
        },
        "NumCacheNodes":{
          "shape":"IntegerOptional",
          "documentation":"<p>The number of cache nodes in the source cache cluster.</p>"
        },
        "PreferredAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The name of the Availability Zone in which the source cache cluster is located.</p>"
        },
        "CacheClusterCreateTime":{
          "shape":"TStamp",
          "documentation":"<p>The date and time when the source cache cluster was created.</p>"
        },
        "PreferredMaintenanceWindow":{
          "shape":"String",
          "documentation":"<p> The time range (in UTC) during which weekly system maintenance can occur on the source cache cluster.</p>"
        },
        "TopicArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) for the topic used by the source cache cluster for publishing notifications.</p>"
        },
        "Port":{
          "shape":"IntegerOptional",
          "documentation":"<p>The port number used by each cache nodes in the source cache cluster.</p>"
        },
        "CacheParameterGroupName":{
          "shape":"String",
          "documentation":"<p>The cache parameter group that is associated with the source cache cluster.</p>"
        },
        "CacheSubnetGroupName":{
          "shape":"String",
          "documentation":"<p>The name of the cache subnet group associated with the source cache cluster.</p>"
        },
        "VpcId":{
          "shape":"String",
          "documentation":"<p>The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group for the source cache cluster.</p>"
        },
        "AutoMinorVersionUpgrade":{
          "shape":"Boolean",
          "documentation":"<p>For the source cache cluster, indicates whether minor version patches are applied automatically (<code>true</code>) or not (<code>false</code>).</p>"
        },
        "SnapshotRetentionLimit":{
          "shape":"IntegerOptional",
          "documentation":"<p>For an automatic snapshot, the number of days for which ElastiCache will retain the snapshot before deleting it.</p> <p>For manual snapshots, this field reflects the <i>SnapshotRetentionLimit</i> for the source cache cluster when the snapshot was created. This field is otherwise ignored: Manual snapshots do not expire, and can only be deleted using the <i>DeleteSnapshot</i> action. </p> <p><b>Important</b><br>If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>"
        },
        "SnapshotWindow":{
          "shape":"String",
          "documentation":"<p>The daily time range during which ElastiCache takes daily snapshots of the source cache cluster.</p>"
        },
        "NodeSnapshots":{
          "shape":"NodeSnapshotList",
          "documentation":"<p>A list of the cache nodes in the source cache cluster.</p>"
        }
      },
      "wrapper":true,
      "documentation":"<p>Represents a copy of an entire cache cluster as of the time when the snapshot was taken.</p>"
    },
    "SnapshotAlreadyExistsFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"SnapshotAlreadyExistsFault",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>You already have a snapshot with the given name.</p>"
    },
    "SnapshotArnsList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SnapshotArn"
      }
    },
    "SnapshotFeatureNotSupportedFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"SnapshotFeatureNotSupportedFault",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>You attempted one of the following actions:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <i>t1.micro</i> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>"
    },
    "SnapshotList":{
      "type":"list",
      "member":{
        "shape":"Snapshot",
        "locationName":"Snapshot"
      }
    },
    "SnapshotNotFoundFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"SnapshotNotFoundFault",
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested snapshot name does not refer to an existing snapshot.</p>"
    },
    "SnapshotQuotaExceededFault":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"SnapshotQuotaExceededFault",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
    },
    "SourceType":{
      "type":"string",
      "enum":[
        "cache-cluster",
        "cache-parameter-group",
        "cache-security-group",
        "cache-subnet-group"
      ]
    },
    "String":{"type":"string"},
    "Subnet":{
      "type":"structure",
      "members":{
        "SubnetIdentifier":{
          "shape":"String",
          "documentation":"<p>The unique identifier for the subnet</p>"
        },
        "SubnetAvailabilityZone":{
          "shape":"AvailabilityZone",
          "documentation":"<p>The Availability Zone associated with the subnet</p>"
        }
      },
      "documentation":"<p>Represents the subnet associated with a cache cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache.</p>"
    },
    "SubnetIdentifierList":{
      "type":"list",
      "member":{
        "shape":"String",
        "locationName":"SubnetIdentifier"
      }
    },
    "SubnetInUse":{
      "type":"structure",
      "members":{
      },
      "error":{
        "code":"SubnetInUse",
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true,
      "documentation":"<p>The requested subnet is being used by another cache subnet group.</p>"
    },
    "SubnetList":{
      "type":"list",
      "member":{
        "shape":"Subnet",
        "locationName":"Subnet"
      }
    },
    "TStamp":{"type":"timestamp"},
    "AuthorizeCacheSecurityGroupIngressResult":{
      "type":"structure",
      "members":{
        "CacheSecurityGroup":{"shape":"CacheSecurityGroup"}
      }
    },
    "CopySnapshotResult":{
      "type":"structure",
      "members":{
        "Snapshot":{"shape":"Snapshot"}
      }
    },
    "CreateCacheClusterResult":{
      "type":"structure",
      "members":{
        "CacheCluster":{"shape":"CacheCluster"}
      }
    },
    "CreateCacheParameterGroupResult":{
      "type":"structure",
      "members":{
        "CacheParameterGroup":{"shape":"CacheParameterGroup"}
      }
    },
    "CreateCacheSecurityGroupResult":{
      "type":"structure",
      "members":{
        "CacheSecurityGroup":{"shape":"CacheSecurityGroup"}
      }
    },
    "CreateCacheSubnetGroupResult":{
      "type":"structure",
      "members":{
        "CacheSubnetGroup":{"shape":"CacheSubnetGroup"}
      }
    },
    "CreateReplicationGroupResult":{
      "type":"structure",
      "members":{
        "ReplicationGroup":{"shape":"ReplicationGroup"}
      }
    },
    "CreateSnapshotResult":{
      "type":"structure",
      "members":{
        "Snapshot":{"shape":"Snapshot"}
      }
    },
    "DeleteCacheClusterResult":{
      "type":"structure",
      "members":{
        "CacheCluster":{"shape":"CacheCluster"}
      }
    },
    "DeleteReplicationGroupResult":{
      "type":"structure",
      "members":{
        "ReplicationGroup":{"shape":"ReplicationGroup"}
      }
    },
    "DeleteSnapshotResult":{
      "type":"structure",
      "members":{
        "Snapshot":{"shape":"Snapshot"}
      }
    },
    "DescribeEngineDefaultParametersResult":{
      "type":"structure",
      "members":{
        "EngineDefaults":{"shape":"EngineDefaults"}
      }
    },
    "ModifyCacheClusterResult":{
      "type":"structure",
      "members":{
        "CacheCluster":{"shape":"CacheCluster"}
      }
    },
    "ModifyCacheSubnetGroupResult":{
      "type":"structure",
      "members":{
        "CacheSubnetGroup":{"shape":"CacheSubnetGroup"}
      }
    },
    "ModifyReplicationGroupResult":{
      "type":"structure",
      "members":{
        "ReplicationGroup":{"shape":"ReplicationGroup"}
      }
    },
    "PurchaseReservedCacheNodesOfferingResult":{
      "type":"structure",
      "members":{
        "ReservedCacheNode":{"shape":"ReservedCacheNode"}
      }
    },
    "RebootCacheClusterResult":{
      "type":"structure",
      "members":{
        "CacheCluster":{"shape":"CacheCluster"}
      }
    },
    "RevokeCacheSecurityGroupIngressResult":{
      "type":"structure",
      "members":{
        "CacheSecurityGroup":{"shape":"CacheSecurityGroup"}
      }
    }
  }
}
                                                                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/2014-09-30/waiters-2.json           0100644 0000000 0000062 00000007207 13077704371 026772  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "version": 2,
  "waiters": {
    "CacheClusterAvailable": {
      "delay": 30,
      "operation": "DescribeCacheClusters",
      "maxAttempts": 60,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "CacheClusters[].CacheClusterStatus"
        },
        {
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CacheClusters[].CacheClusterStatus"
        },
        {
          "expected": "deleting",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CacheClusters[].CacheClusterStatus"
        },
        {
          "expected": "incompatible-network",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CacheClusters[].CacheClusterStatus"
        },
        {
          "expected": "restore-failed",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CacheClusters[].CacheClusterStatus"
        }
      ]
    },
    "CacheClusterDeleted": {
      "delay": 30,
      "operation": "DescribeCacheClusters",
      "maxAttempts": 60,
      "acceptors": [
        {
          "expected": "CacheClusterNotFound",
          "matcher": "error",
          "state": "success"
        },
        {
          "expected": "creating",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CacheClusters[].CacheClusterStatus"
        },
        {
          "expected": "modifying",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CacheClusters[].CacheClusterStatus"
        },
        {
          "expected": "rebooting",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "CacheClusters[].CacheClusterStatus"
        }
      ]
    },
    "ReplicationGroupAvailable": {
      "delay": 30,
      "operation": "DescribeReplicationGroups",
      "maxAttempts": 60,
      "acceptors": [
        {
          "expected": "available",
          "matcher": "pathAll",
          "state": "success",
          "argument": "ReplicationGroups[].Status"
        },
        {
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ReplicationGroups[].Status"
        },
        {
          "expected": "deleting",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ReplicationGroups[].Status"
        },
        {
          "expected": "incompatible-network",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ReplicationGroups[].Status"
        },
        {
          "expected": "restore-failed",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ReplicationGroups[].Status"
        }
      ]
    },
    "ReplicationGroupDeleted": {
      "delay": 30,
      "operation": "DescribeReplicationGroups",
      "maxAttempts": 60,
      "acceptors": [
        {
          "expected": "ReplicationGroupNotFoundFault",
          "matcher": "error",
          "state": "success"
        },
        {
          "expected": "creating",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ReplicationGroups[].Status"
        },
        {
          "expected": "modifying",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ReplicationGroups[].Status"
        },
        {
          "expected": "rebooting",
          "matcher": "pathAny",
          "state": "failure",
          "argument": "ReplicationGroups[].Status"
        }
      ]
    }
  }
}
                                                                                                                                                                                                                                                                                                                                                                                         usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/2015-02-02/                         0042755 0000000 0000062 00000000000 13077704402 024245  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/2015-02-02/paginators-1.json        0100644 0000000 0000062 00000004173 13077704371 027452  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "pagination": {
    "DescribeCacheClusters": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheClusters"
    },
    "DescribeCacheEngineVersions": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheEngineVersions"
    },
    "DescribeCacheParameterGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheParameterGroups"
    },
    "DescribeCacheParameters": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Parameters"
    },
    "DescribeCacheSecurityGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheSecurityGroups"
    },
    "DescribeCacheSubnetGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheSubnetGroups"
    },
    "DescribeEngineDefaultParameters": {
      "input_token": "Marker",
      "output_token": "EngineDefaults.Marker",
      "limit_key": "MaxRecords",
      "result_key": "EngineDefaults.Parameters"
    },
    "DescribeEvents": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Events"
    },
    "DescribeReservedCacheNodes": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReservedCacheNodes"
    },
    "DescribeReservedCacheNodesOfferings": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReservedCacheNodesOfferings"
    },
    "DescribeReplicationGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReplicationGroups"
    },
    "DescribeSnapshots": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Snapshots"
    }
  }
}
                                                                                                                                                                                                                                                                                                                                                                                                     usr/local/lib/python2.7/dist-packages/botocore/data/elasticache/2015-02-02/service-2.json           0100644 0000000 0000062 00000753276 13077704371 026763  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        {
  "version":"2.0",
  "metadata":{
    "apiVersion":"2015-02-02",
    "endpointPrefix":"elasticache",
    "serviceFullName":"Amazon ElastiCache",
    "signatureVersion":"v4",
    "xmlNamespace":"http://elasticache.amazonaws.com/doc/2015-02-02/",
    "protocol":"query"
  },
  "documentation":"<fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers gain all of the benefits of a high-performance, in-memory cache with far less of the administrative burden of launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>",
  "operations":{
    "AddTagsToResource":{
      "name":"AddTagsToResource",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"AddTagsToResourceMessage",
        "documentation":"<p>Represents the input of an <i>AddTagsToResource</i> action.</p>"
      },
      "output":{
        "shape":"TagListMessage",
        "documentation":"<p>Represents the output from the <i>AddTagsToResource</i>, <i>ListTagsOnResource</i>, and <i>RemoveTagsFromResource</i> actions.</p>",
        "resultWrapper":"AddTagsToResourceResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"SnapshotNotFoundFault",
          "error":{
            "code":"SnapshotNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested snapshot name does not refer to an existing snapshot.</p>"
        },
        {
          "shape":"TagQuotaPerResourceExceeded",
          "error":{
            "code":"TagQuotaPerResourceExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would cause the resource to have more than the allowed number of tags. The maximum number of tags permitted on a resource is 10.</p>"
        },
        {
          "shape":"InvalidARNFault",
          "error":{
            "code":"InvalidARN",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested Amazon Resource Name (ARN) does not refer to an existing resource.</p>"
        }
      ],
      "documentation":"<p>The <i>AddTagsToResource</i> action adds up to 10 cost allocation tags to the named resource. A <i>cost allocation tag</i> is a key-value pair where the key and value are case-sensitive. Cost allocation tags can be used to categorize and track your AWS costs.</p> <p> When you apply tags to your ElastiCache resources, AWS generates a cost allocation report as a comma-separated value (CSV) file with your usage and costs aggregated by your tags. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Tagging.html\">Using Cost Allocation Tags in Amazon ElastiCache</a>.</p>"
    },
    "AuthorizeCacheSecurityGroupIngress":{
      "name":"AuthorizeCacheSecurityGroupIngress",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"AuthorizeCacheSecurityGroupIngressMessage",
        "documentation":"<p>Represents the input of an <i>AuthorizeCacheSecurityGroupIngress</i> action.</p>"
      },
      "output":{
        "shape":"AuthorizeCacheSecurityGroupIngressResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following actions:</p> <ul> <li> <i>AuthorizeCacheSecurityGroupIngress</i> </li> <li> <i>CreateCacheSecurityGroup</i> </li> <li> <i>RevokeCacheSecurityGroupIngress</i> </li> </ul>",
        "resultWrapper":"AuthorizeCacheSecurityGroupIngressResult"
      },
      "errors":[
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"InvalidCacheSecurityGroupStateFault",
          "error":{
            "code":"InvalidCacheSecurityGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
        },
        {
          "shape":"AuthorizationAlreadyExistsFault",
          "error":{
            "code":"AuthorizationAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified Amazon EC2 security group is already authorized for the specified cache security group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>AuthorizeCacheSecurityGroupIngress</i> action allows network ingress to a cache security group. Applications using ElastiCache must be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization mechanism.</p> <note>You cannot authorize ingress from an Amazon EC2 security group in one region to an ElastiCache cluster in another region. </note>"
    },
    "CopySnapshot":{
      "name":"CopySnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CopySnapshotMessage",
        "documentation":"<p>Represents the input of a <i>CopySnapshotMessage</i> action.</p>"
      },
      "output":{
        "shape":"CopySnapshotResult",
        "wrapper":true,
        "documentation":"<p>Represents a copy of an entire cache cluster as of the time when the snapshot was taken.</p>",
        "resultWrapper":"CopySnapshotResult"
      },
      "errors":[
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"SnapshotNotFoundFault",
          "error":{
            "code":"SnapshotNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested snapshot name does not refer to an existing snapshot.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"InvalidSnapshotStateFault",
          "error":{
            "code":"InvalidSnapshotState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the snapshot does not allow the requested action to occur.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CopySnapshot</i> action makes a copy of an existing snapshot.</p>"
    },
    "CreateCacheCluster":{
      "name":"CreateCacheCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheClusterMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheCluster</i> action.</p>"
      },
      "output":{
        "shape":"CreateCacheClusterResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific cache cluster.</p>",
        "resultWrapper":"CreateCacheClusterResult"
      },
      "errors":[
        {
          "shape":"ReplicationGroupNotFoundFault",
          "error":{
            "code":"ReplicationGroupNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group does not exist.</p>"
        },
        {
          "shape":"InvalidReplicationGroupStateFault",
          "error":{
            "code":"InvalidReplicationGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested replication group is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"CacheClusterAlreadyExistsFault",
          "error":{
            "code":"CacheClusterAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a cache cluster with the given identifier.</p>"
        },
        {
          "shape":"InsufficientCacheClusterCapacityFault",
          "error":{
            "code":"InsufficientCacheClusterCapacity",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node type is not available in the specified Availability Zone.</p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        },
        {
          "shape":"ClusterQuotaForCustomerExceededFault",
          "error":{
            "code":"ClusterQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache clusters per customer.</p>"
        },
        {
          "shape":"NodeQuotaForClusterExceededFault",
          "error":{
            "code":"NodeQuotaForClusterExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForCustomerExceededFault",
          "error":{
            "code":"NodeQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer. </p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidVPCNetworkStateFault",
          "error":{
            "code":"InvalidVPCNetworkStateFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The VPC network is in an invalid state.</p>"
        },
        {
          "shape":"TagQuotaPerResourceExceeded",
          "error":{
            "code":"TagQuotaPerResourceExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would cause the resource to have more than the allowed number of tags. The maximum number of tags permitted on a resource is 10.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheCluster</i> action creates a cache cluster. All nodes in the cache cluster run the same protocol-compliant cache engine software, either Memcached or Redis.</p>"
    },
    "CreateCacheParameterGroup":{
      "name":"CreateCacheParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheParameterGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheParameterGroup</i> action.</p>"
      },
      "output":{
        "shape":"CreateCacheParameterGroupResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of a <i>CreateCacheParameterGroup</i> action.</p>",
        "resultWrapper":"CreateCacheParameterGroupResult"
      },
      "errors":[
        {
          "shape":"CacheParameterGroupQuotaExceededFault",
          "error":{
            "code":"CacheParameterGroupQuotaExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of cache security groups.</p>"
        },
        {
          "shape":"CacheParameterGroupAlreadyExistsFault",
          "error":{
            "code":"CacheParameterGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>A cache parameter group with the requested name already exists.</p>"
        },
        {
          "shape":"InvalidCacheParameterGroupStateFault",
          "error":{
            "code":"InvalidCacheParameterGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache parameter group does not allow the requested action to occur. </p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheParameterGroup</i> action creates a new cache parameter group. A cache parameter group is a collection of parameters that you apply to all of the nodes in a cache cluster.</p>"
    },
    "CreateCacheSecurityGroup":{
      "name":"CreateCacheSecurityGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheSecurityGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheSecurityGroup</i> action.</p>"
      },
      "output":{
        "shape":"CreateCacheSecurityGroupResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following actions:</p> <ul> <li> <i>AuthorizeCacheSecurityGroupIngress</i> </li> <li> <i>CreateCacheSecurityGroup</i> </li> <li> <i>RevokeCacheSecurityGroupIngress</i> </li> </ul>",
        "resultWrapper":"CreateCacheSecurityGroupResult"
      },
      "errors":[
        {
          "shape":"CacheSecurityGroupAlreadyExistsFault",
          "error":{
            "code":"CacheSecurityGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>A cache security group with the specified name already exists.</p>"
        },
        {
          "shape":"CacheSecurityGroupQuotaExceededFault",
          "error":{
            "code":"QuotaExceeded.CacheSecurityGroup",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache security groups.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheSecurityGroup</i> action creates a new cache security group. Use a cache security group to control access to one or more cache clusters.</p> <p>Cache security groups are only used when you are creating a cache cluster outside of an Amazon Virtual Private Cloud (VPC). If you are creating a cache cluster inside of a VPC, use a cache subnet group instead. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html\">CreateCacheSubnetGroup</a>.</p>"
    },
    "CreateCacheSubnetGroup":{
      "name":"CreateCacheSubnetGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateCacheSubnetGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateCacheSubnetGroup</i> action.</p>"
      },
      "output":{
        "shape":"CreateCacheSubnetGroupResult",
        "wrapper":true,
        "documentation":"<p>Represents the output of one of the following actions:</p> <ul> <li> <i>CreateCacheSubnetGroup</i> </li> <li> <i>ModifyCacheSubnetGroup</i> </li> </ul>",
        "resultWrapper":"CreateCacheSubnetGroupResult"
      },
      "errors":[
        {
          "shape":"CacheSubnetGroupAlreadyExistsFault",
          "error":{
            "code":"CacheSubnetGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache subnet group name is already in use by an existing cache subnet group.</p>"
        },
        {
          "shape":"CacheSubnetGroupQuotaExceededFault",
          "error":{
            "code":"CacheSubnetGroupQuotaExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache subnet groups.</p>"
        },
        {
          "shape":"CacheSubnetQuotaExceededFault",
          "error":{
            "code":"CacheSubnetQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of subnets in a cache subnet group.</p>"
        },
        {
          "shape":"InvalidSubnet",
          "error":{
            "code":"InvalidSubnet",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>An invalid subnet identifier was specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateCacheSubnetGroup</i> action creates a new cache subnet group.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (VPC).</p>"
    },
    "CreateReplicationGroup":{
      "name":"CreateReplicationGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateReplicationGroupMessage",
        "documentation":"<p>Represents the input of a <i>CreateReplicationGroup</i> action.</p>"
      },
      "output":{
        "shape":"CreateReplicationGroupResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific replication group.</p>",
        "resultWrapper":"CreateReplicationGroupResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"ReplicationGroupAlreadyExistsFault",
          "error":{
            "code":"ReplicationGroupAlreadyExists",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group already exists.</p>"
        },
        {
          "shape":"InsufficientCacheClusterCapacityFault",
          "error":{
            "code":"InsufficientCacheClusterCapacity",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache node type is not available in the specified Availability Zone.</p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        },
        {
          "shape":"ClusterQuotaForCustomerExceededFault",
          "error":{
            "code":"ClusterQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache clusters per customer.</p>"
        },
        {
          "shape":"NodeQuotaForClusterExceededFault",
          "error":{
            "code":"NodeQuotaForClusterExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.</p>"
        },
        {
          "shape":"NodeQuotaForCustomerExceededFault",
          "error":{
            "code":"NodeQuotaForCustomerExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer. </p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidVPCNetworkStateFault",
          "error":{
            "code":"InvalidVPCNetworkStateFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The VPC network is in an invalid state.</p>"
        },
        {
          "shape":"TagQuotaPerResourceExceeded",
          "error":{
            "code":"TagQuotaPerResourceExceeded",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would cause the resource to have more than the allowed number of tags. The maximum number of tags permitted on a resource is 10.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateReplicationGroup</i> action creates a replication group. A replication group is a collection of cache clusters, where one of the cache clusters is a read/write primary and the others are read-only replicas. Writes to the primary are automatically propagated to the replicas.</p> <p>When you create a replication group, you must specify an existing cache cluster that is in the primary role. When the replication group has been successfully created, you can add one or more read replica replicas to it, up to a total of five read replicas.</p> <p><b>Note:</b> This action is valid only for Redis.</p>"
    },
    "CreateSnapshot":{
      "name":"CreateSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"CreateSnapshotMessage",
        "documentation":"<p>Represents the input of a <i>CreateSnapshot</i> action.</p>"
      },
      "output":{
        "shape":"CreateSnapshotResult",
        "wrapper":true,
        "documentation":"<p>Represents a copy of an entire cache cluster as of the time when the snapshot was taken.</p>",
        "resultWrapper":"CreateSnapshotResult"
      },
      "errors":[
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"SnapshotFeatureNotSupportedFault",
          "error":{
            "code":"SnapshotFeatureNotSupportedFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You attempted one of the following actions:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <i>t1.micro</i> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        }
      ],
      "documentation":"<p>The <i>CreateSnapshot</i> action creates a copy of an entire cache cluster at a specific moment in time.</p>"
    },
    "DeleteCacheCluster":{
      "name":"DeleteCacheCluster",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheClusterMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheCluster</i> action.</p>"
      },
      "output":{
        "shape":"DeleteCacheClusterResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific cache cluster.</p>",
        "resultWrapper":"DeleteCacheClusterResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster ID does not refer to an existing cache cluster.</p>"
        },
        {
          "shape":"InvalidCacheClusterStateFault",
          "error":{
            "code":"InvalidCacheClusterState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache cluster is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"SnapshotFeatureNotSupportedFault",
          "error":{
            "code":"SnapshotFeatureNotSupportedFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You attempted one of the following actions:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <i>t1.micro</i> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheCluster</i> action deletes a previously provisioned cache cluster. <i>DeleteCacheCluster</i> deletes all associated cache nodes, node endpoints and the cache cluster itself. When you receive a successful response from this action, Amazon ElastiCache immediately begins deleting the cache cluster; you cannot cancel or revert this action.</p> <p>This API cannot be used to delete a cache cluster that is the last read replica of a replication group that has Multi-AZ mode enabled.</p>"
    },
    "DeleteCacheParameterGroup":{
      "name":"DeleteCacheParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheParameterGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheParameterGroup</i> action.</p>"
      },
      "errors":[
        {
          "shape":"InvalidCacheParameterGroupStateFault",
          "error":{
            "code":"InvalidCacheParameterGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache parameter group does not allow the requested action to occur. </p>"
        },
        {
          "shape":"CacheParameterGroupNotFoundFault",
          "error":{
            "code":"CacheParameterGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache parameter group name does not refer to an existing cache parameter group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheParameterGroup</i> action deletes the specified cache parameter group. You cannot delete a cache parameter group if it is associated with any cache clusters.</p>"
    },
    "DeleteCacheSecurityGroup":{
      "name":"DeleteCacheSecurityGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheSecurityGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheSecurityGroup</i> action.</p>"
      },
      "errors":[
        {
          "shape":"InvalidCacheSecurityGroupStateFault",
          "error":{
            "code":"InvalidCacheSecurityGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the cache security group does not allow deletion.</p>"
        },
        {
          "shape":"CacheSecurityGroupNotFoundFault",
          "error":{
            "code":"CacheSecurityGroupNotFound",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p> The requested cache security group name does not refer to an existing cache security group.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheSecurityGroup</i> action deletes a cache security group.</p> <note>You cannot delete a cache security group if it is associated with any cache clusters.</note>"
    },
    "DeleteCacheSubnetGroup":{
      "name":"DeleteCacheSubnetGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteCacheSubnetGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteCacheSubnetGroup</i> action.</p>"
      },
      "errors":[
        {
          "shape":"CacheSubnetGroupInUse",
          "error":{
            "code":"CacheSubnetGroupInUse",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group is currently in use.</p>"
        },
        {
          "shape":"CacheSubnetGroupNotFoundFault",
          "error":{
            "code":"CacheSubnetGroupNotFoundFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteCacheSubnetGroup</i> action deletes a cache subnet group.</p> <note>You cannot delete a cache subnet group if it is associated with any cache clusters.</note>"
    },
    "DeleteReplicationGroup":{
      "name":"DeleteReplicationGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteReplicationGroupMessage",
        "documentation":"<p>Represents the input of a <i>DeleteReplicationGroup</i> action.</p>"
      },
      "output":{
        "shape":"DeleteReplicationGroupResult",
        "wrapper":true,
        "documentation":"<p>Contains all of the attributes of a specific replication group.</p>",
        "resultWrapper":"DeleteReplicationGroupResult"
      },
      "errors":[
        {
          "shape":"ReplicationGroupNotFoundFault",
          "error":{
            "code":"ReplicationGroupNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The specified replication group does not exist.</p>"
        },
        {
          "shape":"InvalidReplicationGroupStateFault",
          "error":{
            "code":"InvalidReplicationGroupState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested replication group is not in the <i>available</i> state.</p>"
        },
        {
          "shape":"SnapshotAlreadyExistsFault",
          "error":{
            "code":"SnapshotAlreadyExistsFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You already have a snapshot with the given name.</p>"
        },
        {
          "shape":"SnapshotFeatureNotSupportedFault",
          "error":{
            "code":"SnapshotFeatureNotSupportedFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>You attempted one of the following actions:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <i>t1.micro</i> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>"
        },
        {
          "shape":"SnapshotQuotaExceededFault",
          "error":{
            "code":"SnapshotQuotaExceededFault",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The request cannot be processed because it would exceed the maximum number of snapshots.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteReplicationGroup</i> action deletes an existing replication group. By default, this action deletes the entire replication group, including the primary cluster and all of the read replicas. You can optionally delete only the read replicas, while retaining the primary cluster.</p> <p>When you receive a successful response from this action, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this action.</p>"
    },
    "DeleteSnapshot":{
      "name":"DeleteSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DeleteSnapshotMessage",
        "documentation":"<p>Represents the input of a <i>DeleteSnapshot</i> action.</p>"
      },
      "output":{
        "shape":"DeleteSnapshotResult",
        "wrapper":true,
        "documentation":"<p>Represents a copy of an entire cache cluster as of the time when the snapshot was taken.</p>",
        "resultWrapper":"DeleteSnapshotResult"
      },
      "errors":[
        {
          "shape":"SnapshotNotFoundFault",
          "error":{
            "code":"SnapshotNotFoundFault",
            "httpStatusCode":404,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The requested snapshot name does not refer to an existing snapshot.</p>"
        },
        {
          "shape":"InvalidSnapshotStateFault",
          "error":{
            "code":"InvalidSnapshotState",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The current state of the snapshot does not allow the requested action to occur.</p>"
        },
        {
          "shape":"InvalidParameterValueException",
          "error":{
            "code":"InvalidParameterValue",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>The value for a parameter is invalid.</p>"
        },
        {
          "shape":"InvalidParameterCombinationException",
          "error":{
            "code":"InvalidParameterCombination",
            "httpStatusCode":400,
            "senderFault":true
          },
          "exception":true,
          "documentation":"<p>Two or more incompatible parameters were specified.</p>"
        }
      ],
      "documentation":"<p>The <i>DeleteSnapshot</i> action deletes an existing snapshot. When you receive a successful response from this action, ElastiCache immediately begins deleting the snapshot; you cannot cancel or revert this action.</p>"
    },
    "DescribeCacheClusters":{
      "name":"DescribeCacheClusters",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{
        "shape":"DescribeCacheClustersMessage",
        "documentation":"<p>Represents the input of a <i>DescribeCacheClusters</i> action.</p>"
      },
      "output":{
        "shape":"CacheClusterMessage",
        "documentation":"<p>Represents the output of a <i>DescribeCacheClusters</i> action.</p>",
        "resultWrapper":"DescribeCacheClustersResult"
      },
      "errors":[
        {
          "shape":"CacheClusterNotFoundFault",
          "error":{
            "code":"CacheClusterNotFound",
            "httpStatusCode":404,
            "senderFault"