h session, where the current session is marked with an
asterisk\&.  With \fB\-o\fP, it will switch to the most recent previous session\&.
.PP
With \fB\-d\fP, the given session (or else the current one) is removed;
everything to do with it is completely forgotten\&.  If it was the only
session, a new session called `\fBdefault\fP\&' is created and made current\&.
It is safest not to delete sessions while background commands using
\fBzftp\fP are active\&.
.RE
.TP
\fBzftransfer\fP \fIsess1\fP\fB:\fP\fIfile1\fP \fIsess2\fP\fB:\fP\fIfile2\fP
Transfer files between two sessions; no local copy is made\&.  The file
is read from the session \fIsess1\fP as \fIfile1\fP and written to session
\fIsess2\fP as file \fIfile2\fP; \fIfile1\fP and \fIfile2\fP may be relative to
the current directories of the session\&.  Either \fIsess1\fP or \fIsess2\fP
may be omitted (though the colon should be retained if there is a
possibility of a colon appearing in the file name) and defaults to the
current session; \fIfile2\fP may be omitted or may end with a slash, in
which case the basename of \fIfile1\fP will be added\&.  The sessions
\fIsess1\fP and \fIsess2\fP must be distinct\&.
.RS
.PP
The operation is performed using pipes, so it is required that the
connections still be valid in a subshell, which is not the case under 
versions of some operating systems, presumably due to a system bug\&.
.RE
.PP
.SS "Bookmarks"
The two functions \fBzfmark\fP and \fBzfgoto\fP allow you to `bookmark\&' the
present location (host, user and directory) of the current FTP connection
for later use\&.  The file to be used for storing and retrieving bookmarks is
given by the parameter \fB$ZFTP_BMFILE\fP; if not set when one of the two
functions is called, it will be set to the file \fB\&.zfbkmarks\fP in the
directory where your zsh startup files live (usually \fB~\fP)\&.
.PP
.PD 0
.TP
.PD
\fBzfmark\fP [ \fIbookmark\fP ]
If given an argument, mark the current host, user and directory under the
name \fIbookmark\fP for later use by \fBzfgoto\fP\&.  If there is no connection
open, use the values for the last connection immediately before it was
closed; it is an error if there was none\&.  Any existing bookmark
under the same name will be silently replaced\&.
.RS
.PP
If not given an argument, list the existing bookmarks and the points to
which they refer in the form \fIuser\fP\fB@\fP\fIhost\fP\fB:\fP\fIdirectory\fP;
this is the format in which they are stored, and the file may be edited
directly\&.
.RE
.TP
\fBzfgoto\fP [ \fB\-n\fP ] \fIbookmark\fP
Return to the location given by \fIbookmark\fP, as previously set by
\fBzfmark\fP\&.  If the location has user `\fBftp\fP\&' or `\fBanonymous\fP', open
the connection with \fBzfanon\fP, so that no password is required\&.  If the
user and host parameters match those stored for the current session, if
any, those will be used, and again no password is required\&.  Otherwise a
password will be prompted for\&.
.RS
.PP
With the option \fB\-n\fP, the bookmark is taken to be a nickname stored by
the \fBncftp\fP program in its bookmark file, which is assumed to be
\fB~/\&.ncftp/bookmarks\fP\&.  The function works identically in other ways\&.
Note that there is no mechanism for adding or modifying \fBncftp\fP bookmarks
from the zftp functions\&.
.RE
.PP
.SS "Other functions"
Mostly, these functions will not be called directly (apart from
\fBzfinit\fP), but are described here for completeness\&.  You may wish to
alter \fBzftp_chpwd\fP and \fBzftp_progress\fP, in particular\&.
.PP
.PD 0
.TP
.PD
\fBzfinit\fP [ \fB\-n\fP ]
As described above, this is used to initialize the zftp function system\&.
The \fB\-n\fP option should be used if the zftp command is already built into
the shell\&.
.TP
\fBzfautocheck\fP [ \fB\-dn\fP ]
This function is called to implement automatic reopening behaviour, as
described in more detail below\&.  The options must appear in the first
argument; \fB\-n\fP prevents the command from changing to the old directory,
while \fB\-d\fP prevents it from setting the variable \fBdo_close\fP, which it
otherwise does as a flag for automatically closing the connection after a
transfer\&.  The host and directory for the last session are stored in the
variable \fB$zflastsession\fP, but the internal host/user/password parameters
must also be correctly set\&.
.TP
\fBzfcd_match \fIprefix\fP \fIsuffix\fP\fP
This performs matching for completion of remote directory names\&.  If the
remote server is UNIX, it will attempt to persuade the server to list the
remote directory with subdirectories marked, which usually works but is not
guaranteed\&.  On other hosts it simply calls \fBzfget_match\fP and hence
completes all files, not just directories\&.  On some systems, directories
may not even look like filenames\&.
.TP
\fBzfget_match \fIprefix\fP \fIsuffix\fP\fP
This performs matching for completion of remote filenames\&.  It caches files
for the current directory (only) in the shell parameter \fB$zftp_fcache\fP\&.
It is in the form to be called by the \fB\-K\fP option of \fBcompctl\fP, but
also works when called from a widget\-style completion function with
\fIprefix\fP and \fIsuffix\fP set appropriately\&.
.TP
\fBzfrglob \fIvarname\fP\fP
Perform remote globbing, as describes in more detail below\&.  \fIvarname\fP
is the name of a variable containing the pattern to be expanded; if there
were any matches, the same variable will be set to the expanded set of
filenames on return\&.
.TP
\fBzfrtime\fP \fIlfile\fP \fIrfile\fP [ \fItime\fP ]
Set the local file \fIlfile\fP to have the same modification time as the
remote file \fIrfile\fP, or the explicit time \fItime\fP in FTP format
\fBCCYYMMDDhhmmSS\fP for the GMT timezone\&.  This uses the shell\&'s
\fBzsh/datetime\fP module to perform the conversion from
GMT to local time\&.
.TP
\fBzftp_chpwd\fP
This function is called every time a connection is opened, or closed, or
the remote directory changes\&.  This version alters the title bar of an
\fBxterm\fP\-compatible or \fBsun\-cmd\fP terminal emulator to reflect the 
local and remote hostnames and current directories\&.  It works best when
combined with the function \fBchpwd\fP\&.  In particular, a function of 
the form
.RS
.PP
.RS
.nf
\fBchpwd() {
  if [[ \-n $ZFTP_USER ]]; then
    zftp_chpwd
  else
    # usual chpwd e\&.g put host:directory in title bar
  fi
}\fP
.fi
.RE
.PP
fits in well\&.
.RE
.TP
\fBzftp_progress\fP
This function shows the status of the transfer\&.  It will not write anything
unless the output is going to a terminal; however, if you transfer files in
the background, you should turn off progress reports by hand using
`\fBzstyle \&':zftp:*' progress none\fP'\&.  Note also that if you alter it, any
output \fImust\fP be to standard error, as standard output may be a file
being received\&.  The form of the progress meter, or whether it is used at
all, can be configured without altering the function, as described in the
next section\&.
.TP
\fBzffcache\fP
This is used to implement caching of files in the current directory for
each session separately\&.  It is used by \fBzfget_match\fP and \fBzfrglob\fP\&.
.PP
.SH "MISCELLANEOUS FEATURES"
.PP
.SS "Configuration"
.PP
Various styles are available using the standard shell style mechanism,
described in
\fIzshmodules\fP(1)\&. Briefly, the
command `\fBzstyle \&':zftp:*'\fP \fIstyle\fP \fIvalue\fP \&.\&.\&.'\&.
defines the \fIstyle\fP to have value \fIvalue\fP; more than one value may be
given, although that is not useful in the cases described here\&.  These
values will then be used throughout the zftp function system\&.  For more
precise control, the first argument, which gives a context in which the
style applies, can be modified to include a particular function, as for
example `\fB:zftp:zfget\fP\&': the style will then have the given value only
in the \fBzfget\fP function\&.  Values for the same style in different contexts
may be set; the most specific function will be used, where
strings are held to be more specific than patterns, and longer patterns and
shorter patterns\&.  Note that only the top level function name, as called by
the user, is used; calling of lower level functions is transparent to the
user\&.  Hence modifications to the title bar in \fBzftp_chpwd\fP use the
contexts \fB:zftp:zfopen\fP, \fB:zftp:zfcd\fP, etc\&., depending where it was
called from\&.  The following styles are understood:
.PP
.PD 0
.TP
.PD
\fBprogress\fP
Controls the way that \fBzftp_progress\fP reports on the progress of a
transfer\&.  If empty, unset, or `\fBnone\fP\&', no progress report is made; if
`\fBbar\fP\&' a growing bar of inverse video is shown; if `\fBpercent\fP' (or any
other string, though this may change in future), the percentage of the file
transferred is shown\&.  The bar meter requires that the width of the
terminal be available via the \fB$COLUMNS\fP parameter (normally this is set
automatically)\&.  If the size of the file being transferred is not
available, \fBbar\fP and \fBpercent\fP meters will simply show the number of
bytes transferred so far\&.
.RS
.PP
When \fBzfinit\fP is run, if this style is not defined for the context
\fB:zftp:*\fP, it will be set to `bar\&'\&.
.RE
.TP
\fBupdate\fP
Specifies the minimum time interval between updates of the progress meter
in seconds\&.  No update is made unless new data has been received, so the
actual time interval is limited only by \fB$ZFTP_TIMEOUT\fP\&.
.RS
.PP
As described for \fBprogress\fP, \fBzfinit\fP will force this to default to 1\&.
.RE
.TP
\fBremote\-glob\fP
If set to `\fB1\fP\&', `\fByes\fP' or `\fBtrue\fP', filename generation (globbing) is
performed on the remote machine instead of by zsh itself; see below\&.
.TP
\fBtitlebar\fP
If set to `\fB1\fP\&', `\fByes\fP' or `\fBtrue\fP', \fBzftp_chpwd\fP will put the remote host and
remote directory into the titlebar of terminal emulators such as xterm or
sun\-cmd that allow this\&.
.RS
.PP
As described for \fBprogress\fP, \fBzfinit\fP will force this to default to 1\&.
.RE
.TP
\fBchpwd\fP
If set to `\fB1\fP\&' `\fByes\fP' or `\fBtrue\fP', \fBzftp_chpwd\fP will call the function
\fBchpwd\fP when a connection is closed\&.  This is useful if the remote host
details were put into the terminal title bar by \fBzftp_chpwd\fP and your
usual \fBchpwd\fP also modifies the title bar\&.
.RS
.PP
When \fBzfinit\fP is run, it will determine whether \fBchpwd\fP exists and if
so it will set the default value for the style to 1 if none exists
already\&.
.RE
.PP
Note that there is also an associative array \fBzfconfig\fP which contains
values used by the function system\&.  This should not be modified or
overwritten\&.
.PP
.SS "Remote globbing"
.PP
The commands for retrieving files usually perform filename generation
(globbing) on their arguments; this can be turned off by passing the option
\fB\-G\fP to each of the commands\&.  Normally this operates by retrieving a
complete list of files for the directory in question, then matching these
locally against the pattern supplied\&.  This has the advantage that the full
range of zsh patterns (respecting the setting of the option
\fBEXTENDED_GLOB\fP) can be used\&.  However, it means that the directory part
of a filename will not be expanded and must be given exactly\&.  If the
remote server does not support the UNIX directory semantics, directory
handling is problematic and it is recommended that globbing only be used
within the current directory\&.  The list of files in the current directory,
if retrieved, will be cached, so that subsequent globs in the same
directory without an intervening \fBzfcd\fP are much faster\&.
.PP
If the \fBremote\-glob\fP style (see above) is set, globbing is instead
performed on the remote host: the server is asked for a list of matching
files\&.  This is highly dependent on how the server is implemented, though
typically UNIX servers will provide support for basic glob patterns\&.  This
may in some cases be faster, as it avoids retrieving the entire list of
directory contents\&.
.PP
.SS "Automatic and temporary reopening"
.PP
As described for the \fBzfopen\fP command, a subsequent \fBzfopen\fP with no
parameters will reopen the connection to the last host (this includes
connections made with the \fBzfanon\fP command)\&.  Opened in this fashion, the
connection starts in the default remote directory and will remain open
until explicitly closed\&.
.PP
Automatic re\-opening is also available\&.  If a connection is not currently
open and a command requiring a connection is given, the last connection is
implicitly reopened\&.  In this case the directory which was current when the
connection was closed again becomes the current directory (unless, of
course, the command given changes it)\&.  Automatic reopening will also take
place if the connection was close by the remote server for whatever reason
(e\&.g\&. a timeout)\&.  It is not available if the \fB\-1\fP option to \fBzfopen\fP
or \fBzfanon\fP was used\&.
.PP
Furthermore, if the command issued is a file transfer, the connection will
be closed after the transfer is finished, hence providing a one\-shot mode
for transfers\&.  This does not apply to directory changing or listing
commands; for example a \fBzfdir\fP may reopen a connection but will leave it
open\&.  Also, automatic closure will only ever happen in the same command as
automatic opening, i\&.e a \fBzfdir\fP directly followed by a \fBzfget\fP will
never close the connection automatically\&.
.PP
Information about the previous connection is given by the \fBzfstat\fP
function\&.  So, for example, if that reports:
.PP
.RS
.nf
\fBSession:        default
Not connected\&.
Last session:   ftp\&.bar\&.com:/pub/textfiles\fP
.fi
.RE
.PP
then the command \fBzfget file\&.txt\fP will attempt to reopen a connection to
\fBftp\&.bar\&.com\fP, retrieve the file \fB/pub/textfiles/file\&.txt\fP, and
immediately close the connection again\&.  On the other hand, \fBzfcd \&.\&.\fP
will open the connection in the directory \fB/pub\fP and leave it open\&.
.PP
Note that all the above is local to each session; if you return to a
previous session, the connection for that session is the one which will be
reopened\&.
.PP
.SS "Completion"
.PP
Completion of local and remote files, directories, sessions and bookmarks
is supported\&.  The older, \fBcompctl\fP\-style completion is defined when
\fBzfinit\fP is called; support for the new widget\-based completion system is
provided in the function \fBCompletion/Zsh/Command/_zftp\fP, which should be
installed with the other functions of the completion system and hence
should automatically be available\&.
                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man1/zshzle.1                                     0100644 0001750 0001750 00000306074 12566175311 022270  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .TH "ZSHZLE" "1" "May 31, 2015" "zsh 5\&.0\&.8"
.SH "NAME"
zshzle \- zsh command line editor
.\" Yodl file: Zsh/zle.yo
.SH "DESCRIPTION"
If the \fBZLE\fP option is set (which it is by default in interactive shells)
and the shell input is attached to the terminal, the user
is able to edit command lines\&.
.PP
There are two display modes\&.  The first, multiline mode, is the
default\&.  It only works if the \fBTERM\fP parameter is set to a valid
terminal type that can move the cursor up\&.  The second, single line
mode, is used if \fBTERM\fP is invalid or incapable of moving the
cursor up, or if the \fBSINGLE_LINE_ZLE\fP option is set\&.
This mode
is similar to \fBksh\fP, and uses no termcap sequences\&.  If \fBTERM\fP is
"emacs", the \fBZLE\fP option will be unset by default\&.
.PP
The parameters \fBBAUD\fP, \fBCOLUMNS\fP, and \fBLINES\fP are also used by the
line editor\&. See
\fIParameters Used By The Shell\fP in \fIzshparam\fP(1)\&.
.PP
The parameter \fBzle_highlight\fP is also used by the line editor; see
\fICharacter Highlighting\fP below\&.  Highlighting
of special characters and the region between the cursor and the
mark (as set with \fBset\-mark\-command\fP in Emacs mode) is enabled
by default; consult this reference for more information\&.  Irascible
conservatives will wish to know that all highlighting may be disabled by
the following setting:
.PP
.RS
.nf
\fBzle_highlight=(none)\fP
.fi
.RE
.PP
In many places, references are made to the \fBnumeric argument\fP\&.  This can
by default be entered in emacs mode by holding the alt key and typing
a number, or pressing escape before each number, and in vi command mode
by typing the number before entering a command\&.  Generally the numeric
argument causes the next command entered to be repeated the specified
number of times, unless otherwise noted below\&. See also
the \fIArguments\fP subsection of the \fIWidgets\fP section for some other ways the numeric argument can be modified\&. The default
bindings mentioned here use the \fBdigit\-argument\fP widget\&.
.PP
.PP
.SH "KEYMAPS"
A keymap in ZLE contains a set of bindings between key sequences
and ZLE commands\&.  The empty key sequence cannot be bound\&.
.PP
There can be any number of keymaps at any time, and each keymap has one
or more names\&.  If all of a keymap\&'s names are deleted, it disappears\&.
\fBbindkey\fP can be used to manipulate keymap names\&.
.PP
Initially, there are eight keymaps:
.PP
.PD 0
.TP
\fBemacs\fP
EMACS emulation
.TP
\fBviins\fP
vi emulation \- insert mode
.TP
\fBvicmd\fP
vi emulation \- command mode
.TP
\fBviopp\fP
vi emulation \- operator pending
.TP
\fBvisual\fP
vi emulation \- selection active
.TP
\fBisearch\fP
incremental search mode
.TP
\fBcommand\fP
read a command name
.TP
\fB\&.safe\fP
fallback keymap
.PD
.PP
The `\fB\&.safe\fP\&' keymap is special\&.  It can never be altered, and the name
can never be removed\&.  However, it can be linked to other names, which can
be removed\&.  In the future other special keymaps may be added; users should
avoid using names beginning with `\fB\&.\fP\&' for their own keymaps\&.
.PP
In addition to these names, either `\fBemacs\fP\&' or `\fBviins\fP' is
also linked to the name `\fBmain\fP\&'\&.  If one of the \fBVISUAL\fP or
\fBEDITOR\fP environment variables contain the string `\fBvi\fP\&' when the shell
starts up then it will be `\fBviins\fP\&', otherwise it will be `\fBemacs\fP'\&.
\fBbindkey\fP\&'s \fB\-e\fP and \fB\-v\fP
options provide a convenient way to override this default choice\&.
.PP
When the editor starts up, it will select the `\fBmain\fP\&' keymap\&.
If that keymap doesn\&'t exist, it will use `\fB\&.safe\fP' instead\&.
.PP
In the `\fB\&.safe\fP\&' keymap, each single key is bound to \fBself\-insert\fP,
except for ^J (line feed) and ^M (return) which are bound to \fBaccept\-line\fP\&.
This is deliberately not pleasant to use; if you are using it, it
means you deleted the main keymap, and you should put it back\&.
.SS "Reading Commands"
When ZLE is reading a command from the terminal, it may read a sequence
that is bound to some command and is also a prefix of a longer bound string\&.
In this case ZLE will wait a certain time to see if more characters
are typed, and if not (or they don\&'t match any longer string) it will
execute the binding\&.  This timeout is defined by the \fBKEYTIMEOUT\fP parameter;
its default is 0\&.4 sec\&.  There is no timeout if the prefix string is not
itself bound to a command\&.
.PP
The key timeout is also applied when ZLE is reading the bytes from a
multibyte character string when it is in the appropriate mode\&.  (This
requires that the shell was compiled with multibyte mode enabled; typically
also the locale has characters with the UTF\-8 encoding, although any
multibyte encoding known to the operating system is supported\&.)  If the
second or a subsequent byte is not read within the timeout period, the
shell acts as if \fB?\fP were typed and resets the input state\&.
.PP
As well as ZLE commands, key sequences can be bound to other strings, by using
`\fBbindkey \-s\fP\&'\&.
When such a sequence is read, the replacement string is pushed back as input,
and the command reading process starts again using these fake keystrokes\&.
This input can itself invoke further replacement strings, but in order to
detect loops the process will be stopped if there are twenty such replacements
without a real command being read\&.
.PP
A key sequence typed by the user can be turned into a command name for use
in user\-defined widgets with the \fBread\-command\fP widget, described in
the subsection `Miscellaneous\&' of the section `Standard Widgets' below\&.
.SS "Local Keymaps"
While for normal editing a single keymap is used exclusively, in many
modes a local keymap allows for some keys to be customised\&. For example,
in an incremental search mode, a binding in the \fBisearch\fP keymap will
override a binding in the \fBmain\fP keymap but all keys that are not
overridden can still be used\&.
.PP
If a key sequence is defined in a local keymap, it will hide a key
sequence in the global keymap that is a prefix of that sequence\&. An
example of this occurs with the binding of \fBiw\fP in \fBviopp\fP as this
hides the binding of \fBi\fP in \fBvicmd\fP\&. However, a longer sequence in
the global keymap that shares the same prefix can still apply so for
example the binding of \fB^Xa\fP in the global keymap will be unaffected
by the binding of \fB^Xb\fP in the local keymap\&.
.PP
.SH "ZLE BUILTINS"
The ZLE module contains three related builtin commands\&. The \fBbindkey\fP
command manipulates keymaps and key bindings; the \fBvared\fP command invokes
ZLE on the value of a shell parameter; and the \fBzle\fP command manipulates
editing widgets and allows command line access to ZLE commands from within
shell functions\&.
.PP
.PD 0
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-l\fP [ \fB\-L\fP ] [ \fIkeymap\fP \&.\&.\&. ]
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-d\fP
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-D\fP \fIkeymap\fP \&.\&.\&.
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-A\fP \fIold\-keymap new\-keymap\fP
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-N\fP \fInew\-keymap\fP [ \fIold\-keymap\fP ]
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-m\fP
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-r\fP \fIin\-string\fP \&.\&.\&.
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fB\-s\fP \fIin\-string out\-string\fP \&.\&.\&.
.TP
.PD 0
\fBbindkey\fP [ \fIoptions\fP ] \fIin\-string command\fP \&.\&.\&.
.TP
.PD
\fBbindkey\fP [ \fIoptions\fP ] [ \fIin\-string\fP ]
\fBbindkey\fP\&'s options can be divided into three categories: keymap
selection for the current command, operation selection, and others\&.  The
keymap selection options are:
.RS
.PP
.PD 0
.TP
.PD
\fB\-e\fP
Selects keymap `\fBemacs\fP\&' for any operations by the current command,
and also links `\fBemacs\fP\&' to `\fBmain\fP' so that it is selected by
default the next time the editor starts\&.
.TP
\fB\-v\fP
Selects keymap `\fBviins\fP\&' for any operations by the current command,
and also links `\fBviins\fP\&' to `\fBmain\fP' so that it is selected by default
the next time the editor starts\&.
.TP
\fB\-a\fP
Selects keymap `\fBvicmd\fP\&' for any operations by the current command\&.
.TP
\fB\-M\fP \fIkeymap\fP
The \fIkeymap\fP specifies a keymap name that is selected for any
operations by the current command\&.
.PP
If a keymap selection is required and none of the options above are used, the
`\fBmain\fP\&' keymap is used\&.  Some operations do not permit a keymap to be
selected, namely:
.PP
.PD 0
.TP
.PD
\fB\-l\fP
List all existing keymap names; if any arguments are given, list just
those keymaps\&.
.RS
.PP
If the \fB\-L\fP option is also used, list in the form of \fBbindkey\fP
commands to create or link the keymaps\&.  `\fBbindkey \-lL
main\fP\&' shows which keymap is linked to `\fBmain\fP', if any, and hence if
the standard emacs or vi emulation is in effect\&.  This option does
not show the \fB\&.safe\fP keymap because it cannot be created in that
fashion; however, neither is `\fBbindkey \-lL \&.safe\fP\&' reported as an
error, it simply outputs nothing\&.
.RE
.TP
\fB\-d\fP
Delete all existing keymaps and reset to the default state\&.
.TP
\fB\-D\fP \fIkeymap\fP \&.\&.\&.
Delete the named \fIkeymap\fPs\&.
.TP
\fB\-A\fP \fIold\-keymap new\-keymap\fP
Make the \fInew\-keymap\fP name an alias for \fIold\-keymap\fP, so that
both names refer to the same keymap\&.  The names have equal standing;
if either is deleted, the other remains\&.  If there is already a keymap
with the \fInew\-keymap\fP name, it is deleted\&.
.TP
\fB\-N\fP \fInew\-keymap\fP [ \fIold\-keymap\fP ]
Create a new keymap, named \fInew\-keymap\fP\&.  If a keymap already has that
name, it is deleted\&.  If an \fIold\-keymap\fP name is given, the new keymap
is initialized to be a duplicate of it, otherwise the new keymap will
be empty\&.
.PP
To use a newly created keymap, it should be linked to \fBmain\fP\&.  Hence
the sequence of commands to create and use a new keymap `\fBmymap\fP\&'
initialized from the \fBemacs\fP keymap (which remains unchanged) is:
.PP
.RS
.nf
\fBbindkey \-N mymap emacs
bindkey \-A mymap main\fP
.fi
.RE
.PP
Note that while `\fBbindkey \-A\fP \fInewmap\fP \fBmain\fP\&' will work when
\fInewmap\fP is \fBemacs\fP or \fBviins\fP, it will not work for \fBvicmd\fP, as
switching from vi insert to command mode becomes impossible\&.
.PP
The following operations act on the `\fBmain\fP\&' keymap if no keymap
selection option was given:
.PP
.PD 0
.TP
.PD
\fB\-m\fP
Add the built\-in set of meta\-key bindings to the selected keymap\&.
Only keys that are unbound or bound to \fBself\-insert\fP are affected\&.
.TP
\fB\-r\fP \fIin\-string\fP \&.\&.\&.
Unbind the specified \fIin\-string\fPs in the selected keymap\&.
This is exactly equivalent to binding the strings to \fBundefined\-key\fP\&.
.RS
.PP
When \fB\-R\fP is also used, interpret the \fIin\-string\fPs as ranges\&.
.PP
When \fB\-p\fP is also used, the \fIin\-string\fPs specify prefixes\&.  Any
binding that has the given \fIin\-string\fP as a prefix, not including the
binding for the \fIin\-string\fP itself, if any, will be removed\&.  For
example,
.PP
.RS
.nf
\fBbindkey \-rpM viins \&'^['\fP
.fi
.RE
.PP
will remove all bindings in the vi\-insert keymap beginning with an escape
character (probably cursor keys), but leave the binding for the escape
character itself (probably \fBvi\-cmd\-mode\fP)\&.  This is incompatible with the
option \fB\-R\fP\&.
.RE
.TP
\fB\-s\fP \fIin\-string out\-string\fP \&.\&.\&.
Bind each \fIin\-string\fP to each \fIout\-string\fP\&.
When \fIin\-string\fP is typed, \fIout\-string\fP will be
pushed back and treated as input to the line editor\&.
When \fB\-R\fP is also used, interpret the \fIin\-string\fPs as ranges\&.
.RS
.PP
Note that both \fIin\-string\fP and \fIout\-string\fP are subject to the same
form of interpretation, as described below\&.
.RE
.TP
\fIin\-string command\fP \&.\&.\&.
Bind each \fIin\-string\fP to each \fIcommand\fP\&.
When \fB\-R\fP is used, interpret the \fIin\-string\fPs as ranges\&.
.TP
[ \fIin\-string\fP ]
List key bindings\&.  If an \fIin\-string\fP is specified, the binding of
that string in the selected keymap is displayed\&.  Otherwise, all key
bindings in the selected keymap are displayed\&.  (As a special case,
if the \fB\-e\fP or \fB\-v\fP option is used alone, the keymap is \fInot\fP
displayed \- the implicit linking of keymaps is the only thing that
happens\&.)
.RS
.PP
When the option \fB\-p\fP is used, the \fIin\-string\fP must be present\&.
The listing shows all bindings which have the given key sequence as a
prefix, not including any bindings for the key sequence itself\&.
.PP
When the \fB\-L\fP option is used, the list is in the form of \fBbindkey\fP
commands to create the key bindings\&.
.RE
.PP
When the \fB\-R\fP option is used as noted above, a valid range consists of
two characters, with an optional `\fB\-\fP\&' between them\&.  All characters
between the two specified, inclusive, are bound as specified\&.
.PP
For either \fIin\-string\fP or \fIout\-string\fP, the following
escape sequences are recognised:
.PP
.PD 0
.TP
\fB\ea\fP
bell character
.TP
\fB\eb\fP
backspace
.TP
\fB\ee\fP, \fB\eE\fP
escape
.TP
\fB\ef\fP
form feed
.TP
\fB\en\fP
linefeed (newline)
.TP
\fB\er\fP
carriage return
.TP
\fB\et\fP
horizontal tab
.TP
\fB\ev\fP
vertical tab
.TP
\fB\e\fP\fINNN\fP
character code in octal
.TP
\fB\ex\fP\fINN\fP
character code in hexadecimal
.TP
\fB\eu\fP\fINNNN\fP
unicode character code in hexadecimal
.TP
\fB\eU\fP\fINNNNNNNN\fP
unicode character code in hexadecimal
.TP
\fB\eM\fP[\fB\-\fP]\fIX\fP
character with meta bit set
.TP
\fB\eC\fP[\fB\-\fP]\fIX\fP
control character
.TP
\fB^\fP\fIX\fP
control character
.PD
.PP
In all other cases, `\fB\e\fP\&' escapes the following character\&.  Delete is
written as `\fB^?\fP\&'\&.  Note that `\fB\eM^?\fP' and `\fB^\eM?\fP' are not the same,
and that (unlike emacs), the bindings `\fB\eM\-\fP\fIX\fP\&' and `\fB\ee\fP\fIX\fP'
are entirely distinct, although they are initialized to the same bindings
by `\fBbindkey \-m\fP\&'\&.
.RE

.TP
.PD 0
\fBvared \fP[ \fB\-Aache\fP ] [ \fB\-p\fP \fIprompt\fP ] [ \fB\-r\fP \fIrprompt\fP ]
.TP
.PD 0
\fB      \fP[ \fB\-M\fP \fImain\-keymap\fP ] [ \fB\-m\fP \fIvicmd\-keymap\fP ]
.TP
.PD 0
\fB      \fP[ \fB\-i\fP \fIinit\-widget\fP ] [ \fB\-f\fP \fIfinish\-widget\fP ]
.TP
.PD
\fB      \fP[ \fB\-t\fP \fItty\fP ] \fIname\fP
The value of the parameter \fIname\fP is loaded into the edit
buffer, and the line editor is invoked\&.  When the editor exits,
\fIname\fP is set to the string value returned by the editor\&.
When the \fB\-c\fP flag is given, the parameter is created if it doesn\&'t
already exist\&.  The \fB\-a\fP flag may be given with \fB\-c\fP to create
an array parameter, or the \fB\-A\fP flag to create an associative array\&.
If the type of an existing parameter does not match the type to be
created, the parameter is unset and recreated\&.
.RS
.PP
If an array or array slice is being edited, separator characters as defined
in \fB$IFS\fP will be shown quoted with a backslash, as will backslashes
themselves\&.  Conversely, when the edited text is split into an array, a
backslash quotes an immediately following separator character or backslash;
no other special handling of backslashes, or any handling of quotes, is
performed\&.
.PP
Individual elements of existing array or associative array parameters
may be edited by using subscript syntax on \fIname\fP\&.  New elements are
created automatically, even without \fB\-c\fP\&.
.PP
If the \fB\-p\fP flag is given, the following string will be taken as
the prompt to display at the left\&.  If the \fB\-r\fP flag is given,
the following string gives the prompt to display at the right\&.  If the
\fB\-h\fP flag is specified, the history can be accessed from ZLE\&. If the
\fB\-e\fP flag is given, typing \fB^D\fP (Control\-D) on an empty line
causes \fBvared\fP to exit immediately with a non\-zero return value\&.
.PP
The \fB\-M\fP option gives a keymap to link to the \fBmain\fP keymap during
editing, and the \fB\-m\fP option gives a keymap to link to the \fBvicmd\fP
keymap during editing\&.  For vi\-style editing, this allows a pair of keymaps
to override \fBviins\fP and \fBvicmd\fP\&.  For emacs\-style editing, only \fB\-M\fP
is normally needed but the \fB\-m\fP option may still be used\&.  On exit, the
previous keymaps will be restored\&.
.PP
\fBVared\fP calls the usual `\fBzle\-line\-init\fP\&' and `\fBzle\-line\-finish\fP'
hooks before and after it takes control\&. Using the \fB\-i\fP and \fB\-f\fP
options, it is possible to replace these with other custom widgets\&.
.PP
If `\fB\-t\fP \fItty\fP\&' is given, \fItty\fP is the name of a terminal device
to be used instead of the default \fB/dev/tty\fP\&.  If \fItty\fP does not
refer to a terminal an error is reported\&.
.RE
.TP
.PD 0
\fBzle\fP
.TP
.PD 0
\fBzle\fP \fB\-l\fP [ \fB\-L\fP | \fB\-a\fP ] [ \fIstring\fP \&.\&.\&. ]
.TP
.PD 0
\fBzle\fP \fB\-D\fP \fIwidget\fP \&.\&.\&.
.TP
.PD 0
\fBzle\fP \fB\-A\fP \fIold\-widget\fP \fInew\-widget\fP
.TP
.PD 0
\fBzle\fP \fB\-N\fP \fIwidget\fP [ \fIfunction\fP ]
.TP
.PD 0
\fBzle\fP \fB\-C\fP \fIwidget\fP \fIcompletion\-widget\fP \fIfunction\fP
.TP
.PD 0
\fBzle\fP \fB\-R\fP [ \fB\-c\fP ] [ \fIdisplay\-string\fP ] [ \fIstring\fP \&.\&.\&. ]
.TP
.PD 0
\fBzle\fP \fB\-M\fP \fIstring\fP
.TP
.PD 0
\fBzle\fP \fB\-U\fP \fIstring\fP
.TP
.PD 0
\fBzle\fP \fB\-K\fP \fIkeymap\fP
.TP
.PD 0
\fBzle\fP \fB\-F\fP [ \fB\-L\fP | \fB\-w\fP ] [ \fIfd\fP [ \fIhandler\fP ] ]
.TP
.PD 0
\fBzle\fP \fB\-I\fP
.TP
.PD 0
\fBzle\fP \fB\-T\fP [ \fBtc\fP \fIfunction\fP | \fB\-r\fP \fBtc\fP | \fB\-L\fP ] 
.TP
.PD
\fBzle\fP \fIwidget\fP [ \fB\-n\fP \fInum\fP ] [ \fB\-Nw\fP ] [ \fB\-K\fP \fIkeymap\fP ] \fIargs\fP \&.\&.\&.
The \fBzle\fP builtin performs a number of different actions concerning
ZLE\&.
.RS
.PP
With no options and no arguments, only the return status will be
set\&.  It is zero if ZLE is currently active and widgets could be
invoked using this builtin command and non\-zero otherwise\&.
Note that even if non\-zero status is returned, zle may still be active as
part of the completion system; this does not allow direct calls to ZLE
widgets\&.
.PP
Otherwise, which operation it performs depends on its options:
.PP
.PD 0
.TP
.PD
\fB\-l\fP [ \fB\-L\fP | \fB\-a\fP ] [ \fIstring\fP ]
List all existing user\-defined widgets\&.  If the \fB\-L\fP
option is used, list in the form of \fBzle\fP
commands to create the widgets\&.
.RS
.PP
When combined with the \fB\-a\fP option, all widget names are listed,
including the builtin ones\&. In this case the \fB\-L\fP option is ignored\&.
.PP
If at least one \fIstring\fP is given, and \fB\-a\fP is present or \fB\-L\fP is
not used, nothing will be printed\&.  The return status will be zero if
all \fIstring\fPs are names of existing widgets and non\-zero if at least one
\fIstring\fP is not a name of a defined widget\&.  If \fB\-a\fP is also
present, all widget names are used for the comparison including builtin
widgets, else only user\-defined widgets are used\&.
.PP
If at least one \fIstring\fP is present and the \fB\-L\fP option is used,
user\-defined widgets matching any \fIstring\fP are listed in the form of
\fBzle\fP commands to create the widgets\&.
.RE
.TP
\fB\-D\fP \fIwidget\fP \&.\&.\&.
Delete the named \fIwidget\fPs\&.
.TP
\fB\-A\fP \fIold\-widget\fP \fInew\-widget\fP
Make the \fInew\-widget\fP name an alias for \fIold\-widget\fP, so that
both names refer to the same widget\&.  The names have equal standing;
if either is deleted, the other remains\&.  If there is already a widget
with the \fInew\-widget\fP name, it is deleted\&.
.TP
\fB\-N\fP \fIwidget\fP [ \fIfunction\fP ]
Create a user\-defined widget\&.  If there is already a widget with the
specified name, it is overwritten\&.  When the new
widget is invoked from within the editor, the specified shell \fIfunction\fP
is called\&.  If no function name is specified, it defaults to
the same name as the widget\&.  For further information, see
the section `Widgets\&' below\&.
.TP
\fB\-C\fP \fIwidget\fP \fIcompletion\-widget\fP \fIfunction\fP
Create a user\-defined completion widget named \fIwidget\fP\&. The 
completion widget will behave like the built\-in completion\-widget
whose name is given as \fIcompletion\-widget\fP\&. To generate the
completions, the shell function \fIfunction\fP will be called\&.
For further information, see
\fIzshcompwid\fP(1)\&.
.TP
\fB\-R\fP [ \fB\-c\fP ] [ \fIdisplay\-string\fP ] [ \fIstring\fP \&.\&.\&. ]
Redisplay the command line; this is to be called from within a user\-defined
widget to allow changes to become visible\&.  If a \fIdisplay\-string\fP is
given and not empty, this is shown in the status line (immediately
below the line being edited)\&.
.RS
.PP
If the optional \fIstring\fPs are given they are listed below the
prompt in the same way as completion lists are printed\&. If no
\fIstring\fPs are given but the \fB\-c\fP option is used such a list is
cleared\&.
.PP
Note that this option is only useful for widgets that do not exit
immediately after using it because the strings displayed will be erased 
immediately after return from the widget\&.
.PP
This command can safely be called outside user defined widgets; if zle is
active, the display will be refreshed, while if zle is not active, the
command has no effect\&.  In this case there will usually be no other
arguments\&.
.PP
The status is zero if zle was active, else one\&.
.RE
.TP
\fB\-M\fP \fIstring\fP
As with the \fB\-R\fP option, the \fIstring\fP will be displayed below the 
command line; unlike the \fB\-R\fP option, the string will not be put into
the status line but will instead be printed normally below the
prompt\&.  This means that the \fIstring\fP will still be displayed after
the widget returns (until it is overwritten by subsequent commands)\&.
.TP
\fB\-U\fP \fIstring\fP
This pushes the characters in the \fIstring\fP onto the input stack of
ZLE\&.  After the widget currently executed finishes ZLE will behave as
if the characters in the \fIstring\fP were typed by the user\&.
.RS
.PP
As ZLE uses a stack, if this option is used repeatedly
the last string pushed onto the stack will be processed first\&.  However,
the characters in each \fIstring\fP will be processed in the order in which
they appear in the string\&.
.RE
.TP
\fB\-K\fP \fIkeymap\fP
Selects the keymap named \fIkeymap\fP\&.  An error message will be displayed if
there is no such keymap\&.
.RS
.PP
This keymap selection affects the interpretation of following keystrokes
within this invocation of ZLE\&.  Any following invocation (e\&.g\&., the next
command line) will start as usual with the `\fBmain\fP\&' keymap selected\&.
.RE
.TP
\fB\-F\fP [ \fB\-L\fP | \fB\-w\fP ] [ \fIfd\fP [ \fIhandler\fP ] ]
Only available if your system supports one of the `poll\&' or `select' system
calls; most modern systems do\&.
.RS
.PP
Installs \fIhandler\fP (the name of a shell function) to handle input from
file descriptor \fIfd\fP\&.  Installing a handler for an \fIfd\fP which is
already handled causes the existing handler to be replaced\&.  Any number of
handlers for any number of readable file descriptors may be installed\&.
Note that zle makes no attempt to check whether this \fIfd\fP is actually
readable when installing the handler\&.  The user must make their own
arrangements for handling the file descriptor when zle is not active\&.
.PP
When zle is attempting to read data, it will examine both the terminal and
the list of handled \fIfd\fP\&'s\&.  If data becomes available on a handled
\fIfd\fP, zle calls \fIhandler\fP with the fd which is ready for reading
as the first argument\&.  Under normal circumstances this is the only
argument, but if an error was detected, a second argument provides
details: `\fBhup\fP\&' for a disconnect, `\fBnval\fP' for a closed or otherwise
invalid descriptor, or `\fBerr\fP\&' for any other condition\&.  Systems that
support only the `select\&' system call always use `\fBerr\fP'\&.
.PP
If the option \fB\-w\fP is also given, the \fIhandler\fP is instead a line
editor widget, typically a shell function made into a widget using
`\fBzle \-N\fP\&'\&.  In that case \fIhandler\fP can use all the facilities of zle
to update the current editing line\&.  Note, however, that as handling \fIfd\fP
takes place at a low level changes to the display will not automatically
appear; the widget should call `\fBzle \-R\fP\&' to force redisplay\&.  As of this
writing, widget handlers only support a single argument and thus are never
passed a string for error state, so widgets must be prepared to test the
descriptor themselves\&.
.PP
If either type of handler produces output to the terminal, it should call
`\fBzle \-I\fP\&' before doing so (see below)\&.  Handlers should not attempt to
read from the terminal\&.
.PP
If no \fIhandler\fP is given, but an \fIfd\fP is present, any handler for
that \fIfd\fP is removed\&.  If there is none, an error message is printed
and status 1 is returned\&.
.PP
If no arguments are given, or the \fB\-L\fP option is supplied, a list of
handlers is printed in a form which can be stored for later execution\&.
.PP
An \fIfd\fP (but not a \fIhandler\fP) may optionally be given with the \fB\-L\fP
option; in this case, the function will list the handler if any, else
silently return status 1\&.
.PP
Note that this feature should be used with care\&.  Activity on one of the
\fIfd\fP\&'s which is not properly handled can cause the terminal to become
unusable\&.  Removing an \fIfd\fP handler from within a signal trap may cause
unpredictable behavior\&.
.PP
Here is a simple example of using this feature\&.  A connection to a remote
TCP port is created using the ztcp command; see 
the description of the \fBzsh/net/tcp\fP module in \fIzshmodules\fP(1)\&.  Then a handler is installed
which simply prints out any data which arrives on this connection\&.  Note
that `select\&' will indicate that the file descriptor needs handling
if the remote side has closed the connection; we handle that by testing
for a failed read\&.
.PP
.RS
.nf
\fBif ztcp pwspc 2811; then
  tcpfd=$REPLY
  handler() {
    zle \-I
    local line
    if ! read \-r line <&$1; then
      # select marks this fd if we reach EOF,
      # so handle this specially\&.
      print "[Read on fd $1 failed, removing\&.]" >&2
      zle \-F $1
      return 1
    fi
    print \-r \- $line
  }
  zle \-F $tcpfd handler
fi\fP
.fi
.RE
.RE
.TP
\fB\-I\fP
Unusually, this option is most useful outside ordinary widget functions,
though it may be used within if normal output to the terminal is required\&.
It invalidates the current zle display in preparation for output; typically
this will be from a trap function\&.  It has no effect if zle is not
active\&.  When a trap exits, the shell checks to see if the display needs
restoring, hence the following will print output in such a way as not to
disturb the line being edited:
.RS
.PP
.RS
.nf
\fBTRAPUSR1() {
  # Invalidate zle display
  [[ \-o zle ]] && zle \-I
  # Show output
  print Hello
}\fP
.fi
.RE
.PP
In general, the trap function may need to test whether zle is active before
using this method (as shown in the example), since the \fBzsh/zle\fP module
may not even be loaded; if it is not, the command can be skipped\&.
.PP
It is possible to call `\fBzle \-I\fP\&' several times before control is
returned to the editor; the display will only be invalidated the first time
to minimise disruption\&.
.PP
Note that there are normally better ways of manipulating the display from
within zle widgets; see, for example, `\fBzle \-R\fP\&' above\&.
.PP
The returned status is zero if zle was invalidated, even though
this may have been by a previous call to `\fBzle \-I\fP\&' or by a system
notification\&.  To test if a zle widget may be called at this point, execute
\fBzle\fP with no arguments and examine the return status\&.
.RE
.TP
\fB\-T\fP
This is used to add, list or remove internal transformations on the
processing performed by the line editor\&.  It is typically used only for
debugging or testing and is therefore of little interest to the general
user\&.
.RS
.PP
`\fBzle \-T\fP \fItransformation\fP \fIfunc\fP\&' specifies that the
given \fItransformation\fP (see below) is effected by shell function
\fIfunc\fP\&.
.PP
`\fBzle \-Tr\fP \fItransformation\fP\&' removes the given \fItransformation\fP
if it was present (it is not an error if none was)\&.
.PP
`\fBzle \-TL\fP\&' can be used to list all transformations currently in
operation\&.
.PP
Currently the only transformation is \fBtc\fP\&.  This is used instead
of outputting termcap codes to the terminal\&.  When the transformation is
in operation the shell function is passed the termcap code that would be
output as its first argument; if the operation required a numeric
argument, that is passed as a second argument\&.  The function should set
the shell variable \fBREPLY\fP to the transformed termcap code\&.  Typically
this is used to produce some simply formatted version of the code and
optional argument for debugging or testing\&.  Note that this
transformation is not applied to other non\-printing characters such as
carriage returns and newlines\&.
.RE
.TP
\fIwidget\fP [ \fB\-n\fP \fInum\fP ] [ \fB\-Nw\fP ] [ \fB\-K\fP \fIkeymap\fP ] \fIargs\fP \&.\&.\&.
Invoke the specified \fIwidget\fP\&.  This can only be done when ZLE is
active; normally this will be within a user\-defined widget\&.
.RS
.PP
With the options \fB\-n\fP and \fB\-N\fP, the current numeric argument will be
saved and then restored after the call to \fIwidget\fP; `\fB\-n\fP \fInum\fP\&'
sets the numeric argument temporarily to \fInum\fP, while `\fB\-N\fP\&' sets it
to the default, i\&.e\&. as if there were none\&.
.PP
With the option \fB\-K\fP, \fIkeymap\fP will be used as the current keymap
during the execution of the widget\&.  The previous keymap will be
restored when the widget exits\&.
.PP
Normally, calling a widget in this way does not set the special
parameter \fBWIDGET\fP and related parameters, so that the environment
appears as if the top\-level widget called by the user were still
active\&.  With the option \fB\-w\fP, \fBWIDGET\fP and related parameters are set
to reflect the widget being executed by the \fBzle\fP call\&.
.PP
Any further arguments will be passed to the widget; note that as
standard argument handling is performed, any general argument list
should be preceded by \fB\-\fP\fB\-\fP\&.  If it is a shell
function, these are passed down as positional parameters; for builtin
widgets it is up to the widget in question what it does with them\&.
Currently arguments are only handled by the incremental\-search commands,
the \fBhistory\-search\-forward\fP and \fB\-backward\fP and the corresponding
functions prefixed by \fBvi\-\fP, and by \fBuniversal\-argument\fP\&.  No error is
flagged if the command does not use the arguments, or only uses some of
them\&.
.PP
The return status reflects the success or failure of the operation carried
out by the widget, or if it is a user\-defined widget the return status of
the shell function\&.
.PP
A non\-zero return status causes the shell to beep when the widget exits,
unless the \fBBEEP\fP options was unset or the widget was called via the
\fBzle\fP command\&.  Thus if a user defined widget requires an immediate beep,
it should call the \fBbeep\fP widget directly\&.
.RE
.RE
.PP
.SH "WIDGETS"
All actions in the editor are performed by `widgets\&'\&.  A widget's job is
simply to perform some small action\&.  The ZLE commands that key sequences
in keymaps are bound to are in fact widgets\&.  Widgets can be user\-defined
or built in\&.
.PP
The standard widgets built into ZLE are listed in Standard Widgets below\&.
Other built\-in widgets can be defined by other modules (see
\fIzshmodules\fP(1))\&.  Each built\-in widget has two names: its normal canonical name, and the
same name preceded by a `\fB\&.\fP\&'\&.  The `\fB\&.\fP' name is special: it can't be
rebound to a different widget\&.  This makes the widget available even when
its usual name has been redefined\&.
.PP
User\-defined widgets are defined using `\fBzle \-N\fP\&', and implemented
as shell functions\&.  When the widget is executed, the corresponding
shell function is executed, and can perform editing (or other) actions\&.
It is recommended that user\-defined widgets should not have names
starting with `\fB\&.\fP\&'\&.
.SH "USER\-DEFINED WIDGETS"
User\-defined widgets, being implemented as shell functions,
can execute any normal shell command\&.  They can also run other widgets
(whether built\-in or user\-defined) using the \fBzle\fP builtin command\&.
The standard input of the function is closed to prevent external commands
from unintentionally blocking ZLE by reading from the terminal, but
\fBread \-k\fP or \fBread \-q\fP can be used to read characters\&.  Finally,
they can examine and edit the ZLE buffer being edited by
reading and setting the special parameters described below\&.
.PP
These special parameters are always available in widget functions, but
are not in any way special outside ZLE\&.  If they have some normal value
outside ZLE, that value is temporarily inaccessible, but will return
when the widget function exits\&.  These special parameters in fact have
local scope, like parameters created in a function using \fBlocal\fP\&.
.PP
Inside completion widgets and traps called while ZLE is active, these
parameters are available read\-only\&.
.PP
Note that the parameters appear as local to any ZLE widget in
which they appear\&.  Hence if it is desired to override them this needs
to be done within a nested function:
.PP
.RS
.nf
\fBwidget\-function() {
  # $WIDGET here refers to the special variable
  # that is local inside widget\-function
  () {
     # This anonymous nested function allows WIDGET
     # to be used as a local variable\&.  The \-h
     # removes the special status of the variable\&.
     local \-h WIDGET
  }
}\fP
.fi
.RE
.PP
.PD 0
.TP
.PD
\fBBUFFER\fP (scalar)
The entire contents of the edit buffer\&.  If it is written to, the
cursor remains at the same offset, unless that would put it outside the
buffer\&.
.TP
\fBBUFFERLINES\fP (integer)
The number of screen lines needed for the edit buffer currently
displayed on screen (i\&.e\&. without any changes to the preceding
parameters done after the last redisplay); read\-only\&.
.TP
\fBCONTEXT\fP (scalar)
The context in which zle was called to read a line; read\-only\&.  One of
the values:
.RS
.PP
.PD 0
.TP
.PD
\fBstart\fP
The start of a command line (at prompt \fBPS1\fP)\&.
.TP
\fBcont\fP
A continuation to a command line (at prompt \fBPS2\fP)\&.
.TP
\fBselect\fP
In a \fBselect\fP loop\&.
.TP
\fBvared\fP
Editing a variable in \fBvared\fP\&.
.RE
.TP
\fBCURSOR\fP (integer)
The offset of the cursor, within the edit buffer\&.  This is in the range
0 to \fB$#BUFFER\fP, and is by definition equal to \fB$#LBUFFER\fP\&.
Attempts to move the cursor outside the buffer will result in the
cursor being moved to the appropriate end of the buffer\&.
.TP
\fBCUTBUFFER\fP (scalar)
The last item cut using one of the `\fBkill\-\fP\&' commands; the string
which the next yank would insert in the line\&.  Later entries in
the kill ring are in the array \fBkillring\fP\&.  Note that the
command `\fBzle copy\-region\-as\-kill\fP \fIstring\fP\&' can be used to
set the text of the cut buffer from a shell function and cycle the kill
ring in the same way as interactively killing text\&.
.TP
\fBHISTNO\fP (integer)
The current history number\&.  Setting this has the same effect as
moving up or down in the history to the corresponding history line\&.
An attempt to set it is ignored if the line is not stored in the
history\&.  Note this is not the same as the parameter \fBHISTCMD\fP,
which always gives the number of the history line being added to the main
shell\&'s history\&.  \fBHISTNO\fP refers to the line being retrieved within
zle\&.
.TP
\fBKEYMAP\fP (scalar)
The name of the currently selected keymap; read\-only\&.
.TP
\fBKEYS\fP (scalar)
The keys typed to invoke this widget, as a literal string; read\-only\&.
.TP
\fBkillring\fP (array)
The array of previously killed items, with the most recently killed first\&.
This gives the items that would be retrieved by a \fByank\-pop\fP in the
same order\&.  Note, however, that the most recently killed item is in
\fB$CUTBUFFER\fP; \fB$killring\fP shows the array of previous entries\&.
.RS
.PP
The default size for the kill ring is eight, however the length may be
changed by normal array operations\&.  Any empty string in the kill ring is
ignored by the \fByank\-pop\fP command, hence the size of the array
effectively sets the maximum length of the kill ring, while the number of
non\-zero strings gives the current length, both as seen by the user at the
command line\&.
.RE
.TP
\fBLASTABORTEDSEARCH\fP (scalar)
The last search string used by an interactive search that was
aborted by the user (status 3 returned by the search widget)\&.
.TP
\fBLASTSEARCH\fP (scalar)
The last search string used by an interactive search; read\-only\&.
This is set even if the search failed (status 0, 1 or 2 returned
by the search widget), but not if it was aborted by the user\&.
.TP
\fBLASTWIDGET\fP (scalar)
The name of the last widget that was executed; read\-only\&.
.TP
\fBLBUFFER\fP (scalar)
The part of the buffer that lies to the left of the cursor position\&.
If it is assigned to, only that part of the buffer is replaced, and the
cursor remains between the new \fB$LBUFFER\fP and the old \fB$RBUFFER\fP\&.
.TP
\fBMARK\fP (integer)
Like \fBCURSOR\fP, but for the mark\&. With vi\-mode operators that wait for
a movement command to select a region of text, setting \fBMARK\fP allows
the selection to extend in both directions from the the initial cursor
position\&.
.TP
\fBNUMERIC\fP (integer)
The numeric argument\&. If no numeric argument was given, this parameter
is unset\&. When this is set inside a widget function, builtin widgets
called with the \fBzle\fP builtin command will use the value
assigned\&. If it is unset inside a widget function, builtin widgets
called behave as if no numeric argument was given\&.
.TP
\fBPENDING\fP (integer)
The number of bytes pending for input, i\&.e\&. the number of bytes which have
already been typed and can immediately be read\&. On systems where the shell
is not able to get this information, this parameter will always have a
value of zero\&.  Read\-only\&.
.TP
\fBPREBUFFER\fP (scalar)
In a multi\-line input at the secondary prompt, this read\-only parameter
contains the contents of the lines before the one the cursor is
currently in\&.
.TP
\fBPREDISPLAY\fP (scalar)
Text to be displayed before the start of the editable text buffer\&.  This
does not have to be a complete line; to display a complete line, a newline
must be appended explicitly\&.  The text is reset on each new invocation
(but not recursive invocation) of zle\&.
.TP
\fBPOSTDISPLAY\fP (scalar)
Text to be displayed after the end of the editable text buffer\&.  This
does not have to be a complete line; to display a complete line, a newline
must be prepended explicitly\&.  The text is reset on each new invocation
(but not recursive invocation) of zle\&.
.TP
\fBRBUFFER\fP (scalar)
The part of the buffer that lies to the right of the cursor position\&.
If it is assigned to, only that part of the buffer is replaced, and the
cursor remains between the old \fB$LBUFFER\fP and the new \fB$RBUFFER\fP\&.
.TP
\fBREGION_ACTIVE\fP (integer)
Indicates if the region is currently active\&.  It can be assigned 0 or 1
to deactivate and activate the region respectively\&. A value of 2
activates the region in line\-wise mode with the highlighted text
extending for whole lines only; see
\fICharacter Highlighting\fP below\&.
.TP
\fBregion_highlight\fP (array)
Each element of this array may be set to a string that describes
highlighting for an arbitrary region of the command line that will
take effect the next time the command line is redisplayed\&.  Highlighting
of the non\-editable parts of the command line in \fBPREDISPLAY\fP
and \fBPOSTDISPLAY\fP are possible, but note that the \fBP\fP flag
is needed for character indexing to include \fBPREDISPLAY\fP\&.
.RS
.PP
Each string consists of the following parts:
.PP
.PD 0
.TP
.PD
\(bu
Optionally, a `\fBP\fP\&' to signify that the start and end offset that
follow include any string set by the \fBPREDISPLAY\fP special parameter;
this is needed if the predisplay string itself is to be highlighted\&.
Whitespace may follow the `\fBP\fP\&'\&.
.TP
\(bu
A start offset in the same units as \fBCURSOR\fP, terminated by
whitespace\&.
.TP
\(bu
An end offset in the same units as \fBCURSOR\fP, terminated by
whitespace\&.
.TP
\(bu
A highlight specification in the same format as
used for contexts in the parameter \fBzle_highlight\fP, see
the section `Character Highlighting\&' below;
for example, \fBstandout\fP or \fBfg=red,bold\fP
.PP
For example, 
.PP
.RS
.nf
\fBregion_highlight=("P0 20 bold")\fP
.fi
.RE
.PP
specifies that the first twenty characters of the text including
any predisplay string should be highlighted in bold\&.
.PP
Note that the effect of \fBregion_highlight\fP is not saved and disappears
as soon as the line is accepted\&.
.RE
.TP
\fBUNDO_CHANGE_NO\fP (integer)
A number representing the state of the undo history\&.  The only use
of this is passing as an argument to the \fBundo\fP widget in order to
undo back to the recorded point\&.  Read\-only\&.
.TP
\fBWIDGET\fP (scalar)
The name of the widget currently being executed; read\-only\&.
.TP
\fBWIDGETFUNC\fP (scalar)
The name of the shell function that implements a widget defined with
either \fBzle \-N\fP or \fBzle \-C\fP\&.  In the former case, this is the second
argument to the \fBzle \-N\fP command that defined the widget, or
the first argument if there was no second argument\&.  In the latter case
this is the third argument to the \fBzle \-C\fP command that defined the
widget\&.  Read\-only\&.
.TP
\fBWIDGETSTYLE\fP (scalar)
Describes the implementation behind the completion widget currently being
executed; the second argument that followed \fBzle \-C\fP when the widget was
defined\&.  This is the name of a builtin completion widget\&.  For widgets
defined with \fBzle \-N\fP this is set to the empty string\&.  Read\-only\&.
.TP
\fBZLE_STATE\fP (scalar)
Contains a set of space\-separated words that describe the current \fBzle\fP
state\&.
.RS
.PP
Currently, the states shown are the insert mode as set by the
\fBoverwrite\-mode\fP or \fBvi\-replace\fP widgets and whether history commands
will visit imported entries as controlled by the set\-local\-history widget\&.
The string contains `\fBinsert\fP\&' if characters to be inserted on the
command line move existing characters to the right or `\fBoverwrite\fP\&'
if characters to be inserted overwrite existing characters\&. It contains
`\fBlocalhistory\fP\&' if only local history commands will be visited or
`\fBglobalhistory\fP\&' if imported history commands will also be visited\&.
.PP
The substrings are sorted in alphabetical order so that if you want to
test for two specific substrings in a future\-proof way, you can do match
by doing:
.PP
.RS
.nf
\fBif [[ $ZLE_STATE == *insert*globalhistory* ]]; then \&.\&.\&.; fi\fP
.fi
.RE
.RE
.PP
.SS "Special Widgets"
.PP
There are a few user\-defined widgets which are special to the shell\&.
If they do not exist, no special action is taken\&.  The environment
provided is identical to that for any other editing widget\&.
.PP
.PD 0
.TP
.PD
\fBzle\-isearch\-exit\fP
Executed at the end of incremental search at the point where the isearch
prompt is removed from the display\&.  See \fBzle\-isearch\-update\fP for
an example\&.
.TP
\fBzle\-isearch\-update\fP
Executed within incremental search when the display is about to be
redrawn\&.  Additional output below the incremental search prompt can be
generated by using `\fBzle \-M\fP\&' within the widget\&.  For example,
.RS
.PP
.RS
.nf
\fBzle\-isearch\-update() { zle \-M "Line $HISTNO"; }
zle \-N zle\-isearch\-update\fP
.fi
.RE
.PP
Note the line output by `\fBzle \-M\fP\&' is not deleted on exit from
incremental search\&.  This can be done from a \fBzle\-isearch\-exit\fP
widget:
.PP
.RS
.nf
\fBzle\-isearch\-exit() { zle \-M ""; }
zle \-N zle\-isearch\-exit\fP
.fi
.RE
.RE
.TP
\fBzle\-line\-init\fP
Executed every time the line editor is started to read a new line
of input\&.  The following example puts the line editor into vi command
mode when it starts up\&.
.RS
.PP
.RS
.nf
\fBzle\-line\-init() { zle \-K vicmd; }
zle \-N zle\-line\-init\fP
.fi
.RE
.PP
(The command inside the function sets the keymap directly; it is
equivalent to \fBzle vi\-cmd\-mode\fP\&.)
.RE
.TP
\fBzle\-line\-finish\fP
This is similar to \fBzle\-line\-init\fP but is executed every time the
line editor has finished reading a line of input\&.
.TP
\fBzle\-history\-line\-set\fP
Executed when the history line changes\&.
.TP
\fBzle\-keymap\-select\fP
Executed every time the keymap changes, i\&.e\&. the special parameter
\fBKEYMAP\fP is set to a different value, while the line editor is active\&.
Initialising the keymap when the line editor starts does not cause the
widget to be called\&.
.RS
.PP
The value \fB$KEYMAP\fP within the function reflects the new keymap\&.  The
old keymap is passed as the sole argument\&.
.PP
This can be used for detecting switches between the vi command
(\fBvicmd\fP) and insert (usually \fBmain\fP) keymaps\&.
.RE
.PP
.SH "STANDARD WIDGETS"
The following is a list of all the standard widgets,
and their default bindings in emacs mode,
vi command mode and vi insert mode
(the `\fBemacs\fP\&', `\fBvicmd\fP' and `\fBviins\fP' keymaps, respectively)\&.
.PP
Note that cursor keys are bound to movement keys in all three keymaps;
the shell assumes that the cursor keys send the key sequences reported
by the terminal\-handling library (termcap or terminfo)\&.  The key sequences
shown in the list are those based on the VT100, common on many modern
terminals, but in fact these are not necessarily bound\&.  In the case of the
\fBviins\fP keymap, the initial escape character of the sequences serves also
to return to the \fBvicmd\fP keymap: whether this happens is determined by
the \fBKEYTIMEOUT\fP parameter, see \fIzshparam\fP(1)\&.
.SS "Movement"
.PD 0
.TP
.PD
\fBvi\-backward\-blank\-word\fP (unbound) (\fBB\fP) (unbound)
Move backward one word, where a word is defined as a series of
non\-blank characters\&.
.TP
\fBvi\-backward\-blank\-word\-end\fP (unbound) (\fBgE\fP) (unbound)
Move to the end of the previous word, where a word is defined as a
series of non\-blank characters\&.
.TP
\fBbackward\-char\fP (\fB^B ESC\-[D\fP) (unbound) (unbound)
Move backward one character\&.
.TP
\fBvi\-backward\-char\fP (unbound) (\fB^H h ^?\fP) (\fBESC\-[D\fP)
Move backward one character, without changing lines\&.
.TP
\fBbackward\-word\fP (\fBESC\-B ESC\-b\fP) (unbound) (unbound)
Move to the beginning of the previous word\&.
.TP
\fBemacs\-backward\-word\fP
Move to the beginning of the previous word\&.
.TP
\fBvi\-backward\-word\fP (unbound) (\fBb\fP) (unbound)
Move to the beginning of the previous word, vi\-style\&.
.TP
\fBvi\-backward\-word\-end\fP (unbound) (\fBge\fP) (unbound)
Move to the end of the previous word, vi\-style\&.
.TP
\fBbeginning\-of\-line\fP (\fB^A\fP) (unbound) (unbound)
Move to the beginning of the line\&.  If already at the beginning
of the line, move to the beginning of the previous line, if any\&.
.TP
\fBvi\-beginning\-of\-line\fP
Move to the beginning of the line, without changing lines\&.
.TP
\fBdown\-line\fP (unbound) (unbound) (unbound)
Move down a line in the buffer\&.
.TP
\fBend\-of\-line\fP (\fB^E\fP) (unbound) (unbound)
Move to the end of the line\&.  If already at the end
of the line, move to the end of the next line, if any\&.
.TP
\fBvi\-end\-of\-line\fP (unbound) (\fB$\fP) (unbound)
Move to the end of the line\&.
If an argument is given to this command, the cursor will be moved to
the end of the line (argument \- 1) lines down\&.
.TP
\fBvi\-forward\-blank\-word\fP (unbound) (\fBW\fP) (unbound)
Move forward one word, where a word is defined as a series of
non\-blank characters\&.
.TP
\fBvi\-forward\-blank\-word\-end\fP (unbound) (\fBE\fP) (unbound)
Move to the end of the current word, or, if at the end of the current word,
to the end of the next word,
where a word is defined as a series of non\-blank characters\&.
.TP
\fBforward\-char\fP (\fB^F ESC\-[C\fP) (unbound) (unbound)
Move forward one character\&.
.TP
\fBvi\-forward\-char\fP (unbound) (\fBspace l\fP) (\fBESC\-[C\fP)
Move forward one character\&.
.TP
\fBvi\-find\-next\-char\fP (\fB^X^F\fP) (\fBf\fP) (unbound)
Read a character from the keyboard, and move to
the next occurrence of it in the line\&.
.TP
\fBvi\-find\-next\-char\-skip\fP (unbound) (\fBt\fP) (unbound)
Read a character from the keyboard, and move to
the position just before the next occurrence of it in the line\&.
.TP
\fBvi\-find\-prev\-char\fP (unbound) (\fBF\fP) (unbound)
Read a character from the keyboard, and move to
the previous occurrence of it in the line\&.
.TP
\fBvi\-find\-prev\-char\-skip\fP (unbound) (\fBT\fP) (unbound)
Read a character from the keyboard, and move to
the position just after the previous occurrence of it in the line\&.
.TP
\fBvi\-first\-non\-blank\fP (unbound) (\fB^\fP) (unbound)
Move to the first non\-blank character in the line\&.
.TP
\fBvi\-forward\-word\fP (unbound) (\fBw\fP) (unbound)
Move forward one word, vi\-style\&.
.TP
\fBforward\-word\fP (\fBESC\-F ESC\-f\fP) (unbound) (unbound)
Move to the beginning of the next word\&.
The editor\&'s idea of a word is specified with the \fBWORDCHARS\fP
parameter\&.
.TP
\fBemacs\-forward\-word\fP
Move to the end of the next word\&.
.TP
\fBvi\-forward\-word\-end\fP (unbound) (\fBe\fP) (unbound)
Move to the end of the next word\&.
.TP
\fBvi\-goto\-column\fP (\fBESC\-|\fP) (\fB|\fP) (unbound)
Move to the column specified by the numeric argument\&.
.TP
\fBvi\-goto\-mark\fP (unbound) (\fB`\fP) (unbound)
Move to the specified mark\&.
.TP
\fBvi\-goto\-mark\-line\fP (unbound) (\fB\&'\fP) (unbound)
Move to beginning of the line containing the specified mark\&.
.TP
\fBvi\-repeat\-find\fP (unbound) (\fB;\fP) (unbound)
Repeat the last \fBvi\-find\fP command\&.
.TP
\fBvi\-rev\-repeat\-find\fP (unbound) (\fB,\fP) (unbound)
Repeat the last \fBvi\-find\fP command in the opposite direction\&.
.TP
\fBup\-line\fP (unbound) (unbound) (unbound)
Move up a line in the buffer\&.
.SS "History Control"
.PD 0
.TP
.PD
\fBbeginning\-of\-buffer\-or\-history\fP (\fBESC\-<\fP) (\fBgg\fP) (unbound)
Move to the beginning of the buffer, or if already there,
move to the first event in the history list\&.
.TP
\fBbeginning\-of\-line\-hist\fP
Move to the beginning of the line\&.  If already at the
beginning of the buffer, move to the previous history line\&.
.TP
\fBbeginning\-of\-history\fP
Move to the first event in the history list\&.
.TP
\fBdown\-line\-or\-history\fP (\fB^N ESC\-[B\fP) (\fBj\fP) (\fBESC\-[B\fP)
Move down a line in the buffer, or if already at the bottom line,
move to the next event in the history list\&.
.TP
\fBvi\-down\-line\-or\-history\fP (unbound) (\fB+\fP) (unbound)
Move down a line in the buffer, or if already at the bottom line,
move to the next event in the history list\&.
Then move to the first non\-blank character on the line\&.
.TP
\fBdown\-line\-or\-search\fP
Move down a line in the buffer, or if already at the bottom line,
search forward in the history for a line beginning with the first
word in the buffer\&.
.RS
.PP
If called from a function by the \fBzle\fP command with arguments, the first
argument is taken as the string for which to search, rather than the
first word in the buffer\&.
.RE
.TP
\fBdown\-history\fP (unbound) (\fB^N\fP) (unbound)
Move to the next event in the history list\&.
.TP
\fBhistory\-beginning\-search\-backward\fP
Search backward in the history for a line beginning with the current
line up to the cursor\&.
This leaves the cursor in its original position\&.
.TP
\fBend\-of\-buffer\-or\-history\fP (\fBESC\->\fP) (unbound) (unbound)
Move to the end of the buffer, or if already there,
move to the last event in the history list\&.
.TP
\fBend\-of\-line\-hist\fP
Move to the end of the line\&.  If already at the end of
the buffer, move to the next history line\&.
.TP
\fBend\-of\-history\fP
Move to the last event in the history list\&.
.TP
\fBvi\-fetch\-history\fP (unbound) (\fBG\fP) (unbound)
Fetch the history line specified by the numeric argument\&.
This defaults to the current history line
(i\&.e\&. the one that isn\&'t history yet)\&.
.TP
\fBhistory\-incremental\-search\-backward\fP (\fB^R ^Xr\fP) (unbound) (unbound)
Search backward incrementally for a specified string\&.  The search is
case\-insensitive if the search string does not have uppercase letters and no
numeric argument was given\&.  The string may begin with `\fB^\fP\&' to anchor the
search to the beginning of the line\&.  When called from a user\-defined
function returns the following statuses: 0, if the search succeeded;
1, if the search failed; 2, if the search term was a bad pattern;
3, if the search was aborted by the \fBsend\-break\fP command\&.
.RS
.PP
A restricted set of editing functions
is available in the mini\-buffer\&.  Keys are looked up in the special
\fBisearch\fP keymap, and if not found there in the main keymap (note
that by default the \fBisearch\fP keymap is empty)\&.
An interrupt signal, as defined by the stty
setting, will stop the search and go back to the original line\&.  An undefined
key will have the same effect\&.  Note that the following always
perform the same task within incremental searches and cannot be
replaced by user defined widgets, nor can the set of functions
be extended\&.  The supported functions are:
.PP
.PD 0
.TP
.PD 0
\fBaccept\-and\-hold\fP
.TP
.PD 0
\fBaccept\-and\-infer\-next\-history\fP
.TP
.PD 0
\fBaccept\-line\fP
.TP
.PD
\fBaccept\-line\-and\-down\-history\fP
Perform the usual function after exiting incremental search\&.
The command line displayed is executed\&.
.TP
.PD 0
\fBbackward\-delete\-char\fP
.TP
.PD
\fBvi\-backward\-delete\-char\fP
Back up one place in the search history\&.  If the search has been
repeated this does not immediately erase a character in the
minibuffer\&.
.TP
\fBaccept\-search\fP
Exit incremental search, retaining the command line but performing no
further action\&.  Note that this function is not bound by default
and has no effect outside incremental search\&.
.TP
.PD 0
\fBbackward\-delete\-word\fP
.TP
.PD 0
\fBbackward\-kill\-word\fP
.TP
.PD
\fBvi\-backward\-kill\-word\fP
Back up one character in the minibuffer; if multiple searches
have been performed since the character was inserted the search
history is rewound to the point just before the character was
entered\&.  Hence this has the effect of repeating
\fBbackward\-delete\-char\fP\&.
.TP
\fBclear\-screen\fP
Clear the screen, remaining in incremental search mode\&.
.TP
\fBhistory\-incremental\-search\-backward\fP
Find the next occurrence of the contents of the mini\-buffer\&.
.TP
\fBhistory\-incremental\-search\-forward\fP
Invert the sense of the search\&.
.TP
\fBmagic\-space\fP
Inserts a non\-magical space\&.
.TP
.PD 0
\fBquoted\-insert\fP
.TP
.PD
\fBvi\-quoted\-insert\fP
Quote the character to insert into the minibuffer\&.
.TP
\fBredisplay\fP
Redisplay the command line, remaining in incremental search mode\&.
.TP
\fBvi\-cmd\-mode\fP
Select the `\fBvicmd\fP\&' keymap;
the `\fBmain\fP\&' keymap (insert mode) will be selected initially\&.
.RS
.PP
In addition, the modifications that were made while in vi insert mode are
merged to form a single undo event\&.
.RE
.TP
.PD 0
\fBvi\-repeat\-search\fP
.TP
.PD
\fBvi\-rev\-repeat\-search\fP
Repeat the search\&.  The direction of the search is indicated in the
mini\-buffer\&.
.PP
Any character that is not bound to one of the above functions, or
\fBself\-insert\fP or \fBself\-insert\-unmeta\fP, will cause the mode to be
exited\&.  The character is then looked up and executed in the keymap in
effect at that point\&.
.PP
When called from a widget function by the \fBzle\fP command, the incremental
search commands can take a string argument\&.  This will be treated as a
string of keys, as for arguments to the \fBbindkey\fP command, and used as
initial input for the command\&.  Any characters in the string which are
unused by the incremental search will be silently ignored\&.  For example,
.PP
.RS
.nf
\fBzle history\-incremental\-search\-backward forceps\fP
.fi
.RE
.PP
will search backwards for \fBforceps\fP, leaving the minibuffer containing
the string `\fBforceps\fP\&'\&.
.RE
.TP
\fBhistory\-incremental\-search\-forward\fP (\fB^S ^Xs\fP) (unbound) (unbound)
Search forward incrementally for a specified string\&.  The search is
case\-insensitive if the search string does not have uppercase letters and no
numeric argument was given\&.  The string may begin with `\fB^\fP\&' to anchor the
search to the beginning of the line\&.  The functions available in the
mini\-buffer are the same as for \fBhistory\-incremental\-search\-backward\fP\&.
.TP
.PD 0
\fBhistory\-incremental\-pattern\-search\-backward\fP
.TP
.PD
\fBhistory\-incremental\-pattern\-search\-forward\fP
These widgets behave similarly to the corresponding widgets with
no \fB\-pattern\fP, but the search string typed by the user is treated
as a pattern, respecting the current settings of the various options
affecting pattern matching\&.  See
FILENAME GENERATION in \fIzshexpn\fP(1) for a description of patterns\&.
If no numeric argument was given lowercase letters in the search
string may match uppercase letters in the history\&.  The string may begin
with `\fB^\fP\&' to anchor the search to the beginning of the line\&.
.RS
.PP
The prompt changes to indicate an invalid pattern; this may simply
indicate the pattern is not yet complete\&.
.PP
Note that only non\-overlapping matches are reported, so an expression
with wildcards may return fewer matches on a line than are visible
by inspection\&.
.RE
.TP
\fBhistory\-search\-backward\fP (\fBESC\-P ESC\-p\fP) (unbound) (unbound)
Search backward in the history for a line beginning with the first
word in the buffer\&.
.RS
.PP
If called from a function by the \fBzle\fP command with arguments, the first
argument is taken as the string for which to search, rather than the
first word in the buffer\&.
.RE
.TP
\fBvi\-history\-search\-backward\fP (unbound) (\fB/\fP) (unbound)
Search backward in the history for a specified string\&.
The string may begin with `\fB^\fP\&' to anchor the search to the
beginning of the line\&.
.RS
.PP
A restricted set of editing functions is available in
the mini\-buffer\&.  An interrupt signal, as defined by the stty setting,  will
stop the search\&.
The functions available in the mini\-buffer are:
\fBaccept\-line\fP,
\fBbackward\-delete\-char\fP,
\fBvi\-backward\-delete\-char\fP,
\fBbackward\-kill\-word\fP,
\fBvi\-backward\-kill\-word\fP,
\fBclear\-screen\fP,
\fBredisplay\fP,
\fBquoted\-insert\fP
and
\fBvi\-quoted\-insert\fP\&.
.PP
\fBvi\-cmd\-mode\fP is treated the same as accept\-line, and
\fBmagic\-space\fP is treated as a space\&.
Any other character that is not bound to self\-insert or
self\-insert\-unmeta will beep and be ignored\&. If the function is called from vi
command mode, the bindings of the current insert mode will be used\&.
.PP
If called from a function by the \fBzle\fP command with arguments, the first
argument is taken as the string for which to search, rather than the
first word in the buffer\&.
.RE
.TP
\fBhistory\-search\-forward\fP (\fBESC\-N ESC\-n\fP) (unbound) (unbound)
Search forward in the history for a line beginning with the first
word in the buffer\&.
.RS
.PP
If called from a function by the \fBzle\fP command with arguments, the first
argument is taken as the string for which to search, rather than the
first word in the buffer\&.
.RE
.TP
\fBvi\-history\-search\-forward\fP (unbound) (\fB?\fP) (unbound)
Search forward in the history for a specified string\&.
The string may begin with `\fB^\fP\&' to anchor the search to the
beginning of the line\&. The functions available in the mini\-buffer are the same
as for \fBvi\-history\-search\-backward\fP\&.  Argument handling is also the same
as for that command\&.
.TP
\fBinfer\-next\-history\fP (\fB^X^N\fP) (unbound) (unbound)
Search in the history list for a line matching the current one and
fetch the event following it\&.
.TP
\fBinsert\-last\-word\fP (\fBESC\-_ ESC\-\&.\fP) (unbound) (unbound)
Insert the last word from the previous history event at the
cursor position\&.  If a positive numeric argument is given,
insert that word from the end of the previous history event\&.
If the argument is zero or negative insert that word from the
left (zero inserts the previous command word)\&.  Repeating this command
replaces the word just inserted with the last word from the
history event prior to the one just used; numeric arguments can be used in
the same way to pick a word from that event\&.
.RS
.PP
When called from a shell function invoked from a user\-defined widget, the
command can take one to three arguments\&.  The first argument specifies a
history offset which applies to successive calls to this widget: if it is \-1,
the default behaviour is used, while if it is 1, successive calls will move
forwards through the history\&.  The value 0 can be used to indicate that the
history line examined by the previous execution of the command will be
reexamined\&.  Note that negative numbers should be preceded by a
`\fB\-\fP\fB\-\fP\&' argument to avoid confusing them with options\&.
.PP
If two arguments are given, the second specifies the word on the command
line in normal array index notation (as a more natural alternative to the
numeric argument)\&.  Hence 1 is the first word, and \-1 (the default) is the
last word\&.
.PP
If a third argument is given, its value is ignored, but it is used to
signify that the history offset is relative to the current history line,
rather than the one remembered after the previous invocations of
\fBinsert\-last\-word\fP\&.
.PP
For example, the default behaviour of the command corresponds to
.PP
.RS
.nf
\fBzle insert\-last\-word \-\- \-1 \-1\fP
.fi
.RE
.PP
while the command
.PP
.RS
.nf
\fBzle insert\-last\-word \-\- \-1 1 \-\fP
.fi
.RE
.PP
always copies the first word of the line in the history immediately before
the line being edited\&.  This has the side effect that later invocations of
the widget will be relative to that line\&.
.RE
.TP
\fBvi\-repeat\-search\fP (unbound) (\fBn\fP) (unbound)
Repeat the last vi history search\&.
.TP
\fBvi\-rev\-repeat\-search\fP (unbound) (\fBN\fP) (unbound)
Repeat the last vi history search, but in reverse\&.
.TP
\fBup\-line\-or\-history\fP (\fB^P ESC\-[A\fP) (\fBk\fP) (\fBESC\-[A\fP)
Move up a line in the buffer, or if already at the top line,
move to the previous event in the history list\&.
.TP
\fBvi\-up\-line\-or\-history\fP (unbound) (\fB\-\fP) (unbound)
Move up a line in the buffer, or if already at the top line,
move to the previous event in the history list\&.
Then move to the first non\-blank character on the line\&.
.TP
\fBup\-line\-or\-search\fP
Move up a line in the buffer, or if already at the top line,
search backward in the history for a line beginning with the
first word in the buffer\&.
.RS
.PP
If called from a function by the \fBzle\fP command with arguments, the first
argument is taken as the string for which to search, rather than the
first word in the buffer\&.
.RE
.TP
\fBup\-history\fP (unbound) (\fB^P\fP) (unbound)
Move to the previous event in the history list\&.
.TP
\fBhistory\-beginning\-search\-forward\fP
Search forward in the history for a line beginning with the current
line up to the cursor\&.
This leaves the cursor in its original position\&.
.TP
\fBset\-local\-history\fP
By default, history movement commands visit the imported lines as well as
the local lines\&. This widget lets you toggle this on and off, or set it with
the numeric argument\&. Zero for both local and imported lines and nonzero for
only local lines\&.
.SS "Modifying Text"
.PD 0
.TP
.PD
\fBvi\-add\-eol\fP (unbound) (\fBA\fP) (unbound)
Move to the end of the line and enter insert mode\&.
.TP
\fBvi\-add\-next\fP (unbound) (\fBa\fP) (unbound)
Enter insert mode after the current cursor position, without changing lines\&.
.TP
\fBbackward\-delete\-char\fP (\fB^H ^?\fP) (unbound) (unbound)
Delete the character behind the cursor\&.
.TP
\fBvi\-backward\-delete\-char\fP (unbound) (\fBX\fP) (\fB^H\fP)
Delete the character behind the cursor, without changing lines\&.
If in insert mode, this won\&'t delete past the point where insert mode was
last entered\&.
.TP
\fBbackward\-delete\-word\fP
Delete the word behind the cursor\&.
.TP
\fBbackward\-kill\-line\fP
Kill from the beginning of the line to the cursor position\&.
.TP
\fBbackward\-kill\-word\fP (\fB^W ESC\-^H ESC\-^?\fP) (unbound) (unbound)
Kill the word behind the cursor\&.
.TP
\fBvi\-backward\-kill\-word\fP (unbound) (unbound) (\fB^W\fP)
Kill the word behind the cursor, without going past the point where insert
mode was last entered\&.
.TP
\fBcapitalize\-word\fP (\fBESC\-C ESC\-c\fP) (unbound) (unbound)
Capitalize the current word and move past it\&.
.TP
\fBvi\-change\fP (unbound) (\fBc\fP) (unbound)
Read a movement command from the keyboard, and kill
from the cursor position to the endpoint of the movement\&.
Then enter insert mode\&.
If the command is \fBvi\-change\fP, change the current line\&.
.RS
.PP
For compatibility with vi, if the command is \fBvi\-forward\-word\fP
or \fBvi\-forward\-blank\-word\fP, the whitespace after the word is not
included\&. If you prefer the more consistent behaviour with the
whitespace included use the following key binding:
.PP
.RS
.nf
\fBbindkey \-a \-s cw dwi\fP
.fi
.RE
.RE
.TP
\fBvi\-change\-eol\fP (unbound) (\fBC\fP) (unbound)
Kill to the end of the line and enter insert mode\&.
.TP
\fBvi\-change\-whole\-line\fP (unbound) (\fBS\fP) (unbound)
Kill the current line and enter insert mode\&.
.TP
\fBcopy\-region\-as\-kill\fP (\fBESC\-W ESC\-w\fP) (unbound) (unbound)
Copy the area from the cursor to the mark to the kill buffer\&.
.RS
.PP
If called from a ZLE widget function in the form `\fBzle
copy\-region\-as\-kill\fP \fIstring\fP\&' then \fIstring\fP will be taken as the
text to copy to the kill buffer\&.  The cursor, the mark and the text on the
command line are not used in this case\&.
.RE
.TP
\fBcopy\-prev\-word\fP (\fBESC\-^_\fP) (unbound) (unbound)
Duplicate the word to the left of the cursor\&.
.TP
\fBcopy\-prev\-shell\-word\fP
Like \fBcopy\-prev\-word\fP, but the word is found by using shell parsing, 
whereas \fBcopy\-prev\-word\fP looks for blanks\&. This makes a difference
when the word is quoted and contains spaces\&.
.TP
\fBvi\-delete\fP (unbound) (\fBd\fP) (unbound)
Read a movement command from the keyboard, and kill
from the cursor position to the endpoint of the movement\&.
If the command is \fBvi\-delete\fP, kill the current line\&.
.TP
\fBdelete\-char\fP
Delete the character under the cursor\&.
.TP
\fBvi\-delete\-char\fP (unbound) (\fBx\fP) (unbound)
Delete the character under the cursor,
without going past the end of the line\&.
.TP
\fBdelete\-word\fP
Delete the current word\&.
.TP
\fBdown\-case\-word\fP (\fBESC\-L ESC\-l\fP) (unbound) (unbound)
Convert the current word to all lowercase and move past it\&.
.TP
\fBkill\-word\fP (\fBESC\-D ESC\-d\fP) (unbound) (unbound)
Kill the current word\&.
.TP
\fBgosmacs\-transpose\-chars\fP
Exchange the two characters behind the cursor\&.
.TP
\fBvi\-indent\fP (unbound) (\fB>\fP) (unbound)
Indent a number of lines\&.
.TP
\fBvi\-insert\fP (unbound) (\fBi\fP) (unbound)
Enter insert mode\&.
.TP
\fBvi\-insert\-bol\fP (unbound) (\fBI\fP) (unbound)
Move to the first non\-blank character on the line and enter insert mode\&.
.TP
\fBvi\-join\fP (\fB^X^J\fP) (\fBJ\fP) (unbound)
Join the current line with the next one\&.
.TP
\fBkill\-line\fP (\fB^K\fP) (unbound) (unbound)
Kill from the cursor to the end of the line\&.
If already on the end of the line, kill the newline character\&.
.TP
\fBvi\-kill\-line\fP (unbound) (unbound) (\fB^U\fP)
Kill from the cursor back to wherever insert mode was last entered\&.
.TP
\fBvi\-kill\-eol\fP (unbound) (\fBD\fP) (unbound)
Kill from the cursor to the end of the line\&.
.TP
\fBkill\-region\fP
Kill from the cursor to the mark\&.
.TP
\fBkill\-buffer\fP (\fB^X^K\fP) (unbound) (unbound)
Kill the entire buffer\&.
.TP
\fBkill\-whole\-line\fP (\fB^U\fP) (unbound) (unbound)
Kill the current line\&.
.TP
\fBvi\-match\-bracket\fP (\fB^X^B\fP) (\fB%\fP) (unbound)
Move to the bracket character (one of \fB{}\fP, \fB()\fP or \fB[]\fP) that
matches the one under the cursor\&.
If the cursor is not on a bracket character, move forward without going
past the end of the line to find one, and then go to the matching bracket\&.
.TP
\fBvi\-open\-line\-above\fP (unbound) (\fBO\fP) (unbound)
Open a line above the cursor and enter insert mode\&.
.TP
\fBvi\-open\-line\-below\fP (unbound) (\fBo\fP) (unbound)
Open a line below the cursor and enter insert mode\&.
.TP
\fBvi\-oper\-swap\-case\fP (unbound) (\fBg~\fP) (unbound)
Read a movement command from the keyboard, and swap
the case of all characters
from the cursor position to the endpoint of the movement\&.
If the movement command is \fBvi\-oper\-swap\-case\fP,
swap the case of all characters on the current line\&.
.TP
\fBoverwrite\-mode\fP (\fB^X^O\fP) (unbound) (unbound)
Toggle between overwrite mode and insert mode\&.
.TP
\fBvi\-put\-before\fP (unbound) (\fBP\fP) (unbound)
Insert the contents of the kill buffer before the cursor\&.
If the kill buffer contains a sequence of lines (as opposed to characters),
paste it above the current line\&.
.TP
\fBvi\-put\-after\fP (unbound) (\fBp\fP) (unbound)
Insert the contents of the kill buffer after the cursor\&.
If the kill buffer contains a sequence of lines (as opposed to characters),
paste it below the current line\&.
.TP
\fBput\-replace\-selection\fP (unbound) (unbound) (unbound)
Replace the contents of the current region or selection with the
contents of the kill buffer\&. If the kill buffer contains a sequence of
lines (as opposed to characters), the current line will be split by the
pasted lines\&.
.TP
\fBquoted\-insert\fP (\fB^V\fP) (unbound) (unbound)
Insert the next character typed into the buffer literally\&.
An interrupt character will not be inserted\&.
.TP
\fBvi\-quoted\-insert\fP (unbound) (unbound) (\fB^Q ^V\fP)
Display a `\fB^\fP\&' at the cursor position, and
insert the next character typed into the buffer literally\&.
An interrupt character will not be inserted\&.
.TP
\fBquote\-line\fP (\fBESC\-\&'\fP) (unbound) (unbound)
Quote the current line; that is, put a `\fB\&'\fP' character at the
beginning and the end, and convert all `\fB\&'\fP' characters
to `\fB\&'\e''\fP'\&.
.TP
\fBquote\-region\fP (\fBESC\-"\fP) (unbound) (unbound)
Quote the region from the cursor to the mark\&.
.TP
\fBvi\-replace\fP (unbound) (\fBR\fP) (unbound)
Enter overwrite mode\&.
.TP
\fBvi\-repeat\-change\fP (unbound) (\fB\&.\fP) (unbound)
Repeat the last vi mode text modification\&.
If a count was used with the modification, it is remembered\&.
If a count is given to this command, it overrides the remembered count,
and is remembered for future uses of this command\&.
The cut buffer specification is similarly remembered\&.
.TP
\fBvi\-replace\-chars\fP (unbound) (\fBr\fP) (unbound)
Replace the character under the cursor with a character
read from the keyboard\&.
.TP
\fBself\-insert\fP (printable characters) (unbound) (printable characters and some control characters)
Insert a character into the buffer at the cursor position\&.
.TP
\fBself\-insert\-unmeta\fP (\fBESC\-^I ESC\-^J ESC\-^M\fP) (unbound) (unbound)
Insert a character into the buffer after stripping the meta bit
and converting ^M to ^J\&.
.TP
\fBvi\-substitute\fP (unbound) (\fBs\fP) (unbound)
Substitute the next character(s)\&.
.TP
\fBvi\-swap\-case\fP (unbound) (\fB~\fP) (unbound)
Swap the case of the character under the cursor and move past it\&.
.TP
\fBtranspose\-chars\fP (\fB^T\fP) (unbound) (unbound)
Exchange the two characters to the left of the
cursor if at end of line, else exchange the
character under the cursor with the character
to the left\&.
.TP
\fBtranspose\-words\fP (\fBESC\-T ESC\-t\fP) (unbound) (unbound)
Exchange the current word with the one before it\&.
.TP
\fBvi\-unindent\fP (unbound) (\fB<\fP) (unbound)
Unindent a number of lines\&.
.TP
\fBup\-case\-word\fP (\fBESC\-U ESC\-u\fP) (unbound) (unbound)
Convert the current word to all caps and move past it\&.
.TP
\fByank\fP (\fB^Y\fP) (unbound) (unbound)
Insert the contents of the kill buffer at the cursor position\&.
.TP
\fByank\-pop\fP (\fBESC\-y\fP) (unbound) (unbound)
Remove the text just yanked, rotate the kill\-ring (the history of
previously killed text) and yank the new top\&.  Only works following
\fByank\fP, \fBvi\-put\-before\fP, \fBvi\-put\-after\fP or \fByank\-pop\fP\&.
.TP
\fBvi\-yank\fP (unbound) (\fBy\fP) (unbound)
Read a movement command from the keyboard, and copy the region
from the cursor position to the endpoint of the movement
into the kill buffer\&.
If the command is \fBvi\-yank\fP, copy the current line\&.
.TP
\fBvi\-yank\-whole\-line\fP (unbound) (\fBY\fP) (unbound)
Copy the current line into the kill buffer\&.
.TP
\fBvi\-yank\-eol\fP
Copy the region from the cursor position to the end of the line
into the kill buffer\&.
Arguably, this is what Y should do in vi, but it isn\&'t what it actually does\&.
.SS "Arguments"
.PD 0
.TP
.PD
\fBdigit\-argument\fP (\fBESC\-0\fP\&.\&.\fBESC\-9\fP) (\fB1\fP\-\fB9\fP) (unbound)
Start a new numeric argument, or add to the current one\&.
See also \fBvi\-digit\-or\-beginning\-of\-line\fP\&.  This only works if bound to a
key sequence ending in a decimal digit\&.
.RS
.PP
Inside a widget function, a call to this function treats the last key of
the key sequence which called the widget as the digit\&.
.RE
.TP
\fBneg\-argument\fP (\fBESC\-\fP\fB\-\fP) (unbound) (unbound)
Changes the sign of the following argument\&.
.TP
\fBuniversal\-argument\fP
Multiply the argument of the next command by 4\&.  Alternatively, if
this command is followed by an integer (positive or negative), use
that as the argument for the next command\&.  Thus digits cannot be
repeated using this command\&.  For example, if this command occurs
twice, followed immediately by \fBforward\-char\fP, move forward sixteen
spaces; if instead it is followed by \fB\-2\fP, then \fBforward\-char\fP,
move backward two spaces\&.
.RS
.PP
Inside a widget function, if passed an argument, i\&.e\&. `\fBzle
universal\-argument\fP \fInum\fP\&', the numeric argument will be set to
\fInum\fP; this is equivalent to `\fBNUMERIC=\fP\fInum\fP\&'\&.
.RE
.TP
\fBargument\-base\fP
Use the existing numeric argument as a numeric base, which must be in the
range 2 to 36 inclusive\&.  Subsequent use of \fBdigit\-argument\fP and
\fBuniversal\-argument\fP will input a new numeric argument in the given base\&.
The usual hexadecimal convention is used: the letter \fBa\fP or \fBA\fP
corresponds to 10, and so on\&.  Arguments in bases requiring digits from 10
upwards are more conveniently input with \fBuniversal\-argument\fP, since
\fBESC\-a\fP etc\&. are not usually bound to \fBdigit\-argument\fP\&.
.RS
.PP
The function can be used with a command argument inside a user\-defined
widget\&.  The following code sets the base to 16 and lets the user input a
hexadecimal argument until a key out of the digit range is typed:
.PP
.RS
.nf
\fBzle argument\-base 16
zle universal\-argument\fP
.fi
.RE
.RE
.SS "Completion"
.PD 0
.TP
.PD
\fBaccept\-and\-menu\-complete\fP
In a menu completion, insert the current completion into the buffer,
and advance to the next possible completion\&.
.TP
\fBcomplete\-word\fP
Attempt completion on the current word\&.
.TP
\fBdelete\-char\-or\-list\fP (\fB^D\fP) (unbound) (unbound)
Delete the character under the cursor\&.  If the cursor
is at the end of the line, list possible completions for the
current word\&.
.TP
\fBexpand\-cmd\-path\fP
Expand the current command to its full pathname\&.
.TP
\fBexpand\-or\-complete\fP (\fBTAB\fP) (unbound) (\fBTAB\fP)
Attempt shell expansion on the current word\&.
If that fails,
attempt completion\&.
.TP
\fBexpand\-or\-complete\-prefix\fP
Attempt shell expansion on the current word up to cursor\&.
.TP
\fBexpand\-history\fP (\fBESC\-space ESC\-!\fP) (unbound) (unbound)
Perform history expansion on the edit buffer\&.
.TP
\fBexpand\-word\fP (\fB^X*\fP) (unbound) (unbound)
Attempt shell expansion on the current word\&.
.TP
\fBlist\-choices\fP (\fBESC\-^D\fP) (\fB^D =\fP) (\fB^D\fP)
List possible completions for the current word\&.
.TP
\fBlist\-expand\fP (\fB^Xg ^XG\fP) (\fB^G\fP) (\fB^G\fP)
List the expansion of the current word\&.
.TP
\fBmagic\-space\fP
Perform history expansion and insert a space into the
buffer\&.  This is intended to be bound to space\&.
.TP
\fBmenu\-complete\fP
Like \fBcomplete\-word\fP, except that menu completion is used\&.
See the \fBMENU_COMPLETE\fP option\&.
.TP
\fBmenu\-expand\-or\-complete\fP
Like \fBexpand\-or\-complete\fP, except that menu completion is used\&.
.TP
\fBreverse\-menu\-complete\fP
Perform menu completion, like \fBmenu\-complete\fP, except that if
a menu completion is already in progress, move to the \fIprevious\fP
completion rather than the next\&.
.TP
\fBend\-of\-list\fP
When a previous completion displayed a list below the prompt, this
widget can be used to move the prompt below the list\&.
.SS "Miscellaneous"
.PD 0
.TP
.PD
\fBaccept\-and\-hold\fP (\fBESC\-A ESC\-a\fP) (unbound) (unbound)
Push the contents of the buffer on the buffer stack
and execute it\&.
.TP
\fBaccept\-and\-infer\-next\-history\fP
Execute the contents of the buffer\&.
Then search the history list for a line matching the current one
and push the event following onto the buffer stack\&.
.TP
\fBaccept\-line\fP (\fB^J ^M\fP) (\fB^J ^M\fP) (\fB^J ^M\fP)
Finish editing the buffer\&.  Normally this causes the buffer to be
executed as a shell command\&.
.TP
\fBaccept\-line\-and\-down\-history\fP (\fB^O\fP) (unbound) (unbound)
Execute the current line, and push the next history
event on the buffer stack\&.
.TP
\fBauto\-suffix\-remove\fP
If the previous action added a suffix (space, slash, etc\&.) to the word on
the command line, remove it\&.  Otherwise do nothing\&.  Removing the suffix
ends any active menu completion or menu selection\&.
.RS
.PP
This widget is intended to be called from user\-defined widgets to enforce
a desired suffix\-removal behavior\&.
.RE
.TP
\fBauto\-suffix\-retain\fP
If the previous action added a suffix (space, slash, etc\&.) to the word on
the command line, force it to be preserved\&.  Otherwise do nothing\&.
Retaining the suffix ends any active menu completion or menu selection\&.
.RS
.PP
This widget is intended to be called from user\-defined widgets to enforce
a desired suffix\-preservation behavior\&.
.RE
.TP
\fBbeep\fP
Beep, unless the \fBBEEP\fP option is unset\&.
.TP
\fBvi\-cmd\-mode\fP (\fB^X^V\fP) (unbound) (\fB^[\fP)
Enter command mode; that is, select the `\fBvicmd\fP\&' keymap\&.
Yes, this is bound by default in emacs mode\&.
.TP
\fBvi\-caps\-lock\-panic\fP
Hang until any lowercase key is pressed\&.
This is for vi users without the mental capacity to keep
track of their caps lock key (like the author)\&.
.TP
\fBclear\-screen\fP (\fB^L ESC\-^L\fP) (\fB^L\fP) (\fB^L\fP)
Clear the screen and redraw the prompt\&.
.TP
\fBdescribe\-key\-briefly\fP
Reads a key sequence, then prints the function bound to that sequence\&.
.TP
\fBexchange\-point\-and\-mark\fP (\fB^X^X\fP) (unbound) (unbound)
Exchange the cursor position (point) with the position of the mark\&.
Unless a negative numeric argument is given, the region between
point and mark is activated so that it can be highlighted\&.
If a zero numeric argument is given, the region is activated but
point and mark are not swapped\&.
.TP
\fBexecute\-named\-cmd\fP (\fBESC\-x\fP) (\fB:\fP) (unbound)
Read the name of an editor command and
execute it\&.  A restricted set of editing functions is available in the
mini\-buffer\&.  Keys are looked up in the special
\fBcommand\fP keymap, and if not found there in the main keymap\&.
An interrupt signal, as defined by the stty setting, will
abort the function\&.  Note that the following always
perform the same task within the \fBexecuted\-named\-cmd\fP environment and
cannot be replaced by user defined widgets, nor can the set of functions
be extended\&.  The allowed functions are:
\fBbackward\-delete\-char\fP,
\fBvi\-backward\-delete\-char\fP,
\fBclear\-screen\fP,
\fBredisplay\fP,
\fBquoted\-insert\fP,
\fBvi\-quoted\-insert\fP,
\fBbackward\-kill\-word\fP,
\fBvi\-backward\-kill\-word\fP,
\fBkill\-whole\-line\fP,
\fBvi\-kill\-line\fP,
\fBbackward\-kill\-line\fP,
\fBlist\-choices\fP,
\fBdelete\-char\-or\-list\fP,
\fBcomplete\-word\fP,
\fBaccept\-line\fP,
\fBexpand\-or\-complete\fP and
\fBexpand\-or\-complete\-prefix\fP\&.
.RS
.PP
\fBkill\-region\fP kills the last word,
and vi\-cmd\-mode is treated the same as accept\-line\&.
The space and tab characters, if not bound to one of
these functions, will complete the name and then list the
possibilities if the \fBAUTO_LIST\fP option is set\&.
Any other character that is not bound to \fBself\-insert\fP or
\fBself\-insert\-unmeta\fP will beep and be ignored\&.
The bindings of the current insert mode will be used\&.
.PP
Currently this command may not be redefined or called by name\&.
.RE
.TP
\fBexecute\-last\-named\-cmd\fP (\fBESC\-z\fP) (unbound) (unbound)
Redo the last function executed with \fBexecute\-named\-cmd\fP\&.
.RS
.PP
Currently this command may not be redefined or called by name\&.
.RE
.TP
\fBget\-line\fP (\fBESC\-G ESC\-g\fP) (unbound) (unbound)
Pop the top line off the buffer stack and insert it at the
cursor position\&.
.TP
\fBpound\-insert\fP (unbound) (\fB#\fP) (unbound)
If there is no # character at the beginning of the buffer,
add one to the beginning of each line\&.
If there is one, remove a # from each line that has one\&.
In either case, accept the current line\&.
The \fBINTERACTIVE_COMMENTS\fP option must be set
for this to have any usefulness\&.
.TP
\fBvi\-pound\-insert\fP
If there is no # character at the beginning of the current line,
add one\&.  If there is one, remove it\&.
The \fBINTERACTIVE_COMMENTS\fP option must be set
for this to have any usefulness\&.
.TP
\fBpush\-input\fP
Push the entire current multiline construct onto the buffer stack and
return to the top\-level (\fBPS1\fP) prompt\&.
If the current parser construct is only a single line, this is exactly
like \fBpush\-line\fP\&.
Next time the editor starts up or is popped with \fBget\-line\fP, the
construct will be popped off the top of the buffer stack and loaded
into the editing buffer\&.
.TP
\fBpush\-line\fP (\fB^Q ESC\-Q ESC\-q\fP) (unbound) (unbound)
Push the current buffer onto the buffer stack and clear
the buffer\&.
Next time the editor starts up, the buffer will be popped
off the top of the buffer stack and loaded into the editing
buffer\&.
.TP
\fBpush\-line\-or\-edit\fP
At the top\-level (\fBPS1\fP) prompt, equivalent to \fBpush\-line\fP\&.
At a secondary (\fBPS2\fP) prompt, move the entire current multiline
construct into the editor buffer\&.
The latter is equivalent to \fBpush\-input\fP followed by \fBget\-line\fP\&.
.TP
\fBread\-command\fP
Only useful from a user\-defined widget\&.  A keystroke is read just as in
normal operation, but instead of the command being executed the name
of the command that would be executed is stored in the shell parameter
\fBREPLY\fP\&.  This can be used as the argument of a future \fBzle\fP
command\&.  If the key sequence is not bound, status 1 is returned;
typically, however, \fBREPLY\fP is set to \fBundefined\-key\fP to indicate
a useless key sequence\&.
.TP
\fBrecursive\-edit\fP
Only useful from a user\-defined widget\&.  At this point in the function,
the editor regains control until one of the standard widgets which would
normally cause zle to exit (typically an \fBaccept\-line\fP caused by
hitting the return key) is executed\&.  Instead, control returns to the
user\-defined widget\&.  The status returned is non\-zero if the return was
caused by an error, but the function still continues executing and hence
may tidy up\&.  This makes it safe for the user\-defined widget to alter
the command line or key bindings temporarily\&.
.RS
.PP
The following widget, \fBcaps\-lock\fP, serves as an example\&.
.RS
.nf
\fBself\-insert\-ucase() {
  LBUFFER+=${(U)KEYS[\-1]}
}
.PP
integer stat
.PP
zle \-N self\-insert self\-insert\-ucase
zle \-A caps\-lock save\-caps\-lock
zle \-A accept\-line caps\-lock
.PP
zle recursive\-edit
stat=$?
.PP
zle \-A \&.self\-insert self\-insert
zle \-A save\-caps\-lock caps\-lock
zle \-D save\-caps\-lock
.PP
(( stat )) && zle send\-break
.PP
return $stat
\fP
.fi
.RE
This causes typed letters to be inserted capitalised until either
\fBaccept\-line\fP (i\&.e\&. typically the return key) is typed or the
\fBcaps\-lock\fP widget is invoked again; the later is handled by saving
the old definition of \fBcaps\-lock\fP as \fBsave\-caps\-lock\fP and then
rebinding it to invoke \fBaccept\-line\fP\&.  Note that an error from the
recursive edit is detected as a non\-zero return status and propagated by
using the \fBsend\-break\fP widget\&.
.RE
.TP
\fBredisplay\fP (unbound) (\fB^R\fP) (\fB^R\fP)
Redisplays the edit buffer\&.
.TP
\fBreset\-prompt\fP (unbound) (unbound) (unbound)
Force the prompts on both the left and right of the screen to be
re\-expanded, then redisplay the edit buffer\&.  This
reflects changes both to the prompt variables themselves and changes
in the expansion of the values (for example, changes in time or
directory, or changes to the value of variables referred to by the
prompt)\&.
.RS
.PP
Otherwise, the prompt is only expanded each time zle starts, and
when the display as been interrupted by output from another part of the
shell (such as a job notification) which causes the command line to be
reprinted\&.
.RE
.TP
\fBsend\-break\fP (\fB^G ESC\-^G\fP) (unbound) (unbound)
Abort the current editor function, e\&.g\&. \fBexecute\-named\-command\fP, or the
editor itself, e\&.g\&. if you are in \fBvared\fP\&. Otherwise abort the parsing of
the current line; in this case the aborted line is available in the shell
variable \fBZLE_LINE_ABORTED\fP\&.  If the editor is aborted from within
\fBvared\fP, the variable \fBZLE_VARED_ABORTED\fP is set\&.
.TP
\fBrun\-help\fP (\fBESC\-H ESC\-h\fP) (unbound) (unbound)
Push the buffer onto the buffer stack, and execute the
command `\fBrun\-help\fP \fIcmd\fP\&', where \fIcmd\fP is the current
command\&.  \fBrun\-help\fP is normally aliased to \fBman\fP\&.
.TP
\fBvi\-set\-buffer\fP (unbound) (\fB"\fP) (unbound)
Specify a buffer to be used in the following command\&.
There are 37 buffers that can be specified:
the 26 `named\&' buffers \fB"a\fP to \fB"z\fP, the `yank' buffer \fB"0\fP,
the nine `queued\&' buffers \fB"1\fP to \fB"9\fP and the `black hole' buffer
\fB"_\fP\&.  The named buffers can also be specified as \fB"A\fP to \fB"Z\fP\&.
.RS
.PP
When a buffer is specified for a cut, change or yank command, the text
concerned replaces the previous contents of the specified buffer\&. If
a named buffer is specified using a capital, the newly cut text is
appended to the buffer instead of overwriting it\&. When using the \fB"_\fP
buffer, nothing happens\&. This can be useful for deleting text without
affecting the normal registers\&.
.PP
If no buffer is specified for a cut or change command, \fB"1\fP is used, and
the contents of \fB"1\fP to \fB"8\fP are each shifted along one buffer;
the contents of \fB"9\fP is lost\&. If no buffer is specified for a yank
command, \fB"0\fP is used\&. Finally, a paste command without a specified
buffer will paste the text from the most recent command regardless of any
buffer that might have been used with that command\&.
.PP
When called from a widget function by the \fBzle\fP command, the buffer
can optionally be specified with an argument\&. For example,
.PP
.RS
.nf
\fBzle vi\-set\-buffer A\fP
.fi
.RE
.RE
.TP
\fBvi\-set\-mark\fP (unbound) (\fBm\fP) (unbound)
Set the specified mark at the cursor position\&.
.TP
\fBset\-mark\-command\fP (\fB^@\fP) (unbound) (unbound)
Set the mark at the cursor position\&.  If called with a negative
numeric argument, do not set the mark but deactivate the region so that
it is no longer highlighted (it is still usable for other purposes)\&.
Otherwise the region is marked as active\&.
.TP
\fBspell\-word\fP (\fBESC\-$ ESC\-S ESC\-s\fP) (unbound) (unbound)
Attempt spelling correction on the current word\&.
.TP
\fBsplit\-undo\fP
Breaks the undo sequence at the current change\&.  This is useful in vi mode as
changes made in insert mode are coalesced on entering command mode\&.  Similarly,
\fBundo\fP will normally revert as one all the changes made by a user\-defined
widget\&.
.TP
\fBundefined\-key\fP
This command is executed when a key sequence that is not bound to any
command is typed\&.  By default it beeps\&.
.TP
\fBundo\fP (\fB^_ ^Xu ^X^U\fP) (\fBu\fP) (unbound)
Incrementally undo the last text modification\&.  When called from a
user\-defined widget, takes an optional argument indicating a previous state
of the undo history as returned by the \fBUNDO_CHANGE_NO\fP variable;
modifications are undone until that state is reached\&.
.RS
.PP
Note that when invoked from vi command mode, the full prior change made in
insert mode is reverted, the changes having been merged when command mode was
selected\&.
.RE
.TP
\fBredo\fP (unbound) (\fB^R\fP) (unbound)
Incrementally redo undone text modifications\&.
.TP
\fBvi\-undo\-change\fP (unbound) (unbound) (unbound)
Undo the last text modification\&.
If repeated, redo the modification\&.
.TP
\fBvisual\-mode\fP (unbound) (\fBv\fP) (unbound)
Toggle vim\-style visual selection mode\&. If line\-wise visual mode is
currently enabled then it is changed to being character\-wise\&. If used
following an operator, it forces the subsequent movement command to be
treated as a character\-wise movement\&.
.TP
\fBvisual\-line\-mode\fP (unbound) (\fBV\fP) (unbound)
Toggle vim\-style line\-wise visual selection mode\&. If character\-wise
visual mode is currently enabled then it is changed to being line\-wise\&. If used
following an operator, it forces the subsequent movement command to be
treated as a line\-wise movement\&.
.TP
\fBwhat\-cursor\-position\fP (\fB^X=\fP) (\fBga\fP) (unbound)
Print the character under the cursor, its code as an octal, decimal and
hexadecimal number, the current cursor position within the buffer and the
column of the cursor in the current line\&.
.TP
\fBwhere\-is\fP
Read the name of an editor command and print the listing of key
sequences that invoke the specified command\&.
A restricted set of editing functions is available in the
mini\-buffer\&.  Keys are looked up in the special
\fBcommand\fP keymap, and if not found there in the main keymap\&.
.TP
\fBwhich\-command\fP (\fBESC\-?\fP) (unbound) (unbound)
Push the buffer onto the buffer stack, and execute the
command `\fBwhich\-command\fP \fIcmd\fP\&'\&. where \fIcmd\fP is the current
command\&.  \fBwhich\-command\fP is normally aliased to \fBwhence\fP\&.
.TP
\fBvi\-digit\-or\-beginning\-of\-line\fP (unbound) (\fB0\fP) (unbound)
If the last command executed was a digit as part of an argument,
continue the argument\&.  Otherwise, execute vi\-beginning\-of\-line\&.
.SS "Text Objects"
Text objects are commands that can be used to select a block of text
according to some criteria\&. They are a feature of the vim text editor
and so are primarily intended for use with vi operators or from visual
selection mode\&. However, they can also be used from vi\-insert or emacs
mode\&. Key bindings listed below apply to the \fBviopp\fP and \fBvisual\fP
keymaps\&.
.PP
.PD 0
.TP
.PD
\fBselect\-a\-blank\-word\fP (\fBaW\fP)
Select a word including adjacent blanks, where a word is defined as a
series of non\-blank characters\&. With a numeric argument, multiple words
will be selected\&.
.TP
\fBselect\-a\-shell\-word\fP (\fBaa\fP)
Select the current command argument applying the normal rules for
quoting\&.
.TP
\fBselect\-a\-word\fP (\fBaw\fP)
Select a word including adjacent blanks, using the normal vi\-style word
definition\&. With a numeric argument, multiple words will be selected\&.
.TP
\fBselect\-in\-blank\-word\fP (\fBiW\fP)
Select a word, where a word is defined as a series of non\-blank
characters\&. With a numeric argument, multiple words will be selected\&.
.TP
\fBselect\-in\-shell\-word\fP (\fBia\fP)
Select the current command argument applying the normal rules for
quoting\&. If the argument begins and ends with matching quote characters,
these are not included in the selection\&.
.TP
\fBselect\-in\-word\fP (\fBiw\fP)
Select a word, using the normal vi\-style word definition\&. With a numeric
argument, multiple words will be selected\&.
.PP
.SH "CHARACTER HIGHLIGHTING"
.PP
The line editor has the ability to highlight characters or regions
of the line that have a particular significance\&.  This is controlled
by the array parameter \fBzle_highlight\fP, if it has been set by the user\&.
.PP
If the parameter contains the single entry \fBnone\fP all highlighting
is turned off\&.  Note the parameter is still expected to be an array\&.
.PP
Otherwise each entry of the array should consist of a word indicating a
context for highlighting, then a colon, then a comma\-separated list of
the types of highlighting to apply in that context\&.
.PP
The contexts available for highlighting are the following:
.PP
.PD 0
.TP
.PD
\fBdefault\fP
Any text within the command line not affected by any other highlighting\&.
Text outside the editable area of the command line is not affected\&.
.TP
\fBisearch\fP
When one of the incremental history search widgets is active, the
area of the command line matched by the search string or pattern\&.
.TP
\fBregion\fP
The region between the cursor (point) and the mark as set with
\fBset\-mark\-command\fP\&.  The region is only highlighted if it is active,
which is the case if \fBset\-mark\-command\fP or \fBexchange\-point\-and\-mark\fP
has been called and the line has not been subsequently modified\&.  The
region can be deactivated by calling \fBset\-mark\-command\fP with a
negative numeric argument, or reactivated by calling
\fBexchange\-point\-and\-mark\fP with a zero numeric argument\&.  Note
that whether or not the region is active has no effect on its
use within widgets, it simply determines whether it is highlighted\&.
.TP
\fBspecial\fP
Individual characters that have no direct printable
representation but are shown in a special manner by the line editor\&.
These characters are described below\&.
.TP
\fBsuffix\fP
This context is used in completion for characters that are
marked as suffixes that will be removed if the completion ends
at that point, the most obvious example being a slash (\fB/\fP) after
a directory name\&.  Note that suffix removal is configurable; the
circumstances under which the suffix will be removed may differ
for different completions\&.
.PP
\fBzle_highlight\fP may contain additional fields for controlling how
terminal sequences to change colours are output\&.  Each of the following is
followed by a colon and a string in the same form as for key bindings\&.
This will not be necessary for the vast majority of terminals as the
defaults shown in parentheses are widely used\&.
.PP
.PD 0
.TP
.PD
\fBfg_start_code\fP (\fB\ee[3\fP)
The start of the escape sequence for the foreground colour\&.
This is followed by an ASCII digit representing the colour\&.
.TP
\fBfg_default_code\fP (\fB9\fP)
The number to use instead of the colour to reset the default foreground
colour\&.
.TP
\fBfg_end_code\fP (\fBm\fP)
The end of the escape sequence for the foreground colour\&.
.TP
\fBbg_start_code\fP (\fB\ee[4\fP)
The start of the escape sequence for the background colour\&.
This is followed by an ASCII digit representing the colour\&.
.TP
\fBbg_default_code\fP (\fB9\fP)
The number to use instead of the colour to reset the default
background colour\&.
.TP
\fBbg_end_code\fP (\fBm\fP)
The end of the escape sequence for the background colour\&.
.PP
The available types of highlighting are the following\&.  Note that
not all types of highlighting are available on all terminals:
.PP
.PD 0
.TP
.PD
\fBnone\fP
No highlighting is applied to the given context\&.  It is not useful for
this to appear with other types of highlighting; it is used to override
a default\&.
.TP
\fBfg=\fP\fIcolour\fP
The foreground colour should be set to \fIcolour\fP, a decimal integer
or the name of one of the eight most widely\-supported colours\&.
.RS
.PP
Not all terminals support this and, of those that do, not all provide
facilities to test the support, hence the user should decide based on the
terminal type\&.  Most terminals support the colours \fBblack\fP, \fBred\fP,
\fBgreen\fP, \fByellow\fP, \fBblue\fP, \fBmagenta\fP, \fBcyan\fP and \fBwhite\fP,
which can be set by name\&.  In addition\&. \fBdefault\fP may be used to
set the terminal\&'s default foreground colour\&.  Abbreviations are allowed;
\fBb\fP or \fBbl\fP selects black\&.  Some terminals may generate additional
colours if the \fBbold\fP attribute is also present\&.
.PP
On recent terminals and on systems with an up\-to\-date terminal database the
number of colours supported may be tested by the command `\fBechotc
Co\fP\&'; if this succeeds, it indicates a limit on the number of colours which
will be enforced by the line editor\&.  The number of colours is in any case
limited to 256 (i\&.e\&. the range 0 to 255)\&.
.PP
Colour is also known as color\&.
.RE
.TP
\fBbg=\fP\fIcolour\fP
The background colour should be set to \fIcolour\fP\&.
This works similarly to the foreground colour, except the background is
not usually affected by the bold attribute\&.
.TP
\fBbold\fP
The characters in the given context are shown in a bold font\&.
Not all terminals distinguish bold fonts\&.
.TP
\fBstandout\fP
The characters in the given context are shown in the terminal\&'s standout
mode\&.  The actual effect is specific to the terminal; on many terminals it
is inverse video\&.  On some such terminals, where the cursor does not blink
it appears with standout mode negated, making it less than clear where
the cursor actually is\&.  On such terminals one of the other effects
may be preferable for highlighting the region and matched search string\&.
.TP
\fBunderline\fP
The characters in the given context are shown underlined\&.  Some
terminals show the foreground in a different colour instead; in this
case whitespace will not be highlighted\&.
.PP
The characters described above as `special\&' are as follows\&.  The
formatting described here is used irrespective of whether the characters
are highlighted:
.PP
.PD 0
.TP
.PD
ASCII control characters
Control characters in the ASCII range are shown as
`\fB^\fP\&' followed by the base character\&.
.TP
Unprintable multibyte characters
This item applies to control characters not in the ASCII range,
plus other characters as follows\&.  If the \fBMULTIBYTE\fP option is in
effect, multibyte characters not in the ASCII character set that are
reported as having zero width are treated as combining characters when the
option \fBCOMBINING_CHARS\fP is on\&.  If the option is off, or if a character
appears where a combining character is not valid, the character
is treated as unprintable\&.
.RS
.PP
Unprintable multibyte characters are shown as a hexadecimal number between
angle brackets\&.  The number is the code point of the character in the wide
character set; this may or may not be Unicode, depending on the operating
system\&.
.RE
.TP
Invalid multibyte characters
If the \fBMULTIBYTE\fP option is in effect, any sequence of one or more
bytes that does not form a valid character in the current character
set is treated as a series of bytes each shown as a special character\&.
This case can be distinguished from other unprintable characters
as the bytes are represented as two hexadecimal digits between angle
brackets, as distinct from the four or eight digits that are used for
unprintable characters that are nonetheless valid in the current
character set\&.
.RS
.PP
Not all systems support this: for it to work, the system\&'s representation of
wide characters must be code values from the Universal Character Set,
as defined by IS0 10646 (also known as Unicode)\&.
.RE
.TP
Wrapped double\-width characters
When a double\-width character appears in the final column of a line, it
is instead shown on the next line\&. The empty space left in the original
position is highlighted as a special character\&.
.PP
If \fBzle_highlight\fP is not set or no value applies to a particular
context, the defaults applied are equivalent to
.PP
.RS
.nf
\fBzle_highlight=(region:standout special:standout
suffix:bold isearch:underline)\fP
.fi
.RE
.PP
i\&.e\&. both the region and special characters are shown in standout mode\&.
.PP
Within widgets, arbitrary regions may be highlighted by setting the
special array parameter \fBregion_highlight\fP; see
above\&.
.PP
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/                                             0040755 0001750 0001750 00000000000 12612224760 020654  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/EV_SET.2                                     0100644 0001750 0001750 00000000022 12567450732 021764  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/kqueue.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/FD_CLR.2                                     0100644 0001750 0001750 00000000022 12567450732 021730  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/select.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/FD_COPY.2                                    0100644 0001750 0001750 00000000022 12567450732 022062  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/select.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/FD_ISSET.2                                   0100644 0001750 0001750 00000000022 12567450732 022177  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/select.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/FD_SET.2                                     0100644 0001750 0001750 00000000022 12567450732 021743  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/select.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/FD_ZERO.2                                    0100644 0001750 0001750 00000000022 12567450732 022067  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/select.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/_exit.2                                      0100644 0001750 0001750 00000007324 12567450732 022063  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: _exit.2,v 1.6 1995/02/27 12:31:34 cgd Exp $
.\"
.\" Copyright (c) 1980, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)_exit.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt EXIT 2
.Os BSD 4
.Sh NAME
.Nm _exit
.Nd terminate the calling process
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft void
.Fo _exit
.Fa "int status"
.Fc
.Sh DESCRIPTION
The
.Fn _exit
function
terminates a process, with the following consequences:
.Bl -bullet
.It
All of the descriptors that were open in the calling process are closed.
This may entail delays; for example, waiting for output to drain.
A process in this state may not be killed, as it is already dying.
.It
If the parent process of the calling process has an outstanding
.Xr wait
call
or catches the
.Dv SIGCHLD
signal,
it is notified of the calling process's termination;
the
.Em status
is set as defined by
.Xr wait 2 .
.It
The parent process-ID of all of the calling process's existing child
processes are set to 1; the initialization process
(see the DEFINITIONS section of
.Xr intro 2 )
inherits each of these processes.
.It
If the termination of the process causes any process group
to become orphaned (usually because the parents of all members
of the group have now exited; see
.Dq orphaned process group
in
.Xr intro 2 ) ,
and if any member of the orphaned group is stopped,
the
.Dv SIGHUP
signal and the
.Dv SIGCONT
signal are sent to all members of the newly-orphaned process group.
.It
If the process is a controlling process (see
.Xr intro 2 ) ,
the
.Dv SIGHUP
signal is sent to the foreground process group of the controlling terminal.
All current access to the controlling terminal is revoked.
.El
.Pp
Most C programs call the library routine
.Xr exit 3 ,
which flushes buffers, closes streams, unlinks temporary files, etc.,
before
calling
.Fn _exit .
.Sh RETURN VALUE
.Fn _exit
can never return.
.Sh SEE ALSO
.Xr fork 2 ,
.Xr sigaction 2 ,
.Xr wait 2 ,
.Xr exit 3
.Sh STANDARDS
The
.Nm _exit
function is defined by
.St -p1003.1-88 .
                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/accept.2                                     0100644 0001750 0001750 00000013615 12567450733 022213  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: accept.2,v 1.7 1996/01/31 20:14:42 mycroft Exp $
.\"
.\" Copyright (c) 1983, 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)accept.2	8.2 (Berkeley) 12/11/93
.\"
.Dd March 18, 2015
.Dt ACCEPT 2
.Os BSD 4.2
.Sh NAME
.Nm accept
.Nd accept a connection on a socket
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo accept
.Fa "int socket"
.Fa "struct sockaddr *restrict address"
.Fa "socklen_t *restrict address_len"
.Fc
.Sh DESCRIPTION
The argument
.Fa socket
is a socket that has been created with
.Xr socket 2 ,
bound to an address with
.Xr bind 2 ,
and is listening for connections after a
.Xr listen 2 .
.Fn accept
extracts the first connection request
on the queue of pending connections, creates
a new socket with the same properties of 
.Fa socket ,
and allocates a new file descriptor
for the socket.  If no pending connections are
present on the queue, and the socket is not marked
as non-blocking,
.Fn accept
blocks the caller until a connection is present.
If the socket is marked non-blocking and no pending
connections are present on the queue, 
.Fn accept
returns an error as described below.
The accepted socket
may not be used
to accept more connections.  The original socket
.Fa socket,
remains open.
.Pp
The argument
.Fa address
is a result parameter that is filled in with
the address of the connecting entity,
as known to the communications layer.
The exact format of the
.Fa address
parameter is determined by the domain in which the communication
is occurring.
The 
.Fa address_len
is a value-result parameter; it should initially contain the
amount of space pointed to by
.Fa address ;
on return it will contain the actual length (in bytes) of the
address returned.
This call
is used with connection-based socket types, currently with
.Dv SOCK_STREAM . 
.Pp
It is possible to
.Xr select 2
a socket for the purposes of doing an
.Fn accept
by selecting it for read.
.Pp
For certain protocols which require an explicit confirmation,
such as
.Tn ISO
or
.Tn DATAKIT ,
.Fn accept
can be thought of
as merely dequeuing the next connection
request and not implying confirmation.
Confirmation can be implied by a normal read or write on the new
file descriptor, and rejection can be implied by closing the
new socket.
.Pp
One can obtain user connection request data without confirming
the connection by issuing a 
.Xr recvmsg 2
call with an
.Fa msg_iovlen
of 0 and a non-zero
.Fa msg_controllen ,
or by issuing a
.Xr getsockopt 2
request.
Similarly, one can provide user connection rejection information
by issuing a
.Xr sendmsg 2
call with providing only the control information,
or by calling
.Xr setsockopt 2 .
.Sh RETURN VALUES
The call returns \-1 on error and the global variable
.Va errno
is set to indicate the error.
If it succeeds, it returns a non-negative integer
that is a descriptor for the accepted socket.
.Sh ERRORS
The
.Fn accept
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Fa socket
is not a valid file descriptor.
.\" ==========
.It Bq Er ECONNABORTED
The connection to
.Fa socket
has been aborted.
.\" ==========
.It Bq Er EFAULT
The
.Fa address
parameter is not in a writable part of the
user address space.
.\" ==========
.It Bq Er EINTR
The
.Fn accept
system call was terminated by a signal.
.\" ==========
.It Bq Er EINVAL
.Fa socket
is unwilling to accept connections.
.\" ==========
.It Bq Er EMFILE
The per-process descriptor table is full.
.\" ==========
.It Bq Er ENFILE
The system file table is full.
.\" ==========
.It Bq Er ENOMEM
Insufficient memory was available to complete the operation.
.\" ==========
.It Bq Er ENOTSOCK
.Fa socket
references a file type other than a socket.
.\" ==========
.It Bq Er EOPNOTSUPP
.Fa socket
is not of type
.Dv SOCK_STREAM
and thus does not accept connections. 
.\" ==========
.It Bq Er EWOULDBLOCK
.Fa socket
is marked as non-blocking and no connections are present to be accepted.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr bind 2 ,
.Xr connect 2 ,
.Xr connectx 2 ,
.Xr listen 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn accept
function appeared in 
.Bx 4.2 .
                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/access.2                                     0100644 0001750 0001750 00000014250 12567450733 022211  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: access.2,v 1.7 1995/02/27 12:31:44 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)access.2	8.2 (Berkeley) 4/1/94
.\"
.Dd April 1, 1994
.Dt ACCESS 2
.Os BSD 4
.Sh NAME
.Nm access ,
.Nm faccessat
.Nd check access permissions of a file or pathname
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo access
.Fa "const char *path"
.Fa "int amode"
.Fc
.Ft int
.Fn faccessat "int fd" "const char *path" "int mode" "int flag"
.Sh DESCRIPTION
The
.Fn access
function checks the accessibility of the
file named by
.Fa path
for the access permissions indicated by
.Fa amode .
The value of
.Fa amode
is the bitwise inclusive OR of the access permissions to be
checked
.Pf ( Dv R_OK
for read permission,
.Dv W_OK
for write permission and
.Dv X_OK
for execute/search permission) or the existence test,
.Dv F_OK .
All components of the pathname
.Fa path
are checked for access permissions (including
.Dv F_OK ) .
.Pp
The real user ID is used in place of the effective user ID
and the real group access list
(including the real group ID) are
used in place of the effective ID for verifying permission.
.Pp
The
.Fn faccessat
system call is equivalent to
.Fn access
except in the case where
.Fa path
specifies a relative path.
In this case the file whose accessibility is to be determined is
located relative to the directory associated with the file descriptor
.Fa fd
instead of the current working directory.
If
.Fn faccessat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior is
identical to a call to
.Fn access .
Values for
.Fa flag
are constructed by a bitwise-inclusive OR of flags from the following
list, defined in
.In fcntl.h :
.Bl -tag -width indent
.It Dv AT_EACCESS
The checks for accessibility are performed using the effective user and group
IDs instead of the real user and group ID as required in a call to
.Fn access .
.El
.Pp
Even if a process has appropriate privileges and indicates success for
.Dv X_OK ,
the file may not actually have execute permission bits set.
Likewise for
.Dv R_OK
and
.Dv W_OK .
.Sh RETURN VALUES
If
.Fa path
cannot be found
or if any of the desired access modes would not be granted,
then a -1 value is returned and the global integer variable
.Va errno
is set to indicate the error.
Otherwise, a 0 value is returned.
.Sh ERRORS
Access to the file is denied if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Permission bits of the file mode do not permit the requested access,
or search permission is denied on a component of the path prefix.
.Pp
The owner of a file has permission checked
with respect to the ``owner'' read, write, and execute mode bits,
members of the file's group other than the owner have permission checked
with respect to the ``group'' mode bits,
and all others have permissions checked
with respect to the ``other'' mode bits.
.\" 
.\" ==========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.It Bq Er EINVAL
An invalid value was specified for
.Ar amode .
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
The named file does not exist.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er EROFS
Write access is requested for a file on a read-only file system.
.\" ==========
.It Bq Er ETXTBSY
Write access is requested for a pure procedure (shared text)
file that is presently being executed.
.El
.Pp
Also, the
.Fn faccessat
system call may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is
neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er EINVAL
The value of the
.Fa flag
argument is not valid.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr stat 2
.Sh STANDARDS
The
.Fn access
function conforms to 
.St -p1003.1-90 .
The
.Fn faccessat
system call is expected to conform to POSIX.1-2008 .
.Sh CAVEAT
.Fn access
is a potential security hole and
should never be used.
                                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/acct.2                                       0100644 0001750 0001750 00000007724 12567450733 021672  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: acct.2,v 1.6 1995/02/27 12:31:47 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)acct.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt ACCT 2
.Os BSD 4
.Sh NAME
.Nm acct
.Nd enable or disable process accounting
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fn acct "const char *file"
.Sh DESCRIPTION
The
.Fn acct
call enables or disables the collection of system accounting
records.
If the argument
.Fa file
is a nil pointer, accounting is disabled.
If
.Fa file
is an
.Em existing
pathname (null-terminated), record collection is enabled and for 
every process initiated which terminates under normal
conditions an accounting record is appended to
.Fa file .
Abnormal conditions of termination are reboots
or other fatal system problems.
Records for processes which never terminate can not be
produced by
.Fn acct .
.Pp
For more information on the record structure used by
.Fn acct ,
see
.Pa /usr/include/sys/acct.h
and
.Xr acct 5 .
.Pp
This call is permitted only to the super-user.
.Sh NOTES
Accounting is automatically disabled when the file system the
accounting file resides on runs out of space; it is enabled when
space once again becomes available.
.Sh RETURN VALUES
.Rv -std acct
The file must exist and the call may be exercised only by the super-user.
.Sh ERRORS
.Fn acct
will fail if one of the following is true:
.Bl -tag -width Er
.It Bq Er EPERM
The caller is not the super-user.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix,
or the path name is not a regular file.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EROFS
The named file resides on a read-only file system.
.It Bq Er EFAULT
.Fa File
points outside the process's allocated address space.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr acct 5 ,
.Xr sa 8
.Sh HISTORY
An
.Fn acct
function call appeared in 
.At v7 .
                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/adjtime.2                                    0100644 0001750 0001750 00000007601 12567450733 022367  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: adjtime.2,v 1.5 1995/10/12 15:40:44 jtc Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)adjtime.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt ADJTIME 2
.Os BSD 4.3
.Sh NAME
.Nm adjtime
.Nd "correct the time to allow synchronization of the system clock"
.Sh SYNOPSIS
.Fd #include <sys/time.h>
.Ft int
.Fn adjtime "const struct timeval *delta" "struct timeval *olddelta"
.Sh DESCRIPTION
.Fn Adjtime
makes small adjustments to the system time, as returned by
.Xr gettimeofday 2 ,
advancing or retarding it
by the time specified by the timeval
.Fa delta .
If
.Fa delta
is negative, the clock is
slowed down by incrementing it more slowly than normal until
the correction is complete.
If
.Fa delta
is positive, a larger increment than normal
is used.
The skew used to perform the correction is generally a fraction of one percent.
Thus, the time is always
a monotonically increasing function.
A time correction from an earlier call to
.Fn adjtime
may not be finished when
.Fn adjtime
is called again.
If
.Fa olddelta
is non-nil,
the structure pointed to will contain, upon return, the
number of microseconds still to be corrected
from the earlier call.
.Pp
This call may be used by time servers that synchronize the clocks
of computers in a local area network.
Such time servers would slow down the clocks of some machines
and speed up the clocks of others to bring them to the average network time.
.Pp
The call 
.Fn adjtime
is restricted to the super-user.
.Sh RETURN VALUES
A return value of 0 indicates that the call succeeded.
A return value of -1 indicates that an error occurred, and in this
case an error code is stored in the global variable
.Va errno .
.Sh ERRORS
.Fn Adjtime
will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
An argument points outside the process's allocated address space.
.It Bq Er EPERM
The process's effective user ID is not that of the super-user.
.El
.Sh SEE ALSO
.Xr date 1 ,
.Xr gettimeofday 2 ,
.Xr timed 8 ,
.Xr timedc 8
.Rs
.%T "TSP: The Time Synchronization Protocol for UNIX 4.3BSD"
.%A R. Gusella
.%A S. Zatti
.Re
.Sh HISTORY
The
.Fn adjtime
function call appeared in
.Bx 4.3 .
                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/aio_cancel.2                                 0100644 0001750 0001750 00000006626 12567450732 023034  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1999 Softweyr LLC.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Softweyr LLC AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Softweyr LLC OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/aio_cancel.2,v 1.22 2003/01/13 10:37:11 tjr Exp $
.\"
.Dd January 19, 2000
.Dt AIO_CANCEL 2
.Os
.Sh NAME
.Nm aio_cancel
.Nd cancel an outstanding asynchronous I/O operation (REALTIME)
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In aio.h
.Ft int
.Fo aio_cancel
.Fa "int fildes"
.Fa "struct aiocb *aiocbp"
.Fc
.Sh DESCRIPTION
The
.Fn aio_cancel
system call cancels the outstanding asynchronous
I/O request for the file descriptor specified in
.Fa fildes .
If
.Fa aiocbp
is specified, only that specific asynchronous I/O request is cancelled.
.Pp
Normal asynchronous notification occurs for cancelled requests.
Requests complete with an error result of
.Er ECANCELED .
.Sh RESTRICTIONS
The
.Fn aio_cancel
system call does not cancel asynchronous I/O requests for raw disk devices.
The
.Fn aio_cancel
system call will always return
.Dv AIO_NOTCANCELED
for file descriptors associated with raw disk devices.
.Sh RETURN VALUES
The
.Fn aio_cancel
system call returns -1 to indicate an error, or one of the following:
.Bl -tag -width Dv
.It Bq Dv AIO_ALLDONE
All of the requests meeting the criteria have finished.
.It Bq Dv AIO_CANCELED
All outstanding requests meeting the criteria specified were cancelled.
.It Bq Dv AIO_NOTCANCELED
Some requests were not cancelled, status for the requests should be
checked with
.Xr aio_error 2 .
.El
.Sh ERRORS
An error return from
.Fn aio_cancel
indicates:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The
.Fa fildes
argument
is not a valid file descriptor.
.El
.Sh SEE ALSO
.Xr aio_error 2 ,
.Xr aio_read 2 ,
.Xr aio_return 2 ,
.Xr aio_suspend 2 ,
.Xr aio_write 2 ,
.Xr aio 4
.Sh STANDARDS
The
.Fn aio_cancel
system call is expected to conform to the
.St -p1003.1
standard.
.Sh HISTORY
The
.Fn aio_cancel
system call first appeared in
.Fx 3.0 .
The first functional implementation of
.Fn aio_cancel
appeared in
.Fx 4.0 .
.Sh AUTHORS
.An -nosplit
This
manual page was originally written by
.An Wes Peters Aq wes@softweyr.com .
.An Christopher M Sedore Aq cmsedore@maxwell.syr.edu
updated it when
.Fn aio_cancel
was implemented for
.Fx 4.0 .
                                                                                                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/aio_error.2                                  0100644 0001750 0001750 00000005454 12567450733 022737  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1999 Softweyr LLC.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Softweyr LLC AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Softweyr LLC OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/aio_error.2,v 1.18 2003/01/13 10:37:11 tjr Exp $
.\"
.Dd June 2, 1999
.Dt AIO_ERROR 2
.Os
.Sh NAME
.Nm aio_error
.Nd retrieve error status of asynchronous I/O operation (REALTIME)
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In aio.h
.Ft int
.Fo aio_error
.Fa "const struct aiocb *aiocbp"
.Fc
.Sh DESCRIPTION
The
.Fn aio_error
system call returns the error status of the asynchronous I/O request
associated with the structure pointed to by
.Fa aiocbp .
.Sh RETURN VALUES
If the asynchronous I/O request has completed successfully,
.Fn aio_error
returns 0.  If the request has not yet completed,
.Er EINPROGRESS
is returned.
If the request has completed unsuccessfully,
the error status is returned as described in
.Xr read 2 ,
.Xr write 2 ,
or
.Xr fsync 2
is returned.
On failure,
.Fn aio_error
returns
.Dv -1
and sets
.Dv errno
to indicate the error condition.
.Sh ERRORS
The
.Fn aio_error
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
The
.Fa aiocbp
argument
does not reference an outstanding asynchronous I/O request.
.El
.Sh SEE ALSO
.Xr aio_cancel 2 ,
.Xr aio_read 2 ,
.Xr aio_return 2 ,
.Xr aio_suspend 2 ,
.Xr aio_write 2 ,
.Xr fsync 2 ,
.Xr read 2 ,
.Xr write 2 ,
.Xr aio 4
.Sh STANDARDS
The
.Fn aio_error
system call
is expected to conform to the
.St -p1003.1
standard.
.Sh HISTORY
The
.Fn aio_error
system call first appeared in
.Fx 3.0 .
.Sh AUTHORS
This
manual page was written by
.An Wes Peters Aq wes@softweyr.com .
                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/aio_read.2                                   0100644 0001750 0001750 00000013624 12567450733 022517  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1998 Terry Lambert
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/aio_read.2,v 1.19 2003/01/14 02:37:06 tjr Exp $
.\"
.Dd November 17, 1998
.Dt AIO_READ 2
.Os
.Sh NAME
.Nm aio_read
.Nd asynchronous read from a file (REALTIME)
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In aio.h
.Ft int
.Fo aio_read
.Fa "struct aiocb *aiocbp"
.Fc
.Sh DESCRIPTION
The
.Fn aio_read
system call allows the calling process to read
.Fa aiocbp->aio_nbytes
from the descriptor
.Fa aiocbp->aio_fildes ,
beginning at the offset
.Fa aiocbp->aio_offset ,
into the buffer pointed to by
.Fa aiocbp->aio_buf .
The call returns immediately after the read request has
been enqueued to the descriptor;
the read may or may not have completed at the time the call returns.
.Pp
If _POSIX_PRIORITIZED_IO is defined, and the descriptor supports it,
then the enqueued operation is submitted at a priority equal to that
of the calling process minus
.Fa aiocbp->aio_reqprio .
.Pp
The
.Fa aiocbp->aio_lio_opcode
argument
is ignored by the
.Fn aio_read
system call.
.Pp
The
.Fa aiocbp
pointer may be subsequently used as an argument to
.Fn aio_return
and
.Fn aio_error
in order to determine return or error status for the enqueued operation
while it is in progress.
.Pp
If the request could not be enqueued (generally due to invalid arguments),
then the call returns without having enqueued the request.
.Pp
If the request is successfully enqueued, the value of
.Fa aiocbp->aio_offset
can be modified during the request as context, so this value must
not be referenced after the request is enqueued.
.Sh RESTRICTIONS
The Asynchronous I/O Control Block structure pointed to by
.Fa aiocbp
and the buffer that the
.Fa aiocbp->aio_buf
member of that structure references must remain valid until the
operation has completed.  For this reason, use of auto (stack) variables
for these objects is discouraged.
.Pp
The asynchronous I/O control buffer
.Fa aiocbp
should be zeroed before the
.Fn aio_read
call to avoid passing bogus context information to the kernel.
.Pp
Modifications of the Asynchronous I/O Control Block structure or the
buffer contents after the request has been enqueued, but before the
request has completed, are not allowed.
.Pp
If the file offset in
.Fa aiocbp->aio_offset
is past the offset maximum  for
.Fa aiocbp->aio_fildes ,
no I/O will occur.
.Sh RETURN VALUES
.Rv -std aio_read
.Sh DIAGNOSTICS
None.
.Sh ERRORS
The
.Fn aio_read
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EAGAIN
Because of system resource limitations,
the request was not queued.
.\" ==========
.It Bq Er ENOSYS
The
.Fn aio_read
system call is not supported.
.El
.Pp
The following conditions may be synchronously detected when the
.Fn aio_read
system call is made, or asynchronously, at any time thereafter.
If they are detected at call time,
.Fn aio_read
returns -1 and sets
.Va errno
appropriately.
Otherwise, the
.Fn aio_return
system call must be called.
It will return -1;
.Fn aio_error
must then be called to determine the actual value
that would have been returned in
.Va errno .
.Pp
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The
.Fa aiocbp->aio_fildes
argument
is invalid.
.\" ==========
.It Bq Er EINVAL
The offset
.Fa aiocbp->aio_offset
is not valid, the priority specified by
.Fa aiocbp->aio_reqprio
is not a valid priority, or the number of bytes specified by
.Fa aiocbp->aio_nbytes
is not valid.
.\" ==========
.It Bq Er EOVERFLOW
The file is a regular file,
.Fa aiocbp->aio_nbytes
is greater than zero, the starting offset in
.Fa aiocbp->aio_offset
is before the end of the file, but is at or beyond the
.Fa aiocbp->aio_fildes
offset maximum.
.El
.Pp
If the request is successfully enqueued, but subsequently cancelled
or an error occurs, the value returned by the
.Fn aio_return
system call is per the
.Xr read 2
system call, and the value returned by the
.Fn aio_error
system call is either one of the error returns from the
.Xr read 2
system call, or one of:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The
.Fa aiocbp->aio_fildes
argument
is invalid for reading.
.\" ==========
.It Bq Er ECANCELED
The request was explicitly cancelled via a call to
.Fn aio_cancel .
.\" ==========
.It Bq Er EINVAL
The offset
.Fa aiocbp->aio_offset
would be invalid.
.El
.Sh SEE ALSO
.Xr aio_cancel 2 ,
.Xr aio_error 2 ,
.Xr aio_return 2 ,
.Xr aio_suspend 2 ,
.Xr aio_write 2 ,
.Xr aio 4
.Sh STANDARDS
The
.Fn aio_read
system call is expected to conform to the
.St -p1003.1
standard.
.Sh HISTORY
The
.Fn aio_read
system call first appeared in
.Fx 3.0 .
.Sh AUTHORS
This
manual page was written by
.An Terry Lambert Aq terry@whistle.com .
.Sh BUGS
Invalid information in
.Fa aiocbp->_aiocb_private
may confuse the kernel.
                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/aio_return.2                                 0100644 0001750 0001750 00000010222 12567450733 023112  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\" Copyright (c) 1999 Softweyr LLC.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Softweyr LLC AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Softweyr LLC OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/aio_return.2,v 1.17 2003/01/13 10:37:11 tjr Exp $
.\"
.Dd September 26, 2008
.Dt AIO_RETURN 2
.Os
.Sh NAME
.Nm aio_return
.Nd retrieve return status of asynchronous I/O operation (REALTIME)
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In aio.h
.Ft ssize_t
.Fo aio_return
.Fa "struct aiocb *aiocbp"
.Fc
.Sh DESCRIPTION
The
.Fn aio_return
system call returns the final status of the asynchronous I/O request
associated with the structure pointed to by
.Fa aiocbp .
.Pp
The
.Fn aio_return
system call
should only be called once, to obtain the final status of an asynchronous
I/O operation (once
.Xr aio_error 2
returns something other than
.Er EINPROGRESS) and to clean up system resources.
However, if
.Fn aio_return
is not called at all,
.Xr aio 4
will leak resources.
.Sh RETURN VALUES
If the asynchronous I/O request has completed,
the status is returned as described in
.Xr read 2 ,
.Xr write 2 ,
or
.Xr fsync 2 .
On failure,
.Fn aio_return
returns
.Dv -1
and sets
.Dv errno
to indicate the error condition.
.Sh ERRORS
The
.Fn aio_return
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
The
.Fa aiocbp
argument
does not reference an outstanding asynchronous I/O request.
.\" ==========
.It Bq Er EINPROGRESS
The asynchronous I/O request is still in progress.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <aio.h>
.Pp
.Ft int
.br
.Fo aio_return
.Fa "struct aiocb *aiocbp"
.Fc ;
.Pp
The type of the return value has changed.
.Sh SEE ALSO
.Xr aio_cancel 2 ,
.Xr aio_error 2 ,
.Xr aio_suspend 2 ,
.Xr aio_write 2 ,
.Xr fsync 2 ,
.Xr read 2 ,
.Xr write 2 ,
.Xr aio 4 ,
.Xr compat 5
.Sh STANDARDS
The
.Fn aio_return
system call
is expected to conform to the
.St -p1003.1
standard.
.Sh HISTORY
The
.Fn aio_return
system call first appeared in
.Fx 3.0 .
.Sh AUTHORS
This
manual page was written by
.An Wes Peters Aq wes@softweyr.com .
                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/aio_suspend.2                                0100644 0001750 0001750 00000006371 12567450733 023266  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1999 Softweyr LLC.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Softweyr LLC AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Softweyr LLC OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/aio_suspend.2,v 1.19 2003/01/13 10:37:11 tjr Exp $
.\"
.Dd June 2, 1999
.Dt AIO_SUSPEND 2
.Os
.Sh NAME
.Nm aio_suspend
.Nd suspend until asynchronous I/O operations or timeout complete (REALTIME)
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In aio.h
.Ft int
.Fo aio_suspend
.Fa "const struct aiocb *const list[]"
.Fa "int nent"
.Fa "const struct timespec *timeout"
.Fc
.Sh DESCRIPTION
The
.Fn aio_suspend
system call suspends the calling process until at least one of the
specified asynchronous I/O requests have completed, a signal is
delivered, or the
.Fa timeout
has passed.
.Pp
The
.Fa list
argument
is an array of
.Fa nent
pointers to asynchronous I/O requests.  Array members containing
NULL will be silently ignored.
.Pp
If
.Fa timeout
is a non-nil pointer, it specifies a maximum interval to suspend.
If
.Fa timeout
is a nil pointer, the suspend blocks indefinitely.  To effect a
poll, the
.Fa timeout
should point to a zero-value timespec structure.
.Sh RETURN VALUES
If one or more of the specified asynchronous I/O requests have completed,
.Fn aio_suspend
returns 0.
Otherwise, it returns -1 and sets
.Va errno
to indicate the error, as enumerated below.
.Sh ERRORS
The
.Fn aio_suspend
system call will fail if:
.Bl -tag -width Er
.It Bq Er EAGAIN
The
.Fa timeout
expired before any of the listed I/O requests completed.
.\" ==========
.It Bq Er EINTR
The suspend was interrupted by a signal.
.\" ==========
.It Bq Er EINVAL
The
.Fa list
argument
contains more than
.Dv AIO_LISTIO_MAX
asynchronous I/O requests, or at least one of the requests is not
valid.
.El
.Sh SEE ALSO
.Xr aio_cancel 2 ,
.Xr aio_error 2 ,
.Xr aio_return 2 ,
.Xr aio_write 2 ,
.Xr aio 4
.Sh STANDARDS
The
.Fn aio_suspend
system call
is expected to conform to the
.St -p1003.1
standard.
.Sh HISTORY
The
.Fn aio_suspend
system call first appeared in
.Fx 3.0 .
.Sh AUTHORS
This
manual page was written by
.An Wes Peters Aq wes@softweyr.com .
                                                                                                                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/aio_write.2                                  0100644 0001750 0001750 00000013702 12567450733 022733  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1999 Softweyr LLC.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Softweyr LLC AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Softweyr LLC OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/aio_write.2,v 1.16 2003/01/13 10:37:11 tjr Exp $
.\"
.Dd September 18, 2008
.Dt AIO_WRITE 2
.Os
.Sh NAME
.Nm aio_write
.Nd asynchronous write to a file (REALTIME)
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In aio.h
.Ft int
.Fo aio_write
.Fa "struct aiocb *aiocbp"
.Fc
.Sh DESCRIPTION
The
.Fn aio_write
system call allows the calling process to write
.Fa aiocbp->aio_nbytes
from the buffer pointed to by
.Fa aiocbp->aio_buf
to the descriptor
.Fa aiocbp->aio_fildes .
The call returns immediately after the write request has been enqueued
to the descriptor; the write may or may not have completed at the time
the call returns.  If the request could not be enqueued, generally due
to invalid arguments, the call returns without having enqueued the
request.
.Pp
If
.Dv O_APPEND
is set for
.Fa aiocbp->aio_fildes ,
.Fn aio_write
operations append to the file in the same order as the calls were
made.  If
.Dv O_APPEND
is not set for the file descriptor, the write operation will occur at
the absolute position from the beginning of the file plus
.Fa aiocbp->aio_offset .
.Pp
If
.Dv _POSIX_PRIORITIZED_IO
is defined, and the descriptor supports it, then the enqueued
operation is submitted at a priority equal to that of the calling
process minus
.Fa aiocbp->aio_reqprio .
.Pp
The
.Fa aiocbp
pointer may be subsequently used as an argument to
.Fn aio_return
and
.Fn aio_error
in order to determine return or error status for the enqueued operation
while it is in progress.
.Pp
If the request is successfully enqueued, the value of
.Fa aiocbp->aio_offset
can be modified during the request as context, so this value must not
be referenced after the request is enqueued.
.Sh RESTRICTIONS
The Asynchronous I/O Control Block structure pointed to by
.Fa aiocbp
and the buffer that the
.Fa aiocbp->aio_buf
member of that structure references must remain valid until the
operation has completed.  For this reason, use of auto (stack) variables
for these objects is discouraged.
.Pp
The asynchronous I/O control buffer
.Fa aiocbp
should be zeroed before the
.Fn aio_write
system call to avoid passing bogus context information to the kernel.
.Pp
Modifications of the Asynchronous I/O Control Block structure or the
buffer contents after the request has been enqueued, but before the
request has completed, are not allowed.
.Pp
If the file offset in
.Fa aiocbp->aio_offset
is past the offset maximum  for
.Fa aiocbp->aio_fildes ,
no I/O will occur.
.Sh RETURN VALUES
.Rv -std aio_write
.Sh ERRORS
The
.Fn aio_write
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EAGAIN
Due to system resource limitations,
the request was not queued.
.\" ==========
.It Bq Er ENOSYS
The
.Fn aio_write
system call is not supported.
.El
.Pp
The following conditions may be synchronously detected when the
.Fn aio_write
system call is made, or asynchronously, at any time thereafter.  If they
are detected at call time,
.Fn aio_write
returns -1 and sets
.Va errno
appropriately; otherwise the
.Fn aio_return
system call must be called, and will return -1, and
.Fn aio_error
must be called to determine the actual value that would have been
returned in
.Va errno .
.Pp
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The
.Fa aiocbp->aio_fildes
argument
is invalid, or is not opened for writing.
.\" ==========
.It Bq Er EINVAL
The offset
.Fa aiocbp->aio_offset
is not valid.
.\" ==========
.It Bq Er EINVAL
The priority specified by
.Fa aiocbp->aio_reqprio
is not a valid priority.
.\" ==========
.It Bq Er EINVAL
The number of bytes specified by
.Fa aiocbp->aio_nbytes
is not valid.
.\" ==========
.It Bq Er EINVAL
The constant in
.Fa aiocbp->aio_sigevent.sigev_notify
is set to SIGEV_THREAD (SIGEV_THREAD is not supported).
.El
.Pp
If the request is successfully enqueued, but subsequently canceled
or an error occurs, the value returned by the
.Fn aio_return
system call is per the
.Xr write 2
system call, and the value returned by the
.Fn aio_error
system call is either one of the error returns from the
.Xr write 2
system call, or one of:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The
.Fa aiocbp->aio_fildes
argument
is invalid for writing.
.\" ==========
.It Bq Er ECANCELED
The request was explicitly canceled via a call to
.Fn aio_cancel .
.El
.Sh SEE ALSO
.Xr aio_cancel 2 ,
.Xr aio_error 2 ,
.Xr aio_return 2 ,
.Xr aio_suspend 2 ,
.Xr aio 4
.Sh STANDARDS
The
.Fn aio_write
system call
is expected to conform to the
.St -p1003.1
standard.
.Sh HISTORY
The
.Fn aio_write
system call first appeared in
.Fx 3.0 .
.Sh AUTHORS
This manual page was written by
.An Wes Peters Aq wes@softweyr.com .
.Sh BUGS
Invalid information in
.Fa aiocbp->_aiocb_private
may confuse the kernel.
                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/audit.2                                      0100644 0001750 0001750 00000005417 12567450733 022063  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008 Apple Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd April 19, 2005
.Dt AUDIT 2
.Os
.Sh NAME
.Nm audit
.Nd "commit BSM audit record to audit log"
.Sh SYNOPSIS
.In bsm/audit.h
.Ft int
.Fn audit "const char *record" "u_int length"
.Sh DESCRIPTION
The
.Fn audit
system call
submits a completed BSM audit record to the system audit log.
.Pp
The
.Fa record
argument
is a pointer to the specific event to be recorded and
.Fa length
is the size in bytes of the data to be written.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn audit
system call will fail and the data never written if:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa record
argument is beyond the allocated address space of the process.
.It Bq Er EINVAL
The token ID is invalid or
.Va length
is larger than
.Dv MAXAUDITDATA .
.It Bq Er EPERM
The process does not have sufficient permission to complete
the operation.
.El
.Sh SEE ALSO
.Xr auditon 2 ,
.Xr getaudit 2 ,
.Xr getaudit_addr 2 ,
.Xr getauid 2 ,
.Xr setaudit 2 ,
.Xr setaudit_addr 2 ,
.Xr setauid 2 ,
.Xr libbsm 3
.Sh HISTORY
The OpenBSM implementation was created by McAfee Research, the security
division of McAfee Inc., under contract to Apple Computer Inc.\& in 2004.
It was subsequently adopted by the TrustedBSD Project as the foundation for
the OpenBSM distribution.
.Sh AUTHORS
.An -nosplit
This software was created by McAfee Research, the security research division
of McAfee, Inc., under contract to Apple Computer Inc.
Additional authors include
.An Wayne Salamon ,
.An Robert Watson ,
and SPARTA Inc.
.Pp
The Basic Security Module (BSM) interface to audit records and audit event
stream format were defined by Sun Microsystems.
.Pp
This manual page was written by
.An Tom Rhodes Aq trhodes@FreeBSD.org .
.Sh BUGS
The kernel does not fully validate that the argument passed is syntactically
valid BSM.  Submitting invalid audit records may corrupt the audit log.
                                                                                                                                                                                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/auditctl.2                                   0100644 0001750 0001750 00000004527 12567450733 022567  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008 Apple Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd April 19, 2005
.Dt AUDITCTL 2
.Os
.Sh NAME
.Nm auditctl
.Nd "configure system audit parameters"
.Sh SYNOPSIS
.In bsm/audit.h
.Ft int
.Fn auditctl "const char *path"
.Sh DESCRIPTION
The
.Fn auditctl
system call directs the kernel to open a new audit trail log file.
It requires an appropriate privilege.
The
.Fn auditctl
system call
opens new files, but
.Xr auditon 2
is used to disable the audit log.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn auditctl
system call will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The path is invalid.
.It Bq Er EPERM
The process does not have sufficient permission to complete the
operation.
.El
.Sh SEE ALSO
.Xr auditon 2 ,
.Xr libbsm 3 ,
.Xr auditd 8
.Sh HISTORY
The OpenBSM implementation was created by McAfee Research, the security
division of McAfee Inc., under contract to Apple Computer Inc.\& in 2004.
It was subsequently adopted by the TrustedBSD Project as the foundation for
the OpenBSM distribution.
.Sh AUTHORS
.An -nosplit
This software was created by McAfee Research, the security research division
of McAfee, Inc., under contract to Apple Computer Inc.
Additional authors include
.An Wayne Salamon ,
.An Robert Watson ,
and SPARTA Inc.
.Pp
The Basic Security Module (BSM) interface to audit records and audit event
stream format were defined by Sun Microsystems.
.Pp
This manual page was written by
.An Robert Watson Aq rwatson@FreeBSD.org .
                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/auditon.2                                    0100644 0001750 0001750 00000030757 12567450733 022425  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008-2009 Apple Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd January 29, 2009
.Dt AUDITON 2
.Os
.Sh NAME
.Nm auditon
.Nd "configure system audit parameters"
.Sh SYNOPSIS
.In bsm/audit.h
.Ft int
.Fn auditon "int cmd" "void *data" "u_int length"
.Sh DESCRIPTION
The
.Fn auditon
system call is used to manipulate various audit control operations.
The
.Fa data
argument
should point to a structure whose type depends on the command.
The
.Fa length
argument
specifies the size of
.Fa *data
in bytes.
The
.Fa cmd
argument
may be any of the following:
.Bl -tag -width ".It Dv A_GETPINFO_ADDR"
.It Dv A_SETPOLICY
Set audit policy flags.
The
.Fa data
argument
must point to a
.Vt int
value set to one or more the following audit
policy control values bitwise OR'ed together:
.Dv AUDIT_CNT ,
.Dv AUDIT_AHLT ,
.Dv AUDIT_ARGV ,
and
.Dv AUDIT_ARGE .
If
.Dv AUDIT_CNT is set, the system will continue even if it becomes low
on space and discontinue logging events until the low space condition is 
remedied.
If it is not set, audited events will block until the low space 
condition is remedied.
Unaudited events, however, are unaffected.
If 
.Dv AUDIT_AHLT is set, a 
.Xr panic 9
if it cannot write an event to the global audit log file.
If 
.Dv AUDIT_ARGV
is set, then the argument list passed to the 
.Xr execve 2 
system call will be audited.  If
.Dv AUDIT_ARGE
is set, then the environment variables passed to the
.Xr execve 2
system call will be audited.  The default policy is none of the audit policy
control flags set. 
.It Dv A_SETKAUDIT
Set the host information.
The
.Fa data
argument
must point to a
.Vt auditinfo_addr_t
structure containing the host IP address information.
After setting, audit records
that are created as a result of kernel events will contain
this information. 
.It Dv A_SETKMASK
Set the kernel preselection masks (success and failure).
The
.Fa data
argument
must point to a
.Vt au_mask_t
structure containing the mask values as defined in 
.In bsm/audit.h .
These masks are used for non-attributable audit event preselection. 
The field
.Fa am_success
specifies which classes of successful audit events are to be logged to the
audit trail. The field
.Fa am_failure
specifies which classes of failed audit events are to be logged. The value of
both fields is the bitwise OR'ing of the audit event classes specified in
.Fa bsm/audit.h .
The various audit classes are described more fully in
.Xr audit_class 5 .
.It Dv A_SETQCTRL
Set kernel audit queue parameters.
The
.Fa data
argument
must point to a
.Vt au_qctrl_t
structure (defined in
.In bsm/audit.h )
containing the kernel audit queue control settings:
.Fa aq_hiwater ,
.Fa aq_lowater ,
.Fa aq_bufsz ,
.Fa aq_delay ,
and
.Fa aq_minfree .
The field
.Fa aq_hiwater
defines the maximum number of audit record entries in the queue used to store
the audit records ready for delivery to disk.
New records are inserted at the tail of the queue and removed from the head.
For new records which would exceed the
high water mark, the calling thread is inserted into the wait queue, waiting
for the audit queue to have enough space available as defined with the field
.Fa aq_lowater .
The field
.Fa aq_bufsz
defines the maximum length of the audit record that can be supplied with
.Xr audit 2 .
The field
.Fa aq_delay
is unused.
The field
.Fa aq_minfree
specifies the minimum amount of free blocks on the disk device used to store
audit records.
If the value of free blocks falls below the configured
minimum amount, the kernel informs the audit daemon about low disk space.
The value is to be specified in percent of free file system blocks.
A value of 0 results in a disabling of the check.
The default and maximum values (default/maximum) for the
audit queue control parameters are:
.Pp
.Bl -column aq_hiwater -offset indent -compact
.It aq_hiwater Ta 100/10000 (audit records)
.It aq_lowater Ta 10/aq_hiwater (audit records)
.It aq_bufsz Ta 32767/1048576 (bytes)
.It aq_delay Ta (Not currently used.)
.El
.It Dv A_SETSTAT
Return
.Er ENOSYS .
(Not implemented.)
.It Dv A_SETUMASK
Return
.Er ENOSYS .
(Not implemented.)
.It Dv A_SETSMASK
Return
.Er ENOSYS .
(Not implemented.)
.It Dv A_SETCOND
Set the current auditing condition.
The
.Fa data
argument
must point to a
.Vt int
value containing the new
audit condition, one of
.Dv AUC_AUDITING ,
.Dv AUC_NOAUDIT ,
or
.Dv AUC_DISABLED .
If 
.Dv AUC_NOAUDIT 
is set, then auditing is temporarily suspended. If 
.Dv AUC_AUDITING
is set, auditing is resumed. If 
.Dv AUC_DISABLED 
is set, the auditing system will
shutdown, draining all audit records and closing out the audit trail file. 
.It Dv A_SETCLASS
Set the event class preselection mask for an audit event.
The
.Fa data
argument
must point to a
.Vt au_evclass_map_t
structure containing the audit event and mask.
The field
.Fa ec_number
is the audit event and 
.Fa ec_class
is the audit class mask. See
.Xr audit_event 5
for more information on audit event to class mapping.
.It Dv A_SETPMASK
Set the preselection masks for a process.
The
.Fa data
argument
must point to a
.Vt auditpinfo_t
structure that contains the given process's audit
preselection masks for both success and failure.
The field
.Fa ap_pid
is the process id of the target process.
The field
.Fa ap_mask
must point to a
.Fa au_mask_t
structure which holds the preselection masks as described in the
.Da A_SETKMASK
section above.
.It Dv A_SETFSIZE
Set the maximum size of the audit log file.
The
.Fa data
argument
must point to a
.Vt au_fstat_t
structure with the
.Va af_filesz
field set to the maximum audit log file size.
A value of 0
indicates no limit to the size.
.It Dv A_SETSFLAGS
Set the audit sessions flags for the current session.
The
.Fa data
argument must point to an
.Vt au_asflgs_t
value containing the new audit session flags.
Audit session flags may be updated only according to local
access control policy.
.It Dv A_GETCLASS
Return the event to class mapping for the designated audit event.
The
.Fa data
argument
must point to a
.Vt au_evclass_map_t
structure. See the
.Dv A_SETCLASS 
section above for more information.
.It Dv A_GETKAUDIT
Get the current host information.
The
.Fa data
argument
must point to a
.Vt auditinfo_addr_t
structure.
.It Dv A_GETPINFO
Return the audit settings for a process.
The
.Fa data
argument
must point to a
.Vt auditpinfo_t
structure which will be set to contain
.Fa ap_auid 
(the audit ID), 
.Fa ap_mask
(the preselection mask),
.Fa ap_termid
(the terminal ID), and
.Fa ap_asid 
(the audit session ID)
of the given target process.
The process ID of the target process is passed 
into the kernel using the
.Fa ap_pid
field.
See the section
.Dv A_SETPMASK
above and 
.Xr getaudit 2 
for more information.
.It Dv A_GETPINFO_ADDR
Return the extended audit settings for a process.
The
.Fa data
argument
must point to a
.Vt auditpinfo_addr_t
structure which is similar to the 
.Vt auditpinfo_addr_t
structure described above. 
The exception is the 
.Fa ap_termid
(the terminal ID) field which points to a
.Vt au_tid_addr_t 
structure can hold much a larger terminal address and an address type. 
The process ID of the target process is passed into the kernel using the
.Fa ap_pid
field.
See the section 
.Dv A_SETPMASK
above and 
.Xr getaudit 2
for more information.
.It Dv A_GETSINFO_ADDR
Return the extended audit settings for a session.
The
.Fa data
argument
must point to a
.Vt auditinfo_addr_t
structure.
The audit session ID of the target session is passed 
into the kernel using the
.Fa ai_asid
field.  See 
.Xr getaudit_addr 2
for more information about the
.Vt auditinfo_addr_t
structure.
.It Dv A_GETKMASK
Return the current kernel preselection masks.
The
.Fa data
argument
must point to a
.Vt au_mask_t
structure which will be set to
the current kernel preselection masks for non-attributable events.
.It Dv A_GETPOLICY
Return the current audit policy setting.
The
.Fa data
argument
must point to a
.Vt int
value which will be set to
one of the current audit policy flags.
The audit policy flags are
described in the 
.Dv A_SETPOLICY 
section above.
.It Dv A_GETQCTRL
Return the current kernel audit queue control parameters.
The
.Fa data
argument
must point to a
.Vt au_qctrl_t
structure which will be set to the current
kernel audit queue control parameters.
See the
.Dv A_SETQCTL
section above for more information.
.It Dv A_GETFSIZE
Returns the maximum size of the audit log file.
The
.Fa data
argument
must point to a
.Vt au_fstat_t
structure.
The
.Va af_filesz
field will be set to the maximum audit log file size.
A value of 0 indicates no limit to the size.
The
.Va af_currsz
field
will be set to the current audit log file size.
.It Dv A_GETSFLAGS
Returns the audit session flags for the current session.
The
.Fa data
argument must point to an
.Vt au_asflgs_t
value which will be set with the current session flags.
.It Dv A_GETCWD
.\" [COMMENTED OUT]: Valid description, not yet implemented.
.\" Return the current working directory as stored in the audit subsystem.
Return
.Er ENOSYS .
(Not implemented.)
.It Dv A_GETCAR
.\" [COMMENTED OUT]: Valid description, not yet implemented.
.\"Stores and returns the current active root as stored in the audit
.\"subsystem.
Return
.Er ENOSYS .
(Not implemented.)
.It Dv A_GETSTAT
.\" [COMMENTED OUT]: Valid description, not yet implemented.
.\"Return the statistics stored in the audit system.
Return
.Er ENOSYS .
(Not implemented.)
.It Dv A_GETCOND
Return the current auditing condition.
The
.Fa data
argument
must point to a
.Vt int
value which will be set to
the current audit condition, one of 
.Dv AUC_AUDITING ,
.Dv AUC_NOAUDIT 
or
.Dv AUC_DISABLED .
See the 
.Dv A_SETCOND
section above for more information.
.It Dv A_SENDTRIGGER
Send a trigger to the audit daemon.
The
.Fa data
argument
must point to a
.Vt int
value set to one of the acceptable
trigger values:
.Dv AUDIT_TRIGGER_LOW_SPACE
(low disk space where the audit log resides),
.Dv AUDIT_TRIGGER_OPEN_NEW
(open a new audit log file),
.Dv AUDIT_TRIGGER_READ_FILE
(read the
.Pa audit_control
file),
.Dv AUDIT_TRIGGER_CLOSE_AND_DIE
(close the current log file and exit),
.Dv AUDIT_TRIGGER_NO_SPACE
(no disk space left for audit log file).
.Dv AUDIT_TRIGGER_ROTATE_USER
(request audit log file rotation).
.Dv AUDIT_TRIGGER_INITIALIZE
(initialize audit subsystem for Mac OS X only).
or
.Dv AUDIT_TRIGGER_EXPIRE_TRAILS
(request audit log file expiration).
.El
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn auditon
function will fail if:
.Bl -tag -width Er
.It Bq Er ENOSYS
Returned by options not yet implemented.
.It Bq Er EFAULT
A failure occurred while data transferred to or from
the kernel failed.
.It Bq Er EINVAL
Illegal argument was passed by a system call.
.It Bq Er EPERM
The process does not have sufficient permission to complete
the operation.
.El
.Pp
The
.Dv A_SENDTRIGGER
command is specific to the
.Fx
and Mac OS X implementations, and is not present in Solaris.
.Sh SEE ALSO
.Xr audit 2 ,
.Xr auditctl 2 ,
.Xr getaudit 2 ,
.Xr getaudit_addr 2 ,
.Xr getauid 2 ,
.Xr setaudit 2 ,
.Xr setaudit_addr 2 ,
.Xr setauid 2 ,
.Xr libbsm 3
.Sh HISTORY
The OpenBSM implementation was created by McAfee Research, the security
division of McAfee Inc., under contract to Apple Computer Inc.\& in 2004.
It was subsequently adopted by the TrustedBSD Project as the foundation for
the OpenBSM distribution.
.Sh AUTHORS
.An -nosplit
This software was created by McAfee Research, the security research division
of McAfee, Inc., under contract to Apple Computer Inc.
Additional authors include
.An Wayne Salamon ,
.An Robert Watson ,
and SPARTA Inc.
.Pp
The Basic Security Module (BSM) interface to audit records and audit event
stream format were defined by Sun Microsystems.
.Pp
This manual page was written by
.An Tom Rhodes Aq trhodes@FreeBSD.org ,
.An Robert Watson Aq rwatson@FreeBSD.org ,
and
.An Wayne Salamon Aq wsalamon@FreeBSD.org .
                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/bind.2                                       0100644 0001750 0001750 00000012422 12567450733 021663  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: bind.2,v 1.8 1995/10/12 15:40:46 jtc Exp $
.\"
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)bind.2	8.1 (Berkeley) 6/4/93
.\"
.Dd March 18, 2015
.Dt BIND 2
.Os BSD 4.2
.Sh NAME
.Nm bind
.Nd bind a name to a socket
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo bind
.Fa "int socket"
.Fa "const struct sockaddr *address"
.Fa "socklen_t address_len"
.Fc
.Sh DESCRIPTION
.Fn bind
assigns a name to an unnamed socket.
When a socket is created 
with
.Xr socket 2
it exists in a name space (address family)
but has no name assigned.
.Fn bind
requests that
.Fa address
be assigned to the socket.
.Sh NOTES
Binding a name in the UNIX domain creates a socket in the file
system that must be deleted by the caller when it is no longer
needed (using
.Xr unlink 2 ) .
.Pp
The rules used in name binding vary between communication domains.
Consult the manual entries in section 4 for detailed information.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn bind
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
The requested address is protected, and the current user
has inadequate permission to access it.
.\" ==========
.It Bq Er EADDRINUSE
The specified address is already in use.
.\" ==========
.It Bq Er EADDRNOTAVAIL
The specified address is not available from the local machine.
.\" ==========
.It Bq Er EAFNOSUPPORT
.Fa address
is not valid for the address family of
.Fa socket .
.\" ==========
.It Bq Er EBADF
.Fa socket
is not a valid file descriptor.
.\" ==========
.It Bq Er EDESTADDRREQ
.Fa socket
is a null pointer.
.\" ==========
.It Bq Er EFAULT
The
.Fa address
parameter is not in a valid part of the user
address space.
.\" ==========
.It Bq Er EINVAL
.Fa socket
is already bound to an address
and the protocol does not support binding to a new address.
Alternatively,
.Fa socket
may have been shut down.
.\" ==========
.It Bq Er ENOTSOCK
.Fa socket
does not refer to a socket.
.\" ==========
.It Bq Er EOPNOTSUPP
.Fa socket
is not of a type that can be bound to an address.
.El
.Pp
The following errors are specific to binding names in the UNIX domain.
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
A component of the path prefix does not allow searching
or the node's parent directory denies write permission.
.\" ==========
.It Bq Er EEXIST
A file already exists at the pathname.
.Xr unlink 2
it first.
.\" ==========
.It Bq Er EIO
An I/O error occurred while making the directory entry
or allocating the inode.
.\" ==========
.It Bq Er EISDIR
An empty pathname was specified.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
A component of the path name does not refer to an existing file.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er EROFS
The name would reside on a read-only file system.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr connect 2 ,
.Xr connectx 2 ,
.Xr getsockname 2 ,
.Xr listen 2 ,
.Xr socket 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn bind
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/brk.2                                        0100644 0001750 0001750 00000010520 12566166137 021523  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: brk.2,v 1.7 1995/02/27 12:31:57 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)brk.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt BRK 2
.Os BSD 4
.Sh NAME
.Nm brk ,
.Nm sbrk
.Nd change data segment size
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft void *
.Fn brk "const void *addr"
.Ft void *
.Fn sbrk "int incr"
.Sh DESCRIPTION
.Bf -symbolic
The brk and sbrk functions are historical curiosities
left over from earlier days before the advent of virtual memory management.
.Ef
The
.Fn brk
function
sets the break or lowest address
of a process's data segment (uninitialized data) to
.Fa addr
(immediately above bss).
Data addressing is restricted between
.Fa addr
and the lowest stack pointer to the stack segment.
Memory is allocated by
.Fa brk
in page size pieces;
if
.Fa addr
is not evenly divisible by the system page size, it is
increased to the next page boundary.
.Pp
.\" The
.\" .Nm sbrk
.\" function
.\" allocates chunks of
.\" .Fa incr
.\" bytes
.\" to the process's data space
.\" and returns an address pointer.
.\" The
.\" .Xr malloc 3
.\" function utilizes
.\" .Nm sbrk .
.\" .Pp
The current value of the program break is reliably returned by
.Dq Li sbrk(0)
(see also 
.Xr end 3 ) .
The
.Xr getrlimit 2
system call may be used to determine
the maximum permissible size of the
.Em data
segment;
it will not be possible to set the break
beyond the
.Em rlim_max
value returned from a call to
.Xr getrlimit ,
e.g.
.Dq qetext + rlp\(->rlim_max.
(see
.Xr end 3
for the definition of
.Em etext ) .
.Sh RETURN VALUES
.Nm Brk
returns a pointer to the new end of memory if successful;
otherwise -1 with
.Va errno
set to indicate why the allocation failed.
The
.Nm sbrk
function returns a pointer to the base of the new storage if successful;
otherwise -1 with
.Va errno
set to indicate why the allocation failed.
.Sh ERRORS
.Xr Sbrk
will fail and no additional memory will be allocated if
one of the following are true:
.Bl -tag -width Er
.It Bq Er ENOMEM
The limit, as set by
.Xr setrlimit 2 ,
was exceeded.
.It Bq Er ENOMEM
The maximum possible size of a data segment (compiled into the
system) was exceeded.
.It Bq Er ENOMEM
Insufficient space existed in the swap area
to support the expansion.
.El
.Sh SEE ALSO
.Xr execve 2 ,
.Xr getrlimit 2 ,
.Xr malloc 3 ,
.Xr mmap 2 ,
.Xr end 3
.Sh BUGS
Setting the break may fail due to a temporary lack of
swap space.  It is not possible to distinguish this
from a failure caused by exceeding the maximum size of
the data segment without consulting 
.Xr getrlimit .
.Sh HISTORY
A
.Fn brk
function call appeared in 
.At v7 .
                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/chdir.2                                      0100644 0001750 0001750 00000011040 12567450733 022033  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: chdir.2,v 1.7 1995/02/27 12:32:00 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)chdir.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt CHDIR 2
.Os BSD 4
.Sh NAME
.Nm chdir ,
.Nm fchdir
.Nd change current working directory
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo chdir
.Fa "const char *path"
.Fc
.Ft int
.Fo fchdir
.Fa "int fildes"
.Fc
.Sh DESCRIPTION
The
.Fa path
argument points to the pathname of a directory.
The
.Fn chdir
function
causes the named directory
to become the current working directory, that is,
the starting point for path searches of pathnames not beginning with
a slash,
.Ql / .
.Pp
The
.Fn fchdir
function
causes the directory referenced by
.Fa fildes
to become the current working directory,
the starting point for path searches of pathnames not beginning with
a slash,
.Ql / .
.Pp
In order for a directory to become the current directory,
a process must have execute (search) access to the directory.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate
the error.
.Sh ERRORS
The
.Fn Chdir
system call will fail
and the current working directory will be unchanged
if one or more of the following are true:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Search permission is denied for any component of
the path name.
.\" ==========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
The named directory does not exist.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.El
.Pp
.Fn Fchdir
will fail and the current working directory will be unchanged if
one or more of the following are true:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Search permission is denied for the directory referenced by the
file descriptor.
.\" ==========
.It Bq Er EBADF
The argument
.Fa fildes
is not a valid file descriptor.
.\" ==========
.It Bq Er EINTR
.Fn Fchdir
was interrupted by a signal.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.\" ==========
.It Bq Er ENOTDIR
The file descriptor does not reference a directory.
.El
.Sh SEE ALSO
.Xr chroot 2
.Sh STANDARDS
The 
.Fn chdir
is expected to conform to 
.St -p1003.1-88 .
.Sh HISTORY
The
.Fn fchdir
function call
appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/chflags.2                                    0100644 0001750 0001750 00000011712 12567450733 022357  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: chflags.2,v 1.6 1995/02/27 12:32:03 cgd Exp $
.\"
.\" Copyright (c) 1989, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)chflags.2	8.1 (Berkeley) 6/9/93
.\"
.Dd June 9, 1993
.Dt CHFLAGS 2
.Os
.Sh NAME
.Nm chflags ,
.Nm fchflags
.Nd set file flags
.Sh SYNOPSIS
.Fd #include <sys/stat.h>
.Fd #include <unistd.h>
.Ft int
.Fn chflags "const char *path"  "u_int flags"
.Ft int
.Fn fchflags "int fd" "u_int flags"
.Sh DESCRIPTION
The file whose name
is given by
.Fa path
or referenced by the descriptor
.Fa fd
has its flags changed to
.Fa flags .
.Pp
The flags specified are formed by
.Em or Ns 'ing
the following values
.Pp
.Bl -tag -width "SF_IMMUTABLEX" -compact -offset indent
.It UF_NODUMP
Do not dump the file.
.It UF_IMMUTABLE
The file may not be changed.
.It UF_APPEND
The file may only be appended to.
.It UF_OPAQUE
The directory is opaque when viewed through a union stack.
.It UF_HIDDEN
The file or directory is not intended to be displayed to the user.
.It SF_ARCHIVED
The file has been archived.
.It SF_IMMUTABLE
The file may not be changed.
.It SF_APPEND
The file may only be appended to.
.El
.Pp
The
.Dq UF_IMMUTABLE ,
.Dq UF_APPEND ,
.Dq UF_OPAQUE ,
and
.Dq UF_HIDDEN
flags may be set or unset by either the owner of a file or the super-user.
.Pp
The
.Dq SF_ARCHIVED ,
.Dq SF_IMMUTABLE
and
.Dq SF_APPEND
flags may only be set or unset by the super-user.
They may be set at any time, but normally may only be unset when
the system is in single-user mode.
(See
.Xr launchd 8
for details.)
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Chflags
will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.It Bq Er EROFS
The named file resides on a read-only file system.
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.It Bq Er ENOTSUP
The operation isn't supported by the filesystem.
.El
.Pp
.Fn Fchflags
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The descriptor is not valid.
.It Bq Er EINVAL
.Fa fd
refers to a socket, not to a file.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.It Bq Er EROFS
The file resides on a read-only file system.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.It Bq Er ENOTSUP
The operation isn't supported by the filesystem.
.El
.Sh SEE ALSO
.Xr chflags 1 ,
.Xr fflagstostr 3 ,
.Xr lchflags 3 ,
.Xr strtofflags 3 ,
.Xr launchd 8
.Sh HISTORY
The
.Fn chflags
and
.Nm fchflags
functions first appeared in 4.4BSD.
                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/chmod.2                                      0100644 0001750 0001750 00000017730 12567450733 022050  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: chmod.2,v 1.7 1995/02/27 12:32:06 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)chmod.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt CHMOD 2
.Os BSD 4
.Sh NAME
.Nm chmod ,
.Nm fchmod ,
.Nm fchmodat
.Nd change mode of file
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/stat.h>
.Ft int
.Fo chmod
.Fa "const char *path"
.Fa "mode_t mode"
.Fc
.Ft int
.Fo fchmod
.Fa "int fildes"
.Fa "mode_t mode"
.Fc
.Ft int
.Fn fchmodat "int fd" "const char *path" "mode_t mode" "int flag"
.Sh DESCRIPTION
The function
.Fn chmod
sets the file permission bits
of the file
specified by the pathname
.Fa path
to
.Fa mode .
.Fn fchmod
sets the permission bits of the specified
file descriptor
.Fa fildes .
.Fn chmod
verifies that the process owner (user) either owns
the file specified by
.Fa path
(or
.Fa fildes ) ,
or
is the super-user.
.Pp
The
.Fn fchmodat
is equivalent to
.Fn chmod
except in the case where
.Fa path
specifies a relative path.
In this case the file to be changed is determined relative to the directory
associated with the file descriptor
.Fa fd
instead of the current working directory.
The values for the
.Fa flag
are constructed by a bitwise-inclusive OR of flags from the following list, defined
in
.In fcntl.h :
.Bl -tag -width indent
.It Dv AT_SYMLINK_NOFOLLOW
If
.Fa path
names a symbolic link, then the mode of the symbolic link is changed.
.El
.Pp
If
.Fn fchmodat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used.
If also
.Fa flag
is zero, the behavior is identical to a call to
.Fn chmod .
A mode is created from
.Em or'd
permission bit masks
defined in
.Aq Pa sys/stat.h :
.Bd -literal -offset indent -compact
#define S_IRWXU 0000700    /* RWX mask for owner */
#define S_IRUSR 0000400    /* R for owner */
#define S_IWUSR 0000200    /* W for owner */
#define S_IXUSR 0000100    /* X for owner */

#define S_IRWXG 0000070    /* RWX mask for group */
#define S_IRGRP 0000040    /* R for group */
#define S_IWGRP 0000020    /* W for group */
#define S_IXGRP 0000010    /* X for group */

#define S_IRWXO 0000007    /* RWX mask for other */
#define S_IROTH 0000004    /* R for other */
#define S_IWOTH 0000002    /* W for other */
#define S_IXOTH 0000001    /* X for other */

#define S_ISUID 0004000    /* set user id on execution */
#define S_ISGID 0002000    /* set group id on execution */
#define S_ISVTX 0001000    /* save swapped text even after use */
.Ed
.Pp
The
.Dv ISVTX
(the
.Em sticky bit )
indicates to the system which executable files are shareable (the
default) and the system maintains the program text of the files
in the swap area. The sticky bit may only be set by the super user
on shareable executable files.
.Pp
If mode
.Dv ISVTX
(the `sticky bit') is set on a directory,
an unprivileged user may not delete or rename
files of other users in that directory. The sticky bit may be
set by any user on a directory which the user owns or has appropriate
permissions.
For more details of the properties of the sticky bit, see
.Xr sticky 8 .
.Pp
Writing or changing the owner of a file
turns off the set-user-id and set-group-id bits
unless the user is the super-user.
This makes the system somewhat more secure
by protecting set-user-id (set-group-id) files
from remaining set-user-id (set-group-id) if they are modified,
at the expense of a degree of compatibility.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn chmod
system call will fail and the file mode will be unchanged if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ==========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.\" ==========
.It Bq Er EINTR
Its execution was interrupted by a signal.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
The named file does not exist.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.\" ==========
.It Bq Er EROFS
The named file resides on a read-only file system.
.El
.Pp
.Fn fchmod
will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Fa fildes
is not a valid file descriptor.
.\" ==========
.It Bq Er EINVAL
.Fa fildes
refers to a socket, not to a file.
.\" ==========
.It Bq Er EINVAL
.Fa mode
is not a valid file mode.
.\" ==========
.It Bq Er EINTR
Its execution was interrupted by a signal.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.\" ==========
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.\" ==========
.It Bq Er EROFS
The file resides on a read-only file system.
.El
.Pp
In addition to the
.Fn chmod
errors,
.Fn fchmodat
fails if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Fa AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er EINVAL
The value of the
.Fa flag
argument is not valid.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/stat.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr chmod 1 ,
.Xr chown 2 ,
.Xr open 2 ,
.Xr stat 2 ,
.Xr compat 5 ,
.Xr sticky 8
.Sh STANDARDS
The
.Fn chmod
function is expected to conform to 
.St -p1003.1-88 .
The
.Fn fchmodat
function is expected to conform to POSIX.1-2008 . 
.Sh HISTORY
The
.Fn fchmod
function call
appeared in
.Bx 4.2 .
The
.Fn fchmodat
system call appeared in OS X 10.10
                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/chown.2                                      0100644 0001750 0001750 00000015212 12567450733 022065  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1980, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)chown.2	8.4 (Berkeley) 4/19/94
.\"
.Dd April 19, 1994
.Dt CHOWN 2
.Os
.Sh NAME
.Nm chown ,
.Nm fchown ,
.Nm lchown ,
.Nm fchownat
.Nd change owner and group of a file
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fo chown
.Fa "const char *path"
.Fa "uid_t owner"
.Fa "gid_t group"
.Fc
.Ft int
.Fo fchown
.Fa "int fildes"
.Fa "uid_t owner"
.Fa "gid_t group"
.Fc
.Ft int
.Fo lchown
.Fa "const char *path"
.Fa "uid_t owner"
.Fa "gid_t group"
.Fc
.Ft int
.Fn fchownat "int fd" "const char *path" "uid_t owner" "gid_t group" "int flag"
.Sh DESCRIPTION
The owner ID and group ID of the file
named by
.Fa path
or referenced by
.Fa fildes
is changed as specified by the arguments
.Fa owner
and
.Fa group .
The owner of a file may change the
.Fa group
to a group of which
he or she is a member,
but the change
.Fa owner
capability is restricted to the super-user.
.Pp
The
.Fn chown
system call
clears the set-user-id and set-group-id bits
on the file
to prevent accidental or mischievous creation of
set-user-id and set-group-id programs if not executed
by the super-user.
The
.Fn chown
system call
follows symbolic links to operate on the target of the link
rather than the link itself.
.Pp
The
.Fn fchown
system call
is particularly useful when used in conjunction
with the file locking primitives (see
.Xr flock 2 ) .
.Pp
The
.Fn lchown
system call is similar to
.Fn chown
but does not follow symbolic links.
.Pp
The
.Fn fchownat
system call is equivalent to the
.Fn chown
and
.Fn lchown
except in the case where
.Fa path
specifies a relative path.
In this case the file to be changed is determined relative to the directory
associated with the file descriptor
.Fa fd
instead of the current working directory.
.Pp
Values for
.Fa flag
are constructed by a bitwise-inclusive OR of flags from the following
list, defined in
.In fcntl.h :
.Bl -tag -width indent
.It Dv AT_SYMLINK_NOFOLLOW
If
.Fa path
names a symbolic link, ownership of the symbolic link is changed.
.El
.Pp
If
.Fn fchownat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior is identical
to a call to
.Fn chown
or
.Fn lchown
respectively, depending on whether or not the
.Dv AT_SYMLINK_NOFOLLOW
bit is set in the
.Fa flag
argument.
.Pp
One of the owner or group id's
may be left unchanged by specifying it as -1.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Pp
The
.Fn chown
and
.Fn lchown
system calls will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EFAULT
The
.Fa path
argument
points outside the process's allocated address space.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
.\" ==========
.It Bq Er ENOENT
A component of
.Fa path
does not exist.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.El
.Pp
The
.Fn fchown
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The
.Fa fildes
argument
does not refer to a valid descriptor.
.\" ==========
.It Bq Er EINVAL
The
.Fa fildes
argument
refers to a socket, not a file.
.El
.Pp
Any of these calls will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINTR
Its execution is interrupted by a signal.
.\" ==========
.It Bq Er EIO
An I/O error occurs while reading from or writing to the file system.
.\" ==========
.It Bq Er EPERM
The effective user ID does not match the owner of the file
and the calling process does not have appropriate (i.e., root) privileges.
.\" ==========
.It Bq Er EROFS
The named file resides on a read-only file system.
.El
.Pp
In addition to the errors specified for
.Fn chown
and
.Fn lchown ,
the
.Fn fchownat
system call may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er EINVAL
The value of the
.Fa flag
argument is not valid.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh SEE ALSO
.Xr chgrp 1 ,
.Xr chmod 2 ,
.Xr flock 2 ,
.Xr chown 8
.Sh STANDARDS
The
.Fn chown
system call is expected to conform to
.St -p1003.1-90 .
The
.Fn fchownat
system call is expected to conform to POSIX.1-2008 .
.Sh HISTORY
The
.Fn chown
function appeared in
.At v7 .
The
.Fn fchown
system call appeared in
.Bx 4.2 .
.Pp
The
.Fn chown
and
.Fn fchown
system calls were changed to follow symbolic links in
.Bx 4.4 .
The
.Fn lchown
system call was added in
.Fx 3.0
to compensate for the loss of functionality.
.Pp
The
.Fn fchownat
system call appeared in OS X 10.10
                                                                                                                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/chroot.2                                     0100644 0001750 0001750 00000007624 12567450733 022255  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: chroot.2,v 1.7 1995/02/27 12:32:12 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)chroot.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt CHROOT 2
.Os BSD 4.2
.Sh NAME
.Nm chroot
.Nd change root directory
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fn chroot "const char *dirname"
.Sh DESCRIPTION
.Fa Dirname
is the address of the pathname of a directory, terminated by an ASCII NUL.
.Fn Chroot
causes
.Fa dirname
to become the root directory,
that is, the starting point for path searches of pathnames
beginning with
.Ql / .
.Pp
In order for a directory to become the root directory
a process must have execute (search) access for that directory.
.Pp
If the program is not currently running with an altered root directory,
it should be noted that
.Fn chroot
has no effect on the process's current directory.
.Pp
If the program is already running with an altered root directory, the
process's current directory is changed to the same new root directory.
This prevents the current directory from being further up the directory
tree than the altered root directory.
.Pp
This call is restricted to the super-user.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.  Otherwise,
a value of -1 is returned and
.Va errno
is set to indicate an error.
.Sh ERRORS
.Fn Chroot
will fail and the root directory will be unchanged if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path name is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.It Bq Er ENOENT
The named directory does not exist.
.It Bq Er EACCES
Search permission is denied for any component of the path name.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr chdir 2
.Sh WARNINGS
There are ways for a root process to escape from the chroot jail.
.Sh HISTORY
The
.Fn chroot
function call appeared in
.Bx 4.2 .
                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/close.2                                      0100644 0001750 0001750 00000010356 12567450733 022060  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: close.2,v 1.5 1995/02/27 12:32:14 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)close.2	8.2 (Berkeley) 4/19/94
.\"
.Dd April 19, 1994
.Dt CLOSE 2
.Os BSD 4
.Sh NAME
.Nm close
.Nd delete a descriptor
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo close
.Fa "int fildes"
.Fc
.Sh DESCRIPTION
The
.Fn close
call deletes a descriptor from the per-process object
reference table.
If this is the last reference to the underlying object, the
object will be deactivated.
For example, on the last close of a file
the current
.Em seek
pointer associated with the file is lost;
on the last close of a
.Xr socket 2
associated naming information and queued data are discarded;
on the last close of a file holding an advisory lock
the lock is released (see further
.Xr flock 2 ) .
.Pp
When a process exits,
all associated file descriptors are freed, but since there is
a limit on active descriptors per processes, the
.Fn close
function call
is useful when a large quantity of file descriptors are being handled.
.Pp
When a process forks (see
.Xr fork 2 ) ,
all descriptors for the new child process reference the same
objects as they did in the parent before the fork.
If a new process is then to be run using
.Xr execve 2 ,
the process would normally inherit these descriptors.  Most
of the descriptors can be rearranged with
.Xr dup2 2
or deleted with
.Fn close
before the
.Xr execve
is attempted, but if some of these descriptors will still
be needed if the execve fails, it is necessary to arrange for them
to be closed if the execve succeeds.
For this reason, the call
.Dq Li fcntl(d, F_SETFD, 1)
is provided,
which arranges that a descriptor will be closed after a successful
execve; the call
.Dq Li fcntl(d, F_SETFD, 0)
restores the default,
which is to not close the descriptor.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn close
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Fa fildes
is not a valid, active file descriptor.
.\" ==========
.It Bq Er EINTR
Its execution was interrupted by a signal.
.\" ==========
.It Bq Er EIO
A previously-uncommitted
.Xr write 2
encountered an input/output error.
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr execve 2 ,
.Xr fcntl 2 ,
.Xr flock 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr socket 2 ,
.Xr socketpair 2
.Sh STANDARDS
.Fn Close
conforms to 
.St -p1003.1-88 .
                                                                                                                                                                                                                                                                                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/connect.2                                    0100644 0001750 0001750 00000015432 12567450733 022404  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: connect.2,v 1.8 1995/10/12 15:40:48 jtc Exp $
.\"
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)connect.2	8.1 (Berkeley) 6/4/93
.\"
.Dd March 18, 2015
.Dt CONNECT 2
.Os BSD 4.2
.Sh NAME
.Nm connect
.Nd initiate a connection on a socket
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Ft int
.Fo connect
.Fa "int socket"
.Fa "const struct sockaddr *address"
.Fa "socklen_t address_len"
.Fc
.Sh DESCRIPTION
The parameter
.Fa socket
is a socket.
If it is of type
.Dv SOCK_DGRAM ,
this call specifies the peer with which the socket is to be associated;
this address is that to which datagrams are to be sent,
and the only address from which datagrams are to be received.
If the socket is of type
.Dv SOCK_STREAM ,
this call attempts to make a connection to
another socket.
The other socket is specified by
.Fa address ,
which is an address in the communications space of the socket.
.Pp
Each communications space interprets the
.Fa address
parameter in its own way.
Generally, stream sockets may successfully
.Fn connect
only once; datagram sockets may use
.Fn connect
multiple times to change their association.
Datagram sockets may dissolve the association
by calling
.Xr disconnectx 2 ,
or by connecting to an invalid address, such as a null address
or an address with 
the address family set to 
.Dv AF_UNSPEC 
(the error 
.Dv EAFNOSUPPORT 
will be harmlessly returned).
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn connect
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
The destination address is a broadcast address and the 
socket option 
.Dv SO_BROADCAST 
is not set.
.\" ==========
.It Bq Er EADDRINUSE
The address is already in use.
.\" ==========
.It Bq Er EADDRNOTAVAIL
The specified address is not available on this machine.
.\" ==========
.It Bq Er EAFNOSUPPORT
Addresses in the specified address family cannot be used with this socket.
.\" ==========
.It Bq Er EALREADY
The socket is non-blocking
and a previous connection attempt
has not yet been completed.
.\" ==========
.It Bq Er EBADF
.Fa socket
is not a valid descriptor.
.\" ==========
.It Bq Er ECONNREFUSED
The attempt to connect was ignored
(because the target is not listening for connections)
or explicitly rejected.
.\" ==========
.It Bq Er EFAULT
The
.Fa address
parameter specifies an area outside
the process address space.
.\" ==========
.It Bq Er EHOSTUNREACH
The target host cannot be reached (e.g., down, disconnected).
.\" ==========
.It Bq Er EINPROGRESS
The socket is non-blocking 
and the connection cannot
be completed immediately.
It is possible to
.Xr select 2
for completion by selecting the socket for writing.
.\" ==========
.It Bq Er EINTR
Its execution was interrupted by a signal.
.\" ==========
.It Bq Er EINVAL
An invalid argument was detected
(e.g.,
.Fa address_len
is not valid for the address family,
the specified address family is invalid).
.\" ==========
.It Bq Er EISCONN
The socket is already connected.
.\" ==========
.It Bq Er ENETDOWN
The local network interface is not functioning.
.\" ==========
.It Bq Er ENETUNREACH
The network isn't reachable from this host.
.\" ==========
.It Bq Er ENOBUFS
The system call was unable to allocate a needed memory buffer.
.\" ==========
.It Bq Er ENOTSOCK
.Fa socket
is not a file descriptor for a socket.
.\" ==========
.It Bq Er EOPNOTSUPP
Because
.Fa socket
is listening, no connection is allowed.
.\" ==========
.It Bq Er EPROTOTYPE
.Fa address
has a different type than the socket
that is bound to the specified peer address.
.\" ==========
.It Bq Er ETIMEDOUT
Connection establishment timed out without establishing a connection.
.\" ==========
.It Bq Er ECONNRESET
Remote host reset the connection request.
.El
.Pp
The following errors are specific to connecting names in the UNIX domain.
These errors may not apply in future versions of the UNIX IPC domain.
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ==========
.It Bq Er EACCES
Write access to the named socket is denied.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
The named socket does not exist.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr accept 2 ,
.Xr connectx 2 ,
.Xr disconnectx 2 ,
.Xr getsockname 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn connect
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/connectx.2                                   0100644 0001750 0001750 00000027756 12567450733 022610  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" 
.\" Copyright (c) 2015 Apple Inc. All rights reserved.
.\" 
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. The rights granted to you under the License
.\" may not be used to create, or enable the creation or redistribution of,
.\" unlawful or unlicensed copies of an Apple operating system, or to
.\" circumvent, violate, or enable the circumvention or violation of, any
.\" terms of an Apple operating system software license agreement.
.\" 
.\" Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_END@
.\"
.Dd March 26, 2015
.Dt CONNECTX 2
.Os Darwin
.Sh NAME
.Nm connectx
.Nd initiate a connection on a socket
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo connectx
.Fa "int socket"
.Fa "const sa_endpoints_t *endpoints"
.Fa "sae_associd_t associd"
.Fa "unsigned int flags"
.Fa "const struct iovec *iov"
.Fa "unsigned int iovcnt"
.Fa "size_t *len"
.Fa "sae_connid_t *connid"
.Fc
.Sh DESCRIPTION
The parameter
.Fa socket
is a socket.
In general,
.Fn connectx
may be used as a substitute for cases when
.Xr bind 2
and
.Xr connect 2
are issued in succession, as well as a mechanism to transmit data
at connection establishment time.
.Pp
The
.Fn connectx
system call uses a
.Fa sa_endpoints
structure to minimize the number of directly supplied arguments. This structure
has the following form, as defined in
.In sys/socket.h :
.Pp
.Bd -literal
typedef struct sa_endpoints {
	unsigned int     sae_srcif;      /* optional source interface   */
	struct sockaddr *sae_srcaddr;    /* optional source address     */
	socklen_t        sae_srcaddrlen; /* size of source address      */
	struct sockaddr *sae_dstaddr;    /* destination address         */
	socklen_t        sae_dstaddrlen; /* size of destination address */
}sa_endpoints_t;
.Ed
.Pp
When the optional source address
.Fa sae_srcaddr
parameter is specified,
.Fn connectx
binds the connection to the address, as if
.Xr bind 2
is used.  The length of
.Fa sae_srcaddr
buffer is specified by
.Fa sae_srcaddrlen .
.\" This buffer may hold more than one addresses, where each successive address
.\" immediately follows the previous one.
The source address can be obtained by calling
.Xr getifaddrs 3 .
.Pp
The optional parameter
.Fa sae_srcif
may also be specified, in order to force the connection to use the interface
whose interface index equals to
.Fa sae_srcif .
The value for
.Fa sae_srcif
may be obtained by issuing a call to
.Xr if_nametoindex 3 .
If only
.Fa sae_srcif
is specified, the communication domain will choose a source address on that
interface for communicating to the peer socket.  Both
.Fa sae_srcaddr
and
.Fa sae_srcif
parameters may also be specified in order to add more constraints to the connection, and
.Fn connectx
will fail unless the address is currently assigned to that interface.
.Pp
A destination address must be specified in the
.Fa sae_dstaddr
parameter.  The
.Fa sae_dstaddrlen
specifies the length of that buffer.
.\" When more than one addresses
.\" is specified, each successive address immediately follows the previous one.
.\" Each communication domain interprets the
.\" .Fa sae_srcaddr
.\" and
.\" .Fa sae_dstaddr
.\" parameters in its own way.
.\" When multiple addresses are specified, one of the addresses will be chosen.
.\" The rules used in selecting the eligible addresses as well as their address family requirements vary between communication domains.
.\" .Pp
.\" Changes related to the connection state may be monitored by registering for the
.\" .Dv NOTE_CONNINFO_UPDATED
.\" .Xr kqueue 2
.\" event, using the predefined system filter
.\" .Dv EVFILT_SOCK .
.\" Details regarding the event may be retrieved by calling
.\" .Xr getconninfo 3 .
.\" .Sh MULTIPATH
.\" On a multipath socket,
.\" .Fn connectx
.\" may be used multiple times, in order to establish the initial session
.\" association with the peer socket upon the first connection, and to further
.\" establish additional connections related to that association on subsequent
.\" ones.
.\" .Pp
.\" The parameter
.\" .Fa associd
.\" specifies the association identifier.  When
.\" .Fn connectx
.\" is initially called to establish an associtation, the association identifier
.\" is not yet known, and
.\" .Dv ASSOCID_ANY
.\" must be specified.  After the initial connection is established, the
.\" association identifier may be retrieved using
.\" .Xr getassocids 3 ,
.\" and the value may then be used on subsequent
.\" .Fn connectx
.\" calls.
.\" .Pp
.\" If the initial connection is established without any protocol-level
.\" multipath association, the error
.\" .Er EPROTO
.\" will be returned, and the connection can be extracted to a new socket with
.\" the same properties of
.\" .Fa socket ,
.\" by calling
.\" .Xr peeloff 2 .
.\" .Pp
.\" An association representing one or more connections, or a single connection
.\" may be dissolved by calling
.\" .Xr disconnectx 2 .
.\" .Sh NON-MULTIPATH
.\" On non-multipath socket,
.\" .Fn connectx
.\" behaves much like a combination of
.\" .Xr bind 2
.\" and
.\" .Xr connect 2 .
.Pp
Data to be transmitted may optionally be defined via the
.Fa iovcnt
buffers specified by members of the
.Fa iov
array, along with a non-NULL
.Fa len
parameter, which upon success, indicates the number of bytes enqueued for
transmission.
.Pp
When the
.Fa iov
and
.Fa len 
parameters are non-NULL, the communication domain will copy the data to the
socket send buffer. The communication domain may impose a limit on the amount of data allowed to be buffered before connection establishment.
.Pp
When the flags parameter is set to CONNECT_RESUME_ON_READ_WRITE and an
.Fa iov
is not passed in, the communication domain will trigger the actual connection
establishment upon the first read or write following the
.Xr connectx 2
system call. This flag is ignored if the iov is specified in the
.Xr connectx 2
call itself.
.Pp
The flags parameter may also be set to CONNECT_DATA_IDEMPOTENT to indicate to
the communication domain that the data is idempotent. For example, this will
trigger TCP Fast Open (RFC 7413) with SOCK_STREAM type. The data must be passed in the
.Fa iov 
parameter in
.Xr connectx 2 
, or passed in with the first write call such as with the
.Xr writev 2
or similar system call if the CONNECT_RESUME_ON_READ_WRITE is also set.
.Pp
In general, the communication domain makes the final decision on the amount of
data that may get transmitted at connection establishment time.  If the socket
requires the data be sent atomically and the data size makes this impossible,
EMSGSIZE will be returned and the state of the socket is left unchanged as if
.Fn connectx
was not called.
.Pp
The parameter
.Fa associd
is reserved for future use, and must always be set to
.Dv SAE_ASSOCID_ANY .
The parameter
.Fa connid
is also reserved for future use and should be set to NULL.
.Sh NOTES
.Fn connectx
is currently supported only on AF_INET and AF_INET6 sockets of type SOCK_DGRAM
and SOCK_STREAM.
.Pp
Generally,
.\" non-multipath
connection-oriented sockets may successfully
.Fn connectx
only once.  Connectionless sockets may use
.Fn connectx
to create an association to the peer socket, and it may call
.Xr disconnectx 2
to dissolve any existing association.  Unlike connection-oriented sockets,
connectionless sockets may call
.Fn connectx
again afterwards to associate to another peer socket.
.Pp
If CONNECT_RESUME_ON_READ_WRITE is set without data 
supplied,
.Fn connectx
will immediately return success, assuming the rest of the parameters are valid.
.Xr select 2
will indicate that the socket is ready for writing, and the actual connection
establishment is attempted once the initial data is written to the socket via
.Xr writev 2
or similar.  Subsequent attempts to write more data will fail until the existing
connection establishment attempt is successful.  The error status of the socket
may be retrieved via the SO_ERROR option using
.Xr getsockopt 2 .
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
.\" and an opaque value may be returned through the
.\" .Fa connid
.\" parameter.  
The number of bytes from
.Fa iov
array which were enqueued for transmission is returned via
.Fa len .
.\" If the initial connection establishes an association with a peer socket, the association identifier may be retrieved by calling
.\" .Xr getassocids 2 .
.\" Both of these identifiers are unique
.\" on a per
.\" .Fa socket
.\" basis.
Upon failure, a value of -1 is returned and the global integer
variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn connectx
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EADDRINUSE
The address specified in
.Fa sae_srcaddr
parameter is already in use.
.\" ==========
.It Bq Er EADDRNOTAVAIL
The specified in
.Fa sae_srcaddr
parameter is not available on this machine, or is not assigned to the interface specified by
.Fa sae_srcif .
.\" ==========
.It Bq Er EAFNOSUPPORT
The
.Fa socket
cannot find any usable addresses of a specific address family
as required by the communication domain.
.\" ==========
.It Bq Er EALREADY
A previous connection attempt has not yet been completed.
.\" ==========
.It Bq Er EBADF
.Fa socket
is not a valid descriptor.
.\" ==========
.It Bq Er ECONNREFUSED
The attempt to connect was ignored
(because the target is not listening for connections)
or explicitly rejected.
.\" ==========
.It Bq Er EFAULT
Part of
.Fa iov
or data to be written to
.Fa socket
points outside the process's allocated address space.
.\" ==========
.It Bq Er EHOSTUNREACH
The target host cannot be reached (e.g., down, disconnected).
.\" ==========
.It Bq Er EINPROGRESS
The connection cannot be completed immediately.
It is possible to
.Xr select 2
for completion by selecting the
.Fa socket
for writing.
.\" ==========
.It Bq Er EINTR
Its execution was interrupted by a signal.
.\" ==========
.It Bq Er EMSGSIZE
The size of the message exceeds the available send buffer space in the
.Fa socket .
.\" ==========
.It Bq Er EINVAL
An invalid argument was detected
(e.g.,
.Fa sae_dstaddrlen
is not valid, the contents of
.Fa sae_srcaddr
or
.Fa sae_dstaddr,
buffer is invalid, etc.)
.\" ==========
.It Bq Er EISCONN
The socket is already connected.
.\" ==========
.It Bq Er ENETDOWN
The local network interface is not functioning.
.\" ==========
.It Bq Er ENETUNREACH
The network isn't reachable from this host.
.\" ==========
.It Bq Er ENOBUFS
The system call was unable to allocate a needed memory buffer.
.\" ==========
.It Bq Er ENOTSOCK
.Fa socket
is not a file descriptor for a socket.
.\" ==========
.It Bq Er EOPNOTSUPP
Because
.Fa socket
is listening, no connection is allowed.
.\" ==========
.\".It Bq Er EPROTO
.\"The connection was successfully established without any protocol-level
.\"association.  The connection can be extracted to a new socket using
.\".Xr peeloff 2 .
.\" ==========
.\".It Bq Er EPROTOTYPE
.\".Fa address
.\"has a different type than the socket
.\"that is bound to the specified peer address.
.\" ==========
.It Bq Er ETIMEDOUT
Connection establishment timed out without establishing a connection.
.\" ==========
.El
.Sh SEE ALSO
.\".Xr accept 2 ,
.Xr bind 2 ,
.Xr connect 2 ,
.Xr disconnectx 2 ,
.Xr disconnectx 2 ,
.Xr getsockopt 2 ,
.\".Xr kqueue 2 ,
.\".Xr peeloff 2 ,
.\".Xr shutdown 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.\".Xr getassocids 3 ,
.\".Xr getconnids 3 ,
.\".Xr getconninfo 3 ,
.Xr writev 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn connectx
function call appeared in Darwin 15.0.0
                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/creat.2                                      0100644 0001750 0001750 00000004240 12566166137 022045  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1989, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)creat.2	8.1 (Berkeley) 6/2/93
.\" $FreeBSD: src/lib/libc/compat-43/creat.2,v 1.11 2007/01/09 00:27:49 imp Exp $
.\"
.Dd June 2, 1993
.Dt CREAT 2
.Os
.Sh NAME
.Nm creat
.Nd create a new file
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In fcntl.h
.Ft int
.Fn creat "const char *path" "mode_t mode"
.Sh DESCRIPTION
.Bf -symbolic
This interface is made obsolete by:
.Ef
.Xr open 2 .
.Pp
The
.Fn creat
function
is the same as:
.Bd -literal -offset indent
open(path, O_CREAT | O_TRUNC | O_WRONLY, mode);
.Ed
.Sh SEE ALSO
.Xr open 2
.Sh HISTORY
The
.Fn creat
function appeared in
.At v6 .
                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/disconnectx.2                                0100644 0001750 0001750 00000010015 12567450733 023264  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" 
.\" Copyright (c) 2015 Apple Inc. All rights reserved.
.\" 
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. The rights granted to you under the License
.\" may not be used to create, or enable the creation or redistribution of,
.\" unlawful or unlicensed copies of an Apple operating system, or to
.\" circumvent, violate, or enable the circumvention or violation of, any
.\" terms of an Apple operating system software license agreement.
.\" 
.\" Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_END@
.\"
.Dd April 10, 2015
.Dt DISCONNECTX 2
.Os Darwin
.Sh NAME
.Nm disconnectx
.Nd disconnects a connection on a socket
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo disconnectx
.Fa "int socket"
.Fa "sae_associd_t associd"
.Fa "sae_connid_t connid"
.Fc
.Sh DESCRIPTION
The parameter
.Fa socket
is a socket.  The communication domain of the socket determines the
availability and behavior of
.Fn disconnectx .
For connection-oriented socket,
.Fn disconnectx
is analogous to
.Xr shutdown 2
.Dv with SHUT_RDWR
issued on the socket. For connectionless socket, it disassociates any existing
association to the peer socket.
.\" identified by
.\" .Fa connid ,
.\" or on all connections associated with the
.\" .Fa associd
.\" association.
.Pp
The parameter
.Fa associd
specifies the association identifier.  It should be set to
.Dv SAE_ASSOCID_ANY .
.\"when there is only one association present;
.\".Dv SAE_ASSOCID_ALL
.\"to specify all existing associations; or one of the identifiers returned from
.\".Xr getassocids 3 .
.Pp
The parameter
.Fa connid
should be set to
.\" specifies the connection identifier.  It may be set to
.Dv SAE_CONNID_ANY .
.\" or
.\".Dv SAE_CONNID_ALL ,
.\" in which case the association represented by
.\" .Fa associd
.\" will be dissolved; or the value returned from
.\" .Xr connectx 2
.\" or
.\" .Xr getconnids 3 ,
.\" which indicates that the disconnection occurs only on that connection
.\" while keeping the session association intact.  For the latter, the connection
.\" associated with
.\" .Fa connid
.\" will no longer be valid upon success.
.Sh NOTES
.Fn disconnectx
is currently supported only on AF_INET and AF_INET6 sockets of type SOCK_DGRAM
and SOCK_STREAM.
.Sh RETURN VALUES
The
.Fn disconnectx
function returns the value 0 if successful; otherwise the value of -1 is
returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn disconnectx
system call succeeds unless:
.Bl -tag -width Er
.\" ===========
.It Bq Er EALREADY
Operation already in progress.
.\" for the session association represented by
.\" .Fa associd .
.\" ===========
.It Bq Er EBADF
.Fa Socket
is not a valid descriptor.
.\" ===========
.It Bq Er EINVAL
The
.Fa associd
or
.Fa connid
argument is invalid or the underlying protocol is no longer attached to
.Fa socket .
.\" ===========
.It Bq Er ENOTCONN
.\" The session association repreresented by
.\" .Fa associd
.\" is not connected.
The
.Fa socket
is not connected.
.\" ===========
.It Bq Er ENOTSOCK
.Fa Socket
is a file, not a socket.
.El
.Sh SEE ALSO
.Xr connect 2 ,
.Xr connectx 2 ,
.Xr socket 2 ,
.\" .Xr getassocids 3 ,
.\" .Xr getconnids 3 ,
.\" .Xr getconninfo 3 ,
.Xr compat 5
.Sh HISTORY
The
.Fn disconnectx
function call appeared in Darwin 15.0.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/dup.2                                        0100644 0001750 0001750 00000010607 12567450733 021542  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: dup.2,v 1.4 1995/02/27 12:32:21 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)dup.2	8.1 (Berkeley) 6/4/93
.\"
.Dd December 1, 2010
.Dt DUP 2
.Os BSD 4
.Sh NAME
.Nm dup ,
.Nm dup2
.Nd duplicate an existing file descriptor
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo dup
.Fa "int fildes"
.Fc
.Ft int
.Fo dup2
.Fa "int fildes"
.Fa "int fildes2"
.Fc
.Sh DESCRIPTION
.Fn Dup
duplicates an existing object descriptor
and returns its value to the calling process
.Fa ( fildes2
=
.Fn dup fildes ) .
The argument
.Fa fildes
is a small non-negative integer index
in the per-process descriptor table.
The value must be less than the size of the table,
which is returned by
.Xr getdtablesize 2 .
The new descriptor returned by the call
is the lowest numbered descriptor
currently not in use by the process.
.Pp
The object referenced by the descriptor does not distinguish
between
.Fa fildes
and
.Fa fildes2
in any way.
Thus if
.Fa fildes2
and
.Fa fildes
are duplicate references to an open
file,
.Xr read 2 ,
.Xr write 2
and
.Xr lseek 2
calls all move a single pointer into the file,
and append mode, non-blocking I/O and asynchronous I/O options
are shared between the references.
If a separate pointer into the file is desired,
a different object reference to the file must be obtained
by issuing an additional
.Xr open 2
call.
The close-on-exec flag on the new file descriptor is unset.
.Pp
In 
.Fn dup2 ,
the value of the new descriptor
.Fa fildes2
is specified.
If
.Fa fildes
and
.Fa fildes2
are equal, then
.Fn dup2 
just returns
.Fa fildes2 ;
no other changes are made to the existing descriptor.
Otherwise, if descriptor
.Fa fildes2
is already in use, it is first deallocated as if a
.Xr close 2
call had been done first.
.Sh RETURN VALUES
Upon successful completion, the new file descriptor is returned.
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn dup
and
.Fn dup2
system calls will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Fa fildes
is not an active, valid file descriptor.
.\" ==========
.It Bq Er EINTR
Execution is interrupted by a signal.
.\" ==========
.It Bq Er EMFILE
Too many file descriptors are active.
.El
.Pp
The
.Fn dup2
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Fa fildes2
is negative or greater than the maximum allowable number (see getdtablesize(2)).
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr close 2 ,
.Xr fcntl 2 ,
.Xr getdtablesize 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr socket 2 ,
.Xr socketpair 2
.Sh STANDARDS
.Fn Dup
and
.Fn dup2
are expected to conform to 
.St -p1003.1-88 .
                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/dup2.2                                       0100644 0001750 0001750 00000000017 12567450733 021616  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/dup.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/exchangedata.2                               0100644 0001750 0001750 00000011210 12567450733 023355  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 2003 Apple Computer, Inc. All rights reserved.
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\"     @(#)exchangedata.2
.
.Dd December 15, 2003
.Dt EXCHANGEDATA 2
.Os Darwin
.Sh NAME
.Nm exchangedata
.Nd atomically exchange data between two files
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Fd #include <sys/attr.h>
.Ft int
.Fn exchangedata "const char * path1" "const char * path2" "unsigned int options"
.
.Sh DESCRIPTION
The
.Fn exchangedata
function swaps the contents of the files referenced by 
.Fa path1 
and 
.Fa path2 
in an atomic fashion. 
That is, all concurrent processes will either see the pre-exchanged state or the 
post-exchanged state; they can never see the files in an inconsistent state.
The data in all forks is swapped in this way. 
The 
.Fa options 
parameter lets you control specific aspects of the function's behaviour.
.Pp
.
Open file descriptors follow the swapped data.
Thus, a descriptor that previously referenced 
.Fa path1 
will now reference the data that's accessible via 
.Fa path2 ,
and vice versa.
.Pp
.
In general, the file attributes (metadata) are not exchanged.
Specifically, the object identifier attributes (that is, the 
.Dv ATTR_CMN_OBJID 
and
.Dv ATTR_CMN_OBJPERMANENTID 
attributes as defined by the 
.Xr getattrlist 2 
function) are not swapped.
An exception to this general rule is that the modification time attribute (
.Dv ATTR_CMN_MODTIME
) is swapped.
.Pp
.
When combined, these features allow you to implement a 'safe save' function that 
does not break references to the file (for example, aliases).
You first save the new contents to a temporary file and then 
exchange the data of the original file and the temporary.
Programs that reference the file via an object identifier will continue to 
reference the original file, but now it has the new data.
.Pp
.
.\" path1 and path2 parameters
.
The
.Fa path1 
and 
.Fa path2 
parameters must both reference valid files.
All directories listed in the path names leading to these files must be 
searchable.
You must have write access to the files.
.Pp
.
.\" options parameter
.
The
.Fa options
parameter is a bit set that controls the behaviour of
.Fn exchangedata .
The following option bits are defined.
.
.Bl -tag -width FSOPT_NOFOLLOW
.
.It FSOPT_NOFOLLOW
If this bit is set, 
.Fn exchangedata 
will not follow a symlink if it occurs as 
the last component of
.Fa path1 
or 
.Fa path2 .
.
.El
.
.Sh RETURN VALUES
Upon successful completion a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.
.Sh COMPATIBILITY
Not all volumes support 
.Fn exchangedata .
You can test whether a volume supports 
.Fn exchangedata 
by using 
.Xr getattrlist 2 
to get the volume capabilities attribute 
.Dv ATTR_VOL_CAPABILITIES ,
and then testing the 
.Dv VOL_CAP_INT_EXCHANGEDATA 
flag.
.Pp
.
.Sh ERRORS
.Fn exchangedata
will fail if:
.Bl -tag -width Er
.
.It Bq Er ENOTSUP
The volume does not support
.Fn exchangedata .
.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.
.It Bq Er ENAMETOOLONG
A component of a path name exceeded 
.Dv NAME_MAX
characters, or an entire path name exceeded 
.Dv PATH_MAX
characters.
.
.It Bq Er ENOENT
Either file does not exist.
.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.
.It Bq Er EFAULT
.Fa path1
or
.Em path2
points to an invalid address.
.
.It Bq Er EXDEV
.Fa path1
and
.Em path2
are on different volumes (mounted file systems).
.
.It Bq Er EINVAL
.Fa path1
or
.Em path2
reference the same file.
.
.It Bq Er EINVAL
You try to exchange something other than a regular file (for example, a directory).
.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
.
.Sh SEE ALSO
.
.Xr getattrlist 2
.
.Sh HISTORY
A
.Fn exchangedata
function call appeared in Darwin 1.3.1 (Mac OS X version 10.0).
.
                                                                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/execve.2                                     0100644 0001750 0001750 00000021662 12567450733 022234  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: execve.2,v 1.9 1995/02/27 12:32:25 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)execve.2	8.3 (Berkeley) 1/24/94
.\"
.Dd January 24, 1994
.Dt EXECVE 2
.Os BSD 4
.Sh NAME
.Nm execve
.Nd execute a file
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo execve
.Fa "const char *path"
.Fa "char *const argv[]"
.Fa "char *const envp[]"
.Fc
.Sh DESCRIPTION
.Fn Execve
transforms the calling process into a new process.
The new process is constructed from an ordinary file,
whose name is pointed to by
.Fa path ,
called the
.Em new process file .
This file is either an executable object file,
or a file of data for an interpreter.
An executable object file consists of an identifying header,
followed by pages of data representing the initial program (text)
and initialized data pages.  Additional pages may be specified
by the header to be initialized with zero data;  see
.Xr a.out 5 .
.Pp
An interpreter file begins with a line of the form:
.Pp
.Bd -filled -offset indent -compact
.Sy \&#!
.Em interpreter
.Bq Em arg ...
.Ed
.Pp
When an interpreter file is
.Fn execve Ap d ,
the system runs the specified
.Em interpreter .
If any optional
.Em args
are specified, they become the first (second, ...) argument to the
.Em interpreter.
The name of the originally
.Fn execve Ap d
file becomes the subsequent argument;
otherwise, the name of the originally
.Fn execve Ap d
file is the first argument.
The original arguments to the invocation of the interpreter
are shifted over to become the final arguments.
The zeroth argument, normally the name of the
.Fn execve Ap d
file, is left unchanged.
.Pp
The argument
.Fa argv
is a pointer to a null-terminated array of
character pointers to null-terminated character strings.
These strings construct the argument list to be made available to the new
process.  At least one argument must be present in
the array; by custom, the first element should be
the name of the executed program (for example, the last component of
.Fa path ) .
.Pp
The argument
.Fa envp
is also a pointer to a null-terminated array of
character pointers to null-terminated strings.
A pointer to this array is normally stored in the global variable
.Va environ.
These strings pass information to the
new process that is not directly an argument to the command (see
.Xr environ 7 ) .
.Pp
File descriptors open in the calling process image remain open in
the new process image, except for those for which the close-on-exec
flag is set (see
.Xr close 2
and
.Xr fcntl 2 ) .
Descriptors that remain open are unaffected by
.Fn execve .
.Pp
Signals set to be ignored in the calling process are set to be ignored in
the
new process. Signals which are set to be caught in the calling process image
are set to default action in the new process image.
Blocked signals remain blocked regardless of changes to the signal action.
The signal stack is reset to be undefined (see
.Xr sigaction 2
for more information).
.Pp
If the set-user-ID mode bit of the new process image file is set
(see
.Xr chmod 2 ) ,
the effective user ID of the new process image is set to the owner ID
of the new process image file.
If the set-group-ID mode bit of the new process image file is set,
the effective group ID of the new process image is set to the group ID
of the new process image file.
(The effective group ID is the first element of the group list.)
The real user ID, real group ID and
other group IDs of the new process image remain the same as the calling
process image.
After any set-user-ID and set-group-ID processing,
the effective user ID is recorded as the saved set-user-ID,
and the effective group ID is recorded as the saved set-group-ID.
These values may be used in changing the effective IDs later (see
.Xr setuid 2 ) .
.Pp
The new process also inherits the following attributes from
the calling process:
.Pp
.Bl -column parent_process_ID -offset indent -compact
.It process ID Ta see Xr getpid 2
.It parent process ID Ta see Xr getppid 2
.It process group ID Ta see Xr getpgrp 2
.It access groups Ta see Xr getgroups 2
.It working directory Ta see Xr chdir 2
.It root directory Ta see Xr chroot 2
.It control terminal Ta see Xr termios 4
.It resource usages Ta see Xr getrusage 2
.It interval timers Ta see Xr getitimer 2
.It resource limits Ta see Xr getrlimit 2
.It file mode mask Ta see Xr umask 2
.It signal mask Ta see Xr sigaction 2 ,
.Xr sigsetmask 2
.El
.Pp
When a program is executed as a result of an
.Fn execve
call, it is entered as follows:
.Bd -literal -offset indent
main(argc, argv, envp)
int argc;
char **argv, **envp;
.Ed
.Pp
where
.Fa argc
is the number of elements in
.Fa argv
(the ``arg count'')
and
.Fa argv
points to the array of character pointers
to the arguments themselves.
.Sh RETURN VALUES
As the
.Fn execve
function overlays the current process image  with a new process image,
the successful call has no process to return to.
If
.Fn execve
does return to the calling process, an error has occurred;
the return value will be -1 and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Execve
will fail and return to the calling process if:
.Bl -tag -width Er
.\" ==========
.It Bq Er E2BIG
The number of bytes in the new process's argument list
is larger than the system-imposed limit.
This limit is specified by the
.Xr sysctl 3
MIB variable
.Dv KERN_ARGMAX .
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ==========
.It Bq Er EACCES
The new process file is not an ordinary file.
.\" ==========
.It Bq Er EACCES
The new process file mode denies execute permission.
.\" ==========
.It Bq Er EACCES
The new process file is on a filesystem mounted
with execution disabled
.Pf ( Dv MNT_NOEXEC
in
.Ao Pa sys/mount.h Ac ) .
.\" ==========
.It Bq Er EFAULT
The new process file is not as long as indicated by
the size values in its header.
.\" ==========
.It Bq Er EFAULT
.Fa Path ,
.Fa argv ,
or
.Fa envp
point
to an illegal address.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
The new process file does not exist.
.\" ==========
.It Bq Er ENOEXEC
The new process file has the appropriate access
permission, but has an unrecognized format
(e.g., an invalid magic number in its header).
.\" ==========
.It Bq Er ENOMEM
The new process requires more virtual memory than
is allowed by the imposed maximum
.Pq Xr getrlimit 2 .
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er ETXTBSY
The new process file is a pure procedure (shared text)
file that is currently open for writing or reading by some process.
.El
.Sh CAVEAT
If a program is
.Em setuid
to a non-super-user, but is executed when
the real
.Em uid
is ``root'', then the program has some of the powers
of a super-user as well.
.Sh SEE ALSO
.Xr exit 2 ,
.Xr fork 2 ,
.Xr execl 3 ,
.Xr sysctl 3 ,
.Xr environ 7
.Sh HISTORY
The
.Fn execve
function call appeared in
.Bx 4.2 .
                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/faccessat.2                                  0100644 0001750 0001750 00000000022 12567450733 022674  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/access.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fchdir.2                                     0100644 0001750 0001750 00000000021 12567450733 022176  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/chdir.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fchflags.2                                   0100644 0001750 0001750 00000000023 12567450733 022516  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/chflags.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fchmod.2                                     0100644 0001750 0001750 00000000021 12567450733 022177  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/chmod.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fchmodat.2                                   0100644 0001750 0001750 00000000021 12567450733 022524  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/chmod.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fchown.2                                     0100644 0001750 0001750 00000000021 12567450733 022223  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/chown.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fchownat.2                                   0100644 0001750 0001750 00000000021 12567450733 022550  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/chown.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fcntl.2                                      0100644 0001750 0001750 00000047301 12567450733 022061  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2011 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\"	$NetBSD: fcntl.2,v 1.6 1995/02/27 12:32:29 cgd Exp $
.\"
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fcntl.2	8.2 (Berkeley) 1/12/94
.\"
.Dd February 17, 2011
.Dt FCNTL 2
.Os BSD 4.2
.Sh NAME
.Nm fcntl
.Nd file control
.Sh SYNOPSIS
.Fd #include <fcntl.h>
.Ft int
.Fo fcntl
.Fa "int fildes"
.Fa "int cmd"
.Fa "..."
.Fc
.Sh DESCRIPTION
.Fn Fcntl
provides for control over descriptors.
The argument
.Fa fildes
is a descriptor to be operated on by
.Fa cmd
as follows:
.Bl -tag -width F_WRITEBOOTSTRAPX
.It Dv F_DUPFD
Return a new descriptor as follows:
.Pp
.Bl -bullet -compact -offset 4n
.It
Lowest numbered available descriptor greater than or equal to
.Fa arg .
.It
Same object references as the original descriptor.
.It
New descriptor shares the same file offset if the object
was a file.
.It
Same access mode (read, write or read/write).
.It
Same file status flags (i.e., both file descriptors
share the same file status flags).
.It
The close-on-exec flag associated with the new file descriptor
is cleared so that the descriptor remains open across an
.Xr execv 2
system call.
.El
.It Dv F_DUPFD_CLOEXEC
Like
.Dv F_DUPFD ,
except that the close-on-exec flag associated with the new file descriptor
is set.
.It Dv F_GETFD
Get the flags associated with the file descriptor
.Fa fildes ,
as described below
.Fa ( arg
is ignored).
.It Dv F_SETFD
Set the file descriptor flags to
.Fa arg .
.It Dv F_GETFL
Get descriptor status flags, as described below
.Fa ( arg
is ignored).
.It Dv F_SETFL
Set descriptor status flags to
.Fa arg .
.It Dv F_GETOWN
Get the process ID or process group
currently receiving
.Dv SIGIO
and
.Dv SIGURG
signals; process groups are returned
as negative values
.Fa ( arg
is ignored).
.It Dv F_SETOWN
Set the process or process group
to receive
.Dv SIGIO
and
.Dv SIGURG
signals;
process groups are specified by supplying
.Fa arg
as negative, otherwise 
.Fa arg
is interpreted as a process ID.
.It Dv F_GETPATH
Get the path of the file descriptor 
.Fa Fildes .  
The argument must be a buffer of size
.Sy MAXPATHLEN
or greater.
.It Dv F_PREALLOCATE
Preallocate file storage space. Note: upon success, 
the space that is allocated can be the same size or 
larger than the space requested.
.It Dv F_SETSIZE
Truncate a file without zeroing space.
The calling process must have root privileges.
.It Dv F_RDADVISE
Issue an advisory read async with no copy to user.
.It Dv F_RDAHEAD
Turn read ahead off/on.
A zero value in
.Fa arg
disables read ahead.
A non-zero value in
.Fa arg
turns read ahead on.
.It Dv F_READBOOTSTRAP
Read bootstrap from disk.
.It Dv F_WRITEBOOTSTRAP
Write bootstrap on disk.
The calling process must have root privileges.
.It Dv F_NOCACHE
Turns data caching off/on. A non-zero value in
.Fa arg
turns data caching off.
A value of zero in
.Fa arg
turns data caching on.
.It Dv F_LOG2PHYS
Get disk device information.
Currently this only includes the
disk device address that corresponds
to the current file offset. Note that if the
file offset is not backed by physical blocks
we can return -1 as the offset. This is subject
to change.
.It Dv F_LOG2PHYS_EXT
Variant of F_LOG2PHYS that uses the passed in
file offset and length.
.It Dv F_FULLFSYNC
Does the same thing as
.Xr fsync 2
then asks the drive to
flush all buffered data to
the permanent storage device
.Fa ( arg
is ignored).
This is currently implemented on HFS, MS-DOS (FAT),
and Universal Disk Format (UDF) file systems.
The operation may take quite a while to complete.
Certain FireWire drives have also been known
to ignore the request to flush their buffered data.
.It Dv F_SETNOSIGPIPE
Determines whether a
.Dv SIGPIPE
signal will be generated when a write fails on a pipe or socket for
which there is no reader.  If
.Fa arg
is non-zero,
.Dv SIGPIPE
generation is disabled for descriptor
.Fa fildes ,
while an
.Fa arg
of zero enables it (the default).
.It Dv F_GETNOSIGPIPE
Returns whether a
.Dv SIGPIPE
signal will be generated when a write fails on a pipe or socket
for which there is no reader.  The semantics of the return value
match those of the
.Fa arg
of
.Dv F_SETNOSIGPIPE .
.El
.Pp
The flags for the
.Dv F_GETFD
and
.Dv F_SETFD
commands are as follows:
.Bl -tag -width FD_CLOEXECX -offset indent
.It Dv FD_CLOEXEC
Close-on-exec; the given file descriptor will be automatically
closed in the successor process image when one of the
.Xr execv 2
or
.Xr posix_spawn 2
family of system calls is invoked.
.El
.Pp
The flags for the
.Dv F_GETFL
and
.Dv F_SETFL
commands are as follows:
.Bl -tag -width O_NONBLOCKX -offset indent
.It Dv O_NONBLOCK
Non-blocking I/O; if no data is available to a
.Xr read
call, or if a
.Xr write
operation would block,
the read or write call returns -1 with the error
.Er EAGAIN .
.It Dv O_APPEND
Force each write to append at the end of file;
corresponds to the
.Dv O_APPEND
flag of
.Xr open 2 .
.It Dv O_ASYNC
Enable the
.Dv SIGIO
signal to be sent to the process group
when I/O is possible, e.g.,
upon availability of data to be read.
.El
.Pp
Several commands are available for doing advisory file locking;
they all operate on the following structure:
.ne 7v
.Bd -literal
        struct flock {
	    off_t	l_start;    /* starting offset */
	    off_t	l_len;	    /* len = 0 means until end of file */
	    pid_t	l_pid;	    /* lock owner */
	    short	l_type;	    /* lock type: read/write, etc. */
	    short	l_whence;   /* type of l_start */
        };
.Ed
.Pp
The commands available for advisory record locking are as follows:
.Bl -tag -width F_SETLKWX
.It Dv F_GETLK
Get the first lock that blocks the lock description pointed to by the
third argument,
.Fa arg ,
taken as a pointer to a
.Fa "struct flock"
(see above).
The information retrieved overwrites the information passed to
.Nm fcntl
in the
.Fa flock
structure.
If no lock is found that would prevent this lock from being created,
the structure is left unchanged by this function call except for the
lock type which is set to
.Dv F_UNLCK .
.It Dv F_SETLK
Set or clear a file segment lock according to the lock description
pointed to by the third argument,
.Fa arg ,
taken as a pointer to a
.Fa "struct flock"
(see above).
.Dv F_SETLK
is used to establish shared (or read) locks
.Dv (F_RDLCK)
or exclusive (or write) locks,
.Dv (F_WRLCK) ,
as well as remove either type of lock
.Dv (F_UNLCK) .
If a shared or exclusive lock cannot be set,
.Nm fcntl
returns immediately with
.Er EAGAIN .
.It Dv F_SETLKW
This command is the same as
.Dv F_SETLK
except that if a shared or exclusive lock is blocked by other locks,
the process waits until the request can be satisfied.
If a signal that is to be caught is received while
.Nm fcntl
is waiting for a region, the
.Nm fcntl
will be interrupted if the signal handler has not specified the
.Dv SA_RESTART
(see
.Xr sigaction 2 ) .
.El
.Pp
When a shared lock has been set on a segment of a file,
other processes can set shared locks on that segment
or a portion of it.
A shared lock prevents any other process from setting an exclusive
lock on any portion of the protected area.
A request for a shared lock fails if the file descriptor was not
opened with read access.
.Pp
An exclusive lock prevents any other process from setting a shared lock or
an exclusive lock on any portion of the protected area.
A request for an exclusive lock fails if the file was not
opened with write access.
.Pp
The value of
.Fa l_whence
is
.Dv SEEK_SET ,
.Dv SEEK_CUR ,
or
.Dv SEEK_END
to indicate that the relative offset,
.Fa l_start
bytes, will be measured from the start of the file,
current position, or end of the file, respectively.
The value of
.Fa l_len
is the number of consecutive bytes to be locked.
If
.Fa l_len
is negative, the result is undefined.
The
.Fa l_pid
field is only used with
.Dv F_GETLK
to return the process ID of the process holding a blocking lock.
After a successful
.Dv F_GETLK
request, the value of
.Fa l_whence
is
.Dv SEEK_SET .
.Pp
Locks may start and extend beyond the current end of a file,
but may not start or extend before the beginning of the file.
A lock is set to extend to the largest possible value of the
file offset for that file if
.Fa l_len
is set to zero. If
.Fa l_whence
and
.Fa l_start
point to the beginning of the file, and
.Fa l_len
is zero, the entire file is locked.
If an application wishes only to do entire file locking, the
.Xr flock 2
system call is much more efficient.
.Pp
There is at most one type of lock set for each byte in the file.
Before a successful return from an
.Dv F_SETLK
or an
.Dv F_SETLKW
request when the calling process has previously existing locks
on bytes in the region specified by the request,
the previous lock type for each byte in the specified
region is replaced by the new lock type.
As specified above under the descriptions
of shared locks and exclusive locks, an
.Dv F_SETLK
or an
.Dv F_SETLKW
request fails or blocks respectively when another process has existing
locks on bytes in the specified region and the type of any of those
locks conflicts with the type specified in the request.
.Pp
This interface follows the completely stupid semantics of System V and
.St -p1003.1-88
that require that all locks associated with a file for a given process are
removed when \fIany\fP file descriptor for that file is closed by that process.
This semantic means that applications must be aware of any files that
a subroutine library may access.
For example if an application for updating the password file locks the
password file database while making the update, and then calls
.Xr getpwname 3
to retrieve a record,
the lock will be lost because 
.Xr getpwname 3
opens, reads, and closes the password database.
The database close will release all locks that the process has
associated with the database, even if the library routine never
requested a lock on the database.
Another minor semantic problem with this interface is that
locks are not inherited by a child process created using the
.Xr fork 2
function.
The
.Xr flock 2
interface has much more rational last close semantics and
allows locks to be inherited by child processes.
.Xr Flock 2
is recommended for applications that want to ensure the integrity
of their locks when using library routines or wish to pass locks
to their children.
Note that 
.Xr flock 2
and 
.Xr fcntl 2
locks may be safely used concurrently.
.Pp
All locks associated with a file for a given process are
removed when the process terminates.
.Pp
A potential for deadlock occurs if a process controlling a locked region
is put to sleep by attempting to lock the locked region of another process.
This implementation detects that sleeping until a locked region is unlocked
would cause a deadlock and fails with an
.Er EDEADLK
error.
.Pp
The
.Dv F_PREALLOCATE
command operates on the following structure:
.ne 7v
.Bd -literal
        typedef struct fstore {
	    u_int32_t fst_flags;      /* IN: flags word */
	    int       fst_posmode;    /* IN: indicates offset field */
	    off_t     fst_offset;     /* IN: start of the region */
	    off_t     fst_length;     /* IN: size of the region */
	    off_t     fst_bytesalloc; /* OUT: number of bytes allocated */
        } fstore_t;
.Ed
.Pp
The flags (fst_flags) for the
.Dv F_PREALLOCATE
command are as follows:
.Bl -tag -width F_ALLOCATECONTIGX -offset indent
.It Dv F_ALLOCATECONTIG
Allocate contiguous space.
.It Dv F_ALLOCATEALL
Allocate all requested space or no space at all.
.El
.Pp
The position modes (fst_posmode) for the
.Dv F_PREALLOCATE
command indicate how to use the offset field.
The modes are as follows:
.Bl -tag -width F_PEOFPOSMODEX -offset indent
.It Dv F_PEOFPOSMODE
Allocate from the physical end of file.
.It Dv F_VOLPOSMODE
Allocate from the volume offset.
.El
.Pp
The
.Dv F_RDADVISE
command operates on the following structure
which holds information passed from the
user to the system:
.ne 7v
.Bd -literal
        struct radvisory {
           off_t   ra_offset;  /* offset into the file */
           int     ra_count;   /* size of the read     */
        };
.Ed
.Pp
The
.Dv F_READBOOTSTRAP and F_WRITEBOOTSTRAP
commands operate on the following structure.
.ne 7v
.Bd -literal
        typedef struct fbootstraptransfer {
            off_t fbt_offset;       /* IN: offset to start read/write */
            size_t fbt_length;      /* IN: number of bytes to transfer */
            void *fbt_buffer;       /* IN: buffer to be read/written */
        } fbootstraptransfer_t;
.Ed
.Pp
The
.Dv F_LOG2PHYS
command operates on the following structure:
.ne 7v
.Bd -literal
        struct log2phys {
            u_int32_t l2p_flags;        /* unused so far */
            off_t     l2p_contigbytes;  /* unused so far */
            off_t     l2p_devoffset;    /* bytes into device */
        };
.Ed
.Pp
The
.Dv F_LOG2PHYS_EXT
command operates on the same structure as F_LOG2PHYS but treats it as an in/out:
.ne 7v
.Bd -literal
        struct log2phys {
            u_int32_t l2p_flags;        /* unused so far */
            off_t     l2p_contigbytes;  /* IN: number of bytes to be queried;
                                           OUT: number of contiguous bytes allocated at this position */
            off_t     l2p_devoffset;    /* IN: bytes into file;
                                           OUT: bytes into device */
        };
.Ed
.Pp
If
.Fa fildes
is a socket, then the
.Dv F_SETNOSIGPIPE
and
.Dv F_GETNOSIGPIPE
commands are directly analogous, and fully interoperate with the
.Dv SO_NOSIGPIPE
option of
.Xr setsockopt 2
and
.Xr getsockopt 2
respectively.
.Sh RETURN VALUES
Upon successful completion, the value returned depends on
.Fa cmd
as follows:
.Bl -tag -width F_GETOWNX -offset indent
.It Dv F_DUPFD
A new file descriptor.
.It Dv F_GETFD
Value of flag (only the low-order bit is defined).
.It Dv F_GETFL
Value of flags.
.It Dv F_GETOWN
Value of file descriptor owner.
.It other
Value other than -1.
.El
.Pp
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn fcntl
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EAGAIN
The argument
.Fa cmd
is
.Dv F_SETLK ,
the type of lock
.Fa (l_type)
is a shared lock
.Dv (F_RDLCK)
or exclusive lock
.Dv (F_WRLCK) ,
and the segment of a file to be locked is already
exclusive-locked by another process;
or the type is an exclusive lock and some portion of the
segment of a file to be locked is already shared-locked or
exclusive-locked by another process.
.It Bq Er EACCESS
The argument
.Fa cmd
is either
.Dv F_SETSIZE
or
.Dv F_WRITEBOOTSTRAP
and the calling process does not have root privileges.
.\" ==========
.It Bq Er EBADF
.Fa Fildes
is not a valid open file descriptor.
.Pp
The argument
.Fa cmd
is
.Dv F_SETLK
or
.Dv F_SETLKW ,
the type of lock
.Fa (l_type)
is a shared lock
.Dv (F_RDLCK) ,
and
.Fa fildes
is not a valid file descriptor open for reading.
.Pp
The argument
.Fa cmd
is
.Dv F_SETLK
or
.Dv F_SETLKW ,
the type of lock
.Fa (l_type)
is an exclusive lock
.Dv (F_WRLCK) ,
and
.Fa fildes
is not a valid file descriptor open for writing.
.Pp
The argument
.Fa cmd
is
.Dv F_PREALLOCATE
and the calling process does not have
file write permission.
.Pp
The argument
.Fa cmd
is
.Dv F_LOG2PHYS
or
.Dv F_LOG2PHYS_EXT
and
.Fa fildes
is not a valid file descriptor open for reading.
.\" ==========
.It Bq Er EDEADLK
The argument
.Fa cmd
is
.Dv F_SETLKW ,
and a deadlock condition was detected.
.\" ==========
.It Bq Er EINTR
The argument
.Fa cmd
is
.Dv F_SETLKW ,
and the function was interrupted by a signal.
.\" ==========
.It Bq Er EINVAL
.Fa Cmd
is
.Dv F_DUPFD
and
.Fa arg
is negative or greater than the maximum allowable number
(see
.Xr getdtablesize 2 ) .
.Pp
The argument
.Fa cmd
is
.Dv F_GETLK ,
.Dv F_SETLK ,
or
.Dv F_SETLKW
and the data to which
.Fa arg
points is not valid, or
.Fa fildes
refers to a file that does not support locking.
.Pp
The argument
.Fa cmd
is
.Dv F_PREALLOCATE
and the
.Fa fst_posmode
is not a valid mode,
or when
.Dv F_PEOFPOSMODE
is set and
.Fa fst_offset
is a non-zero value,
or when
.Dv F_VOLPOSMODE
is set and
.Fa fst_offset
is a negative or zero value.
.Pp
The argument
.Fa cmd
is either
.Dv F_READBOOTSTRAP
or
.Dv F_WRITEBOOTSTRAP
and the operation was attempted on a non-HFS disk type.
.\" ==========
.It Bq Er EMFILE
.Fa Cmd
is
.Dv F_DUPFD
and the maximum allowed number of file descriptors are currently
open.
.\" ==========
.It Bq Er EMFILE
The argument
.Fa cmd
is
.Dv F_DUPED
and the maximum number of file descriptors permitted for the
process are already in use,
or no file descriptors greater than or equal to
.Fa arg
are available.
.\" ==========
.It Bq Er ENOLCK
The argument
.Fa cmd
is
.Dv F_SETLK
or
.Dv F_SETLKW ,
and satisfying the lock or unlock request would result in the
number of locked regions in the system exceeding a system-imposed limit.
.\" ==========
.It Bq Er EOVERFLOW
A return value would overflow its representation.
For example,
.Fa cmd
is F_GETLK, F_SETLK, or F_SETLKW
and the smallest (or, if l_len is non-zero, the largest) offset
of a byte in the requested segment
will not fit in an object of type off_t.
.\" ==========
.It Bq Er ESRCH
.Fa Cmd
is
.Dv F_SETOWN
and
the process ID given as argument is not in use.
.El
.Sh SEE ALSO
.Xr close 2 ,
.Xr execve 2 ,
.Xr flock 2 ,
.Xr getdtablesize 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr socket 2 ,
.Xr setsockopt 2 ,
.Xr sigaction 3
.Sh HISTORY
The
.Fn fcntl
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fgetattrlist.2                               0100644 0001750 0001750 00000000027 12567450733 023461  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getattrlist.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fgetxattr.2                                  0100644 0001750 0001750 00000000024 12567450733 022752  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getxattr.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fhopen.2                                     0100644 0001750 0001750 00000004071 12567450733 022227  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2007 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd January 9, 2007
.Dt FHOPEN 2
.Os
.Sh NAME
.Nm fhopen
.Nd open a file by file handle
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mount.h>
.Ft int
.Fn fhopen "const struct fhandle *fhp" "int flags"
.Sh DESCRIPTION
The file specified by the given file handle is opened for reading and/or
writing, as specified by the argument
.Fa flags ;
the file descriptor is returned to the calling process.
.Pp
This system call is restricted to the super-user and is used by an
NFS server's
.Xr rpc.lockd 8
daemon to open a file in order to perform locking operations on it.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn fhopen
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq ESTALE
The file handle no longer refers to a valid, NFS-exported object.
.It Bq EPERM
The caller is not the super-user.
.It Bq EINVAL
There was a problem with the value of one of the arguments.
.It Bq EFAULT
.Fa fhp
points to an invalid address.
.El
.Sh SEE ALSO
.Xr rpc.lockd 8
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/flistxattr.2                                 0100644 0001750 0001750 00000000025 12567450733 023147  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/listxattr.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/flock.2                                      0100644 0001750 0001750 00000011254 12567450733 022047  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: flock.2,v 1.5 1995/02/27 12:32:32 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)flock.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt FLOCK 2
.Os BSD 4.2
.Sh NAME
.Nm flock
.Nd "apply or remove an advisory lock on an open file"
.Sh SYNOPSIS
.Fd #include <sys/file.h>
.Fd #define	LOCK_SH	1	/* shared lock */
.Fd #define	LOCK_EX	2	/* exclusive lock */
.Fd #define	LOCK_NB	4	/* don't block when locking */
.Fd #define	LOCK_UN	8	/* unlock */
.Ft int
.Fn flock "int fd" "int operation"
.Sh DESCRIPTION
.Fn Flock
applies or removes an
.Em advisory
lock on the file associated with the file descriptor
.Fa fd .
A lock is applied by specifying an
.Fa operation
parameter that is one of
.Dv LOCK_SH
or
.Dv LOCK_EX
with the optional addition of
.Dv LOCK_NB .
To unlock
an existing lock
.Dv operation
should be
.Dv LOCK_UN .
.Pp
Advisory locks allow cooperating processes to perform
consistent operations on files, but do not guarantee
consistency (i.e., processes may still access files
without using advisory locks possibly resulting in
inconsistencies).
.Pp
The locking mechanism allows two types of locks:
.Em shared
locks and
.Em exclusive
locks.
At any time multiple shared locks may be applied to a file,
but at no time are multiple exclusive, or both shared and exclusive,
locks allowed simultaneously on a file.  
.Pp
A shared lock may be
.Em upgraded
to an exclusive lock, and vice versa, simply by specifying
the appropriate lock type; this results in the previous
lock being released and the new lock applied (possibly
after other processes have gained and released the lock).
.Pp
Requesting a lock on an object that is already locked
normally causes the caller to be blocked until the lock may be
acquired.  If
.Dv LOCK_NB
is included in
.Fa operation ,
then this will not happen; instead the call will fail and
the error
.Er EWOULDBLOCK
will be returned.
.Sh NOTES
Locks are on files, not file descriptors.  That is, file descriptors
duplicated through
.Xr dup 2
or
.Xr fork 2
do not result in multiple instances of a lock, but rather multiple
references to a single lock.  If a process holding a lock on a file
forks and the child explicitly unlocks the file, the parent will
lose its lock.
.Pp
Processes blocked awaiting a lock may be awakened by signals.
.Sh RETURN VALUES
Zero is returned if the operation was successful;
on an error a -1 is returned and an error code is left in
the global location
.Va errno .
.Sh ERRORS
The
.Fn flock
call fails if:
.Bl -tag -width Er
.It Bq Er EWOULDBLOCK
The file is locked and the
.Dv LOCK_NB
option was specified.
.It Bq Er EBADF
The argument
.Fa fd
is an invalid descriptor.
.It Bq Er EINVAL
The argument
.Fa fd
refers to an object other than a file.
.It Bq Er ENOTSUP
The referenced descriptor is not of the correct type.
.El
.Sh SEE ALSO
.Xr close 2 ,
.Xr dup 2 ,
.Xr execve 2 ,
.Xr fork 2 ,
.Xr open 2
.Sh HISTORY
The
.Fn flock
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fork.2                                       0100644 0001750 0001750 00000011072 12567450733 021710  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: fork.2,v 1.6 1995/02/27 12:32:36 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)fork.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt FORK 2
.Os BSD 4
.Sh NAME
.Nm fork
.Nd create a new process
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft pid_t
.Fo fork
.Fa void
.Fc
.Sh DESCRIPTION
.Fn Fork
causes creation of a new process.
The new process (child process) is an exact copy of the
calling process (parent process) except for the following:
.Bl -bullet -offset indent
.It
The child process has a unique process ID.
.It
The child process has a different parent
process ID (i.e., the process ID of the parent process).
.It
The child process has its own copy of the parent's descriptors.
These descriptors reference the same underlying objects, so that,
for instance, file pointers in file objects are shared between
the child and the parent, so that an
.Xr lseek 2
on a descriptor in the child process can affect a subsequent
.Xr read
or
.Xr write
by the parent.
This descriptor copying is also used by the shell to
establish standard input and output for newly created processes
as well as to set up pipes.
.It
The child processes resource utilizations
are set to 0; see
.Xr setrlimit 2 .
.El
.Sh RETURN VALUES
Upon successful completion,
.Fn fork
returns a value of 0 to the child process
and returns the process ID of the child process to the parent process.
Otherwise, a value of -1 is returned to the parent process,
no child process is created, and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Fork
will fail and no child process will be created if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EAGAIN
The system-imposed limit
on the total number of processes under execution
would be exceeded.
This limit is configuration-dependent.
.\" ==========
.It Bq Er EAGAIN
The system-imposed limit
.Dv MAXUPRC
.Pq Aq Pa sys/param.h
on the total number of
processes under execution by a single user would be exceeded.
.\" ==========
.It Bq Er ENOMEM
There is insufficient swap space for the new process.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <unistd.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr execve 2 ,
.Xr sigaction 2 ,
.Xr wait 2 ,
.Xr compat 5
.Sh HISTORY
A
.Fn fork
function call appeared in
.At v6 .
.Sh CAVEATS
There are limits to what you can do in the child process.
To be totally safe you should restrict yourself to only
executing async-signal safe operations until such time
as one of the exec functions is called.  All APIs, including
global data symbols, in any framework or library should be 
assumed to be unsafe after a 
.Fn fork
unless explicitly documented to be safe or async-signal 
safe.  If you need to use these frameworks in the child 
process, you must exec.  In this situation it is reasonable 
to exec yourself.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fpathconf.2                                  0100644 0001750 0001750 00000000024 12567450733 022712  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/pathconf.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fremovexattr.2                               0100644 0001750 0001750 00000000027 12567450733 023473  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/removexattr.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fsetattrlist.2                               0100644 0001750 0001750 00000000027 12567450733 023475  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/setattrlist.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fsetxattr.2                                  0100644 0001750 0001750 00000000024 12567450733 022766  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/setxattr.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fstat.2                                      0100644 0001750 0001750 00000000020 12567450733 022057  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/stat.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fstat64.2                                    0100644 0001750 0001750 00000000020 12567450734 022232  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/stat.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fstatat.2                                    0100644 0001750 0001750 00000000020 12567450734 022405  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/stat.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fstatfs.2                                    0100644 0001750 0001750 00000000022 12567450734 022413  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/statfs.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fstatfs64.2                                  0100644 0001750 0001750 00000000022 12567450734 022565  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/statfs.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/fsync.2                                      0100644 0001750 0001750 00000010133 12567450734 022067  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: fsync.2,v 1.4 1995/02/27 12:32:38 cgd Exp $
.\"
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fsync.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt FSYNC 2
.Os BSD 4.2
.Sh NAME
.Nm fsync
.Nd "synchronize a file's in-core state with that on disk"
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo fsync
.Fa "int fildes"
.Fc
.Sh DESCRIPTION
.Fn Fsync
causes all modified data and attributes of
.Fa fildes
to be moved to a permanent storage device.
This normally results in all in-core modified copies
of buffers for the associated file to be written to a disk.
.Pp
Note that while
.Fn fsync
will flush all data from the host to the drive
(i.e. the "permanent storage device"),
the drive itself may not physically write the data
to the platters for quite some time
and it may be written in an out-of-order sequence.
.Pp
Specifically, if the drive loses power
or the OS crashes,
the application may find that only some or none of their data was written.
The disk drive may also re-order the data
so that later writes may be present, while earlier writes are not.
.Pp
This is not a theoretical edge case.
This scenario is easily reproduced with real world workloads
and drive power failures.
.Pp
For applications that require tighter guarantees
about the integrity of their data,
Mac OS X provides the F_FULLFSYNC fcntl.
The F_FULLFSYNC fcntl asks the drive to flush all buffered data
to permanent storage.
Applications, such as databases,
that require a strict ordering of writes
should use F_FULLFSYNC to ensure that their data
is written in the order they expect.
Please see
.Xr fcntl 2
for more detail.
.Pp
.Sh RETURN VALUES
.Rv -std fsync
.Sh ERRORS
The
.Fn fsync
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Fa fildes
is not a valid descriptor.
.\" ==========
.It Bq Er EINTR
Its execution is interrupted by a signal.
.\" ==========
.It Bq Er EINVAL
.Fa fildes
refers to a file type (e.g., a socket)
that does not support this operation.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
If a queued I/O operation fails,
.Fn fsync
may fail with any of the errors defined for
.Xr read 2
or
.Xr write 2 .
.Sh SEE ALSO
.Xr fcntl 2 ,
.Xr read 2 ,
.Xr sync 2 ,
.Xr write 2 ,
.Xr sync 8 ,
.Xr update 8
.Sh HISTORY
The
.Fn fsync
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                                                                                                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/ftruncate.2                                  0100644 0001750 0001750 00000000024 12567450734 022736  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/truncate.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/futimes.2                                    0100644 0001750 0001750 00000000022 12567450734 022415  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/utimes.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getattrlist.2                                0100644 0001750 0001750 00000144545 12567450734 023332  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 2003 Apple Computer, Inc. All rights reserved.
.\"
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\"
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\"
.\"     @(#)getattrlist.2
.
.Dd February 25, 2014
.Dt GETATTRLIST 2
.Os Darwin
.Sh NAME
.Nm getattrlist ,
.Nm fgetattrlist ,
.Nm getattrlistat
.Nd get file system attributes
.Sh SYNOPSIS
.Fd #include <sys/attr.h>
.Fd #include <unistd.h>
.Ft int
.Fn getattrlist "const char* path" "struct attrlist * attrList" "void * attrBuf" "size_t attrBufSize" "unsigned long options"
.
.Ft int
.Fn fgetattrlist "int fd" "struct attrlist * attrList" "void * attrBuf" "size_t attrBufSize" "unsigned long options"
.Ft int
.Fo getattrlistat
.Fa "int fd" "const char *path" "struct attrlist * attrList" "void * attrBuf"
.Fa "size_t attrBufSize" "unsigned long options"
.Fc
.Sh DESCRIPTION
The
.Fn getattrlist
function returns attributes (that is, metadata) of file system objects.
.Fn getattrlist
works on the file system object named by
.Fa path ,
while
.Fn fgetattrlist
works on the provided file descriptor
.Fa fd .
.Pp
The
.Fn getattrlistat
system call is equivalent to
.Fn getattrlist
except in the case where
.Fa path
specifies a relative path.
In this case the attributes are returned for the file system object named by
path relative to the directory associated with the file descriptor
.Fa fd
instead of the current working directory.
If
.Fn getattrlistat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior is
identical to a call to
.Fn getattrlist .
.Pp
You can think of
.Fn getattrlist
as a seriously enhanced version of
.Xr stat 2 .
The functions return attributes about the specified file system object
into the buffer specified by
.Fa attrBuf
and
.Fa attrBufSize .
The
.Fa attrList
parameter determines what attributes are returned.
The
.Fa options
parameter lets you control specific aspects of the function's behavior.
.Pp
.
Not all volumes support all attributes.
See the discussion of
.Dv ATTR_VOL_ATTRIBUTES
for a discussion of how to determine whether a particular volume supports a
particular attribute.
.Pp
Furthermore, you should only request the attributes that you need.
Some attributes are expensive to calculate on some volume formats.
For example,
.Dv ATTR_DIR_ENTRYCOUNT
is usually expensive to calculate on non-HFS [Plus] volumes.
If you don't need a particular attribute, you should not ask for it.
.Pp
.
.\" path parameter
.
The
.Fa path
parameter must reference a valid file system object.
Read, write or execute permission of the object itself is not required, but
all directories listed in the path name leading to the object must be
searchable.
.Pp
.
.\" attrList parameter
.
The
.Fa attrList
parameter is a pointer to an
.Vt attrlist
structure, as defined by
.Aq Pa sys/attr.h
(shown below).
It determines what attributes are returned by the function.
You are responsible for filling out all fields of this structure before calling the function.
.Bd -literal
typedef u_int32_t attrgroup_t;
.Pp
struct attrlist {
    u_short     bitmapcount; /* number of attr. bit sets in list */
    u_int16_t   reserved;    /* (to maintain 4-byte alignment) */
    attrgroup_t commonattr;  /* common attribute group */
    attrgroup_t volattr;     /* volume attribute group */
    attrgroup_t dirattr;     /* directory attribute group */
    attrgroup_t fileattr;    /* file attribute group */
    attrgroup_t forkattr;    /* fork attribute group */
};
#define ATTR_BIT_MAP_COUNT 5
.Ed
.Pp
.
.\" attrlist elements
.
The fields of the
.Vt attrlist
structure are defined as follows.
.Bl -tag -width XXXbitmapcount
.
.It bitmapcount
Number of attribute bit sets in the structure.
In current systems you must set this to
.Dv ATTR_BIT_MAP_COUNT .
.
.It reserved
Reserved.
You must set this to 0.
.
.It commonattr
A bit set that specifies the common attributes that you require.
Common attributes relate to all types of file system objects.
See below for a description of these attributes.
.
.It volattr
A bit set that specifies the volume attributes that you require.
Volume attributes relate to volumes (that is, mounted file systems).
See below for a description of these attributes.
If you request volume attributes,
.Fa path
must reference the root of a volume.
In addition, you can't request volume attributes if you also request
file or directory attributes.
.
.It dirattr
A bit set that specifies the directory attributes that you require.
See below for a description of these attributes.
.
.It fileattr
A bit set that specifies the file attributes that you require.
See below for a description of these attributes.
.
.It forkattr
A bit set that specifies the fork attributes that you require.
Fork attributes relate to the actual data in the file,
which can be held in multiple named contiguous ranges, or forks.
See below for a description of these attributes.
.
.El
.Pp
.
Unless otherwise noted in the lists below, attributes are read-only.
Attributes labelled as read/write can be set using
.Xr setattrlist 2 .
.Pp
.
.\" attrBuf and attrBufSize parameters
.
The
.Fa attrBuf
and
.Fa attrBufSize
parameters specify a buffer into which the function places attribute values.
The format of this buffer is sufficiently complex that its description
requires a separate section (see below).
The initial contents of this buffer are ignored.
.Pp
.
.\" option parameter
.
The
.Fa options
parameter is a bit set that controls the behaviour of
the functions.
The following option bits are defined.
.
.Bl -tag -width FSOPT_PACK_INVAL_ATTRS
.
.It FSOPT_NOFOLLOW
If this bit is set,
.Fn getattrlist
will not follow a symlink if it occurs as
the last component of
.Fa path .
.
.It FSOPT_REPORT_FULLSIZE
The size of the attributes reported (in the first
.Vt u_int32_t
field in the attribute buffer) will be the size needed to hold all the
requested attributes; if not set, only the attributes actually returned
will be reported.  This allows the caller to determine if any truncation
occurred.
.
.It FSOPT_PACK_INVAL_ATTRS
If this is bit is set, then all requested attributes, even ones that are
not supported by the object or file system, will be returned.  Default values
will be used for the invalid ones.  Requires that
.Dv ATTR_CMN_RETURNED_ATTRS
be requested.
.
.It FSOPT_ATTR_CMN_EXTENDED
If this is bit is set, then
.Dv ATTR_CMN_GEN_COUNT
and
.Dv ATTR_CMN_DOCUMENT_ID
can be requested. When this option is used, callers must not reference
forkattrs anywhere.
.
.El
.
.Sh ATTRIBUTE BUFFER
.
The data returned in the buffer described by
.Fa attrBuf
and
.Fa attrBufSize
is formatted as follows.
.Pp
.
.Bl -enum
.
.It
The first element of the buffer is a
.Vt u_int32_t
that contains the overall length, in bytes, of the attributes returned.
This size includes the length field itself.
.
.It
Following the length field is a list of attributes.
Each attribute is represented by a field of its type,
where the type is given as part of the attribute description (below).
.
.It
The attributes are placed into the attribute buffer in the order
that they are described below.
.
.It
Each attribute is aligned to a 4-byte boundary (including 64-bit data types).
.El
.Pp
.
If the attribute is of variable length, it is represented
in the list by an
.Vt attrreference
structure, as defined by
.Aq Pa sys/attr.h
(shown below).
.
.Bd -literal
typedef struct attrreference {
    int32_t        attr_dataoffset;
    u_int32_t      attr_length;
} attrreference_t;
.Ed
.Pp
.
This structure contains a 'pointer' to the variable length attribute data.
The
.Fa attr_length
field is the length of the attribute data (in bytes).
The
.Fa attr_dataoffset
field is the offset in bytes from the
.Vt attrreference
structure
to the attribute data.
This offset will always be a multiple of sizeof(u_int32_t) bytes,
so you can safely access common data types without fear of alignment
exceptions.
.Pp
.
The
.Fn getattrlist
function will silently truncate attribute data if
.Fa attrBufSize
is too small.
The length field at the front of the attribute list always represents
the length of the data actually copied into the attribute buffer.
If the data is truncated, there is no easy way to determine the
buffer size that's required to get all of the requested attributes.
You should always pass an
.Fa attrBufSize
that is large enough to accommodate the known size of the attributes
in the attribute list (including the leading length field).
.Pp
.
Because the returned attributes are simply truncated if the buffer is
too small, it's possible for a variable length attribute to reference
data beyond the end of the attribute buffer.  That is, it's possible
for the attribute data to start beyond the end of the attribute buffer
(that is, if
.Fa attrRef
is a pointer to the
.Vt attrreference_t ,
( ( (char *)
.Fa attrRef
) +
.Fa attr_dataoffset
) > ( ( (char *)
.Fa attrBuf
) +
.Fa attrSize
) ) or, indeed, for the attribute data to extend beyond the end of the attribute buffer (that is,
( ( (char *)
.Fa attrRef
) +
.Fa attr_dataoffset
+
.Fa attr_datalength
) > ( ( (char *)
.Fa attrBuf
) +
.Fa attrSize
) ).
If this happens you must increase the size of the buffer and call
.Fn getattrlist
to get an accurate copy of the attribute.
.
.Sh COMMON ATTRIBUTES
.
Common attributes relate to all types of file system objects.
The following common attributes are defined.
.
.Bl -tag -width ATTR_VOL_ALLOCATIONCLUMP
.
.It ATTR_CMN_RETURNED_ATTRS
An
.Vt attribute_set_t
structure which is used to report which of the requested attributes
were actually returned. This attribute, when requested, will always
be the first attribute returned. By default, unsupported attributes
will be skipped (i.e. not packed into the output buffer). This behavior
can be over-ridden using the FSOPT_PACK_INVAL_ATTRS option flag. Both
.Xr getattrlist 2 and
.Xr getatttrlistbulk 2 support this attribute while
.Xr searchfs 2 does not.
.
.It ATTR_CMN_NAME
An
.Vt attrreference
structure containing the name of the file system object as
UTF-8 encoded, null terminated C string.
The attribute data length will not be greater than
.Dv NAME_MAX
+ 1 characters, which is
.Dv NAME_MAX
* 3 + 1 bytes (as one UTF-8-encoded character may
take up to three bytes).
.Pp
.
.It ATTR_CMN_DEVID
A
.Vt dev_t
containing the device number of the device on which this
file system object's volume is mounted.
Equivalent to the
.Fa st_dev
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_CMN_FSID
An
.Vt fsid_t
structure containing the file system identifier for the volume on which
the file system object resides.
Equivalent to the
.Fa f_fsid
field of the
.Vt statfs
structure returned by
.Xr statfs 2 .
.
.It ATTR_CMN_OBJTYPE
An
.Vt fsobj_type_t
that identifies the type of file system object.
The values are taken from
.Vt enum vtype
in
.Aq Pa sys/vnode.h .
.
.It ATTR_CMN_OBJTAG
An
.Vt fsobj_tag_t
that identifies the type of file system containing the object.
The values are taken from
.Vt enum vtagtype
in
.Aq Pa sys/vnode.h .
.
.It ATTR_CMN_OBJID
An
.Vt fsobj_id_t
structure that uniquely identifies the file system object within a mounted 
volume for the duration of it's mount; this identifier is not guaranteed to be 
persistent for the volume and may change every time the volume is mounted.
.Pp
On HFS+ volumes, the ATTR_CMN_OBJID of a file system object is distinct from 
the ATTR_CMN_OBJID of any hard link to that file system object. Although the 
ATTR_CMN_OBJID of a file system object may appear similar (in whole
or in part) to it's ATTR_CMN_FILEID (see description of ATTR_CMN_FILEID below), 
\fBno relation between the two attributes should ever be implied.\fP
.
.It ATTR_CMN_OBJPERMANENTID
An
.Vt fsobj_id_t
structure that uniquely and persistently identifies the file system object
within its volume; persistence implies that this attribute is unaffected by
mount/unmount operations on the volume.
.Pp
Some file systems can not return this attribute when the volume is mounted
read-only and will fail the request with error
.Dv EROFS.
.br
(e.g. original HFS modifies on disk structures to generate persistent
identifiers, and hence cannot do so if the volume is mounted read only.)
.
.It ATTR_CMN_PAROBJID
An
.Vt fsobj_id_t
structure that uniquely identifies the parent directory of the file system
object within a mounted volume, for the duration of the volume mount; this 
identifier is not guaranteed to be persistent for the volume and may change 
every time the volume is mounted.
.Pp
.
If a file system object is hard linked from multiple directories, the parent
directory returned for this attribute is non deterministic; it can be any one
of the parent directories of this object.
.
For some volume formats the computing cost for this attribute is significant; 
developers are advised to request this attribute sparingly.
.
.It ATTR_CMN_SCRIPT
(read/write) A
.Vt text_encoding_t
containing a text encoding hint for
the file system object's name.
It is included to facilitate the lossless round trip conversion of names between
Unicode and traditional Mac OS script encodings.
File systems that do not have an appropriate text encoding value should return
kTextEncodingMacUnicode.
.
.It ATTR_CMN_CRTIME
(read/write) A
.Vt timespec
structure containing the time that the file system object
was created.
.
.It ATTR_CMN_MODTIME
(read/write) A
.Vt timespec
structure containing the time that the file system object
was last modified.
Equivalent to the
.Fa st_mtimespec
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_CMN_CHGTIME
(read/write) A
.Vt timespec
structure containing the time that the file system object's
attributes were last modified.
Equivalent to the
.Fa st_ctimespec
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_CMN_ACCTIME
(read/write) A
.Vt timespec
structure containing the time that the file system object
was last accessed.
Equivalent to the
.Fa st_atimespec
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_CMN_BKUPTIME
(read/write) A
.Vt timespec
structure containing the time that the file system object was
last backed up.
This value is for use by backup utilities.
The file system stores but does not interpret the value.
.
.It ATTR_CMN_FNDRINFO
(read/write) 32 bytes of data for use by the Finder.
Equivalent to the concatenation of a
.Vt FileInfo
structure and an
.Vt ExtendedFileInfo
structure
(or, for directories, a
.Vt FolderInfo
structure and an
.Vt ExtendedFolderInfo
structure).
.Pp
This attribute is not byte swapped by the file system.
The value of multibyte fields on disk is always big endian.
When running on a little endian system (such as Darwin on x86),
you must byte swap any multibyte fields.
.
.It ATTR_CMN_OWNERID
(read/write) A
.Vt uid_t
containing the owner of the file system object.
Equivalent to the
.Fa st_uid
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_CMN_GRPID
(read/write) A
.Vt gid_t
containing the group of the file system object.
Equivalent to the
.Fa st_gid
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_CMN_ACCESSMASK
(read/write) A
.Vt u_int32_t
containing the access permissions of the file system object.
Equivalent to the
.Fa st_mode
field of the
.Vt stat
structure returned by
.Xr stat 2 .
Only the permission bits of
.Fa st_mode
are valid; other bits should be ignored,
e.g., by masking with
.Dv ~S_IFMT .
.
.It ATTR_CMN_FLAGS
(read/write) A
.Vt u_int32_t
containing file flags.
Equivalent to the
.Fa st_flags
field of the
.Vt stat
structure returned by
.Xr stat 2 .
For more information about these flags, see
.Xr chflags 2 .
.
.It ATTR_CMN_GEN_COUNT
A
.Vt u_int32_t
containing a non zero monotonically increasing generation
count for this file system object. The generation count tracks
the number of times the data in a file system object has been 
modified. No meaning can be implied from its value. The
value of the generation count for a file system object can 
be compared against a previous value of the same file system
object for equality; i.e. an unchanged generation 
count indicates identical data. Requesting this attribute requires the
FSOPT_ATTR_CMN_EXTENDED option flag.
.Pp
.
A generation count value of 0 is invalid and cannot be used to 
determine data change.
.Pp
The generation count is invalid while a file is mmap'ed. An invalid 
generation count value of 0 will be returned for mmap'ed files.
.
.It ATTR_CMN_DOCUMENT_ID
A
.Vt u_int32_t
containing the document id. The document id is a value assigned
by the kernel to a document (which can be a file or directory)
and is used to track the data regardless of where it gets moved. 
The document id survives safe saves; i.e it is sticky to the path it 
was assigned to. Requesting this attribute requires the
FSOPT_ATTR_CMN_EXTENDED option flag.
.Pp
A document id of 0 is invalid.
.
.It ATTR_CMN_USERACCESS
A
.Vt u_int32_t
containing the effective permissions of the current user
(the calling process's effective UID) for this file system object.
You can test for read, write, and execute permission using
.Dv R_OK ,
.Dv W_OK ,
and
.Dv X_OK ,
respectively.
See
.Xr access 2
for more details.
.
.It ATTR_CMN_EXTENDED_SECURITY
A variable-length object (thus an
.Vt attrreference
structure) containing a
.Vt kauth_filesec
structure, of which only the ACL entry is used.
.
.It ATTR_CMN_UUID
A
.Vt guid_t
of the owner of the file system object.  Analoguous to
.Dv ATTR_CMN_OWNERID .
.
.It ATTR_CMN_GRPUUID
A
.Vt guid_t
of the group to which the file system object belongs.
Analoguous to
.Dv ATTR_CMN_GRPID .
.
.It ATTR_CMN_FILEID
A
.Vt u_int64_t
that uniquely identifies the file system object within it's mounted volume. 
Equivalent to 
.Fa st_ino
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_CMN_PARENTID
A
.Vt u_int64_t
that identifies the parent directory of the file system object.
.
.It ATTR_CMN_FULLPATH
An
.Vt attrreference
structure containing the full path (resolving all symlinks) to 
the file system object as
a UTF-8 encoded, null terminated C string.
The attribute data length will not be greater than
.Dv PATH_MAX. 
Inconsistent behavior may be observed when this attribute is requested on
hard-linked items, particularly when the file system does not support ATTR_CMN_PARENTID
natively. Callers should be aware of this when requesting the full path of a hard-linked item.
.
.It ATTR_CMN_ADDEDTIME
A
.Vt timespec
that contains the time that the file system object was created or renamed into
its containing directory.  Note that inconsistent behavior may be observed
when this attribute is requested on hard-linked items. 
.
.It ATTR_CMN_DATA_PROTECT_FLAGS
A
.Vt u_int32_t
that contains the file or directory's data protection class.
.Pp
.
.El
.
.Sh VOLUME ATTRIBUTES
.
Volume attributes relate to volumes (that is, mounted file systems).
The following volume attributes are defined.
.
.Bl -tag -width ATTR_VOL_ALLOCATIONCLUMP
.
.It ATTR_VOL_INFO
For reasons that are not at all obvious, you must set
.Dv ATTR_VOL_INFO
in the
.Fa volattr
field if you request any other volume attributes.
This does not result in any attribute data being added to the attribute buffer.
.
.It ATTR_VOL_FSTYPE
A
.Vt u_int32_t
containing the file system type.
Equivalent to the
.Fa f_type
field of the
.Vt statfs
structure returned by
.Xr statfs 2 .
Generally not a useful value.
.
.It ATTR_VOL_SIGNATURE
A
.Vt u_int32_t
containing the volume signature word.
This value is unique within a given file system type and lets you
distinguish between different volume formats handled by the same file system.
.
.It ATTR_VOL_SIZE
An
.Vt off_t
containing the total size of the volume in bytes.
.
.It ATTR_VOL_SPACEFREE
An
.Vt off_t
containing the free space on the volume in bytes.
.
.It ATTR_VOL_SPACEAVAIL
An
.Vt off_t
containing the space, in bytes, on the volume available to non-privileged processes.
This is the free space minus the amount of space reserved by the system to prevent critical
disk exhaustion errors.
Non-privileged programs, like a disk management tool, should use this value to display the
space available to the user.
.Pp
.Dv ATTR_VOL_SPACEAVAIL
is to
.Dv ATTR_VOL_SPACEFREE
as
.Fa f_bavail
is to
.Fa f_bfree
in
.Xr statfs 2 .
.
.It ATTR_VOL_MINALLOCATION
An
.Vt off_t
containing the minimum allocation size on the volume in bytes.
If you create a file containing one byte, it will consume this much space.
.
.It ATTR_VOL_ALLOCATIONCLUMP
An
.Vt off_t
containing the allocation clump size on the volume, in bytes.
As a file is extended, the file system will attempt to allocate
this much space each time in order to reduce fragmentation.
.
.It ATTR_VOL_IOBLOCKSIZE
A
.Vt u_int32_t
containing the optimal block size when reading or writing data.
Equivalent to the
.Fa f_iosize
field of the
.Vt statfs
structure returned by
.Xr statfs 2 .
.
.It ATTR_VOL_OBJCOUNT
A
.Vt u_int32_t
containing the number of file system objects on the volume.
.
.It ATTR_VOL_FILECOUNT
A
.Vt u_int32_t
containing the number of files on the volume.
.
.It ATTR_VOL_DIRCOUNT
A
.Vt u_int32_t
containing the number of directories on the volume.
.
.It ATTR_VOL_MAXOBJCOUNT
A
.Vt u_int32_t
containing the maximum number of file system objects that can be stored on the volume.
.
.It ATTR_VOL_MOUNTPOINT
An
.Vt attrreference
structure containing the path to the volume's mount point as a
UTF-8 encoded, null terminated C string.
The attribute data length will not be greater than
.Dv MAXPATHLEN .
Equivalent to the
.Fa f_mntonname
field of the
.Vt statfs
structure returned by
.Xr statfs 2 .
.
.It ATTR_VOL_NAME
(read/write) An
.Vt attrreference
structure containing the name of the volume as a
UTF-8 encoded, null terminated C string.
The attribute data length will not be greater than
.Dv NAME_MAX +
1.
.Pp
.
This attribute is only read/write if the
.Dv VOL_CAP_INT_VOL_RENAME
bit is set in the volume capabilities (see below).
.Pp
.
.It ATTR_VOL_MOUNTFLAGS
A
.Vt u_int32_t
containing the volume mount flags.
This is a copy of the value passed to the
.Fa flags
parameter of
.Xr mount 2
when the volume was mounted.
Equivalent to the
.Fa f_flags
field of the
.Vt statfs
structure returned by
.Xr statfs 2 .
.
.It ATTR_VOL_MOUNTEDDEVICE
An
.Vt attrreference
structure that returns the same value as the
.Fa f_mntfromname
field of the
.Vt statfs
structure returned by
.Xr statfs 2 .
For local volumes this is the path to the device on which the volume is mounted as a
UTF-8 encoded, null terminated C string.
For network volumes, this is a unique string that identifies the mount.
The attribute data length will not be greater than
.Dv MAXPATHLEN .
.Pp
.
.It ATTR_VOL_ENCODINGSUSED
An
.Vt unsigned long long
containing a bitmap of the text encodings used on this volume.
For more information about this, see the discussion of
.Fa encodingsBitmap
in DTS Technote 1150 "HFS Plus Volume Format".
.
.It ATTR_VOL_CAPABILITIES
A
.Vt vol_capabilities_attr_t
structure describing the optional features supported by this volume.
See below for a discussion of volume capabilities.
.
.It ATTR_VOL_UUID
A
.Vt uuid_t
containing the file system UUID.  Typically this will be a
version 5 UUID.
.
.It ATTR_VOL_ATTRIBUTES
A
.Vt vol_attributes_attr_t
structure describing the attributes supported by this volume.
This structure is discussed below, along with volume capabilities.
.
.El
.
.Sh DIRECTORY ATTRIBUTES
.
The following directory attributes are defined.
.
.Bl -tag -width ATTR_VOL_ALLOCATIONCLUMP
.
.It ATTR_DIR_LINKCOUNT
A
.Vt u_int32_t
containing the number of hard links to the directory;
this does not include the historical "." and ".." entries.
For file systems that do not support hard links to directories,
this value will be 1.
.
.It ATTR_DIR_ENTRYCOUNT
A
.Vt u_int32_t
containing the number of file system objects in the directory, not including
any synthetic items.  The historical "." and ".." entries are also
excluded from this count.
.
.It ATTR_DIR_MOUNTSTATUS
A
.Vt u_int32_t
containing flags describing what's mounted on the directory.
Currently the only flag defined is
.Dv DIR_MNTSTATUS_MNTPOINT,
which indicates that there is a file system mounted on this directory.
.
.El
.
.Pp
Requested directory attributes are not returned for file system objects that
are not directories.
.
.Sh FILE ATTRIBUTES
.
The following file attributes are defined.
.
.Bl -tag -width ATTR_VOL_ALLOCATIONCLUMP
.
.It ATTR_FILE_LINKCOUNT
A
.Vt u_int32_t
containing the number of hard links to this file.
Equivalent to the
.Fa st_nlink
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_FILE_TOTALSIZE
An
.Vt off_t
containing the total number of bytes in all forks of the file (the logical size).
.
.It ATTR_FILE_ALLOCSIZE
An
.Vt off_t
containing a count of the bytes on disk used by all of the file's forks (the physical size).
.
.It ATTR_FILE_IOBLOCKSIZE
A
.Vt u_int32_t
containing the optimal block size when reading or writing this file's data.
.
.It ATTR_FILE_CLUMPSIZE
A
.Vt u_int32_t
containing the allocation clump size for this file, in bytes.
As the file is extended, the file system will attempt to allocate
this much space each time in order to reduce fragmentation.
This value applies to the data fork.
.
.It ATTR_FILE_DEVTYPE
(read/write) A
.Vt u_int32_t
containing the device type for a special device file.
Equivalent to the
.Fa st_rdev
field of the
.Vt stat
structure returned by
.Xr stat 2 .
.
.It ATTR_FILE_FILETYPE
A
.Vt u_int32_t
that whose value is reserved.
Clients should ignore its value.
New volume format implementations should not support this attribute.
.
.It ATTR_FILE_FORKCOUNT
A
.Vt u_int32_t
containing the number of forks in the file.
No built-in file systems on Mac OS X currently support forks other
than the data and resource fork.
.
.It ATTR_FILE_FORKLIST
An
.Vt attrreference
structure containing a list of named forks of the file.
No built-in file systems on Mac OS X currently support forks
other than the data and resource fork.
Because of this, the structure of this attribute's value is not yet defined.
.
.It ATTR_FILE_DATALENGTH
An
.Vt off_t
containing the length of the data fork in bytes (the logical size).
.
.It ATTR_FILE_DATAALLOCSIZE
An
.Vt off_t
containing a count of the bytes on disk used by the data fork (the physical size).
.
.It ATTR_FILE_DATAEXTENTS
An
.Vt extentrecord
array for the data fork.
The array contains eight
.Vt diskextent
structures which represent the first
eight extents of the fork.
.Pp
This attributes exists for compatibility reasons.
New clients should not use this attribute.
Rather, they should use the
.Dv F_LOG2PHYS
command in
.Xr fcntl 2 .
.Pp
.
In current implementations the value may not be entirely accurate for
a variety of reasons.
.
.It ATTR_FILE_RSRCLENGTH
An
.Vt off_t
containing the length of the resource fork in bytes (the logical size).
.
.It ATTR_FILE_RSRCALLOCSIZE
An
.Vt off_t
containing a count of the bytes on disk used by the resource fork (the physical size).
.
.It ATTR_FILE_RSRCEXTENTS
An
.Vt extentrecord
array for the resource fork.
The array contains eight
.Vt diskextent
structures which represent the first
eight extents of the fork.
.Pp
See also
.Dv ATTR_FILE_DATAEXTENTS .
.
.El
.
.Pp
File attributes are used for any file system object that is not a directory,
not just ordinary files.
Requested file attributes are not returned for file system objects that
are directories.
.
.Sh FORK ATTRIBUTES
.
Fork attributes relate to the actual data in the file,
which can be held in multiple named contiguous ranges, or forks.
The following fork attributes are defined.
.
.Bl -tag -width ATTR_VOL_ALLOCATIONCLUMP
.
.It ATTR_FORK_TOTALSIZE
An
.Vt off_t
containing the length of the fork in bytes (the logical size).
.
.It ATTR_FORK_ALLOCSIZE
An
.Vt off_t
containing a count of the bytes on disk used by the fork (the physical size).
.
.El
.Pp
.
Fork attributes are not properly implemented by any current Mac OS X
volume format implementation.
We strongly recommend that client programs do not request fork attributes.
If you are implementing a volume format, you should not support these attributes.
.
.Sh VOLUME CAPABILITIES
.
.\" vol_capabilities_attr_t
.
Not all volumes support all features.
The
.Dv ATTR_VOL_CAPABILITIES
attribute returns a
.Vt vol_capabilities_attr_t
structure (shown below) that indicates which features are supported by the volume.
.
.Bd -literal
typedef u_int32_t vol_capabilities_set_t[4];
.Pp
.
#define VOL_CAPABILITIES_FORMAT     0
#define VOL_CAPABILITIES_INTERFACES 1
#define VOL_CAPABILITIES_RESERVED1  2
#define VOL_CAPABILITIES_RESERVED2  3
.Pp
.
typedef struct vol_capabilities_attr {
    vol_capabilities_set_t capabilities;
    vol_capabilities_set_t valid;
} vol_capabilities_attr_t;
.Ed
.Pp
.
The structure contains two fields,
.Fa capabilities
and
.Fa valid .
Each consists of an array of four elements.
The arrays are indexed by the following values.
.
.Bl -tag -width VOL_CAP_FMT_PERSISTENTOBJECTIDS
.
.It VOL_CAPABILITIES_FORMAT
This element contains information about the volume format.
See
.Dv VOL_CAP_FMT_PERSISTENTOBJECTIDS
and so on, below.
.
.It VOL_CAPABILITIES_INTERFACES
This element contains information about which optional functions are
supported by the volume format implementation.
See
.Dv VOL_CAP_INT_SEARCHFS
and so on, below.
.
.It VOL_CAPABILITIES_RESERVED1
Reserved.
A file system implementation should set this element to zero.
A client program should ignore this element.
.
.It VOL_CAPABILITIES_RESERVED2
Reserved.
A file system implementation should set this element to zero.
A client program should ignore this element.
.
.El
.Pp
.
The
.Fa valid
field contains bit sets that indicate which flags are known to the volume format
implementation.
Each bit indicates whether the contents of the corresponding bit in the
.Fa capabilities
field is valid.
.Pp
.
The
.Fa capabilities
field contains bit sets that indicate whether a particular feature is implemented
by this volume format.
.Pp
.
The following bits are defined in the first element (indexed by
.Dv VOL_CAPABILITIES_FORMAT )
of the
.Fa capabilities
and
.Fa valid
fields of the
.Vt vol_capabilities_attr_t
structure.
.
.Bl -tag -width VOL_CAP_FMT_PERSISTENTOBJECTIDS
.
.It VOL_CAP_FMT_PERSISTENTOBJECTIDS
If this bit is set the volume format supports persistent object identifiers
and can look up file system objects by their IDs.
See
.Dv ATTR_CMN_OBJPERMANENTID
for details about how to obtain these identifiers.
.
.It VOL_CAP_FMT_SYMBOLICLINKS
If this bit is set the volume format supports symbolic links.
.
.It VOL_CAP_FMT_HARDLINKS
If this bit is set the volume format supports hard links.
.
.It VOL_CAP_FMT_JOURNAL
If this bit is set the volume format supports a journal used to
speed recovery in case of unplanned restart (such as a power outage
or crash).
This does not necessarily mean the volume is actively using a journal.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_JOURNAL_ACTIVE
If this bit is set the volume is currently using a journal for
speedy recovery after an unplanned restart.
This bit can be set only if
.Dv VOL_CAP_FMT_JOURNAL
is also set.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_NO_ROOT_TIMES
If this bit is set the volume format does not store reliable times for
the root directory, so you should not depend on them to detect changes,
identify volumes across unmount/mount, and so on.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_SPARSE_FILES
If this bit is set the volume format supports sparse files,
that is, files which can have 'holes' that have never been written
to, and thus do not consume space on disk.
A sparse file may have an allocated size on disk that is less than its logical length (that is,
.Dv ATTR_FILE_ALLOCSIZE
<
.Dv ATTR_FILE_TOTALSIZE ).
.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_ZERO_RUNS
For security reasons, parts of a file (runs) that have never been
written to must appear to contain zeroes.
When this bit is set, the volume keeps track of allocated but unwritten
runs of a file so that it can substitute zeroes without actually
writing zeroes to the media.
This provides performance similar to sparse files, but not the space savings.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_CASE_SENSITIVE
If this bit is set the volume format treats upper and lower case
characters in file and directory names as different.
Otherwise an upper case character is equivalent to a lower case character,
and you can't have two names that differ solely in the case of
the characters.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_CASE_PRESERVING
If this bit is set the volume format preserves the case of
file and directory names.
Otherwise the volume may change the case of some characters
(typically making them all upper or all lower case).
A volume that sets
.Dv VOL_CAP_FMT_CASE_SENSITIVE
must also set
.Dv VOL_CAP_FMT_CASE_PRESERVING .
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_FAST_STATFS
This bit is used as a hint to upper layers to
indicate that
.Xr statfs 2
is fast enough that its results need not be cached by the caller.
A volume format implementation that caches the
.Xr statfs 2
information in memory should set this bit.
An implementation that must always read from disk or always perform a network
transaction to satisfy
.Xr statfs 2
should not set this bit.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_FMT_2TB_FILESIZE
If this bit is set the volume format supports file sizes larger
than 4GB, and potentially up to 2TB; it does not indicate
whether the file system supports files larger than that.
.Pp
Introduced with Darwin 8.0 (Mac OS X version 10.4).
.
.It VOL_CAP_FMT_OPENDENYMODES
If this bit is set, the volume format supports open deny modes
(e.g., "open for read write, deny write").
.
.It VOL_CAP_FMT_HIDDEN_FILES
If this bit is set, the volume format supports the
.Dv UF_HIDDEN
file flag, and the
.Dv UF_HIDDEN
flag is mapped to that volume's native "hidden" or "invisible"
bit (e.g., the invisible bit from the Finder Info extended attribute).
.
.It VOL_CAP_FMT_PATH_FROM_ID
If this bit is set, the volume format supports the ability to derive a pathname
to the root of the file system given only the ID of an object.  This also
implies that object IDs on this file system are persistent and not recycled.
Most file systems will not support this capability.
.
.It VOL_CAP_FMT_NO_VOLUME_SIZES
If this bit is set the volume format does not support 
determining values for total data blocks, available blocks, or free blocks, as in 
.Fa f_blocks,
.Fa f_bavail,
and 
.Fa f_bfree
in the 
.Fa struct statfs
returned by
.Xr statfs 2 . 
Historically, those values were set to 0xFFFFFFFF for volumes 
that did not support them.
.Pp
Introduced with Darwin 10.0 (Mac OS X version 10.6).
.
.It VOL_CAP_FMT_64BIT_OBJECT_IDS
If this bit is set, the volume format uses object IDs that are 64-bit. 
This means that ATTR_CMN_FILEID and ATTR_CMN_PARENTID are the only
legitimate attributes for obtaining object IDs from this volume and the
32-bit fid_objno fields of the fsobj_id_t returned by ATTR_CMN_OBJID,
ATTR_CMN_OBJPERMANENTID, and ATTR_CMN_PAROBJID are undefined.
.
.El
.Pp
.
The following bits are defined in the second element (indexed by
.Dv VOL_CAPABILITIES_INTERFACES )
of the
.Fa capabilities
and
.Fa valid
fields of the
.Vt vol_capabilities_attr_t
structure.
.
.Bl -tag -width VOL_CAP_FMT_PERSISTENTOBJECTIDS
.
.It VOL_CAP_INT_SEARCHFS
If this bit is set the volume format implementation supports
.Xr searchfs 2 .
.
.It VOL_CAP_INT_ATTRLIST
If this bit is set the volume format implementation supports
.Fn getattrlist
and
.Xr setattrlist 2 .
.
.It VOL_CAP_INT_NFSEXPORT
If this bit is set the volume format implementation allows this volume to be exported via NFS.
.
.It VOL_CAP_INT_READDIRATTR
If this bit is set the volume format implementation supports
.Xr getdirentriesattr 2 .
.
.It VOL_CAP_INT_EXCHANGEDATA
If this bit is set the volume format implementation supports
.Xr exchangedata 2 .
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_INT_COPYFILE
If this bit is set the volume format implementation supports the (private and undocumented)
copyfile() function.
(This is not the
.Xr copyfile 3
function.)
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_INT_ALLOCATE
If this bit is set the volume format implementation supports the
.Dv F_PREALLOCATE
selector of
.Xr fcntl 2 .
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_INT_VOL_RENAME
If this bit is set the volume format implementation allows you to
modify the volume name using
.Xr setattrlist 2 .
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_INT_ADVLOCK
If this bit is set the volume format implementation supports
advisory locking, that is, the
.Dv F_GETLK ,
.Dv F_SETLK ,
and
.Dv F_SETLKW
selectors to
.Xr fcntl 2 .
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_INT_FLOCK
If this bit is set the volume format implementation supports
whole file locks.
This includes
.Xr flock 2
and the
.Dv O_EXLOCK
and
.Dv O_SHLOCK
flags to
.Xr open 2 .
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It VOL_CAP_INT_EXTENDED_SECURITY
If this bit is set the volume format implementation supports
extended security controls (ACLs).
.Pp
Introduced with Darwin 8.0 (Mac OS X version 10.4).
.
.It VOL_CAP_INT_USERACCESS
If this bit is set the volume format implementation supports the
ATTR_CMN_USERACCESS attribute.
.Pp
Introduced with Darwin 8.0 (Mac OS X version 10.4).
.
.It VOL_CAP_INT_MANLOCK
If this bit is set, the volume format implementation supports
AFP-style mandatory byte range locks via
.Xr ioctl 2 .
.
.It VOL_CAP_INT_EXTENDED_ATTR
If this bit is set, the volume format implementation supports
native extended attributes (see
.Xr setxattr 2 ).
.
.It VOL_CAP_INT_NAMEDSTREAMS
If this bit is set, the volume format implementation supports
native named streams.
.
.El
.Pp
.
.\" vol_attributes_attr_t
.
A volume can also report which attributes it supports.
This information is returned by the
.Dv ATTR_VOL_ATTRIBUTES
attribute, which returns a
.Vt vol_attributes_attr_t
structure (shown below).
.
.Bd -literal
typedef struct attribute_set {
    attrgroup_t commonattr; /* common attribute group */
    attrgroup_t volattr;    /* volume attribute group */
    attrgroup_t dirattr;    /* directory attribute group */
    attrgroup_t fileattr;   /* file attribute group */
    attrgroup_t forkattr;   /* fork attribute group */
} attribute_set_t;
.Pp
.
typedef struct vol_attributes_attr {
    attribute_set_t validattr;
    attribute_set_t nativeattr;
} vol_attributes_attr_t;
.Ed
.Pp
.
The
.Fa validattr
field consists of a number of bit sets that indicate whether an attribute is
supported by the volume format implementation.
The
.Fa nativeattr
is similar except that the bit sets indicate whether an attribute is supported
natively by the volume format.
An attribute is supported natively if the volume format implementation does not have to do
any complex conversions to access the attribute.
For example, a volume format might support persistent object identifiers, but
doing so requires a complex table lookup that is not part of the core volume
format.
In that case, the
.Dv ATTR_VOL_ATTRIBUTES
attribute would return
.Dv ATTR_CMN_OBJPERMANENTID
set in the
.Fa validattr
field of the
.Vt vol_attributes_attr_t ,
but not in the
.Fa nativeattr
field.
.
.Sh RETURN VALUES
Upon successful completion a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.
.Sh COMPATIBILITY
Not all volumes support
.Fn getattrlist .
The best way to test whether a volume supports this function is to
simply call it and check the error result.
.Fn getattrlist
will return
.Dv ENOTSUP
if it is not supported on a particular volume.
.Pp
.
The
.Fn getattrlist
function has been undocumented for more than two years.
In that time a number of volume format implementations have been created without
a proper specification for the behaviour of this routine.
You may encounter volume format implementations with slightly different
behaviour than what is described here.
Your program is expected to be tolerant of this variant behaviour.
.Pp
.
If you're implementing a volume format that supports
.Fn getattrlist ,
you should be careful to support the behaviour specified by this document.
.
.Sh ERRORS
.Fn getattrlist
and
.Fn fgetattrlist
will fail if:
.Bl -tag -width Er
.
.It Bq Er ENOTSUP
The volume does not support the query.
.
.It Bq Er ENOTDIR
A component of the path prefix for
.Fn getattrlist
is not a directory.
.
.It Bq Er ENAMETOOLONG
A component of a path name for
.Fn getattrlist
exceeded
.Dv NAME_MAX
characters, or an entire path name exceeded
.Dv PATH_MAX
characters.
.
.It Bq Er ENOENT
The file system object for
.Fn getattrlist
does not exist.
.
.It Bq Er EBADF
The file descriptor argument for
.Fn fgetattrlist
is not a valid file descriptor.
.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix for
.Fn getattrlist .
.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname
for
.Fn getattrlist .
.
.It Bq Er EFAULT
.Fa path ,
.Fa attrList
or
.Em attrBuf
points to an invalid address.
.
.It Bq Er EINVAL
The
.Fa bitmapcount
field of
.Fa attrList
is not
.Dv ATTR_BIT_MAP_COUNT .
.
.It Bq Er EINVAL
You requested an invalid attribute.
.
.It Bq Er EINVAL
You requested an attribute that is not supported for this file system object.
.
.It Bq Er EINVAL
You requested volume attributes and directory or file attributes.
.
.It Bq Er EINVAL
You requested volume attributes but
.Fa path
does not reference the root of the volume.
.
.It Bq Er EROFS
The volume is read-only but must be modified in order to return this attribute.
.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
In addition to the errors returned by the
.Fn getattrlist ,
the
.Fn getattrlistat
function may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Pp
.
.Sh CAVEATS
.
If you request any volume attributes, you must set
.Dv ATTR_VOL_INFO
in the
.Fa volattr
field, even though it generates no result in the attribute buffer.
.Pp
.
The order that attributes are stored in the attribute buffer almost
invariably matches the order of attribute mask bit values.
For example,
.Dv ATTR_CMN_NAME
(0x00000001) comes before
.Dv ATTR_CMN_DEVID
(0x00000002) because its value is smaller.
When ordering attributes, you should always use the order in which they
are described above.
.Pp
.
The
.Vt timespec
structure is 64-bits (two 32-bit elements) in 32-bit code, and
128-bits (two 64-bit elements) in 64-bit code; however, it is aligned
on a 4-byte (32-bit) boundary, even in 64-bit code.
.Pp
If you use a structure
for the attribute data, it must be correctly packed and aligned (see
examples).
.Pp
.
Inconsistent behavior may be observed when the ATTR_CMN_FULLPATH attribute is requested on
hard-linked items, particularly when the file system does not support ATTR_CMN_PARENTID
natively. Callers should be aware of this when requesting the full path of a hard-linked item, especially
if the full path crosses mount points.
.Pp
.
For more caveats, see also the compatibility notes above.
.
.Sh EXAMPLES
.
The following code prints the file type and creator of a file,
assuming that the volume supports the required attributes.
.
.Bd -literal
#include <assert.h>
#include <stdio.h>
#include <string.h>
#include <sys/attr.h>
#include <sys/errno.h>
#include <unistd.h>
#include <sys/vnode.h>
.Pp
.
typedef struct attrlist attrlist_t;
.Pp
.
struct FInfoAttrBuf {
    u_int32_t       length;
    fsobj_type_t    objType;
    char            finderInfo[32];
}  __attribute__((aligned(4), packed));
typedef struct FInfoAttrBuf FInfoAttrBuf;
.Pp
.
static int FInfoDemo(const char *path)
{
    int             err;
    attrlist_t      attrList;
    FInfoAttrBuf    attrBuf;
.Pp
.
    memset(&attrList, 0, sizeof(attrList));
    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;
    attrList.commonattr  = ATTR_CMN_OBJTYPE | ATTR_CMN_FNDRINFO;
.Pp

    err = getattrlist(path, &attrList, &attrBuf, sizeof(attrBuf), 0);
    if (err != 0) {
        err = errno;
    }
.Pp

    if (err == 0) {
        assert(attrBuf.length == sizeof(attrBuf));
.Pp

        printf("Finder information for %s:\en", path);
        switch (attrBuf.objType) {
            case VREG:
                printf("file type    = '%.4s'\en", &attrBuf.finderInfo[0]);
                printf("file creator = '%.4s'\en", &attrBuf.finderInfo[4]);
                break;
            case VDIR:
                printf("directory\en");
                break;
            default:
                printf("other object type, %d\en", attrBuf.objType);
                break;
        }
    }
.Pp
.
    return err;
}
.Ed
.Pp
.
The following code is an alternative implementation that uses nested structures
to group the related attributes.
.
.Bd -literal
#include <assert.h>
#include <stdio.h>
#include <stddef.h>
#include <string.h>
#include <sys/attr.h>
#include <sys/errno.h>
#include <unistd.h>
#include <sys/vnode.h>
.Pp
.
typedef struct attrlist attrlist_t;
.Pp
.
struct FInfo2CommonAttrBuf {
    fsobj_type_t    objType;
    char            finderInfo[32];
} __attribute__((aligned(4), packed));
typedef struct FInfo2CommonAttrBuf FInfo2CommonAttrBuf;
.Pp
.
struct FInfo2AttrBuf {
    u_int32_t           length;
    FInfo2CommonAttrBuf common;
} __attribute__((aligned(4), packed));;
typedef struct FInfo2AttrBuf FInfo2AttrBuf;
.Pp
.
static int FInfo2Demo(const char *path)
{
    int             err;
    attrlist_t      attrList;
    FInfo2AttrBuf   attrBuf;
.Pp
.
    memset(&attrList, 0, sizeof(attrList));
    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;
    attrList.commonattr  = ATTR_CMN_OBJTYPE | ATTR_CMN_FNDRINFO;
.Pp
.
    err = getattrlist(path, &attrList, &attrBuf, sizeof(attrBuf), 0);
    if (err != 0) {
        err = errno;
    }
.Pp
.
    if (err == 0) {
        assert(attrBuf.length == sizeof(attrBuf));
.Pp
.
        printf("Finder information for %s:\en", path);
        switch (attrBuf.common.objType) {
            case VREG:
                printf(
                    "file type    = '%.4s'\en",
                    &attrBuf.common.finderInfo[0]
                );
                printf(
                    "file creator = '%.4s'\en",
                    &attrBuf.common.finderInfo[4]
                );
                break;
            case VDIR:
                printf("directory\en");
                break;
            default:
                printf(
                    "other object type, %d\en",
                    attrBuf.common.objType
                );
                break;
        }
    }
.Pp
.
    return err;
}
.Ed
.Pp
.
The following example shows how to deal with variable length attributes.
It assumes that the volume specified by
.Fa path
supports the necessary attributes.
.
.Bd -literal
#include <assert.h>
#include <stdio.h>
#include <stddef.h>
#include <string.h>
#include <sys/attr.h>
#include <sys/errno.h>
#include <unistd.h>
#include <sys/vnode.h>
.Pp
.
typedef struct attrlist attrlist_t;
.Pp
.
struct VolAttrBuf {
    u_int32_t       length;
    u_int32_t       fileCount;
    u_int32_t       dirCount;
    attrreference_t mountPointRef;
    attrreference_t volNameRef;
    char            mountPointSpace[MAXPATHLEN];
    char            volNameSpace[MAXPATHLEN];
} __attribute__((aligned(4), packed));
typedef struct VolAttrBuf VolAttrBuf;
.Pp
.
static int VolDemo(const char *path)
{
    int             err;
    attrlist_t      attrList;
    VolAttrBuf      attrBuf;
.Pp
.
    memset(&attrList, 0, sizeof(attrList));
    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;
    attrList.volattr     =   ATTR_VOL_INFO
                           | ATTR_VOL_FILECOUNT
                           | ATTR_VOL_DIRCOUNT
                           | ATTR_VOL_MOUNTPOINT
                           | ATTR_VOL_NAME;
.Pp

    err = getattrlist(path, &attrList, &attrBuf, sizeof(attrBuf), 0);
    if (err != 0) {
        err = errno;
    }
.Pp

    if (err == 0) {
        assert(attrBuf.length >  offsetof(VolAttrBuf, mountPointSpace));
        assert(attrBuf.length <= sizeof(attrBuf));
.Pp

        printf("Volume information for %s:\en", path);
        printf("ATTR_VOL_FILECOUNT:  %u\en", attrBuf.fileCount);
        printf("ATTR_VOL_DIRCOUNT:   %u\en", attrBuf.dirCount);
        printf(
            "ATTR_VOL_MOUNTPOINT: %.*s\en",
            (int) attrBuf.mountPointRef.attr_length,
            ( ((char *) &attrBuf.mountPointRef)
              + attrBuf.mountPointRef.attr_dataoffset )
        );
        printf(
            "ATTR_VOL_NAME:       %.*s\en",
            (int) attrBuf.volNameRef.attr_length,
            ( ((char *) &attrBuf.volNameRef)
              + attrBuf.volNameRef.attr_dataoffset )
        );
    }
.Pp
.
    return err;
}
.Ed
.Pp
The following sample demonstrates the need to use packing and alignment
controls; without the attribute, in 64-bit code, the fields of the structure are not
placed at the locations that the kernel expects.
.
.Bd -literal
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <err.h>
#include <time.h>
#include <sys/attr.h>
.Pp
/* The alignment and packing attribute is necessary in 64-bit code */
struct AttrListTimes {
	u_int32_t       length;
	struct timespec st_crtime;
	struct timespec st_modtime;
} __attribute__((aligned(4), packed));
.Pp
main(int argc, char **argv)
{
	int             rv;
	int             i;
.Pp
	for (i = 1; i < argc; i++) {
		struct attrlist attrList;
		struct AttrListTimes myStat = {0};
		char           *path = argv[i];
.Pp
		memset(&attrList, 0, sizeof(attrList));
		attrList.bitmapcount = ATTR_BIT_MAP_COUNT;
		attrList.commonattr = ATTR_CMN_CRTIME |
			ATTR_CMN_MODTIME;
.Pp
		rv = getattrlist(path, &attrList, &myStat, sizeof(myStat), 0);
.Pp
		if (rv == -1) {
			warn("getattrlist(%s)", path);
			continue;
		}
		printf("%s:  Modification time = %s", argv[i], ctime(&myStat.st_modtime.tv_sec));
	}
	return 0;
}
.Ed
.Pp
.
.Sh SEE ALSO
.
.Xr access 2 ,
.Xr chflags 2 ,
.Xr exchangedata 2 ,
.Xr fcntl 2 ,
.Xr getattrlistbulk 2 ,
.Xr mount 2 ,
.Xr searchfs 2 ,
.Xr setattrlist 2 ,
.Xr stat 2 ,
.Xr statfs 2
.
.Sh HISTORY
A
.Fn getattrlist
function call appeared in Darwin 1.3.1 (Mac OS X version 10.0).
The
.Fn getattrlistat
function call appeared in OS X 10.10 .
                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getattrlistat.2                              0100644 0001750 0001750 00000000027 12567450734 023641  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getattrlist.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getattrlistbulk.2                            0100644 0001750 0001750 00000027000 12567450734 024172  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 2013 Apple Computer, Inc. All rights reserved.
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\"     @(#)getattrlistbulk.2
.
.Dd November 15, 2013
.Dt GETATTRLISTBULK 2
.Os Darwin
.Sh NAME
.Nm getattrlistbulk
.Nd get file system attributes for multiple directory entries
.Sh SYNOPSIS
.Fd #include <sys/attr.h>
.Fd #include <unistd.h>
.Pp
.Ft int
.Fn getattrlistbulk "int dirfd" "struct attrlist * attrList" "void * attrBuf" "size_t attrBufSize" "uint64_t options"
.
.
.Sh DESCRIPTION
The
.Fn getattrlistbulk
function iterates over the items in a directory and returns information about
each directory entry like
.Xr getattrlist 2 .
Note: when
.Fn getattrlistbulk
returns information about a symbolic link, the information returned is about the link itself, not the target of the link.
.Pp
The function reads directory entries from the directory referenced by the file
descriptor 
.Fa dirfd .
The 
.Fa attrList 
parameter determines what attributes are returned for each entry.
Attributes of those directory entries are placed into the buffer specified by 
.Fa attrBuf
and
.Fa attrBufSize .
The 
.Fa options 
parameter allows you to modify the behaviour of the call.
.Pp
.
.Pp
.
.\" dirfd parameter
.
The
.Fa dirfd
parameter must be a file descriptor that references a directory that you have opened for reading. 
.Pp
.
.\" attrList parameter
.
The
.Fa attrList
parameter is a pointer to an 
.Vt attrlist 
structure. 
All fields of this structure must be filled before calling the function. 
See the discussion of the  
.Xr getattrlist 2 
function for a detailed description of this structure. 
To get an attribute, the corresponding bit in the appropriate 
.Vt attrgroup_t 
field of the 
.Vt attrlist 
structure must be set. 
Volume attributes  cannot be requested but all other supported getattrlist attributes can be used. For this function,
.Dv ATTR_CMN_NAME
and
.Dv ATRR_CMN_RETURNED_ATTRS
are required and the absence of these attributes in the attrList parameter results in an error.
.Pp
.
.\" attrBuf and attrBufSize parameters
.
The
.Fa attrBuf
and 
.Fa attrBufSize
parameters specify a buffer into which the function places attribute values. 
The attributes for any given directory entry are grouped together and 
packed in exactly the same way as they are returned from 
.Xr getattrlist 2
and are subject to exactly the same alignment specifications
and restrictions. These groups are then placed into the buffer, one after another. 
.Xr getattrlist 2 should be consulted on details of the attributes that can be 
requested for and returned. The name of the entry itself is provided by the 
.Dv ATTR_CMN_NAME
attribute.  Each group starts with a leading 
.Vt uint32_t
, which will always be 8-byte aligned that contains the overall length of the group. 
You can step from one group to the next by simply adding this length to your pointer.
The sample code (below) shows how to do this.
The initial contents of this buffer are ignored.
.Pp
.
.\" options parameter
.
The
.Fa options
parameter is a bit set that controls the behaviour of
.Fn getattrlistbulk .
The following option bits are defined.
.
.Bl -tag -width FSOPT_PACK_INVAL_ATTRS
.
.It FSOPT_PACK_INVAL_ATTRS
If this is bit is set, then all requested  attributes,
even ones that are not supported by the object or file
file system, will be returned the attrBuf. The attributes
actually returned can be determined by looking at the
attribute_set_t structure returned for the 
.Dv ATTR_CMN_RETURNED_ATTRS
attribute. Default values will be returned for invalid
attributes and should be ignored.
.Pp
Please see the discussion of this flag in
.Xr getattrlist 2
.
.El
.Pp
If
.Dv ATTR_CMN_ERROR
has been requested and an error specific to a directory entry occurs,
an error will be reported. The
.Dv ATTR_CMN_ERROR
attribute is a uint32_t which, if non-zero, specifies the error code
that was encountered during the processing of that directory entry. The
.Dv ATTR_CMN_ERROR
attribute will be after
.Dv ATTR_CMN_RETURNED_ATTRS
attribute in the returned buffer.
.Pp
It is typical to ask for a combination of common, file, and directory 
attributes and then use the value of the 
.Dv ATTR_CMN_OBJTYPE 
attribute to parse the resulting attribute buffer.
.Pp
A directory which is a mount point for a file system, will have a value of "DIR_MNTSTATUS_MNTPOINT" set for it's the
ATTR_DIR_MOUNTSTATUS attribute entry. However the attributes for the mount point will be those from the (underlying) file system. The only way to get the attributes of mounted root directory is to call getattrlist(2) on the mount point.
.
.Sh RETURN VALUES
Upon successful completion the numbers of entries successfully read
is returned. A value of 0 indicates there are no more entries. Once 0 is returned,
no further entries are returned even if new entries are added to the directory.
Directory iteration should be restarted either by repostioning the offset to 0 by
.Fn lseek
or by closing the file descriptor and opening the directory again. On error,
a value of -1 is returned and
.Va errno
is set to indicate the error.
.Pp
When iterating all entries in a directory, 
.Fn getattrlistbulk
is called repeatedly until a 0 is returned. In such a case if 
.Fn readdir 
and 
.Fn getattrlistbulk 
calls on the same fd are mixed, the behavior is undefined.

.Pp
.Sh ERRORS
.Fn getattrlistbulk
will fail if:
.Bl -tag -width Er
.
.It Bq Er EBADF
.Fa dirfd 
is not a valid file descriptor for a directory open for reading.
.
.It Bq Er ENOTDIR
The File descriptor
.Fa dirfd 
is not a directory.
.
.It Bq Er EACCES
Search permission is denied on the directory whose descriptor is given
as input.
.
.It Bq Er EFAULT
.Fa attrList
or
.Em attrBuf
points to an invalid address.
.
.It Bq Er ERANGE
The buffer was too small.
.
.It Bq Er EINVAL
The 
.Fa bitmapcount 
field of 
.Fa attrList 
is not 
.Dv ATTR_BIT_MAP_COUNT .
.
.It Bq Er EINVAL
An invalid attribute was requested.
.
.It Bq Er EINVAL
Volume attributes were requested.
.
.It Bq Er EINVAL
.Dv ATTR_CMN_NAME
or
.Dv ATTR_CMN_RETURNED_ATTRS
was not requested in the attrList parameter.
.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
.
.Sh EXAMPLES
.
The following code lists the contents of a directory using 
.Fn getattrlistbulk . 
The listing includes the file type.
.
.Bd -literal
#include <sys/syscall.h>
#include <sys/attr.h>
#include <sys/errno.h>
#include <sys/vnode.h>
#include <unistd.h>
#include <fcntl.h>
#include <stdio.h>
#include <assert.h>
#include <stddef.h>
#include <string.h>
#include <stdbool.h>

typedef struct val_attrs {
    uint32_t          length;
    attribute_set_t   returned;
    uint32_t          error;
    attrreference_t   name_info;
    char              *name;
    fsobj_type_t      obj_type;
} val_attrs_t;


void demo(const char *dirpath)
{
    int error;
    int dirfd;
    struct attrlist attrList;
    char *entry_start;
    char attrBuf[256];

    memset(&attrList, 0, sizeof(attrList));
    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;
    attrList.commonattr  = ATTR_CMN_RETURNED_ATTRS |
                           ATTR_CMN_NAME |
                           ATTR_CMN_ERROR |
                           ATTR_CMN_OBJTYPE;

    error = 0;
    dirfd = open(dirpath, O_RDONLY, 0);
    if (dirfd < 0) {
        error = errno;
        printf("Could not open directory %s", dirpath);
        perror("Error was ");
    } else {
        for (;;) {
            int retcount;

            retcount = getattrlistbulk(dirfd, &attrList, &attrBuf[0],
                               sizeof(attrBuf), 0);
            printf("\engetattrlistbulk returned %d", retcount);
            if (retcount == -1) {
                error = errno;
                perror("Error returned : ");
                printf("\en");
                break;
            } else if (retcount == 0) {
                /* No more entries in directory */
                error = 0;
                break;
            } else {
                int    index;
                uint32_t total_length;
                char   *field;

                entry_start = &attrBuf[0];
                total_length = 0;
                printf(" -> entries returned");
                for (index = 0; index < retcount; index++) {
                    val_attrs_t    attrs = {0};

                    printf("\en Entry %d", index);
                    printf("  --  ");
                    field = entry_start;
                    attrs.length = *(uint32_t *)field;
                    printf(" Length %d ", attrs.length);
                    total_length += attrs.length;
                    printf(" Total Length %d ", total_length);
                    field += sizeof(uint32_t);
                    printf("  --  ");

                    /* set starting point for next entry */
                    entry_start += attrs.length;

                    attrs.returned = *(attribute_set_t *)field;
                    field += sizeof(attribute_set_t);

                    if (attrs.returned.commonattr & ATTR_CMN_ERROR) {
                        attrs.error = *(uint32_t *)field;
                        field += sizeof(uint32_t);
                    }

                    if (attrs.returned.commonattr & ATTR_CMN_NAME) {
                        attrs.name =  field;
                        attrs.name_info = *(attrreference_t *)field;
                        field += sizeof(attrreference_t);
                        printf("  %s ", (attrs.name +
                            attrs.name_info.attr_dataoffset));
                    }

                    /* Check for error for this entry */
                    if (attrs.error) {
                        /*
                         * Print error and move on to next
                         * entry
                         */
                        printf("Error in reading attributes for directory \
                               entry %d", attrs.error);
                        continue;
                    }

                    printf("  --  ");
                    if (attrs.returned.commonattr & ATTR_CMN_OBJTYPE) {
                        attrs.obj_type = *(fsobj_type_t *)field;
                        field += sizeof(fsobj_type_t);
                        
                        switch (attrs.obj_type) {
                            case VREG:
                                printf("file  ");
                                break;
                            case VDIR:
                                printf("directory    ");
                                break;
                            default:
                                printf("obj_type = %-2d  ", attrs.obj_type);
                                break;
                        }
                    }
                    printf("  --  ");
                }
            }
        }
        (void)close(dirfd);
    }
}
.Ed
.Pp
.
.Sh SEE ALSO
.
.Xr getattrlist 2 ,
.Xr lseek 2
.
.Sh HISTORY
A
.Fn getattrlistbulk
function call appeared in OS X version 10.10
.
osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getaudit.2                                   0100644 0001750 0001750 00000000031 12567450734 022547  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getaudit_addr.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getaudit_addr.2                              0100644 0001750 0001750 00000013412 12567450734 023550  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008-2011 Apple Inc. All rights reserved.
.\"
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_START@
.\"
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. The rights granted to you under the License
.\" may not be used to create, or enable the creation or redistribution of,
.\" unlawful or unlicensed copies of an Apple operating system, or to
.\" circumvent, violate, or enable the circumvention or violation of, any
.\" terms of an Apple operating system software license agreement.
.\"
.\" Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this file.
.\"
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\"
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_END@
.\"
.Dd March 6, 2011
.Dt GETAUDIT_ADDR 2
.Os
.Sh NAME
.Nm getaudit_addr ,
.Nm getaudit(NOW DEPRECATED)
.Nd "retrieve audit session state"
.Sh SYNOPSIS
.In bsm/audit.h
.In bsm/audit_session.h
.Ft int
.Fn getaudit_addr "auditinfo_addr_t *auditinfo_addr" "u_int length"
.Sh SYNOPSIS (NOW DEPRECATED)
.In bsm/audit.h
.Ft int
.Fn getaudit "auditinfo_t *auditinfo"
.Sh DESCRIPTION
The
.Fn getaudit_addr
system call
retrieves extended state via
.Fa auditinfo_addr
and
.Fa length .
It
uses the
.Fa auditinfo_addr_t
data structure supports Terminal IDs incuding those with larger addresses such
as those used in IP version 6.  It is defined as follows:
.nf
.in +4n
struct auditinfo_addr {
	au_id_t         ai_auid;        /* Audit user ID. */
	au_mask_t       ai_mask;        /* Audit masks. */
	au_tid_addr_t   ai_termid;      /* Terminal ID. */
	au_asid_t       ai_asid;        /* Audit session ID. */
	u_int64_t       ai_flags;       /* Audit session flags. */
};
typedef struct auditinfo_addr   auditinfo_addr_t;
.in
.fi
.Pp
The
.Fa ai_auid
variable contains the audit identifier which is recorded in the audit log for
each event the process caused.
.Pp
The
.Fa au_mask_t
data structure defines the bit mask for auditing successful and failed events
out of the predefined list of event classes. It is defined as follows:
.nf
.in +4n
struct au_mask {
	unsigned int    am_success;     /* success bits */
	unsigned int    am_failure;     /* failure bits */
};
typedef struct au_mask  au_mask_t;
.in
.fi
.Pp
The
.Fa au_tid_addr_t
data structure which includes a larger address storage field and an additional
field with the type of address stored:
.nf
.in +4n
struct au_tid_addr {
	dev_t           at_port;
	u_int32_t       at_type;
	u_int32_t       at_addr[4];
};
typedef struct au_tid_addr      au_tid_addr_t;
.in
.fi
.Pp
The
.Fa ai_asid
variable contains the audit session ID which is recorded with every event
caused by the process.
.Pp
The
.Fa ai_flags
variable contains flags that are opaque to the kernel and used by various
consumers of the
.Fa auditinfo_addr
data.  Please see the
.Ao Pa bsm/audit_session.h Ac
header file for more information
and flag definitions for this platform.
.Pp
Without appropriate privilege the audit mask fields will be set to all
ones.
.Pp
The
.Fn getaudit
system call (NOW DEPRECATED)
retrieves the active audit session state for the current process via the
.Vt auditinfo_t
pointed to by
.Fa auditinfo .
.Pp
The
.Fa auditinfo_t
data structure (NOW DEPRECATED) is defined as follows:
.nf
.in +4n
struct auditinfo {
	au_id_t        ai_auid;         /* Audit user ID */
	au_mask_t      ai_mask;         /* Audit masks */
	au_tid_t       ai_termid;       /* Terminal ID */
	au_asid_t      ai_asid;         /* Audit session ID */
};
typedef struct auditinfo        auditinfo_t;
.in
.fi
.Pp
The
.Fa au_termid_t
data structure (NOW DEPRECATED) defines the Terminal ID recorded with
every event caused by the process. It is defined as follows:
.nf
.in +4n
struct au_tid {
	dev_t           port;
	u_int32_t       machine;
};
typedef struct au_tid   au_tid_t;
.in
.fi
.Sh RETURN VALUES
.Rv -std getaudit_addr
.Sh ERRORS
The
.Fn getaudit_addr
function will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
A failure occurred while data transferred to or from
the kernel failed.
.It Bq Er EINVAL
Illegal argument was passed by a system call.
.It Bq Er EOVERFLOW
The
.Fa length
argument indicates an overflow condition will occur.
.It Bq Er ERANGE
The address is too big.
.El
.Sh SEE ALSO
.Xr audit 2 ,
.Xr auditon 2 ,
.Xr getauid 2 ,
.Xr setaudit 2 ,
.Xr setauid 2 ,
.Xr libbsm 3
.Sh HISTORY
The OpenBSM implementation was created by McAfee Research, the security
division of McAfee Inc., under contract to Apple Computer Inc.\& in 2004.
It was subsequently adopted by the TrustedBSD Project as the foundation for
the OpenBSM distribution.
.Pp
.Fn getaudit_addr
replaced
.Fn getaudit
in Mac OS X 10.7 to support longer terminal addresses such as those used
by IP version 6.
.Fn getaudit
is now deprecated and
.Fn getaudit_addr
should be used instead.
.Sh AUTHORS
.An -nosplit
This software was created by McAfee Research, the security research division
of McAfee, Inc., under contract to Apple Computer Inc.
Additional authors include
.An Wayne Salamon ,
.An Robert Watson ,
and SPARTA Inc.
.Pp
The Basic Security Module (BSM) interface to audit records and audit event
stream format were defined by Sun Microsystems.
.Pp
This manual page was written by
.An Robert Watson Aq rwatson@FreeBSD.org
and
.An Stacey Son Aq sson@FreeBSD.org .
                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getauid.2                                    0100644 0001750 0001750 00000004435 12567450734 022377  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008-2009 Apple Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd March 5, 2009
.Dt GETAUID 2
.Os
.Sh NAME
.Nm getauid
.Nd "retrieve audit user ID"
.Sh SYNOPSIS
.In bsm/audit.h
.Ft int
.Fn getauid "au_id_t *auid"
.Sh DESCRIPTION
The
.Fn getauid
system call
retrieves the active audit user ID for the current process via the
.Vt au_id_t
pointed to by
.Fa auid .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn getauid
function will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
A failure occurred while data transferred from
the kernel failed.
.El
.Sh SEE ALSO
.Xr audit 2 ,
.Xr auditon 2 ,
.Xr getaudit 2 ,
.Xr getaudit_addr 2 ,
.Xr setaudit 2 ,
.Xr setaudit_addr 2 ,
.Xr setauid 2 ,
.Xr libbsm 3
.Sh HISTORY
The OpenBSM implementation was created by McAfee Research, the security
division of McAfee Inc., under contract to Apple Computer Inc.\& in 2004.
It was subsequently adopted by the TrustedBSD Project as the foundation for
the OpenBSM distribution.
.Sh AUTHORS
.An -nosplit
This software was created by McAfee Research, the security research division
of McAfee, Inc., under contract to Apple Computer Inc.
Additional authors include
.An Wayne Salamon ,
.An Robert Watson ,
and SPARTA Inc.
.Pp
The Basic Security Module (BSM) interface to audit records and audit event
stream format were defined by Sun Microsystems.
.Pp
This manual page was written by
.An Robert Watson Aq rwatson@FreeBSD.org .
                                                                                                                                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getdirentries.2                              0100644 0001750 0001750 00000013352 12567450734 023623  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getdirentries.2,v 1.7 1995/10/12 15:40:50 jtc Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)getdirentries.2	8.1 (Berkeley) 6/9/93
.\"
.Dd June 9, 1993
.Dt GETDIRENTRIES 2
.Os
.Sh NAME
.Nm getdirentries
.Nd "get directory entries in a filesystem independent format"
.Sh SYNOPSIS
.Fd #include <dirent.h>
.Fd #include <sys/types.h>
.Fd #include <sys/dirent.h>
.Ft int
.Fn getdirentries "int fd" "char *buf" "int nbytes" "long *basep"
.Sh DESCRIPTION
.Fn Getdirentries
reads directory entries from the directory
referenced by the file descriptor
.Fa fd
into the buffer pointed to by
.Fa buf ,
in a filesystem independent format.
Up to
.Fa nbytes
of data will be transferred.
.Fa Nbytes
must be greater than or equal to the
block size associated with the file,
see
.Xr stat 2 .
Some filesystems may not support
.Fn getdirentries
with buffers smaller than this size.
.Pp
The data in the buffer is a series of
.Em dirent
structures (see
.Xr dir 5 )
.Pp
The
.Fa d_fileno
entry is a number which is unique for each
distinct file in the filesystem.
Files that are linked by hard links (see
.Xr link 2 )
have the same
.Fa d_fileno .
Users of 
.Fn getdirentries
should skip 
entries with 
.Fa d_fileno 
= 0, as such entries represent files which have been deleted but not yet removed from the directory entry.
The
.Fa d_reclen
entry is the length, in bytes, of the directory record.
The
.Fa d_name
entry contains a null terminated file name.
The
.Fa d_namlen
entry specifies the length of the file name excluding the null byte.
Thus the actual size of
.Fa d_name
may vary from 1 to
.Dv MAXNAMELEN
\&+ 1.
.Fa d_type
is a integer representing the type of the directory entry.  The following types are defined in 
.Aq sys/dirent.h :
.Bd -literal -offset indent
#define DT_UNKNOWN       0
#define DT_FIFO          1
#define DT_CHR           2
#define DT_DIR           4
#define DT_BLK           6
#define DT_REG           8
#define DT_LNK          10
#define DT_SOCK         12
#define DT_WHT          14
.Ed
.Pp
Entries may be separated by extra space.
The
.Fa d_reclen
entry may be used as an offset from the start of a
.Fa dirent
structure to the next structure, if any.
.Pp
The actual number of bytes transferred is returned.
The current position pointer associated with
.Fa fd
is set to point to the next block of entries.
The pointer may not advance by the number of bytes returned by
.Fn getdirentries .
A value of zero is returned when
the end of the directory has been reached.
.Pp
.Fn Getdirentries
writes the position of the block read into the location pointed to by
.Fa basep .
Alternatively, the current position pointer may be set and retrieved by
.Xr lseek 2 .
The current position pointer should only be set to a value returned by
.Xr lseek 2 ,
a value returned in the location pointed to by
.Fa basep ,
or zero.
.Sh NOTES
.Fn getdirentries
should rarely be used directly; instead,
.Xr opendir 3
and
.Xr readdir 3
should be used.
.Pp
As of Mac OS X 10.6,
.Fn getdirentries
is deprecated, and it is recommended that applications
use
.Xr readdir 3
rather than using
.Fn getdirentries
directly.  Due to limitations with the system call, 
.Fn getdirentries
will not work
with 64-bit inodes; in order to use
.Fn getdirentries ,
.Dv _DARWIN_NO_64_BIT_INODE
must be defined.  See
.Xr stat 2
for more information on
.Dv _DARWIN_NO_64_BIT_INODE
and its other effects.
.Sh RETURN VALUES
If successful, the number of bytes actually transferred is returned.
Otherwise, -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Getdirentries
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa fd
is not a valid file descriptor open for reading.
.It Bq Er EFAULT
Either
.Fa buf
or
.Fa basep
point outside the allocated address space.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr lseek 2 ,
.Xr open 2 ,
.Xr stat 2 ,
.Xr opendir 3 ,
.Xr readdir 3 ,
.Xr dir 5
.Sh HISTORY
The
.Fn getdirentries
function first appeared in 4.4BSD.
                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getdirentriesattr.2                          0100644 0001750 0001750 00000032434 12567450734 024520  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        q.\" Copyright (c) 2003 Apple Computer, Inc. All rights reserved.
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\"     @(#)getdirentriesattr.2
.
.Dd December 15, 2003
.Dt GETDIRENTRIESATTR 2
.Os Darwin
.Sh NAME
.Nm getdirentriesattr(NOW DEPRECATED)
.Nd get file system attributes for multiple directory entries
.Sh SYNOPSIS
.Fd #include <sys/attr.h>
.Fd #include <unistd.h>
.Pp
.Fd #if __LP64__
.Ft int
.Fn getdirentriesattr "int fd" "struct attrlist * attrList" "void * attrBuf" "size_t attrBufSize" "unsigned int * count" "unsigned int * basep" "unsigned int * newState" "unsigned int options"
.Fd #else
.Ft int
.Fn getdirentriesattr "int fd" "struct attrlist * attrList" "void * attrBuf" "size_t attrBufSize" "unsigned long * count" "unsigned long * basep" "unsigned long * newState" "unsigned long options"
.Fd #endif
.
.
.Sh DESCRIPTION
The
.Fn getdirentriesattr
function reads directory entries and returns their attributes (that is, metadata). 
You can think of it as a combination of 
.Xr getdirentries 2
and
.Xr getattrlist 2 .
.Fn getdirentriesattr
iterates over the items in a directory like 
.Xr getdirentries 2 ,
and returns information about each directory entry like
.Xr getattrlist 2 .
Note: when
.Fn getdirentriesattr
returns information about a symbolic link, the information returned is about the link itself, not the target of the link.
.Pp
The function reads directory entries from the directory referenced by the 
file descriptor 
.Fa fd .
Attributes of those directory entries are placed into the buffer specified by 
.Fa attrBuf
and
.Fa attrBufSize .
The 
.Fa attrList 
parameter determines what attributes are returned for each entry.
The 
.Fa count 
parameter contains the number of directory entries requested and returned.
The 
.Fa basep
parameter returns the directory offset in a manner similar to 
.Xr getdirentries 2 .
The 
.Fa newState
parameter allows you to check whether the directory has been modified while 
you were reading it.
The 
.Fa options 
parameter lets you control specific aspects of the function's behaviour.
.Pp
.
The 
.Fn getdirentriesattr 
function is only supported by certain volume format implementations. 
For maximum compatibility, client programs should use high-level APIs 
(such as the Carbon File Manager) to access file system attributes.
These high-level APIs include logic to emulate file system attributes 
on volumes that don't support 
.Fn getdirentriesattr .
.Pp
.
.\" fd parameter
.
The
.Fa fd
parameter must be a file descriptor that references a directory that you have opened for reading. 
.Pp
.
.\" attrList parameter
.
The
.Fa attrList
parameter is a pointer to an 
.Vt attrlist 
structure. 
You are responsible for filling out all fields of this structure before calling the function. 
See the discussion of the  
.Xr getattrlist 2 
function for a detailed description of this structure. 
To get an attribute you must set the corresponding bit in the appropriate 
.Vt attrgroup_t 
field of the 
.Vt attrlist 
structure. 
You must not request volume attributes.
.Pp
.
.\" attrBuf and attrBufSize parameters
.
The
.Fa attrBuf
and 
.Fa attrBufSize
parameters specify a buffer into which the function places attribute values. 
The attributes for any given directory entry are grouped together and 
packed in exactly the same way as they are returned from 
.Xr getattrlist 2 .
These groups are then placed into the buffer, one after another. 
As each group starts with a leading 
.Vt u_int32_t
that contains the 
overall length of the group, you can step from one group to the next 
by simply adding this length to your pointer.
The sample code (below) shows how to do this.
The initial contents of this buffer are ignored.
.Pp
.
.\" count parameter
.
The 
.Fa count 
parameter points to an 
.Vt unsigned long
or
.Vt unsigned int
variable. 
You should initialise this variable to be the number of directory entries for which 
you wish to get attributes.
On return, this variable contains the number of directory entries whose attributes 
have been placed into the attribute buffer.
This may be smaller than the number that you requested.
.Pp
.
.\" basep parameter
The 
.Fa basep 
parameter returns the offset of the last directory entry read, in a 
manner identical to 
.Xr getdirentries 2 . 
You can use this value to reset a directory iteration to a known position 
using 
.Xr lseek 2 .
However, since the variable is too small to hold an
.Vt off_t ,
you should use
.Xr lseek 2
to get the directory's current position instead of using this parameter.
The initial value of the variable is ignored.
.Pp
.
.\" newState parameter
.
The 
.Fa newState 
parameter returns a value that changes if the directory has been modified. 
If you're iterating through the directory by making repeated calls to 
.Fn getdirentriesattr ,
you can compare subsequent values of 
.Fa newState 
to determine whether the directory has been modified (and thus restart 
your iteration at the beginning).
The initial value of the variable is ignored.
.Pp
.
.\" options parameter
.
The
.Fa options
parameter is a bit set that controls the behaviour of
.Fn getdirentriesattr .
The following option bits are defined.
.
.Bl -tag -width FSOPT_NOINMEMUPDATE
.
.It FSOPT_NOINMEMUPDATE
This tells 
.Fn getdirentriesattr
to return the directory entries from disk rather than taking the extra step of looking 
at data structures in-memory which may contain changes that haven't been flushed to disk.
.Pp
This option allowed for specific performance optimizations for specific clients on older systems. 
We currently recommend that clients not set this option and that file system 
implementations ignore it.
.
.El
.Pp
It is typical to ask for a combination of common, file, and directory 
attributes and then use the value of the 
.Dv ATTR_CMN_OBJTYPE 
attribute to parse the resulting attribute buffer.
.Sh NOTES
As of Mac OS X 10.10,
.Fn getdirentriesattr
is deprecated. It is replaced by
.Nm getattrlistbulk(2).
Continued use of
.Fn getdirentriesattr
is strongly discouraged as comprehensive results are not guaranteed.
.Sh RETURN VALUES
Upon successful completion a value of 0 or 1 is returned. 
The value 0 indicates that the routine completed successfully. 
The value 1 indicates that the routine completed successfully and has 
returned the last entry in the directory.
On error, a value of -1 is returned and
.Va errno
is set to indicate the error.
.
.Sh COMPATIBILITY
Not all volumes support 
.Fn getdirentriesattr .
You can test whether a volume supports 
.Fn getdirentriesattr 
by using 
.Xr getattrlist 2 
to get the volume capabilities attribute 
.Dv ATTR_VOL_CAPABILITIES ,
and then testing the 
.Dv VOL_CAP_INT_READDIRATTR 
flag.
.Pp
.
The 
.Fn getdirentriesattr 
function has been undocumented for more than two years. 
In that time a number of volume format implementations have been created without 
a proper specification for the behaviour of this routine. 
You may encounter volume format implementations with slightly different 
behaviour than what is described here. 
Your program is expected to be tolerant of this variant behaviour.
.Pp
.
If you're implementing a volume format that supports 
.Fn getdirentriesattr ,
you should be careful to support the behaviour specified by this document.
.
.Pp
If the directory contains a mount point, then
.Dv DIR_MNTSTATUS_MNTPOINT
will be set in the
.Dv ATTR_DIR_MOUNTSTATUS
for that entry; all other attributes for that entry, however,
will be for the underlying file system (as opposed to the mounted
file system).
.Xr getattrlist 2
should be used to get the attributes for the mount point.
.Sh ERRORS
.Fn getdirentriesattr
will fail if:
.Bl -tag -width Er
.
.It Bq Er ENOTSUP
The volume does not support
.Fn getdirentriesattr .
.
.It Bq Er EBADF
.Fa fd 
is not a valid file descriptor for a directory open for reading.
.
.It Bq Er EFAULT
.Fa attrList
or
.Em attrBuf
points to an invalid address.
.
.It Bq Er EINVAL
The 
.Fa bitmapcount 
field of 
.Fa attrList 
is not 
.Dv ATTR_BIT_MAP_COUNT .
.
.It Bq Er EINVAL
You requested an invalid attribute.
.
.It Bq Er EINVAL
You requested volume attributes.
.
.It Bq Er EINVAL
The 
.Fa options 
parameter contains an invalid flag.
.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
.
.Sh EXAMPLES
.
The following code lists the contents of a directory using 
.Fn getdirentriesattr . 
The listing includes the file type and creator for files.
.
.Bd -literal
#include <assert.h>
#include <stdio.h>
#include <stddef.h>
#include <string.h>
#include <sys/attr.h>
#include <sys/errno.h>
#include <unistd.h>
#include <sys/vnode.h>
#include <stdbool.h>
#include <fcntl.h>
.Pp
.
typedef struct attrlist attrlist_t;
.Pp
.
struct FInfoAttrBuf {
    u_int32_t       length;
    attrreference_t name;
    fsobj_type_t    objType;
    char            finderInfo[32];
    u_int32_t       dirStatus;
} __attribute__((aligned(4), packed));
typedef struct FInfoAttrBuf FInfoAttrBuf;
.Pp
.
enum {
    kEntriesPerCall = 10
};
.Pp
.
static int FInfoDemo(const char *dirPath)
{
    int             err;
    int             junk;
    int             dirFD;
    attrlist_t      attrList;
#ifdef __LP64__
    unsigned int    index;
    unsigned int    count;
    unsigned int    junkBaseP;
    unsigned int    oldState;
    unsigned int    newState;
#else
    unsigned long   index;
    unsigned long   count;
    unsigned long   junkBaseP;
    unsigned long   oldState;
    unsigned long   newState;
#endif
    bool            oldStateValid;
    bool            done;
    FInfoAttrBuf *  thisEntry;
    char            attrBuf[kEntriesPerCall * (sizeof(FInfoAttrBuf) + 64)];
.Pp
.
    // attrBuf is big enough for kEntriesPerCall entries, assuming that 
    // the average name length is less than 64.
.Pp
.
    memset(&attrList, 0, sizeof(attrList));
    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;
    attrList.commonattr  =    ATTR_CMN_NAME 
                            | ATTR_CMN_OBJTYPE 
                            | ATTR_CMN_FNDRINFO;
    attrList.dirattr     = ATTR_DIR_MOUNTSTATUS;
.Pp
    
    err = 0;
    dirFD = open(dirPath, O_RDONLY, 0);
    if (dirFD < 0) {
        err = errno;
    }
    if (err == 0) {
        oldStateValid = false;
        done = false;
        do {
            count = kEntriesPerCall;
.Pp
            err = getdirentriesattr(
                dirFD, 
                &attrList, 
                &attrBuf, 
                sizeof(attrBuf), 
                &count, 
                &junkBaseP, 
                &newState, 
                0
            );
            if (err < 0) {
                err = errno;
            } else {
                done = err;
                err = 0;
            }
.Pp
            if (err == 0) {
                if (oldStateValid) {
                    if (newState != oldState) {
                        printf("*** Directory has changed\en");
                        oldState = newState;
                    }
                } else {
                    oldState = newState;
                    oldStateValid = true;
                }
.Pp
                thisEntry = (FInfoAttrBuf *) attrBuf;
.Pp
                for (index = 0; index < count; index++) {
                    switch (thisEntry->objType) {
                        case VREG:
                            printf(
                                "'%4.4s' '%4.4s' ", 
                                &thisEntry->finderInfo[0], 
                                &thisEntry->finderInfo[4]
                            );
                            break;
                        case VDIR:
                            if (thisEntry->dirStatus & DIR_MNTSTATUS_MNTPOINT)
                                printf("mount-point   ");
                            else
                                printf("directory     ");
                            break;
                        default:
                            printf(
                                "objType = %-2d  ", 
                                thisEntry->objType
                            );
                            break;
                    }
                    printf(
                        "%s\en", 
                        ((char *) &thisEntry->name) 
                            + thisEntry->name.attr_dataoffset
                    );
.Pp
                    // Advance to the next entry.
.Pp
                    thisEntry = (FInfoAttrBuf*)((char*)thisEntry + thisEntry->length);
                }
            }
        } while ( err == 0 && ! done );
    }
.Pp
    if (dirFD != -1) {
        junk = close(dirFD);
        assert(junk == 0);
    }
.Pp
    return err;
}
.Ed
.Pp
.
.Sh SEE ALSO
.
.Xr getattrlist 2 ,
.Xr getdirentries 2 ,
.Xr lseek 2
.
.Sh HISTORY
A
.Fn getdirentriesattr
function call appeared in Darwin 1.3.1 (Mac OS X version 10.0).
.
                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getdtablesize.2                              0100644 0001750 0001750 00000005422 12567450734 023600  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getdtablesize.2	8.1 (Berkeley) 6/4/93
.\" $FreeBSD: src/lib/libc/sys/getdtablesize.2,v 1.4.2.3 2001/12/14 18:34:00 ru Exp $
.\"
.Dd June 4, 1993
.Dt GETDTABLESIZE 2
.Os
.Sh NAME
.Nm getdtablesize
.Nd get descriptor table size
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn getdtablesize void
.Sh DESCRIPTION
Each process has a fixed size descriptor table,
which is guaranteed to have at least 20 slots.  The entries in
the descriptor table are numbered with small integers starting at 0.
The call
.Fn getdtablesize
returns the size of this table.
.Sh LEGACY
The
.Xr getrlimit 2
function returns a value of type 
.Ft rlim_t .
This interface, returning an 
.Ft int ,
may have problems representing appropriate values in the future.
Applications should use the 
.Xr getrlimit 2
function instead.
.Sh SEE ALSO
.Xr close 2 ,
.Xr dup 2 ,
.Xr getrlimit 2 ,
.Xr open 2 ,
.Xr select 2
.Sh HISTORY
The
.Fn getdtablesize
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getegid.2                                    0100644 0001750 0001750 00000000022 12567450734 022351  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getgid.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/geteuid.2                                    0100644 0001750 0001750 00000000022 12567450734 022367  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getuid.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getfh.2                                      0100644 0001750 0001750 00000010522 12567450734 022044  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2002-2007 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"	$NetBSD: getfh.2,v 1.7 1995/10/12 15:40:53 jtc Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)getfh.2	8.1 (Berkeley) 6/9/93
.\"
.Dd January 9, 2007
.Dt GETFH 2
.Os
.Sh NAME
.Nm getfh
.Nd get file handle
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mount.h>
.Ft int
.Fn getfh "const char *path" "fhandle_t *fhp"
.Sh DESCRIPTION
.Fn Getfh
returns a file handle for the specified file or directory
in the file handle pointed to by
.Fa fhp .
This system call is restricted to the super-user and is used by an
NFS server's
.Xr nfsd 8
daemon to obtain file handles used in NFS MOUNT service replies.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.  Otherwise, -1
is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Getfh
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq ENOTDIR
A component of the path prefix of
.Fa path
is not a directory.
.It Bq ENAMETOOLONG
The length of a component of
.Fa path
exceeds
.Dv {NAME_MAX}
characters, or the length of
.Fa path
exceeds
.Dv {PATH_MAX}
characters.
.It Bq ENOENT
The file referred to by
.Fa path
does not exist.
.It Bq EPERM
The caller is not the super-user.
.It Bq EACCES
Search permission is denied for a component of the path prefix of
.Fa path .
.It Bq ELOOP
Too many symbolic links were encountered in translating
.Fa path .
.It Bq EFAULT
.Fa Fhp
points to an invalid address.
.It Bq EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr nfsd 8
.Sh HISTORY
The
.Fn getfh
function first appeared in 4.4BSD.
                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getfsstat.2                                  0100644 0001750 0001750 00000010344 12567450734 022755  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getfsstat.2,v 1.6 1995/06/29 11:40:44 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)getfsstat.2	8.1 (Berkeley) 6/9/93
.\"
.Dd Oct 28, 2008
.Dt GETFSSTAT 2
.Os
.Sh NAME
.Nm getfsstat
.Nd get list of all mounted file systems
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/ucred.h>
.Fd #include <sys/mount.h>
.Ft int
.Fn getfsstat "struct statfs *buf" "int bufsize" "int flags"
.Sh TRANSITIIONAL SYNOPSIS (NOW DEPRECATED)
.Ft int
.br
.Fn getfsstat64 "struct statfs64 *buf" "int bufsize" "int flags" ;
.Sh DESCRIPTION
The
.Fn getfsstat
function returns information about all mounted file systems.
The
.Fa buf
argument is a pointer to an array of
.Fa statfs
structures (see 
.Xr statfs 2 ) .
As
.Xr statfs 2
indicates, the structure is defined differently depending on
whether the macro _DARWIN_FEATURE_64_BIT_INODE is defined (see
.Xr stat 2
for more information on this macro).
.Pp
Fields that are undefined for a particular file system are set to -1.
The buffer is filled with an array of
.Fa statfs
structures, one for each mounted file system
up to the size specified by
.Fa bufsize .
.Pp
If
.Fa buf
is given as NULL,
.Fn getfsstat
returns just the number of mounted file systems.
.Pp
If
.Fa flags
is set to
.Dv MNT_NOWAIT ,
.Fn getfsstat
will directly return the information retained in the kernel
to avoid delays caused by waiting for updated information from
a file system that is perhaps temporarily unable to respond.
Some of the information returned may be out of date, however; if
.Fa flags
is set to
.Dv MNT_WAIT
or
.Dv MNT_DWAIT
instead,
.Fn getfsstat
will request updated information from each mounted filesystem before
returning.
.Sh RETURN VALUES
Upon successful completion, the number of 
.Fa statfs
structures is returned.
Otherwise, -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Getfsstat
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa buf
argument points to an invalid address.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.El
.Sh TRANSITIONAL DESCRIPTION (NOW DEPRECATED)
The
.Fn getfsstat64
routine is equivalent to the default
.Fn getfstat
(when
.Dv _DARWIN_FEATURE_64_BIT_INODE
is defined), so there is no longer any reason to use it (it will be removed
in the future).
.Sh SEE ALSO
.Xr stat 2 ,
.Xr statfs 2 ,
.Xr fstab 5 ,
.Xr mount 8
.Sh HISTORY
The
.Fn getfsstat
function first appeared in 4.4BSD.
                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getgid.2                                     0100644 0001750 0001750 00000005747 12567450734 022227  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getgid.2,v 1.5 1995/02/27 12:32:53 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getgid.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETGID 2
.Os BSD 4.2
.Sh NAME
.Nm getegid ,
.Nm getgid
.Nd get group process identification
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft gid_t
.Fo getegid
.Fa void
.Fc
.Ft gid_t
.Fo getgid
.Fa void
.Fc
.Sh DESCRIPTION
The
.Fn getgid
function returns the real group ID of the calling process,
.Fn getegid
returns the effective group ID of the calling process.
.Pp
The real group ID is specified at login time.
.Pp
The real group ID is the group of the user who invoked the program.
As the effective group ID gives the process additional permissions
during the execution of
.Dq Em set-group-ID
mode processes,
.Fn getgid
is used to determine the real-user-id of the calling process.
.Sh ERRORS
The
.Fn getgid
and
.Fn getegid
functions are always successful;
no return value is reserved to indicate an error.
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <unistd.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr getuid 2 ,
.Xr setregid 2 ,
.Xr setgid 3
.Sh STANDARDS
.Fn Getgid
and
.Fn getegid
conform to 
.St -p1003.1-88 .
                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getgroups.2                                  0100644 0001750 0001750 00000012254 12567450734 022772  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008-2011 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\"	$NetBSD: getgroups.2,v 1.8 1995/02/27 12:32:57 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getgroups.2	8.2 (Berkeley) 4/16/94
.\"
.Dd October 28, 2011
.Dt GETGROUPS 2
.Os BSD 4.2
.Sh NAME
.Nm getgroups
.Nd get group access list
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo getgroups
.Fa "int gidsetsize"
.Fa "gid_t grouplist[]"
.Fc
.Sh DESCRIPTION
.Fn getgroups
gets the current group access list of the current user process
and stores it in the array 
.Fa grouplist[] .
The parameter
.Fa gidsetsize
indicates the number of entries that may be placed in 
.Fa grouplist[] .
.Fn getgroups
returns the actual number of groups returned in
.Fa grouplist[] .
However, no more than
.Dv {NGROUPS_MAX}
will be returned. If
.Fa gidsetsize
is 0, 
.Fn getgroups
returns the number of groups without modifying the
.Fa grouplist[]
array.
.Pp
Calling
.Xr initgroups 3
to opt-in for supplementary groups will cause
.Fn getgroups
to return a single entry, the GID that was passed to 
.Xr initgroups 3 .
.Pp
To provide compatibility with applications that use
.Fn getgroups
in environments where users may be in more than
.Dv {NGROUPS_MAX}
groups, a variant of
.Fn getgroups ,
obtained when compiling with either the macros
.Dv _DARWIN_UNLIMITED_GETGROUPS
or
.Dv _DARWIN_C_SOURCE
defined, can be used that is not limited to
.Dv {NGROUPS_MAX}
groups.
However, this variant only returns the user's default group access list and
not the group list modified by a call to
.Xr setgroups 2
(either in the current process or an ancestor process).
Use of
.Xr setgroups 2
is highly discouraged, and there is no foolproof way to determine if it has
been previously called.
.Sh RETURN VALUES
A successful call returns the number of groups in the group set.
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The possible errors for
.Fn getgroups
are:
.Bl -tag -width Er
.\" ==========
.It Bq Er EFAULT
The argument
.Fa grouplist
specifies an invalid address.
.\" ==========
.It Bq Er EINVAL
The argument
.Fa gidsetsize ,
although non-zero,
is smaller than the number of groups in the group set.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/types.h>
.Fd #include <unistd.h>
.Pp
The include files
.In sys/param.h
and
.In sys/types.h
are necessary.
.Sh SEE ALSO
.Xr setgroups 2 ,
.Xr initgroups 3 ,
.Xr compat 5
.Sh HISTORY
The
.Fn getgroups
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/gethostuuid.2                                0100644 0001750 0001750 00000002132 12566166137 023311  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .Dd Nov 5, 2008
.Dt GETHOSTUUID \&2 "Mac OS X System Calls Manual"
.Os "Mac OS X"
.Sh NAME
.Nm gethostuuid
.Nd return a unique identifier for the current machine
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fo gethostuuid
.Fa "uuid_t id"
.Fa "const struct timespec *wait"
.Fc
.Sh DESCRIPTION
The
.Fn gethostuuid
function returns a 16-byte
.Ft uuid_t
specified by
.Fa id ,
that uniquely identifies the current machine.
Be aware that the hardware identifiers that
.Fn gethostuuid
uses to generate the UUID can themselves be modified.
.Pp
The
.Fa wait
argument is a pointer to a
.Ft "struct timespec"
that specifies the maximum time to wait for the result.
Setting the
.Fa tv_sec
and
.Fa tv_nsec
fields to zero means to wait indefinitely until it completes.
.Sh RETURN VALUES
The
.Fn gethostuuid
function returns zero on success or -1 on error.
.Sh ERRORS
The
.Fn gethostuuid
functions fails if:
.Bl -tag -width Er
.It Bq Er EFAULT
.Fa wait
points to memory that is not a valid part of the process
address space.
.It Bq Er EWOULDBLOCK
The
.Fa wait
timeout expired before the UUID could be obtained.
.El
.Sh SEE ALSO
.Xr uuid 3
                                                                                                                                                                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getitimer.2                                  0100644 0001750 0001750 00000012116 12567450734 022741  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getitimer.2,v 1.6 1995/10/12 15:40:54 jtc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getitimer.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt GETITIMER 2
.Os BSD 4.2
.Sh NAME
.Nm getitimer ,
.Nm setitimer
.Nd get/set value of interval timer
.Sh SYNOPSIS
.Fd #include <sys/time.h>
.Pp
.Fd #define ITIMER_REAL		0
.Fd #define ITIMER_VIRTUAL	1
.Fd #define ITIMER_PROF		2
.Ft int
.Fo getitimer
.Fa "int which"
.Fa "struct itimerval *value"
.Fc
.Ft int
.Fo setitimer
.Fa "int which"
.Fa "const struct itimerval *restrict value"
.Fa "struct itimerval *restrict ovalue"
.Fc
.Sh DESCRIPTION
The system provides each process with three interval timers,
defined in
.Ao Pa sys/time.h Ac .
The
.Fn getitimer
call returns the current value for the timer specified in
.Fa which
in the structure at
.Fa value .
The
.Fn setitimer
call sets a timer to the specified
.Fa value
(returning the previous value of the timer if
.Fa ovalue
is non-nil).
.Pp
A timer value is defined by the 
.Fa itimerval
structure:
.Bd -literal -offset indent
struct itimerval {
	struct	timeval it_interval;	/* timer interval */
	struct	timeval it_value;	/* current value */
};
.Ed
.Pp
If
.Fa it_value
is non-zero, it indicates the time to the next timer expiration. 
If
.Fa it_interval
is non-zero, it specifies a value to be used in reloading 
.Fa it_value
when the timer expires.
Setting 
.Fa it_value
to 0 disables a timer.  Setting 
.Fa it_interval
to 0 causes a timer to be disabled after its next expiration (assuming
.Fa it_value
is non-zero).
.Pp
Time values smaller than the resolution of the
system clock are rounded up to this resolution
(typically 10 milliseconds).
.Pp
The
.Dv ITIMER_REAL
timer decrements in real time.  A
.Dv SIGALRM
signal is
delivered when this timer expires.
.Pp
The
.Dv ITIMER_VIRTUAL
timer decrements in process virtual time.
It runs only when the process is executing.  A
.Dv SIGVTALRM
signal
is delivered when it expires.
.Pp
The
.Dv ITIMER_PROF
timer decrements both in process virtual time and
when the system is running on behalf of the process.  It is designed
to be used by interpreters in statistically profiling the execution
of interpreted programs.
Each time the
.Dv ITIMER_PROF
timer expires, the
.Dv SIGPROF
signal is
delivered.  Because this signal may interrupt in-progress
system calls, programs using this timer must be prepared to
restart interrupted system calls.
.Sh NOTES
Three macros for manipulating time values are defined in
.Ao Pa sys/time.h Ac .
.Fa Timerclear
sets a time value to zero,
.Fa timerisset
tests if a time value is non-zero, and
.Fa timercmp
compares two time values (beware that >= and <= do not
work with this macro).
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Getitimer
and
.Fn setitimer
will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EFAULT
The
.Fa value
parameter specified a bad address.
.\" ==========
.It Bq Er EINVAL
The
.Fa value
parameter specified a time that was too large to be handled
or not in the canonical form.
.\" ==========
.It Bq Er EINVAL
The
.Fa which
parameter was invalid.
.El
.Sh SEE ALSO
.Xr gettimeofday 2 ,
.Xr select 2 ,
.Xr sigaction 2
.Sh HISTORY
The
.Fn getitimer
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                                                                                                                                                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getlogin.2                                   0100644 0001750 0001750 00000010401 12567450734 022553  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getlogin.2,v 1.4 1995/02/27 12:33:03 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)getlogin.2	8.1 (Berkeley) 6/9/93
.\"
.Dd June 9, 1993
.Dt GETLOGIN 2
.Os BSD 4.2
.Sh NAME
.Nm getlogin ,
.Nm setlogin
.Nd get/set login name
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft char *
.Fo getlogin
.Fa void
.Fc
.Ft int
.Fo setlogin
.Fa "const char *name"
.Fc
.Sh DESCRIPTION
The
.Fn getlogin
routine
returns the login name of the user associated with the current session,
as previously set by
.Fn setlogin .
The name is normally associated with a login shell
at the time a session is created,
and is inherited by all processes descended from the login shell.
(This is true even if some of those processes assume another user ID,
for example when
.Xr su 1
is used.)
.Pp
.Fn Setlogin
sets the login name of the user associated with the current session to
.Fa name .
This call is restricted to the super-user, and
is normally used only when a new session is being created on behalf
of the named user
(for example, at login time, or when a remote shell is invoked).
.Sh RETURN VALUES
If a call to
.Fn getlogin
succeeds, it returns a pointer to a null-terminated string in a static buffer.
If the name has not been set, it returns
.Dv NULL .
If a call to
.Fn setlogin
succeeds, a value of 0 is returned.  If
.Fn setlogin
fails, a value of -1 is returned and an error code is
placed in the global location
.Va errno .
.Sh ERRORS
The following errors may be returned by these calls:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa name
parameter gave an
invalid address.
.It Bq Er EINVAL
The
.Fa name
parameter
pointed to a string that was too long.
Login names are limited to
.Dv MAXLOGNAME
(from
.Ao Pa sys/param.h Ac )
characters, currently 12.
.It Bq Er EPERM
The caller tried to set the login name and was not the super-user.
.El
.Sh SEE ALSO
.Xr setsid 2
.Sh BUGS
Login names are limited in length by
.Fn setlogin .
However, lower limits are placed on login names elsewhere in the system
.Pf ( Dv UT_NAMESIZE
in
.Ao Pa utmp.h Ac ) .
.Pp
In earlier versions of the system,
.Fn getlogin
failed unless the process was associated with a login terminal.
The current implementation (using
.Fn setlogin )
allows getlogin to succeed even when the process has no controlling terminal.
In earlier versions of the system, the value returned by
.Fn getlogin
could not be trusted without checking the user ID.
Portable programs should probably still make this check.
.Sh HISTORY
The
.Fn getlogin
function first appeared in 4.4BSD.
                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getpeername.2                                0100644 0001750 0001750 00000006774 12567450734 023261  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getpeername.2,v 1.6 1995/10/12 15:40:56 jtc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpeername.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETPEERNAME 2
.Os BSD 4.2
.Sh NAME
.Nm getpeername
.Nd get address of connected peer
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo getpeername
.Fa "int socket"
.Fa "struct sockaddr *restrict address"
.Fa "socklen_t *restrict address_len"
.Fc
.Sh DESCRIPTION
The
.Fn getpeername
function returns the address of the peer connected to the specified 
socket. 
.Pp
The
.Fa address_len
parameter should be initialized to indicate
the amount of space pointed to by
.Fa address .
On return it contains the actual size of the address
returned (in bytes).
.Pp
The address is truncated if the buffer provided is too small.
.Sh RETURN VALUES
.Rv -std getpeername
.Sh ERRORS
The call succeeds unless:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The argument
.Fa socket
is not a valid descriptor.
.\" ==========
.It Bq Er EFAULT
The 
.Fa address
parameter points to memory not in a valid part of the
process address space.
.\" ==========
.It Bq Er EINVAL
.Fa socket
has been shut down.
.\" ==========
.It Bq Er ENOBUFS
Insufficient resources were available in the system
to perform the operation.
.\" ==========
.It Bq Er ENOTCONN
Either the socket is not connected
or it has not had the peer pre-specified.
.\" ==========
.It Bq Er ENOTSOCK
The argument
.Fa socket
refers to something other than a socket (e.g., a file).
.\" ==========
.It Bq Er EOPNOTSUPP
.Fn getpeername
is not supported for the protocol in use by
.Fa socket .
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr bind 2 ,
.Xr getsockname 2 ,
.Xr socket 2
.Sh HISTORY
The
.Fn getpeername
function call appeared in
.Bx 4.2 .
    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getpgid.2                                    0100644 0001750 0001750 00000000023 12567450734 022365  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getpgrp.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getpgrp.2                                    0100644 0001750 0001750 00000010261 12567450734 022417  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpgrp.2	8.1 (Berkeley) 6/4/93
.\" $FreeBSD: src/lib/libc/sys/getpgrp.2,v 1.11.2.6 2001/12/14 18:34:00 ru Exp $
.\"
.Dd June 4, 1993
.Dt GETPGRP 2
.Os
.Sh NAME
.Nm getpgid ,
.Nm getpgrp
.Nd get process group
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft pid_t
.Fo getpgid
.Fa "pid_t pid"
.Fc
.Ft pid_t
.Fo getpgrp
.Fa void
.Fc
.Sh DESCRIPTION
The process group of the current process is returned by
.Fn getpgrp .
The process group of the process identified by
.Fa pid
is returned by
.Fn getpgid .
If
.Fa pid
is zero,
.Fn getpgid
returns the process group of the current process.
.Pp
Process groups are used for distribution of signals, and
by terminals to arbitrate requests for their input: processes
that have the same process group as the terminal are foreground
and may read, while others will block with a signal if they attempt
to read.
.Pp
This call is thus used by programs such as
.Xr csh 1
to create
process groups
in implementing job control.
The
.Fn tcgetpgrp
and
.Fn tcsetpgrp
calls
are used to get/set the process group of the control terminal.
.Sh RETURN VALUES
The
.Fn getpgrp
call always succeeds.
Upon successful completion, the
.Fn getpgid
call returns the process group of the specified process;
otherwise, it returns a value of \-1 and sets
.Va errno
to indicate the error.
.Sh ERRORS
.Fn getpgid
will succeed unless:
.Bl -tag -width Er
.\" ==========
.It Bq Er ESRCH
There is no process whose process ID equals
.Fa pid .
.El
.Sh SEE ALSO
.Xr getsid 2 ,
.Xr setpgid 2 ,
.Xr termios 4
.Sh HISTORY
The
.Fn getpgrp
function call appeared in
.Bx 4.0 .
The
.Fn getpgid
function call is derived from its usage in System V Release 4.
.Sh STANDARDS
The
.Fn getpgrp
function call is expected to conform to
.St -p1003.1-90 .
.Sh COMPATIBILITY
This version of
.Fn getpgrp
differs from past Berkeley versions by not taking a
.Fa "pid_t pid"
argument.
This incompatibility is required by
.St -p1003.1-90 .
.Pp
From the
.St -p1003.1-90
Rationale:
.Pp
.Bx 4.3
provides a
.Fn getpgrp
function that returns the process group ID for a specified process.
Although this function is used to support job control, all known
job-control shells always specify the calling process with this
function.
Thus, the simpler
.At V
.Fn getpgrp
suffices, and the added complexity of the
.Bx 4.3
.Fn getpgrp
has been omitted from POSIX.1.
The old functionality is available from the
.Fn getpgid
function.
                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getpid.2                                     0100644 0001750 0001750 00000005367 12567450734 022236  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getpid.2,v 1.5 1995/02/27 12:33:12 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpid.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETPID 2
.Os BSD 4
.Sh NAME
.Nm getpid ,
.Nm getppid
.Nd get parent or calling process identification
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft pid_t
.Fo getpid
.Fa void
.Fc
.Ft pid_t
.Fo getppid
.Fa void
.Fc
.Sh DESCRIPTION
.Fn Getpid
returns
the process ID of
the calling process.
The ID is guaranteed to be unique and is
useful for constructing temporary file names.
.Pp
.Fn Getppid
returns the process ID of the parent
of the calling process. 
.Sh ERRORS
The
.Fn getpid
and
.Fn getppid
functions are always successful, and no return value is reserved to
indicate an error.
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <unistd.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr gethostid 2 ,
.Xr compat 5
.Sh STANDARDS
.Fn Getpid
and
.Fn getppid
conform to 
.St -p1003.1-88 .
                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getppid.2                                    0100644 0001750 0001750 00000000022 12567450734 022375  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getpid.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getpriority.2                                0100644 0001750 0001750 00000013325 12567450734 023334  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getpriority.2,v 1.4 1995/02/27 12:33:15 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpriority.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETPRIORITY 2
.Os BSD 4
.Sh NAME
.Nm getpriority ,
.Nm setpriority
.Nd get/set program scheduling priority
.Sh SYNOPSIS
.Fd #include <sys/resource.h>
.Ft int
.Fo getpriority
.Fa "int which"
.Fa "id_t who"
.Fc
.Ft int
.Fo setpriority
.Fa "int which"
.Fa "id_t who"
.Fa "int prio"
.Fc
.Sh DESCRIPTION
The scheduling priority of the process, process group, or user as indicated by
.Fa which
and
.Fa who
is obtained with the
.Fn getpriority
call and set with the
.Fn setpriority
call.
.Fa Which
is one of
.Dv PRIO_PROCESS ,
.Dv PRIO_PGRP ,
or
.Dv PRIO_USER ,
and 
.Fa who
is interpreted relative to 
.Fa which
(a process identifier for
.Dv PRIO_PROCESS ,
process group
identifier for
.Dv PRIO_PGRP ,
and a user ID for
.Dv PRIO_USER ) .
A zero value of
.Fa who
denotes the current process, process group, or user.
.Fa prio
is a value in the range -20 to 20.  The default priority is 0;
lower priorities cause more favorable scheduling.
.Pp
The
.Fn getpriority
call returns the highest priority (lowest numerical value)
enjoyed by any of the specified processes.
The
.Fn setpriority
call sets the priorities of all of the specified processes
to the specified value.  Only the super-user may lower priorities.
.Pp
Additionally, the current thread or process can be placed in a background state
by specifying PRIO_DARWIN_THREAD or PRIO_DARWIN_PROCESS for
.Fa which .
Only a value of zero (the current thread or process) is supported for
.Fa who
when setting or getting background state.
.Fa prio
is either 0 (to remove current thread from background status) or PRIO_DARWIN_BG
(to set current thread into background state).
When a thread or process is in a background state the scheduling priority is set
to the lowest value, disk IO is throttled (with behavior similar to using
.Xr setiopolicy_np 3
to set a throttleable policy), and network IO is throttled for
any sockets opened after going into background state.  Any previously opened
sockets are not affected.
The
.Fn getpriority
call returns 0 when current thread or process is not in background state or 1
when the current thread is in background state.  Any thread or process can set
itself into background state.
.Sh RETURN VALUES
Since
.Fn getpriority
can legitimately return the value -1, it is necessary
to clear the external variable
.Va errno
prior to the
call, then check it afterward to determine
if a -1 is an error or a legitimate value.
The
.Fn setpriority
call returns 0 if there is no error, or
-1 if there is.
.Sh ERRORS
.Fn Getpriority
and
.Fn setpriority
will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
.Fa Which
is not one of
.Dv PRIO_PROCESS ,
.Dv PRIO_PGRP ,
.Dv PRIO_USER ,
.Dv PRIO_DARWIN_THREAD ,
or
.Dv PRIO_DARWIN_PROCESS .
.\" ==========
.It Bq Er EINVAL
.Fa Who
is not a valid process, process group, or user ID.
.\" ==========
.It Bq Er EINVAL
.Fa Who
is not 0 when
.Fa which
is 
.Dv PRIO_DARWIN_THREAD
or
.Dv PRIO_DARWIN_PROCESS .
.\" ==========
.It Bq Er ESRCH
No process can be located using the 
.Fa which
and
.Fa who
values specified.
.El
.Pp
.Bl -tag -width Er
In addition to the errors indicated above,
.Fn setpriority
will fail if:
.\" ==========
.It Bq Er EACCES
A non super-user attempts to lower a process priority.
.\" ==========
.It Bq Er EPERM
A process is located,
but neither its effective nor real user ID
matches the effective user ID of the caller.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/resource.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Pp
.Ft int
.br
.Fo getpriority
.Fa "int which"
.Fa "int who"
.Fc ;
.Pp
.Ft int
.br
.Fo setpriority
.Fa "int which"
.Fa "int who"
.Fa "int value"
.Fc ;
.Pp
The type of
.Fa who
has changed.
.Sh SEE ALSO
.Xr nice 1 ,
.Xr fork 2 ,
.Xr setiopolicy_np 3 ,
.Xr compat 5 ,
.Xr renice 8
.Sh HISTORY
The
.Fn getpriority
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getrlimit.2                                  0100644 0001750 0001750 00000015350 12567450734 022753  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getrlimit.2,v 1.8 1995/10/12 15:40:58 jtc Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getrlimit.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETRLIMIT 2
.Os BSD 4
.Sh NAME
.Nm getrlimit ,
.Nm setrlimit
.Nd control maximum system resource consumption
.Sh SYNOPSIS
.Fd #include <sys/resource.h>
.Ft int
.Fo getrlimit
.Fa "int resource"
.Fa "struct rlimit *rlp"
.Fc
.Ft int
.Fo setrlimit
.Fa "int resource"
.Fa "const struct rlimit *rlp"
.Fc
.Sh DESCRIPTION
Limits on the consumption of system resources by the current process
and each process it creates may be obtained with the
.Fn getrlimit
call, and set with the
.Fn setrlimit
call.  
.Pp
The
.Fa resource
parameter is one of the following:
.Bl -tag -width RLIMIT_FSIZEAA
.\" ========
.It Li RLIMIT_CORE
The largest size (in bytes)
.Xr core
file that may be created.
.\" ========
.It Li RLIMIT_CPU
The maximum amount of cpu time (in seconds) to be used by
each process.
.\" ========
.It Li RLIMIT_DATA
The maximum size (in bytes) of the data segment for a process;
this defines how far a program may extend its break with the
.Xr sbrk 2
system call.
.\" ========
.It Li RLIMIT_FSIZE
The largest size (in bytes) file that may be created.
.\" ========
.It Li RLIMIT_MEMLOCK
The maximum size (in bytes) which a process may lock into memory
using the
.Xr mlock 2
function.
.\" ========
.It Li RLIMIT_NOFILE
The maximum number of open files for this process.
.\" ========
.It Li RLIMIT_NPROC
The maximum number of simultaneous processes for this user id.
.\" ========
.It Li RLIMIT_RSS
The maximum size (in bytes)
to which a process's resident set size may grow.
This imposes a limit on the amount of physical memory
to be given to a process;
if memory is tight, the system will prefer to take memory
from processes that are exceeding their declared resident set size.
.\" ========
.It Li RLIMIT_STACK
The maximum size (in bytes) of the stack segment for a process;
this defines how far a program's stack segment may be extended.
Stack extension is performed automatically by the system.
.El
.Pp
A resource limit is specified as a soft limit and a hard limit.  When a
soft limit is exceeded a process may receive a signal (for example, if
the cpu time or file size is exceeded), but it will be allowed to
continue execution until it reaches the hard limit (or modifies
its resource limit).  The 
.Em rlimit
structure is used to specify the hard and soft limits on a resource,
.Bd -literal -offset indent
struct rlimit {
	rlim_t	rlim_cur;	/* current (soft) limit */
	rlim_t	rlim_max;	/* hard limit */
};
.Ed
.Pp
Only the super-user may raise the maximum limits.  Other users
may only alter 
.Fa rlim_cur
within the range from 0 to 
.Fa rlim_max
or (irreversibly) lower
.Fa rlim_max .
.Pp
Because this information is stored in the per-process information,
this system call must be executed directly by the shell if it
is to affect all future processes created by the shell;
.Ic limit
is thus a built-in command to
.Xr csh 1
and
.Ic ulimit
is the
.Xr sh 1
equivalent.
.Pp
The system refuses to extend the data or stack space when the limits
would be exceeded in the normal way: a
.Xr break
call fails if the data space limit is reached.
When the stack limit is reached, the process receives
a segmentation fault
.Pq Dv SIGSEGV ;
if this signal is not
caught by a handler using the signal stack, this signal
will kill the process.
.Pp
A file I/O operation that would create a file larger that the process'
soft limit will cause the write to fail and a signal
.Dv SIGXFSZ
to be
generated; this normally terminates the process, but may be caught.  When
the soft cpu time limit is exceeded, a signal
.Dv SIGXCPU
is sent to the
offending process.
.Sh RETURN VALUES
A 0 return value indicates that the call succeeded, changing
or returning the resource limit.   A return value of -1 indicates
that an error occurred, and an error code is stored in the global
location
.Va errno .
.Sh ERRORS
The
.Fn getrlimit
and
.Fn setrlimit
system calls will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EFAULT
The address specified for
.Fa rlp
is invalid.
.\" ==========
.It Bq Er EINVAL
.Fa resource
is invalid.
.El
.Pp
The
.Fn setrlimit
call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
The specified limit is invalid
(e.g., RLIM_INFINITY or lower than rlim_cur).
.\" ==========
.It Bq Er EPERM
The limit specified would have raised the maximum limit value
and the caller is not the super-user.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/time.h>
.Fd #include <sys/resource.h>
.Pp
The include files
.In sys/types.h
and
.In sys/time.h
are necessary.
.Sh COMPATIBILITY
.Fn setrlimit
now returns with
.Va errno
set to EINVAL in places that historically succeeded.
It no longer accepts "rlim_cur = RLIM_INFINITY" for RLIM_NOFILE.
Use "rlim_cur = min(OPEN_MAX, rlim_max)".
.Sh SEE ALSO
.Xr csh 1 ,
.Xr sh 1 ,
.Xr quota 2 ,
.Xr sigaction 2 ,
.Xr sigaltstack 2 ,
.Xr sysctl 3 ,
.Xr compat 5
.Sh HISTORY
The
.Fn getrlimit
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getrusage.2                                  0100644 0001750 0001750 00000014223 12567450734 022737  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getrusage.2,v 1.4 1995/02/27 12:33:23 cgd Exp $
.\"
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getrusage.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETRUSAGE 2
.Os BSD 4
.Sh NAME
.Nm getrusage
.Nd get information about resource utilization
.Sh SYNOPSIS
.Fd #include <sys/resource.h>
.Pp
.Fd #define	RUSAGE_SELF	 0
.Fd #define	RUSAGE_CHILDREN	-1
.Ft int
.Fo getrusage
.Fa "int who"
.Fa "struct rusage *r_usage"
.Fc
.Sh DESCRIPTION
.Fn Getrusage
returns information describing the resources utilized by the current
process, or all its terminated child processes.
The
.Fa who
parameter is either
.Dv RUSAGE_SELF
or
.Dv RUSAGE_CHILDREN .
The buffer to which
.Fa r_usage
points will be filled in with
the following structure:
.Bd -literal
struct rusage {
        struct timeval ru_utime; /* user time used */
        struct timeval ru_stime; /* system time used */
        long ru_maxrss;          /* max resident set size */
        long ru_ixrss;           /* integral shared text memory size */
        long ru_idrss;           /* integral unshared data size */
        long ru_isrss;           /* integral unshared stack size */
        long ru_minflt;          /* page reclaims */
        long ru_majflt;          /* page faults */
        long ru_nswap;           /* swaps */
        long ru_inblock;         /* block input operations */
        long ru_oublock;         /* block output operations */
        long ru_msgsnd;          /* messages sent */
        long ru_msgrcv;          /* messages received */
        long ru_nsignals;        /* signals received */
        long ru_nvcsw;           /* voluntary context switches */
        long ru_nivcsw;          /* involuntary context switches */
};
.Ed
.Pp
The fields are interpreted as follows:
.Bl -tag -width ru_minfltaa
.It Fa ru_utime
the total amount of time spent executing in user mode.
.It Fa ru_stime
the total amount of time spent in the system executing on behalf
of the process(es).
.It Fa ru_maxrss
the maximum resident set size utilized (in bytes).
.It Fa ru_ixrss
an \*(lqintegral\*(rq value indicating the amount of memory used
by the text segment
that was also shared among other processes.  This value is expressed
in units of kilobytes * ticks-of-execution.
.It Fa ru_idrss
an integral value of the amount of unshared memory residing in the
data segment of a process (expressed in units of
kilobytes * ticks-of-execution).
.It Fa ru_isrss
an integral value of the amount of unshared memory residing in the
stack segment of a process (expressed in units of
kilobytes * ticks-of-execution).
.It Fa ru_minflt
the number of page faults serviced without any I/O activity; here
I/O activity is avoided by \*(lqreclaiming\*(rq a page frame from
the list of pages awaiting reallocation.
.It Fa ru_majflt
the number of page faults serviced that required I/O activity.
.It Fa ru_nswap
the number of times a process was \*(lqswapped\*(rq out of main
memory.
.It Fa ru_inblock
the number of times the file system had to perform input.
.It Fa ru_oublock
the number of times the file system had to perform output.
.It Fa ru_msgsnd
the number of IPC messages sent.
.It Fa ru_msgrcv
the number of IPC messages received.
.It Fa ru_nsignals
the number of signals delivered.
.It Fa ru_nvcsw
the number of times a context switch resulted due to a process
voluntarily giving up the processor before its time slice was
completed (usually to await availability of a resource).
.It Fa ru_nivcsw
the number of times a context switch resulted due to a higher
priority process becoming runnable or because the current process
exceeded its time slice.
.El
.Sh NOTES
The numbers 
.Fa ru_inblock
and 
.Fa ru_oublock
account only for real
I/O; data supplied by the caching mechanism is charged only
to the first process to read or write the data.
.Sh RETURN VALUES
.Rv -std getrusage
.Sh ERRORS
The
.Fn getrusage
system call will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
The address specified by the
.Fa r_usage
parameter is not in a valid part of the process address space.
.It Bq Er EINVAL
The
.Fa who
parameter is not a valid value.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/time.h>
.Fd #include <sys/resource.h>
.Pp
The include file
.In sys/time.h
is necessary.
.Sh SEE ALSO
.Xr gettimeofday 2 ,
.Xr wait 2 ,
.Xr compat 5
.Sh BUGS
There is no way to obtain information about a child process
that has not yet terminated.
.Sh HISTORY
The
.Fn getrusage
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getsid.2                                     0100644 0001750 0001750 00000004676 12567450734 022243  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1997 Peter Wemm <peter@FreeBSD.org>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/getsid.2,v 1.3.2.5 2001/12/14 18:34:00 ru Exp $
.\"
.Dd August 19, 1997
.Dt GETSID 2
.Os
.Sh NAME
.Nm getsid
.Nd get process session
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft pid_t
.Fo getsid
.Fa "pid_t pid"
.Fc
.Sh DESCRIPTION
The session ID of the process identified by
.Fa pid
is returned by
.Fn getsid .
If
.Fa pid
is zero,
.Fn getsid
returns the session ID of the current process.
.Sh RETURN VALUES
Upon successful completion, the function
.Fn getsid
returns the session ID of
the specified process; otherwise, it returns a value of -1 and
sets errno to indicate an error.
.Sh ERRORS
The
.Fn getsid
system call will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er ESRCH
There is no process with a process ID equal to
.Fa pid .
.El
.Pp
Note that an implementation may restrict this function call to
processes within the same session ID as the calling process.
.Sh SEE ALSO
.Xr getpgid 2 ,
.Xr getpgrp 2 ,
.Xr setpgid 2 ,
.Xr setsid 2 ,
.Xr termios 4
.Sh HISTORY
The
.Fn getsid
function call appeared in
.Fx 3.0 .
The
.Fn getsid
function call is derived from its usage in
.At V .
                                                                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getsockname.2                                0100644 0001750 0001750 00000006713 12567450734 023256  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getsockname.2,v 1.6 1995/10/12 15:41:00 jtc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getsockname.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETSOCKNAME 2
.Os BSD 4.2
.Sh NAME
.Nm getsockname
.Nd get socket name
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo getsockname
.Fa "int socket"
.Fa "struct sockaddr *restrict address"
.Fa "socklen_t *restrict address_len"
.Fc
.Sh DESCRIPTION
The
.Fn getsockname
function returns the current
.Fa address
for the specified socket. 
.Pp
The
.Fa address_len
parameter should be initialized to indicate
the amount of space pointed to by
.Fa address .
On return it contains the actual size of the address
returned (in bytes).
.Pp
The address is truncated if the buffer provided is too small.
.Sh RETURN VALUES
.Rv -std getsockname
.Sh ERRORS
The
.Fn getsockname
system call will succeed unless:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The argument
.Fa socket
is not a valid file descriptor.
.\" ==========
.It Bq Er EFAULT
The 
.Fa address
parameter points to memory not in a valid part of the
process address space.
.\" ==========
.It Bq Er EINVAL
.Fa socket
has been shut down.
.\" ==========
.It Bq Er ENOBUFS
Insufficient resources were available in the system
to perform the operation.
.\" ==========
.It Bq Er ENOTSOCK
The argument
.Fa socket
is not a socket (e.g., a plain file).
.\" ==========
.It Bq Er EOPNOTSUPP
.Fn getsockname
is not supported for the protocol in use by
.Fa socket .
.El
.Sh SEE ALSO
.Xr bind 2 ,
.Xr socket 2
.Sh BUGS
Names bound to sockets in the UNIX domain are inaccessible;
.Fn getsockname
returns a zero-length address.
.Sh HISTORY
The
.Fn getsockname
call appeared in
.Bx 4.2 .
                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getsockopt.2                                 0100644 0001750 0001750 00000033052 12567450734 023134  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getsockopt.2,v 1.7 1995/02/27 12:33:29 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getsockopt.2	8.3 (Berkeley) 4/19/94
.\"
.Dd April 19, 1994
.Dt GETSOCKOPT 2
.Os BSD 4.3r
.Sh NAME
.Nm getsockopt ,
.Nm setsockopt
.Nd get and set options on sockets
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo getsockopt
.Fa "int socket"
.Fa "int level"
.Fa "int option_name"
.Fa "void *restrict option_value"
.Fa "socklen_t *restrict option_len"
.Fc
.Ft int
.Fo setsockopt
.Fa "int socket"
.Fa "int level"
.Fa "int option_name"
.Fa "const void *option_value"
.Fa "socklen_t option_len"
.Fc
.Sh DESCRIPTION
.Fn Getsockopt
and
.Fn setsockopt
manipulate the
.Em options
associated with a socket.  Options may exist at multiple
protocol levels; they are always present at the uppermost
.Dq socket
level.
.Pp
When manipulating socket options the level at which the
option resides and the name of the option must be specified.
To manipulate options at the socket level,
.Fa level
is specified as
.Dv SOL_SOCKET .
To manipulate options at any
other level the protocol number of the appropriate protocol
controlling the option is supplied.  For example,
to indicate that an option is to be interpreted by the
.Tn TCP
protocol,
.Fa level
should be set to the protocol number of
.Tn TCP ;
see
.Xr getprotoent 3 .
.Pp
The parameters
.Fa option_value
and
.Fa option_len
are used to access option values for
.Fn setsockopt .
For
.Fn getsockopt
they identify a buffer in which the value for the
requested option(s) are to be returned.  For
.Fn getsockopt ,
.Fa option_len
is a value-result parameter, initially containing the
size of the buffer pointed to by
.Fa option_value ,
and modified on return to indicate the actual size of
the value returned.  If no option value is
to be supplied or returned,
.Fa option_value
may be NULL.
.Pp
.Fa option_name
and any specified options are passed uninterpreted to the appropriate
protocol module for interpretation.
The include file
.Ao Pa sys/socket.h Ac
contains definitions for
socket level options, described below.
Options at other protocol levels vary in format and
name; consult the appropriate entries in
section
4 of the manual.
.Pp
Most socket-level options utilize an
.Fa int
parameter for
.Fa option_value .
For
.Fn setsockopt ,
the parameter should be non-zero to enable a boolean option,
or zero if the option is to be disabled.
.Dv SO_LINGER
uses a
.Fa struct linger
parameter, defined in
.Ao Pa sys/socket.h Ac ,
which specifies the desired state of the option and the
linger interval (see below).
.Dv SO_SNDTIMEO
and
.Dv SO_RCVTIMEO
use a
.Fa struct timeval
parameter, defined in
.Ao Pa sys/time.h Ac .
.Pp
The following options are recognized at the socket level.
Except as noted, each may be examined with
.Fn getsockopt
and set with
.Fn setsockopt .
.Bl -column SO_OOBINLINE -offset indent
.It Dv SO_DEBUG Ta "enables recording of debugging information"
.It Dv SO_REUSEADDR Ta "enables local address reuse"
.It Dv SO_REUSEPORT Ta "enables duplicate address and port bindings"
.It Dv SO_KEEPALIVE Ta "enables keep connections alive"
.It Dv SO_DONTROUTE Ta "enables routing bypass for outgoing messages"
.It Dv SO_LINGER  Ta "linger on close if data present"
.It Dv SO_BROADCAST Ta "enables permission to transmit broadcast messages"
.It Dv SO_OOBINLINE Ta "enables reception of out-of-band data in band"
.It Dv SO_SNDBUF Ta "set buffer size for output"
.It Dv SO_RCVBUF Ta "set buffer size for input"
.It Dv SO_SNDLOWAT Ta "set minimum count for output"
.It Dv SO_RCVLOWAT Ta "set minimum count for input"
.It Dv SO_SNDTIMEO Ta "set timeout value for output"
.It Dv SO_RCVTIMEO Ta "set timeout value for input"
.It Dv SO_TYPE Ta "get the type of the socket (get only)"
.It Dv SO_ERROR Ta "get and clear error on the socket (get only)"
.It Dv SO_NOSIGPIPE Ta "do not generate SIGPIPE, instead return EPIPE"
.It Dv SO_NREAD Ta "number of bytes to be read (get only)"
.It Dv SO_NWRITE Ta "number of bytes written not yet sent by the protocol (get only)"
.It Dv SO_LINGER_SEC Ta "linger on close if data present with timeout in seconds"
.El
.Pp
.Dv SO_DEBUG
enables debugging in the underlying protocol modules.
.Pp
.Dv SO_REUSEADDR
indicates that the rules used in validating addresses supplied
in a
.Xr bind 2
call should allow reuse of local addresses.
.Pp
.Dv SO_REUSEPORT
allows completely duplicate bindings by multiple processes
if they all set
.Dv SO_REUSEPORT
before binding the port.
This option permits multiple instances of a program to each
receive UDP/IP multicast or broadcast datagrams destined for the bound port.
.Pp
.Dv SO_KEEPALIVE
enables the
periodic transmission of messages on a connected socket.  Should the
connected party fail to respond to these messages, the connection is
considered broken and processes using the socket are notified via a
.Dv SIGPIPE
signal when attempting to send data.
.Pp
.Dv SO_DONTROUTE
indicates that outgoing messages should
bypass the standard routing facilities.  Instead, messages are directed
to the appropriate network interface according to the network portion
of the destination address.
.Pp
.Dv SO_LINGER
controls the action taken when unsent messages
are queued on socket and a 
.Xr close 2
is performed.
If the socket promises reliable delivery of data and
.Dv SO_LINGER is set,
the system will block the process on the 
.Xr close
attempt until it is able to transmit the data or until it decides it
is unable to deliver the information (a timeout period, termed the
linger interval, is specified in the
.Fn setsockopt
call when
.Dv SO_LINGER
is requested). 
If
.Dv SO_LINGER
is disabled and a 
.Xr close
is issued, the system will process the close in a manner that allows
the process to continue as quickly as possible.
.Pp
.Dv SO_LINGER_SEC
is the same option as 
.Dv SO_LINGER 
except the linger time is in seconds for 
.Dv SO_LINGER_SEC .
.Pp
The option
.Dv SO_BROADCAST
requests permission to send broadcast datagrams
on the socket.
Broadcast was a privileged operation in earlier versions of the system.
.Pp
With protocols that support out-of-band data, the
.Dv SO_OOBINLINE
option
requests that out-of-band data be placed in the normal data input queue
as received; it will then be accessible with
.Xr recv
or
.Xr read
calls without the
.Dv MSG_OOB
flag.
Some protocols always behave as if this option is set.
.Pp
.Dv SO_SNDBUF
and
.Dv SO_RCVBUF
are options to adjust the normal
buffer sizes allocated for output and input buffers, respectively.
The buffer size may be increased for high-volume connections,
or may be decreased to limit the possible backlog of incoming data.
The system places an absolute limit on these values.
.Pp
.Dv SO_SNDLOWAT
is an option to set the minimum count for output operations.
Most output operations process all of the data supplied by the call,
delivering data to the protocol for transmission
and blocking as necessary for flow control.
Nonblocking output operations will process as much data as permitted
(subject to flow control) without blocking,
but will process no data if flow control
does not allow the smaller of the low-water mark value
or the entire request to be processed.
A
.Xr select 2
operation testing the ability to write to a socket will return true
only if the low-water mark amount could be processed.
The default value for
.Dv SO_SNDLOWAT
is set to a convenient size for network efficiency, often 2048.
.Pp
.Dv SO_RCVLOWAT
is an option to set the minimum count for input operations.
In general, receive calls will block until any (non-zero) amount of data
is received, then return with the smaller of the amount available
or the amount requested.
The default value for
.Dv SO_RCVLOWAT
is 1.
If 
.Dv SO_RCVLOWAT
is set to a larger value, blocking receive calls
normally wait until they have received the smaller
of the low-water mark value or the requested amount.
Receive calls may still return less than the low-water mark
if an error occurs, a signal is caught,
or the type of data next in the receive queue
is different than that returned.
.Pp
.Dv SO_SNDTIMEO
is an option to set a timeout value for output operations.
It accepts a
.Fa struct timeval
parameter with the number of seconds and microseconds
used to limit waits for output operations to complete.
If a send operation has blocked for this much time,
it returns with a partial count
or with the error
.Er EWOULDBLOCK
if no data were sent.
In the current implementation, this timer is restarted each time additional
data are delivered to the protocol,
implying that the limit applies to output portions ranging in size
from the low-water mark to the high-water mark for output.
.Pp
.Dv SO_RCVTIMEO
is an option to set a timeout value for input operations.
It accepts a
.Fa struct timeval
parameter with the number of seconds and microseconds
used to limit waits for input operations to complete.
In the current implementation, this timer is restarted each time additional
data are received by the protocol,
and thus the limit is in effect an inactivity timer.
If a receive operation has been blocked for this much time without
receiving additional data, it returns with a short count
or with the error
.Er EWOULDBLOCK
if no data were received.
The struct timeval parameter must represent a positive time interval;
otherwise,
.Fn setsockopt 
returns with the error
.Er EDOM .
.Pp
.Dv SO_NOSIGPIPE is an option that prevents SIGPIPE from being raised 
when a write fails on a socket to which there is no reader; 
instead, the write to the socket returns with the error 
.Er EPIPE
when there is no reader.
.Pp
Finally,
.Dv SO_TYPE ,
.Dv SO_ERROR ,
.Dv SO_NREAD , and
.Dv SO_NWRITE
are options used only with
.Fn getsockopt .
.Pp
.Dv SO_TYPE
returns the type of the socket, such as
.Dv SOCK_STREAM ;
it is useful for servers that inherit sockets on startup.
.Pp
.Dv SO_ERROR
returns any pending error on the socket and clears
the error status.
It may be used to check for asynchronous errors on connected
datagram sockets or for other asynchronous errors.
.Pp
.Dv SO_NREAD
returns the amount of data in the input buffer that is available to be received. 
For datagram oriented sockets,
.Dv SO_NREAD
returns the size of the first packet -- this differs from the 
.Fn ioctl 
command 
.Dv FIONREAD 
that returns the total amount of data available.
.Pp
.Dv SO_NWRITE 
returns the amount of data in the output buffer not yet sent by the protocol.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn getsockopt
and
.Fn setsockopt
system calls will succeed unless:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
The argument
.Fa socket
is not a valid file descriptor.
.\" ==========
.It Bq Er EFAULT
The address pointed to by 
.Fa option_value
is not in a valid part of the process address space.
For
.Fn getsockopt ,
this error may also be returned if
.Fa option_len
is not in a valid part of the process address space.
.\" ==========
.It Bq Er EINVAL
The option is invalid at the level indicated.
.\" ==========
.It Bq Er ENOBUFS
Insufficient system resources available for the call to complete.
.\" ==========
.It Bq Er ENOMEM
Insufficient memory available for the system call to complete.
.\" ==========
.It Bq Er ENOPROTOOPT
The option is unknown at the level indicated.
.\" ==========
.It Bq Er ENOTSOCK
The argument
.Fa socket
is not a socket (e.g., a plain file).
.El
.Pp
The
.Fn setsockopt
system call will succeed unless:
.Bl -tag -width Er
.\" ==========
.It Bq Er EDOM
The argument
.Fa option_value
is out of bounds. 
.\" ==========
.It Bq Er EISCONN
.Fa socket
is already connected
and a specified option cannot be set
while this is the case.
.\" ==========
.It Bq Er EINVAL
The socket has been shut down.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr socket 2 ,
.Xr bind 2 ,
.Xr ioctl 2 ,
.Xr getprotoent 3 ,
.Xr protocols 5
.Sh BUGS
Several of the socket options should be handled at lower levels of the system.
.Sh HISTORY
The
.Fn getsockopt
system call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/gettimeofday.2                               0100644 0001750 0001750 00000011514 12567450734 023432  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$OpenBSD: gettimeofday.2,v 1.5 1997/03/16 01:18:49 flipk Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)gettimeofday.2	8.2 (Berkeley) 5/26/95
.\"
.Dd August 5, 2008
.Dt GETTIMEOFDAY 2
.Os BSD 4
.Sh NAME
.Nm gettimeofday ,
.Nm settimeofday
.Nd get/set date and time
.Sh SYNOPSIS
.Fd #include <sys/time.h>
.Ft int
.Fo gettimeofday
.Fa "struct timeval *restrict tp"
.Fa "void *restrict tzp"
.Fc
.Ft int
.Fo settimeofday
.Fa "const struct timeval *tp"
.Fa "const struct timezone *tzp"
.Fc
.Sh DESCRIPTION
.Pp
The system's notion of the current Greenwich time and the current time
zone is obtained with the
.Fn gettimeofday
call, and set with the
.Fn settimeofday
call.  The time is expressed in seconds and microseconds
since midnight (0 hour), January 1, 1970.  The resolution of the system
clock is hardware dependent, and the time may be updated continuously or
in ``ticks.''  If
.Fa tp
is NULL
and
.Fa tzp
is non-NULL,
.Fn gettimeofday
will populate the timezone struct in 
.Fa tzp .
If 
.Fa tp
is non-NULL and
.Fa tzp 
is NULL, then only the timeval struct in
.Fa tp
is populated. If both
.Fa tp
and
.Fa tzp
are NULL, nothing is returned.
.Pp
The structures pointed to by
.Fa tp
and
.Fa tzp
are defined in 
.Ao Pa sys/time.h Ac
as:
.Pp
.Bd -literal

struct timeval {
	time_t       tv_sec;   /* seconds since Jan. 1, 1970 */
	suseconds_t  tv_usec;  /* and microseconds */
};

struct timezone {
	int	tz_minuteswest; /* of Greenwich */
	int	tz_dsttime;	/* type of dst correction to apply */
};

.Ed
.Pp
The 
.Fa timeval
structure specifies a time value in seconds and microseconds.
The values in
.Fa timeval
are opaque types whose length may vary on different machines;
depending on them to have any given length may lead to errors.
.Pp
The 
.Fa timezone
structure indicates the local time zone
(measured in minutes of time westward from Greenwich),
and a flag that, if nonzero, indicates that
Daylight Saving time applies locally during
the appropriate part of the year.
.Pp
Only the super-user may set the time of day or time zone.
If the system securelevel is greater than 1 (see
.Xr launchd 8 ),
the time may only be advanced.
This limitation is imposed to prevent a malicious super-user
from setting arbitrary time stamps on files.
The system time can still be adjusted backwards using the
.Xr adjtime 2
system call even when the system is secure.
.Sh RETURN
A 0 return value indicates that the call succeeded.
A -1 return value indicates an error occurred, and in this
case an error code is stored into the global variable
.Va errno .
.Sh ERRORS
The following error codes may be set in
.Va errno :
.Bl -tag -width [EFAULT]
.It Bq Er EFAULT
An argument address referenced invalid memory.
.It Bq Er EPERM
A user other than the super-user attempted to set the time.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/time.h>
.Pp
.Ft int
.br
.Fo gettimeofday
.Fa "struct timeval *tp"
.Fa "struct timezone *tzp"
.Fc ;
.Pp
The type of
.Fa tzp
has changed.
.Sh SEE ALSO
.Xr date 1 ,
.Xr adjtime 2 ,
.Xr ctime 3 ,
.Xr compat 5 ,
.Xr timed 8
.Sh HISTORY
The
.Fn gettimeofday
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getuid.2                                     0100644 0001750 0001750 00000005715 12567450734 022240  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: getuid.2,v 1.6 1995/02/27 12:33:37 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getuid.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt GETUID 2
.Os BSD 4
.Sh NAME
.Nm geteuid ,
.Nm getuid
.Nd get user identification
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft uid_t
.Fo geteuid
.Fa void
.Fc
.Ft uid_t
.Fo getuid
.Fa void
.Fc
.Sh DESCRIPTION
The
.Fn getuid
function returns the real user ID of the calling process.
The
.Fn geteuid
function
returns the effective user ID of the calling process.
.Pp
The real user ID is that of the user who has invoked the program.
As the effective user ID
gives the process additional permissions during
execution of
.Dq Em set-user-ID
mode processes,
.Fn getuid
is used to determine the real-user-id of the calling process.
.Sh ERRORS
The
.Fn getuid
and
.Fn geteuid
functions are always successful, and no return value is reserved to
indicate an error.
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <unistd.h>
.Pp
The include file
.In sys/types.h
is necessary for both functions.
.Sh SEE ALSO
.Xr getgid 2 ,
.Xr setreuid 2 ,
.Xr compat 5
.Sh STANDARDS
.Fn Geteuid
and
.Fn getuid
functions conform to
.St -p1003.1-88 .
                                                   osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/getxattr.2                                   0100644 0001750 0001750 00000011270 12567450734 022612  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2004 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\"
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\"
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\"
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd Oct 19, 2004
.Dt GETXATTR 2
.Os "Mac OS X"
.Sh NAME
.Nm getxattr,
.Nm fgetxattr
.Nd get an extended attribute value
.Sh SYNOPSIS
.Fd #include <sys/xattr.h>
.Ft ssize_t
.Fn getxattr "const char *path" "const char *name" "void *value" "size_t size" "u_int32_t position" "int options"
.Ft ssize_t
.Fn fgetxattr "int fd" "const char *name" "void *value" "size_t size" "u_int32_t position" "int options"
.Sh DESCRIPTION
Extended attributes extend the basic attributes of files and
directories in the file system.  They are stored as name:data pairs
associated with file system objects (files, directories, symlinks, etc).
.Pp
The
.Fn getxattr
function retrieves up to
.Fa size
bytes of data from the extended attribute identified by
.Fa name
associated with
.Fa path
into the pre-allocated buffer pointed to by
.Fa value .
The function returns the number of bytes of data retrieved.
.Pp
An extended attribute's
.Fa name
is a simple NULL-terminated UTF-8 string.
.Fa position
specifies an offset within the extended attribute.  In the current
implementation, this argument is only used with the resource fork attribute.
For all other extended attributes, this parameter is reserved and should
be zero.
.Pp
On success,
.Fa value
contains the data associated with
.Fa name .
When
.Fa value
is set to NULL,
.Fn getxattr
returns current size of the named attribute.  This facility can be used
to determine the size of a buffer sufficiently large to hold the data
currently associated with the attribute.
.Pp
.Fa options
specify options for retrieving extended attributes:
.Pp
.Bl -tag -width XATTR_NOFOLLOW
.It Dv XATTR_NOFOLLOW
do not follow symbolic links.
.Fn getxattr
normally returns information from the target of
.Fa path
if it is a symbolic link.  With this option,
.Fn getxattr
will return extended attribute data from the symbolic link instead.
.It Dv XATTR_SHOWCOMPRESSION
.Fn getxattr
and 
.Fn fgetxattr
will return HFS Plus Compression extended attribute
.Fa name
(if present) for the file referred to by
.Fa path
or
.Fa fd .
.El
.Pp
.Fn fgetxattr
is identical to
.Fn getxattr ,
except that it retrieves extended attribute data from the open file
referenced by the file descriptor
.Fa fd .
.Sh RETURN VALUES
On success, the size of the extended attribute data is returned.  On
failure, -1 is returned and the global variable
.Va errno
is set as follows.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ENOATTR
The extended attribute does not exist.
.It Bq Er ENOTSUP
The file system does not support extended attributes or has the feature
disabled.
.It Bq Er ERANGE
.Fa value
(as indicated by
.Fa size )
is too small to hold the extended attribute data.
.It Bq Er EPERM
The named attribute is not permitted for this type of object.
.It Bq Er EINVAL
.Fa name
is invalid or
.Fa options
has an unsupported bit set.
.It Bq Er EISDIR
.Fa path
or
.Fa fd
do not refer to a regular file and the attribute in question is only
applicable to files.  Similar to EPERM.
.It Bq Er ENOTDIR
A component of
.Fa path 's
prefix is not a directory.
.It Bq Er ENAMETOOLONG
The length of
.Fa name
exceeds
.Dv XATTR_MAXNAMELEN
UTF-8 bytes, or a component of
.Fa path
exceeds
.Dv NAME_MAX
characters, or the entire
.Fa path
exceeds
.Dv PATH_MAX
characters.
.It Bq Er EACCES
Search permission is denied for a component of
.Fa path
or the attribute is not allowed to be read (e.g. an ACL prohibits reading
the attributes of this file).
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EFAULT
.Fa path
or
.Fa name
points to an invalid address.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr listxattr 2 ,
.Xr removexattr 2 ,
.Xr setxattr 2
.Sh HISTORY
.Fn getxattr
and
.Fn fgetxattr
first appeared in Mac OS X 10.4.
                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/i386_get_ldt.2                               0100644 0001750 0001750 00000010456 12567450734 023150  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)fork.2	6.5 (Berkeley) 3/10/91
.\" $FreeBSD: /repoman/r/ncvs/src/lib/libc/i386/sys/i386_get_ldt.2,v 1.21 2004/07/02 19:07:30 ru Exp $
.\"
.Dd September 20, 1993
.Dt I386_GET_LDT 2
.Os
.Sh NAME
.Nm i386_get_ldt ,
.Nm i386_set_ldt
.Nd manage i386 per-process Local Descriptor Table entries
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In architecture/i386/table.h
.In i386/user_ldt.h
.Ft int
.Fn i386_get_ldt "int start_sel" "union ldt_entry *descs" "int num_sels"
.Ft int
.Fn i386_set_ldt "int start_sel" "union ldt_entry *descs" "int num_sels"
.Sh DESCRIPTION
The
.Fn i386_get_ldt
system call
will return the list of i386 descriptors that the process has in its
LDT.
The
.Fn i386_set_ldt
system call
will set a list of i386 descriptors for the current process in its
LDT.
Both routines accept a starting selector number
.Fa start_sel ,
an array of memory that
will contain the descriptors to be set or returned
.Fa descs ,
and the number of entries to set or return
.Fa num_sels .
.Pp
The argument
.Fa descs
can be either code_desc_t, data_desc_t or call_gate_t and are defined in
.In architecture/i386/desc.h .
These structures are defined by the architecture
as disjoint bit-fields, so care must be taken in constructing them.
.Pp
If
.Fa start_sel
is
.Em LDT_AUTO_ALLOC ,
.Fa num_sels
is 1 and the descriptor pointed to by
.Fa descs
is legal, then
.Fn i386_set_ldt
will allocate a descriptor and return its
selector number.
.Pp
If
.Fa num_descs
is 1,
.Fa start_sels
is valid, and
.Fa descs
is NULL, then
.Fn i386_set_ldt
will free that descriptor
(making it available to be reallocated again later).
.Pp
If
.Fa num_descs
is 0,
.Fa start_sels
is 0 and
.Fa descs
is NULL then, as a special case,
.Fn i386_set_ldt
will free all descriptors.
.Sh RETURN VALUES
Upon successful completion,
.Fn i386_get_ldt
returns the number of descriptors currently in the LDT.
The
.Fn i386_set_ldt
system call
returns the first selector set.
In the case when a descriptor is allocated by the kernel, its number will
be returned.
Otherwise, a value of -1 is returned and the global
variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn i386_get_ldt
and
.Fn i386_set_ldt
system calls
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
An inappropriate value was used for
.Fa start_sel
or
.Fa num_sels .
.It Bq Er EACCES
The caller attempted to use a descriptor that would
circumvent protection or cause a failure.
.El
.Sh SEE ALSO
i386 Microprocessor Programmer's Reference Manual, Intel
.Sh WARNING
You can really hose your process using this.
                                                                                                                                                                                                                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/i386_set_ldt.2                               0100644 0001750 0001750 00000000030 12567450735 023150  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/i386_get_ldt.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/intro.2                                      0100644 0001750 0001750 00000067764 12567450735 022127  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: intro.2,v 1.6 1995/02/27 12:33:41 cgd Exp $
.\"
.\" Copyright (c) 1980, 1983, 1986, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)intro.2	8.3 (Berkeley) 12/11/93
.\"
.Dd March 18, 2015
.Dt INTRO 2
.Os BSD 4
.Sh NAME
.Nm intro
.Nd introduction to system calls and error numbers
.Sh SYNOPSIS
.Fd #include <sys/errno.h>
.Sh DESCRIPTION
This section provides an overview of the system calls,
their error returns, and other common definitions and concepts.
.\".Pp
.\".Sy System call restart
.\".Pp
.\"<more later...>
.Sh DIAGNOSTICS
Nearly all of the system calls provide an error number in the external
variable
.Va errno ,
which is defined as:
.Pp
.Dl extern int errno
.Pp
When a system call detects an error,
it returns an integer value
indicating failure (usually -1)
and sets the variable
.Va errno
accordingly.
<This allows interpretation of the failure on receiving
a -1 and to take action accordingly.>
Successful calls never set
.Va errno ;
once set, it remains until another error occurs.
It should only be examined after an error.
Note that a number of system calls overload the meanings of these
error numbers, and that the meanings must be interpreted according
to the type and circumstances of the call.
.Pp
The following is a complete list of the errors and their
names as given in
.Aq Pa sys/errno.h .
.Bl -hang -width Ds
.It Er 0 Em "Error 0" .
Not used.
.It Er 1 EPERM Em "Operation not permitted" .
An attempt was made to perform an operation limited to processes
with appropriate privileges or to the owner of a file or other
resources.
.It Er 2 ENOENT Em "No such file or directory" .
A component of a specified pathname did not exist, or the 
pathname was an empty string.
.It Er 3 ESRCH Em "No such process" .
No process could be found corresponding to that specified by the given
process ID.
.It Er 4 EINTR Em "Interrupted function call" .
An asynchronous signal (such as
.Dv SIGINT
or
.Dv SIGQUIT )
was caught by the process during the execution of an interruptible
function. If the signal handler performs a normal return, the
interrupted function call will seem to have returned the error condition.
.It Er 5 EIO Em "Input/output error" .
Some physical input or output error occurred.
This error will not be reported until a subsequent operation on the same file
descriptor and may be lost (over written) by any subsequent errors.
.It Er 6 ENXIO Em "\&No such device or address" .
Input or output on a special file referred to a device that did not
exist, or
made a request beyond the limits of the device.
This error may also occur when, for example,
a tape drive is not online or no disk pack is
loaded on a drive.
.It Er 7 E2BIG Em "Arg list too long" .
The number of bytes used for the argument and environment
list of the new process exceeded the limit
.Dv NCARGS
(specified in
.Aq Pa sys/param.h ) .
.It Er 8 ENOEXEC Em "Exec format error" .
A request was made to execute a file
that, although it has the appropriate permissions,
was not in the format required for an
executable file.
.It Er 9 EBADF Em "Bad file descriptor" .
A file descriptor argument was out of range, referred to no open file,
or a read (write) request was made to a file that was only open for
writing (reading).
.It Er 10 ECHILD Em "\&No child processes" .
A
.Xr wait
or
.Xr waitpid
function was executed by a process that had no existing or unwaited-for
child processes.
.It Er 11 EDEADLK Em "Resource deadlock avoided" .
An attempt was made to lock a system resource that
would have resulted in a deadlock situation.
.It Er 12 ENOMEM Em "Cannot allocate memory" .
The new process image required more memory than was allowed by the hardware
or by system-imposed memory management constraints.
A lack of swap space is normally temporary; however,
a lack of core is not.
Soft limits may be increased to their corresponding hard limits.
.It Er 13 EACCES Em "Permission denied" .
An attempt was made to access a file in a way forbidden
by its file access permissions.
.It Er 14 EFAULT Em "Bad address" .
The system detected an invalid address in attempting to
use an argument of a call.
.It Er 15 ENOTBLK Em "Not a block device" .
A block device operation was attempted on a non-block device or file.
.It Er 16 EBUSY Em "Resource busy" .
An attempt to use a system resource which was in use at the time
in a manner which would have conflicted with the request.
.It Er 17 EEXIST Em "File exists" .
An existing file was mentioned in an inappropriate context,
for instance, as the new link name in a
.Xr link
function.
.It Er 18 EXDEV Em "Improper link" .
A hard link to a file on another file system
was attempted.
.It Er 19 ENODEV Em "Operation not supported by device" .
An attempt was made to apply an inappropriate
function to a device,
for example,
trying to read a write-only device such as a printer.
.It Er 20 ENOTDIR Em "Not a directory" .
A component of the specified pathname existed, but it was
not a directory, when a directory was expected.
.It Er 21 EISDIR Em "Is a directory" .
An attempt was made to open a directory with write mode specified.
.It Er 22 EINVAL Em "Invalid argument" .
Some invalid argument was supplied. (For example,
specifying an undefined signal to a
.Xr signal
or
.Xr kill
function).
.It Er 23 ENFILE Em "Too many open files in system" .
Maximum number of file descriptors allowable on the system
has been reached and a requests for an open cannot be satisfied
until at least one has been closed.
.It Er 24 EMFILE Em "Too many open files" .
<As released, the limit on the number of
open files per process is 64.>
.Xr Getdtablesize 2
will obtain the current limit.
.It Er 25 ENOTTY Em "Inappropriate ioctl for device" .
A control function (see
.Xr ioctl 2 )
was attempted for a file or
special device for which the operation was inappropriate.
.It Er 26 ETXTBSY Em "Text file busy" .
The new process was a pure procedure (shared text) file
which was open for writing by another process, or
while the pure procedure file was being executed an
.Xr open
call requested write access.
.It Er 27 EFBIG Em "File too large" .
The size of a file exceeded the maximum (about
.if t 2\u\s-231\s+2\d
.if n 2.1E9
bytes on some filesystems including UFS,
.if t 2\u\s-231\s+2\d
.if n 1.8E19
bytes on HFS+ and others).
.It Er 28 ENOSPC Em "Device out of space" .
A
.Xr write
to an ordinary file, the creation of a
directory or symbolic link, or the creation of a directory
entry failed because no more disk blocks were available
on the file system, or the allocation of an inode for a newly
created file failed because no more inodes were available
on the file system.
.It Er 29 ESPIPE Em "Illegal seek" .
An
.Xr lseek
function was issued on a socket, pipe or
.Tn FIFO .
.It Er 30 EROFS Em "Read-only file system" .
An attempt was made to modify a file or directory
was made
on a file system that was read-only at the time.
.It Er 31 EMLINK Em "Too many links" .
Maximum allowable hard links to a single file has been exceeded (limit
of 32767 hard links per file).
.It Er 32 EPIPE Em "Broken pipe" .
A write on a pipe, socket or
.Tn FIFO
for which there is no process
to read the data.
.It Er 33 EDOM Em "Numerical argument out of domain" .
A numerical input argument was outside the defined domain of the mathematical
function.
.It Er 34 ERANGE Em "Numerical result out of range" .
A numerical result of the function was too large to fit in the
available space (perhaps exceeded precision).
.It Er 35 EAGAIN Em "Resource temporarily unavailable" .
This is a temporary condition and later calls to the
same routine may complete normally.
.It Er 36 EINPROGRESS Em "Operation now in progress" .
An operation that takes a long time to complete (such as
a
.Xr connect 2 or
.Xr connectx 2 )
was attempted on a non-blocking object (see
.Xr fcntl 2 ) .
.It Er 37 EALREADY Em "Operation already in progress" .
An operation was attempted on a non-blocking object that already
had an operation in progress.
.It Er 38 ENOTSOCK Em "Socket operation on non-socket" .
Self-explanatory.
.It Er 39 EDESTADDRREQ Em "Destination address required" .
A required address was omitted from an operation on a socket.
.It Er 40 EMSGSIZE Em "Message too long" .
A message sent on a socket was larger than the internal message buffer
or some other network limit.
.It Er 41 EPROTOTYPE Em "Protocol wrong type for socket" .
A protocol was specified that does not support the semantics of the
socket type requested. For example, you cannot use the
.Tn ARPA
Internet
.Tn UDP
protocol with type
.Dv SOCK_STREAM .
.It Er 42 ENOPROTOOPT Em "Protocol not available" .
A bad option or level was specified in a
.Xr getsockopt 2
or
.Xr setsockopt 2
call.
.It Er 43 EPROTONOSUPPORT Em "Protocol not supported" .
The protocol has not been configured into the
system or no implementation for it exists.
.It Er 44 ESOCKTNOSUPPORT Em "Socket type not supported" .
The support for the socket type has not been configured into the
system or no implementation for it exists.
.It Er 45 ENOTSUP Em "Not supported" .
The attempted operation is not supported for the type of object referenced.
.It Er 46 EPFNOSUPPORT Em "Protocol family not supported" .
The protocol family has not been configured into the
system or no implementation for it exists.
.It Er 47 EAFNOSUPPORT Em "Address family not supported by protocol family" .
An address incompatible with the requested protocol was used.
For example, you shouldn't necessarily expect to be able to use
.Tn NS
addresses with
.Tn ARPA
Internet protocols.
.It Er 48 EADDRINUSE Em "Address already in use" .
Only one usage of each address is normally permitted.
.It Er 49 EADDRNOTAVAIL Em "Cannot assign requested address" .
Normally results from an attempt to create a socket with an
address not on this machine.
.It Er 50 ENETDOWN Em "Network is down" .
A socket operation encountered a dead network.
.It Er 51 ENETUNREACH Em "Network is unreachable" .
A socket operation was attempted to an unreachable network.
.It Er 52 ENETRESET Em "Network dropped connection on reset" .
The host you were connected to crashed and rebooted.
.It Er 53 ECONNABORTED Em "Software caused connection abort" .
A connection abort was caused internal to your host machine.
.It Er 54 ECONNRESET Em "Connection reset by peer" .
A connection was forcibly closed by a peer.  This normally
results from a loss of the connection on the remote socket
due to a timeout or a reboot.
.It Er 55 ENOBUFS Em "\&No buffer space available" .
An operation on a socket or pipe was not performed because
the system lacked sufficient buffer space or because a queue was full.
.It Er 56 EISCONN Em "Socket is already connected" .
A
.Xr connect
or
.Xr connectx
request was made on an already connected socket; or,
a
.Xr sendto
or
.Xr sendmsg
request on a connected socket specified a destination
when already connected.
.It Er 57 ENOTCONN Em "Socket is not connected" .
An request to send or receive data was disallowed because
the socket was not connected and (when sending on a datagram socket)
no address was supplied.
.It Er 58 ESHUTDOWN Em "Cannot send after socket shutdown" .
A request to send data was disallowed because the socket
had already been shut down with a previous
.Xr shutdown 2
call.
.It Er 60 ETIMEDOUT Em "Operation timed out" .
A
.Xr connect ,
.Xr connectx
or
.Xr send
request failed because the connected party did not
properly respond after a period of time.  (The timeout
period is dependent on the communication protocol.)
.It Er 61 ECONNREFUSED Em "Connection refused" .
No connection could be made because the target machine actively
refused it.  This usually results from trying to connect
to a service that is inactive on the foreign host.
.It Er 62 ELOOP Em "Too many levels of symbolic links" .
A path name lookup involved more than 8 symbolic links.
.It Er 63 ENAMETOOLONG Em "File name too long" .
A component of a path name exceeded 255
.Pq Dv MAXNAMELEN
characters, or an entire
path name exceeded 1023
.Pq Dv MAXPATHLEN Ns -1
characters.
.It Er 64 EHOSTDOWN Em "Host is down" .
A socket operation failed because the destination host was down.
.It Er 65 EHOSTUNREACH Em "No route to host" .
A socket operation was attempted to an unreachable host.
.It Er 66 ENOTEMPTY Em "Directory not empty" .
A directory with entries other than
.Ql \&.
and
.Ql \&..
was supplied to a remove directory or rename call.
.It Er 67 EPROCLIM Em "Too many processes" .
.It Er 68 EUSERS Em "Too many users" .
The quota system ran out of table entries.
.It Er 69 EDQUOT Em "Disc quota exceeded" .
A 
.Xr write
to an ordinary file, the creation of a
directory or symbolic link, or the creation of a directory
entry failed because the user's quota of disk blocks was
exhausted, or the allocation of an inode for a newly
created file failed because the user's quota of inodes
was exhausted.
.It Er 70 ESTALE Em "Stale NFS file handle" .
An attempt was made to access an open file (on an
.Tn NFS
filesystem)
which is now unavailable as referenced by the file descriptor.  
This may indicate the file was deleted on the
.Tn NFS 
server or some 
other catastrophic event occurred.
.It Er 72 EBADRPC Em "RPC struct is bad" .
Exchange of
.Tn RPC
information was unsuccessful.
.It Er 73 ERPCMISMATCH Em "RPC version wrong" .
The version of
.Tn RPC
on the remote peer is not compatible with
the local version.
.It Er 74 EPROGUNAVAIL Em "RPC prog. not avail" .
The requested program is not registered on the remote host.
.It Er 75 EPROGMISMATCH Em "Program version wrong" .
The requested version of the program is not available 
on the remote host
.Pq Tn RPC .
.It Er 76 EPROCUNAVAIL Em "Bad procedure for program" .
An
.Tn RPC
call was attempted for a procedure which doesn't exist
in the remote program.
.It Er 77 ENOLCK Em "No locks available" .
A system-imposed limit on the number of simultaneous file 
locks was reached.
.It Er 78 ENOSYS Em "Function not implemented" .
Attempted a system call that is not available on this 
system.
.It Er 79 EFTYPE Em "Inappropriate file type or format" .
The file was the wrong type for the operation, or a data
file had the wrong format.
.It Er 80 EAUTH Em "Authentication error" .
Attempted to use an invalid authentication ticket to
mount an NFS file system.
.It Er 81 ENEEDAUTH Em "Need authenticator" .
An authentication ticket must be obtained before the
given NFS file system may be mounted.
.It Er 82 EPWROFF Em "Device power is off" .
The device power is off.
.It Er 83 EDEVERR Em "Device error" .
A device error has occurred, e.g. a printer running out of paper.
.It Er 84 EOVERFLOW Em "Value too large to be stored in data type" .
A numerical result of the function was too large to be
stored in the caller provided space.
.It Er 85 EBADEXEC Em "Bad executable (or shared library)" .
The executable or shared library being referenced was malformed.
.It Er 86 EBADARCH Em "Bad CPU type in executable" .
The executable in question does not support the current CPU.
.It Er 87 ESHLIBVERS Em "Shared library version mismatch" .
The version of the shared library on the system does not match
the version which was expected.
.It Er 88 EBADMACHO Em "Malformed Mach-o file" .
The Mach object file is malformed.
.It Er 89 ECANCELED Em "Operation canceled" .
The scheduled operation was canceled.
.It Er 90 EIDRM Em "Identifier removed" .
An IPC identifier was removed while the current process
was waiting on it.
.It Er 91 ENOMSG Em "No message of desired type" .
An IPC message queue does not contain a message of the
desired type, or a message catalog does not contain the
requested message.
.It Er 92 EILSEQ Em "Illegal byte sequence" .
While decoding a multibyte character the function came
along an invalid or an incomplete sequence of bytes or
the given wide character is invalid.
.It Er 93 ENOATTR Em "Attribute not found" .
The specified extended attribute does not exist.
.It Er 94 EBADMSG Em "Bad message" .
The message to be received is inapprorpiate for the operation being attempted.
.It Er 95 EMULTIHOP Em "Reserved" .
This error is reserved for future use.
.It Er 96 ENODATA Em "No message available" .
No message was available to be received by the requested operation.
.It Er 97 ENOLINK Em "Reserved" .
This error is reserved for future use.
.It Er 98 ENOSR Em "No STREAM resources" .
This error is reserved for future use.
.It Er 99 ENOSTR Em "Not a STREAM" .
This error is reserved for future use.
.It Er 100 EPROTO Em "Protocol error" .
Some protocol error occurred. This error is device-specific, but is
generally not related to a hardware failure.
.It Er 101 ETIME Em "STREAM ioctl() timeout" .
This error is reserved for future use.
.It Er 102 EOPNOTSUPP Em "Operation not supported on socket" .
The attempted operation is not supported for the type of socket referenced;
for example, trying to
.Em accept
a connection on a datagram socket.
.El
.Sh DEFINITIONS
.Bl -tag -width Ds
.It  Process ID .
Each active process in the system is uniquely identified by a non-negative
integer called a process ID.  The range of this ID is from 0 to 30000.
.It  Parent process ID
A new process is created by a currently active process; (see
.Xr fork 2 ) .
The parent process ID of a process is initially the process ID of its creator.
If the creating process exits,
the parent process ID of each child is set to the ID of a system process,
.Xr launchd 8 .
.It  Process Group
Each active process is a member of a process group that is identified by
a non-negative integer called the process group ID.  This is the process
ID of the group leader.  This grouping permits the signaling of related
processes (see
.Xr termios 4 )
and the job control mechanisms of
.Xr csh 1 .
.It Session
A session is a set of one or more process groups.
A session is created by a successful call to
.Xr setsid 2 ,
which causes the caller to become the only member of the only process
group in the new session.
.It Session leader
A process that has created a new session by a successful call to
.Xr setsid 2 ,
is known as a session leader.
Only a session leader may acquire a terminal as its controlling terminal (see
.Xr termios 4 ) .
.It Controlling process
A session leader with a controlling terminal is a controlling process.
.It Controlling terminal
A terminal that is associated with a session is known as the controlling
terminal for that session and its members.
.It  "Terminal Process Group ID"
A terminal may be acquired by a session leader as its controlling terminal.
Once a terminal is associated with a session, any of the process groups
within the session may be placed into the foreground by setting
the terminal process group ID to the ID of the process group.
This facility is used
to arbitrate between multiple jobs contending for the same terminal;
(see
.Xr csh 1
and
.Xr tty 4 ) .
.It  "Orphaned Process Group"
A process group is considered to be
.Em orphaned
if it is not under the control of a job control shell.
More precisely, a process group is orphaned
when none of its members has a parent process that is in the same session
as the group,
but is in a different process group.
Note that when a process exits, the parent process for its children
is changed to be
.Xr launchd 8 ,
which is in a separate session.
Not all members of an orphaned process group are necessarily orphaned
processes (those whose creating process has exited).
The process group of a session leader is orphaned by definition.
.It "Real User ID and Real Group ID"
Each user on the system is identified by a positive integer
termed the real user ID.
.Pp
Each user is also a member of one or more groups. 
One of these groups is distinguished from others and
used in implementing accounting facilities.  The positive
integer corresponding to this distinguished group is termed 
the real group ID.
.Pp
All processes have a real user ID and real group ID.
These are initialized from the equivalent attributes
of the process that created it.
.It "Effective User Id, Effective Group Id, and Group Access List"
Access to system resources is governed by two values:
the effective user ID, and the group access list.
The first member of the group access list is also known as the
effective group ID.
(In POSIX.1, the group access list is known as the set of supplementary
group IDs, and it is unspecified whether the effective group ID is
a member of the list.)
.Pp
The effective user ID and effective group ID are initially the
process's real user ID and real group ID respectively.  Either
may be modified through execution of a set-user-ID or set-group-ID
file (possibly by one its ancestors) (see
.Xr execve 2 ) .
By convention, the effective group ID (the first member of the group access
list) is duplicated, so that the execution of a set-group-ID program
does not result in the loss of the original (real) group ID.
.Pp
The group access list is a set of group IDs
used only in determining resource accessibility.  Access checks
are performed as described below in ``File Access Permissions''.
.It  "Saved Set User ID and Saved Set Group ID"
When a process executes a new file, the effective user ID is set
to the owner of the file if the file is set-user-ID, and the effective
group ID (first element of the group access list) is set to the group
of the file if the file is set-group-ID.
The effective user ID of the process is then recorded as the saved set-user-ID,
and the effective group ID of the process is recorded as the saved set-group-ID.
These values may be used to regain those values as the effective user
or group ID after reverting to the real ID (see
.Xr setuid 2 ) .
(In POSIX.1, the saved set-user-ID and saved set-group-ID are optional,
and are used in setuid and setgid, but this does not work as desired
for the super-user.)
.It  Super-user
A process is recognized as a
.Em super-user
process and is granted special privileges if its effective user ID is 0.
.It  Special Processes
The processes with process IDs of 0, 1, and 2 are special.
Process 0 is the scheduler.  Process 1 is the initialization process
.Xr launchd 8 ,
and is the ancestor of every other process in the system.
It is used to control the process structure.
Process 2 is the paging daemon.
.It  Descriptor
An integer assigned by the system when a file is referenced
by
.Xr open 2
or
.Xr dup 2 ,
or when a socket is created by
.Xr pipe 2 ,
.Xr socket 2
or
.Xr socketpair 2 ,
which uniquely identifies an access path to that file or socket from
a given process or any of its children.
.It  File Name
Names consisting of up to 255
.Pq Dv MAXNAMELEN
characters may be used to name
an ordinary file, special file, or directory.
.Pp
These characters may be selected from the set of all
.Tn ASCII
character
excluding 0 (NUL) and the
.Tn ASCII
code for
.Ql \&/
(slash).
.Pp
Note that it is generally unwise to use
.Ql \&* ,
.Ql \&? ,
.Ql \&[
or
.Ql \&]
as part of
file names because of the special meaning attached to these characters
by the shell.
.It  Path Name
A path name is a
.Tn NUL Ns -terminated
character string starting with an
optional slash
.Ql \&/ ,
followed by zero or more directory names separated
by slashes, optionally followed by a file name.
The total length of a path name must be less than 1024
.Pq Dv MAXPATHLEN
characters.
.Pp
If a path name begins with a slash, the path search begins at the
.Em root
directory.
Otherwise, the search begins from the current working directory.
A slash by itself names the root directory.  An empty
pathname refers to the current directory.
.It  Directory
A directory is a special type of file that contains entries
that are references to other files.
Directory entries are called links.  By convention, a directory
contains at least two links,
.Ql \&.
and
.Ql \&.. ,
referred to as
.Em dot
and
.Em dot-dot
respectively.  Dot refers to the directory itself and
dot-dot refers to its parent directory.
.It "Root Directory and Current Working Directory"
Each process has associated with it a concept of a root directory
and a current working directory for the purpose of resolving path
name searches.  A process's root directory need not be the root
directory of the root file system.
.It  File Access Permissions
Every file in the file system has a set of access permissions.
These permissions are used in determining whether a process
may perform a requested operation on the file (such as opening
a file for writing).  Access permissions are established at the
time a file is created.  They may be changed at some later time
through the 
.Xr chmod 2
call. 
.Pp
File access is broken down according to whether a file may be: read,
written, or executed.  Directory files use the execute
permission to control if the directory may be searched. 
.Pp
File access permissions are interpreted by the system as
they apply to three different classes of users: the owner
of the file, those users in the file's group, anyone else.
Every file has an independent set of access permissions for
each of these classes.  When an access check is made, the system
decides if permission should be granted by checking the access
information applicable to the caller.
.Pp
Read, write, and execute/search permissions on
a file are granted to a process if:
.Pp
The process's effective user ID is that of the super-user. (Note:
even the super-user cannot execute a non-executable file.)
.Pp
The process's effective user ID matches the user ID of the owner
of the file and the owner permissions allow the access.
.Pp
The process's effective user ID does not match the user ID of the
owner of the file, and either the process's effective
group ID matches the group ID
of the file, or the group ID of the file is in
the process's group access list,
and the group permissions allow the access.
.Pp
Neither the effective user ID nor effective group ID
and group access list of the process
match the corresponding user ID and group ID of the file,
but the permissions for ``other users'' allow access.
.Pp
Otherwise, permission is denied.
.It  Sockets and Address Families
.Pp
A socket is an endpoint for communication between processes.
Each socket has queues for sending and receiving data.
.Pp
Sockets are typed according to their communications properties.
These properties include whether messages sent and received
at a socket require the name of the partner, whether communication
is reliable, the format used in naming message recipients, etc.
.Pp
Each instance of the system supports some
collection of socket types; consult
.Xr socket 2
for more information about the types available and
their properties.
.Pp
Each instance of the system supports some number of sets of
communications protocols.  Each protocol set supports addresses
of a certain format.  An Address Family is the set of addresses
for a specific group of protocols.  Each socket has an address
chosen from the address family in which the socket was created.
.El
.Sh SEE ALSO
.Xr perror 3 
.Sh HISTORY
An
.Nm intro
manual page appeared in
.At v6 .
            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/ioctl.2                                      0100644 0001750 0001750 00000006550 12567450735 022070  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: ioctl.2,v 1.5 1995/02/27 12:33:47 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)ioctl.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt IOCTL 2
.Os BSD 4
.Sh NAME
.Nm ioctl
.Nd control device
.Sh SYNOPSIS
.Fd #include <sys/ioctl.h>
.Ft int
.Fo ioctl
.Fa "int fildes"
.Fa "unsigned long request"
.Fa "..."
.Fc
.Sh DESCRIPTION
The
.Fn ioctl
function manipulates the underlying device parameters of special files.
In particular, many operating
characteristics of character special files (e.g. terminals)
may be controlled with
.Fn ioctl
requests.
The argument
.Fa fildes
must be an open file descriptor.
.Pp
An  ioctl
.Fa request
has encoded in it whether the argument is an
.Dq in
parameter
or
.Dq out
parameter, and the size of the argument
.Fa argp
in bytes.
Macros and defines used in specifying an ioctl
.Fa request
are located in the file
.Ao Pa sys/ioctl.h Ac .
.Sh RETURN VALUES
If an error has occurred, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Ioctl
will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Fa fildes
is not a valid descriptor.
.\" ==========
.It Bq Er EINVAL
.Fa Request
or
.Fa argp
is not valid.
.\" ==========
.It Bq Er ENOTTY
.Fa fildes
is not associated with a character
special device.
.\" ==========
.It Bq Er ENOTTY
The specified request does not apply to the kind
of object that the descriptor
.Fa fildes
references.
.El
.Sh SEE ALSO
.Xr cdio 1 ,
.Xr chio 1 ,
.Xr mt 1 ,
.Xr execve 2 ,
.Xr fcntl 2 ,
.Xr intro 4 ,
.Xr tty 4
.Sh HISTORY
An
.Fn ioctl
function call appeared in 
.At v7 .
                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/issetugid.2                                  0100644 0001750 0001750 00000007243 12567450735 022756  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$OpenBSD: issetugid.2,v 1.7 1997/02/18 00:16:09 deraadt Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/issetugid.2,v 1.13 2004/07/02 23:52:13 ru Exp $
.\"
.Dd August 25, 1996
.Dt ISSETUGID 2
.Os
.Sh NAME
.Nm issetugid
.Nd is current process tainted by uid or gid changes
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn issetugid void
.Sh DESCRIPTION
The
.Fn issetugid
system call returns 1 if the process environment or memory address space
is considered
.Dq tainted ,
and returns 0 otherwise.
.Pp
A process is tainted if it was created as a result of an
.Xr execve 2
system call which had either of the setuid or setgid bits set (and extra
privileges were given as a result) or if it has changed any of its real,
effective or saved user or group ID's since it began execution.
.Pp
This system call exists so that library routines (eg: libc, libtermcap)
can reliably determine if it is safe to use information
that was obtained from the user, in particular the results from
.Xr getenv 3
should be viewed with suspicion if it is used to control operation.
.Pp
A
.Dq tainted
status is inherited by child processes as a result of the
.Xr fork 2
system call (or other library code that calls fork, such as
.Xr popen 3 ) .
.Pp
It is assumed that a program that clears all privileges as it prepares
to execute another will also reset the environment, hence the
.Dq tainted
status will not be passed on.
This is important for programs such as
.Xr su 1
which begin setuid but need to be able to create an untainted process.
.Sh ERRORS
The
.Fn issetugid
system call is always successful, and no return value is reserved to
indicate an error.
.Sh SEE ALSO
.Xr execve 2 ,
.Xr fork 2 ,
.Xr setegid 2 ,
.Xr seteuid 2 ,
.Xr setgid 2 ,
.Xr setregid 2 ,
.Xr setreuid 2 ,
.Xr setuid 2
.Sh HISTORY
The
.Fn issetugid
system call first appeared in
.Ox 2.0
and was also implemented in
.Fx 3.0 .
                                                                                                                                                                                                                                                                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/kevent.2                                     0100644 0001750 0001750 00000000022 12567450735 022236  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/kqueue.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/kevent64.2                                   0100644 0001750 0001750 00000000022 12567450735 022410  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/kqueue.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/kevent_qos.2                                 0100644 0001750 0001750 00000000022 12567450735 023120  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/kqueue.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/kill.2                                       0100644 0001750 0001750 00000011313 12567450735 021702  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: kill.2,v 1.7 1995/02/27 12:33:53 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)kill.2	8.3 (Berkeley) 4/19/94
.\"
.Dd April 19, 1994
.Dt KILL 2
.Os BSD 4
.Sh NAME
.Nm kill
.Nd send signal to a process
.Sh SYNOPSIS
.Fd #include <signal.h>
.Ft int
.Fo kill
.Fa "pid_t pid"
.Fa "int sig"
.Fc
.Sh DESCRIPTION
The
.Fn kill
function sends the signal specified by
.Fa sig
to
.Fa pid ,
a
process or a group of processes.
Typically,
.Fa Sig
will be one of the signals specified in
.Xr sigaction 2 .
A value of 0, however,
will cause error checking to be performed (with no signal being sent). 
This can be used to check the validity of
.Fa pid .
.Pp
For a process to have permission to send a signal to a process designated
by
.Fa pid ,
the real or effective user ID of the receiving process must match
that of the sending process or the user must have appropriate privileges
(such as given by a set-user-ID program or the user is the super-user).
A single exception is the signal SIGCONT,
which may always be sent to any descendant of the current process.
.Bl -tag -width Ds
.It \&If Fa pid No \&is greater than zero :
.Fa Sig
is sent to the process whose ID is equal to
.Fa pid.
.It \&If Fa pid No \&is zero :
.Fa Sig
is sent to all processes whose group ID is equal
to the process group ID of the sender,
and for which the process has permission;
this is a variant of
.Xr killpg 2 .
.It \&If Fa pid No \&is -1 :
If the user has super-user privileges,
the signal is sent to all processes excluding
system processes and the process sending the signal.
If the user is not the super user,
the signal is sent to all processes with the same uid as the user,
excluding the process sending the signal.
No error is returned if any process could be signaled.
.El
.Pp
For compatibility with System V,
if the process number is negative but not -1,
the signal is sent to all processes whose process group ID
is equal to the absolute value of the process number.
This is a variant of
.Xr killpg 2 .
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Kill
will fail and no signal will be sent if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
.Fa Sig
is not a valid, supported signal number.
.\" ==========
.It Bq Er EPERM
The sending process is not the super-user and its effective
user id does not match the effective user-id of the receiving process.
When signaling a process group, this error is returned if any members
of the group could not be signaled.
.\" ==========
.It Bq Er ESRCH
No process or process group can be found
corresponding to that specified by
.Fa pid .
.\" ==========
.It Bq Er ESRCH
The process id was given as 0,
but the sending process does not have a process group.
.El
.Sh SEE ALSO
.Xr getpgrp 2 ,
.Xr getpid 2 ,
.Xr killpg 2 ,
.Xr sigaction 2
.Sh STANDARDS
The
.Fn kill
function is expected to conform to 
.St -p1003.1-88 .
                                                                                                                                                                                                                                                                                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/killpg.2                                     0100644 0001750 0001750 00000006230 12566166137 022232  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)killpg.2	8.1 (Berkeley) 6/2/93
.\" $FreeBSD: src/lib/libc/compat-43/killpg.2,v 1.14 2007/01/09 00:27:49 imp Exp $
.\"
.Dd October 10, 2006
.Dt KILLPG 2
.Os
.Sh NAME
.Nm killpg
.Nd send signal to a process group
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In signal.h
.Ft int
.Fn killpg "pid_t pgrp" "int sig"
.Sh DESCRIPTION
The
.Fn killpg
function
sends the signal
.Fa sig
to the process group
.Fa pgrp .
See
.Xr sigaction 2
for a list of signals.
If
.Fa pgrp
is 0,
.Fn killpg
sends the signal to the sending process's process group.
.Pp
The sending process and members of the process group must
have the same effective user ID, or
the sender must be the super-user.
As a single special case the continue signal SIGCONT may be sent
to any process with the same session ID as the caller.
.Sh RETURN VALUES
.Rv -std killpg
.Sh ERRORS
The
.Fn killpg
function
will fail and no signal will be sent if:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa sig
argument
is not a valid signal number.
.It Bq Er EPERM
The sending process is not the super-user and one or more
of the target processes has an effective user ID different from that
of the sending process.
.It Bq Er ESRCH
No process can be found in the process group specified by
.Fa pgrp .
.It Bq Er ESRCH
The process group was given as 0
but the sending process does not have a process group.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <signal.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr getpgrp 2 ,
.Xr kill 2 ,
.Xr sigaction 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn killpg
function appeared in
.Bx 4.0 .
                                                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/kqueue.2                                     0100644 0001750 0001750 00000053400 12567450735 022251  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008-2015 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\" Copyright (c) 2000 Jonathan Lemon
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/kqueue.2,v 1.32 2002/12/19 09:40:25 ru Exp $
.\"
.Dd October 21, 2008
.Dt KQUEUE 2
.Os
.Sh NAME
.Nm kqueue ,
.Nm kevent ,
.Nm kevent64
and
.Nm kevent_qos
.Nd kernel event notification mechanism
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In sys/event.h
.In sys/time.h
.Ft int
.Fn kqueue "void"
.Ft int
.Fn kevent "int kq" "const struct kevent *changelist" "int nchanges" "struct kevent *eventlist" "int nevents" "const struct timespec *timeout"
.Ft int
.Fn kevent64 "int kq" "const struct kevent64_s *changelist" "int nchanges" "struct kevent64_s *eventlist" "int nevents" "unsigned int flags" "const struct timespec *timeout"
.Ft int
.Fn kevent_qos "int kq" "const struct kevent_qos_s *changelist" "int nchanges" "struct kevent_qos_s *eventlist" "int nevents" "void *data_out" "size_t *data_available" "unsigned int flags"
.Fn EV_SET "&kev" ident filter flags fflags data udata
.Fn EV_SET64 "&kev" ident filter flags fflags data udata "ext[0]" "ext[1]"
.Fn EV_SET_QOS "&kev" ident filter flags qos udata fflags xflags data "ext[0]" "ext[1]" "ext[2]" "ext[3]"
.Sh DESCRIPTION
The
.Fn kqueue
system call allocates a kqueue file descriptor.  This file descriptor
provides a generic method of notifying the user when a kernel
event (kevent) happens or a condition holds, based on the results
of small pieces of kernel code termed filters.
.Pp
A kevent is identified by an (ident, filter, and optional udata value) 
tuple.  It specifies the interesting conditions to be notified about
for that tuple. An (ident, filter, and optional udata value) tuple can
only appear once in a given kqueue.
Subsequent attempts to register the same tuple for a given kqueue
will result in the replacement of the conditions being watched,
not an addition.
Whether the udata value is considered as part of the tuple is controlled
by the EV_UDATA_SPECIFIC flag on the kevent.
.Pp
The filter identified in a kevent is executed upon the initial
registration of that event in order to detect whether a preexisting
condition is present, and is also executed whenever an event is
passed to the filter for evaluation.
If the filter determines that the condition should be reported,
then the kevent is placed on the kqueue for the user to retrieve.
.Pp
The filter is also run when the user attempts to retrieve the kevent
from the kqueue.
If the filter indicates that the condition that triggered
the event no longer holds, the kevent is removed from the kqueue and
is not returned.
.Pp
Multiple events which trigger the filter do not result in multiple
kevents being placed on the kqueue; instead, the filter will aggregate
the events into a single struct kevent.
Calling
.Fn close
on a file descriptor will remove any kevents that reference the descriptor.
.Pp
The
.Fn kqueue
system call
creates a new kernel event queue and returns a descriptor.
The queue is not inherited by a child created with
.Xr fork 2 .
.Pp
The
.Fn kevent,
.Fn kevent64
and
.Fn kevent_qos
system calls
are used to register events with the queue, and return any pending
events to the user.
The
.Fa changelist
argument
is a pointer to an array of
.Va kevent,
.Va kevent64_s
or
.Va kevent_qos_s
structures, as defined in
.Aq Pa sys/event.h .
All changes contained in the
.Fa changelist
are applied before any pending events are read from the queue.
The
.Fa nchanges
argument
gives the size of
.Fa changelist .
The
.Fa eventlist
argument
is a pointer to an array of out
.Va kevent,
.Va kevent64_s 
or
.Va kevent_qos_s 
structures.
The
.Fa nevents
argument determines the size of
.Fa eventlist .
If the KEVENT_FLAG_STACK_EVENTS flag is provided on the system call,
the eventlist array is filled in in stack order (starting in the
highest available index) instead of typical array order.
The
.Fa out_data
argument provides space for extra out data provided by specific filters.
The
.Fa data_available
argument's contents specified the space available in the data pool on input,
and contains the amount still remaining on output.
If the KEVENT_FLAG_STACK_DATA flag is specified on the system call,
the data is allocated from the pool in stack order instead of typical heap order. 
If
.Fa timeout
is a non-NULL pointer, it specifies a maximum interval to wait
for an event, which will be interpreted as a struct timespec.  If
.Fa timeout
is a NULL pointer, both
.Fn kevent
and
.Fn kevent64
wait indefinitely.  To effect a poll, the
.Fa flags
argument to
.Fn kevent64
or
.Fn kevent_qos
can include the KEVENT_FLAG_IMMEDIATE value to indicate an
immediate timeout.  Alternatively, the
.Fa timeout
argument should be non-NULL, pointing to a zero-valued
.Va timespec
structure.  The same array may be used for the
.Fa changelist
and
.Fa eventlist .
.Pp
The
.Fn EV_SET
macro is provided for ease of initializing a
.Va kevent
structure. Similarly, 
.Fn EV_SET64 
initializes a
.Va kevent64_s
structure and
.Fn EV_SET_QOS
initializes a
.Va kevent_qos_s
structure.
.Pp
The
.Va kevent,
.Va kevent64_s
and
.Va kevent_qos_s
structures are defined as:
.Bd -literal
struct kevent {
	uintptr_t 	ident;		/* identifier for this event */
	int16_t		filter;		/* filter for event */
	uint16_t	flags;		/* general flags */
	uint32_t	fflags;		/* filter-specific flags */
	intptr_t  	data;		/* filter-specific data */
	void		*udata;		/* opaque user data identifier */
};

struct kevent64_s {
        uint64_t        ident;          /* identifier for this event */
	int16_t         filter;         /* filter for event */
	uint16_t        flags;          /* general flags */
	uint32_t        fflags;         /* filter-specific flags */
	int64_t         data;           /* filter-specific data */
	uint64_t        udata;          /* opaque user data identifier */
	uint64_t        ext[2];         /* filter-specific extensions */
};

struct kevent_qos_s {
        uint64_t        ident;          /* identifier for this event */
	int16_t         filter;         /* filter for event */
	uint16_t        flags;          /* general flags */
	uint32_t        qos;            /* quality of service when servicing event */
	uint64_t        udata;          /* opaque user data identifier */
	uint32_t        fflags;         /* filter-specific flags */
	uint32_t        xflags;         /* extra filter-specific flags */
	int64_t         data;           /* filter-specific data */
	uint64_t        ext[4];         /* filter-specific extensions */
};
.Ed
.Pp
----
.Pp
The fields of
.Fa struct kevent,
.Fa struct kevent64_s
and
.Fa struct kevent_qos_s
are:
.Bl -tag -width XXXfilter
.It ident
Value used to identify the source of the event.
The exact interpretation is determined by the attached filter,
but often is a file descriptor.
.It filter
Identifies the kernel filter used to process this event.  The pre-defined
system filters are described below.
.It flags
Actions to perform on the event.
.It fflags
Filter-specific flags.
.It data
Filter-specific data value.
.It udata
Opaque user-defined value passed through the kernel unchanged. It can
optionally be part of the uniquing decision of the kevent system
.El
.Pp
In addition,
.Fa struct kevent64_s
contains:
.Bl -tag -width XXXfilter
.It ext[2]
This field stores extensions for the event's filter. What type of extension depends on 
what type of filter is being used.
.El
.Pp
In addition,
.Fa struct kevent_qos_s
contains:
.Bl -tag -width XXXfilter
.It xflags
Extra filter-specific flags.
.It ext[4]
The QoS variant provides twice as many extension values for filter-specific uses.
.El
.Pp
----
.Pp
The
.Va flags
field can contain the following values:
.Bl -tag -width XXXEV_ONESHOT
.It EV_ADD
Adds the event to the kqueue.  Re-adding an existing event
will modify the parameters of the original event, and not result
in a duplicate entry.  Adding an event automatically enables it,
unless overridden by the EV_DISABLE flag.
.It EV_ENABLE
Permit
.Fn kevent,
.Fn kevent64
and
.Fn kevent_qos
to return the event if it is triggered.
.It EV_DISABLE
Disable the event so
.Fn kevent,
.Fn kevent64
and
.Fn kevent_qos
will not return it.  The filter itself is not disabled.
.It EV_DELETE
Removes the event from the kqueue.  Events which are attached to
file descriptors are automatically deleted on the last close of
the descriptor.
.It EV_RECEIPT
This flag is useful for making bulk changes to a kqueue without draining any
pending events. When passed as input, it forces EV_ERROR to always be returned.
When a filter is successfully added, the
.Va data
field will be zero.
.It EV_ONESHOT
Causes the event to return only the first occurrence of the filter
being triggered.  After the user retrieves the event from the kqueue,
it is deleted.
.It EV_CLEAR
After the event is retrieved by the user, its state is reset.
This is useful for filters which report state transitions
instead of the current state.  Note that some filters may automatically
set this flag internally.
.It EV_EOF
Filters may set this flag to indicate filter-specific EOF condition.
.It EV_OOBAND
Read filter on socket may set this flag to indicate the presence of out of
band data on the descriptor.
.It EV_ERROR
See
.Sx RETURN VALUES
below.
.El
.Pp
----
.Pp
The predefined system filters are listed below.
Arguments may be passed to and from the filter via the
.Va data,
.Va fflags
and optionally
.Va xflags
fields in the
.Va kevent,
.Va kevent64_s
or
.Va kevent_qos_s
structure.
.Bl -tag -width EVFILT_MACHPORT
.It EVFILT_READ
Takes a file descriptor as the identifier, and returns whenever
there is data available to read.
The behavior of the filter is slightly different depending
on the descriptor type.
.Pp
.Bl -tag -width 2n
.It Sockets
Sockets which have previously been passed to
.Fn listen
return when there is an incoming connection pending.
.Va data
contains the size of the listen backlog.
.Pp
Other socket descriptors return when there is data to be read,
subject to the
.Dv SO_RCVLOWAT
value of the socket buffer.
This may be overridden with a per-filter low water mark at the
time the filter is added by setting the
NOTE_LOWAT
flag in
.Va fflags ,
and specifying the new low water mark in
.Va data .
The derived per filter low water mark value is, however, bounded
by socket receive buffer's high and low water mark values.
On return,
.Va data
contains the number of bytes of protocol data available to read.
.Pp
The presence of EV_OOBAND in
.Va flags ,
indicates the presence of out of band data on the socket
.Va data
equal to the potential number of OOB bytes availble to read.
.Pp
If the read direction of the socket has shutdown, then the filter
also sets EV_EOF in
.Va flags ,
and returns the socket error (if any) in
.Va fflags .
It is possible for EOF to be returned (indicating the connection is gone)
while there is still data pending in the socket buffer.
.It Vnodes
Returns when the file pointer is not at the end of file.
.Va data
contains the offset from current position to end of file,
and may be negative.
.It "Fifos, Pipes"
Returns when there is data to read;
.Va data
contains the number of bytes available.
.Pp
When the last writer disconnects, the filter will set EV_EOF in
.Va flags .
This may be cleared by passing in EV_CLEAR, at which point the
filter will resume waiting for data to become available before
returning.
.It "Device nodes"
Returns when there is data to read from the device;
.Va data
contains the number of bytes available.  If the device does
not support returning number of bytes, it will not allow the
filter to be attached.  However, if the NOTE_LOWAT flag is
specified and the
.Va data
field contains 1 on input, those devices will attach - but
cannot be relied upon to provide an accurate count of bytes
to be read on output.
.El
.It EVFILT_WRITE
Takes a file descriptor as the identifier, and returns whenever
it is possible to write to the descriptor.  For sockets, pipes
and fifos,
.Va data
will contain the amount of space remaining in the write buffer.
The filter will set EV_EOF when the reader disconnects, and for
the fifo case, this may be cleared by use of EV_CLEAR.
Note that this filter is not supported for vnodes.
.Pp
For sockets, the low water mark and socket error handling is
identical to the EVFILT_READ case.
.It EVFILT_AIO
This filter is currently unsupported.
.\"The sigevent portion of the AIO request is filled in, with
.\".Va sigev_notify_kqueue
.\"containing the descriptor of the kqueue that the event should
.\"be attached to,
.\".Va sigev_value
.\"containing the udata value, and
.\".Va sigev_notify
.\"set to SIGEV_KEVENT.
.\"When the
.\".Fn aio_*
.\"system call is made, the event will be registered
.\"with the specified kqueue, and the
.\".Va ident
.\"argument set to the
.\".Fa struct aiocb
.\"returned by the
.\".Fn aio_*
.\"system call.
.\"The filter returns under the same conditions as aio_error.
.\".Pp
.\"Alternatively, a kevent structure may be initialized, with
.\".Va ident
.\"containing the descriptor of the kqueue, and the
.\"address of the kevent structure placed in the
.\".Va aio_lio_opcode
.\"field of the AIO request.  However, this approach will not work on
.\"architectures with 64-bit pointers, and should be considered deprecated.
.It EVFILT_VNODE
Takes a file descriptor as the identifier and the events to watch for in
.Va fflags ,
and returns when one or more of the requested events occurs on the descriptor.
The events to monitor are:
.Bl -tag -width XXNOTE_RENAME
.It NOTE_DELETE
The
.Fn unlink
system call
was called on the file referenced by the descriptor.
.It NOTE_WRITE
A write occurred on the file referenced by the descriptor.
.It NOTE_EXTEND
The file referenced by the descriptor was extended.
.It NOTE_ATTRIB
The file referenced by the descriptor had its attributes changed.
.It NOTE_LINK
The link count on the file changed.
.It NOTE_RENAME
The file referenced by the descriptor was renamed.
.It NOTE_REVOKE
Access to the file was revoked via
.Xr revoke 2
or the underlying fileystem was unmounted.
.El
.Pp
On return,
.Va fflags
contains the filter-specific flags which are associated with
the triggered events seen by this filter.
.It EVFILT_PROC
Takes the process ID to monitor as the identifier and the events to watch for
in
.Va fflags ,
and returns when the process performs one or more of the requested events.
If a process can normally see another process, it can attach an event to it.
The events to monitor are:
.Bl -tag -width NOTE_SIGNAL 
.It NOTE_EXIT
The process has exited.
.It NOTE_EXITSTATUS
The process has exited and its exit status is in filter specific data. Valid only on child processes and to be used along with NOTE_EXIT.
.It NOTE_FORK
The process created a child process via
.Xr fork 2
or similar call.
.It NOTE_EXEC
The process executed a new process via
.Xr execve 2
or similar call.
.It NOTE_SIGNAL
The process was sent a signal. Status can be checked via
.Xr waitpid 2
or similar call.
.It NOTE_REAP
The process was reaped by the parent via
.Xr wait 2
or similar call. Deprecated, use NOTE_EXIT.
.El
.Pp
On return,
.Va fflags
contains the events which triggered the filter.
.It EVFILT_SIGNAL
Takes the signal number to monitor as the identifier and returns
when the given signal is generated for the process.
This coexists with the
.Fn signal
and
.Fn sigaction
facilities, and has a lower precedence.  Only signals sent to the process, 
not to a particular thread, will trigger the filter. The filter will record
all attempts to deliver a signal to a process, even if the signal has
been marked as SIG_IGN.  Event notification happens before normal
signal delivery processing.
.Va data
returns the number of times the signal has been generated since the last call to
.Fn kevent .
This filter automatically sets the EV_CLEAR flag internally.
.It EVFILT_MACHPORT
Takes the name of a mach port, or port set, in 
.Va ident
and waits until a message is enqueued on the port or port set. When a message 
is detected, but not directly received by the kevent call, the name of the
specific port where the message is enqueued is returned in
.Va data .
If
.Va fflags 
contains MACH_RCV_MSG, the ext[0] and ext[1] flags are assumed to contain
a pointer to the buffer where the message is to be received and the size
of the receive buffer, respectively.  If MACH_RCV_MSG is specifed, yet the
buffer size in ext[1] is zero, The space for the buffer may be carved out
of the
.Va
data_out
area provided to
.Fn kevent_qos
if there is enough space remaining there.
.It EVFILT_TIMER
Establishes an interval timer with the data
timer identified by
.Va ident .
When adding a timer,
.Va data
specifies the timeout period and
.Va fflags
can be set to one of the following:
.Bl -tag -width NOTE_ABSOLUTE
.It NOTE_SECONDS
data is in seconds
.It NOTE_USECONDS
data is in microseconds
.It NOTE_NSECONDS
data is in nanoseconds
.It NOTE_ABSOLUTE
data is an absolute timeout
.It NOTE_CRITICAL
system makes a best effort to fire this timer as scheduled.
.It NOTE_BACKGROUND
system has extra leeway to coalesce this timer.
.It NOTE_LEEWAY
ext[1] holds user-supplied slop in deadline for timer coalescing.
.El
.Pp
If fflags is not set, the default is milliseconds. The timer will be periodic unless EV_ONESHOT is specified.
On return,
.Va data
contains the number of times the timeout has expired since the last call to
.Fn kevent , 
.Fn kevent64
or
.Fn kevent_qos .

This filter automatically sets the EV_CLEAR flag internally.
.El
.Pp
----
.Pp
In the 
.Va ext[2]
field of the
.Va kevent64_s
struture, 
.Va ext[0] 
is only used with the EVFILT_MACHPORT filter.
With other filters, 
.Va ext[0]
is passed through
.Fn kevent64
much like
.Va udata .
.Va ext[1]
can always be used like
.Va udata .
For the use of ext[0], see the EVFILT_MACHPORT filter above.
.Sh RETURN VALUES
The
.Fn kqueue
system call
creates a new kernel event queue and returns a file descriptor.
If there was an error creating the kernel event queue, a value of -1 is
returned and errno set.
.Pp
The
.Fn kevent ,
.Fn kevent64
and
.Fn kevent_qos
system calls
return the number of events placed in the
.Fa eventlist ,
up to the value given by
.Fa nevents .
If an error occurs while processing an element of the
.Fa changelist
and there is enough room in the
.Fa eventlist ,
then the event will be placed in the
.Fa eventlist
with
.Dv EV_ERROR
set in
.Va flags
and the system error in
.Va data .
Otherwise,
.Dv -1
will be returned, and
.Dv errno
will be set to indicate the error condition.
If the time limit expires, then
.Fn kevent ,
.Fn kevent64
and
.Fn kevent_qos
return 0.
.Sh ERRORS
The
.Fn kqueue
system call fails if:
.Bl -tag -width Er
.It Bq Er ENOMEM
The kernel failed to allocate enough memory for the kernel queue.
.It Bq Er EMFILE
The per-process descriptor table is full.
.It Bq Er ENFILE
The system file table is full.
.El
.Pp
The
.Fn kevent
and
.Fn kevent64
system calls fail if:
.Bl -tag -width Er
.It Bq Er EACCES
The process does not have permission to register a filter.
.It Bq Er EFAULT
There was an error reading or writing the
.Va kevent
or
.Va kevent64_s
structure.
.It Bq Er EBADF
The specified descriptor is invalid.
.It Bq Er EINTR
A signal was delivered before the timeout expired and before any
events were placed on the kqueue for return.
.It Bq Er EINVAL
The specified time limit or filter is invalid.
.It Bq Er ENOENT
The event could not be found to be modified or deleted.
.It Bq Er ENOMEM
No memory was available to register the event.
.It Bq Er ESRCH
The specified process to attach to does not exist.
.El
.Sh SEE ALSO
.Xr aio_error 2 ,
.Xr aio_read 2 ,
.Xr aio_return 2 ,
.Xr read 2 ,
.Xr select 2 ,
.Xr sigaction 2 ,
.Xr write 2 ,
.Xr signal 3
.Sh HISTORY
The
.Fn kqueue
and
.Fn kevent
system calls first appeared in
.Fx 4.1 .
.Sh AUTHORS
The
.Fn kqueue
system and this manual page were written by
.An Jonathan Lemon Aq jlemon@FreeBSD.org .
.Sh BUGS
Not all filesystem types support kqueue-style notifications.
And even some that do, like some remote filesystems, may only
support a subset of the notification semantics described
here.
                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/lchown.2                                     0100644 0001750 0001750 00000000021 12567450735 022233  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/chown.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/link.2                                       0100644 0001750 0001750 00000016607 12567450735 021717  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: link.2,v 1.7 1995/02/27 12:34:01 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)link.2	8.3 (Berkeley) 1/12/94
.\"
.Dd October 29, 2008
.Dt LINK 2
.Os BSD 4
.Sh NAME
.Nm link ,
.Nm linkat
.Nd make a hard file link
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo link
.Fa "const char *path1"
.Fa "const char *path2"
.Fc
.Ft int
.Fo linkat
.Fa "int fd1" "const char *name1" "int fd2" "const char *name2" "int flag"
.Fc
.Sh DESCRIPTION
The
.Fn link
function call
atomically creates the specified directory entry (hard link)
.Fa path2
with the attributes of the underlying object pointed at by
.Fa path1 .
If the link is successful,
the link count of the underlying object is incremented;
.Fa path1
and
.Fa path2
share equal access and rights
to the
underlying object.
.Pp
If
.Fa path1
is removed, the file
.Fa path2
is not deleted and the link count of the
underlying object is
decremented.
.Pp
In order for the system call to succeed,
.Fa path1
must exist and both
.Fa path1
and
.Fa path2
must be in the same file system.
As mandated by POSIX.1,
.Fa path1
may not be a directory.
.Pp
.Fn link
will resolve and follow symbolic links contained within both
.Fa path1
and
.Fa path2 .
If the last component of
.Fa path1
is a symbolic link,
.Fn link
will point the hard link, 
.Fa path2 ,
to the underlying object pointed to by
.Fa path1 ,
not to the symbolic link itself.
.Pp
The
.Fn linkat
system call is equivalent to
.Fa link
except in the case where either
.Fa name1
or
.Fa name2
or both are relative paths.
In this case a relative path
.Fa name1
is interpreted relative to
the directory associated with the file descriptor
.Fa fd1
instead of the current working directory and similarly for
.Fa name2
and the file descriptor
.Fa fd2 .
.Pp
Values for
.Fa flag
are constructed by a bitwise-inclusive OR of flags from the following
list, defined in
.In fcntl.h :
.Bl -tag -width indent
.It Dv AT_SYMLINK_FOLLOW
If
.Fa name1
names a symbolic link, a new link for the target of the symbolic link is
created.
.El
.Pp
If
.Fn linkat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd1
or
.Fa fd2
parameter, the current working directory is used for the respective
.Fa name
argument.
If both
.Fa fd1
and
.Fa fd2
have value
.Dv AT_FDCWD ,
the behavior is identical to a call to
.Fn link .
Unless
.Fa flag
contains the
.Dv AT_SYMLINK_FOLLOW
flag, if
.Fa name1
names a symbolic link, a new link is created for the symbolic link
.Fa name1
and not its target. On OS X, not assigning AT_SYMLINK_FOLLOW to
.Fa flag
may result in some filesystems returning an error.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.  Otherwise,
a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Link
will fail and no link will be created if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
A component of either path prefix denies search permission.
.\" ==========
.It Bq Er EACCES
The requested link requires writing in a directory with a mode
that denies write permission.
.\" ==========
.It Bq Er EACCES
The current process cannot access the existing file.
.\" ==========
.It Bq Er EDQUOT
The directory in which the entry for the new link
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.\" ==========
.It Bq Er EEXIST
The link named by
.Fa path2
already exists.
.\" ==========
.It Bq Er EFAULT
One of the pathnames specified
is outside the process's allocated address space.
.\" ==========
.It Bq Er EIO
An I/O error occurs while reading from or writing to 
the file system to make the directory entry.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating one of the pathnames.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er EMLINK
The file already has {LINK_MAX} links.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeds 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
A component of either path prefix does not exist, or is a dangling symbolic link.
.\" ==========
.It Bq Er ENOENT
The file named by
.Fa path1
does not exist, or is a dangling symbolic link.
.\" ==========
.It Bq Er ENOSPC
The directory in which the entry for the new link is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.\" ==========
.It Bq Er ENOTDIR
A component of either path prefix is not a directory.
.\" ==========
.It Bq Er EPERM
The file named by
.Fa path1
is a directory.
.\" ==========
.It Bq Er EROFS
The requested link requires writing in a directory
on a read-only file system.
.\" ==========
.It Bq Er EXDEV
The link named by
.Fa path2
and the file named by
.Fa path1
are on different file systems.
.El
.Pp
In addition to the errors returned by the
.Fn link ,
the
.Fn linkat
system call may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa name1
or
.Fa name2
argument does not specify an absolute path and the
.Fa fd1
or
.Fa fd2
argument, respectively, is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er EINVAL
The value of the
.Fa flag
argument is not valid.
.It Bq Er ENOTSUP
.Fa flag
was not set to
.Dv AT_SYMLINK_FOLLOW (some filesystems only)
.It Bq Er ENOTDIR
The
.Fa name1
or
.Fa name2
argument is not an absolute path and
.Fa fd1
or
.Fa fd2 ,
respectively, is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh SEE ALSO
.Xr symlink 2 ,
.Xr unlink 2
.Sh STANDARDS
The
.Fn link
function is expected to conform to 
.St -p1003.1-88 .
The
.Fn linkat
system call is expected to conform to POSIX.1-2008 .
                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/linkat.2                                     0100644 0001750 0001750 00000000020 12567450735 022222  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/link.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/listen.2                                     0100644 0001750 0001750 00000007426 12567450735 022257  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$OpenBSD: listen.2,v 1.2 1996/03/19 23:15:16 niklas Exp $
.\"	$NetBSD: listen.2,v 1.7 1996/02/16 20:38:45 phil Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)listen.2	8.2 (Berkeley) 12/11/93
.\"
.Dd March 18, 2015
.Dt LISTEN 2
.Os BSD 4.2
.Sh NAME
.Nm listen
.Nd listen for connections on a socket
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft int
.Fo listen
.Fa "int socket"
.Fa "int backlog"
.Fc
.Sh DESCRIPTION
Creation of socket-based connections requires several operations.
First, a socket is created with
.Xr socket 2 .
Next, a willingness to accept incoming connections and
a queue limit for incoming connections are specified with
.Fn listen .
Finally, the connections are
accepted with
.Xr accept 2 .
The
.Fn listen
call applies only to sockets of type
.Dv SOCK_STREAM.
.\"or
.\".Dv SOCK_SEQPACKET.
.Pp
The
.Fa backlog
parameter defines the maximum length
for the queue of pending connections.
If a connection
request arrives with the queue full,
the client may receive an error with an indication of
.Er ECONNREFUSED .
Alternatively, if the underlying protocol supports retransmission,
the request may be ignored so that retries may succeed.
.Sh RETURN VALUES
.Rv -std listen
.Sh ERRORS
.Fn Listen
will fail if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
The current process has insufficient privileges.
.\" ==========
.It Bq Er EBADF
The argument
.Fa socket
is not a valid file descriptor.
.\" ==========
.It Bq Er EDESTADDRREQ
The socket is not bound to a local address
and the protocol does not support listening on an unbound socket.
.\" ==========
.It Bq Er EINVAL
.Fa socket
is already connected.
.\" ==========
.It Bq Er ENOTSOCK
The argument
.Fa socket
does not reference a socket.
.\" ==========
.It Bq Er EOPNOTSUPP
The socket is not of a type that supports the operation
.Fn listen .
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr connect 2 ,
.Xr connectx 2 ,
.Xr socket 2
.Sh BUGS
The
.Fa backlog
is currently limited (silently) to 128.
.Sh HISTORY
The
.Fn listen
function call appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/listxattr.2                                  0100644 0001750 0001750 00000010701 12567450735 023005  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2004 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\"
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\"
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\"
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd Oct 19, 2004
.Dt LISTXATTR 2
.Os "Mac OS X"
.Sh NAME
.Nm listxattr,
.Nm flistxattr
.Nd list extended attribute names
.Sh SYNOPSIS
.Fd #include <sys/xattr.h>
.Ft ssize_t
.Fn listxattr "const char *path" "char *namebuf" "size_t size" "int options"
.Ft ssize_t
.Fn flistxattr "int fd" "char *namebuf" "size_t size" "int options"
.Sh DESCRIPTION
Extended attributes extend the basic attributes associated with files and
directories in the file system.  They are stored as name:data pairs associated
with file system objects (files, directories, symlinks, etc).
.Pp
.Fn listxattr
retrieves a list of names of extended attributes associated with the given
.Fa path
in the file system.
.Pp
.Fa namebuf
is a data buffer of
.Pa size
bytes for the names of the extended attributes associated with
.Fa path .
The extended attribute names are simple NULL-terminated UTF-8 strings and
are returned in arbitrary order.  No extra padding is provided between
names in the buffer.  The list will only include names of extended
attributes to which the calling process has access.  The function returns
the size of the list of names.
.Pp
.Fa options
controls how the attribute list is generated:
.Pp
.Bl -tag -width XATTR_NOFOLLOW
.It Dv XATTR_NOFOLLOW
do not follow symbolic links.
.Fn listxattr
normally lists attributes of the target of
.Fa path
if it is a symbolic link.  With this option,
.Fn listxattr
will list attributes of the link itself.
.It Dv XATTR_SHOWCOMPRESSION
.Fn listxattr
and 
.Fn flistxattr
will list HFS Plus Compression extended attribute(s) (if present) for the file referred to by
.Fa path
or
.Fa fd .
.El
.Pp
If
.Fa namebuf
is set to NULL,
the function returns the size of the list of extended attribute names.
This facility can be used to determine the size of a buffer sufficiently
large to hold the names of the attributes currently associated with
.Fa path .
.Pp
.Fn flistxattr
is identical to
.Fn listxattr ,
except that it returns the list of extended attribute names associated
with the open file referenced by file descriptor
.Fa fd .
.Sh RETURN VALUES
On success, the size of the extended attribute name list is returned.  If
no accessible extended attributes are associated with the given
.Fa path
or
.Fa fd ,
the function returns zero.  On failure, -1 is returned and the global
variable
.Va errno
is set as follows.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ENOTSUP
The file system does not support extended attributes or has the feature
disabled.
.It Bq Er ERANGE
.Fa namebuf
(as indicated by
.Fa size )
is too small to hold the list of names.
.It Bq Er EPERM
.Fa path
or
.Fa fd
refer to a file system object that does not support extended attributes.
For example, resource forks don't support extended attributes.
.\" If only EFTYPE was a POSIX error
.It Bq Er ENOTDIR
A component of
.Fa path 's
prefix is not a directory.
.It Bq Er ENAMETOOLONG
.Fa name
exceeds
.Dv XATTR_MAXNAMELEN
UTF-8 bytes, or a component of
.Fa path
exceeds
.Dv NAME_MAX
characters, or the entire
.Fa path
exceeds
.Dv PATH_MAX
characters.
.It Bq Er EACCES
Search permission is denied for a component of
.Fa path
or permission is denied to read the list of attributes from this file.
.It Bq Er ELOOP
Too many symbolic links were encountered resolving
.Fa path .
.It Bq Er EFAULT
.Fa path
points to an invalid address.
.It Bq Er EIO
An I/O error occurred.
.It Bq Er EINVAL
.Fa options
does not make sense.
.El
.Sh SEE ALSO
.Xr getxattr 2 ,
.Xr removexattr 2 ,
.Xr setxattr 2
.Sh HISTORY
.Fn listxattr
and
.Fn flistxattr
first appeared in Mac OS X 10.4.
                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/lseek.2                                      0100644 0001750 0001750 00000010046 12567450735 022054  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: lseek.2,v 1.6 1995/02/27 12:34:09 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)lseek.2	8.3 (Berkeley) 4/19/94
.\"
.Dd April 19, 1994
.Dt LSEEK 2
.Os BSD 4
.Sh NAME
.Nm lseek
.Nd reposition read/write file offset
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft off_t
.Fo lseek
.Fa "int fildes"
.Fa "off_t offset"
.Fa "int whence"
.Fc
.Sh DESCRIPTION
The
.Fn lseek
function repositions the offset of the file descriptor
.Fa fildes
to the
argument
.Fa offset ,
according to the directive
.Fa whence .
The argument
.Fa fildes
must be an open
file descriptor.
.Fn Lseek
repositions the file pointer
.Fa fildes
as follows:
.Bl -item -offset indent
.It
If
.Fa whence
is
.Dv SEEK_SET ,
the offset is set to
.Fa offset
bytes.
.It
If
.Fa whence
is
.Dv SEEK_CUR ,
the offset is set to its current location plus
.Fa offset
bytes.
.It
If
.Fa whence
is
.Dv SEEK_END ,
the offset is set to the size of the
file plus
.Fa offset
bytes.
.El
.Pp
The
.Fn lseek
function allows the file offset to be set beyond the end
of the existing end-of-file of the file. If data is later written
at this point, subsequent reads of the data in the gap return
bytes of zeros (until data is actually written into the gap).
.Pp
Some devices are incapable of seeking.  The value of the pointer
associated with such a device is undefined.
.Sh RETURN VALUES
Upon successful completion,
.Fn lseek
returns the resulting offset location as measured in bytes from the
beginning of the file.
Otherwise,
a value of -1 is returned and
.Va errno
is set to indicate
the error.
.Sh ERRORS
.Fn Lseek
will fail and the file pointer will remain unchanged if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EBADF
.Em Fildes
is not an open file descriptor.
.\" ==========
.It Bq Er EINVAL
.Fa Whence
is not a proper value.
.\" ==========
.It Bq Er EINVAL
The seek location (calculated from
.Fa offset
and
.Fa whence )
is negative.
.\" ==========
.It Bq Er EOVERFLOW
The seek location is too large to be stored
in an object of type off_t.
.\" ==========
.It Bq Er ESPIPE
.Em Fildes
is associated with a pipe, socket, or FIFO.
.El
.Sh SEE ALSO
.Xr dup 2 ,
.Xr open 2
.Sh BUGS
This document's use of
.Fa whence
is incorrect English, but is maintained for historical reasons.
.Sh STANDARDS
The
.Fn lseek
function conforms to 
.St -p1003.1-88 .
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/lstat.2                                      0100644 0001750 0001750 00000000020 12567450735 022067  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/stat.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/lstat64.2                                    0100644 0001750 0001750 00000000021 12567450735 022242  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/stat.2

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/madvise.2                                    0100644 0001750 0001750 00000013233 12567450735 022402  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: madvise.2,v 1.7 1995/12/27 21:17:02 jtc Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)madvise.2	8.1 (Berkeley) 6/9/93
.\"
.Dd June 9, 1993
.Dt MADVISE 2
.Os
.Sh NAME
.Nm madvise ,
.Nm posix_madvise
.Nd give advice about use of memory
.Sh SYNOPSIS
.Fd #include <sys/mman.h>
.Ft int
.Fo madvise
.Fa "void *addr"
.Fa "size_t len"
.Fa "int advice"
.Fc
.Ft int
.Fo posix_madvise
.Fa "void *addr"
.Fa "size_t len"
.Fa "int advice"
.Fc
.Sh DESCRIPTION
The
.Fn madvise
system call allows a process that has knowledge of its memory behavior
to describe it to the system.
The advice passed in may be used by the system
to alter its virtual memory paging strategy.
This advice may improve application and system performance.
The behavior specified in
.Fa advice
can only be one of the following values:
.Pp
.Bl -tag -width MADV_SEQUENTIAL
.It Dv  MADV_NORMAL
Indicates that the application has no advice to give on its behavior
in the specified address range.
This is the system default behavior.
This is used with 
.Fn madvise
system call.
.It Dv POSIX_MADV_NORMAL
Same as MADV_NORMAL but used with 
.Fn posix_madvise
system call.
.It Dv MADV_SEQUENTIAL
Indicates that the application expects to access this address range
in a sequential manner.
This is used with
.Fn madvise
system call.
.It Dv POSIX_MADV_SEQUENTIAL
Same as MADV_SEQUENTIAL but used with 
.Fn posix_madvise
system call.
.It Dv MADV_RANDOM
Indicates that the application expects to access this address range
in a random manner.
This is used with
.Fn madvise
system call.
.It Dv POSIX_MADV_RANDOM
Same as MADV_RANDOM but used with 
.Fn posix_madvise
system call.
.It Dv MADV_WILLNEED
Indicates that the application expects to access this address range soon.
This is used with
.Fn madvise
system call.
.It Dv POSIX_MADV_WILLNEED
Same as MADV_WILLNEED but used with 
.Fn posix_madvise
system call.
.It Dv MADV_DONTNEED
Indicates that the application is not expecting
to access this address range soon.
This is used with
.Fn madvise
system call.
.It Dv POSIX_MADV_DONTNEED
Same as MADV_DONTNEED but used with 
.Fn posix_madvise
system call.
.It Dv MADV_FREE
Indicates that the application will not need the information contained
in this address range, so the pages may be reused right away.
The address range will remain valid.
This is used with
.Fn madvise
system call.
.It Dv MADV_ZERO_WIRED_PAGES
Indicates that the application would like the wired pages in this address
range to be zeroed out if the address range is deallocated without first
unwiring the pages (i.e. a munmap(2) without a preceding munlock(2) or the application
quits).
This is used with
.Fn madvise
system call.
.El
.Pp
The
.Fn posix_madvise
behaves same as 
.Fn madvise
except that it uses values with POSIX_ prefix for the 
.Fa advice
system call argument.
.Sh RETURN VALUES
Upon successful completion,
a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn madvise
fails if one or more of the following are true:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
The value of 
.Fa advice 
is incorrect.
.\" ==========
.It Bq Er EINVAL
The address range includes unallocated regions.
.\" ==========
.It Bq Er ENOMEM
The virtual address range specified by the 
.Fa addr
and
.Fa len
are outside the range allowed for the address space.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Pp
.Ft int
.br
.Fo madvise
.Fa "caddr_t addr"
.Fa "size_t len"
.Fa "int advice"
.Fc ;
.Pp
.Ft int
.br
.Fo posix_madvise
.Fa "caddr_t addr"
.Fa "size_t len"
.Fa "int advice"
.Fc ;
.Pp
The include file
.In sys/types.h
is necessary.
The type of
.Fa addr
has changed.
.Sh SEE ALSO
.Xr mincore 2 ,
.Xr minherit 2 ,
.Xr mprotect 2 , 
.Xr msync 2 ,
.Xr munmap 2 ,
.Xr compat 5
.Sh HISTORY
The
.Nm madvise
function first appeared in 4.4BSD.
The
.Nm posix_madvise
function is part of IEEE 1003.1-2001
and was first implemented in Mac OS X 10.2.
                                                                                                                                                                                                                                                                                                                                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mincore.2                                    0100644 0001750 0001750 00000006527 12567450735 022416  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: mincore.2,v 1.7 1995/10/12 15:41:05 jtc Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)mincore.2	8.1 (Berkeley) 6/9/93
.\"
.Dd June 9, 1993
.Dt MINCORE 2
.Os
.Sh NAME
.Nm mincore
.Nd determine residency of memory pages
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Ft int
.Fn mincore "caddr_t addr" "size_t len" "char *vec"
.Sh DESCRIPTION
The
.Fn mincore
system call
allows a process to obtain information about whether pages are
core resident.
The current core residency of the pages is returned
in the character array 
.Fa vec .
For each entry in the character array
.Fa vec ,
the following bit values may be set
depending upon the state of the page:
.Bd -literal -offset indent
.nf
MINCORE_INCORE           0x1     /* Page is incore */
MINCORE_REFERENCED       0x2     /* Page has been referenced by us */
MINCORE_MODIFIED         0x4     /* Page has been modified by us */
MINCORE_REFERENCED_OTHER 0x8     /* Page has been referenced */
MINCORE_MODIFIED_OTHER  0x10     /* Page has been modified */
.fi
.Ed
.Sh RETURN VALUES
Upon successful completion,
a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
.Fa addr
is not a valid address for user mode.
.\" ===========
.It Bq Er EFAULT
an error occurred trying to copy to the output character array
.Fa vec .
.El
.Sh SEE ALSO
.Xr madvise 2 ,
.Xr minherit 2 ,
.Xr mlock 2 ,
.Xr mprotect 2 ,
.Xr msync 2 ,
.Xr munmap 2
.Sh HISTORY
The
.Fn mincore
function first appeared in 4.4BSD.
                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/minherit.2                                   0100644 0001750 0001750 00000006060 12567450735 022571  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$Id: minherit.2,v 1.3 2005/07/29 21:49:48 lindak Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)minherit.2	8.1 (Berkeley) 6/9/93
.\"
.Dd June 9, 1993
.Dt MINHERIT 2
.Os
.Sh NAME
.Nm minherit
.Nd control the inheritance of pages
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Ft int
.Fo minherit
.Fa "caddr_t addr"
.Fa "size_t len"
.Fa "int inherit"
.Fc
.Sh DESCRIPTION
The
.Fn minherit
system call
changes the specified pages to have the inheritance characteristic
.Fa inherit ,
which can be set to VM_INHERIT_NONE, VM_INHERIT_COPY, or VM_INHERIT_SHARE.
Not all implementations will guarantee
that the inheritance characteristic can be set on a page basis;
the granularity of changes may be as large as an entire region.
.Sh RETURN VALUES
.Rv -std minherit
.Sh ERRORS
The
.Fn minherit
system call will fail if:
.Bl -tag -width Er
.\" ========
.It Bq Er EINVAL
The virtual address range specified by the
.Fa addr
and
.Fa len
arguments is not valid.
.\" ========
.It Bq Er EACCES
The flags specified by the
.Fa inherit
argument were not valid for the pages specified by the
.Fa addr
and
.Fa len
arguments.
.El
.Sh SEE ALSO
.Xr madvise 2 , 
.Xr mincore 2 , 
.Xr mprotect 2 , 
.Xr msync 2 ,
.Xr munmap 2
.Sh HISTORY
The
.Fn minherit
function first appeared in
.Bx Open .
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mkdir.2                                      0100644 0001750 0001750 00000014543 12567450735 022065  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: mkdir.2,v 1.8 1995/02/27 12:34:22 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)mkdir.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt MKDIR 2
.Os BSD 4.2
.Sh NAME
.Nm mkdir ,
.Nm mkdirat
.Nd make a directory file
.Sh SYNOPSIS
.Fd #include <sys/stat.h>
.Ft int
.Fo mkdir
.Fa "const char *path"
.Fa "mode_t mode"
.Fc
.Ft int
.Fn mkdirat "int fd" "const char *path" "mode_t mode"
.Sh DESCRIPTION
The directory
.Fa path
is created with the access permissions specified by
.Fa mode
and restricted by the
.Xr umask 2
of the calling process. See
.Xr chmod 2
for the possible permission bit masks for
.Fa mode . 
.Pp
The directory's owner ID is set to the process's effective user ID.
The directory's group ID is set to that of the parent directory in
which it is created.
.Pp
Note: the behavior of
.Fn mkdir
is undefined when mode bits other than the low 9 bits are used. Use
.Xr chmod 2
after
.Fn mkdir
to explicitly set the other bits (See example below).
.Pp
The
.Fn mkdirat
system call is equivalent to
.Fn mkdir
except in the case where
.Fa path
specifies a relative path.
In this case the newly created directory is created relative to the
directory associated with the file descriptor
.Fa fd
instead of the current working directory.
If
.Fn mkdirat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior is
identical to a call to
.Fn mkdir .
.Sh RETURN VALUES
A 0 return value indicates success.  A -1 return value
indicates an error, and an error code is stored in
.Va errno .
.Sh ERRORS
.Fn Mkdir
will fail and no directory will be created if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ==========
.It Bq Er EACCES
Write permission is denied for the parent directory.
.\" ==========
.It Bq Er EDQUOT
The new directory cannot be created because the user's
quota of disk blocks on the file system that will
contain the directory has been exhausted.
.\" ==========
.It Bq Er EDQUOT
The user's quota of inodes on the file system on
which the directory is being created has been exhausted.
.\" ==========
.It Bq Er EEXIST
The named file exists.
.\" ==========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.\" ==========
.It Bq Er EIO
An I/O error occurred while making the directory entry
or allocating the inode.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er EMLINK
The parent directory already has {LINK_MAX} links.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
A component of the path prefix does not exist
or path is an empty string.
.It Bq Er ENOSPC
The new directory cannot be created because there is no space left
on the file system that would contain it.
.\" ==========
.It Bq Er ENOSPC
There are no free inodes on the file system on which the
directory is being created.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er EROFS
The parent directory resides on a read-only file system.
.El
.Pp
In addition to the errors returned by the
.Fn mkdir ,
the
.Fn mkdirat
function may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh EXAMPLE
.Bd -literal -offset indent

int main (int argc, const char * argv[]) 
{
	/* The behavior of mkdir is undefined for anything other than the "permission" bits */
	if (mkdir("/tmp/blah", 0777))
		perror("/tmp/blah");	

	/* So we need to set the sticky/executable bits explicitly with chmod after calling mkdir */
	if (chmod("/tmp/blah", 07777))
		perror("/tmp/blah");	
}

.Ed 
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/stat.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr stat 2 ,
.Xr umask 2 ,
.Xr compat 5
.Sh STANDARDS
The 
.Fn mkdir
function conforms to 
.St -p1003.1-88 .
The
.Fn mkdirat
system call is expected to conform to POSIX.1-2008 .
.Sh HISTORY
The
.Fn mkdirat
system call appeared in OS X 10.10
                                                                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mkdirat.2                                    0100644 0001750 0001750 00000000021 12567450735 022374  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/mkdir.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mkfifo.2                                     0100644 0001750 0001750 00000010353 12567450735 022225  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: mkfifo.2,v 1.8 1995/02/27 12:34:27 cgd Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)mkfifo.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt MKFIFO 2
.Os
.Sh NAME
.Nm mkfifo
.Nd make a fifo file
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/stat.h>
.Ft int
.Fn mkfifo "const char *path" "mode_t mode"
.Sh DESCRIPTION
.Fn Mkfifo
creates a new fifo file with name
.Fa path .
The access permissions are
specified by
.Fa mode
and restricted by the
.Xr umask 2
of the calling process.
.Pp
The fifo's owner ID is set to the process's effective user ID.
The fifo's group ID is set to that of the parent directory in
which it is created.
.Sh RETURN VALUES
A 0 return value indicates success.  A -1 return value
indicates an error, and an error code is stored in
.Va errno .
.Sh ERRORS
.Fn Mkfifo
will fail and no fifo will be created if:
.Bl -tag -width Er
.It Bq Er ENOTSUP
The kernel has not been configured to support fifo's.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.It Bq Er ENOENT
A component of the path prefix does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EROFS
The named file resides on a read-only file system.
.It Bq Er EEXIST
The named file exists.
.It Bq Er ENOSPC
The directory in which the entry for the new fifo is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.It Bq Er ENOSPC
There are no free inodes on the file system on which the
fifo is being created.
.It Bq Er EDQUOT
The directory in which the entry for the new fifo
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.It Bq Er EDQUOT
The user's quota of inodes on the file system on
which the fifo is being created has been exhausted.
.It Bq Er EIO
An
.Tn I/O
error occurred while making the directory entry or allocating the inode.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.El
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr stat 2 ,
.Xr umask 2
.Sh STANDARDS
The
.Nm mkfifo
function call conforms to
.St -p1003.1-88 .
                                                                                                                                                                                                                                                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mknod.2                                      0100644 0001750 0001750 00000011623 12567450735 022063  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: mknod.2,v 1.6 1995/02/27 12:34:33 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)mknod.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt MKNOD 2
.Os BSD 4
.Sh NAME
.Nm mknod
.Nd make a special file node
.Sh SYNOPSIS
.Fd #include <sys/stat.h>
.Ft int
.Fo mknod
.Fa "const char *path"
.Fa "mode_t mode"
.Fa "dev_t dev"
.Fc
.Sh DESCRIPTION
The device special file
.Fa path
is created with the major and minor
device numbers extracted from
.Fa mode .
The access permissions of
.Fa path
are constrained by the
.Xr umask 2
of the parent process.
.Pp
If
.Fa mode
indicates a block or character special file,
.Fa dev
is a configuration-dependent specification of a character or block
I/O device and the superblock of the device.  If
.Fa mode
does not indicate a block special or character special device,
.Fa dev
is ignored.
.Pp
.Fn Mknod
requires super-user privileges.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Mknod
will fail and the file will be not created if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ==========
.It Bq Er EACCES
Write permission is denied for the parent directory.
.\" ==========
.It Bq Er EDQUOT
The directory in which the entry for the new node
is being placed cannot be extended;
the user's quota of disk blocks on the file system
containing the directory has been exhausted.
.\" ==========
.It Bq Er EDQUOT
The user's quota of inodes for the file system
on which the node is being created has been exhausted.
.\" ==========
.It Bq Er EEXIST
The named file exists.
.\" ==========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.\" ==========
.It Bq Er EINVAL
One or more of the arguments is invalid.
.\" ==========
.It Bq Er EIO
An I/O error occurs while making the directory entry
or allocating the inode.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeds 
.Dv {NAME_MAX}
characters or an entire path name exceeds 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
A component of the path prefix does not exist
or path is an empty string.
.\" ==========
.It Bq Er ENOSPC
The directory in which the entry for the new node is being placed
cannot be extended,
because there is no space left on the file system containing the directory.
.\" ==========
.It Bq Er ENOSPC
There are no free inodes on the file system
on which the node is being created.
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er EPERM
The process's effective user ID is not super-user.
.\" ==========
.It Bq Er EROFS
The created node would reside on a read-only file system.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <unistd.h>
.Pp
The include file has changed.
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr stat 2 ,
.Xr umask 2 ,
.Xr compat 5
.Sh HISTORY
A
.Fn mknod
function call appeared in 
.At v6 .
                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mlock.2                                      0100644 0001750 0001750 00000013730 12567450735 022061  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: mlock.2,v 1.3 1995/06/24 10:42:03 cgd Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)mlock.2	8.2 (Berkeley) 12/11/93
.\"
.Dd June 2, 1993
.Dt MLOCK 2
.Os
.Sh NAME
.Nm mlock ,
.Nm munlock
.Nd lock (unlock) physical pages in memory
.Sh SYNOPSIS
.Fd #include <sys/mman.h>
.Ft int
.Fo mlock
.Fa "const void *addr"
.Fa "size_t len"
.Fc
.Ft int
.Fo munlock
.Fa "const void *addr"
.Fa "size_t len"
.Fc
.Sh DESCRIPTION
The
.Nm mlock
system call
locks a set of physical pages into memory.
The pages are associated with a virtual address range
that starts at
.Fa addr
and extends for
.Fa len
bytes.
The
.Nm munlock
call unlocks pages that were previously locked by one or more
.Nm mlock
calls.
For both calls, the
.Fa addr
parameter should be aligned to a multiple of the page size.
If the
.Fa len
parameter is not a multiple of the page size,
it will be rounded up to be so.
The entire range must be allocated.
.Pp
After an
.Nm mlock
call, the indicated pages will cause neither a non-resident page
nor address-translation fault until they are unlocked.
They may still cause protection-violation faults or TLB-miss faults
on architectures with software-managed TLBs.
The physical pages remain in memory until all locked mappings
for the pages are removed.
.Pp
Multiple processes may have the same physical pages locked
via their own virtual address mappings.
Similarly, a single process may have pages multiply-locked
via different virtual mappings of the same pages or via nested
.Nm mlock
calls on the same address range.
Unlocking is performed explicitly by
.Nm munlock
or implicitly by a call to
.Nm munmap ,
which deallocates the unmapped address range.
Locked mappings are not inherited by the child process after a
.Xr fork 2 .
.Pp
Because physical memory is a potentially scarce resource,
processes are limited in how much memory they can lock down.
A single process can
.Nm mlock
the minimum of
a system-wide ``wired pages'' limit and
the per-process
.Li RLIMIT_MEMLOCK
resource limit.
.Sh RETURN VALUES
A return value of 0 indicates that the call succeeded
and all pages in the range have either been locked or unlocked,
as requested.
A return value of -1 indicates an error occurred
and the locked status of all pages in the range remains unchanged.
In this case, the global location
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Mlock
and 
.Fn munlock
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
The address given is not page-aligned or the length is negative.
.\" ===========
.It Bq Er ENOMEM
Part or all of the specified address range
is not mapped to the process.
.El
.Pp
.Fn Mlock
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EAGAIN
Locking the indicated range would exceed either the system or per-process
limit for locked memory.
.\" ===========
.It Bq Er ENOMEM
Some portion of the indicated address range is not allocated.
There was an error faulting/mapping a page.
.El
.Pp
.Fn Munlock
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er ENOMEM
Some portion of the indicated address range is not allocated.
Some portion of the indicated address range is not locked.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Pp
.Ft int
.br
.Fo mlock
.Fa "caddr_t addr"
.Fa "size_t len"
.Fc ;
.Pp
.Ft int
.br
.Fo munlock
.Fa "caddr_t addr"
.Fa "size_t len"
.Fc ;
.Pp
The variable type of
.Fa addr
has changed.
.Sh "SEE ALSO"
.Xr fork 2 ,
.Xr mincore 2 ,
.Xr minherit 2 ,
.Xr mmap 2 ,
.Xr munmap 2 ,
.Xr setrlimit 2 ,
.Xr getpagesize 3 ,
.Xr compat 5
.Sh BUGS
Unlike The Sun implementation, multiple
.Nm mlock
calls on the same address range require the corresponding number of
.Nm munlock
calls to actually unlock the pages, i.e.
.Nm mlock
nests.
This should be considered a consequence of the implementation
and not a feature.
.Pp
The per-process resource limit is a limit on the amount of virtual
memory locked, while the system-wide limit is for the number of locked
physical pages.
Hence a process with two distinct locked mappings of the same physical page
counts as 2 pages against the per-process limit and as only a single page
in the system limit.
.Sh HISTORY
The
.Fn mlock
and
.Fn munlock
functions first appeared in 4.4BSD.
                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mmap.2                                       0100644 0001750 0001750 00000023373 12567450735 021712  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)mmap.2	8.4 (Berkeley) 5/11/95
.\" $FreeBSD: src/lib/libc/sys/mmap.2,v 1.56 2007/01/09 00:28:15 imp Exp $
.\"
.Dd April 21, 2006
.Dt MMAP 2
.Os
.Sh NAME
.Nm mmap
.Nd allocate memory, or map files or devices into memory
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/mman.h
.Ft void *
.Fn mmap "void *addr" "size_t len" "int prot" "int flags" "int fd" "off_t offset"
.Sh DESCRIPTION
The
.Fn mmap
system call causes the pages starting at
.Fa addr
and continuing for at most
.Fa len
bytes to be mapped from the object described by
.Fa fd ,
starting at byte offset
.Fa offset .
If
.Fa offset
or
.Fa len
is not a multiple of the pagesize, the mapped region may extend past the
specified range.
Any extension beyond the end of the mapped object will be zero-filled.
.Pp
The
.Fa addr
argument is used by the system to determine the starting address of the mapping,
and its interpretation is dependent on the setting of the MAP_FIXED flag.
If MAP_FIXED is specified in
.Fa flags ,
the system will try to place the mapping at the specified address, 
possibly removing a
mapping that already exists at that location.
If MAP_FIXED is not specified,
then the system will attempt to use the range of addresses starting at
.Fa addr
if they do not overlap any existing mappings,
including memory allocated by malloc(3) and other such allocators.
Otherwise,
the system will choose an alternate address for the mapping (using an implementation
dependent algorithm)
that does not overlap any existing
mappings.
In other words,
without MAP_FIXED the system will attempt to find an empty location in the address space if the specified address 
range has already been mapped by something else.
If
.Fa addr
is zero and MAP_FIXED is not specified,
then an address will be selected by the system so as not to overlap
any existing mappings in the address space.
In all cases,
the actual starting address of the region is returned.
If MAP_FIXED is specified,
a successful
.Fa mmap
deletes any previous mapping in the allocated address range.
Previous mappings are never deleted if MAP_FIXED is not specified.
.Pp
The protections (region accessibility) are specified in the
.Fa prot
argument by
.Em or Ns 'ing
the following values:
.Pp
.Bl -tag -width PROT_WRITE -compact
.It Dv PROT_NONE
Pages may not be accessed.
.It Dv PROT_READ
Pages may be read.
.It Dv PROT_WRITE
Pages may be written.
.It Dv PROT_EXEC
Pages may be executed.
.El
.Pp
Note that, due to hardware limitations, on some platforms PROT_WRITE may
imply PROT_READ, and PROT_READ may imply PROT_EXEC.  Portable programs
should not rely on these flags being separately enforcable.
.Pp
The
.Fa flags
argument specifies the type of the mapped object, mapping options and
whether modifications made to the mapped copy of the page are private
to the process (copy-on-write) or are to be shared with other references.
Sharing, mapping type and options are specified in the
.Fa flags
argument by
.Em or Ns 'ing
the following values:
.Bl -tag -width MAP_HASSEMAPHORE
.It Dv MAP_ANONYMOUS
Synonym for
.Dv MAP_ANON.
.It Dv MAP_ANON
Map anonymous memory not associated with any specific file.
The
.Fa offset
argument is ignored.
Mac OS X specific: the file descriptor used for creating
.Dv MAP_ANON
regions can be used to pass some Mach VM flags, and can 
be specified as \-1 if no such flags are associated with 
the region.  Mach VM flags are defined in 
<mach/vm_statistics.h> and the ones that currently apply 
to 
.Nm mmap
are:
.Pp
VM_FLAGS_PURGABLE	to create Mach purgable (i.e. volatile) memory
.Pp
VM_MAKE_TAG(tag)	to associate an 8-bit tag with the region
.br
<mach/vm_statistics.h> defines some preset tags (with a VM_MEMORY_ prefix).
Users are encouraged to use tags between 240 and 255.
Tags are used by tools such as vmmap(1) to help identify specific memory regions.
.Pp
VM_FLAGS_SUPERPAGE_SIZE_*	to use superpages for the allocation. 
See <mach/vm_statistics.h> for supported architectures and sizes (or use
VM_FLAGS_SUPERPAGE_SIZE_ANY to have the kernel choose a size).
The specified size must be divisible by the superpage size (except for
VM_FLAGS_SUPERPAGE_SIZE_ANY), and if you use MAP_FIXED, the specified address
must be properly aligned. If the system cannot satisfy the request with superpages,
the call will fail. Note that currently, superpages are always wired and not
inherited by children of the process.
.It Dv MAP_FILE
Mapped from a regular file.  (This is
the default mapping type, and need not be specified.)
.It Dv MAP_FIXED
Do not permit the system to select a different address than the one
specified.
If the specified address cannot be used,
.Fn mmap
will fail.
If
.Dv MAP_FIXED
is specified,
.Fa addr
must be a multiple of the pagesize.
If a
.Dv MAP_FIXED
request is successful, the mapping established by
.Fn mmap
replaces any previous mappings for the process' pages in the range from
.Fa addr
to
.Fa addr
+
.Fa len .
Use of this option is discouraged.
.It Dv MAP_HASSEMAPHORE
Notify the kernel that the region may contain semaphores and that special
handling may be necessary.
.It Dv MAP_PRIVATE
Modifications are private (copy-on-write).
.It Dv MAP_SHARED
Modifications are shared.
.It Dv MAP_NOCACHE
Pages in this mapping are not retained in the kernel's memory cache.
If the system runs low on memory, pages in MAP_NOCACHE mappings will be among
the first to be reclaimed.
This flag is intended for mappings that have little locality and 
provides a hint to the kernel that pages in this mapping are unlikely to be needed
again in the near future.
.El
.Pp
Conforming applications must specify either MAP_PRIVATE or MAP_SHARED.
.Pp
The
.Xr close 2
system call does not unmap pages, see
.Xr munmap 2
for further information.
.Pp
The current design does not allow a process to specify the location of
swap space.
In the future we may define an additional mapping type,
.Dv MAP_SWAP ,
in which
the file descriptor argument specifies a file or device to which swapping
should be done.
.Sh RETURN VALUES
Upon successful completion,
.Fn mmap
returns a pointer to the mapped region.
Otherwise, a value of
.Dv MAP_FAILED
is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn mmap
system call
will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
The flag
.Dv PROT_READ
was specified as part of the
.Fa prot
argument and
.Fa fd
was not open for reading.
The flags
.Dv MAP_SHARED
and
.Dv PROT_WRITE
were specified as part of the
.Fa flags
and
.Fa prot
argument and
.Fa fd
was not open for writing.
.It Bq Er EBADF
The
.Fa fd
argument
is not a valid open file descriptor.
.It Bq Er EINVAL
.Dv MAP_FIXED
was specified and the
.Fa addr
argument was not page aligned, or part of the desired address space
resides out of the valid address space for a user process.
.It Bq Er EINVAL
.Fa flags
does not include either MAP_PRIVATE or MAP_SHARED.
.It Bq Er EINVAL
The
.Fa len
argument
was negative or zero. Historically, the system call would not return an error if the argument was zero. 
See other potential additional restrictions in the 
COMPATIBILITY section below. 
.It Bq Er EINVAL
The
.Fa offset
argument
was not page-aligned based on the page size as returned by getpagesize(3).
.It Bq Er ENODEV
.Dv MAP_ANON
has not been specified and the file
.Fa fd
refers to does not support mapping.
.It Bq Er ENOMEM
.Dv MAP_FIXED
was specified and the
.Fa addr
argument was not available.
.Dv MAP_FIXED
was specified and the address range specified exceeds the address space
limit for the process.
.Dv MAP_ANON
was specified and insufficient memory was available.
.It Bq Er ENXIO
Addresses in the specified range are invalid for 
.Fa fd .
.It Bq Er EOVERFLOW
Addresses in the specified range exceed the maximum offset
set for 
.Fa fd .
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh COMPATIBILITY
.Fn mmap
now returns with
.Va errno
set to EINVAL in places that historically succeeded.
The rules have changed as follows:
.Bl -bullet
.It
The
.Fa flags
parameter must specify either MAP_PRIVATE or MAP_SHARED.
.It
The
.Fa len
parameter must not be 0.
.It
The
.Fa off
parameter must be a multiple of pagesize,
as returned by
.Fn sysconf .
.El
.Sh SEE ALSO
.Xr madvise 2 ,
.Xr mincore 2 ,
.Xr minherit 2 ,
.Xr mlock 2 ,
.Xr mprotect 2 ,
.Xr msync 2 ,
.Xr munlock 2 ,
.Xr munmap 2 ,
.Xr shmat 2 ,
.Xr getpagesize 3
                                                                                                                                                                                                                                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mount.2                                      0100644 0001750 0001750 00000015467 12567450735 022127  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$OpenBSD: mount.2,v 1.6 1997/03/09 19:41:16 millert Exp $
.\"	$NetBSD: mount.2,v 1.12 1996/02/29 23:47:48 jtc Exp $
.\"
.\" Copyright (c) 1980, 1989, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)mount.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt MOUNT 2
.Os BSD 4
.Sh NAME
.Nm mount ,
.Nm unmount
.Nd mount or dismount a filesystem
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/mount.h>
.Ft int
.Fn mount "const char *type" "const char *dir" "int flags" "void *data"
.Ft int
.Fn unmount "const char *dir" "int flags"
.Sh DESCRIPTION
The
.Fn mount
function grafts
a filesystem object onto the system file tree
at the point
.Ar dir .
The argument
.Ar data
describes the filesystem object to be mounted.
The argument
.Ar type
tells the kernel how to interpret
.Ar data
(See
.Ar type
below).
The contents of the filesystem
become available through the new mount point
.Ar dir .
Any files in
.Ar dir
at the time
of a successful mount are swept under the carpet so to speak, and
are unavailable until the filesystem is unmounted.
.Pp
The following
.Ar flags
may be specified to
suppress default semantics which affect filesystem access.
.Bl -tag -width MNT_SYNCHRONOUS
.It Dv MNT_RDONLY
The filesystem should be treated as read-only;
Even the super-user may not write on it.
.It Dv MNT_NOEXEC
Do not allow files to be executed from the filesystem.
.It Dv MNT_NOSUID
Do not honor setuid or setgid bits on files when executing them.
.It Dv MNT_NODEV
Do not interpret special files on the filesystem.
.It Dv MNT_UNION
Union with underlying filesystem instead of obscuring it.
.It Dv MNT_SYNCHRONOUS
All I/O to the filesystem should be done synchronously.
.It Dv MNT_CPROTECT
Enable data protection on the filesystem if the filesystem is configured for it.
.El
.Pp
The flag
.Dv MNT_UPDATE
indicates that the mount command is being applied
to an already mounted filesystem.
This allows the mount flags to be changed without requiring
that the filesystem be unmounted and remounted.
Some filesystems may not allow all flags to be changed.
For example,
most filesystems will not allow a change from read-write to read-only.
.Pp
The flag
.Dv MNT_RELOAD
causes the vfs subsystem to update its data structures pertaining to
the specified already mounted filesystem.
.Pp
The
.Fa type
argument defines the type of the filesystem.
.Pp
.Fa Data
is a pointer to a structure that contains the type
specific arguments to mount.
The format for these argument structures is described in the
manual page for each filesystem.
.Pp
The
.Fn unmount
function call disassociates the filesystem from the specified
mount point
.Fa dir .
.Pp
The
.Fa flags
argument may specify
.Dv MNT_FORCE
to specify that the filesystem should be forcibly unmounted even if files are
still active.
Active special devices continue to work,
but any further accesses to any other active files result in errors
even if the filesystem is later remounted.
.Sh RETURN VALUES
The
.Fn mount
returns the value 0 if the mount was successful, otherwise -1 is returned
and the variable
.Va errno
is set to indicate the error.
.Pp
.Nm unmount
returns the value 0 if the unmount succeeded; otherwise -1 is returned
and the variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Mount
will fail when one of the following occurs:
.Bl -tag -width [ENAMETOOLONG]
.It Bq Er EPERM
The caller is not the super-user, and the device-node and the mountpoint
do not have adequate ownership and permissions.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating a pathname.
.It Bq Er ENOENT
A component of
.Fa dir
does not exist.
.It Bq Er ENOTDIR
A component of
.Ar name
is not a directory,
or a path prefix of
.Ar special
is not a directory.
.It Bq Er EINVAL
A pathname contains a character with the high-order bit set.
.It Bq Er EBUSY
Another process currently holds a reference to
.Fa dir .
.It Bq Er EFAULT
.Fa Dir
points outside the process's allocated address space.
.El
.Pp
.Nm unmount
may fail with one of the following errors:
.Bl -tag -width [ENAMETOOLONG]
.It Bq Er EPERM
The caller is not the super-user, and the
.Nm mount()
was not done by the user.
.It Bq Er ENOTDIR
A component of the path is not a directory.
.It Bq Er EINVAL
The pathname contains a character with the high-order bit set.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EINVAL
The requested directory is not in the mount table.
.It Bq Er EBUSY
A process is holding a reference to a file located
on the filesystem.
.It Bq Er EIO
An I/O error occurred while writing cached filesystem information.
.It Bq Er EFAULT
.Fa Dir
points outside the process's allocated address space.
.El
.Sh SEE ALSO
.Xr mount 8 ,
.Xr unmount 8
.Sh BUGS
Some of the error codes need translation to more obvious messages.
.Sh HISTORY
.Fn Mount
and
.Fn unmount
function calls appeared in
.At v6 .
                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/mprotect.2                                   0100644 0001750 0001750 00000011742 12567450735 022612  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\"	$NetBSD: mprotect.2,v 1.6 1995/10/12 15:41:08 jtc Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)mprotect.2	8.1 (Berkeley) 6/9/93
.\" $FreeBSD: src/lib/libc/sys/mprotect.2,v 1.18 2007/01/09 00:28:15 imp Exp $
.\"
.Dd October 16, 2008
.Dt MPROTECT 2
.Os
.Sh NAME
.Nm mprotect
.Nd control the protection of pages
.Sh SYNOPSIS
.Fd #include <sys/mman.h>
.Ft int
.Fo mprotect
.Fa "void *addr"
.Fa "size_t len"
.Fa "int prot"
.Fc
.Sh DESCRIPTION
The
.Fn mprotect
system call
changes the specified pages to have protection
.Fa prot .
Not all implementations will guarantee protection on a page basis but Mac OS X's
current implementation does.
.Pp
When a program violates the protections of a page, it gets a SIGBUS or SIGSEGV signal. 
.Pp
Currently
.Fa prot
can be one or more of the following:
.Pp
.Bl -tag -width ".Dv PROT_WRITE" -compact
.It Dv PROT_NONE
No permissions at all.
.It Dv PROT_READ
The pages can be read.
.It Dv PROT_WRITE
The pages can be written.
.It Dv PROT_EXEC
The pages can be executed.
.El
.Sh RETURN VALUES
Upon successful completion,
a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn mprotect
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
The requested protection conflicts with
the access permissions of the process
on the specified address range.
.\" ===========
.\" .It Bq Er EAGAIN
.\" Insufficient memory resources exist to allow locking a private page
.\" under PROT_WRITE.
.\" ===========
.It Bq Er EINVAL
.Fa addr
is not a multiple of the page size (i.e.
.Fa addr
is not page-aligned).
.\" ===========
.\" .It Bq Er ENOMEM
.\" The specified address range is outside of the address range
.\" of the process or includes an unmapped page.
.\" ===========
.It Bq Er ENOTSUP
The combination of accesses requested in
.Fa prot
is not supported.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Pp
.Ft int
.br
.Fo mprotect
.Fa "caddr_t addr"
.Fa "size_t len"
.Fa "int prot"
.Fc ;
.Pp
The type of
.Fa addr
has changed.
.Sh SEE ALSO
.Xr madvise 2 , 
.Xr mincore 2 , 
.Xr msync 2 ,
.Xr munmap 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn mprotect
function first appeared in 4.4BSD.
                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/msync.2                                      0100644 0001750 0001750 00000007250 12567450735 022105  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)msync.2	8.2 (Berkeley) 6/21/94
.\" $FreeBSD: src/lib/libc/sys/msync.2,v 1.17 2000/04/21 09:41:53 phantom Exp $
.\"
.Dd June 21, 1994
.Dt MSYNC 2
.Os
.Sh NAME
.Nm msync
.Nd synchronize a mapped region
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.Fd #include <sys/mman.h>
.Ft int
.Fo msync
.Fa "void *addr"
.Fa "size_t len"
.Fa "int flags"
.Fc
.Sh DESCRIPTION
The
.Fn msync
system call writes modified whole pages back to the filesystem
and updates the file modification time.
Only those pages containing 
.Fa addr
and
.Fa len-1
succeeding locations will be examined.
.Pp
The
.Fa flags
argument may be specified as follows:
.Bd -literal
MS_ASYNC	Return immediately
MS_SYNC		Perform synchronous writes
MS_INVALIDATE	Invalidate all cached data
.Ed
.Pp
The
.Fa MS_ASYNC
flag is not permitted to be combined with other flags.
.Sh RETURN VALUES
If any errors occur, -1 is returned and errno is set to indicate the
error.
Otherwise, a 0 value is returned.
.Sh ERRORS
.Fn msync
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EBUSY
Some of the specified addresses are locked
and MS_INVALIDATE is specified.
.\" ===========
.It Bq Er EINVAL
.Fa addr
is not a multiple of the hardware page size.
.\" ===========
.It Bq Er EINVAL
.Fa len
is too large, or less than 1.
.\" ===========
.It Bq Er EINVAL
.Fa flags
is invalid
(e.g., it combines MS_ASYNC with another flag,
which is not permitted).
.\" ===========
.It Bq Er EIO
An I/O error occurs while writing to the file system.
.\" ===========
.It Bq Er ENOMEM
The specified address range is outside of the address range
of the process or includes an unmapped page.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Sh SEE ALSO
.Xr madvise 2 ,
.Xr mincore 2 ,
.Xr mprotect 2 ,
.Xr munmap 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn msync
function first appeared in
.Bx 4.4 .
                                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/munlock.2                                    0100644 0001750 0001750 00000000021 12567450735 022411  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/mlock.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/munmap.2                                     0100644 0001750 0001750 00000012401 12567450735 022243  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\"	$NetBSD: munmap.2,v 1.5 1995/02/27 12:35:03 cgd Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)munmap.2	8.2 (Berkeley) 4/15/94
.\"
.Dd October 16, 2008
.Dt MUNMAP 2
.Os
.Sh NAME
.Nm munmap
.Nd remove a mapping
.Sh SYNOPSIS
.Fd #include <sys/mman.h>
.Ft int
.Fo munmap
.Fa "void *addr"
.Fa "size_t len"
.Fc
.Sh DESCRIPTION
The
.Fn munmap
system call
deletes the mappings for the specified address range,
causing further references to addresses within the range
to generate invalid memory references.
.Sh DIRTY PAGE HANDLING
How
.Fn munmap
handles a dirty page, depends on what type of memory is being unmapped:
.Pp
.Bl -tag -width "[System V Shared]"
.It Bq Anonymous
If the memory is anonymous memory and if the last reference is going
away, then the contents are discarded by definition of anonymous memory.
.It Bq System V Shared
If the memory mapping was created using System V shared memory, then 
the contents persist until the System V memory region is destroyed or 
the system is rebooted.
.It Bq File mapping
If the mapping maps data from a file (MAP_SHARED), then the memory will 
eventually be written back to disk if it's dirty.  This will happen 
automatically at some point in the future (implementation dependent).
Note: to force the memory to be written back to the disk, use 
.Xr msync 2 .
.El
.Pp
If there are still other references to the memory when the munmap is 
done, then nothing is done to the memory itself and it may be swapped 
out if need be. The memory will continue to persist until the last 
reference goes away (except for System V shared memory in which case, 
see above).
.Sh RETURN VALUES
Upon successful completion,
.Nm munmap
returns zero.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Munmap
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
The
.Fa addr
parameter was not page aligned (i.e., a multiple of the page size).
.\" ===========
.It Bq Er EINVAL
The
.Fa len
parameter was negative or zero.
.\" ===========
.It Bq Er EINVAL
Some part of the region being unmapped is not part of the currently
valid address space.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Pp
The include file
.In sys/types.h
is necessary.
.Pp
.Ft int
.br
.Fo munmap
.Fa "caddr_t addr"
.Fa "size_t len"
.Fc ;
.Pp
The type of
.Fa addr
has changed.
.Sh "SEE ALSO"
.Xr getpagesize 3 ,
.Xr msync 2 ,
.Xr munmap 2 ,
.Xr mprotect 2 ,
.Xr madvise 2 ,
.Xr mincore 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn munmap
function first appeared in 4.4BSD.
                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/nanosleep.2                                  0100644 0001750 0001750 00000007017 12566166137 022740  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" $FreeBSD: src/lib/libc/sys/nanosleep.2,v 1.8.2.4 2001/12/14 18:34:01 ru Exp $
.\"	$OpenBSD: nanosleep.2,v 1.1 1997/04/20 20:56:20 tholo Exp $
.\"	$NetBSD: nanosleep.2,v 1.1 1997/04/17 18:12:02 jtc Exp $
.\"
.\" Copyright (c) 1986, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)sleep.3	8.1 (Berkeley) 6/4/93
.\"
.Dd April 17, 1997
.Dt NANOSLEEP 2
.Os
.Sh NAME
.Nm nanosleep
.Nd suspend thread execution for an interval measured in nanoseconds
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In time.h
.Ft int
.Fo nanosleep
.Fa "const struct timespec *rqtp"
.Fa "struct timespec *rmtp"
.Fc
.Sh DESCRIPTION
The
.Fn nanosleep
function causes the calling thread to sleep
for the amount of time specified in
.Fa rqtp
(the actual time slept may be longer, due to system latencies
and possible limitations in the timer resolution of the hardware).
An unmasked signal will
cause
.Fn nanosleep
to terminate the sleep early, regardless of the
.Dv SA_RESTART
value on the interrupting signal.
.Sh RETURN VALUES
If
.Fn nanosleep
returns because the requested time has elapsed,
the value returned will be zero.
.Pp
If
.Fn nanosleep
returns due to the delivery of a signal, the value returned
will be the -1, and the global variable
.Va errno
will be set to indicate the interruption.
If
.Fa rmtp
is
.Pf non- Dv NULL ,
the timespec structure it references is updated to contain the
unslept amount (the request time minus the time actually slept).
.Sh ERRORS
The
.Fn nanosleep
call fails if:
.Bl -tag -width Er
.It Bq Er EINTR
.Fn nanosleep
was interrupted by the delivery of a signal.
.It Bq Er EINVAL
.Fa rqtp
specified a nanosecond value less than zero
or greater than or equal to 1000 million.
.El
.Sh SEE ALSO
.Xr sigsuspend 2 ,
.Xr sleep 3
.Sh STANDARDS
The
.Fn nanosleep
function conforms to
.St -p1003.1b-93 .
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/nfsclnt.2                                    0100644 0001750 0001750 00000005475 12567450735 022432  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2007 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd January 9, 2007
.Dt NFSCLNT 2
.Os
.Sh NAME
.Nm nfsclnt
.Nd NFS client services
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Fd #include <nfs/nfs.h>
.Ft int
.Fn nfsclnt "int flags" "void *argstructp"
.Sh DESCRIPTION
The
.Fn nfsclnt
function is used by the NFS client daemons to pass information into and out
of the kernel.
The
.Fa flags
argument consists of several bits that show what action is to be taken
once in the kernel and the
.Fa argstructp
points to any corresponding data that the action may require.
.Pp
.Xr rpc.lockd 8
calls
.Fn nfsclnt
with the flag
.Dv NFSCLNT_LOCKDANS
and a pointer to a
.Bd -literal
struct lockd_ans {
	int		la_version;		/* lockd_ans version */
	int		la_errno;		/* return status */
	u_int64_t	la_xid;			/* unique message transaction ID */
	int		la_flags;		/* answer flags */
	pid_t		la_pid;			/* pid of lock requester/owner */
	off_t		la_start;		/* lock starting offset */
	off_t		la_len;			/* lock length */
	int 		la_fh_len;		/* The file handle length. */
	u_int8_t	la_fh[NFSV3_MAX_FH_SIZE];/* The file handle. */
};
.Ed
.sp
to pass the response to an NFS file locking request back
into the kernel.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.  Otherwise, -1
is returned and the global variable
.Va errno
is set to specify the error.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EPERM
The caller is not the super-user.
.It Bq Er EINVAL
The action specified by the
.Fa flags
argument was not valid.
.It Bq EFAULT
.Fa argstructp
points to an invalid address.
.It Bq EPIPE
The response doesn't match any currently-outstanding lock request.
.El
.Sh SEE ALSO
.Xr rpc.lockd 8
.Sh BUGS
The
.Nm nfsclnt
system call is designed specifically for the
.Tn NFS
client daemons and as such is specific to their requirements.  Several
fields of the argument structures are assumed to be valid, such that
.Nm nfsclnt
must be used with extreme care.
                                                                                                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/nfssvc.2                                     0100644 0001750 0001750 00000012706 12567450735 022260  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 1999-2007 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"	$NetBSD: nfssvc.2,v 1.6 1995/02/27 12:35:08 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)nfssvc.2	8.1 (Berkeley) 6/9/93
.\"
.Dd January 9, 2007
.Dt NFSSVC 2
.Os
.Sh NAME
.Nm nfssvc
.Nd NFS services
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Fd #include <nfs/nfs.h>
.Ft int
.Fn nfssvc "int flags" "void *argstructp"
.Sh DESCRIPTION
The
.Fn nfssvc
function is used by the NFS server daemon to pass information into and out
of the kernel and also to enter the kernel as a server daemon.
The
.Fa flags
argument consists of several bits that show what action is to be taken
once in the kernel and the
.Fa argstructp
points to any corresponding data that the action may require.
.Pp
.Fn nfssvc
is called with the flag
.Dv NFSSVC_NFSD
and a NULL
.Fa argstructp
to enter the kernel as an
.Xr nfsd 8
daemon.  The
.Dv NFSSVC_NFSD
action normally does not return until the NFS server is stopped.
.Pp
The
.Xr nfsd 8
server daemon calls
.Fn nfssvc
with the flag
.Dv NFSSVC_ADDSOCK
and a pointer to a
.Bd -literal
struct nfsd_args {
	int	sock;		/* Socket to serve */
	caddr_t	name;		/* Client address for connection based sockets */
	int	namelen;	/* Length of name */
};
.Ed
.sp
to pass a server side
.Tn NFS
socket into the kernel for servicing by the
.Xr nfsd 8
daemons.
.Pp
The
.Xr nfsd 8
server daemon calls
.Fn nfssvc
with the flag
.Dv NFSSVC_EXPORT
and a pointer to a
.Bd -literal
struct nfs_export_args {
	uint32_t		nxa_fsid;	/* export FS ID */
	uint32_t		nxa_expid;	/* export ID */
	char			*nxa_fspath;	/* export FS path */
	char			*nxa_exppath;	/* export sub-path */
	uint32_t		nxa_flags;	/* export arg flags */
	uint32_t		nxa_netcount;	/* #entries in ex_nets array */
	struct nfs_export_net_args *nxa_nets;	/* array of net args */
};
.Ed
.sp
to pass exported file system information into the kernel.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.  Otherwise, -1 is
returned the global variable
.Va errno
is set to specify the error.
.Pp
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EPERM
The caller is not the super-user.
.It Bq Er EINVAL
The action specified by the
.Fa flags
argument was not valid.
.It Bq EFAULT
.Fa argstructp
points to an invalid address.
.It Bq ENOMEM
A memory allocation failure prevented the action from completing.
.It Bq EEXIST
An attempt was made to add a UDP socket via the
.Dv NFSSVC_ADDSOCK
action, but the UDP socket has already been added.
.El
.Sh SEE ALSO
.Xr nfsd 8
.Sh HISTORY
The
.Nm nfssvc
function first appeared in 4.4BSD.
.Sh BUGS
The
.Nm nfssvc
system call is designed specifically for the
.Tn NFS
server daemons and as such is specific to their requirements.  Several
fields of the argument structures are assumed to be valid, such that
.Nm nfssvc
must be used with extreme care.
                                                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/open.2                                       0100644 0001750 0001750 00000030206 12567450735 021712  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2010 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\"	$NetBSD: open.2,v 1.8 1995/02/27 12:35:14 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)open.2	8.2 (Berkeley) 11/16/93
.\"
.Dd November 10, 2010
.Dt OPEN 2
.Os BSD 4
.Sh NAME
.Nm open , openat
.Nd open or create a file for reading or writing
.Sh SYNOPSIS
.\" OH??? .Fd #include <sys/stat.h>
.Fd #include <fcntl.h>
.Ft int
.Fo open
.Fa "const char *path"
.Fa "int oflag"
.Fa "..."
.Fc
.Ft int
.Fn openat "int fd" "const char *path" "int oflag" "..."
.Sh DESCRIPTION
The file name specified by
.Fa path
is opened
for reading and/or writing,
as specified by the argument
.Fa oflag ;
the file descriptor is returned to the calling process.
.Pp
The
.Fa oflag
argument may indicate that the file is to be
created if it does not exist (by specifying the
.Dv O_CREAT
flag).  In this case,
.Fn open
and
.Fn openat
require an additional argument
.Fa "mode_t mode" ;
the file is created with mode
.Fa mode
as described in
.Xr chmod 2
and modified by the process' umask value (see
.Xr umask 2 ) .
.Pp
The
.Fn openat
function is equivalent to the
.Fn open
function except in the case where the
.Fa path
specifies a relative path.
In this case the file to be opened is determined relative to the directory
associated with the file descriptor
.Fa fd
instead of the current working directory.
The
.Fa oflag
argument and the optional fourth argument correspond exactly to
the arguments for
.Fn open .
If
.Fn openat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
argument, the current working directory is used
and the behavior is identical to a call to
.Fn open .
.Pp
The flags specified
for the
.Fa oflag
argument are formed by
.Em or Ns 'ing
the following values:
.Pp
.Bd -literal -offset indent -compact
O_RDONLY	open for reading only
O_WRONLY	open for writing only
O_RDWR		open for reading and writing
O_NONBLOCK	do not block on open or for data to become available
O_APPEND	append on each write
O_CREAT		create file if it does not exist
O_TRUNC		truncate size to 0
O_EXCL		error if O_CREAT and the file exists
O_SHLOCK	atomically obtain a shared lock
O_EXLOCK	atomically obtain an exclusive lock
O_NOFOLLOW	do not follow symlinks
O_SYMLINK	allow open of symlinks
O_EVTONLY	descriptor requested for event notifications only
O_CLOEXEC	mark as close-on-exec
.Ed
.Pp
Opening a file with
.Dv O_APPEND
set causes each write on the file to be appended to the end.  If
.Dv O_TRUNC
is specified and the
file exists, the file is truncated to zero length.
If
.Dv O_EXCL
is set with
.Dv O_CREAT
and the file already
exists,
.Fn open
returns an error.
This may be used to implement a simple exclusive-access locking mechanism.
If
.Dv O_EXCL
is set with
.Dv O_CREAT
and the last component of the pathname is a symbolic link,
.Fn open
will fail even if the symbolic link points to a non-existent name.
.Pp
If the
.Dv O_NONBLOCK
flag is specified, do not wait for the device or file
to be ready or available.  If the
.Fn open
call would result
in the process being blocked for some reason
(e.g., waiting for carrier on a dialup line),
.Fn open
returns immediately.
This flag also has the effect of making all subsequent I/O
on the open file non-blocking.
.Pp
When opening a file, a lock with
.Xr flock 2
semantics can be obtained by setting
.Dv O_SHLOCK
for a shared lock, or
.Dv O_EXLOCK
for an exclusive lock.
If creating a file with
.Dv O_CREAT ,
the request for the lock will never fail
(provided that the underlying filesystem supports locking).
.Pp
If
.Dv O_NOFOLLOW
is used in the mask and the target file passed to
.Fn open
is a symbolic link then the
.Fn open
will fail.
.Pp
If
.Dv O_SYMLINK
is used in the mask and the target file passed to
.Fn open
is a symbolic link then the
.Fn open
will be for the symbolic link itself, not what it links to.
.Pp
The
.Dv O_EVTONLY
flag is only intended for monitoring a file for changes (e.g. kqueue). Note: when 
this flag is used, the opened file will not prevent an unmount 
of the volume that contains the file.
.Pp
The
.Dv O_CLOEXEC
flag causes the file descriptor to be marked as close-on-exec,
setting the
.Dv FD_CLOEXEC
flag.  The state of the file descriptor flags can be inspected
using the F_GETFD fcntl.  See
.Xr fcntl 2 .
.Pp
If successful,
.Fn open
returns a non-negative integer, termed a file descriptor.
It returns -1 on failure.
The file pointer (used to mark the current position within the file)
is set to the beginning of the file.
.Pp
When a new file is created,
it is given the group of the directory which contains it.
.Pp
The new descriptor is set to remain open across
.Xr execve
system calls; see
.Xr close 2
and
.Xr fcntl 2 .
.Pp
The system imposes a limit on the number of file descriptors
that can be held open simultaneously by one process.
.Xr Getdtablesize 2
returns the current system limit.
.Sh RETURN VALUES
If successful,
.Fn open
returns a non-negative integer, termed a file descriptor.
It returns -1 on failure, and sets
.Va errno
to indicate the error.
.Sh ERRORS
The named file is opened unless:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ===========
.It Bq Er EACCES
The required permissions (for reading and/or writing)
are denied for the given flags.
.\" ===========
.It Bq Er EACCES
.Dv O_CREAT
is specified,
the file does not exist,
and the directory in which it is to be created
does not permit writing.
.\" ===========
.It Bq Er EACCES
.Dv O_TRUNC
is specified and write permission is denied.
.\" ===========
.It Bq Er EAGAIN
.Fa path
specifies the slave side of a locked pseudo-terminal device.
.\" ===========
.It Bq Er EDQUOT
.Dv O_CREAT
is specified,
the file does not exist,
and the directory in which the entry for the new file
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.\" ===========
.It Bq Er EDQUOT
.Dv O_CREAT
is specified,
the file does not exist,
and the user's quota of inodes on the file system
on which the file is being created has been exhausted.
.\" ===========
.It Bq Er EEXIST
.Dv O_CREAT
and
.Dv O_EXCL
are specified and the file exists.
.\" ===========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.\" ===========
.It Bq Er EINTR
The
.Fn open
operation is interrupted by a signal.
.\" ===========
.It Bq Er EINVAL
The value of
.Fa oflag
is not valid.
.\" ===========
.It Bq Er EIO
An I/O error occurs while making the directory entry or
allocating the inode for
.Dv O_CREAT .
.\" ===========
.It Bq Er EISDIR
The named file is a directory, and the arguments specify
that it is to be opened for writing.
.\" ===========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ===========
.It Bq Er EMFILE
The process has already reached its limit for open file descriptors.
.\" ===========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeds
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ===========
.It Bq Er ENFILE
The system file table is full.
.\" ===========
.It Bq Er ELOOP
.Dv O_NOFOLLOW
was specified and the target is a symbolic link.
.\" ===========
.It Bq Er ENOENT
.Dv O_CREAT
is not set and the named file does not exist.
.\" ===========
.It Bq Er ENOENT
A component of the path name that must exist does not exist.
.\" ===========
.It Bq Er ENOSPC
.Dv O_CREAT
is specified,
the file does not exist,
and the directory in which the entry for the new file is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.\" ===========
.It Bq Er ENOSPC
.Dv O_CREAT
is specified,
the file does not exist,
and there are no free inodes on the file system on which the
file is being created.
.\" ===========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ===========
.It Bq Er ENXIO
The named file is a character-special or block-special file
and the device associated with this special file does not exist.
.\" ===========
.It Bq Er ENXIO
O_NONBLOCK and O_WRONLY are set, the file is a FIFO,
and no process has it open for reading.
.\" ===========
.It Bq Er EOPNOTSUPP
.Dv O_SHLOCK
or
.Dv O_EXLOCK
is specified, but the underlying filesystem does not support locking.
.\" ===========
.It Bq Er EOPNOTSUPP
An attempt is made to open a socket (not currently implemented).
.\" ===========
.It Bq Er EOVERFLOW
The named file is a regular file
and its size does not fit in an object of type off_t.
.\" ===========
.It Bq Er EROFS
The named file resides on a read-only file system,
and the file is to be modified.
.\" ===========
.It Bq Er ETXTBSY
The file is a pure procedure (shared text) file that is being
executed and the
.Fn open
call requests write access.
.It Bq Eq EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is
neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Eq ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh COMPATIBILITY
.Fn open
on a terminal device (i.e., /dev/console)
will now make that device a controlling terminal for the process.
Use the O_NOCTTY flag to open a terminal device
without changing your controlling terminal.
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr close 2 ,
.Xr dup 2 ,
.Xr getdtablesize 2 ,
.Xr lseek 2 ,
.Xr read 2 ,
.Xr umask 2 ,
.Xr write 2
.Sh HISTORY
An
.Fn open
function call appeared in 
.At v6 .
The
.Fn openat
function was introduced in OS X 10.10
                                                                                                                                                                                                                                                                                                                                                                                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/openat.2                                     0100644 0001750 0001750 00000000020 12567450735 022226  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/open.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/pathconf.2                                   0100644 0001750 0001750 00000013445 12567450735 022561  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: pathconf.2,v 1.2 1995/02/27 12:35:22 cgd Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)pathconf.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt PATHCONF 2
.Os BSD 4
.Sh NAME
.Nm fpathconf ,
.Nm pathconf
.Nd get configurable pathname variables
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft long
.Fo fpathconf
.Fa "int fildes"
.Fa "int name"
.Fc
.Ft long
.Fo pathconf
.Fa "const char *path"
.Fa "int name"
.Fc
.Sh DESCRIPTION
.Pp
The
.Fn pathconf
and
.Fn fpathconf
functions provides a method for applications to determine the current
value of a configurable system limit or option variable associated
with a pathname or file descriptor.
.Pp
For
.Nm pathconf ,
the
.Fa path
argument is the name of a file or directory.
For
.Nm fpathconf ,
the
.Fa fildes
argument is an open file descriptor.
The
.Fa name
argument specifies the system variable to be queried.
Symbolic constants for each name value are found in the include file
.Li <unistd.h> .
.Pp
The available values are as follows:
.Pp
.Bl -tag -width "123456"
.Pp
.It Li _PC_LINK_MAX
The maximum file link count.
.It Li _PC_MAX_CANON
The maximum number of bytes in terminal canonical input line.
.It Li _PC_MAX_INPUT
The minimum maximum number of bytes for which space is available in
a terminal input queue.
.It Li _PC_NAME_MAX
The maximum number of bytes in a file name.
.It Li _PC_PATH_MAX
The maximum number of bytes in a pathname.
.It Li _PC_PIPE_BUF
The maximum number of bytes which will be written atomically to a pipe.
.It Li _PC_CHOWN_RESTRICTED
Return 1 if appropriate privileges are required for the
.Xr chown 2
system call, otherwise 0.
.It Li _PC_NO_TRUNC
Return 1 if file names longer than KERN_NAME_MAX are truncated.
.It Li _PC_VDISABLE
Returns the terminal character disabling value.
.It Li _PC_XATTR_SIZE_BITS
Returns the number of bits used to store maximum extended 
attribute size in bytes.  For example, if the maximum 
attribute size supported by a file system is 128K, the 
value returned will be 18.  However a value 18 can mean 
that the maximum attribute size can be anywhere from 
(256KB - 1) to 128KB.  As a special case, the resource 
fork can have much larger size, and some file system 
specific extended attributes can have smaller and preset 
size; for example, Finder Info is always 32 bytes.
.El
.Sh RETURN VALUES
If the call to
.Nm pathconf
or
.Nm fpathconf
is not successful, \-1 is returned and
.Va errno
is set appropriately.
Otherwise, if the variable is associated with functionality that does
not have a limit in the system, \-1 is returned and
.Va errno
is not modified.
Otherwise, the current variable value is returned.
.Sh ERRORS
If any of the following conditions occur, the
.Nm pathconf
and
.Nm fpathconf
functions shall return -1 and set
.Va errno
to the corresponding value.
.Bl -tag -width ENAMETOOLONGAA
.\" ===========
.It Bq Er EINVAL
The value of the
.Fa name
argument is invalid.
.\" ===========
.It Bq Er EINVAL
The implementation does not support an association of the variable
name with the associated file.
.El
.Pp
.Fn Pathconf
will fail if:
.Bl -tag -width ENAMETOOLONGAA
.\" ===========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ===========
.It Bq Er EIO
An I/O error occurs while reading from or writing to the file system.
.\" ===========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ===========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
.\" ===========
.It Bq Er ENOENT
The named file does not exist.
.\" ===========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.El
.Pp
.Bl -tag -width ENAMETOOLONGAA
.Fn Fpathconf
will fail if:
.\" ===========
.It Bq Er EBADF
.Fa fildes
is not a valid open file descriptor.
.\" ===========
.It Bq Er EIO
An I/O error occurs while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr sysctl 3
.Sh HISTORY
The
.Nm pathconf
and
.Nm fpathconf
functions first appeared in 4.4BSD.
                                                                                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/pipe.2                                       0100644 0001750 0001750 00000007402 12567450735 021710  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: pipe.2,v 1.6 1995/02/27 12:35:27 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)pipe.2	8.1 (Berkeley) 6/4/93
.\"
.Dd February 17, 2011
.Dt PIPE 2
.Os BSD 4
.Sh NAME
.Nm pipe
.Nd create descriptor pair for interprocess communication
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo pipe
.Fa "int fildes[2]"
.Fc
.Sh DESCRIPTION
The
.Fn pipe
function
creates a
.Em pipe
(an object that allows unidirectional data flow)
and allocates a pair of file descriptors.
The first descriptor connects to the
.Em read end
of the pipe;
the second connects to the
.Em write end .
.Pp
Data written to
.Fa fildes[1]
appears on (i.e., can be read from)
.Fa fildes[0] .
This allows the output of one program to be
sent
to another program:
the source's standard output is set up
to be the write end of the pipe;
the sink's standard input is set up
to be the read end of the pipe.
The pipe itself persists
until all of its associated descriptors are closed.
.Pp
A pipe whose read or write end has been closed is considered
.Em widowed .
Writing on such a pipe causes the writing process to receive
a
.Dv SIGPIPE
signal.
Widowing a pipe is the only way to deliver end-of-file to a reader:
after the reader consumes any buffered data, reading a widowed pipe
returns a zero count.
.Pp
The generation of the
.Dv SIGPIPE
signal can be suppressed using the
.Dv F_SETNOSIGPIPE
fcntl command.
.Sh RETURN VALUES
On successful creation of the pipe, zero is returned. Otherwise, 
a value of -1 is returned and the variable
.Va errno
set to indicate the
error.
.Sh ERRORS
The
.Fn pipe
call will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EFAULT
The
.Fa fildes
buffer is in an invalid area of the process's address
space.
.\" ===========
.It Bq Er EMFILE
Too many descriptors are active.
.\" ===========
.It Bq Er ENFILE
The system file table is full.
.El
.Sh SEE ALSO
.Xr sh 1 ,
.Xr fork 2 ,
.Xr read 2 ,
.Xr socketpair 2 ,
.Xr fcntl 2 ,
.Xr write 2
.Sh HISTORY
A
.Fn pipe
function call appeared in 
.At v6 .
                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/poll.2                                       0100644 0001750 0001750 00000014475 12567450735 021731  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2005 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\"
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\"
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\"
.\" @APPLE_LICENSE_HEADER_END@
.\"
.\"
.\" Copyright (c) 1996 Charles M. Hannum.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Charles M. Hannum.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd March 18, 2015
.Dt POLL 2
.Os
.Sh NAME
.Nm poll
.Nd synchronous I/O multiplexing
.Sh SYNOPSIS
.In poll.h
.Ft int
.Fo poll
.Fa "struct pollfd fds[]"
.Fa "nfds_t nfds"
.Fa "int timeout"
.Fc
.Sh DESCRIPTION
.Fn poll
examines a set of file descriptors
to see if some of them are ready for I/O
or if certain events have occurred on them.
The
.Fa fds
argument is a pointer to an array of pollfd structures,
as defined in
.Aq Pa poll.h
(shown below).  The
.Fa nfds
argument specifies the size of the
.Fa fds
array.
.Bd -literal
struct pollfd {
    int    fd;       /* file descriptor */
    short  events;   /* events to look for */
    short  revents;  /* events returned */
};
.Ed
.Pp
The fields of
.Fa struct pollfd
are as follows:
.Bl -tag -width XXXPOLLWRNORM
.It fd
File descriptor to poll.
.It events
Events to poll for.  (See below.)
.It revents
Events which may occur or have occurred.  (See below.)
.El
.Pp
The event bitmasks in
.Fa events
and
.Fa revents
have the following bits:
.Bl -tag -width XXXPOLLWRNORM
.\" ===========
.It POLLERR
An exceptional condition has occurred on the device or socket.
This flag is output only, and ignored if present in the input
.Fa events
bitmask.
.\" ===========
.It POLLHUP
The device or socket has been disconnected.
This flag is output only,
and ignored if present in the input
.Fa events
bitmask.
Note that POLLHUP and POLLOUT
are mutually exclusive and should never be present in the
.Fa revents
bitmask at the same time.
.\" ===========
.It POLLIN
Data other than high priority data may be read without blocking.
This is equivalent to ( POLLRDNORM | POLLRDBAND ).
.\" ===========
.It POLLNVAL
The file descriptor is not open.
This flag is output only, and ignored if present in the input
.Fa events
bitmask.
.\" ===========
.It POLLOUT
Normal data may be written without blocking.
This is equivalent to POLLWRNORM.
.\" ===========
.It POLLPRI
High priority data may be read without blocking.
.\" ===========
.It POLLRDBAND
Priority data may be read without blocking.
.\" ===========
.It POLLRDNORM
Normal data may be read without blocking.
.\" ===========
.It POLLWRBAND
Priority data may be written without blocking.
.\" ===========
.It POLLWRNORM
Normal data may be written without blocking.
.El
.Pp
The distinction between normal, priority, and high-priority data
is specific to particular file types or devices.
.Pp
If
.Fa timeout
is greater than zero,
it specifies a maximum interval (in milliseconds)
to wait for any file descriptor to become ready.
If
.Fa timeout
is zero, then
.Fn poll
will return without blocking. If the value of
.Fa timeout
is -1, the poll blocks indefinitely.
.Sh RETURN VALUES
.Fn poll
returns the number of descriptors that are ready for I/O,
or -1 if an error occurred.
If the time limit expires,
.Fn poll
returns 0.
If
.Fn poll
returns with an error,
including one due to an interrupted call,
the
.Fa fds
array will be unmodified and the global variable
.Va errno
will be set to indicate the error.
.Sh ERRORS
.Fn poll
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EAGAIN
Allocation of internal data structures fails.
A subsequent request may succeed.
.\" ===========
.It Bq Er EFAULT
.Fa Fds
points outside the process's allocated address space.
.\" ===========
.It Bq Er EINTR
A signal is delivered before the time limit expires
and before any of the selected events occurs.
.\" ===========
.It Bq Er EINVAL
The
.Fa nfds
argument is greater than OPEN_MAX or the
.Fa timeout
argument is less than -1.
.El
.Sh BUGS
The
.Fn poll
system call currently does not support devices.
.Sh SEE ALSO
.Xr accept 2 ,
.Xr connect 2 ,
.Xr connectx 2 ,
.Xr kevent 2 ,
.Xr read 2 ,
.Xr recv 2 ,
.Xr select 2 ,
.Xr send 2 ,
.Xr write 2
.Sh HISTORY
The
.Fn poll
function call appeared in
.At V .
                                                                                                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/posix_madvise.2                              0100644 0001750 0001750 00000000023 12567450735 023615  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/madvise.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/posix_spawn.2                                0100644 0001750 0001750 00000024547 12567450735 023336  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2000-2010 Apple Inc. All rights reserved.
.\"
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. The rights granted to you under the License
.\" may not be used to create, or enable the creation or redistribution of,
.\" unlawful or unlicensed copies of an Apple operating system, or to
.\" circumvent, violate, or enable the circumvention or violation of, any
.\" terms of an Apple operating system software license agreement.
.\" 
.\" Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_END@
.\"
.\"     @(#)posix_spawn.2
.
.Dd November 2, 2010
.Dt POSIX_SPAWN 2
.Os "Mac OS X"
.Sh NAME
.Nm posix_spawn
.Nm posix_spawnp
.Nd spawn a process
.Sh SYNOPSIS
.Fd #include <spawn.h>
.Ft int
.Fo posix_spawn
.Fa "pid_t *restrict pid"
.Fa "const char *restrict path"
.Fa "const posix_spawn_file_actions_t *file_actions"
.Fa "const posix_spawnattr_t *restrict attrp"
.Fa "char *const argv[restrict]"
.Fa "char *const envp[restrict]"
.Fc
.Ft int
.Fo posix_spawnp
.Fa "pid_t *restrict pid"
.Fa "const char *restrict file"
.Fa "const posix_spawn_file_actions_t *file_actions"
.Fa "const posix_spawnattr_t *restrict attrp"
.Fa "char *const argv[restrict]"
.Fa "char *const envp[restrict]"
.Fc
.Sh DESCRIPTION
The
.Fn posix_spawn
function creates a new process from the executable file, called the
.Em new process file ,
specified by
.Em path ,
which is an absolute or relative path to the file.
The
.Fn posix_spawnp
function is identical to the
.Fn posix_spawn
function if the
.Em file
specified contains a slash character; otherwise, the
.Em file
parameter is used to construct a pathname, with its path prefix being
obtained by a search of the path specified in the environment by the
.Dq Ev PATH variable .
If this variable isn't specified, the default path is set according
to the
.Dv _PATH_DEFPATH
definition in
.In paths.h ,
which is set to
.Dq Ev /usr/bin:/bin .
This pathname either refers to an executable object file,
or a file of data for an interpreter;
.Xr execve 2
for more details.
.Pp
The argument
.Fa pid
is a pointer to a pid_t variable to receive the pid of the spawned
process; if this is NULL, then the pid of the spawned process is
not returned.  If this pointer is non-NULL, then on successful
completion, the variable will be modified to contain the pid of the
spawned process.  The value is undefined in the case of a failure.
.Pp
The argument
.Fa file_actions
is either NULL, or it is a pointer to a file actions object that was
initialized by a call to
.Xr posix_spawn_file_actions_init 3
and represents zero or more file actions.
.Pp
File descriptors open in the calling process image remain open in
the new process image, except for those for which the close-on-exec
flag is set (see
.Xr close 2
and
.Xr fcntl 2 ) .
Descriptors that remain open are unaffected by
.Fn posix_spawn
unless their behaviour is modified by particular spawn flags
or a file action; see
.Xr posix_spawnattr_setflags 3
and
.Xr posix_spawn_file_actions_init 3
for additional information.
.Pp
The argument
.Fa attrp
is either NULL, or it is a pointer to an attributes object that was
initialized by a call to
.Xr posix_spawnattr_init 3
and represents a set of spawn attributes to apply.  If NULL, then the
default attributes are applied; otherwise, these attributes can control
various aspects of the spawned process, and are applied prior to the
spawned process beginning execution; see
.Xr posix_spawnattr_init 3
for more information.
.Pp
The argument
.Fa argv
is a pointer to a null-terminated array of
character pointers to null-terminated character strings.
These strings construct the argument list to be made available to the new
process.  At least
.Fa argv[0]
must be present in the array, and should contain the file name of the
program being spawned, e.g. the last component of the
.Em path
or
.Em file
argument.
.Pp
The argument
.Fa envp
is a pointer to a null-terminated array of character pointers to
null-terminated strings.  A pointer to this array is normally stored
in the global variable
.Va environ.
These strings pass information to the
new process that is not directly an argument to the command (see
.Xr environ 7 ) .
.Pp
Signals set to be ignored in the calling process are set to be ignored in
the new process, unless the behaviour is modified by user specified
.Em spawn attributes .
Signals which are set to be caught in the calling process image are set to
default action in the new process image.
Blocked signals remain blocked regardless of changes to the signal action,
unless the mask is overridden by user specified
.Em spawn attributes .
The signal stack is reset to be undefined (see
.Xr sigaction 2
for more information).
.Pp
By default, the effective user ID and group ID will be the same as those of
the calling process image; however, this may be overridden to force them to
be the real user ID and group ID of the parent process by user specified
.Em spawn attributes
(see
.Xr posix_spawnattr_init 3
for more information).
.Pp
If the set-user-ID mode bit of the new process image file is set
(see
.Xr chmod 2 ) ,
the effective user ID of the new process image is set to the owner ID
of the new process image file.
If the set-group-ID mode bit of the new process image file is set,
the effective group ID of the new process image is set to the group ID
of the new process image file.
(The effective group ID is the first element of the group list.)
The real user ID, real group ID and supplementary group IDs of the new
process image remain the same as the calling process image.
After any set-user-ID and set-group-ID processing,
the effective user ID is recorded as the saved set-user-ID,
and the effective group ID is recorded as the saved set-group-ID.
These values may be used in changing the effective IDs later (see
.Xr setuid 2 ) .
.Pp
The new process also inherits the following attributes from
the calling process:
.Pp
.Bl -column parent_process_ID -offset indent -compact
.It parent process ID Ta see Xr getppid 2
.It process group ID Ta see Xr getpgrp 2 , Xr posix_spawnattr_init 3
.It access groups Ta see Xr getgroups 2
.It working directory Ta see Xr chdir 2
.It root directory Ta see Xr chroot 2
.It control terminal Ta see Xr termios 4
.It resource usages Ta see Xr getrusage 2
.It interval timers Ta see Xr getitimer 2
.It resource limits Ta see Xr getrlimit 2
.It file mode mask Ta see Xr umask 2
.It signal mask Ta see Xr sigaction 2 , Xr sigsetmask 2 ,
.Xr posix_spawnattr_init 3
.El
.Pp
When a program is executed as a result of a
.Fn posix_spawn
or
.Fn posix_spawnp
call, it is entered as follows:
.Bd -literal -offset indent
main(argc, argv, envp)
int argc;
char **argv, **envp;
.Ed
.Pp
where
.Fa argc
is the number of elements in
.Fa argv
(the ``arg count'')
and
.Fa argv
points to the array of character pointers
to the arguments themselves.
.Sh RETURN VALUES
If the
.Em pid
argument is NULL, no pid is returned to the calling process; if it is
non-NULL, then
.Fn posix_spawn
and
.Fn posix_spawnp
functions return the process ID of the child process into the pid_t
variable pointed to by the
.Em pid
argument and return a 0 on success.  If an error occurs, they return
a non-zero error code as the function return value, and no child process
is created.
.Sh ERRORS
The
.Fn posix_spawn
and
.Fn posix_spawnp
functions will fail and return to the calling process if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
The value specified by
.Fa file_actions
or
.Fa attrp
is invalid.
.\" ==========
.It Bq Er E2BIG
The number of bytes in the new process's argument list
is larger than the system-imposed limit.
This limit is specified by the
.Xr sysctl 3
MIB variable
.Dv KERN_ARGMAX .
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ==========
.It Bq Er EACCES
The new process file is not an ordinary file.
.\" ==========
.It Bq Er EACCES
The new process file mode denies execute permission.
.\" ==========
.It Bq Er EACCES
The new process file is on a filesystem mounted
with execution disabled
.Pf ( Dv MNT_NOEXEC
in
.Ao Pa sys/mount.h Ac ) .
.\" ==========
.It Bq Er EFAULT
The new process file is not as long as indicated by
the size values in its header.
.\" ==========
.It Bq Er EFAULT
.Fa Path ,
.Fa argv ,
or
.Fa envp
point
to an illegal address.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
The new process file does not exist.
.\" ==========
.It Bq Er ENOEXEC
The new process file has the appropriate access
permission, but has an unrecognized format
(e.g., an invalid magic number in its header).
.\" ==========
.It Bq Er ENOMEM
The new process requires more virtual memory than
is allowed by the imposed maximum
.Pq Xr getrlimit 2 .
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er ETXTBSY
The new process file is a pure procedure (shared text)
file that is currently open for writing or reading by some process.
.El
.Sh CAVEAT
If a program is
.Em setuid
to a non-super-user, but is executed when
the real
.Em uid
is ``root'', then the program has some of the powers
of a super-user as well.
.Sh SEE ALSO
.Xr exit 2 ,
.Xr fork 2 ,
.Xr execl 3 ,
.Xr sysctl 3 ,
.Xr environ 7 ,
.Xr posix_spawnattr_init 3 ,
.Xr posix_spawn_file_actions_init 3 ,
.Sh STANDARDS
.St -susv3 [SPN]
.Sh HISTORY
The
.Fn posix_spawn
and
.Fn posix_spawnp
function calls appeared in
.St -susv3 [SPN] .
                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/posix_spawnp.2                               0100644 0001750 0001750 00000024547 12567450735 023516  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2000-2010 Apple Inc. All rights reserved.
.\"
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. The rights granted to you under the License
.\" may not be used to create, or enable the creation or redistribution of,
.\" unlawful or unlicensed copies of an Apple operating system, or to
.\" circumvent, violate, or enable the circumvention or violation of, any
.\" terms of an Apple operating system software license agreement.
.\" 
.\" Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_OSREFERENCE_LICENSE_HEADER_END@
.\"
.\"     @(#)posix_spawn.2
.
.Dd November 2, 2010
.Dt POSIX_SPAWN 2
.Os "Mac OS X"
.Sh NAME
.Nm posix_spawn
.Nm posix_spawnp
.Nd spawn a process
.Sh SYNOPSIS
.Fd #include <spawn.h>
.Ft int
.Fo posix_spawn
.Fa "pid_t *restrict pid"
.Fa "const char *restrict path"
.Fa "const posix_spawn_file_actions_t *file_actions"
.Fa "const posix_spawnattr_t *restrict attrp"
.Fa "char *const argv[restrict]"
.Fa "char *const envp[restrict]"
.Fc
.Ft int
.Fo posix_spawnp
.Fa "pid_t *restrict pid"
.Fa "const char *restrict file"
.Fa "const posix_spawn_file_actions_t *file_actions"
.Fa "const posix_spawnattr_t *restrict attrp"
.Fa "char *const argv[restrict]"
.Fa "char *const envp[restrict]"
.Fc
.Sh DESCRIPTION
The
.Fn posix_spawn
function creates a new process from the executable file, called the
.Em new process file ,
specified by
.Em path ,
which is an absolute or relative path to the file.
The
.Fn posix_spawnp
function is identical to the
.Fn posix_spawn
function if the
.Em file
specified contains a slash character; otherwise, the
.Em file
parameter is used to construct a pathname, with its path prefix being
obtained by a search of the path specified in the environment by the
.Dq Ev PATH variable .
If this variable isn't specified, the default path is set according
to the
.Dv _PATH_DEFPATH
definition in
.In paths.h ,
which is set to
.Dq Ev /usr/bin:/bin .
This pathname either refers to an executable object file,
or a file of data for an interpreter;
.Xr execve 2
for more details.
.Pp
The argument
.Fa pid
is a pointer to a pid_t variable to receive the pid of the spawned
process; if this is NULL, then the pid of the spawned process is
not returned.  If this pointer is non-NULL, then on successful
completion, the variable will be modified to contain the pid of the
spawned process.  The value is undefined in the case of a failure.
.Pp
The argument
.Fa file_actions
is either NULL, or it is a pointer to a file actions object that was
initialized by a call to
.Xr posix_spawn_file_actions_init 3
and represents zero or more file actions.
.Pp
File descriptors open in the calling process image remain open in
the new process image, except for those for which the close-on-exec
flag is set (see
.Xr close 2
and
.Xr fcntl 2 ) .
Descriptors that remain open are unaffected by
.Fn posix_spawn
unless their behaviour is modified by particular spawn flags
or a file action; see
.Xr posix_spawnattr_setflags 3
and
.Xr posix_spawn_file_actions_init 3
for additional information.
.Pp
The argument
.Fa attrp
is either NULL, or it is a pointer to an attributes object that was
initialized by a call to
.Xr posix_spawnattr_init 3
and represents a set of spawn attributes to apply.  If NULL, then the
default attributes are applied; otherwise, these attributes can control
various aspects of the spawned process, and are applied prior to the
spawned process beginning execution; see
.Xr posix_spawnattr_init 3
for more information.
.Pp
The argument
.Fa argv
is a pointer to a null-terminated array of
character pointers to null-terminated character strings.
These strings construct the argument list to be made available to the new
process.  At least
.Fa argv[0]
must be present in the array, and should contain the file name of the
program being spawned, e.g. the last component of the
.Em path
or
.Em file
argument.
.Pp
The argument
.Fa envp
is a pointer to a null-terminated array of character pointers to
null-terminated strings.  A pointer to this array is normally stored
in the global variable
.Va environ.
These strings pass information to the
new process that is not directly an argument to the command (see
.Xr environ 7 ) .
.Pp
Signals set to be ignored in the calling process are set to be ignored in
the new process, unless the behaviour is modified by user specified
.Em spawn attributes .
Signals which are set to be caught in the calling process image are set to
default action in the new process image.
Blocked signals remain blocked regardless of changes to the signal action,
unless the mask is overridden by user specified
.Em spawn attributes .
The signal stack is reset to be undefined (see
.Xr sigaction 2
for more information).
.Pp
By default, the effective user ID and group ID will be the same as those of
the calling process image; however, this may be overridden to force them to
be the real user ID and group ID of the parent process by user specified
.Em spawn attributes
(see
.Xr posix_spawnattr_init 3
for more information).
.Pp
If the set-user-ID mode bit of the new process image file is set
(see
.Xr chmod 2 ) ,
the effective user ID of the new process image is set to the owner ID
of the new process image file.
If the set-group-ID mode bit of the new process image file is set,
the effective group ID of the new process image is set to the group ID
of the new process image file.
(The effective group ID is the first element of the group list.)
The real user ID, real group ID and supplementary group IDs of the new
process image remain the same as the calling process image.
After any set-user-ID and set-group-ID processing,
the effective user ID is recorded as the saved set-user-ID,
and the effective group ID is recorded as the saved set-group-ID.
These values may be used in changing the effective IDs later (see
.Xr setuid 2 ) .
.Pp
The new process also inherits the following attributes from
the calling process:
.Pp
.Bl -column parent_process_ID -offset indent -compact
.It parent process ID Ta see Xr getppid 2
.It process group ID Ta see Xr getpgrp 2 , Xr posix_spawnattr_init 3
.It access groups Ta see Xr getgroups 2
.It working directory Ta see Xr chdir 2
.It root directory Ta see Xr chroot 2
.It control terminal Ta see Xr termios 4
.It resource usages Ta see Xr getrusage 2
.It interval timers Ta see Xr getitimer 2
.It resource limits Ta see Xr getrlimit 2
.It file mode mask Ta see Xr umask 2
.It signal mask Ta see Xr sigaction 2 , Xr sigsetmask 2 ,
.Xr posix_spawnattr_init 3
.El
.Pp
When a program is executed as a result of a
.Fn posix_spawn
or
.Fn posix_spawnp
call, it is entered as follows:
.Bd -literal -offset indent
main(argc, argv, envp)
int argc;
char **argv, **envp;
.Ed
.Pp
where
.Fa argc
is the number of elements in
.Fa argv
(the ``arg count'')
and
.Fa argv
points to the array of character pointers
to the arguments themselves.
.Sh RETURN VALUES
If the
.Em pid
argument is NULL, no pid is returned to the calling process; if it is
non-NULL, then
.Fn posix_spawn
and
.Fn posix_spawnp
functions return the process ID of the child process into the pid_t
variable pointed to by the
.Em pid
argument and return a 0 on success.  If an error occurs, they return
a non-zero error code as the function return value, and no child process
is created.
.Sh ERRORS
The
.Fn posix_spawn
and
.Fn posix_spawnp
functions will fail and return to the calling process if:
.Bl -tag -width Er
.\" ==========
.It Bq Er EINVAL
The value specified by
.Fa file_actions
or
.Fa attrp
is invalid.
.\" ==========
.It Bq Er E2BIG
The number of bytes in the new process's argument list
is larger than the system-imposed limit.
This limit is specified by the
.Xr sysctl 3
MIB variable
.Dv KERN_ARGMAX .
.\" ==========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ==========
.It Bq Er EACCES
The new process file is not an ordinary file.
.\" ==========
.It Bq Er EACCES
The new process file mode denies execute permission.
.\" ==========
.It Bq Er EACCES
The new process file is on a filesystem mounted
with execution disabled
.Pf ( Dv MNT_NOEXEC
in
.Ao Pa sys/mount.h Ac ) .
.\" ==========
.It Bq Er EFAULT
The new process file is not as long as indicated by
the size values in its header.
.\" ==========
.It Bq Er EFAULT
.Fa Path ,
.Fa argv ,
or
.Fa envp
point
to an illegal address.
.\" ==========
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.\" ==========
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ==========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ==========
.It Bq Er ENOENT
The new process file does not exist.
.\" ==========
.It Bq Er ENOEXEC
The new process file has the appropriate access
permission, but has an unrecognized format
(e.g., an invalid magic number in its header).
.\" ==========
.It Bq Er ENOMEM
The new process requires more virtual memory than
is allowed by the imposed maximum
.Pq Xr getrlimit 2 .
.\" ==========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.\" ==========
.It Bq Er ETXTBSY
The new process file is a pure procedure (shared text)
file that is currently open for writing or reading by some process.
.El
.Sh CAVEAT
If a program is
.Em setuid
to a non-super-user, but is executed when
the real
.Em uid
is ``root'', then the program has some of the powers
of a super-user as well.
.Sh SEE ALSO
.Xr exit 2 ,
.Xr fork 2 ,
.Xr execl 3 ,
.Xr sysctl 3 ,
.Xr environ 7 ,
.Xr posix_spawnattr_init 3 ,
.Xr posix_spawn_file_actions_init 3 ,
.Sh STANDARDS
.St -susv3 [SPN]
.Sh HISTORY
The
.Fn posix_spawn
and
.Fn posix_spawnp
function calls appeared in
.St -susv3 [SPN] .
                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/pread.2                                      0100644 0001750 0001750 00000000020 12567450735 022033  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/read.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/profil.2                                     0100644 0001750 0001750 00000010357 12567450735 022251  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: profil.2,v 1.3 1995/11/22 23:07:23 cgd Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Donn Seeley of BSDI.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)profil.2	8.1 (Berkeley) 6/4/93
.\"
.Dd September 26, 2008
.Dt PROFIL 2
.Os
.Sh NAME
.Nm profil
.Nd control process profiling
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn profil "char *samples" "size_t size" "u_long offset" "u_int scale"
.Sh DESCRIPTION
.Pp
.Fd -- This function is now deprecated. It will always return EINVAL. --
.Pp
The intended replacements are the user-level developer tools, like CHUD and dtrace.
.Pp
------
.Pp
The
.Fn profil
function enables or disables
program counter profiling of the current process.
If profiling is enabled,
then at every clock tick,
the kernel updates an appropriate count in the
.Fa samples
buffer.
.Pp
The buffer
.Fa samples
contains
.Fa size
bytes and is divided into
a series of 16-bit bins.
Each bin counts the number of times the program counter
was in a particular address range in the process
when a clock tick occurred while profiling was enabled.
For a given program counter address,
the number of the corresponding bin is given
by the relation:
.Bd -literal -offset indent
[(pc - offset) / 2] * scale / 65536
.Ed
.Pp
The
.Fa offset
parameter is the lowest address at which
the kernel takes program counter samples.
The
.Fa scale
parameter ranges from 1 to 65536 and
can be used to change the span of the bins.
A scale of 65536 maps each bin to 2 bytes of address range;
a scale of 32768 gives 4 bytes, 16384 gives 8 bytes and so on.
Intermediate values provide approximate intermediate ranges.
A
.Fa scale
value of 0 disables profiling.
.Sh RETURN VALUES
If the
.Fa scale
value is nonzero and the buffer
.Fa samples
contains an illegal address,
.Fn profil
returns \-1,
profiling is terminated and
.Va errno
is set appropriately.
Otherwise
.Fn profil
returns 0.
.Sh FILES
.Bl -tag -width /usr/lib/gcrt0.o -compact
.It Pa /usr/lib/gcrt0.o
profiling C run-time startup file
.It Pa gmon.out
conventional name for profiling output file
.El
.Sh ERRORS
The following error may be reported:
.Bl -tag -width Er
.It Bq Er EFAULT
The buffer
.Fa samples
contains an invalid address.
.El
.Sh SEE ALSO
.Xr gprof 1
.Sh HISTORY
The
.Fn profil
function appeared in
.At v7 .
.Sh BUGS
This routine should be named
.Fn profile .
.Pp
The
.Fa samples
argument should really be a vector of type
.Fa "unsigned short" .
.Pp
The format of the gmon.out file is undocumented.
                                                                                                                                                                                                                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/pthread_kill.2                               0100644 0001750 0001750 00000005005 12566166037 023410  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	Darwin
.\"
.\" Copyright (C) 2000 Jason Evans <jasone@FreeBSD.org>.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice(s), this list of conditions and the following disclaimer as
.\"    the first lines of this file unmodified other than the possible
.\"    addition of one or more copyright notices.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice(s), this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
.\" OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
.\" EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc_r/man/pthread_kill.3,v 1.8 2001/10/01 16:09:09 ru Exp $
.Dd Feb 05, 2002
.Dt PTHREAD_KILL 2
.Os
.Sh NAME
.Nm pthread_kill
.Nd send a signal to a specified thread
.Sh SYNOPSIS
.In signal.h
.Ft int
.Fn pthread_kill "pthread_t thread" "int sig"
.Sh DESCRIPTION
The
.Fn pthread_kill
function sends a signal, specified by
.Fa sig ,
to a thread, specified by
.Fa thread .
If
.Fa sig
is 0, error checking is performed, but no signal is actually sent.
.Sh RETURN VALUES
If successful,
.Fn pthread_kill
returns 0.
Otherwise, an error number is returned.
.Sh ERRORS
.Fn pthread_kill
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa sig
is an invalid or unsupported signal number.
.It Bq Er ESRCH
.Fa thread
is an invalid thread ID.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <pthread.h>
.Fd #include <signal.h>
.Pp
The include file
.In pthread.h
is necessary.
.Sh SEE ALSO
.Xr kill 2 ,
.Xr pthread_self 3 ,
.Xr raise 3 ,
.Xr compat 5
.Sh STANDARDS
.Fn pthread_kill
conforms to ISO/IEC 9945-1:1996 (``POSIX.1'')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/pthread_setugid_np.2                         0100644 0001750 0001750 00000005356 12567450735 024631  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008 Apple Inc.  All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd October 1, 2008
.Dt PTHREAD_SETUGID_NP 2
.Os
.Sh NAME
.Nm pthread_setugid_np
.Nd Set the per-thread userid and single groupid.
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/unistd.h>
.Ft int
.Fn pthread_setugid_np "uid_t uid, gid_t gid"
.Sh DESCRIPTION
.Fn pthread_setugid_np
changes the current thread's effective, real, and saved userid and groupid to the requested
userid and groupid (
.Fa uid
and
.Fa gid
, respectively) and clears all other groupids.
.Pp
.Fa uid
can be the current real userid, KAUTH_UID_NONE, or, if the caller is privileged, any userid.
.Fa gid
can be the current real groupid or, if the caller is priviledged, any single groupid.
.Pp
Setting
.Fa uid 
to KAUTH_UID_NONE means to "revert to the per process credential".
.Sh CAVEATS
Temporarily restoring root privileges for a non-privileged process is only possible on a per-process basis and not a per-thread basis.
.Pp
.Fn pthread_setugid_np 
is not intended as a privilege escalation mechanism.
.Pp
Do not use
.Fn pthread_setugid_np.2
in a security sensitive situation.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn pthread_setugid_np
fails if one or more of the following are true:
.\" ========
.Bl -tag -width Er
.It Bq EPERM
The calling process does not have the correct credentials to set the override identity (i.e. The current credentials do not imply "super-user").
.\" ========
.It Bq EPERM
If
.Fa uid
is set to KAUTH_UID_NONE, 
the current thread must already be assuming another identity in order to revert back.
.\" ========
.It Bq EPERM
The current thread cannot already be assuming another identity.
.El
.Sh SEE ALSO
.Xr setuid 2
.Xr setgid 2
.Xr seteuid 2
.Xr setegid 2
                                                                                                                                                                                                                                                                                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/pthread_sigmask.2                            0100644 0001750 0001750 00000005776 12566166037 024132  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (C) 2000 Jason Evans <jasone@FreeBSD.org>.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice(s), this list of conditions and the following disclaimer as
.\"    the first lines of this file unmodified other than the possible
.\"    addition of one or more copyright notices.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice(s), this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
.\" OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
.\" EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc_r/man/pthread_sigmask.3,v 1.9 2001/10/01 16:09:09 ru Exp $
.Dd April 27, 2000
.Dt PTHREAD_SIGMASK 2
.Os
.Sh NAME
.Nm pthread_sigmask
.Nd examine and/or change a thread's signal mask
.Sh SYNOPSIS
.In signal.h
.Ft int
.Fo pthread_sigmask
.Fa "int how"
.Fa "const sigset_t *restrict set"
.Fa "sigset_t *restrict oset"
.Fc
.Sh DESCRIPTION
The
.Fn pthread_sigmask
function examines and/or changes the calling thread's signal mask.
.Pp
If
.Fa set
is not
.Dv NULL ,
it specifies a set of signals to be modified, and
.Fa how
specifies what to set the signal mask to:
.Bl -tag -width SIG_UNBLOCK
.It Dv SIG_BLOCK
Union of the current mask and
.Fa set .
.It Dv SIG_UNBLOCK
Intersection of the current mask and the complement of
.Fa set .
.It Dv SIG_SETMASK
.Fa set .
.El
.Pp
If
.Fa oset
is not NULL, the previous signal mask is stored in the location pointed to by
.Fa oset .
.Pp
.Dv SIGKILL
and
.Dv SIGSTOP
cannot be blocked, and will be silently ignored if included in the signal mask.
.Sh RETURN VALUES
If successful,
.Fn pthread_sigmask
returns 0.
Otherwise, an error is returned.
.Sh ERRORS
.Fn pthread_sigmask
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa how
is not one of the defined values.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <pthread.h>
.Fd #include <signal.h>
.Pp
The include file
.In pthread.h
is necessary.
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr sigpending 2 ,
.Xr sigprocmask 2 ,
.Xr sigsuspend 2 ,
.Xr sigsetops 3 ,
.Xr compat 5
.Sh STANDARDS
.Fn pthread_sigmask
conforms to ISO/IEC 9945-1:1996 (``POSIX.1'')
  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/ptrace.2                                     0100644 0001750 0001750 00000012672 12567450735 022236  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$OpenBSD: ptrace.2,v 1.3 1996/10/08 01:20:12 michaels Exp $
.\"	$NetBSD: ptrace.2,v 1.3 1996/02/23 01:39:41 jtc Exp $
.\"
.\" This file is in the public domain.
.Dd March 25, 2015
.Dt PTRACE 2
.Os
.Sh NAME
.Nm ptrace
.Nd process tracing and debugging
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/ptrace.h>
.Ft int
.Fn ptrace "int request" "pid_t pid" "caddr_t addr" "int data"
.Sh DESCRIPTION
.Fn ptrace
provides tracing and debugging facilities.  It allows one process (the
.Em tracing
process) to control another (the
.Em traced
process).  Most of the time, the traced process runs normally, but when
it receives a signal
.Po
see
.Xr sigaction 2
.Pc ,
it stops.  The tracing process is expected to notice this via
.Xr wait 2
or the delivery of a
.Dv SIGCHLD
signal, examine the state of the stopped process, and cause it to
terminate or continue as appropriate.
.Fn ptrace
is the mechanism by which all this happens.
.Pp
The
.Fa request
argument specifies what operation is being performed; the meaning of
the rest of the arguments depends on the operation, but except for one
special case noted below, all
.Fn ptrace
calls are made by the tracing process, and the
.Fa pid
argument specifies the process ID of the traced process.
.Fa request
can be:
.Bl -tag -width 12n
.It Dv PT_TRACE_ME
This request is one of two used by the traced process; it declares
that the process expects to be traced by its parent.  All the other
arguments are ignored.  (If the parent process does not expect to trace
the child, it will probably be rather confused by the results; once the
traced process stops, it cannot be made to continue except via
.Eo \&
.Fn ptrace
.Ec \&.)
When a process has used this request and calls
.Xr execve 2
or any of the routines built on it
.Po
such as
.Xr execv 3
.Pc ,
it will stop before executing the first instruction of the new image.
Also, any setuid or setgid bits on the executable being executed will
be ignored.
.It Dv PT_DENY_ATTACH
This request is the other operation used by the traced process; it allows
a process that is not currently being traced to deny future traces by its
parent.  All other arguments are ignored.  If the process is currently
being traced, it will exit with the exit status of ENOTSUP; otherwise,
it sets a flag that denies future traces.  An attempt by the parent to
trace a process which has set this flag will result in a segmentation violation
in the parent.
.It Dv PT_CONTINUE
The traced process continues execution.
.Fa addr
is an address specifying the place where execution is to be resumed (a
new value for the program counter), or
.Li (caddr_t)1
to indicate that execution is to pick up where it left off.
.Fa data
provides a signal number to be delivered to the traced process as it
resumes execution, or 0 if no signal is to be sent.
.It Dv PT_STEP
The traced process continues execution for a single step.  The
parameters are identical to those passed to
.Dv PT_CONTINUE.
.It Dv PT_KILL
The traced process terminates, as if
.Dv PT_CONTINUE
had been used with
.Dv SIGKILL
given as the signal to be delivered.
.It Dv PT_ATTACH
This call has been replaced with PT_ATTACHEXC.
.It Dv PT_ATTACHEXC
This request allows a process to gain control of an otherwise unrelated
process and begin tracing it.  It does not need any cooperation from
the to-be-traced process.  In this case,
.Fa pid
specifies the process ID of the to-be-traced process, and the other two
arguments are ignored.  This request requires that the target process
must have the same real UID as the tracing process, and that it must
not be executing a setuid or setgid executable.  (If the tracing
process is running as root, these restrictions do not apply.)  The
tracing process will see the newly-traced process stop and may then
control it as if it had been traced all along. Note that this call differs
from the prior call (
.Dv PT_ATTACH )
in that signals from the child are delivered to the parent as Mach exceptions (see EXC_SOFT_SIGNAL).
.It Dv PT_DETACH
This request is like PT_CONTINUE, except that it does not allow
specifying an alternate place to continue execution, and after it
succeeds, the traced process is no longer traced and continues
execution normally.
.El
.Pp
.Sh ERRORS
Some requests can cause
.Fn ptrace
to return
.Li -1
as a non-error value; to disambiguate,
.Va errno
can be set to 0 before the call and checked afterwards.  The possible
errors are:
.Bl -tag -width 4n
.It Bq Er ESRCH
No process having the specified process ID exists.
.It Bq Er EINVAL
.Bl -bullet -compact
.It
A process attempted to use
.Dv PT_ATTACHEXC
on itself.
.It
The
.Fa request
was not one of the legal requests.
.It
The signal number (in
.Fa data )
to
.Dv PT_CONTINUE
was neither 0 nor a legal signal number.
.It
.Dv PT_GETREGS ,
.Dv PT_SETREGS ,
.Dv PT_GETFPREGS ,
or
.Dv PT_SETFPREGS
was attempted on a process with no valid register set.  (This is
normally true only of system processes.)
.El
.It Bq Er EBUSY
.Bl -bullet -compact
.It
.Dv PT_ATTACHEXC
was attempted on a process that was already being traced.
.It
A request attempted to manipulate a process that was being traced by
some process other than the one making the request.
.It
A request (other than
.Dv PT_ATTACHEXC )
specified a process that wasn't stopped.
.El
.It Bq Er EPERM
.Bl -bullet -compact
.It
A request (other than
.Dv PT_ATTACHEXC )
attempted to manipulate a process that wasn't being traced at all.
.It
An attempt was made to use
.Dv PT_ATTACHEXC
on a process in violation of the requirements listed under
.Dv PT_ATTACHEXC
above.
.El
.El
                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/pwrite.2                                     0100644 0001750 0001750 00000000021 12567450735 022253  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/write.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/quotactl.2                                   0100644 0001750 0001750 00000014624 12567450735 022613  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: quotactl.2,v 1.8 1995/02/27 12:35:43 cgd Exp $
.\"
.\" Copyright (c) 1983, 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Robert Elz at The University of Melbourne.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)quotactl.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt QUOTACTL 2
.Os
.Sh NAME
.Nm quotactl
.Nd manipulate filesystem quotas
.Sh SYNOPSIS
.Fd #include <sys/types.h>	/* types needed by quota.h */
.Fd #include <sys/quota.h>	/* for disk quotas */
.Ft int
.Fn quotactl "const char *path" "int cmd" "int id" "char *addr"
.Sh DESCRIPTION
The
.Fn quotactl
call enables, disables and
manipulates filesystem quotas.
A quota control command
given by
.Fa cmd
operates on the given filename
.Fa path
for the given user
.Fa id .
The address of an optional command specific data structure,
.Fa addr ,
may be given; its interpretation
is discussed below with each command.
.Pp
A command is composed of a primary command (see below)
and a command type used to interpret the
.Fa id .
Types are supported for interpretation of user identifiers
and group identifiers.
The specific commands are:
.Bl -tag -width Q_QUOTASTAT
.It Dv Q_QUOTAON
Enable disk quotas for the filesystem specified by
.Fa path .
The command type specifies the type of the quotas being enabled.
The
.Fa addr
argument specifies a file from which to take the quotas.
The quota file must exist;
it is normally created with the 
.Xr quotacheck 8
program.
The
.Fa id
argument is unused.
Only the super-user may turn quotas on.
.It Dv Q_QUOTAOFF
Disable disk quotas for the filesystem specified by
.Fa path .
The command type specifies the type of the quotas being disabled.
The
.Fa addr
and
.Fa id
arguments are unused.
Only the super-user may turn quotas off.
.It Dv Q_GETQUOTA
Get disk quota limits and current usage for the user or group
(as determined by the command type) with identifier
.Fa id .
.Fa Addr
is a pointer to a
.Fa struct dqblk
structure.
.It Dv Q_SETQUOTA
Set disk quota limits for the user or group
(as determined by the command type) with identifier
.Fa id .
.Fa Addr
is a pointer to a
.Fa struct dqblk
structure.
The usage fields of the
.Fa dqblk
structure are ignored.
This call is restricted to the super-user.
.It Dv Q_SETUSE
Set disk usage limits for the user or group
(as determined by the command type) with identifier
.Fa id .
.Fa Addr
is a pointer to a
.Fa struct dqblk
structure.
Only the usage fields are used.
This call is restricted to the super-user.
.It Dv Q_SYNC
Update the on-disk copy of quota usages.
The command type specifies which type of quotas are to be updated.
The
.Fa id
and
.Fa addr
parameters are ignored.
.It Dv Q_QUOTASTAT
Get the enable status for the filesystem specified by
.Fa path .
The command type specifies the type of the quotas whose
status is being queried.
.Fa Addr
is a pointer to an integer.  Upon return,
this integer will hold a zero value if quotas for the
given type are not enabled and a non-zero value if
quotas for the given type are enabled.
The
.Fa id
parameter is ignored.
.El
.Sh RETURN VALUES
A successful call returns 0,
otherwise the value -1 is returned and the global variable
.Va errno
indicates the reason for the failure.
.Sh ERRORS
A
.Fn quotactl
call will fail if:
.Bl -tag -width Er
.It Bq Er ENOTSUP
The kernel has not been compiled with the
.Dv QUOTA
option.
.It Bq Er EUSERS
The quota table cannot be expanded.
.It Bq Er EINVAL
.Fa Cmd
or the command type is invalid.
.It Bq Er EACCES
In
.Dv Q_QUOTAON ,
the quota file is not a plain file.
.It Bq Er EACCES
Search permission is denied for a component of a path prefix.
.It Bq Er ENOTDIR
A component of a path prefix was not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.It Bq Er ENOENT
A filename does not exist.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating a pathname.
.It Bq Er EROFS
In
.Dv Q_QUOTAON ,
the quota file resides on a read-only filesystem.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing
to a file containing quotas.
.It Bq Er EFAULT
An invalid
.Fa addr
was supplied; the associated structure could not be copied in or out
of the kernel.
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.It Bq Er EPERM
The call was privileged and the caller was not the super-user.
.El
.Sh SEE ALSO
.Xr quota 1 ,
.Xr fstab 5 ,
.Xr edquota 8 ,
.Xr quotacheck 8 ,
.Xr quotaon 8 ,
.Xr repquota 8
.Sh BUGS
There should be some way to integrate this call with the resource
limit interface provided by
.Xr setrlimit 2
and
.Xr getrlimit 2 .
.Sh HISTORY
The
.Fn quotactl
function call appeared in
.Bx 4.3 Reno .
                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/read.2                                       0100644 0001750 0001750 00000016657 12567450735 021702  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)read.2	8.4 (Berkeley) 2/26/94
.\" $FreeBSD: src/lib/libc/sys/read.2,v 1.9.2.6 2001/12/14 18:34:01 ru Exp $
.\"
.Dd February 26, 1994
.Dt READ 2
.Os
.Sh NAME
.Nm pread ,
.Nm read ,
.Nm readv
.Nd read input
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In sys/uio.h
.In unistd.h
.Ft ssize_t
.Fo pread
.Fa "int d"
.Fa "void *buf"
.Fa "size_t nbyte"
.Fa "off_t offset"
.Fc
.Ft ssize_t
.Fo read
.Fa "int fildes"
.Fa "void *buf"
.Fa "size_t nbyte"
.Fc
.Ft ssize_t
.Fo readv
.Fa "int d"
.Fa "const struct iovec *iov"
.Fa "int iovcnt"
.Fc
.Sh DESCRIPTION
.Fn Read
attempts to read
.Fa nbyte
bytes of data from the object referenced by the descriptor
.Fa fildes
into the buffer pointed to by
.Fa buf .
.Fn Readv
performs the same action,
but scatters the input data into the
.Fa iovcnt
buffers specified by the members of the
.Fa iov
array: iov[0], iov[1], ..., iov[iovcnt\|\-\|1].
.Fn Pread
performs the same function,
but reads from the specified position in the file
without modifying the file pointer.
.Pp
For
.Fn readv ,
the
.Fa iovec
structure is defined as:
.Pp
.Bd -literal -offset indent -compact
struct iovec {
	char   *iov_base;  /* Base address. */
	size_t iov_len;    /* Length. */
};
.Ed
.Pp
Each
.Fa iovec
entry specifies the base address and length of an area
in memory where data should be placed.
.Fn Readv
will always fill an area completely before proceeding
to the next.
.Pp
On objects capable of seeking, the
.Fn read
starts at a position
given by the pointer associated with
.Fa fildes
(see
.Xr lseek 2 ) .
Upon return from
.Fn read ,
the pointer is incremented by the number of bytes actually read.
.Pp
Objects that are not capable of seeking always read from the current
position.  The value of the pointer associated with such an
object is undefined.
.Pp
Upon successful completion,
.Fn read ,
.Fn readv ,
and
.Fn pread
return the number of bytes actually read and placed in the buffer.
The system guarantees to read the number of bytes requested if
the descriptor references a normal file that has that many bytes left
before the end-of-file, but in no other case.
.Sh RETURN VALUES
If successful, the
number of bytes actually read is returned.
Upon reading end-of-file,
zero is returned.
Otherwise, a -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn pread ,
.Fn read ,
and
.Fn readv
calls
will succeed unless:
.Bl -tag -width Er
.\" ===========
.It Bq Er EAGAIN
The file was marked for non-blocking I/O,
and no data were ready to be read.
.\" ===========
.It Bq Er EBADF
.Fa fildes
is not a valid file or socket descriptor open for reading.
.\" ===========
.It Bq Er EFAULT
.Fa Buf
points outside the allocated address space.
.\" ===========
.It Bq Er EINTR
A read from a slow device was interrupted before
any data arrived by the delivery of a signal.
.It Bq Er EINVAL
The pointer associated with
.Fa fildes
was negative.
.\" ===========
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.\" ===========
.\" .It Bq Er EIO
.\" The process is a member of a background process
.\" attempting to read from its controlling terminal.
.\" ===========
.\" .It Bq Er EIO
.\" The process is ignoring or blocking the SIGTTIN signal.
.\" ===========
.It Bq Er EIO
The process group is orphaned.
.\" ===========
.It Bq Er EIO
The file is a regular file,
.Fa nbyte
is greater than 0,
the starting position is before the end-of-file,
and the starting position is greater than or equal
to the offset maximum established
for the open file descriptor associated with
.Fa fildes .
.\" ===========
.It Bq Er EISDIR
An attempt is made to read a directory.
.\" ===========
.It Bq Er ENOBUFS
An attempt to allocate a memory buffer fails.
.\" ===========
.It Bq Er ENOMEM
Insufficient memory is available.
.\" ===========
.It Bq Er ENXIO
An action is requested of a device that does not exist..
.\" ===========
.It Bq Er ENXIO
A requested action cannot be performed by the device.
.El
.Pp
The
.Fn pread
call may also return the following errors:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
The specified file offset is invalid.
.\" ===========
.It Bq Er ESPIPE
The file descriptor is associated with a pipe, socket, or FIFO.
.El
.Pp
The
.Fn read
call may also return the following errors:
.Bl -tag -width Er
.\" ===========
.It Bq Er ECONNRESET
The connection is closed by the peer
during a read attempt on a socket.
.\" ===========
.It Bq Er ENOTCONN
A read is attempted on an unconnected socket.
.\" ===========
.It Bq Er ETIMEDOUT
A transmission timeout occurs
during a read attempt on a socket.
.El
.Pp
The
.Fn readv
call may also return one of the following errors:
.Bl -tag -width Er
.\" ===========
.It Bq Er EFAULT
Part of the
.Fa iov
points outside the process's allocated address space.
.\" ===========
.It Bq Er EINVAL
.Fa Iovcnt
was less than or equal to 0, or greater than 16.
.\" ===========
.It Bq Er EINVAL
One of the
.Fa iov_len
values in the
.Fa iov
array was negative.
.\" ===========
.It Bq Er EINVAL
The sum of the
.Fa iov_len
values in the
.Fa iov
array overflowed a 32-bit integer.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/uio.h>
.Fd #include <unistd.h>
.Pp
The include files
.In sys/types.h
and
.In sys/uio.h
are necessary for all functions.
.Sh SEE ALSO
.Xr dup 2 ,
.Xr fcntl 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr socketpair 2 ,
.Xr compat 5
.Sh STANDARDS
The
.Fn read
function call is expected to conform to
.St -p1003.1-90 .
The
.Fn readv
and
.Fn pread
functions are expected to conform to
.St -xpg4.2 .
.Sh HISTORY
The
.Fn pread
function call
appeared in
.At V.4 .
The
.Fn readv
function call
appeared in
.Bx 4.2 .
A
.Fn read
function call appeared in
.At v6 .
                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/readlink.2                                   0100644 0001750 0001750 00000011644 12567450735 022547  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: readlink.2,v 1.7 1995/02/27 12:35:54 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)readlink.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt READLINK 2
.Os BSD 4.2
.Sh NAME
.Nm readlink ,
.Nm readlinkat
.Nd read value of a symbolic link
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft  ssize_t
.Fo readlink
.Fa "const char *restrict path"
.Fa "char *restrict buf"
.Fa "size_t bufsize"
.Fc
.Ft ssize_t
.Fo readlinkat
.Fa "int fd" "const char *restrict path" "char *restrict buf" "size_t bufsize"
.Fc
.Sh DESCRIPTION
.Fn Readlink
places the contents of the symbolic link
.Fa path
in the buffer
.Fa buf ,
which has size
.Fa bufsize .
.Nm Readlink
does not append a
.Dv NUL
character to
.Fa buf .
.Pp
The
.Fn readlinkat
system call is equivalent to
.Fn readlink
except in the case where
.Fa path
specifies a relative path.
In this case the symbolic link whose content is read relative to the
directory associated with the file descriptor
.Fa fd
instead of the current working directory.
If
.Fn readlinkat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used and the behavior is
identical to a call to
.Sh RETURN VALUES
The call returns the count of characters placed in the buffer
if it succeeds, or a -1 if an error occurs, placing the error
code in the global variable
.Va errno .
.Sh ERRORS
.Fn Readlink
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ===========
.It Bq Er EFAULT
.Fa Buf
extends outside the process's allocated address space.
.\" ===========
.It Bq Er EINVAL
The named file is not a symbolic link.
.\" ===========
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.\" ===========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ===========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 
.Dv {NAME_MAX}
characters, or an entire path name
(possibly expanded by a symbolic link) exceeded 
.Dv {PATH_MAX}
characters.
.\" ===========
.It Bq Er ENOENT
The named file does not exist.
.\" ===========
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.El
.Pp
In addition to the errors returned by the
.Fn readlink ,
the
.Fn readlinkat
may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er ENOTDIR
The
.Fa path
argument is not an absolute path and
.Fa fd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <unistd.h>
.Pp
.Ft int
.br
.Fo readlink
.Fa "const char *path"
.Fa "char *buf"
.Fa "int bufsize"
.Fc ;
.Pp
The function type and the type of
.Fa bufsize
have changed.
.Sh SEE ALSO
.Xr lstat 2 ,
.Xr stat 2 ,
.Xr symlink 2 ,
.Xr compat 5 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn readlinkat
system call is expected to conform to POSIX.1-2008 .
.Sh HISTORY
The
.Fn readlink
function call appeared in
.Bx 4.2 .
The
.Fn readlinkat
system call appeared in OS X 10.10
                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/readlinkat.2                                 0100644 0001750 0001750 00000000024 12567450735 023062  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/readlink.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/readv.2                                      0100644 0001750 0001750 00000000020 12567450735 022041  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/read.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/reboot.2                                     0100644 0001750 0001750 00000012746 12567450735 022254  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"   $OpenBSD: reboot.2,v 1.2 1996/10/08 01:20:13 michaels Exp $
.\"	$NetBSD: reboot.2,v 1.5 1995/02/27 12:36:02 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)reboot.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt REBOOT 2
.Os BSD 4
.Sh NAME
.Nm reboot
.Nd reboot system or halt processor
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Fd #include <sys/reboot.h>
.Ft int
.Fn reboot "int howto"
.Sh DESCRIPTION
.Fn Reboot
reboots the system.  Only the super-user may reboot a machine on demand.
However, a reboot may be invoked automatically in the event of
unrecoverable system failures.  Programs other than
.Xr reboot 8
should not call
.Fn reboot .
.Xr Shutdown 8
or a higher-level API will shut the system down cleanly.
.Pp
.Fa Howto
is a mask of options; the system call interface allows the following
options, defined in the include file
.Aq Pa sys/reboot.h ,
to be passed
to the new kernel or the new bootstrap and init programs.
.Bl -tag -width RB_INITNAMEA
.It Dv RB_AUTOBOOT
The default, causing the system to reboot in its usual fashion.
.It Dv RB_ASKNAME
Interpreted by the bootstrap program itself, causing it to
prompt on the console as to what file should be booted.
Normally, the system is booted from the file
.Dq Em xx Ns No (0,0)bsd ,
where
.Em xx
is the default disk name,
without prompting for the file name.
.It Dv RB_DFLTROOT
Use the compiled in root device.
Normally, the system uses the device from which it was booted
as the root device if possible.
(The default behavior is dependent on the ability of the bootstrap program
to determine the drive from which it was loaded, which is not possible
on all systems.)
.It Dv RB_DUMP
Dump kernel memory before rebooting; see
.Xr savecore 8
for more information.
.It Dv RB_HALT
the processor is simply halted; no reboot takes place.
This option should be used with caution.
.It Dv RB_INITNAME
An option allowing the specification of an init program (see
.Xr launchd 8 )
other than
.Pa /sbin/launchd 
to be run when the system reboots.
This switch is not currently available.
.It Dv RB_KDB
Load the symbol table and enable a built-in debugger in the system.
This option will have no useful function if the kernel is not configured
for debugging.
Several other options have different meaning if combined
with this option, although their use may not be possible
via the
.Fn reboot
call.
See
.Xr kadb 4
for more information.
.It Dv RB_NOSYNC
Normally, the disks are sync'd (see
.Xr sync 8 )
before the processor is halted or rebooted.
This option may be useful if file system changes have been made manually
or if the processor is on fire.
.It Dv RB_RDONLY
Initially mount the root file system read-only.
This is currently the default, and this option has been deprecated.
.It Dv RB_SINGLE
Normally, the reboot procedure involves an automatic disk consistency
check and then multi-user operations.
.Dv RB_SINGLE
prevents this, booting the system with a single-user shell
on the console.
.Dv RB_SINGLE
is actually interpreted by the
.Xr launchd 8
program in the newly booted system.
.Pp
When no options are given (i.e.,
.Dv RB_AUTOBOOT
is used), the system is
rebooted from file ``bsd'' in the root file system of unit 0
of a disk chosen in a processor specific way.
An automatic consistency check of the disks is normally performed
(see
.Xr fsck 8 ) .
.El
.Sh RETURN VALUES
If successful, this call never returns.
Otherwise, a -1 is returned and an error is returned in the global
variable
.Va errno .
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EPERM
The caller is not the super-user.
.El
.Sh SEE ALSO
.Xr shutdown 8 ,
.Xr halt 8 ,
.Xr launchd 8 ,
.Xr reboot 8
.Sh BUGS
The HP300 implementation supports neither
.Dv RB_DFLTROOT
nor
.Dv RB_KDB .
.Sh HISTORY
The
.Fn reboot
function call appeared in
.Bx 4.0 .
                          osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/recv.2                                       0100644 0001750 0001750 00000023374 12567450735 021720  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1983, 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)recv.2	8.3 (Berkeley) 2/21/94
.\"
.Dd March 18, 2015
.Dt RECV 2
.Os
.Sh NAME
.Nm recv ,
.Nm recvfrom ,
.Nm recvmsg
.Nd receive a message from a socket
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/socket.h
.Ft ssize_t
.Fo recv
.Fa "int socket"
.Fa "void *buffer"
.Fa "size_t length"
.Fa "int flags"
.Fc
.Ft ssize_t
.Fo recvfrom
.Fa "int socket"
.Fa "void *restrict buffer"
.Fa "size_t length"
.Fa "int flags"
.Fa "struct sockaddr *restrict address"
.Fa "socklen_t *restrict address_len"
.Fc
.Ft ssize_t
.Fo recvmsg
.Fa "int socket"
.Fa "struct msghdr *message"
.Fa "int flags"
.Fc
.Sh DESCRIPTION
The
.Fn recvfrom
and
.Fn recvmsg
system calls
are used to receive messages from a socket,
and may be used to receive data on a socket whether or not
it is connection-oriented.
.Pp
If
.Fa address
is not a null pointer
and the socket is not connection-oriented,
the source address of the message is filled in.
The
.Fa address_len
argument
is a value-result argument, initialized to the size of
the buffer associated with
.Fa address ,
and modified on return to indicate the actual size of the
address stored there.
.Pp
The
.Fn recv
function is normally used only on a
.Em connected
socket (see
.Xr connect 2 
or
.Xr connectx 2 )
and is identical to
.Fn recvfrom
with a
null pointer passed as its
.Fa address
argument.
As it is redundant, it may not be supported in future releases.
.Pp
All three routines return the length of the message on successful
completion.
If a message is too long to fit in the supplied buffer,
excess bytes may be discarded depending on the type of socket
the message is received from (see
.Xr socket 2 ) .
.Pp
If no messages are available at the socket, the
receive call waits for a message to arrive, unless
the socket is nonblocking (see
.Xr fcntl 2 )
in which case the value
-1 is returned and the external variable
.Va errno
set to
.Er EAGAIN .
The receive calls normally return any data available,
up to the requested amount,
rather than waiting for receipt of the full amount requested;
this behavior is affected by the socket-level options
.Dv SO_RCVLOWAT
and
.Dv SO_RCVTIMEO
described in
.Xr getsockopt 2 .
.Pp
The
.Xr select 2
system call may be used to determine when more data arrive.
.Pp
If no messages are available to be received and the peer has
performed an orderly shutdown, the value 0 is returned.
.Pp
The
.Fa flags
argument to a
.Fn recv
function is formed by
.Em or Ap ing
one or more of the values:
.Bl -column MSG_WAITALL -offset indent
.It Dv MSG_OOB Ta process out-of-band data
.It Dv MSG_PEEK Ta peek at incoming message
.It Dv MSG_WAITALL Ta wait for full request or error
.El
.Pp
The
.Dv MSG_OOB
flag requests receipt of out-of-band data
that would not be received in the normal data stream.
Some protocols place expedited data at the head of the normal
data queue, and thus this flag cannot be used with such protocols.
The
.Dv MSG_PEEK
flag causes the receive operation to return data
from the beginning of the receive queue without removing that
data from the queue.
Thus, a subsequent receive call will return the same data.
The
.Dv MSG_WAITALL
flag requests that the operation block until
the full request is satisfied.
However, the call may still return less data than requested
if a signal is caught, an error or disconnect occurs,
or the next data to be received is of a different type than that returned.
.Pp
The
.Fn recvmsg
system call uses a
.Fa msghdr
structure to minimize the number of directly supplied arguments.
This structure has the following form, as defined in
.In sys/socket.h :
.Pp
.Bd -literal
struct msghdr {
	void		*msg_name;      /* optional address */
	socklen_t	msg_namelen;    /* size of address */
	struct		iovec *msg_iov; /* scatter/gather array */
	int		msg_iovlen;     /* # elements in msg_iov */
	void		*msg_control;   /* ancillary data, see below */
	socklen_t	msg_controllen; /* ancillary data buffer len */
	int		msg_flags;      /* flags on received message */
};
.Ed
.Pp
Here
.Fa msg_name
and
.Fa msg_namelen
specify the destination address if the socket is unconnected;
.Fa msg_name
may be given as a null pointer if no names are desired or required.
.Pp
The
.Fa msg_iov
and
.Fa msg_iovlen
arguments
describe scatter gather locations, as discussed in
.Xr read 2 .
.Fa msg_iovlen 
shall be set to the dimension of this array. In each 
.Fa iovec 
structure, the 
.Fa iov_base 
field specifies a storage area and the 
.Fa iov_len 
field gives its size in bytes. Each storage area indicated by 
.Fa msg_iov 
is filled with received data in turn until all of the received data 
is stored or all of the areas have been filled.
.Pp
The
.Fa msg_control
argument,
which has length
.Fa msg_controllen ,
points to a buffer for other protocol control related messages
or other miscellaneous ancillary data.
The messages are of the form:
.Bd -literal
struct cmsghdr {
	u_int	cmsg_len;	/* data byte count, including hdr */
	int	cmsg_level;	/* originating protocol */
	int	cmsg_type;	/* protocol-specific type */
/* followed by
	u_char	cmsg_data[]; */
};
.Ed
.Pp
As an example, one could use this to learn of changes
in the data-stream in XNS/SPP,
or in ISO, to obtain user-connection-request data by requesting a
.Fn recvmsg
with no data buffer provided immediately after an
.Fn accept
system call.
.Pp
Open file descriptors are now passed as ancillary data for
.Dv AF_UNIX
domain sockets, with
.Fa cmsg_level
set to
.Dv SOL_SOCKET
and
.Fa cmsg_type
set to
.Dv SCM_RIGHTS .
.Pp
The
.Fa msg_flags
field is set on return according to the message received.
.Dv MSG_EOR
indicates end-of-record;
the data returned completed a record.
.\" (generally used with sockets of type
.\".Dv SOCK_SEQPACKET ) .
.Dv MSG_TRUNC
indicates that
the trailing portion of a datagram was discarded
because the datagram was larger than the buffer supplied.
.Dv MSG_CTRUNC
indicates that some control data were discarded
due to lack of space in the buffer for ancillary data.
.Dv MSG_OOB
is returned to indicate that expedited or out-of-band data were received.
.Sh RETURN VALUES
These calls return the number of bytes received, or -1
if an error occurred.
.Pp
For TCP sockets, the return value 0 means the peer has closed its 
half side of the connection.
.Sh ERRORS
The calls fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EAGAIN
The socket is marked non-blocking, and the receive operation
would block, or
a receive timeout had been set,
and the timeout expired before data were received.
.\" ===========
.It Bq Er EBADF
The argument
.Fa socket
is an invalid descriptor.
.\" ===========
.It Bq Er ECONNRESET
The connection is closed by the peer
during a receive attempt on a socket.
.\" ===========
.It Bq Er EFAULT
The receive buffer pointer(s) point outside the process's
address space.
.\" ===========
.It Bq Er EINTR
The receive was interrupted by delivery of a signal before
any data were available.
.\" ===========
.It Bq Er EINVAL
MSG_OOB is set, but no out-of-band data is available.
.\" ===========
.It Bq Er ENOBUFS
An attempt to allocate a memory buffer fails.
.\" ===========
.It Bq Er ENOTCONN
The socket is associated with a connection-oriented protocol
and has not been connected (see
.Xr connect 2,
.Xr connectx 2,
and
.Xr accept 2 ) .
.\" ===========
.It Bq Er ENOTSOCK
The argument
.Fa socket
does not refer to a socket.
.\" ===========
.It Bq Er EOPNOTSUPP
The type and/or protocol of
.Fa socket
do not support the option(s) specified in
.Fa flags . 
.\" ===========
.It Bq Er ETIMEDOUT
The connection timed out.
.El
.Pp
The
.Fn recvfrom
call may also fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
The total of the iov_len values overflows a ssize_t.
.El
.Pp
The
.Fn recvmsg
call may also fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EMSGSIZE
The 
.Fa msg_iovlen 
member of the 
.Fa msghdr 
structure pointed to by message is less than or equal to 0, or is greater than 
.Dv IOV_MAX .
.\" ===========
.It Bq Er ENOMEM
Insufficient memory is available.
.El
.Sh SEE ALSO
.Xr fcntl 2 ,
.Xr getsockopt 2 ,
.Xr read 2 ,
.Xr select 2 ,
.Xr socket 2
.Sh HISTORY
The
.Fn recv
function appeared in
.Bx 4.2 .
                                                                                                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/recvfrom.2                                   0100644 0001750 0001750 00000000020 12567450735 022563  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/recv.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/recvmsg.2                                    0100644 0001750 0001750 00000000020 12567450735 022406  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/recv.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/removexattr.2                                0100644 0001750 0001750 00000007131 12567450735 023332  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2004 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\"
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\"
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\"
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd Oct 19, 2004
.Dt REMOVEXATTR 2
.Os "Mac OS X"
.Sh NAME
.Nm removexattr,
.Nm fremovexattr
.Nd remove an extended attribute value
.Sh SYNOPSIS
.Fd #include <sys/xattr.h>
.Ft int
.Fn removexattr "const char *path" "const char *name" "int options"
.Ft int
.Fn fremovexattr "int fd" "const char *name" "int options"
.Sh DESCRIPTION
Extended attributes extend the basic attributes associated with files and
directories in the file system.  They are stored as name:data pairs
associated with file system objects (files, directories, symlinks, etc).
.Pp
.Fn Removexattr
deletes the extended attribute
.Fa name
associated with
.Fa path .
.Pp
An extended attribute's
.Fa name
is a simple NULL-terminated UTF-8 string.
.Fa Options
is a bit mask specifying various options:
.Pp
.Bl -tag -width XATTR_NOFOLLOW
.It Dv XATTR_NOFOLLOW
do not follow symbolic links.  Normally,
.Fn removexattr
acts on the target of
.Fa path
if it is a symbolic link.  With this option,
.Fn removexattr
will act on the link itself.
.It Dv XATTR_SHOWCOMPRESSION
.Fn removexattr
and 
.Fn fremovexattr
will remove HFS Plus Compression extended attribute
.Fa name
(if present) for the file referred to by
.Fa path
or
.Fa fd .
.El
.Pp
.Fn fremovexattr
is identical to
.Fn removexattr ,
except that it removes an extended attribute from an open file referenced
by file descriptor
.Fa fd .
.Sh RETURN VALUES
On success, 0 is returned.  On failure, -1 is returned and the global
variable
.Va errno
is set as follows.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ENOATTR
The specified extended attribute does not exist.
.It Bq Er ENOTSUP
The file system does not support extended attributes or has the feature
disabled.
.It Bq Er EROFS
The file system is mounted read-only.
.It Bq Er EPERM
This type of object does not support extended attributes.
.It Bq Er EINVAL
.Fa name
or
.Fa options
is invalid.
.Fa name
must be valid UTF-8
.Fa options
must make sense.
.It Bq Er ENOTDIR
A component of the
.Fa path 's
prefix is not a directory.
.It Bq Er ENAMETOOLONG
.Fa Name
exceeded
.Dv XATTR_MAXNAMELEN
UTF-8 bytes, or a component of
.Fa path
exceeded
.Dv NAME_MAX
characters, or the entire
.Fa path
exceeded
.Dv PATH_MAX
characters.
.It Bq Er EACCES
Search permission is denied for a component
.Fa path
or permission to remove the attribute is denied.
.It Bq Er ELOOP
Too many symbolic links were encountered in
.Fa path .
.It Bq Er EFAULT
.Fa path
or
.Fa name
points to an invalid address.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr getxattr 2 ,
.Xr listxattr 2 ,
.Xr setxattr 2
.Sh HISTORY
.Fn removexattr
and
.Fn fremovexattr
first appeared in Mac OS X 10.4.
                                                                                                                                                                                                                                                                                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/rename.2                                     0100644 0001750 0001750 00000020754 12567450735 022227  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: rename.2,v 1.7 1995/02/27 12:36:15 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)rename.2	8.1 (Berkeley) 6/4/93
.\"
.Dd September 18, 2008
.Dt RENAME 2
.Os BSD 4.2
.Sh NAME
.Nm rename ,
.Nm renameat
.Nd change the name of a file
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft int
.Fo rename
.Fa "const char *old"
.Fa "const char *new"
.Fc
.Ft int
.Fn renameat "int fromfd" "const char *from" "int tofd" "const char *to"
.Sh DESCRIPTION
The
.Fn rename
system call causes the link named
.Fa old
to be renamed as
.Fa new .
If 
.Fa new
exists, it is first removed.
Both 
.Fa old
and
.Fa new
must be of the same type
(that is, both must be either directories or non-directories)
and must reside on the same file system.
.Pp
The
.Fn rename
system call guarantees that an instance of
.Fa new
will always exist,
even if the system should crash in the middle of the operation.
.Pp
If the final component of
.Fa old
is a symbolic link,
the symbolic link is renamed,
not the file or directory to which it points.
.Pp
The
.Fn renameat
system call is equivalent to
.Fn rename
except in the case where either
.Fa from
or
.Fa to
specifies a relative path.
If
.Fa from
is a relative path, the file to be renamed is located
relative to the directory associated with the file descriptor
.Fa fromfd
instead of the current working directory.
If the
.Fa to
is a relative path, the same happens only relative to the directory associated
with
.Fa tofd .
If the
.Fn renameat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fromfd
or
.Fa tofd
parameter, the current working directory is used in the determination
of the file for the respective path parameter.
.Sh CAVEATS
The system can deadlock if a loop is present in the file system graph.
This loop takes the form of an entry in directory
.Ql Pa a ,
say
.Ql Pa a/foo ,
being a hard link to directory
.Ql Pa b ,
and an entry in
directory
.Ql Pa b ,
say
.Ql Pa b/bar ,
being a hard link
to directory
.Ql Pa a .
When such a loop exists and two separate processes attempt to
perform
.Ql rename a/foo b/bar
and
.Ql rename b/bar a/foo ,
respectively, 
the system may deadlock attempting to lock
both directories for modification.
.Pp
Whether or not hard links to directories are supported is specific to
the underlying filesystem implementation.
.Pp
It is recommended that any hard links to directories in an underlying
filesystem should be replaced by symbolic links by the system administrator
to avoid the possibility of deadlocks.
.Pp
Moving or renaming a file or directory into a directory with inheritable ACLs does not result in ACLs being set on the file or directory. Use
.Xr acl 3
in conjunction with
.Fn rename
to set ACLs on the file or directory.
.Sh RETURN VALUES
A 0 value is returned if the operation succeeds, otherwise
.Fn rename
returns -1 and the global variable 
.Va errno
indicates the reason for the failure.
.Sh ERRORS
The
.Fn rename
system call will fail and neither of the argument files will be
affected if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
A component of either path prefix denies search permission.
.\" ===========
.It Bq Er EACCES
The requested operation requires writing in a directory
(e.g.,
.Fa new ,
new/.., or old/..) whose modes disallow this.
.\" ===========
.It Bq Er EDQUOT
The directory in which the entry for the new name
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.\" ===========
.It Bq Er EFAULT
.Em Path
points outside the process's allocated address space.
.\" ===========
.It Bq Er EINVAL
.Fa Old
is a parent directory of
.Fa new ,
or an attempt is made to rename
.Ql \&.
or
.Ql \&.. .
.\" ===========
.It Bq Er EIO
An I/O error occurs while making or updating a directory entry.
.\" ===========
.It Bq Er EISDIR
.Fa new
is a directory, but
.Fa old
is not a directory.
.\" ===========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating either pathname.
This is taken to be indicative of a looping symbolic link.
.\" ===========
.It Bq Er ENAMETOOLONG
A component of a pathname exceeds 
.Dv {NAME_MAX}
characters, or an entire path name exceeds
.Dv {PATH_MAX}
characters.
.\" ===========
.It Bq Er ENOENT
A component of the
.Fa old
path does not exist,
or a path prefix of
.Fa new
does not exist.
.\" ===========
.It Bq Er ENOSPC
The directory in which the entry for the new name is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.\" ===========
.It Bq Er ENOTDIR
A component of either path prefix is not a directory.
.\" ===========
.It Bq Er ENOTDIR
.Fa old
is a directory, but
.Fa new
is not a directory.
.\" ===========
.It Bq Er ENOTEMPTY
.Fa New
is a directory and is not empty.
.\" ===========
.It Bq Er EPERM
The directory containing
.Fa old
is marked sticky,
and neither the containing directory nor
.Fa old
are owned by the effective user ID.
.\" ===========
.It Bq Er EPERM
The
.Fa new
file exists,
the directory containing
.Fa new
is marked sticky,
and neither the containing directory nor
.Fa new
are owned by the effective user ID.
.\" ===========
.It Bq Er EROFS
The requested link requires writing in a directory on a read-only file
system.
.\" ===========
.It Bq Er EXDEV
The link named by
.Fa new
and the file named by
.Fa old
are on different logical devices (file systems).
Note that this error code will not be returned
if the implementation permits cross-device links.
.El
.Pp
In addition to the errors returned by the
.Fn rename ,
the
.Fn renameat
may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa from
argument does not specify an absolute path and the
.Fa fromfd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching, or the
.Fa to
argument does not specify an absolute path and the
.Fa tofd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for searching.
.It Bq Er ENOTDIR
The
.Fa from
argument is not an absolute path and
.Fa fromfd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory, or the
.Fa to
argument is not an absolute path and
.Fa tofd
is neither
.Dv AT_FDCWD
nor a file descriptor associated with a directory.
.Sh CONFORMANCE
The restriction on renaming a directory whose permissions disallow writing
is based on the fact that UFS directories contain a ".." entry.
If renaming a directory would move it to another parent directory,
this entry needs to be changed.
.Pp
This restriction has been generalized to disallow renaming
of any write-disabled directory,
even when this would not require a change to the ".." entry.
For consistency, HFS+ directories emulate this behavior.
.Sh SEE ALSO
.Xr open 2 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn rename
function conforms to 
.St -p1003.1-88 .
The
.Fn renameat
system call is expected to conform to POSIX.1-2008 .
                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/renameat.2                                   0100644 0001750 0001750 00000000022 12567450735 022536  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/rename.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/revoke.2                                     0100644 0001750 0001750 00000010210 12567450735 022235  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: revoke.2,v 1.3 1995/10/12 15:41:11 jtc Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Berkeley Software Design, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)revoke.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt REVOKE 2
.Os
.Sh NAME
.Nm revoke
.Nd revoke file access
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fn revoke "const char *path"
.Sh DESCRIPTION
The
.Nm revoke
function invalidates all current open file descriptors in the system
for the file named by
.Fa path .
Subsequent operations on any such descriptors
fail, with the exceptions that a
.Fn read
from a character device file which has been revoked
returns a count of zero (end of file),
and a
.Fn close
call will succeed.
If the file is a special file for a device which is open,
the device close function
is called as if all open references to the file had been closed.
.Pp
Access to a file may be revoked only by its owner or the super user.
The
.Nm revoke
function is currently supported only for block and character special
device files.
It is normally used to prepare a terminal device for a new login session,
preventing any access by a previous user of the terminal.
.Sh RETURN VALUES
A 0 value indicated that the call succeeded.  A \-1 return value
indicates an error occurred and
.Va errno
is set to indicated the reason.
.Sh ERRORS
Access to the named file is revoked unless one of the following:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1024 characters.
.It Bq Er ENOENT
The named file or a component of the path name does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.It Bq Er EINVAL
The named file is neither a character special or block
special file.
.It Bq Er EPERM
The caller is neither the owner of the file nor the super user.
.It Bq Er ENOTSUP
The path does not represent a block or character device.
.It Bq Er EBUSY
The path represents a block device which is providing the backing for a mounted volume. 
.El
.Sh SEE ALSO
.Xr close 2
.Sh HISTORY
The
.Nm revoke
function was introduced in
.Bx 4.3 Reno .
                                                                                                                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/rmdir.2                                      0100644 0001750 0001750 00000007744 12567450735 022101  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: rmdir.2,v 1.7 1995/02/27 12:36:30 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)rmdir.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt RMDIR 2
.Os BSD 4.2
.Sh NAME
.Nm rmdir
.Nd remove a directory file
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo rmdir
.Fa "const char *path"
.Fc
.Sh DESCRIPTION
.Fn Rmdir
removes a directory file
whose name is given by
.Fa path .
The directory must not have any entries other
than
.Ql \&.
and
.Ql \&.. .
.Sh RETURN VALUES
A 0 is returned if the remove succeeds; otherwise a -1 is
returned and an error code is stored in the global location
.Va errno .
.Sh ERRORS
The named file is removed unless:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.\" ===========
.It Bq Er EACCES
Write permission is denied on the directory containing the link
to be removed.
.\" ===========
.It Bq Er EBUSY
The directory to be removed is the mount point
for a mounted file system.
.\" ===========
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.\" ===========
.It Bq Er EIO
An I/O error occurs while deleting the directory entry
or deallocating the inode.
.\" ===========
.It Bq Er ELOOP
Too many symbolic links are encountered in translating the pathname.
This is taken to be indicative of a looping symbolic link.
.\" ===========
.It Bq Er ENAMETOOLONG
A component of a pathname (possibly expanded by a symbolic link) exceeds 
.Dv {NAME_MAX}
characters, or an entire path name exceeded 
.Dv {PATH_MAX}
characters.
.\" ===========
.It Bq Er ENOENT
The named directory does not exist.
.\" ===========
.It Bq Er ENOTDIR
A component of the path is not a directory.
.\" ===========
.It Bq Er ENOTEMPTY
The named directory contains files other than
.Ql \&.
and
.Ql \&..
in it.
.\" ===========
.It Bq Er EPERM
The directory containing the directory to be removed is marked sticky,
and neither the containing directory nor the directory to be removed
are owned by the effective user ID.
.\" ===========
.It Bq Er EROFS
The directory entry to be removed resides on a read-only file system.
.El
.Sh SEE ALSO
.Xr mkdir 2 ,
.Xr unlink 2
.Sh HISTORY
The
.Fn rmdir
function call appeared in
.Bx 4.2 .
                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sbrk.2                                       0120777 0001750 0001750 00000000000 12620245063 022533  2brk.2                                                                                               ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/searchfs.2                                   0100644 0001750 0001750 00000055220 12567450735 022552  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 2003 Apple Computer, Inc. All rights reserved.
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\"     @(#)searchfs.2
.
.Dd October 13, 2008
.Dt SEARCHFS 2
.Os Darwin
.Sh NAME
.Nm searchfs
.Nd search a volume quickly
.Sh SYNOPSIS
.Fd #include <sys/attr.h>
.Fd #include <unistd.h>
.Ft int
.Fn searchfs "const char* path" "struct fssearchblock* searchBlock" "unsigned int* numMatches" "unsigned int scriptCode" "unsigned int options" "struct searchstate* state"
.
.Sh DESCRIPTION
The
.Fn searchfs
function searches the volume (that is, mounted file system) specified by  
.Fa path 
for file system objects matching the criteria specified by 
.Fa searchBlock , 
.Fa scriptCode , 
and 
.Fa options .
The 
.Fa numMatches 
parameter returns the number of matching file system objects found.
The function also returns attributes of those file system objects in a buffer 
specified by 
.Fa searchBlock .
The 
.Fa searchState 
parameter allows you search the volume using multiple calls to 
.Fn searchfs ,
resuming the search where it left off.
The routine will only return objects to which you have access (that is, you 
have execute permissions on the directories leading to this object from the root).
.Pp
.
.\" path parameter
.
The
.Fa path 
parameter must reference a valid file system object on the volume to be searched. 
Typically the path is to the volume's root directory.
The entire volume is always searched.
All directories listed in the path name leading to this object must be 
searchable.
.Pp
.
.\" searchBlock parameter
.
The
.Fa searchBlock
parameter is a pointer to an 
.Vt fssearchblock 
structure, as defined by
.Aq Pa sys/attr.h
(shown below).
You are responsible for filling out all fields of this structure before calling the function. 
.Bd -literal
struct fssearchblock {
    struct attrlist *   returnattrs;
    void *              returnbuffer;
    size_t              returnbuffersize;
    unsigned int        maxmatches;
    struct timeval      timelimit;
    void *              searchparams1;
    size_t              sizeofsearchparams1;
    void *              searchparams2;
    size_t              sizeofsearchparams2;
    struct attrlist     searchattrs;
};
.Ed
.Pp
.
For information about the 
.Vt attrlist 
structure, see the discussion of 
.Xr getattrlist 2 .
.Pp
.
.\" searchBlock elements
.
The fields of the 
.Vt fssearchblock
structure are defined as follows.
.Bl -tag -width sizeofsearchparams1
.
.It returnattrs
.Fn searchfs 
can return arbitrary attributes of the file system objects that meet the designated
search criteria passed in via 
.Vt searchparams1 
and 
.Vt searchparams2.  
This field must point to an 
.Vt attrlist 
structure that specifies the attributes that you want returned. 
To request an attribute you must set the corresponding bit in the appropriate 
.Vt attrgroup_t 
field of the 
.Vt attrlist 
structure.
You are responsible for filling out all fields of this structure before calling the function. 
You must not request volume attributes.
.
.It returnbuffer
.Fn searchfs 
places attributes of the matching file system objects into this returned attributes buffer. 
The attributes for any given object are grouped together and 
packed in exactly the same way as they would be returned from 
.Xr getdirentriesattr 2 .
The initial contents of this buffer are ignored.
.
.It returnbuffersize
Set this field to the size, in bytes, of the buffer pointed to by 
.Fa returnbuffer .
.
.It maxmatches
Specifies the maximum number of matches that you want this call to 
.Fn searchfs 
to return.
.
.It timelimit
Specifies the maximum time that you want this call to 
.Fn searchfs 
to run.
.Pp
.
If you're implementing a volume format, you should impose your own internal 
limit on the duration of this call to prevent a malicious user program 
from monopolizing kernel resources.
.Pp
.
.It searchparams1
Specifies the lower bound of the search criteria. 
This is discussed in detail below. 
You must place attribute values into the buffer in the same 
way as they would be returned by 
.Xr getattrlist 2 ,
where the 
.Fa searchattrs
field determines the exact layout of the attribute values.
.
.It sizeofsearchparams1
Set this field to the size, in bytes, of the buffer pointed to by 
.Fa searchparams1 .
.
.It searchparams2
Specifies the upper bound of the search criteria. 
This is discussed in detail below. 
You must place attribute values into the buffer in the same 
way as they would be returned by 
.Xr getattrlist 2 ,
where the 
.Fa searchattrs
field determines the exact layout of the attribute values.
.
.It sizeofsearchparams2
Set this field to the size, in bytes, of the buffer pointed to by 
.Fa searchparams2 .
.
.It searchattrs
Specifies the attributes that you want you use for your search criteria. 
You are responsible for filling out all fields of this structure before calling the function. 
To search for an attribute you must set the corresponding bit in the appropriate 
.Vt attrgroup_t 
field of the 
.Vt attrlist 
structure, and place the appropriate values into the 
.Fa searchparam1 
and 
.Fa searchparam2 
buffers.
The attributes specified here determine the format of those buffers. 
This is discussed in detail below. 
.
.El
.Pp
.
.\" numMatches parameter
.
The 
.Fa numMatches 
parameter points to an 
.Vt unsigned int 
variable. 
The initial value of this variable is ignored.
On return, this variable contains the number of matching file system objects found.
The is always less than or equal to the 
.Fa maxmatches 
field of the 
.Fa searchBlock 
parameter.
The attributes for the matching objects have been placed into the returned attributes buffer.
.Pp
.
.\" scriptCode parameter
.
The 
.Fa scriptCode 
parameter is currently ignored. 
You should always pass in the value 0x08000103, which corresponds to the 
UTF-8 text encoding value defined by 
.Aq Pa CarbonCore/TextCommon.h .
.Pp
.
.\" options parameter
.
The
.Fa options
parameter is a bit set that controls the behaviour of
.Fn searchfs .
The following option bits are defined.
.
.Bl -tag -width SRCHFS_MATCHPARTIALNAMES
.
.It SRCHFS_START
If this bit is set, 
.Fn searchfs 
will ignore the 
.Fa state 
parameter and start a new search. 
Otherwise 
.Fn searchfs 
assumes that 
.Fa searchstate 
is valid and attempts to resume a previous search based on that state.
.
.It SRCHFS_MATCHPARTIALNAMES
If this bit is set, 
.Fn searchfs 
will consider substrings to be successful matches when evaluating the 
.Dv ATTR_CMN_NAME
attribute.
.
.It SRCHFS_MATCHDIRS
If this bit is set, 
.Fn searchfs 
will search for directories that match the search criteria.
To get meaningful results you must specify either this bit or 
.Dv SRCHFS_MATCHFILES , 
or both.
.
.It SRCHFS_MATCHFILES
If this bit is set, 
.Fn searchfs 
will search for files that match the search criteria.
To get meaningful results you must specify either this bit or 
.Dv SRCHFS_MATCHDIRS , 
or both.
.
.It SRCHFS_SKIPLINKS
If this bit is set, 
.Fn searchfs 
will only return one reference for a hard linked file, rather than a reference 
for each hard link to the file.
.Pp
This option is not recommended for general development.
Its primary client is the 
.Xr quotacheck 2 
utility.  Note that not all filesystems that support 
.Fn searchfs 
support this option and may return EINVAL if it is requested.
.Pp
.
This option is privileged (the caller's effective UID must be 0) and cannot 
be used if you request the 
.Dv ATTR_CMN_NAME 
or 
.Dv ATTR_CMN_PAROBJID 
attributes.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It SRCHFS_SKIPINVISIBLE
If this bit is set, 
.Fn searchfs 
will not match any invisible file system objects (that is, objects whose 
.Dv ATTR_CMN_FNDRINFO 
attribute has bit 6 set in the ninth byte) or any objects within 
invisible directories.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It SRCHFS_SKIPPACKAGES
If this bit is set, 
.Fn searchfs 
will not match any file system objects that are inside a package. 
A package is defined as a directory whose extension matches one 
of the extensions that are configured into the kernel by Launch Services.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It SRCHFS_SKIPINAPPROPRIATE
If this bit is set, 
.Fn searchfs 
will not match any file system objects that are within an inappropriate directory. 
The current list of inappropriate directories contains one item: /System.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.It SRCHFS_NEGATEPARAMS
If this bit is set, 
.Fn searchfs 
will return all the file system objects that do not match the search criteria.
.Pp
Introduced with Darwin 7.0 (Mac OS X version 10.3).
.
.El
.Pp
.
.\" state parameter
.
The 
.Fa state 
parameter is a pointer to an opaque data structure that 
.Fn searchfs 
uses to maintain the state of a search between successive calls. 
In your first call to 
.Fn searchfs ,
you specify the 
.Dv SRCHFS_START 
flag in the 
.Fa options 
parameter. 
This tells 
.Fn searchfs 
that the search state is invalid and that it should start a new search. 
When this call completes, it may have only returned partial results;
in that case, it will have updated the structure pointed to by 
.Fa state .
If you call 
.Fn searchfs 
again, this time without specifying the 
.Dv SRCHFS_START 
flag in the 
.Fa options 
parameter, it will resume the search where it left off, using the search state 
that it previously stored in the state structure.
You do not need to explicitly dispose of this state.
.Pp
.
The 
.Fn searchfs 
function returns significant errors in the followings cases.
.
.Bl -bullet
.
.It
If it has found as many objects as you requested in the 
.Fa maxmatches 
field of the 
.Fa searchBlock 
parameter, it will return 
.Dv EAGAIN . 
.
.It
If there is not enough space in the returned attributes buffer for the first match, 
it will return 
.Dv ENOBUFS .
You should allocate a larger returned attributes buffer and try again.
.Fa numMatches 
will be zero in this case.
.
.It
If the timeout expires it will return 
.Dv EAGAIN .
.
.It
If you attempt to resume a search (that is, 
.Dv SRCHFS_START 
is not specified in the 
.Fa options 
parameter) and the catalog has changed since the last search, 
the function will return 
.Dv EBUSY . 
You must start your search again from the beginning.
.
.El
.Pp
.
If 
.Fn searchfs
returns 
.Dv EAGAIN ,
the value in 
.Fa numMatches 
may be greater than zero. 
This is known as a partial result. 
You should be sure to process these matches before calling 
.Fn searchfs 
again.
.
.Sh SEARCH CRITERIA
.
You specify the search criteria using a combination of the 
.Fa searchattrs , 
.Fa searchparams1 ,
.Fa sizeofsearchparams1, 
.Fa searchparams2 ,
and
.Fa sizeofsearchparams2 
fields of the 
.Fa searchBlock 
parameter, and various flags in the 
.Fa options 
parameter. 
The 
.Fa searchattrs 
field determines the attributes considered when comparing a file system object to 
the search criteria.
You can specify that an attribute should be considered by setting the corresponding 
bit in the appropriate 
.Vt attrgroup_t 
field of the 
.Vt attrlist 
structure. 
See the discussion of 
.Xr getattrlist 2 
for a detailed description of this structure. 
.Pp
.
The 
.Fa searchparams1 ,
.Fa sizeofsearchparams1 , 
.Fa searchparams2 ,
and
.Fa sizeofsearchparams2 
fields specify the attribute values that must be matched. 
The format of each of these buffers is determined by the attributes that you're searching for. 
The values are packed in exactly the same way as they would be returned from 
.Xr getattrlist 2 ,
including the leading
.Vt u_int32_t
length value.  Note that the size of these buffers must be bounded by SEARCHFS_MAX_SEARCHPARMS bytes, 
which is defined in <sys/attr.h>.  
.Pp
.
The attribute values in the first and second search buffers form a lower and upper bound for 
the search, respectively.
These have different meanings depending on the type of attribute.
.
.Bl -bullet
.
.It
For string attributes (specifically 
.Dv ATTR_CMN_NAME ,
the object name), the value in the first search 
buffer is significant and the value in the second search buffer is ignored.
The string comparison is either an exact match or a substring match depending on 
the 
.Dv SRCHFS_MATCHPARTIALNAMES 
flag in the 
.Fa options 
parameter.
.
.It
For structured attributes (specifically 
.Dv ATTR_CMN_FNDRINFO ,
the Finder information), the value from the 
file system object is masked (logical AND) with the value in the second search buffer and then 
compared, byte for byte, against the value in the first search buffer.
If it is equal, the object is a match.
.
.It
For scalar attributes (all other attributes, for example, 
.Dv ATTR_CMN_MODTIME ,
the modification date), the values in the first and second search 
buffers are literally a lower and upper bound. 
An object matches the criteria if its value is greater than or equal to the value in 
the first buffer and less than or equal to the value in the second. 
.
.El
.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
This means that the entire volume has been searched and all matches returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Pp
.
See the discussion of the 
.Dv EAGAIN ,
.Dv ENOBUFS ,
and
.Dv EBUSY 
error codes above.
.
.Sh COMPATIBILITY
Not all volumes support 
.Fn searchfs .
You can test whether a volume supports 
.Fn searchfs 
by using 
.Xr getattrlist 2 
to get the volume capabilities attribute 
.Dv ATTR_VOL_CAPABILITIES ,
and then testing the 
.Dv VOL_CAP_INT_SEARCHFS 
flag.
.Pp
.
The 
.Fn searchfs 
function has been undocumented for more than two years. 
In that time a number of volume format implementations have been created without 
a proper specification for the behaviour of this routine. 
You may encounter volume format implementations with slightly different 
behaviour than what is described here. 
Your program is expected to be tolerant of this variant behaviour.
.Pp
.
If you're implementing a volume format that supports 
.Fn searchfs ,
you should be careful to support the behaviour specified by this document.
.Pp
.
A bug in systems prior to Darwin 7.0 (Mac OS X version 10.3) makes searching for the 
.Dv ATTR_CMN_BKUPTIME 
attribute tricky. 
The bug causes the attribute to consume two items in the search attribute buffers, the 
first in the proper place and the second between 
.Dv ATTR_CMN_FNDRINFO
and 
.Dv ATTR_CMN_OWNERID .
.
.Sh ERRORS
.Fn searchfs
will fail if:
.Bl -tag -width Er
.
.It Bq Er ENOTSUP
The volume does not support
.Fn searchfs .
.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.
.It Bq Er ENAMETOOLONG
A component of a path name exceeded 
.Dv NAME_MAX
characters, or an entire path name exceeded 
.Dv PATH_MAX
characters.
.
.It Bq Er ENOENT
The file system object does not exist.
.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.
.It Bq Er EFAULT
One of the pointer parameters points to an invalid address.
.
.It Bq Er EINVAL
The 
.Fa options 
parameter contains an invalid flag or sizeofsearchparams1/2 is greater than
SEARCHFS_MAX_SEARCHPARMS (see attr.h).  Additionally, filesystems that do
not support SRCHFS_SKIPLINKS may return EINVAL if this search option
is requested. EINVAL may also be returned if you request attributes for either
searching or to be returned for matched entries if the filesystem does not support
vending that particular attribute.
.
.It Bq Er EAGAIN
The search terminated with partial results, either because 
.Fa numMatches 
has hit the limit specified by 
.Fa maxmatches 
or because the timeout expired.
Process the matches returned so far and then call 
.Fn searchfs 
again to look for more.
.Pp
.
.It Bq Er ENOBUFS
The returned attributes buffer is too small for the first match.
You should allocate a larger returned attributes buffer and try again.
.Fa numMatches 
will be zero in this case.
.
.It Bq Er EBUSY
The search could not be resumed because the volume has changed.
.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
.
.Sh CAVEATS

The list of attributes valid for searching and returning to the caller may
be substantially smaller than that of the
.Xr getattrlist 2
system call. See the following lists for the currently available search criteria.
In general, a filesystem that supports 
.Fn searchfs
will typically supply per-item attributes for matched objects that are also 
supported by the
.Xr getdirentries 2
system call.  This varies from filesystem to filesystem.


.Sh SEARCH ATTRIBUTES

The list of attributes that are valid as search criteria currently includes the 
following list of attributes for a particular filesystem object.

.Pp
.
.Bl -item -compact
.It 
ATTR_CMN_NAME
.It 
ATTR_CMN_OBJID
.It
ATTR_CMN_PAROBJID
.It
ATTR_CMN_CRTIME
.It
ATTR_CMN_MODTIME
.It
ATTR_CMN_CHGTIME
.It
ATTR_CMN_ACCTIME
.It
ATTR_CMN_BKUPTIME
.It
ATTR_CMN_FNDRINFO
.It
ATTR_CMN_BKUPTIME
.It
ATTR_CMN_OWNERID
.It
ATTR_CMN_GRPID
.It
ATTR_CMN_ACCESSMASK
.It
ATTR_CMN_FILEID
.It
ATTR_CMN_PARENTID
.Pp
.
.It
ATTR_DIR_ENTRYCOUNT
.Pp
.
.It
ATTR_FILE_DATALENGTH
.It
ATTR_FILE_DATAALLOCSIZE
.It
ATTR_FILE_RSRCLENGTH
.It
ATTR_FILE_RSRCALLOCSIZE
.El
.

.Sh RETURN ATTRIBUTES

As mentioned above, the list of attributes that are available to be returned to the caller
vary by filesystem, but should include the following attributes, in the following order.
The buffer should be assumed to be packed similar to the output buffer of the 
.Xr getattrlist 2
system call. Note that again, this list may be substantially smaller than what is available via
.Xr getattrlist 2

.Pp
.
.Bl -item -compact
.It 
ATTR_CMN_NAME
.It
ATTR_CMN_DEVID
.It
ATTR_CMN_FSID
.It
ATTR_CMN_OBJTYPE
.It
ATTR_CMN_OBJTAG
.It
ATTR_CMN_OBJID
.It
ATTR_CMN_OBJPERMANENTID
.It
ATTR_CMN_PAROBJID
.It
ATTR_CMN_SCRIPT
.It
ATTR_CMN_CRTIME
.It
ATTR_CMN_MODTIME
.It
ATTR_CMN_CHGTIME
.It
ATTR_CMN_ACCTIME
.It
ATTR_CMN_BKUPTIME
.It
ATTR_CMN_FNDRINFO
.It
ATTR_CMN_OWNERID
.It
ATTR_CMN_GRPID
.It
ATTR_CMN_ACCESSMASK
.It
ATTR_CMN_FLAGS
.It
ATTR_CMN_USERACCESS
.It
ATTR_CMN_FILEID
.It
ATTR_CMN_PARENTID
.Pp
.
.It 
ATTR_DIR_LINKCOUNT
.It
ATTR_DIR_ENTRYCOUNT
.It
ATTR_DIR_MOUNTSTATUS
.Pp
.
.It
ATTR_FILE_LINKCOUNT
.It
ATTR_FILE_TOTALSIZE
.It
ATTR_FILE_ALLOCSIZE
.It
ATTR_FILE_IOBLOCKSIZE
.It
ATTR_FILE_CLUMPSIZE
.It
ATTR_FILE_DEVTYPE
.It
ATTR_FILE_DATALENGTH
.It
ATTR_FILE_DATAALLOCSIZE
.It
ATTR_FILE_RSRCLENGTH
.It
ATTR_FILE_RSRCALLOCSIZE
.El
.


.Sh EXAMPLES
.
The following code searches a volume for files of the specified type and creator.
.
.Bd -literal
#include <assert.h>
#include <stdio.h>
#include <stddef.h>
#include <string.h>
#include <sys/attr.h>
#include <sys/errno.h>
#include <unistd.h>
.Pp
.
typedef struct attrlist         attrlist_t;
typedef struct fssearchblock    fssearchblock_t;
typedef struct searchstate      searchstate_t;
.Pp
.
struct SearchAttrBuf {
    u_int32_t       length;
    char            finderInfo[32];
};
typedef struct SearchAttrBuf SearchAttrBuf;
.Pp
.
struct ResultAttrBuf {
    u_int32_t       length;
    attrreference_t name;
    fsobj_id_t      parObjID;
};
typedef struct ResultAttrBuf ResultAttrBuf;
.Pp
.
enum {
    kMatchesPerCall = 16
};
.Pp
.
static int SearchFSDemo(
    const char *volPath, 
    const char *type, 
    const char *creator
)
{
    int             err;
    fssearchblock_t searchBlock;
    SearchAttrBuf   lower;
    SearchAttrBuf   upper;
    static const unsigned char kAllOnes[4] = { 0xFF, 0xFF, 0xFF, 0xFF };
    unsigned int    matchCount;
    unsigned int    matchIndex;
    unsigned int    options;
    searchstate_t   state;
    ResultAttrBuf * thisEntry;
    attrlist_t      returnAttrList;
    char            resultAttrBuf[  kMatchesPerCall 
                                  * (sizeof(ResultAttrBuf) + 64)];
.Pp
.
    // resultAttrBuf is big enough for kMatchesPerCall entries, 
    // assuming that the average name length is less than 64.
.Pp
.
    assert(strlen(type)    == 4);
    assert(strlen(creator) == 4);
.Pp
    
    memset(&searchBlock, 0, sizeof(searchBlock));
    searchBlock.searchattrs.bitmapcount = ATTR_BIT_MAP_COUNT;
    searchBlock.searchattrs.commonattr  = ATTR_CMN_FNDRINFO;
.Pp
    
    memset(&lower, 0, sizeof(lower));
    memset(&upper, 0, sizeof(upper));
    lower.length = sizeof(lower);
    upper.length = sizeof(upper);
    memcpy(&lower.finderInfo[0], type,     4);
    memcpy(&lower.finderInfo[4], creator,  4);
    memcpy(&upper.finderInfo[0], kAllOnes, 4);
    memcpy(&upper.finderInfo[4], kAllOnes, 4);
    searchBlock.searchparams1       = &lower;
    searchBlock.sizeofsearchparams1 = sizeof(lower);
    searchBlock.searchparams2       = &upper;
    searchBlock.sizeofsearchparams2 = sizeof(lower);
.Pp
    
    searchBlock.timelimit.tv_sec  = 0;
    searchBlock.timelimit.tv_usec = 100 * 1000;
.Pp
    
    searchBlock.maxmatches = kMatchesPerCall;
.Pp
    
    memset(&returnAttrList, 0, sizeof(returnAttrList));
    returnAttrList.bitmapcount = ATTR_BIT_MAP_COUNT;
    returnAttrList.commonattr  = ATTR_CMN_NAME | ATTR_CMN_PAROBJID;
.Pp
.
    searchBlock.returnattrs = &returnAttrList;
    searchBlock.returnbuffer = resultAttrBuf;
    searchBlock.returnbuffersize = sizeof(resultAttrBuf);
.Pp
    
    options = SRCHFS_START | SRCHFS_MATCHFILES;
.Pp
    
    do {
        err = searchfs(
            volPath, 
            &searchBlock, 
            &matchCount, 
            0x08000103, 
            options, 
            &state
        );
        if (err != 0) {
            err = errno;
        }
        if ( (err == 0) || (err == EAGAIN) ) {
            thisEntry = (ResultAttrBuf *) resultAttrBuf;
.Pp
            
            for (matchIndex = 0; matchIndex < matchCount; matchIndex++) {
                printf("%08x ", thisEntry->parObjID.fid_objno);
                printf(
                    "%s\en", 
                    ((char *) &thisEntry->name) 
                        + thisEntry->name.attr_dataoffset
                );
.
                // Advance to the next entry.
.
                ((char *) thisEntry) += thisEntry->length;
            }
        }
.Pp
        
        options &= ~SRCHFS_START;
    } while (err == EAGAIN);
.Pp
    
    return err;
}
.Ed
.
.Sh SEE ALSO
.
.Xr getattrlist 2
.
.Sh HISTORY
A
.Fn searchfs
function call appeared in Darwin 1.3.1 (Mac OS X version 10.0).
.
                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/select.2                                     0100644 0001750 0001750 00000016737 12567450735 022245  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: select.2,v 1.5 1995/06/27 22:32:28 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)select.2	8.2 (Berkeley) 3/25/94
.\"
.Dd March 18, 2015
.Dt SELECT 2
.Os BSD 4.2
.Sh NAME
.Nm FD_CLR ,
.Nm FD_COPY ,
.Nm FD_ISSET ,
.Nm FD_SET ,
.Nm FD_ZERO ,
.Nm select
.Nd synchronous I/O multiplexing
.Sh SYNOPSIS
.Fd #include <sys/select.h>
.\"
.Ft void
.Fo FD_CLR
.Fa fd
.Fa "fd_set *fdset"
.Fc
.Ft void
.Fo FD_COPY
.Fa "fd_set *fdset_orig"
.Fa "fd_set *fdset_copy"
.Fc
.Ft int
.Fo FD_ISSET
.Fa fd
.Fa "fd_set *fdset"
.Fc
.Ft void
.Fo FD_SET
.Fa fd
.Fa "fd_set *fdset"
.Fc
.Ft void
.Fo FD_ZERO
.Fa "fd_set *fdset"
.Fc
.Ft int
.Fo select
.Fa "int nfds"
.Fa "fd_set *restrict readfds"
.Fa "fd_set *restrict writefds"
.Fa "fd_set *restrict errorfds"
.Fa "struct timeval *restrict timeout"
.Fc
.Sh DESCRIPTION
.Fn select
examines the I/O descriptor sets whose addresses are passed in
.Fa readfds ,
.Fa writefds ,
and
.Fa errorfds
to see if some of their descriptors
are ready for reading, are ready for writing, or have an exceptional
condition pending, respectively.
The first
.Fa nfds
descriptors are checked in each set;
i.e., the descriptors from 0 through
.Fa nfds Ns No -1
in the descriptor sets are examined.  (Example: If you have set two file descriptors "4" and "17",
.Fa nfds
should  not be "2", but rather "17 + 1" or "18".)
On return,
.Fn select
replaces the given descriptor sets
with subsets consisting of those descriptors that are ready
for the requested operation.
.Fn select
returns the total number of ready descriptors in all the sets.
.Pp
The descriptor sets are stored as bit fields in arrays of integers.
The following macros are provided for manipulating such descriptor sets:
.Fn FD_ZERO &fdset
initializes a descriptor set
.Fa fdset
to the null set.
.Fn FD_SET fd &fdset
includes a particular descriptor
.Fa fd
in
.Fa fdset .
.Fn FD_CLR fd &fdset
removes
.Fa fd
from
.Fa fdset .
.Fn FD_ISSET fd &fdset
is non-zero if
.Fa fd
is a member of
.Fa fdset ,
zero otherwise.
.Fn FD_COPY &fdset_orig &fdset_copy
replaces an already allocated 
.Fa &fdset_copy
file descriptor set with a copy of
.Fa &fdset_orig .
The behavior of these macros is undefined if
a descriptor value is less than zero or greater than or equal to
.Dv FD_SETSIZE ,
which is normally at least equal
to the maximum number of descriptors supported by the system.
.Pp
If
.Fa timeout
is a non-nil pointer, it specifies a maximum interval to wait for the
selection to complete.  If 
.Fa timeout
is a nil pointer, the select blocks indefinitely.  To effect a poll, the
.Fa timeout
argument should be non-nil, pointing to a zero-valued timeval structure.
.Fa Timeout
is not changed by
.Fn select ,
and may be reused on subsequent calls, however it is good style to re-initialize
it before each invocation of
.Fn select .
.Pp
Any of
.Fa readfds ,
.Fa writefds ,
and
.Fa errorfds
may be given as nil pointers if no descriptors are of interest.
.Sh RETURN VALUES
.Fn select
returns the number of ready descriptors that are contained in
the descriptor sets,
or -1 if an error occurred.
If the time limit expires,
.Fn select
returns 0.
If
.Fn select
returns with an error,
including one due to an interrupted call,
the descriptor sets will be unmodified and the global variable
.Va errno
will be set to indicate the error.
.Sh ERRORS
An error return from
.Fn select
indicates:
.Bl -tag -width Er
.\" ===========
.It Bq Er EAGAIN
The kernel was (perhaps temporarily) unable
to allocate the requested number of file descriptors.
.\" ===========
.It Bq Er EBADF
One of the descriptor sets specified an invalid descriptor.
.\" ===========
.It Bq Er EINTR
A signal was delivered before the time limit expired and
before any of the selected events occurred.
.\" ===========
.It Bq Er EINVAL
The specified time limit is invalid.  One of its components is
negative or too large.
.\" ===========
.It Bq Er EINVAL
.Fa ndfs
is greater than FD_SETSIZE and _DARWIN_UNLIMITED_SELECT is not defined.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/select.h>
.D1 "- or -"
.Fd #include <sys/types.h>
.Fd #include <sys/time.h>
.Fd #include <unistd.h>
.Pp
.Fo FD_SET
.Fa fd
.Fa &fdset
.Fc ;
.Pp
.Fo FD_CLR
.Fa fd
.Fa &fdset
.Fc ;
.Pp
.Fo FD_ISSET
.Fa fd
.Fa &fdset
.Fc ;
.Pp
.Fo FD_COPY
.Fa &fdset_orig
.Fa &fdset_copy
.Fc ;
.Pp
.Fo FD_ZERO
.Fa &fdset
.Fc ;
.Sh COMPATIBILITY
.Fn select
now returns with
.Va errno
set to EINVAL when 
.Fa nfds  
is greater than FD_SETSIZE.
Use a smaller value for
.Fa nfds  
or compile with -D_DARWIN_UNLIMITED_SELECT.
.Sh SEE ALSO
.Xr accept 2 ,
.Xr connect 2 ,
.Xr connectx 2 ,
.Xr getdtablesize 2 ,
.Xr gettimeofday 2 ,
.Xr read 2 ,
.Xr recv 2 ,
.Xr send 2 ,
.Xr write 2 ,
.Xr compat 5
.Sh BUGS
Although the provision of
.Xr getdtablesize 2
was intended to allow user programs to be written independent
of the kernel limit on the number of open files, the dimension
of a sufficiently large bit field for select remains a problem.
The default size
.Dv FD_SETSIZE
(currently 1024) is somewhat smaller than
the current kernel limit to the number of open files.
However, in order to accommodate programs which might potentially
use a larger number of open files with select, it is possible
to increase this size within a program by providing
a larger definition of
.Dv FD_SETSIZE
before the inclusion of
.Aq Pa sys/types.h .
.Pp
.Fn select
should probably have been designed to return the time remaining from the
original timeout, if any, by modifying the time value in place.
However, it is unlikely this semantic will ever be implemented, as the
change would cause source code compatibility problems.
In general it is unwise to assume that the timeout value will be
unmodified by the
.Fn select
call, and the caller should reinitialize it on each invocation.
.Sh HISTORY
The
.Fn select
function call appeared in
.Bx 4.2 .
                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sem_close.2                                  0100644 0001750 0001750 00000003247 12567450735 022727  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$Darwin$
.\"
.\" Copyright (c) 2000-2002 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd June 8, 2000
.Dt SEM_CLOSE 2
.Os Darwin
.Sh NAME
.Nm sem_close
.Nd close a named semaphore
.Sh SYNOPSIS
.Fd #include <semaphore.h>
.Ft int
.Fn sem_close "sem_t *sem"
.Sh DESCRIPTION
The system resources associated with the named semaphore referenced by
.Fa sem
are deallocated and the descriptor is invalidated.
.Pp
If successful,
.Fn sem_close
will return 0.  Otherwise, -1 is returned and
.Va errno
is set.
.Sh ERRORS
.Fn sem_close
succeeds unless:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa sem
is not a valid semaphore descriptor.
.El
.Sh SEE ALSO
.Xr sem_open 2 ,
.Xr sem_unlink 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2
.Sh HISTORY
.Fn sem_close
is specified in the POSIX Realtime Extension (1003.1b-1993/1003.1i-1995).
                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sem_open.2                                   0100644 0001750 0001750 00000010333 12567450735 022555  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$Darwin$
.\"
.\" Copyright (c) 2000-2002 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd June 8, 2000
.Dt SEM_OPEN 2
.Os Darwin
.Sh NAME
.Nm sem_open
.Nd initialize and open a named semaphore
.Sh SYNOPSIS
.Fd #include <semaphore.h>
.Ft sem_t *
.Fo sem_open
.Fa "const char *name"
.Fa "int oflag"
.Fa "..."
.Fc
.Pp
The parameters "mode_t mode" and "unsigned int value"
are optional.
.Sh DESCRIPTION
The named semaphore named
.Fa name
is initialized and opened as specified by the argument
.Fa oflag
and a semaphore descriptor is returned to the calling process.
.Pp
The value of
.Fa oflag
is formed by
.Em or Ns 'ing
the following values:
.Pp
.Bd -literal -offset indent -compact
O_CREAT		create the semaphore if it does not exist
O_EXCL		error if create and semaphore exists
.Ed
.Pp
If
.Dv O_CREAT
is specified,
.Fn sem_open
requires an additional two arguments.
.Fa mode
specifies the permissions for the semaphore as described in
.Xr chmod 2
and modified by the process' umask value (see
.Xr umask 2 ) .
The semaphore is created with an initial
.Fa value ,
which must be less than or equal to
.Dv SEM_VALUE_MAX .
.Pp
If
.Dv O_EXCL
is specified and the semaphore exists,
.Fn sem_open
fails.  The check for the existence of the semaphore and the creation
of the semaphore are atomic with respect to all processes calling
.Fn sem_open
with
.Dv O_CREAT
and
.Dv O_EXCL
set.
.Pp
When a new semaphore is created, it is given the user ID and group ID
which correspond to the effective user and group IDs of the calling
process. There is no visible entry in the file system for the created
object in this implementation.
.Pp
The returned semaphore descriptor is available to the calling process
until it is closed with
.Fn sem_close ,
or until the caller exits or execs.
.Pp
If a process makes repeated calls to
.Fn sem_open ,
with the same
.Fa name
argument, the same descriptor is returned for each successful call,
unless
.Fn sem_unlink
has been called on the semaphore in the interim.
.Pp
If
.Fn sem_open
fails for any reason, it will return a value of
.Dv SEM_FAILED
and sets
.Va errno .
On success, it returns a semaphore descriptor.
.Sh ERRORS
The named semaphore is opened unless:
.Bl -tag -width Er
.It Bq Er EACCES
The required permissions (for reading and/or writing)
are denied for the given flags; or
.Dv O_CREAT
is specified, the object does not exist, and permission to
create the semaphore is denied.
.It Bq Er EEXIST
.Dv O_CREAT
and
.Dv O_EXCL
were specified and the semaphore exists.
.It Bq Er EINTR
The
.Fn sem_open
operation was interrupted by a signal.
.It Bq Er EINVAL
The
.Fn shm_open
operation is not supported; or
.Dv O_CREAT
is specified and
.Fa value
exceeds
.Dv SEM_VALUE_MAX .
.It Bq Er EMFILE
The process has already reached its limit for semaphores or file
descriptors in use.
.It Bq Er ENAMETOOLONG
.Fa name
exceeded
.Dv PSEMNAMLEN
characters.
.It Bq Er ENFILE
Too many semaphores or file descriptors are open on the system.
.It Bq Er ENOENT
.Dv O_CREAT
is not set and the named semaphore does not exist.
.It Bq Er ENOSPC
.Dv O_CREAT
is specified, the file does not exist, and there is insufficient
space available to create the semaphore.
.El
.Sh SEE ALSO
.Xr sem_close 2 ,
.Xr sem_post 2 ,
.Xr sem_trywait 2 ,
.Xr sem_unlink 2 ,
.Xr sem_wait 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2 ,
.Xr umask 2
.Sh HISTORY
.Fn sem_open
is specified in the POSIX Realtime Extension (1003.1b-1993/1003.1i-1995).
                                                                                                                                                                                                                                                                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sem_post.2                                   0100644 0001750 0001750 00000003457 12567450735 022612  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$Darwin$
.\"
.\" Copyright (c) 2000-2002 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd June 8, 2000
.Dt SEM_POST 2
.Os Darwin
.Sh NAME
.Nm sem_post
.Nd unlock a semaphore
.Sh SYNOPSIS
.Fd #include <semaphore.h>
.Ft int
.Fn sem_post "sem_t *sem"
.Sh DESCRIPTION
The semaphore referenced by
.Fa sem
is unlocked, the value of the semaphore is incremented, and all
threads which are waiting on the semaphore are awakened.
.Pp
.Fn sem_post
is reentrant with respect to signals and may be called from within a
signal hanlder.
.Pp
If successful,
.Fn sem_post
will return 0.  Otherwise, -1 is returned and
.Va errno
is set.
.Sh ERRORS
.Fn sem_post
succeeds unless:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa sem
is not a valid semaphore descriptor.
.El
.Sh SEE ALSO
.Xr sem_open 2 ,
.Xr sem_trywait 2 ,
.Xr sem_wait 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2
.Sh HISTORY
.Fn sem_post
is specified in the POSIX Realtime Extension (1003.1b-1993/1003.1i-1995).
                                                                                                                                                                                                                 osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sem_trywait.2                                0100644 0001750 0001750 00000005224 12567450735 023322  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$Darwin$
.\"
.\" Copyright (c) 2000-2002 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd June 8, 2000
.Dt SEM_WAIT 2
.Os Darwin
.Sh NAME
.Nm sem_trywait, sem_wait
.Nd lock a semaphore
.Sh SYNOPSIS
.Fd #include <semaphore.h>
.Ft int
.Fn sem_trywait "sem_t *sem"
.Ft int
.Fn sem_wait    "sem_t *sem"
.Sh DESCRIPTION
The semaphore referenced by
.Fa sem
is locked.  When calling
.Fn sem_wait ,
if the semaphore's value is zero, the calling thread will block until
the lock is acquired or until the call is interrupted by a
signal. Alternatively, the
.Fn sem_trywait
function will fail if the semaphore is already locked, rather than
blocking on the semaphore.
.Pp
If successful (the lock was acquired),
.Fn sem_wait
and
.Fn sem_trywait
will return 0.  Otherwise, -1 is returned and
.Va errno
is set, and the state of the semaphore is unchanged.
.Sh ERRORS
.Fn sem_wait
and
.Fn sem_trywait
succeed unless:
.Bl -tag -width Er
.It Bq Er EAGAIN
The semaphore is already locked.
.It Bq Er EDEADLK
A deadlock was detected.
.It Bq Er EINTR
The call was interrupted by a signal.
.It Bq Er EINVAL
.Fa sem
is not a valid semaphore descriptor.
.El
.Sh NOTES
Applications may encounter a priority inversion while using
semaphores.  When a thread is waiting on a semaphore which is about to
be posted by a lower-priority thread and the lower-priority thread is
preempted by another thread (of medium priority), a priority inversion
has occured, and the higher-priority thread will be blocked for an
unlimited time period.  Programmers using the realtime functionality
of the system should take care to avoid priority inversions.
.Sh SEE ALSO
.Xr sem_open 2 ,
.Xr sem_post 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2
.Sh HISTORY
.Fn sem_wait
and
.Fn sem_trywait
are specified in the POSIX Realtime Extension (1003.1b-1993/1003.1i-1995).
                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sem_unlink.2                                 0100644 0001750 0001750 00000004075 12567450735 023122  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$Darwin$
.\"
.\" Copyright (c) 2000-2002 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd June 8, 2000
.Dt SEM_UNLINK 2
.Os Darwin
.Sh NAME
.Nm sem_unlink
.Nd remove a named semaphore
.Sh SYNOPSIS
.Fd #include <semaphore.h>
.Ft int
.Fn sem_unlink "const char *name"
.Sh DESCRIPTION
The named semaphore named
.Fa name
is removed.  If the semaphore is in use by other processes, then
.Fa name
is immediately disassociated with the semaphore, but the semaphore
itself will not be removed until all references to it have been
closed.  Subsequent calls to
.Fn sem_open
using
.Fa name
will refer to or create a new semaphore named
.Fa name .
.Pp
If successful,
.Fn sem_unlink
will return 0.  Otherwise, -1 is returned and
.Va errno
is set, and the state of the semaphore is unchanged.
.Sh ERRORS
.Fn sem_unlink
succeeds unless:
.Bl -tag -width Er
.It Bq Er EACCES
Permission is denied to be remove the semaphore.
.It Bq Er ENAMETOOLONG
.Fa name
exceeded
.Dv PSEMNAMLEN
characters.
.It Bq Er ENOENT
The named semaphore does not exist.
.El
.Sh SEE ALSO
.Xr sem_close 2 ,
.Xr sem_open 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2
.Sh HISTORY
.Fn sem_unlink
is specified in the POSIX Realtime Extension (1003.1b-1993/1003.1i-1995).
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sem_wait.2                                   0100644 0001750 0001750 00000005224 12567450735 022563  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$Darwin$
.\"
.\" Copyright (c) 2000-2002 Apple Computer, Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd June 8, 2000
.Dt SEM_WAIT 2
.Os Darwin
.Sh NAME
.Nm sem_trywait, sem_wait
.Nd lock a semaphore
.Sh SYNOPSIS
.Fd #include <semaphore.h>
.Ft int
.Fn sem_trywait "sem_t *sem"
.Ft int
.Fn sem_wait    "sem_t *sem"
.Sh DESCRIPTION
The semaphore referenced by
.Fa sem
is locked.  When calling
.Fn sem_wait ,
if the semaphore's value is zero, the calling thread will block until
the lock is acquired or until the call is interrupted by a
signal. Alternatively, the
.Fn sem_trywait
function will fail if the semaphore is already locked, rather than
blocking on the semaphore.
.Pp
If successful (the lock was acquired),
.Fn sem_wait
and
.Fn sem_trywait
will return 0.  Otherwise, -1 is returned and
.Va errno
is set, and the state of the semaphore is unchanged.
.Sh ERRORS
.Fn sem_wait
and
.Fn sem_trywait
succeed unless:
.Bl -tag -width Er
.It Bq Er EAGAIN
The semaphore is already locked.
.It Bq Er EDEADLK
A deadlock was detected.
.It Bq Er EINTR
The call was interrupted by a signal.
.It Bq Er EINVAL
.Fa sem
is not a valid semaphore descriptor.
.El
.Sh NOTES
Applications may encounter a priority inversion while using
semaphores.  When a thread is waiting on a semaphore which is about to
be posted by a lower-priority thread and the lower-priority thread is
preempted by another thread (of medium priority), a priority inversion
has occured, and the higher-priority thread will be blocked for an
unlimited time period.  Programmers using the realtime functionality
of the system should take care to avoid priority inversions.
.Sh SEE ALSO
.Xr sem_open 2 ,
.Xr sem_post 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2
.Sh HISTORY
.Fn sem_wait
and
.Fn sem_trywait
are specified in the POSIX Realtime Extension (1003.1b-1993/1003.1i-1995).
                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/semctl.2                                     0100644 0001750 0001750 00000013514 12567450735 022243  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 1995 David Hovemeyer <daveho@infocom.com>
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/semctl.2,v 1.18 2002/12/19 09:40:25 ru Exp $
.\"
.Dd September 12, 1995
.Dt SEMCTL 2
.Os
.Sh NAME
.Nm semctl
.Nd control operations on a semaphore set
.Sh SYNOPSIS
.In sys/sem.h
.Ft int
.Fo semctl
.Fa "int semid"
.Fa "int semnum"
.Fa "int cmd"
.Fa ...
.Fc
.Sh DESCRIPTION
The
.Fn semctl
system call
performs the operation indicated by
.Fa cmd
on the semaphore set indicated by
.Fa semid .
A fourth argument, a
.Fa "union semun arg" ,
is required for certain values of
.Fa cmd .
For the commands that use the
.Fa arg
argument,
.Fa "union semun"
is defined as follows:
.Bd -literal
.\"
.\" From <sys/sem.h>:
.\"
union semun {
        int     val;            /* value for SETVAL */
        struct  semid_ds *buf;  /* buffer for IPC_STAT & IPC_SET */
        u_short *array;         /* array for GETALL & SETALL */
};
.Ed
.Pp
Commands are performed as follows:
.\"
.\" This section based on Stevens, _Advanced Programming in the UNIX
.\" Environment_.
.\"
.Bl -tag -width IPC_RMIDXXX
.It Dv IPC_STAT
Fetch the semaphore set's
.Fa "struct semid_ds" ,
storing it in the memory pointed to by
.Fa arg.buf .
.It Dv IPC_SET
Changes the
.Fa sem_perm.uid ,
.Fa sem_perm.gid ,
and
.Fa sem_perm.mode
members of the semaphore set's
.Fa "struct semid_ds"
to match those of the struct pointed to by
.Fa arg.buf .
The calling process's effective uid must
match either
.Fa sem_perm.uid
or
.Fa sem_perm.cuid ,
or it must have superuser privileges.
.It IPC_RMID
Immediately removes the semaphore set from the system.  The calling
process's effective uid must equal the semaphore set's
.Fa sem_perm.uid
or
.Fa sem_perm.cuid ,
or the process must have superuser privileges.
.It Dv GETVAL
Return the value of semaphore number
.Fa semnum .
.It Dv SETVAL
Set the value of semaphore number
.Fa semnum
to
.Fa arg.val .
Outstanding adjust on exit values for this semaphore in any process
are cleared.
.It Dv GETPID
Return the pid of the last process to perform an operation on
semaphore number
.Fa semnum .
.It Dv GETNCNT
Return the number of processes waiting for semaphore number
.Fa semnum Ns 's
value to become greater than its current value.
.It Dv GETZCNT
Return the number of processes waiting for semaphore number
.Fa semnum Ns 's
value to become 0.
.It Dv GETALL
Fetch the value of all of the semaphores in the set into the
array pointed to by
.Fa arg.array .
.It Dv SETALL
Set the values of all of the semaphores in the set to the values
in the array pointed to by
.Fa arg.array .
Outstanding adjust on exit values for all semaphores in this set,
in any process are cleared.
.El
.Pp
The
.Vt "struct semid_ds"
is defined as follows:
.Bd -literal
.\"
.\" Taken straight from <sys/sem.h>.
.\"
struct semid_ds {
        struct  ipc_perm sem_perm;      /* operation permission struct */
        struct  sem *sem_base;  /* pointer to first semaphore in set */
        u_short sem_nsems;      /* number of sems in set */
        time_t  sem_otime;      /* last operation time */
        long    sem_pad1;       /* SVABI/386 says I need this here */
        time_t  sem_ctime;      /* last change time */
                                /* Times measured in secs since */
                                /* 00:00:00 GMT, Jan. 1, 1970 */
        long    sem_pad2;       /* SVABI/386 says I need this here */
        long    sem_pad3[4];    /* SVABI/386 says I need this here */
};
.Ed
.Sh RETURN VALUES
On success, when
.Fa cmd
is one of
.Dv GETVAL , GETPID , GETNCNT
or
.Dv GETZCNT ,
.Fn semctl
returns the corresponding value; otherwise, 0 is returned.
On failure, -1 is returned, and
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn semctl
system call
will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
Permission denied due to mismatch between operation and mode of
semaphore set.
.\" ===========
.It Bq Er EINVAL
No semaphore set corresponds to
.Fa semid .
.\" ===========
.It Bq Er EINVAL
The
.Fa semnum
argument
is not in the range of valid semaphores for given semaphore set.
.\" ===========
.It Bq Er EPERM
The calling process's effective uid does not match the uid of
the semaphore set's owner or creator.
.\" ===========
.It Bq Er ERANGE
.Dv SETVAL
or
.Dv SETALL
attempted to set a semaphore outside the allowable range
.Bq 0 .. Dv SEMVMX .
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/ipc.h>
.Fd #include <sys/sem.h>
.Pp
The include files
.In sys/types.h
and
.In sys/ipc.h
are necessary.
.Sh SEE ALSO
.Xr semget 2 ,
.Xr semop 2 ,
.Xr compat 5
.Sh BUGS
.Dv SETALL
may update some semaphore elements before returning an error.
                                                                                                                                                                                    osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/semget.2                                     0100644 0001750 0001750 00000010616 12567450735 022240  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 1995 David Hovemeyer <daveho@infocom.com>
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/semget.2,v 1.14 2002/12/19 09:40:25 ru Exp $
.\"
.Dd September 12, 1995
.Dt SEMGET 2
.Os
.Sh NAME
.Nm semget
.Nd obtain a semaphore id
.Sh SYNOPSIS
.In sys/sem.h
.Ft int
.Fo semget
.Fa "key_t key"
.Fa "int nsems"
.Fa "int semflg"
.Fc
.Sh DESCRIPTION
Based on the values of
.Fa key
and
.Fa semflg ,
.Fn semget
returns the identifier of a newly created or previously existing
set of semaphores.
.\"
.\" This is copied verbatim from the shmget manpage.  Perhaps
.\" it should go in a common manpage, such as .Xr ipc 2
.\"
The key
is analogous to a filename: it provides a handle that names an
IPC object.  There are three ways to specify a key:
.Bl -bullet
.It
IPC_PRIVATE may be specified, in which case a new IPC object
will be created.
.It
An integer constant may be specified.  If no IPC object corresponding
to
.Fa key
is specified and the IPC_CREAT bit is set in
.Fa semflg ,
a new one will be created.
.It
The
.Xr ftok 3
function
may be used to generate a key from a pathname.
.El
.\"
.\" Likewise for this section, except SHM_* becomes SEM_*.
.\"
.Pp
The mode of a newly created IPC object is determined by
.Em OR Ns 'ing
the following constants into the
.Fa semflg
argument:
.Bl -tag -width XSEM_WXX6XXX
.It Dv SEM_R
Read access for user.
.It Dv SEM_A
Alter access for user.
.It Dv ( SEM_R>>3 )
Read access for group.
.It Dv ( SEM_A>>3 )
Alter access for group.
.It Dv ( SEM_R>>6 )
Read access for other.
.It Dv ( SEM_A>>6 )
Alter access for other.
.El
.Pp
If a new set of semaphores is being created,
.Fa nsems
is used to indicate the number of semaphores the set should contain.
Otherwise,
.Fa nsems
may be specified as 0.
.Sh RETURN VALUES
The
.Fn semget
system call
returns the id of a semaphore set if successful; otherwise, -1
is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn semget
system call
will fail if:
.Bl -tag -width Er
.\" ===========
.\" ipcperm could fail (we're opening to read and write, as it were)
.It Bq Er EACCES
Access permission failure.
.\" ===========
.\"
.\" sysv_sem.c is quite explicit about these,
.\" so I'm pretty sure this is accurate
.\"
.It Bq Er EEXIST
IPC_CREAT and IPC_EXCL were specified,
and a semaphore set corresponding to
.Fa key
already exists.
.\" ===========
.It Bq Er EINVAL
The number of semaphores requested
is either less than 1 or greater than the system imposed maximum per set.
.\" ===========
.It Bq Er EINVAL
A semaphore identifier exists for the argument key,
but the number of semaphores in the set associated with it
is less than
.Fa nsems ,
and
.Fa nsems
is non-zero.
.\" ===========
.It Bq Er ENOENT
No semaphore set was found corresponding to
.Fa key ,
and IPC_CREAT was not specified.
.\" ===========
.It Bq Er ENOSPC
Insufficiently many semaphores are available.
.\" ===========
.It Bq Er ENOSPC
The kernel could not allocate a
.Fa "struct semid_ds" .
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/ipc.h>
.Fd #include <sys/sem.h>
.Pp
The include files
.In sys/types.h
and
.In sys/ipc.h
are necessary.
.Sh SEE ALSO
.Xr semctl 2 ,
.Xr semop 2 ,
.Xr ftok 3 ,
.Xr compat 5
                                                                                                                  osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/semop.2                                      0100644 0001750 0001750 00000016525 12567450735 022104  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 1995 David Hovemeyer <daveho@infocom.com>
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/sys/semop.2,v 1.18 2003/01/25 21:27:37 alfred Exp $
.\"
.Dd September 22, 1995
.Dt SEMOP 2
.Os
.Sh NAME
.Nm semop
.Nd atomic array of operations on a semaphore set
.Sh SYNOPSIS
.In sys/sem.h
.Ft int
.Fo semop
.Fa "int semid"
.Fa "struct sembuf *sops"
.Fa "size_t nsops"
.Fc
.Sh DESCRIPTION
The
.Fn semop
system call
atomically performs the array of operations indicated by
.Fa sops
on the semaphore set indicated by
.Fa semid .
The length of
.Fa sops
is indicated by
.Fa nsops .
Each operation is encoded in a
.Vt "struct sembuf" ,
which is defined as follows:
.Bd -literal
.\"
.\" From <sys/sem.h>
.\"
struct sembuf {
        u_short sem_num;        /* semaphore # */
        short   sem_op;         /* semaphore operation */
        short   sem_flg;        /* operation flags */
};
.Ed
.Pp
For each element in
.Fa sops ,
.Va sem_op
and
.Va sem_flg
determine an operation to be performed on semaphore number
.Va sem_num
in the set.
The values
.Dv SEM_UNDO
and
.Dv IPC_NOWAIT
may be
.Em OR Ns 'ed
into the
.Va sem_flg
member in order to modify the behavior of the given operation.
.Pp
The operation performed depends as follows on the value of
.Va sem_op :
.\"
.\" This section is based on the description of semop() in
.\" Stevens, _Advanced Programming in the UNIX Environment_,
.\" and the semop(2) description in The Open Group Unix2 specification.
.\"
.Bl -bullet
.It
When
.Va sem_op
is positive and the process has alter permission,
the semaphore's value is incremented by
.Va sem_op Ns 's
value.
If
.Dv SEM_UNDO
is specified, the semaphore's adjust on exit value is decremented by
.Va sem_op Ns 's
value.
A positive value for
.Va sem_op
generally corresponds to a process releasing a resource
associated with the semaphore.
.It
The behavior when
.Va sem_op
is negative and the process has alter permission,
depends on the current value of the semaphore:
.Bl -bullet
.It
If the current value of the semaphore is greater than or equal to
the absolute value of
.Va sem_op ,
then the value is decremented by the absolute value of
.Va sem_op .
If
.Dv SEM_UNDO
is specified, the semaphore's adjust on exit
value is incremented by the absolute value of
.Va sem_op .
.It
If the current value of the semaphore is less than the absolute value of
.Va sem_op ,
one of the following happens:
.\" XXX a *second* sublist?
.Bl -bullet
.It
If
.Dv IPC_NOWAIT
was specified, then
.Fn semop
returns immediately with a return value of
.Er EAGAIN .
.It
Otherwise, the calling process is put to sleep until one of the following
conditions is satisfied:
.\" XXX We already have two sublists, why not a third?
.Bl -bullet
.It
Some other process removes the semaphore with the
.Dv IPC_RMID
option of
.Xr semctl 2 .
In this case,
.Fn semop
returns immediately with a return value of
.Er EIDRM .
.It
The process receives a signal that is to be caught.
In this case, the process will resume execution as defined by
.Xr sigaction 2 .
.It
The semaphore's
value is greater than or equal to the absolute value of
.Va sem_op .
When this condition becomes true, the semaphore's value is decremented
by the absolute value of
.Va sem_op ,
the semaphore's adjust on exit value is incremented by the
absolute value of
.Va sem_op .
.El
.El
.El
.Pp
A negative value for
.Va sem_op
generally means that a process is waiting for a resource to become
available.
.It
When
.Va sem_op
is zero and the process has read permission,
one of the following will occur:
.Bl -bullet
.It
If the current value of the semaphore is equal to zero
then
.Fn semop
can return immediately.
.It
If
.Dv IPC_NOWAIT
was specified, then
.Fn semop
returns immediately with a return value of
.Er EAGAIN .
.It
Otherwise, the calling process is put to sleep until one of the following
conditions is satisfied:
.\" XXX Another nested sublists
.Bl -bullet
.It
Some other process removes the semaphore with the
.Dv IPC_RMID
option of
.Xr semctl 2 .
In this case,
.Fn semop
returns immediately with a return value of
.Er EIDRM .
.It
The process receives a signal that is to be caught.
In this case, the process will resume execution as defined by
.Xr sigaction 2 .
.It
The semaphore's value becomes zero.
.El
.El
.El
.Pp
For each semaphore a process has in use, the kernel maintains an
.Dq "adjust on exit"
value, as alluded to earlier.
When a process
exits, either voluntarily or involuntarily, the adjust on exit value
for each semaphore is added to the semaphore's value.
This can
be used to insure that a resource is released if a process terminates
unexpectedly.
.Sh RETURN VALUES
.Rv -std semop
.Sh ERRORS
The
.Fn semop
system call will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er E2BIG
Too many operations are specified.
.Bq Dv SEMOPM
.\" ===========
.It Bq Er EACCES
Permission is denied, due to a mismatch between the operation
and the mode of the semaphore set.
.\" ===========
.It Bq Er EAGAIN
The semaphore's value would result
in the process being put to sleep and
.Dv IPC_NOWAIT
is specified.
.\" ===========
.It Bq Er EFBIG
.\"
.\" I'd have thought this would be EINVAL,
.\" but the source says EFBIG.
.\"
.Va sem_num
is not in the range of valid semaphores for the set.
.\" ===========
.It Bq Er EIDRM
The semaphore set is removed from the system.
.\" ===========
.It Bq Er EINTR
The
.Fn semop
system call is interrupted by a signal.
.\" ===========
.It Bq Er EINVAL
No semaphore set corresponds to
.Fa semid ,
or the process would exceed the system-defined limit
for the number of per-process
.Dv SEM_UNDO
structures.
.\" ===========
.It Bq Er ENOSPC
The system
.Dv SEM_UNDO
pool
.Bq Dv SEMMNU
is full.
.\" ===========
.It Bq Er ERANGE
The requested operation would cause either
the semaphore's current value
.Bq Dv SEMVMX
or its adjust-on-exit value
.Bq Dv SEMAEM
to exceed the system-imposed limits.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/ipc.h>
.Fd #include <sys/sem.h>
.Pp
The include files
.In sys/types.h
and
.In sys/ipc.h
are necessary.
.Sh SEE ALSO
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr sigaction 2 ,
.Xr compat 5
.Sh BUGS
The
.Fn semop
system call
may block waiting for memory even if
.Dv IPC_NOWAIT
was specified.
                                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/send.2                                       0100644 0001750 0001750 00000020573 12567450735 021710  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: send.2,v 1.6 1996/01/15 01:17:18 thorpej Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)send.2	8.2 (Berkeley) 2/21/94
.\"
.Dd February 21, 1994
.Dt SEND 2
.Os BSD 4.2
.Sh NAME
.Nm send ,
.Nm sendmsg ,
.Nm sendto
.Nd send a message from a socket
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Ft ssize_t
.Fo send
.Fa "int socket"
.Fa "const void *buffer"
.Fa "size_t length"
.Fa "int flags"
.Fc
.Ft ssize_t
.Fo sendmsg
.Fa "int socket"
.Fa "const struct msghdr *message"
.Fa "int flags"
.Fc
.Ft ssize_t
.Fo sendto
.Fa "int socket"
.Fa "const void *buffer"
.Fa "size_t length"
.Fa "int flags"
.Fa "const struct sockaddr *dest_addr"
.Fa "socklen_t dest_len"
.Fc
.Sh DESCRIPTION
.Fn Send ,
.Fn sendto ,
and
.Fn sendmsg
are used to transmit a message to another socket.
.Fn Send
may be used only when the socket is in a 
.Em connected
state, while 
.Fn sendto
and
.Fn sendmsg
may be used at any time.
.Pp
The address of the target is given by
.Fa dest_addr
with 
.Fa dest_len
specifying its size.
The length of the message is given by
.Fa length .
If the message is too long to pass atomically through the
underlying protocol, the error
.Er EMSGSIZE
is returned, and
the message is not transmitted.
.Pp
No indication of failure to deliver is implicit in a
.Fn send .
Locally detected errors are indicated by a return value of -1.
.Pp
If no messages space is available at the socket to hold
the message to be transmitted, then
.Fn send
normally blocks, unless the socket has been placed in
non-blocking I/O mode.
The
.Xr select 2
call may be used to determine when it is possible to
send more data.
.Pp
The
.Fa flags
parameter may include one or more of the following:
.Bd -literal
#define	MSG_OOB        0x1  /* process out-of-band data */
#define	MSG_DONTROUTE  0x4  /* bypass routing, use direct interface */
.Ed
.Pp
The flag
.Dv MSG_OOB
is used to send
.Dq out-of-band
data on sockets that support this notion (e.g.
.Dv SOCK_STREAM ) ;
the underlying protocol must also support
.Dq out-of-band
data.
.Dv MSG_DONTROUTE
is usually used only by diagnostic or routing programs.
.Pp
The
.Fn sendmsg
system call uses a
.Fa msghdr
structure to minimize the number of directly supplied arguments.
The 
.Fa msg_iov
and 
.Fa msg_iovlen 
fields of message specify zero or more buffers 
containing the data to be sent. 
.Fa msg_iov 
points to an array of iovec structures; 
.Fa msg_iovlen 
shall be set to the dimension of this array. 
In each iovec structure, the 
.Fa iov_base 
field specifies a storage area and 
the 
.Fa iov_len 
field gives its size in bytes. Some of these sizes can be zero. 
The data from each storage area indicated by 
.Fa msg_iov 
is sent in turn.
See 
.Xr recv 2
for a complete description of the
.Fa msghdr
structure.
.Sh RETURN VALUES
Upon successful completion,
the number of bytes which were sent is returned.
Otherwise, -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn send ,
.Fn sendmsg ,
and
.Fn sendto
system calls will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
The SO_BROADCAST option is not set on the socket
and a broadcast address is given as the destination.
.\" ===========
.It Bq Er EAGAIN
The socket is marked non-blocking
and the requested operation would block.
.\" ===========
.It Bq Er EBADF
An invalid descriptor is specified.
.\" ===========
.It Bq Er ECONNRESET
A connection is forcibly closed by a peer.
.\" ===========
.It Bq Er EFAULT
An invalid user space address is specified for a parameter.
.\" ===========
.It Bq Er EHOSTUNREACH
The destination address specifies an unreachable host.
.\" ===========
.It Bq Er EINTR
A signal interrupts the system call
before any data is transmitted.
.\" ===========
.It Bq Er EMSGSIZE
The socket requires that message be sent atomically,
and the size of the message to be sent makes this impossible.
.Dv IOV_MAX .
.\" ===========
.It Bq Er ENETDOWN
The local network interface used to reach the destination is down.
.\" ===========
.It Bq Er ENETUNREACH
No route to the network is present.
.\" ===========
.It Bq Er ENOBUFS
The system is unable to allocate an internal buffer.
The operation may succeed when buffers become available.
.\" ===========
.It Bq Er ENOBUFS
The output queue for a network interface is full.
This generally indicates that the interface has stopped sending,
but may be caused by transient congestion.
.\" ===========
.It Bq Er ENOTSOCK
The argument
.Fa socket
is not a socket.
.\" ===========
.It Bq Er EOPNOTSUPP
.Fa socket
does not support (some of) the option(s) specified in
.Fa flags . 
.\" ===========
.It Bq Er EPIPE
The socket is shut down for writing
or the socket is connection-mode and is no longer connected.
In the latter case, and if the socket is of type SOCK_STREAM,
the SIGPIPE signal is generated to the calling thread.
.El
.Pp
The
.Fn sendmsg
and
.Fn sendto
system calls will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EAFNOSUPPORT
Addresses in the specified address family cannot be used
with this socket.
.\" ===========
.It Bq Er EDESTADDRREQ
The socket is not connection-mode and does not have its peer address set,
and no destination address is specified.
.\" ===========
.It Bq Er EISCONN
A destination address was specified and the socket is already connected.
.\" ===========
.It Bq Er ENOENT
A component of the pathname does not name an existing file
or the path name is an empty string.
.\" ===========
.It Bq Er ENOMEM
Insufficient memory is available to fulfill the request.
.\" ===========
.It Bq Er ENOTCONN
The socket is connection-mode, but is not connected.
.\" ===========
.It Bq Er ENOTDIR
A component of the path prefix of the pathname in the socket address
is not a directory.
.El
.Pp
The
.Fn send
system call will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EDESTADDRREQ
The socket is not connection-mode and no peer address is set.
.\" ===========
.It Bq Er ENOTCONN
The socket is not connected or otherwise has not had the peer pre-specified.
.El
.Pp
The
.Fn sendmsg
system call will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
The sum of the iov_len values overflows an ssize_t.
.\" ===========
.It Bq Er EMSGSIZE
The socket requires that message be sent atomically,
and the size of the message to be sent makes this impossible, 
or the msg_iovlen member of the msghdr structure pointed to by message 
is less than or equal to 0 or is greater than 
.Dv IOV_MAX .
.El
.Sh LEGACY SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Pp
The include file
.In sys/types.h is necessary.
.Sh SEE ALSO
.Xr fcntl 2 ,
.Xr getsockopt 2 ,
.Xr recv 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr write 2 ,
.Xr compat 5
.Sh HISTORY
The
.Fn send
function call appeared in
.Bx 4.2 .
                                                                                                                                     osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sendfile.2                                   0100644 0001750 0001750 00000014232 12567450735 022543  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 2003, David G. Lawrence
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice unmodified, this list of conditions, and the following
.\"    disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"
.Dd March 31, 2006
.Dt SENDFILE 2
.Os "Mac OS X"
.Sh NAME
.Nm sendfile
.Nd send a file to a socket
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.In sys/uio.h
.Ft int
.Fo sendfile
.Fa "int fd" "int s" "off_t offset" "off_t *len" 
.Fa "struct sf_hdtr *hdtr" "int flags"
.Fc
.Sh DESCRIPTION
The
.Fn sendfile
system call
sends a regular file specified by descriptor
.Fa fd
out a stream socket specified by descriptor
.Fa s .
.Pp
The
.Fa offset
argument specifies where to begin in the file.
Should
.Fa offset
fall beyond the end of file, the system will return
success and report 0 bytes sent as described below.
.Pp
The
.Fa len
argument is a value-result parameter, that specifies how many bytes 
of the file should be sent and/or how many bytes have been sent.
Initially the value pointed to by the 
.Fa len
argument specifies how many bytes should be sent with 0 having the special
meaning to send until the end of file has been reached.
On return the value pointed to by the 
.Fa len
argument indicates how many bytes have been sent, except when a header or 
trailer is specified as shown below.
The 
.Fa len
pointer may not be NULL.
.Pp
An optional header and/or trailer can be sent before and after the file data by 
specifying a pointer to a
.Vt "struct sf_hdtr" ,
which has the following structure:
.Pp
.Bd -literal -offset indent -compact
struct sf_hdtr {
	struct iovec *headers;	/* pointer to header iovecs */
	int hdr_cnt;		/* number of header iovecs */
	struct iovec *trailers;	/* pointer to trailer iovecs */
	int trl_cnt;		/* number of trailer iovecs */
};
.Ed
.Pp
The
.Fa headers
and
.Fa trailers
pointers, if
.Pf non- Dv NULL ,
point to arrays of
.Vt "struct iovec"
structures.
See the
.Fn writev
system call for information on the iovec structure.
The number of iovecs in these
arrays is specified by
.Fa hdr_cnt
and
.Fa trl_cnt .
.Pp
When a header or trailer is specified, the value of 
.Fa len
argument indicates the maximum number of bytes in the header and/or file to be sent.
It does not control the trailer; if a trailer exists, all of it will be sent.
If the value of 
.Fa len
argument is 0, all of the header and/or file will be sent before the entire trailer is sent.
On return, the
.Fa len
argument specifies the total number of bytes sent.
.Pp
The
.Fa flags
parameter is reserved for future expansion and must be set to 0. Any other value 
will cause
.Fn sendfile
to return
.Er EINVAL .
.Pp
When using a socket marked for non-blocking I/O,
.Fn sendfile
may send fewer bytes than requested.
In this case, the number of bytes successfully
sent is returned in the via the 
.Fa len
parameters and the error
.Er EAGAIN
is returned.
.Pp
When a signal causes 
.Fn sendfile
to return the error 
.Er EINTR ,
the 
.Fa len 
argument may return 0 without necessarily meaning the end of file has been reached
as the signal may have been caught before any data was sent.
.Sh IMPLEMENTATION NOTES
The
Mac OS X 
implementation of 
.Fn sendfile
uses 64 bits types for size and offset parameters so there is no need for 
a 64 bits version 
.Fn sendfile64
as found on some other operating systems.
.Sh RETURN VALUES
.Rv -std sendfile
.Pp
The number of bytes sent is returned via the parameter
.Fa len .
A value of 0 means the end of the file specified by descriptor 
.Fa fd
has been reached or that the value passed in 
.Fa offset 
falls beyond the end of file.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EAGAIN
The socket is marked for non-blocking I/O and not all data was sent due to
the socket buffer being full.
If specified, the number of bytes successfully sent will be returned in
.Fa *len .
.It Bq Er EBADF
The
.Fa fd
argument
is not a valid file descriptor.
.It Bq Er ENOTSUP
The
.Fa fd
argument
does not refer to a regular file.
.It Bq Er EBADF
The
.Fa s
argument
is not a valid socket descriptor.
.It Bq Er ENOTSOCK
The
.Fa s
argument
does not refer stream oriented socket.
.It Bq Er EFAULT
An invalid address was specified for an argument.
.It Bq Er EINTR
A signal interrupted
.Fn sendfile
before it could be completed.
If specified, the number
of bytes successfully sent will be returned in
.Fa *len .
.It Bq Er EINVAL
The
.Fa offset
argument
is negative.
.It Bq Er EINVAL
The
.Fa len
argument
is NULL.
.It Bq Er EINVAL
The
.Fa flags
argument
is not set to 0.
.It Bq Er EIO
An error occurred while reading from
.Fa fd .
.It Bq Er ENOTCONN
The
.Fa s
argument
points to an unconnected socket.
.It Bq Er ENOTSOCK
The
.Fa s
argument
is not a socket.
.It Bq Er EOPNOTSUPP
The file system for descriptor
.Fa fd
does not support
.Fn sendfile .
.It Bq Er EPIPE
The socket peer has closed the connection.
.El
.Sh SEE ALSO
.Xr open 2 ,
.Xr send 2 ,
.Xr socket 2 ,
.Xr writev 2
.Sh HISTORY
The
.Fn sendfile
system call
first appeared in
Darwin 9.0 (Mac OS X version 10.5) .
.Sh AUTHORS
This manual page is based on the FreeBSD version written by
.An David G. Lawrence Aq dg@dglawrence.com 
                                                                                                                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sendmsg.2                                    0100644 0001750 0001750 00000000020 12567450735 022400  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/send.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/sendto.2                                     0100644 0001750 0001750 00000000020 12567450735 022234  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/send.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setattrlist.2                                0100644 0001750 0001750 00000023460 12567450735 023337  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 2003 Apple Computer, Inc. All rights reserved.
.\" 
.\" The contents of this file constitute Original Code as defined in and
.\" are subject to the Apple Public Source License Version 1.1 (the
.\" "License").  You may not use this file except in compliance with the
.\" License.  Please obtain a copy of the License at
.\" http://www.apple.com/publicsource and read it before using this file.
.\" 
.\" This Original Code and all software distributed under the License are
.\" distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
.\" License for the specific language governing rights and limitations
.\" under the License.
.\" 
.\"     @(#)setattrlist.2
.
.Dd December 15, 2003
.Dt SETATTRLIST 2
.Os Darwin
.Sh NAME
.Nm setattrlist ,
.Nm fsetattrlist
.Nd set file system attributes
.Sh SYNOPSIS
.Fd #include <sys/attr.h>
.Fd #include <unistd.h>
.Ft int
.Fn setattrlist "const char* path" "struct attrlist * attrList" "void * attrBuf" "size_t attrBufSize" "unsigned long options"
.Ft int
.Fn fsetattrlist "int fd" "struct attrlist * attrList" "void * attrBuf" "size_t attrBufSize" "unsigned long options"
.
.Sh DESCRIPTION
The
.Fn setattrlist
and
.Fn fsetattrlist
functions set attributes (that is, metadata) of file system objects.
They are the logical opposite of
.Xr getattrlist 2 .
The 
.Fn setattrlist
function sets attributes about the file system object specified by 
.Fa path
from the values in the buffer specified by 
.Fa attrBuf
and
.Fa attrBufSize ;
the
.Fn fsetattrlist
function does the same for the
.Fa fd
file descriptor.
The 
.Fa attrList 
parameter determines what attributes are set. 
The 
.Fa options 
parameter lets you control specific aspects of the function's behaviour.
.Pp
.
The 
functions are only supported by certain volume format implementations. 
For maximum compatibility, client programs should use high-level APIs 
(such as the Carbon File Manager) to access file system attributes.
These high-level APIs include logic to emulate file system attributes 
on volumes that don't support 
.Fn setattrlist
and
.Fn fsetattrlist .
.Pp
.
.\" path parameter
.
The
.Fa path
parameter for
.Fn setattrlist
must reference a valid file system object.
All directories listed in the path name leading to the object 
must be searchable.
The
.Fa fd
parameter for
.Fn fsetattrlist
must be a valid file descriptor for the calling process.
.
The list of potentially settable attributes via 
.Fn setattrlist
is different than the list of attributes that are accessible via 
.Fn getattrlist
In particular, only the following attributes are modifiable via 
.Fn setattrlist
and not all of them may be supported on all filesystems.
.Pp
.
.Bl -item -compact
.It
ATTR_CMN_SCRIPT
.It 
ATTR_CMN_CRTIME
.It
ATTR_CMN_MODTIME
.It
ATTR_CMN_CHGTIME
.It
ATTR_CMN_ACCTIME
.It
ATTR_CMN_BKUPTIME
.It
ATTR_CMN_FNDRINFO
.It
ATTR_CMN_OWNERID
.It
ATTR_CMN_GRPID
.It
ATTR_CMN_ACCESSMASK
.It
ATTR_CMN_FLAGS
.It
ATTR_CMN_EXTENDED_SECURITY
.It
ATTR_CMN_GRPUUID
.Pp
.It
ATTR_VOL_NAME
.It
ATTR_VOL_INFO
.Pp
.It
ATTR_FILE_DEVTYPE
.El
.Pp
.
.
You must own the file system object in order to set any of the 
following attributes: 
.Pp
.
.Bl -item -compact
.It
ATTR_CMN_GRPID
.It
ATTR_CMN_ACCESSMASK
.It
ATTR_CMN_FLAGS
.It
ATTR_CMN_CRTIME
.It
ATTR_CMN_MODTIME
.It
ATTR_CMN_ACCTIME
.Pp
ATTR_CMN_CHGTIME 
.Fa cannot be set programmatically. Any attempt to set change time is ignored.
.El
.Pp
.
You must be root (that is, your process's effective UID must be 0) in order to change the 
.Dv ATTR_CMN_OWNERID
attribute
Setting other attributes requires that you have write access to the object.
.Pp
.
.\" attrList parameter
.
The
.Fa attrList
parameter is a pointer to an 
.Vt attrlist 
structure. 
You are responsible for filling out all fields of this structure before calling the function. 
See the discussion of the  
.Xr getattrlist 2 
function for a detailed description of this structure. 
To set an attribute you must set the corresponding bit in the appropriate 
.Vt attrgroup_t 
field of the 
.Vt attrlist 
structure.
.Pp
.
.\" attrBuf and attrBufSize parameters
.
The
.Fa attrBuf
and 
.Fa attrBufSize
parameters specify a buffer that contains the attribute values to set. 
Attributes are packed in exactly the same way as they are returned from 
.Xr getattrlist 2 
except that, when setting attributes, the buffer does not include the leading 
.Vt u_int32_t
length value.
.Pp
.
.\" option parameter
.
The
.Fa options
parameter is a bit set that controls the behaviour of
.Fn setattrlist .
The following option bits are defined.
.
.Bl -tag -width XXXbitmapcount
.
.It FSOPT_NOFOLLOW
If this bit is set, 
.Fn setattrlist 
will not follow a symlink if it occurs as 
the last component of
.Fa path .
.
.El
.
.Sh RETURN VALUES
Upon successful completion a value of 0 is returned.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.
.Sh COMPATIBILITY
Not all volumes support 
.Fn setattrlist .
However, if a volume supports 
.Xr getattrlist 2 ,
it must also support 
.Fn setattrlist .
See the documentation for 
.Xr getattrlist 2 
for details on how to tell whether a volume supports it.
.Pp
.
The 
.Fn setattrlist 
function has been undocumented for more than two years. 
In that time a number of volume format implementations have been created without 
a proper specification for the behaviour of this routine. 
You may encounter volume format implementations with slightly different 
behaviour than what is described here. 
Your program is expected to be tolerant of this variant behaviour.
.Pp
.
If you're implementing a volume format that supports 
.Fn setattrlist ,
you should be careful to support the behaviour specified by this document.
.
.Sh ERRORS
.Fn setattrlist
and
.Fn fsetattrlist
will fail if:
.Bl -tag -width Er
.
.It Bq Er ENOTSUP
The call is not supported by the volume.
.
.It Bq Er ENOTDIR
A component of the path for
.Fn setattrlist
prefix is not a directory.
.
.It Bq Er ENAMETOOLONG
A component of a path name for
.Fn setattrlist
exceeded 
.Dv NAME_MAX
characters, or an entire path name exceeded 
.Dv PATH_MAX
characters.
.
.It Bq Er ENOENT
The file system object for
.Fn setattrlist
does not exist.
.
.It Bq Er EBADF
The file descriptor argument for
.Fn fsetattrlist
is not a valid file descriptor.
.
.It Bq Er EROFS
The volume is read-only.
.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix for
.Fn setattrlist .
.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname for
.Fn setattrlist .
.
.It Bq Er EFAULT
.Fa path ,
.Fa attrList
or
.Em attrBuf
points to an invalid address.
.
.It Bq Er EINVAL
The 
.Fa bitmapcount 
field of 
.Fa attrList 
is not 
.Dv ATTR_BIT_MAP_COUNT .
.
.It Bq Er EINVAL
You try to set an invalid attribute.
.
.It Bq Er EINVAL
You try to set an attribute that is read-only.
.
.It Bq Er EINVAL
You try to set volume attributes and directory or file attributes at the same time.
.
.It Bq Er EINVAL
You try to set volume attributes but 
.Fa path 
does not reference the root of the volume.
.
.It Bq Er EPERM
You try to set an attribute that can only be set by the owner.
.
.It Bq Er EACCES
You try to set an attribute that's only settable if you have write permission, 
and you do not have write permission.
.
.It Bq Er EINVAL
The buffer size you specified in 
.Fa attrBufSize 
is too small to hold all the attributes that you are trying to set.
.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
.
.Sh CAVEATS
.
If you try to set any volume attributes, you must set 
.Dv ATTR_VOL_INFO 
in the 
.Fa volattr
field, even though it consumes no data from the attribute buffer.
.Pp
.
For more caveats, see also the compatibility notes above.
.
.Sh EXAMPLES
.
The following code shows how to set the file type and creator of 
a file by getting the 
.Dv ATTR_CMN_FNDRINFO 
attribute using 
.Xr getattrlist 2 , 
modifying the appropriate fields of the 32-byte Finder information structure, 
and then setting the attribute back using 
.Fn setattrlist . 
This assumes that the target volume supports the required attributes
.
.Bd -literal
#include <assert.h>
#include <stdio.h>
#include <stddef.h>
#include <string.h>
#include <sys/attr.h>
#include <sys/errno.h>
#include <unistd.h>
#include <sys/vnode.h>
.Pp
.
typedef struct attrlist attrlist_t;
.Pp
.
struct FInfoAttrBuf {
    u_int32_t       length;
    fsobj_type_t    objType;
    char            finderInfo[32];
};
typedef struct FInfoAttrBuf FInfoAttrBuf;
.Pp
.
static int FInfoDemo(
    const char *path, 
    const char *type, 
    const char *creator
)
{
    int             err;
    attrlist_t      attrList;
    FInfoAttrBuf    attrBuf;
.Pp
    
    assert( strlen(type)    == 4 );
    assert( strlen(creator) == 4 );
.Pp
.
    memset(&attrList, 0, sizeof(attrList));
    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;
    attrList.commonattr  = ATTR_CMN_OBJTYPE | ATTR_CMN_FNDRINFO;
.Pp
    
    err = getattrlist(path, &attrList, &attrBuf, sizeof(attrBuf), 0);
    if (err != 0) {
        err = errno;
    }
.Pp
    
    if ( (err == 0) && (attrBuf.objType != VREG) ) {
        fprintf(stderr, "Not a standard file.\en");
        err = EINVAL;
    } else {
        memcpy( &attrBuf.finderInfo[0], type,    4 );
        memcpy( &attrBuf.finderInfo[4], creator, 4 );
        
        attrList.commonattr = ATTR_CMN_FNDRINFO;
        err = setattrlist(
            path, 
            &attrList, 
            attrBuf.finderInfo, 
            sizeof(attrBuf.finderInfo), 
            0
        );
    }
.Pp
    return err;
}
.Ed
.Pp
.
.Sh SEE ALSO
.
.Xr chflags 2 ,
.Xr chmod 2 ,
.Xr chown 2 ,
.Xr getattrlist 2 ,
.Xr getdirentriesattr 2 ,
.Xr searchfs 2 ,
.Xr utimes 2
.
.Sh HISTORY
A
.Fn setattrlist
function call appeared in Darwin 1.3.1 (Mac OS X version 10.0).
.
                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setaudit.2                                   0100644 0001750 0001750 00000000031 12567450735 022564  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/setaudit_addr.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setaudit_addr.2                              0100644 0001750 0001750 00000015565 12567450735 023600  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008-2011 Apple Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\"
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\"
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\"
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd March 4, 2011
.Dt SETAUDIT_ADDR 2
.Os
.Sh NAME
.Nm setaudit_addr ,
.Nm setaudit(NOW DEPRECATED)
.Nd "set audit session state"
.Sh SYNOPSIS
.In bsm/audit.h
.In bsm/audit_session.h
.Ft int
.Fn setaudit_addr "auditinfo_addr_t *auditinfo_addr" "u_int length"
.Sh SYNOPSIS (NOW DEPRECATED)
.In bsm/audit.h
.Ft int
.Fn setaudit "auditinfo_t *auditinfo"
.Sh DESCRIPTION
The
.Fn setaudit_addr
system call
uses the
.Fa auditinfo_addr_t
data structure for the
.Fa auditinfo_addr
argument which supports Terminal IDs with large addresses
such as those used in IP version 6.  It is defined as follows:
.nf
.in +4n
struct auditinfo_addr {
	au_id_t         ai_auid;        /* Audit user ID. */
	au_mask_t       ai_mask;        /* Audit masks. */
	au_tid_addr_t   ai_termid;      /* Terminal ID. */
	au_asid_t       ai_asid;        /* Audit session ID. */
	u_int64_t       ai_flags;       /* Audit session flags */
};
typedef struct auditinfo_addr   auditinfo_addr_t;
.in
.fi
.Pp
The
.Fa ai_auid
variable contains the audit identifier which is recorded in the audit log for
each event the process caused. The value of AU_DEFAUDITID (-1) should not be
used.  The exception is if the value of audit identifier is known at the start
of the session but will be determined and set later. Until
.Fa ai_auid
is set to something other than AU_DEFAUDITID any audit events
generated by the system with be filtered by the non-attributed audit
mask.
.Pp
The
.Fa au_mask_t
data structure defines the bit mask for auditing successful and failed events
out of the predefined list of event classes. It is defined as follows:
.nf
.in +4n
struct au_mask {
	unsigned int    am_success;     /* success bits */
	unsigned int    am_failure;     /* failure bits */
};
typedef struct au_mask  au_mask_t;
.in
.fi
.Pp
The
.Fa au_tid_addr_t
data structure includes a larger address storage field and an additional
field with the type of address stored:
.nf
.in +4n
struct au_tid_addr {
	dev_t           at_port;
	u_int32_t       at_type;
	u_int32_t       at_addr[4];
};
typedef struct au_tid_addr      au_tid_addr_t;
.in
.fi
.Pp
The
.Fa ai_asid
variable contains the audit session ID which is recorded with every event
caused by the process.  It can be any value in the range 1 to PID_MAX (99999).
If the value of AU_ASSIGN_ASID is used for
.Fa ai_asid
a unique session ID will be generated by the kernel.
The audit session ID will be returned in the
.Fa ai_asid
field on success.
.Pp
The
.Fa ai_flags
field is opaque to the kernel and can be used to store flags associated
with the audit session.  Please see the
.Ao Pa bsm/audit_session.h Ac
header file
for more infomration and flag definitions for this platform.
.Pp
The
.Fa setaudit_addr
system call require an appropriate privilege to complete.
.Pp
This system call should only be called once at the start of a new
session and not again during the same session to update the session
information.
There are some exceptions, however.
The
.Fa ai_auid
field may be updated later if initially set to the value of
AU_DEFAUDITID (-1).
Likewise, the
.Fa ai_termid
fields may be updated later if the
.Fa at_type
field in
.Fa au_tid_addr
is set to AU_IPv4 and the other
.Fa ai_tid_addr
fields are all set to zero.
Creating a new session is done by setting the
.Fa ai_asid
field to an unique session value or AU_ASSIGN_ASID.
These system calls will fail when attempting to change the
.Fa ai_auid
or
.Fa ai_termid
fields once set to something other than the default values.
The
.Fa ai_flags
field may be updated only according to local access control
policy but this is usually accomplished with
.Xr auditon 2
using the A_SETSFLAGS command.
The audit preselection masks may be changed at any time
but are usually updated with
.Xr auditon 2
.Pp
The
.Fn setaudit
system call (NOW DEPRECATED)
sets the active audit session state for the current process via the
.Vt auditinfo_t
pointed to by
.Fa auditinfo .
The
.Fn setaudit_addr
system call
sets extended state via
.Fa auditinfo_addr
and
.Fa length .
.Pp
The
.Fa auditinfo_t
data structure (NOW DEPRECATED) is defined as follows:
.nf
.in +4n
struct auditinfo {
	au_id_t        ai_auid;         /* Audit user ID */
	au_mask_t      ai_mask;         /* Audit masks */
	au_tid_t       ai_termid;       /* Terminal ID */
	au_asid_t      ai_asid;         /* Audit session ID */
};
typedef struct auditinfo        auditinfo_t;
.in
.fi
.Pp
The
.Fa au_termid_t
data structure (NOW DEPRECATED) defines the Terminal ID recorded with every
event caused by the process. It is defined as follows:
.nf
.in +4n
struct au_tid {
	dev_t           port;
	u_int32_t       machine;
};
typedef struct au_tid   au_tid_t;
.in
.fi
.Sh RETURN VALUES
.Rv -std setaudit_addr
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EFAULT
A failure occurred while data transferred to or from
the kernel failed.
.It Bq Er EINVAL
Illegal argument was passed by a system call.
.It Bq Er EPERM
The process does not have sufficient permission to complete
the operation.
.El
.Sh SEE ALSO
.Xr audit 2 ,
.Xr auditon 2 ,
.Xr getaudit 2 ,
.Xr getauid 2 ,
.Xr setauid 2 ,
.Xr libbsm 3
.Sh HISTORY
The OpenBSM implementation was created by McAfee Research, the security
division of McAfee Inc., under contract to Apple Computer Inc.\& in 2004.
It was subsequently adopted by the TrustedBSD Project as the foundation for
the OpenBSM distribution.
.Pp
.Fn setaudit_addr
replaced
.Fn setaudit
in Mac OS X 10.7 to support longer terminal addresses such as those used
by IP version 6.
.Fn setaudit
is now deprecated and
.Fn setaudit_addr
should be used instead.
.Sh AUTHORS
.An -nosplit
This software was created by McAfee Research, the security research division
of McAfee, Inc., under contract to Apple Computer Inc.
Additional authors include
.An Wayne Salamon ,
.An Robert Watson ,
and SPARTA Inc.
.Pp
The Basic Security Module (BSM) interface to audit records and audit event
stream format were defined by Sun Microsystems.
.Pp
This manual page was written by
.An Robert Watson Aq rwatson@FreeBSD.org
and
.An Stacey Son Aq sson@FreeBSD.org .
                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setauid.2                                    0100644 0001750 0001750 00000005660 12567450735 022415  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"
.\" Copyright (c) 2008-2009 Apple Inc. All rights reserved.
.\"
.\" @APPLE_LICENSE_HEADER_START@
.\" 
.\" This file contains Original Code and/or Modifications of Original Code
.\" as defined in and that are subject to the Apple Public Source License
.\" Version 2.0 (the 'License'). You may not use this file except in
.\" compliance with the License. Please obtain a copy of the License at
.\" http://www.opensource.apple.com/apsl/ and read it before using this
.\" file.
.\" 
.\" The Original Code and all software distributed under the License are
.\" distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
.\" EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
.\" INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
.\" Please see the License for the specific language governing rights and
.\" limitations under the License.
.\" 
.\" @APPLE_LICENSE_HEADER_END@
.\"
.Dd March 21, 2009
.Dt SETAUID 2
.Os
.Sh NAME
.Nm setauid
.Nd "set audit indentifier"
.Sh SYNOPSIS
.In bsm/audit.h
.Ft int
.Fn setauid "au_id_t *auid"
.Sh DESCRIPTION
The
.Fn setauid
system call
sets the active audit identifier for the current process from the
.Vt au_id_t
pointed to by
.Fa auid .
The value of AU_DEFAUDITID (-1) should not be used for 
.Fa auid .
.Pp
This system call requires an appropriate privilege to complete.
.Pp
Once the audit identifier is set to some other value than
AU_DEAUDITID (-1) then it is immutable.
This system call may be used to set the audit identifier after 
initially setting up the audit session with the 
.Xr setaudit 2 ,
or 
.Xr setaudit_addr 2 
system call.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn setauid
function will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
A failure occurred while data transferred to
the kernel failed.
.It Bq Er EINVAL
An invalid value for 
.Fa auid
was used.
.Fa auid
can be any value of type 
.Vt au_id_t
except AU_DEFAUDITID.
.It Bq Er EPERM
The process does not have sufficient permission to complete
the operation.
.El
.Sh SEE ALSO
.Xr audit 2 ,
.Xr auditon 2 ,
.Xr getaudit 2 ,
.Xr getaudit_addr 2 ,
.Xr getauid 2 ,
.Xr setaudit 2 ,
.Xr setaudit_addr 2 ,
.Xr libbsm 3
.Sh HISTORY
The OpenBSM implementation was created by McAfee Research, the security
division of McAfee Inc., under contract to Apple Computer Inc.\& in 2004.
It was subsequently adopted by the TrustedBSD Project as the foundation for
the OpenBSM distribution.
.Sh AUTHORS
.An -nosplit
This software was created by McAfee Research, the security research division
of McAfee, Inc., under contract to Apple Computer Inc.
Additional authors include
.An Wayne Salamon ,
.An Robert Watson ,
and SPARTA Inc.
.Pp
The Basic Security Module (BSM) interface to audit records and audit event
stream format were defined by Sun Microsystems.
.Pp
This manual page was written by
.An Robert Watson Aq rwatson@FreeBSD.org
and
.An Stacey Son Aq sson@FreeBSD.org .
                                                                                osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setegid.2                                    0100644 0001750 0001750 00000000022 12567450735 022366  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/setuid.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/seteuid.2                                    0100644 0001750 0001750 00000000022 12567450735 022404  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/setuid.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setgid.2                                     0100644 0001750 0001750 00000000022 12567450735 022221  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/setuid.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setgroups.2                                  0100644 0001750 0001750 00000005752 12567450735 023014  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: setgroups.2,v 1.7 1995/02/27 12:36:49 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)setgroups.2	8.2 (Berkeley) 4/16/94
.\"
.Dd September 15, 2010
.Dt SETGROUPS 2
.Os BSD 4.2
.Sh NAME
.Nm setgroups
.Nd set group access list
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <unistd.h>
.Ft int
.Fn setgroups "int ngroups" "const gid_t *gidset"
.Sh DESCRIPTION
.Fn Setgroups
sets the group access list of the current user process
according to the array 
.Fa gidset .
The parameter
.Fa ngroups
indicates the number of entries in the array and must be no
more than
.Dv {NGROUPS_MAX} .
.Pp
Only the super-user may set new groups.
.Pp
Use of
.Fn setgroups
is highly discouraged.
.Sh RETURN VALUES
A 0 value is returned on success, -1 on error, with
an error code stored in
.Va errno .
.Sh ERRORS
The
.Fn setgroups
call will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of 
.Fa ngroups
is greater than
.Dv {NGROUPS_MAX} .
.It Bq Er EPERM
The caller is not the super-user.
.It Bq Er EFAULT
The address specified for
.Fa gidset
is outside the process
address space.
.El
.Sh SEE ALSO
.Xr getgroups 2 ,
.Xr initgroups 3
.Sh HISTORY
The
.Fn setgroups
function call appeared in
.Bx 4.2 .
                      osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setitimer.2                                  0100644 0001750 0001750 00000000025 12567450735 022752  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getitimer.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setlogin.2                                   0100644 0001750 0001750 00000000024 12567450735 022570  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getlogin.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setpgid.2                                    0100644 0001750 0001750 00000010724 12567450735 022413  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\"	$NetBSD: setpgid.2,v 1.8 1995/02/27 12:36:55 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)setpgid.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt SETPGID 2
.Os BSD 4
.Sh NAME
.Nm setpgid ,
.Nm setpgrp
.Nd set process group
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fo setpgid
.Fa "pid_t pid"
.Fa "pid_t pgid"
.Fc
.Ft pid_t
.Fo setpgrp
.Fa void
.Fc
.Sh DESCRIPTION
.Fn Setpgid
sets the process group of the specified process
.Ar pid
to the specified
.Ar pgid .
If
.Ar pid
is zero, then the call applies to the current process.
.Pp
If the invoker is not the super-user, then the affected process
must have the same effective user-id as the invoker or be a descendant
of the invoking process.
.Pp
.Sh RETURN VALUES
.Fn Setpgid
returns 0 when the operation was successful.
If the request failed, -1 is returned and the global variable
.Va errno
indicates the reason.
.Sh ERRORS
.Fn Setpgid
will fail and the process group will not be altered if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EACCES
The value of the
.Fa pid
argument matches the process ID of a child process of the calling process, 
and the child process has successfully executed one of the exec functions.
.\" ===========
.It Bq Er EINVAL
The value of the
.Fa pgid
argument is less than 0
or is not a value supported by the implementation.
.\" ===========
.It Bq Er EPERM
The process indicated by the
.Fa pid
argument is a session leader.
.\" ===========
.It Bq Er EPERM
The effective user ID of the requested process is different
from that of the caller and the process is not a descendant
of the calling process.
.\" ===========
.It Bq Er EPERM
The value of the
.Fa pgid argument
is valid, but does not match the process ID
of the process indicated by the
.Fa pid
argument and there is no process with a process group ID
that matches the value of the
.Fa pgid
argument in the same session as the calling process.
.\" ===========
.It Bq Er ESRCH
The value of the 
.Fa pid 
argument does not match the process ID of the calling process or of a 
child process of the calling process.
.El
.Sh LEGACY SYNOPSIS
.Fd #include <unistd.h>
.Pp
.Ft int
.br
.Fo setpgrp
.Fa "pid_t pid"
.Fa "pid_t pgid"
.Fc ;
.Pp
The legacy
.Fn setpgrp
function is a clone of the
.Fn setpgid
function, retained for calling convention compatibility
with historical versions of
.Bx .
.Sh COMPATIBILITY
Use of the legacy version of the
.Fn setpgrp
call will cause compiler diagnostics.
Use
.Fn setpgid
instead.
.Pp
Use of private (and conflicting) prototypes for
.Fn setpgrp
will cause compiler diagnostics.
Delete the private prototypes and include
.In unistd.h .
.Sh SEE ALSO
.Xr getpgrp 2 ,
.Xr compat 5
.Sh STANDARDS
The
.Fn setpgid
function conforms to 
.St -p1003.1-88 .
                                            osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setpgrp.2                                    0100644 0001750 0001750 00000000023 12567450735 022427  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/setpgid.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setpriority.2                                0100644 0001750 0001750 00000000027 12567450735 023344  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .so man2/getpriority.2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/usr/share/man/man2/setregid.2                                   0100644 0001750 0001750 00000006441 12567450735 022563  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        .\" Copyright (c) 1980, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this softw