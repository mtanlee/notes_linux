      __ZN4llvm24AggressiveAntiDepBreakerD2Ev, __ZN4llvm24AssemblyAnnotationWriterD0Ev, 
                       __ZN4llvm24AssemblyAnnotationWriterD1Ev, __ZN4llvm24AssemblyAnnotationWriterD2Ev, 
                       __ZN4llvm24BitcodeReaderMDValueList11AssignValueEPNS_5ValueEj, 
                       __ZN4llvm24BitcodeReaderMDValueList14getValueFwdRefEj, 
                       __ZN4llvm24ConnectedVNInfoEqClasses10DistributeEPPNS_12LiveIntervalERNS_19MachineRegisterInfoE, 
                       __ZN4llvm24ConnectedVNInfoEqClasses8ClassifyEPKNS_12LiveIntervalE, 
                       __ZN4llvm24ConstantFoldInstOperandsEjPNS_4TypeENS_8ArrayRefIPNS_8ConstantEEEPKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm24DemoteRegisterToMemoryIDE, __ZN4llvm24ExtractValueConstantExpr6anchorEv, 
                       __ZN4llvm24FinalizeMachineBundlesIDE, __ZN4llvm24FindAvailableLoadedValueEPNS_5ValueEPNS_10BasicBlockERNS_14ilist_iteratorINS_11InstructionEEEjPNS_13AliasAnalysisEPPNS_6MDNodeE, 
                       __ZN4llvm24MCDwarfCallFrameFragment6anchorEv, __ZN4llvm24MCMachObjectTargetWriterC2Ebjjb, 
                       __ZN4llvm24MCMachObjectTargetWriterD0Ev, __ZN4llvm24MCMachObjectTargetWriterD1Ev, 
                       __ZN4llvm24MCMachObjectTargetWriterD2Ev, __ZN4llvm24MachineConstantPoolValue6anchorEv, 
                       __ZN4llvm24MachineCopyPropagationIDE, __ZN4llvm24MachinePostDominatorTree20runOnMachineFunctionERNS_15MachineFunctionE, 
                       __ZN4llvm24MachinePostDominatorTree2IDE, __ZN4llvm24MachinePostDominatorTree34createMachinePostDominatorTreePassEv, 
                       __ZN4llvm24MachinePostDominatorTreeC1Ev, __ZN4llvm24MachinePostDominatorTreeC2Ev, 
                       __ZN4llvm24MachinePostDominatorTreeD0Ev, __ZN4llvm24MachinePostDominatorTreeD1Ev, 
                       __ZN4llvm24MachinePostDominatorTreeD2Ev, __ZN4llvm24MemoryDependenceAnalysis13getDependencyEPNS_11InstructionE, 
                       __ZN4llvm24MemoryDependenceAnalysis13releaseMemoryEv, 
                       __ZN4llvm24MemoryDependenceAnalysis13runOnFunctionERNS_8FunctionE, 
                       __ZN4llvm24MemoryDependenceAnalysis17removeInstructionEPNS_11InstructionE, 
                       __ZN4llvm24MemoryDependenceAnalysis23GetNonLocalInfoForBlockERKNS_13AliasAnalysis8LocationEbPNS_10BasicBlockEPNSt3__16vectorINS_16NonLocalDepEntryENS7_9allocatorIS9_EEEEj, 
                       __ZN4llvm24MemoryDependenceAnalysis24getPointerDependencyFromERKNS_13AliasAnalysis8LocationEbNS_14ilist_iteratorINS_11InstructionEEEPNS_10BasicBlockE, 
                       __ZN4llvm24MemoryDependenceAnalysis25getCallSiteDependencyFromENS_8CallSiteEbNS_14ilist_iteratorINS_11InstructionEEEPNS_10BasicBlockE, 
                       __ZN4llvm24MemoryDependenceAnalysis25getNonLocalCallDependencyENS_8CallSiteE, 
                       __ZN4llvm24MemoryDependenceAnalysis27getNonLocalPointerDepFromBBERKNS_12PHITransAddrERKNS_13AliasAnalysis8LocationEbPNS_10BasicBlockERNS_15SmallVectorImplINS_17NonLocalDepResultEEERNS_8DenseMapIS9_PNS_5ValueENS_12DenseMapInfoIS9_EEEEb, 
                       __ZN4llvm24MemoryDependenceAnalysis27invalidateCachedPointerInfoEPNS_5ValueE, 
                       __ZN4llvm24MemoryDependenceAnalysis28getNonLocalPointerDependencyERKNS_13AliasAnalysis8LocationEbPNS_10BasicBlockERNS_15SmallVectorImplINS_17NonLocalDepResultEEE, 
                       __ZN4llvm24MemoryDependenceAnalysis28invalidateCachedPredecessorsEv, 
                       __ZN4llvm24MemoryDependenceAnalysis2IDE, __ZN4llvm24MemoryDependenceAnalysis31getLoadLoadClobberFullWidthSizeEPKNS_5ValueExjPKNS_8LoadInstERKNS_10TargetDataE, 
                       __ZN4llvm24MemoryDependenceAnalysis39RemoveCachedNonLocalPointerDependenciesENS_14PointerIntPairIPKNS_5ValueELj1EbNS_21PointerLikeTypeTraitsIS4_EEEE, 
                       __ZN4llvm24MemoryDependenceAnalysisC1Ev, __ZN4llvm24MemoryDependenceAnalysisC2Ev, 
                       __ZN4llvm24MemoryDependenceAnalysisD0Ev, __ZN4llvm24MemoryDependenceAnalysisD1Ev, 
                       __ZN4llvm24MemoryDependenceAnalysisD2Ev, __ZN4llvm24PassRegistrationListener15enumeratePassesEv, 
                       __ZN4llvm24PassRegistrationListenerC1Ev, __ZN4llvm24PassRegistrationListenerC2Ev, 
                       __ZN4llvm24PassRegistrationListenerD0Ev, __ZN4llvm24PassRegistrationListenerD1Ev, 
                       __ZN4llvm24PassRegistrationListenerD2Ev, __ZN4llvm24ScheduleHazardRecognizerD0Ev, 
                       __ZN4llvm24ScheduleHazardRecognizerD1Ev, __ZN4llvm24ScheduleHazardRecognizerD2Ev, 
                       __ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE, 
                       __ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_11GlobalValueERKNS_13TargetMachineE, 
                       __ZN4llvm24TargetLoweringObjectFileD0Ev, __ZN4llvm24TargetLoweringObjectFileD1Ev, 
                       __ZN4llvm24TargetLoweringObjectFileD2Ev, __ZN4llvm24UpgradeIntrinsicFunctionEPNS_8FunctionERS1_, 
                       __ZN4llvm24X86COFFMachineModuleInfoD0Ev, __ZN4llvm24X86COFFMachineModuleInfoD1Ev, 
                       __ZN4llvm24X86COFFMachineModuleInfoD2Ev, __ZN4llvm24X86EHFlavour0Dwarf2LSizeE, 
                       __ZN4llvm24X86EHFlavour0L2DwarfSizeE, __ZN4llvm24X86EHFlavour1Dwarf2LSizeE, 
                       __ZN4llvm24X86EHFlavour1L2DwarfSizeE, __ZN4llvm24X86EHFlavour2Dwarf2LSizeE, 
                       __ZN4llvm24X86EHFlavour2L2DwarfSizeE, __ZN4llvm24X86LinuxTargetObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE, 
                       __ZN4llvm24createBlockExtractorPassEv, __ZN4llvm24createBlockPlacementPassEv, 
                       __ZN4llvm24createBoundsCheckingPassEj, __ZN4llvm24createCFGOnlyPrinterPassEv, 
                       __ZN4llvm24createCodeGenPreparePassEPKNS_14TargetLoweringE, 
                       __ZN4llvm24createDbgInfoPrinterPassEv, __ZN4llvm24createDeadArgHackingPassEv, 
                       __ZN4llvm24createDomOnlyPrinterPassEv, __ZN4llvm24createIndVarSimplifyPassEv, 
                       __ZN4llvm24createMergeFunctionsPassEv, __ZN4llvm24createPostDomPrinterPassEv, 
                       __ZN4llvm24createStackProtectorPassEPKNS_14TargetLoweringE, 
                       __ZN4llvm24createX86ELFObjectWriterERNS_11raw_ostreamEbh, 
                       __ZN4llvm24getStreamedBitcodeModuleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_12DataStreamerERNS_11LLVMContextEPS6_, 
                       __ZN4llvm24initializeCFGPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeDomPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeLiveStacksPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeLoaderPassPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeLoopRotatePassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeLoopUnrollPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeMachineCSEPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeObjCARCOptPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeRegionInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeSROA_SSAUpPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeTargetDataPassERNS_12PassRegistryE, 
                       __ZN4llvm24initializeTransformUtilsERNS_12PassRegistryE, 
                       __ZN4llvm24initializeVirtRegMapPassERNS_12PassRegistryE, 
                       __ZN4llvm24llvm_acquire_global_lockEv, __ZN4llvm24llvm_release_global_lockEv, 
                       __ZN4llvm24llvm_start_multithreadedEv, __ZN4llvm25CloneAndPruneFunctionIntoEPNS_8FunctionEPKS0_RNS_8ValueMapIPKNS_5ValueENS_6WeakVHENS_14ValueMapConfigIS7_EEEEbRNS_15SmallVectorImplIPNS_10ReturnInstEEEPKcPNS_14ClonedCodeInfoEPKNS_10TargetDataEPNS_11InstructionE, 
                       __ZN4llvm25ConstantFoldGetElementPtrEPNS_8ConstantEbNS_8ArrayRefIPNS_5ValueEEE, 
                       __ZN4llvm25ConstantFoldGetElementPtrEPNS_8ConstantEbNS_8ArrayRefIS1_EE, 
                       __ZN4llvm25GetElementPtrConstantExpr6anchorEv, __ZN4llvm25GetElementPtrConstantExprC1EPNS_8ConstantENS_8ArrayRefIS2_EEPNS_4TypeE, 
                       __ZN4llvm25GetElementPtrConstantExprC2EPNS_8ConstantENS_8ArrayRefIS2_EEPNS_4TypeE, 
                       __ZN4llvm25InsertElementConstantExpr6anchorEv, __ZN4llvm25MachineBlockFrequencyInfo20runOnMachineFunctionERNS_15MachineFunctionE, 
                       __ZN4llvm25MachineBlockFrequencyInfo2IDE, __ZN4llvm25MachineBlockFrequencyInfoC1Ev, 
                       __ZN4llvm25MachineBlockFrequencyInfoC2Ev, __ZN4llvm25MachineBlockFrequencyInfoD0Ev, 
                       __ZN4llvm25MachineBlockFrequencyInfoD1Ev, __ZN4llvm25MachineBlockFrequencyInfoD2Ev, 
                       __ZN4llvm25MergeBlockIntoPredecessorEPNS_10BasicBlockEPNS_4PassE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator12visitPHINodeERNS_7PHINodeE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator13visitCallSiteENS_8CallSiteE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator13visitLoadInstERNS_8LoadInstE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator15visitAllocaInstERNS_10AllocaInstE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator15visitSelectInstERNS_10SelectInstE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator16visitGEPOperatorERNS_11GEPOperatorE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator16visitInstructionERNS_11InstructionE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator17visitIntToPtrInstERNS_12IntToPtrInstE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator21visitExtractValueInstERNS_16ExtractValueInstE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator23visitExtractElementInstERNS_18ExtractElementInstE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator7computeEPNS_5ValueE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluator8compute_EPNS_5ValueE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluatorC1EPKNS_10TargetDataEPKNS_17TargetLibraryInfoERNS_11LLVMContextE, 
                       __ZN4llvm25ObjectSizeOffsetEvaluatorC2EPKNS_10TargetDataEPKNS_17TargetLibraryInfoERNS_11LLVMContextE, 
                       __ZN4llvm25PBQPBuilderWithCoalescing18addPhysRegCoalesceERN4PBQP6VectorEjf, 
                       __ZN4llvm25PBQPBuilderWithCoalescing18addVirtRegCoalesceERN4PBQP6MatrixERKNS_11SmallVectorIjLj16EEES7_f, 
                       __ZN4llvm25PBQPBuilderWithCoalescing5buildEPNS_15MachineFunctionEPKNS_13LiveIntervalsEPKNS_15MachineLoopInfoERKNSt3__13setIjNS9_4lessIjEENS9_9allocatorIjEEEE, 
                       __ZN4llvm25PrependMainExecutablePathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcPv, 
                       __ZN4llvm25ShuffleVectorConstantExpr6anchorEv, __ZN4llvm25SimplifyFortifiedLibCalls4foldEPNS_8CallInstEPKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm25SimplifyFortifiedLibCallsD0Ev, __ZN4llvm25SimplifyFortifiedLibCallsD1Ev, 
                       __ZN4llvm25SimplifyFortifiedLibCallsD2Ev, __ZN4llvm25createGlobalOptimizerPassEv, 
                       __ZN4llvm25createILPListDAGSchedulerEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelE, 
                       __ZN4llvm25createMachineVerifierPassEPKc, __ZN4llvm25createObjCARCContractPassEv, 
                       __ZN4llvm25createPartialInliningPassEv, __ZN4llvm25createProfileVerifierPassEv, 
                       __ZN4llvm25createThreadSanitizerPassEv, __ZN4llvm25createWinCOFFObjectWriterEPNS_27MCWinCOFFObjectTargetWriterERNS_11raw_ostreamE, 
                       __ZN4llvm25createX86MachObjectWriterERNS_11raw_ostreamEbjj, 
                       __ZN4llvm25hasInlineAsmMemConstraintERNSt3__16vectorINS_9InlineAsm14ConstraintInfoENS0_9allocatorIS3_EEEERKNS_14TargetLoweringE, 
                       __ZN4llvm25initializeBBVectorizePassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeEdgeBundlesPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeGlobalMergePassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeIfConverterPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeInstrumentationERNS_12PassRegistryE, 
                       __ZN4llvm25initializeLowerAtomicPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeLowerInvokePassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeLowerSwitchPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeMachineLICMPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeMetaRenamerPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializePreVerifierPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializePromotePassPassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeReassociatePassERNS_12PassRegistryE, 
                       __ZN4llvm25initializeSlotIndexesPassERNS_12PassRegistryE, 
                       __ZN4llvm25llvm_unreachable_internalEPKcS1_j, __ZN4llvm25onlyUsedByLifetimeMarkersEPKNS_5ValueE, 
                       __ZN4llvm26ComputeUsesVAFloatArgumentERKNS_8CallInstEPNS_17MachineModuleInfoE, 
                       __ZN4llvm26EliminateDuplicatePHINodesEPNS_10BasicBlockE, 
                       __ZN4llvm26ExtractElementConstantExpr6anchorEv, 
                       __ZN4llvm26FoldReturnIntoUncondBranchEPNS_10ReturnInstEPNS_10BasicBlockES3_, 
                       __ZN4llvm26LocalStackSlotAllocationIDE, __ZN4llvm26MMIAddrLabelMapCallbackPtr19allUsesReplacedWithEPNS_5ValueE, 
                       __ZN4llvm26MMIAddrLabelMapCallbackPtr7deletedEv, 
                       __ZN4llvm26MachineOperandIteratorBase14analyzePhysRegEjPKNS_18TargetRegisterInfoE, 
                       __ZN4llvm26MachineOperandIteratorBase14analyzeVirtRegEjPNS_15SmallVectorImplINSt3__14pairIPNS_12MachineInstrEjEEEE, 
                       __ZN4llvm26PrologEpilogCodeInserterIDE, __ZN4llvm26ScheduleDAGTopologicalSort10RemovePredEPNS_5SUnitES2_, 
                       __ZN4llvm26ScheduleDAGTopologicalSort11IsReachableEPKNS_5SUnitES3_, 
                       __ZN4llvm26ScheduleDAGTopologicalSort15WillCreateCycleEPNS_5SUnitES2_, 
                       __ZN4llvm26ScheduleDAGTopologicalSort25InitDAGTopologicalSortingEv, 
                       __ZN4llvm26ScheduleDAGTopologicalSort3DFSEPKNS_5SUnitEiRb, 
                       __ZN4llvm26ScheduleDAGTopologicalSort5ShiftERNS_9BitVectorEii, 
                       __ZN4llvm26ScheduleDAGTopologicalSort7AddPredEPNS_5SUnitES2_, 
                       __ZN4llvm26ScheduleDAGTopologicalSort8AllocateEii, 
                       __ZN4llvm26ScheduleDAGTopologicalSortC1ERNSt3__16vectorINS_5SUnitENS1_9allocatorIS3_EEEE, 
                       __ZN4llvm26ScheduleDAGTopologicalSortC2ERNSt3__16vectorINS_5SUnitENS1_9allocatorIS3_EEEE, 
                       __ZN4llvm26ScoreboardHazardRecognizer11RecedeCycleEv, 
                       __ZN4llvm26ScoreboardHazardRecognizer12AdvanceCycleEv, 
                       __ZN4llvm26ScoreboardHazardRecognizer13getHazardTypeEPNS_5SUnitEi, 
                       __ZN4llvm26ScoreboardHazardRecognizer15EmitInstructionEPNS_5SUnitE, 
                       __ZN4llvm26ScoreboardHazardRecognizer5ResetEv, __ZN4llvm26ScoreboardHazardRecognizerC1EPKNS_18InstrItineraryDataEPKNS_11ScheduleDAGEPKc, 
                       __ZN4llvm26ScoreboardHazardRecognizerC2EPKNS_18InstrItineraryDataEPKNS_11ScheduleDAGEPKc, 
                       __ZN4llvm26createAddressSanitizerPassEv, __ZN4llvm26createBURRListDAGSchedulerEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelE, 
                       __ZN4llvm26createFunctionInliningPassEi, __ZN4llvm26createFunctionInliningPassEv, 
                       __ZN4llvm26createInstructionNamerPassEv, __ZN4llvm26createLoopInstSimplifyPassEv, 
                       __ZN4llvm26createProfileEstimatorPassEj, __ZN4llvm26createProfileEstimatorPassEv, 
                       __ZN4llvm26createRegionOnlyViewerPassEv, __ZN4llvm26createSimplifyLibCallsPassEv, 
                       __ZN4llvm26getNonStreamedMemoryObjectEPKhS1_, __ZN4llvm26getOrEnforceKnownAlignmentEPNS_5ValueEjPKNS_10TargetDataE, 
                       __ZN4llvm26initializeArgPromotionPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeEdgeProfilerPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeExpandPostRAPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeGCModuleInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeGCOVProfilerPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeInstCombinerPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeLoopDeletionPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeLoopSimplifyPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeLoopUnswitchPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeOptimizePHIsPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializePathProfilerPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializePrintDbgInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeRegionViewerPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeStripSymbolsPassERNS_12PassRegistryE, 
                       __ZN4llvm26initializeTailCallElimPassERNS_12PassRegistryE, 
                       __ZN4llvm26isInstructionTriviallyDeadEPNS_11InstructionEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm26remove_fatal_error_handlerEv, __ZN4llvm27CheckBitcodeOutputToConsoleERNS_11raw_ostreamEb, 
                       __ZN4llvm27ConstantFoldCastInstructionEjPNS_8ConstantEPNS_4TypeE, 
                       __ZN4llvm27CrashRecoveryContextCleanupD0Ev, __ZN4llvm27CrashRecoveryContextCleanupD1Ev, 
                       __ZN4llvm27CrashRecoveryContextCleanupD2Ev, __ZN4llvm27InsertProfilingShutdownCallEPNS_8FunctionEPNS_6ModuleE, 
                       __ZN4llvm27MCWinCOFFObjectTargetWriterC2Ej, __ZN4llvm27MachineInstrExpressionTrait12getHashValueERKPKNS_12MachineInstrE, 
                       __ZN4llvm27MachinePassRegistryListener6anchorEv, 
                       __ZN4llvm27MergeBasicBlockIntoOnlyPredEPNS_10BasicBlockEPNS_4PassE, 
                       __ZN4llvm27ProfileMetadataLoaderPassIDE, __ZN4llvm27SimplifyInstructionsInBlockEPNS_10BasicBlockEPKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm27SplitLandingPadPredecessorsEPNS_10BasicBlockENS_8ArrayRefIS1_EEPKcS5_PNS_4PassERNS_15SmallVectorImplIS1_EE, 
                       __ZN4llvm27TargetLoweringObjectFileELF13InitializeELFEb, 
                       __ZN4llvm27TwoAddressInstructionPassIDE, __ZN4llvm27X86DwarfFlavour0Dwarf2LSizeE, 
                       __ZN4llvm27X86DwarfFlavour0L2DwarfSizeE, __ZN4llvm27X86DwarfFlavour1Dwarf2LSizeE, 
                       __ZN4llvm27X86DwarfFlavour1L2DwarfSizeE, __ZN4llvm27X86DwarfFlavour2Dwarf2LSizeE, 
                       __ZN4llvm27X86DwarfFlavour2L2DwarfSizeE, __ZN4llvm27createArgumentPromotionPassEj, 
                       __ZN4llvm27createCFGSimplificationPassEv, __ZN4llvm27createFastRegisterAllocatorEv, 
                       __ZN4llvm27createNoPathProfileInfoPassEv, __ZN4llvm27createPBQPRegisterAllocatorENSt3__18auto_ptrINS_11PBQPBuilderEEEPc, 
                       __ZN4llvm27createPathProfileLoaderPassEv, __ZN4llvm27createPostDomOnlyViewerPassEv, 
                       __ZN4llvm27createRegionOnlyPrinterPassEv, __ZN4llvm27createStripDebugDeclarePassEv, 
                       __ZN4llvm27createX86JITCodeEmitterPassERNS_16X86TargetMachineERNS_14JITCodeEmitterE, 
                       __ZN4llvm27getOrInsertFnSpecificMDNodeERNS_6ModuleENS_12DISubprogramE, 
                       __ZN4llvm27initializeAliasDebuggerPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeAlwaysInlinerPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeCFGOnlyViewerPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeConstantMergePassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeDomOnlyViewerPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeDominatorTreePassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeFindUsedTypesPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeFunctionAttrsPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeGlobalsModRefPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeJumpThreadingPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeLazyValueInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeLiveIntervalsPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeLiveRegMatrixPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeLiveVariablesPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeLoopExtractorPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeMemDepPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeNoProfileInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeObjCARCAPElimPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeObjCARCExpandPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializePostDomViewerPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeRegionPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeSimpleInlinerPassERNS_12PassRegistryE, 
                       __ZN4llvm27initializeStackColoringPassERNS_12PassRegistryE, 
                       __ZN4llvm27install_fatal_error_handlerEPFvPvRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEES0_, 
                       __ZN4llvm27isSafeToLoadUnconditionallyEPNS_5ValueEPNS_11InstructionEjPKNS_10TargetDataE, 
                       __ZN4llvm28ConstantFoldLoadFromConstPtrEPNS_8ConstantEPKNS_10TargetDataE, 
                       __ZN4llvm28DeadMachineInstructionElimIDE, __ZN4llvm28FoldingSetBucketIteratorImplC1EPPv, 
                       __ZN4llvm28FoldingSetBucketIteratorImplC2EPPv, __ZN4llvm28MachineBlockPlacementStatsIDE, 
                       __ZN4llvm28MachineBranchProbabilityInfo2IDE, __ZN4llvm28MachineBranchProbabilityInfo6anchorEv, 
                       __ZN4llvm28RecursivelyDeleteDeadPHINodeEPNS_7PHINodeEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm28RemovePredecessorAndSimplifyEPNS_10BasicBlockES1_PNS_10TargetDataE, 
                       __ZN4llvm28createBasicAliasAnalysisPassEv, __ZN4llvm28createBasicRegisterAllocatorEv, 
                       __ZN4llvm28createBreakCriticalEdgesPassEv, __ZN4llvm28createDeadArgEliminationPassEv, 
                       __ZN4llvm28createHybridListDAGSchedulerEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelE, 
                       __ZN4llvm28createLoopStrengthReducePassEPKNS_14TargetLoweringE, 
                       __ZN4llvm28createPostDomOnlyPrinterPassEv, __ZN4llvm28createSourceListDAGSchedulerEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelE, 
                       __ZN4llvm28createStripDeadDebugInfoPassEv, __ZN4llvm28createX86IssueVZeroUpperPassEv, 
                       __ZN4llvm28createX86WinCOFFObjectWriterERNS_11raw_ostreamEb, 
                       __ZN4llvm28initializeBasicCallGraphPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeBlockPlacementPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeBoundsCheckingPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeCFGOnlyPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeCodeGenPreparePassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeDomOnlyPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeIndVarSimplifyPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeInstSimplifierPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeMachineSinkingPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeMergeFunctionsPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializePHIEliminationPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializePartialInlinerPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializePostDomPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeSpillPlacementPassERNS_12PassRegistryE, 
                       __ZN4llvm28initializeStackProtectorPassERNS_12PassRegistryE, 
                       __ZN4llvm28isSafeToSpeculativelyExecuteEPKNS_5ValueEPKNS_10TargetDataE, 
                       __ZN4llvm29ConstantFoldBinaryInstructionEjPNS_8ConstantES1_, 
                       __ZN4llvm29ConstantFoldSelectInstructionEPNS_8ConstantES1_S1_, 
                       __ZN4llvm29UnreachableMachineBlockElimIDE, __ZN4llvm29createConstantPropagationPassEv, 
                       __ZN4llvm29createDeadCodeEliminationPassEv, __ZN4llvm29createDeadInstEliminationPassEv, 
                       __ZN4llvm29createGreedyRegisterAllocatorEv, __ZN4llvm29createOptimalEdgeProfilerPassEv, 
                       __ZN4llvm29createPathProfileVerifierPassEv, __ZN4llvm29createSingleLoopExtractorPassEv, 
                       __ZN4llvm29createStripDeadPrototypesPassEv, __ZN4llvm29createTailCallEliminationPassEv, 
                       __ZN4llvm29initializeAliasSetPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeCFGSimplifyPassPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeInternalizePassPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeLowerIntrinsicsPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeMachineLoopInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeObjCARCContractPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializePostRASchedulerPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializePrintModulePassPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeScalarEvolutionPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeThreadSanitizerPassERNS_12PassRegistryE, 
                       __ZN4llvm29initializeVirtRegRewriterPassERNS_12PassRegistryE, 
                       __ZN4llvm29replaceAndRecursivelySimplifyEPNS_11InstructionEPNS_5ValueEPKNS_10TargetDataEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeE, 
                       __ZN4llvm29set_fixed_execution_hash_seedEm, __ZN4llvm2cl11OptionValueINS0_13boolOrDefaultEE6anchorEv, 
                       __ZN4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE6anchorEv, 
                       __ZN4llvm2cl16PrintHelpMessageEv, __ZN4llvm2cl17PrintOptionValuesEv, 
                       __ZN4llvm2cl17SetVersionPrinterEPFvvE, __ZN4llvm2cl17basic_parser_impl6anchorEv, 
                       __ZN4llvm2cl18GenericOptionValue6anchorEv, __ZN4llvm2cl18MarkOptionsChangedEv, 
                       __ZN4llvm2cl19PrintVersionMessageEv, __ZN4llvm2cl19generic_parser_base10findOptionEPKc, 
                       __ZN4llvm2cl22AddExtraVersionPrinterEPFvvE, __ZN4llvm2cl23ParseCommandLineOptionsEiPKPKcS2_b, 
                       __ZN4llvm2cl23ParseEnvironmentOptionsEPKcS2_S2_b, 
                       __ZN4llvm2cl6Option11addArgumentEv, __ZN4llvm2cl6Option13addOccurrenceEjNS_9StringRefES2_b, 
                       __ZN4llvm2cl6Option5errorERKNS_5TwineENS_9StringRefE, 
                       __ZN4llvm2cl6Option6anchorEv, __ZN4llvm2cl6parserINS0_13boolOrDefaultEE5parseERNS0_6OptionENS_9StringRefES6_RS2_, 
                       __ZN4llvm2cl6parserINS0_13boolOrDefaultEE6anchorEv, 
                       __ZN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE6anchorEv, 
                       __ZN4llvm2cl6parserIbE5parseERNS0_6OptionENS_9StringRefES5_Rb, 
                       __ZN4llvm2cl6parserIbE6anchorEv, __ZN4llvm2cl6parserIcE6anchorEv, 
                       __ZN4llvm2cl6parserIdE5parseERNS0_6OptionENS_9StringRefES5_Rd, 
                       __ZN4llvm2cl6parserIdE6anchorEv, __ZN4llvm2cl6parserIfE5parseERNS0_6OptionENS_9StringRefES5_Rf, 
                       __ZN4llvm2cl6parserIfE6anchorEv, __ZN4llvm2cl6parserIiE5parseERNS0_6OptionENS_9StringRefES5_Ri, 
                       __ZN4llvm2cl6parserIiE6anchorEv, __ZN4llvm2cl6parserIjE5parseERNS0_6OptionENS_9StringRefES5_Rj, 
                       __ZN4llvm2cl6parserIjE6anchorEv, __ZN4llvm2cl6parserIyE5parseERNS0_6OptionENS_9StringRefES5_Ry, 
                       __ZN4llvm2cl6parserIyE6anchorEv, __ZN4llvm2cl9extrahelpC1EPKc, 
                       __ZN4llvm2cl9extrahelpC2EPKc, __ZN4llvm30ConstantFoldCompareInstructionEtPNS_8ConstantES1_, 
                       __ZN4llvm30ConstantFoldConstantExpressionEPKNS_12ConstantExprEPKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm30createAliasAnalysisCounterPassEv, __ZN4llvm30createDeadStoreEliminationPassEv, 
                       __ZN4llvm30createInstructionCombiningPassEv, __ZN4llvm30createLibCallAliasAnalysisPassEPNS_11LibCallInfoE, 
                       __ZN4llvm30createLowerExpectIntrinsicPassEv, __ZN4llvm30createObjCARCAliasAnalysisPassEv, 
                       __ZN4llvm30createScalarReplAggregatesPassEibiii, 
                       __ZN4llvm30createStripNonDebugSymbolsPassEv, __ZN4llvm30initializeAddressSanitizerPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeBranchFolderPassPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeCodePlacementOptPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeEarlyIfConverterPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeLoopInstSimplifyPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeMachineSchedulerPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeRegionOnlyViewerPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeSimplifyLibCallsPassERNS_12PassRegistryE, 
                       __ZN4llvm30initializeTargetPassConfigPassERNS_12PassRegistryE, 
                       __ZN4llvm30recursivelySimplifyInstructionEPNS_11InstructionEPKNS_10TargetDataEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeE, 
                       __ZN4llvm31ConstantFoldCompareInstOperandsEjPNS_8ConstantES1_PKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm31ConvertDebugDeclareToDebugValueEPNS_14DbgDeclareInstEPNS_8LoadInstERNS_9DIBuilderE, 
                       __ZN4llvm31ConvertDebugDeclareToDebugValueEPNS_14DbgDeclareInstEPNS_9StoreInstERNS_9DIBuilderE, 
                       __ZN4llvm31SearchForAddressOfSpecialSymbolEPKc, 
                       __ZN4llvm31createIPConstantPropagationPassEv, __ZN4llvm31createInstructionSimplifierPassEv, 
                       __ZN4llvm31createProfileMetadataLoaderPassERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, 
                       __ZN4llvm31createProfileMetadataLoaderPassEv, __ZN4llvm31initializeDominanceFrontierPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeExpandISelPseudosPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeIntervalPartitionPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeMachineLoopRangesPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeMachineModuleInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeNoPathProfileInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializePeepholeOptimizerPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializePostDomOnlyViewerPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializePostDominatorTreePassERNS_12PassRegistryE, 
                       __ZN4llvm31initializePrintFunctionPassPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeRegionOnlyPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeRegisterCoalescerPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeStackSlotColoringPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeStripDebugDeclarePassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeTailDuplicatePassPassERNS_12PassRegistryE, 
                       __ZN4llvm31initializeTargetLibraryInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm32GetPointerBaseWithConstantOffsetEPNS_5ValueERxRKNS_10TargetDataE, 
                       __ZN4llvm32createCleanupLocalDynamicTLSPassEv, __ZN4llvm32createDemoteRegisterToMemoryPassEv, 
                       __ZN4llvm32createExecutionDependencyFixPassEPKNS_19TargetRegisterClassE, 
                       __ZN4llvm32createLoopDependenceAnalysisPassEv, __ZN4llvm32createMachineFunctionPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm32createModuleDebugInfoPrinterPassEv, __ZN4llvm32createTypeBasedAliasAnalysisPassEv, 
                       __ZN4llvm32createUnifyFunctionExitNodesPassEv, __ZN4llvm32initializeBasicAliasAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeBlockExtractorPassPassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeBlockFrequencyInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeBreakCriticalEdgesPassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeCallGraphAnalysisGroupERNS_12PassRegistryE, 
                       __ZN4llvm32initializeLiveDebugVariablesPassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeLocalStackSlotPassPassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeLoopIdiomRecognizePassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeLoopStrengthReducePassERNS_12PassRegistryE, 
                       __ZN4llvm32initializePostDomOnlyPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm32initializeStripDeadDebugInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm33ConstantFoldLoadThroughGEPIndicesEPNS_8ConstantENS_8ArrayRefIS1_EE, 
                       __ZN4llvm33createPromoteMemoryToRegisterPassEv, 
                       __ZN4llvm33initializeConstantPropagationPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializeDeadInstEliminationPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializeMachineTraceMetricsPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializeMachineVerifierPassPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializeOptimalEdgeProfilerPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializePathProfileVerifierPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializeProcessImplicitDefsPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializeProfileVerifierPassPassERNS_12PassRegistryE, 
                       __ZN4llvm33initializeSingleLoopExtractorPassERNS_12PassRegistryE, 
                       __ZN4llvm34ConstantFoldInsertValueInstructionEPNS_8ConstantES1_NS_8ArrayRefIjEE, 
                       __ZN4llvm34createDefaultPBQPRegisterAllocatorEv, 
                       __ZN4llvm34initializeAliasAnalysisCounterPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeLibCallAliasAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeLowerExpectIntrinsicPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeMachineDominatorTreePassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeObjCARCAliasAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeProfileEstimatorPassPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeProfileInfoAnalysisGroupERNS_12PassRegistryE, 
                       __ZN4llvm34initializeStripNonDebugSymbolsPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeStrongPHIEliminationPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeUnpackMachineBundlesPassERNS_12PassRegistryE, 
                       __ZN4llvm34initializeUnreachableBlockElimPassERNS_12PassRegistryE, 
                       __ZN4llvm35ConstantFoldExtractValueInstructionEPNS_8ConstantENS_8ArrayRefIjEE, 
                       __ZN4llvm35initializeBranchProbabilityInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm35initializeCalculateSpillWeightsPassERNS_12PassRegistryE, 
                       __ZN4llvm35initializeGCMachineCodeAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm35initializeMachineBlockPlacementPassERNS_12PassRegistryE, 
                       __ZN4llvm35initializePathProfileLoaderPassPassERNS_12PassRegistryE, 
                       __ZN4llvm36ConstantFoldInsertElementInstructionEPNS_8ConstantES1_S1_, 
                       __ZN4llvm36ConstantFoldShuffleVectorInstructionEPNS_8ConstantES1_S1_, 
                       __ZN4llvm36createCorrelatedValuePropagationPassEv, 
                       __ZN4llvm36createX86FloatingPointStackifierPassEv, 
                       __ZN4llvm36initializeAliasAnalysisAnalysisGroupERNS_12PassRegistryE, 
                       __ZN4llvm36initializeFinalizeMachineBundlesPassERNS_12PassRegistryE, 
                       __ZN4llvm36initializeLoopDependenceAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm36initializeMachineCopyPropagationPassERNS_12PassRegistryE, 
                       __ZN4llvm36initializeModuleDebugInfoPrinterPassERNS_12PassRegistryE, 
                       __ZN4llvm36initializeTypeBasedAliasAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm36initializeUnifyFunctionExitNodesPassERNS_12PassRegistryE, 
                       __ZN4llvm37ConstantFoldExtractElementInstructionEPNS_8ConstantES1_, 
                       __ZN4llvm37createUnreachableBlockEliminationPassEv, 
                       __ZN4llvm37initializeStripDeadPrototypesPassPassERNS_12PassRegistryE, 
                       __ZN4llvm38ConstantFoldLoadThroughGEPConstantExprEPNS_8ConstantEPNS_12ConstantExprE, 
                       __ZN4llvm38createScalarEvolutionAliasAnalysisPassEv, 
                       __ZN4llvm38initializeMachinePostDominatorTreePassERNS_12PassRegistryE, 
                       __ZN4llvm38initializeMemoryDependenceAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm38initializePathProfileInfoAnalysisGroupERNS_12PassRegistryE, 
                       __ZN4llvm39TryToSimplifyUncondBranchFromEmptyBlockEPNS_10BasicBlockE, 
                       __ZN4llvm39createX86MaxStackAlignmentHeuristicPassEv, 
                       __ZN4llvm39initializeMachineBlockFrequencyInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm39initializeProfileMetadataLoaderPassPassERNS_12PassRegistryE, 
                       __ZN4llvm39initializeTwoAddressInstructionPassPassERNS_12PassRegistryE, 
                       __ZN4llvm3DIED0Ev, __ZN4llvm3DIED1Ev, __ZN4llvm3DIED2Ev, 
                       __ZN4llvm3DOT12EscapeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm3EVT19getExtendedVectorVTERNS_11LLVMContextES0_j, 
                       __ZN4llvm3EVT20getExtendedIntegerVTERNS_11LLVMContextEj, 
                       __ZN4llvm3EVT6getEVTEPNS_4TypeEb, __ZN4llvm3ISD15getSetCCInverseENS0_8CondCodeEb, 
                       __ZN4llvm3ISD16allOperandsUndefEPKNS_6SDNodeE, __ZN4llvm3ISD16isScalarToVectorEPKNS_6SDNodeE, 
                       __ZN4llvm3ISD19getSetCCOrOperationENS0_8CondCodeES1_b, 
                       __ZN4llvm3ISD20getSetCCAndOperationENS0_8CondCodeES1_b, 
                       __ZN4llvm3ISD20isBuildVectorAllOnesEPKNS_6SDNodeE, 
                       __ZN4llvm3ISD21isBuildVectorAllZerosEPKNS_6SDNodeE, 
                       __ZN4llvm3ISD23getSetCCSwappedOperandsENS0_8CondCodeE, 
                       __ZN4llvm3JIT11runFunctionEPNS_8FunctionERKNSt3__16vectorINS_12GenericValueENS3_9allocatorIS5_EEEE, 
                       __ZN4llvm3JIT12removeModuleEPNS_6ModuleE, __ZN4llvm3JIT13createEmitterERS0_PNS_16JITMemoryManagerERNS_13TargetMachineE, 
                       __ZN4llvm3JIT14getMemoryForGVEPKNS_14GlobalVariableE, 
                       __ZN4llvm3JIT14jitTheFunctionEPNS_8FunctionERKNS_10MutexGuardE, 
                       __ZN4llvm3JIT16runJITOnFunctionEPNS_8FunctionEPNS_15MachineCodeInfoE, 
                       __ZN4llvm3JIT18addPendingFunctionEPNS_8FunctionE, 
                       __ZN4llvm3JIT18updateFunctionStubEPNS_8FunctionE, 
                       __ZN4llvm3JIT20getPointerToFunctionEPNS_8FunctionE, 
                       __ZN4llvm3JIT21NotifyFunctionEmittedERKNS_8FunctionEPvmRKNS_31JITEvent_EmittedFunctionDetailsE, 
                       __ZN4llvm3JIT22addPointerToBasicBlockEPKNS_10BasicBlockEPv, 
                       __ZN4llvm3JIT22getPointerToBasicBlockEPNS_10BasicBlockE, 
                       __ZN4llvm3JIT23getOrEmitGlobalVariableEPKNS_14GlobalVariableE, 
                       __ZN4llvm3JIT24NotifyFreeingMachineCodeEPv, __ZN4llvm3JIT24RegisterJITEventListenerEPNS_16JITEventListenerE, 
                       __ZN4llvm3JIT24clearPointerToBasicBlockEPKNS_10BasicBlockE, 
                       __ZN4llvm3JIT24runJITOnFunctionUnlockedEPNS_8FunctionERKNS_10MutexGuardE, 
                       __ZN4llvm3JIT25getPointerToNamedFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb, 
                       __ZN4llvm3JIT26UnregisterJITEventListenerEPNS_16JITEventListenerE, 
                       __ZN4llvm3JIT26freeMachineCodeForFunctionEPNS_8FunctionE, 
                       __ZN4llvm3JIT26getPointerToFunctionOrStubEPNS_8FunctionE, 
                       __ZN4llvm3JIT26recompileAndRelinkFunctionEPNS_8FunctionE, 
                       __ZN4llvm3JIT9addModuleEPNS_6ModuleE, __ZN4llvm3JIT9createJITEPNS_6ModuleEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS_16JITMemoryManagerEbPNS_13TargetMachineE, 
                       __ZN4llvm3JITC1EPNS_6ModuleERNS_13TargetMachineERNS_13TargetJITInfoEPNS_16JITMemoryManagerEb, 
                       __ZN4llvm3JITC2EPNS_6ModuleERNS_13TargetMachineERNS_13TargetJITInfoEPNS_16JITMemoryManagerEb, 
                       __ZN4llvm3JITD0Ev, __ZN4llvm3JITD1Ev, __ZN4llvm3JITD2Ev, 
                       __ZN4llvm3PEI12clearAllSetsEv, __ZN4llvm3PEI13calculateSetsERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI13isReturnBlockEPNS_17MachineBasicBlockE, 
                       __ZN4llvm3PEI14calcAnticInOutEPNS_17MachineBasicBlockE, 
                       __ZN4llvm3PEI14calcAvailInOutEPNS_17MachineBasicBlockE, 
                       __ZN4llvm3PEI19calcSpillPlacementsEPNS_17MachineBasicBlockERNS_11SmallVectorIS2_Lj4EEERNS_8DenseMapIS2_NS_15SparseBitVectorILj128EEENS_12DenseMapInfoIS2_EEEE, 
                       __ZN4llvm3PEI19calculateAnticAvailERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI19clearAnticAvailSetsEv, __ZN4llvm3PEI19replaceFrameIndicesERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI20addUsesForMEMERegionEPNS_17MachineBasicBlockERNS_11SmallVectorIS2_Lj4EEE, 
                       __ZN4llvm3PEI20runOnMachineFunctionERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI21calcRestorePlacementsEPNS_17MachineBasicBlockERNS_11SmallVectorIS2_Lj4EEERNS_8DenseMapIS2_NS_15SparseBitVectorILj128EEENS_12DenseMapInfoIS2_EEEE, 
                       __ZN4llvm3PEI21getTopLevelLoopParentEPNS_11MachineLoopE, 
                       __ZN4llvm3PEI22initShrinkWrappingInfoEv, __ZN4llvm3PEI22insertPrologEpilogCodeERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI22placeSpillsAndRestoresERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI23addUsesForTopLevelLoopsERNS_11SmallVectorIPNS_17MachineBasicBlockELj4EEE, 
                       __ZN4llvm3PEI23propagateUsesAroundLoopEPNS_17MachineBasicBlockEPNS_11MachineLoopE, 
                       __ZN4llvm3PEI24getTopLevelLoopPreheaderEPNS_11MachineLoopE, 
                       __ZN4llvm3PEI24scavengeFrameVirtualRegsERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI25calculateCallsInformationERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI25placeCSRSpillsAndRestoresERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI26insertCSRSpillsAndRestoresERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI27calculateFrameObjectOffsetsERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI29calculateCalleeSavedRegistersERNS_15MachineFunctionE, 
                       __ZN4llvm3PEI2IDE, __ZN4llvm3Use3zapEPS0_PKS0_b, 
                       __ZN4llvm3Use4swapERS0_, __ZN4llvm3Use8initTagsEPS0_S1_, 
                       __ZN4llvm3X8610isZeroNodeENS_7SDValueE, __ZN4llvm3X8611CCRRegClassE, 
                       __ZN4llvm3X8611GR8RegClassE, __ZN4llvm3X8611RSTRegClassE, 
                       __ZN4llvm3X8611isCalleePopENS_11CallingConv2IDEbbb, 
                       __ZN4llvm3X8612FR32RegClassE, __ZN4llvm3X8612FR64RegClassE, 
                       __ZN4llvm3X8612GR16RegClassE, __ZN4llvm3X8612GR32RegClassE, 
                       __ZN4llvm3X8612GR64RegClassE, __ZN4llvm3X8612VR64RegClassE, 
                       __ZN4llvm3X8613FPCCRRegClassE, __ZN4llvm3X8613RFP32RegClassE, 
                       __ZN4llvm3X8613RFP64RegClassE, __ZN4llvm3X8613RFP80RegClassE, 
                       __ZN4llvm3X8613VR128RegClassE, __ZN4llvm3X8613VR256RegClassE, 
                       __ZN4llvm3X8614createFastISelERNS_20FunctionLoweringInfoEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm3X8615GR32_ADRegClassE, __ZN4llvm3X8615GR32_TCRegClassE, 
                       __ZN4llvm3X8615GR64_TCRegClassE, __ZN4llvm3X8617DEBUG_REGRegClassE, 
                       __ZN4llvm3X8617GR16_ABCDRegClassE, __ZN4llvm3X8617GR32_ABCDRegClassE, 
                       __ZN4llvm3X8617GR32_NOAXRegClassE, __ZN4llvm3X8617GR32_NOSPRegClassE, 
                       __ZN4llvm3X8617GR64_ABCDRegClassE, __ZN4llvm3X8617GR64_NOSPRegClassE, 
                       __ZN4llvm3X8617GR8_NOREXRegClassE, __ZN4llvm3X8618GR16_NOREXRegClassE, 
                       __ZN4llvm3X8618GR32_NOREXRegClassE, __ZN4llvm3X8618GR64_NOREXRegClassE, 
                       __ZN4llvm3X8618GR64_TCW64RegClassE, __ZN4llvm3X8618GR8_ABCD_HRegClassE, 
                       __ZN4llvm3X8618GR8_ABCD_LRegClassE, __ZN4llvm3X8618getCondFromCMovOpcEj, 
                       __ZN4llvm3X8618isVINSERTF128IndexEPNS_6SDNodeE, 
                       __ZN4llvm3X8619CONTROL_REGRegClassE, __ZN4llvm3X8619SEGMENT_REGRegClassE, 
                       __ZN4llvm3X8619isVEXTRACTF128IndexEPNS_6SDNodeE, 
                       __ZN4llvm3X8621GetCondBranchFromCondENS0_8CondCodeE, 
                       __ZN4llvm3X8623GR32_NOREX_NOSPRegClassE, __ZN4llvm3X8623GR64_NOREX_NOSPRegClassE, 
                       __ZN4llvm3X8626GR64_with_sub_8bitRegClassE, __ZN4llvm3X8626GetOppositeBranchConditionENS0_8CondCodeE, 
                       __ZN4llvm3X8628isOffsetSuitableForCodeModelExNS_9CodeModel5ModelEb, 
                       __ZN4llvm3X8629GR32_AD_and_GR32_NOAXRegClassE, __ZN4llvm3X8629GR32_NOAX_and_GR32_TCRegClassE, 
                       __ZN4llvm3X8629GR64_NOSP_and_GR64_TCRegClassE, __ZN4llvm3X8629getInsertVINSERTF128ImmediateEPNS_6SDNodeE, 
                       __ZN4llvm3X8630GR64_NOREX_and_GR64_TCRegClassE, 
                       __ZN4llvm3X8631GR32_ABCD_and_GR32_NOAXRegClassE, 
                       __ZN4llvm3X8631GR32_NOAX_and_GR32_NOSPRegClassE, 
                       __ZN4llvm3X8631getExtractVEXTRACTF128ImmediateEPNS_6SDNodeE, 
                       __ZN4llvm3X8632GR32_NOAX_and_GR32_NOREXRegClassE, 
                       __ZN4llvm3X8635GR64_NOREX_NOSP_and_GR64_TCRegClassE, 
                       __ZN4llvm3X8637GR32_NOAX_and_GR32_NOREX_NOSPRegClassE, 
                       __ZN4llvm3X8638GR64_with_sub_32bit_in_GR32_ADRegClassE, 
                       __ZN4llvm3X8638GR64_with_sub_32bit_in_GR32_TCRegClassE, 
                       __ZN4llvm3X8640GR64_with_sub_32bit_in_GR32_NOAXRegClassE, 
                       __ZN4llvm3X8641GR64_with_sub_16bit_in_GR16_NOREXRegClassE, 
                       __ZN4llvm3X8652GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAXRegClassE, 
                       __ZN4llvm3X8652GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAXRegClassE, 
                       __ZN4llvm3X8652GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TCRegClassE, 
                       __ZN4llvm3X8654GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAXRegClassE, 
                       __ZN4llvm3X8654GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSPRegClassE, 
                       __ZN4llvm3X8655GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAXRegClassE, 
                       __ZN4llvm3X8655GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXRegClassE, 
                       __ZN4llvm3X8660GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSPRegClassE, 
                       __ZN4llvm3X8667GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXRegClassE, 
                       __ZN4llvm3sys11MemoryFenceEv, __ZN4llvm3sys11RWMutexImpl14reader_acquireEv, 
                       __ZN4llvm3sys11RWMutexImpl14reader_releaseEv, __ZN4llvm3sys11RWMutexImpl14writer_acquireEv, 
                       __ZN4llvm3sys11RWMutexImpl14writer_releaseEv, __ZN4llvm3sys11RWMutexImplC1Ev, 
                       __ZN4llvm3sys11RWMutexImplC2Ev, __ZN4llvm3sys11RWMutexImplD1Ev, 
                       __ZN4llvm3sys11RWMutexImplD2Ev, __ZN4llvm3sys13PathSeparatorE, 
                       __ZN4llvm3sys14CompareAndSwapEPVjjj, __ZN4llvm3sys14DynamicLibrary18getAddressOfSymbolEPKc, 
                       __ZN4llvm3sys14DynamicLibrary19getPermanentLibraryEPKcPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm3sys14DynamicLibrary24SearchForAddressOfSymbolEPKc, 
                       __ZN4llvm3sys14DynamicLibrary7InvalidE, __ZN4llvm3sys14DynamicLibrary9AddSymbolENS_9StringRefEPv, 
                       __ZN4llvm3sys14getHostCPUNameEv, __ZN4llvm3sys15AtomicDecrementEPVj, 
                       __ZN4llvm3sys15AtomicIncrementEPVj, __ZN4llvm3sys15ThreadLocalImpl11getInstanceEv, 
                       __ZN4llvm3sys15ThreadLocalImpl11setInstanceEPKv, 
                       __ZN4llvm3sys15ThreadLocalImpl14removeInstanceEv, 
                       __ZN4llvm3sys15ThreadLocalImplC1Ev, __ZN4llvm3sys15ThreadLocalImplC2Ev, 
                       __ZN4llvm3sys15ThreadLocalImplD0Ev, __ZN4llvm3sys15ThreadLocalImplD1Ev, 
                       __ZN4llvm3sys15ThreadLocalImplD2Ev, __ZN4llvm3sys15hasDisassemblerEv, 
                       __ZN4llvm3sys16AddSignalHandlerEPFvPvES1_, __ZN4llvm3sys16IdentifyFileTypeEPKcj, 
                       __ZN4llvm3sys17RunningOnValgrindEv, __ZN4llvm3sys17disassembleBufferEPhmy, 
                       __ZN4llvm3sys18RemoveFileOnSignalERKNS0_4PathEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm3sys18getHostCPUFeaturesERNS_9StringMapIbNS_15MallocAllocatorEEE, 
                       __ZN4llvm3sys20RunInterruptHandlersEv, __ZN4llvm3sys20SetInterruptFunctionEPFvvE, 
                       __ZN4llvm3sys22DontRemoveFileOnSignalERKNS0_4PathE, 
                       __ZN4llvm3sys22getDefaultTargetTripleEv, __ZN4llvm3sys27ValgrindDiscardTranslationsEPKvm, 
                       __ZN4llvm3sys28PrintStackTraceOnErrorSignalEv, __ZN4llvm3sys2fs10equivalentENS1_11file_statusES2_, 
                       __ZN4llvm3sys2fs10equivalentERKNS_5TwineES4_Rb, 
                       __ZN4llvm3sys2fs10is_symlinkENS1_11file_statusE, 
                       __ZN4llvm3sys2fs10is_symlinkERKNS_5TwineERb, __ZN4llvm3sys2fs10remove_allERKNS_5TwineERj, 
                       __ZN4llvm3sys2fs11permissionsERKNS_5TwineENS1_5permsE, 
                       __ZN4llvm3sys2fs11resize_fileERKNS_5TwineEy, __ZN4llvm3sys2fs11unique_fileERKNS_5TwineERiRNS_15SmallVectorImplIcEEbj, 
                       __ZN4llvm3sys2fs12current_pathERNS_15SmallVectorImplIcEE, 
                       __ZN4llvm3sys2fs12is_directoryENS1_11file_statusE, 
                       __ZN4llvm3sys2fs12is_directoryERKNS_5TwineERb, __ZN4llvm3sys2fs12status_knownENS1_11file_statusE, 
                       __ZN4llvm3sys2fs13make_absoluteERNS_15SmallVectorImplIcEE, 
                       __ZN4llvm3sys2fs14create_symlinkERKNS_5TwineES4_, 
                       __ZN4llvm3sys2fs14identify_magicENS_9StringRefE, 
                       __ZN4llvm3sys2fs14identify_magicERKNS_5TwineERNS1_10file_magicE, 
                       __ZN4llvm3sys2fs14map_file_pagesERKNS_5TwineExmbRPv, 
                       __ZN4llvm3sys2fs15directory_entry16replace_filenameERKNS_5TwineENS1_11file_statusE, 
                       __ZN4llvm3sys2fs15is_regular_fileENS1_11file_statusE, 
                       __ZN4llvm3sys2fs15is_regular_fileERKNS_5TwineERb, 
                       __ZN4llvm3sys2fs16create_directoryERKNS_5TwineERb, 
                       __ZN4llvm3sys2fs16create_hard_linkERKNS_5TwineES4_, 
                       __ZN4llvm3sys2fs16unmap_file_pagesEPvm, __ZN4llvm3sys2fs18create_directoriesERKNS_5TwineERb, 
                       __ZN4llvm3sys2fs18mapped_file_region4initEiy, __ZN4llvm3sys2fs18mapped_file_region9alignmentEv, 
                       __ZN4llvm3sys2fs18mapped_file_regionC1ERKNS_5TwineENS2_7mapmodeEyyRNS_10error_codeE, 
                       __ZN4llvm3sys2fs18mapped_file_regionC1EiNS2_7mapmodeEyyRNS_10error_codeE, 
                       __ZN4llvm3sys2fs18mapped_file_regionC2ERKNS_5TwineENS2_7mapmodeEyyRNS_10error_codeE, 
                       __ZN4llvm3sys2fs18mapped_file_regionC2EiNS2_7mapmodeEyyRNS_10error_codeE, 
                       __ZN4llvm3sys2fs18mapped_file_regionD1Ev, __ZN4llvm3sys2fs18mapped_file_regionD2Ev, 
                       __ZN4llvm3sys2fs6detail27directory_iterator_destructERNS2_12DirIterStateE, 
                       __ZN4llvm3sys2fs6detail28directory_iterator_constructERNS2_12DirIterStateENS_9StringRefE, 
                       __ZN4llvm3sys2fs6detail28directory_iterator_incrementERNS2_12DirIterStateE, 
                       __ZN4llvm3sys2fs6existsENS1_11file_statusE, __ZN4llvm3sys2fs6existsERKNS_5TwineERb, 
                       __ZN4llvm3sys2fs6removeERKNS_5TwineERb, __ZN4llvm3sys2fs6renameERKNS_5TwineES4_, 
                       __ZN4llvm3sys2fs6statusERKNS_5TwineERNS1_11file_statusE, 
                       __ZN4llvm3sys2fs8is_otherENS1_11file_statusE, __ZN4llvm3sys2fs9copy_fileERKNS_5TwineES4_NS1_11copy_optionE, 
                       __ZN4llvm3sys2fs9file_sizeERKNS_5TwineERy, __ZN4llvm3sys2fs9get_magicERKNS_5TwineEjRNS_15SmallVectorImplIcEE, 
                       __ZN4llvm3sys2fs9has_magicERKNS_5TwineES4_Rb, __ZN4llvm3sys4Path10isAbsoluteEPKcj, 
                       __ZN4llvm3sys4Path10makeUniqueEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path11FindLibraryERNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path11eraseSuffixEv, __ZN4llvm3sys4Path12GetDLLSuffixEv, 
                       __ZN4llvm3sys4Path12GetEXESuffixEv, __ZN4llvm3sys4Path12appendSuffixENS_9StringRefE, 
                       __ZN4llvm3sys4Path14MapInFilePagesEimx, __ZN4llvm3sys4Path14UnMapFilePagesEPKcm, 
                       __ZN4llvm3sys4Path14eraseComponentEv, __ZN4llvm3sys4Path15appendComponentENS_9StringRefE, 
                       __ZN4llvm3sys4Path16GetRootDirectoryEv, __ZN4llvm3sys4Path16createFileOnDiskEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path16renamePathOnDiskERKS1_PNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path17GetMainExecutableEPKcPv, __ZN4llvm3sys4Path18makeReadableOnDiskEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path19GetCurrentDirectoryEv, __ZN4llvm3sys4Path19makeWriteableOnDiskEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path20GetUserHomeDirectoryEv, __ZN4llvm3sys4Path20makeExecutableOnDiskEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path21GetSystemLibraryPathsERNSt3__16vectorIS1_NS2_9allocatorIS1_EEEE, 
                       __ZN4llvm3sys4Path21GetTemporaryDirectoryEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path21createDirectoryOnDiskEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path22GetBitcodeLibraryPathsERNSt3__16vectorIS1_NS2_9allocatorIS1_EEEE, 
                       __ZN4llvm3sys4Path25createTemporaryFileOnDiskEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys4Path3setENS_9StringRefE, __ZN4llvm3sys4PathC1ENS_9StringRefE, 
                       __ZN4llvm3sys4PathC1EPKcj, __ZN4llvm3sys4PathC2ENS_9StringRefE, 
                       __ZN4llvm3sys4PathC2EPKcj, __ZN4llvm3sys4PathaSENS_9StringRefE, 
                       __ZN4llvm3sys4path11is_absoluteERKNS_5TwineE, __ZN4llvm3sys4path11is_relativeERKNS_5TwineE, 
                       __ZN4llvm3sys4path11parent_pathENS_9StringRefE, 
                       __ZN4llvm3sys4path12has_filenameERKNS_5TwineE, __ZN4llvm3sys4path12is_separatorEc, 
                       __ZN4llvm3sys4path13has_extensionERKNS_5TwineE, 
                       __ZN4llvm3sys4path13has_root_nameERKNS_5TwineE, 
                       __ZN4llvm3sys4path13has_root_pathERKNS_5TwineE, 
                       __ZN4llvm3sys4path13relative_pathENS_9StringRefE, 
                       __ZN4llvm3sys4path14const_iteratormmEv, __ZN4llvm3sys4path14const_iteratorppEv, 
                       __ZN4llvm3sys4path14root_directoryENS_9StringRefE, 
                       __ZN4llvm3sys4path15has_parent_pathERKNS_5TwineE, 
                       __ZN4llvm3sys4path15remove_filenameERNS_15SmallVectorImplIcEE, 
                       __ZN4llvm3sys4path17has_relative_pathERKNS_5TwineE, 
                       __ZN4llvm3sys4path17replace_extensionERNS_15SmallVectorImplIcEERKNS_5TwineE, 
                       __ZN4llvm3sys4path18has_root_directoryERKNS_5TwineE, 
                       __ZN4llvm3sys4path21system_temp_directoryEbRNS_15SmallVectorImplIcEE, 
                       __ZN4llvm3sys4path3endENS_9StringRefE, __ZN4llvm3sys4path4stemENS_9StringRefE, 
                       __ZN4llvm3sys4path5beginENS_9StringRefE, __ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEENS1_14const_iteratorES5_, 
                       __ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_, 
                       __ZN4llvm3sys4path6nativeERKNS_5TwineERNS_15SmallVectorImplIcEE, 
                       __ZN4llvm3sys4path8filenameENS_9StringRefE, __ZN4llvm3sys4path8has_stemERKNS_5TwineE, 
                       __ZN4llvm3sys4path9extensionENS_9StringRefE, __ZN4llvm3sys4path9root_nameENS_9StringRefE, 
                       __ZN4llvm3sys4path9root_pathENS_9StringRefE, __ZN4llvm3sys6Memory10ReleaseRWXERNS0_11MemoryBlockEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm3sys6Memory11AllocateRWXEmPKNS0_11MemoryBlockEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE, 
                       __ZN4llvm3sys6Memory11setWritableERNS0_11MemoryBlockEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm3sys6Memory13setExecutableERNS0_11MemoryBlockEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm3sys6Memory16setRangeWritableEPKvm, __ZN4llvm3sys6Memory18setRangeExecutableEPKvm, 
                       __ZN4llvm3sys6Memory19protectMappedMemoryERKNS0_11MemoryBlockEj, 
                       __ZN4llvm3sys6Memory19releaseMappedMemoryERNS0_11MemoryBlockE, 
                       __ZN4llvm3sys6Memory20allocateMappedMemoryEmPKNS0_11MemoryBlockEjRNS_10error_codeE, 
                       __ZN4llvm3sys6Memory26InvalidateInstructionCacheEPKvm, 
                       __ZN4llvm3sys6locale11columnWidthENS_9StringRefE, 
                       __ZN4llvm3sys6locale7isPrintEi, __ZN4llvm3sys7Process10OutputBoldEb, 
                       __ZN4llvm3sys7Process10ResetColorEv, __ZN4llvm3sys7Process11GetPageSizeEv, 
                       __ZN4llvm3sys7Process11OutputColorEcbb, __ZN4llvm3sys7Process12GetTimeUsageERNS0_9TimeValueES3_S3_, 
                       __ZN4llvm3sys7Process13OutputReverseEv, __ZN4llvm3sys7Process14GetMallocUsageEv, 
                       __ZN4llvm3sys7Process15ColorNeedsFlushEv, __ZN4llvm3sys7Process15GetRandomNumberEv, 
                       __ZN4llvm3sys7Process16GetCurrentUserIdEv, __ZN4llvm3sys7Process16PreventCoreFilesEv, 
                       __ZN4llvm3sys7Process17GetCurrentGroupIdEv, __ZN4llvm3sys7Process18StandardErrColumnsEv, 
                       __ZN4llvm3sys7Process18StandardOutColumnsEv, __ZN4llvm3sys7Process19GetTotalMemoryUsageEv, 
                       __ZN4llvm3sys7Process20StandardErrHasColorsEv, __ZN4llvm3sys7Process20StandardOutHasColorsEv, 
                       __ZN4llvm3sys7Process21StandardInIsUserInputEv, 
                       __ZN4llvm3sys7Process22StandardErrIsDisplayedEv, 
                       __ZN4llvm3sys7Process22StandardOutIsDisplayedEv, 
                       __ZN4llvm3sys7Process23FileDescriptorHasColorsEi, 
                       __ZN4llvm3sys7Process25FileDescriptorIsDisplayedEi, 
                       __ZN4llvm3sys7Program13ExecuteNoWaitERKNS0_4PathEPPKcS7_PPS3_jPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE, 
                       __ZN4llvm3sys7Program14ExecuteAndWaitERKNS0_4PathEPPKcS7_PPS3_jjPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE, 
                       __ZN4llvm3sys7Program17FindProgramByNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys7Program19ChangeStdinToBinaryEv, __ZN4llvm3sys7Program20ChangeStderrToBinaryEv, 
                       __ZN4llvm3sys7Program20ChangeStdoutToBinaryEv, __ZN4llvm3sys7Program4KillEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm3sys7Program4WaitERKNS0_4PathEjPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE, 
                       __ZN4llvm3sys7Program7ExecuteERKNS0_4PathEPPKcS7_PPS3_jPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE, 
                       __ZN4llvm3sys7ProgramC1Ev, __ZN4llvm3sys7ProgramC2Ev, 
                       __ZN4llvm3sys7ProgramD1Ev, __ZN4llvm3sys7ProgramD2Ev, 
                       __ZN4llvm3sys8CopyFileERKNS0_4PathES3_PNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm3sys8StrErrorEi, __ZN4llvm3sys8StrErrorEv, 
                       __ZN4llvm3sys9AtomicAddEPVjj, __ZN4llvm3sys9AtomicDivEPVjj, 
                       __ZN4llvm3sys9AtomicMulEPVjj, __ZN4llvm3sys9MutexImpl10tryacquireEv, 
                       __ZN4llvm3sys9MutexImpl7acquireEv, __ZN4llvm3sys9MutexImpl7releaseEv, 
                       __ZN4llvm3sys9MutexImplC1Eb, __ZN4llvm3sys9MutexImplC2Eb, 
                       __ZN4llvm3sys9MutexImplD1Ev, __ZN4llvm3sys9MutexImplD2Ev, 
                       __ZN4llvm3sys9TimeValue13PosixZeroTimeE, __ZN4llvm3sys9TimeValue13Win32ZeroTimeE, 
                       __ZN4llvm3sys9TimeValue3nowEv, __ZN4llvm3sys9TimeValue7MaxTimeE, 
                       __ZN4llvm3sys9TimeValue7MinTimeE, __ZN4llvm3sys9TimeValue8ZeroTimeE, 
                       __ZN4llvm3sys9TimeValue9normalizeEv, __ZN4llvm40initializeCorrelatedValuePropagationPassERNS_12PassRegistryE, 
                       __ZN4llvm40initializeDeadMachineInstructionElimPassERNS_12PassRegistryE, 
                       __ZN4llvm40initializeMachineBlockPlacementStatsPassERNS_12PassRegistryE, 
                       __ZN4llvm40initializeMachineFunctionPrinterPassPassERNS_12PassRegistryE, 
                       __ZN4llvm41initializeUnreachableMachineBlockElimPassERNS_12PassRegistryE, 
                       __ZN4llvm42RecursivelyDeleteTriviallyDeadInstructionsEPNS_5ValueEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm42initializeMachineBranchProbabilityInfoPassERNS_12PassRegistryE, 
                       __ZN4llvm42initializeScalarEvolutionAliasAnalysisPassERNS_12PassRegistryE, 
                       __ZN4llvm4Pass10createPassEPKv, __ZN4llvm4Pass11setResolverEPNS_16AnalysisResolverE, 
                       __ZN4llvm4Pass13releaseMemoryEv, __ZN4llvm4Pass14lookupPassInfoENS_9StringRefE, 
                       __ZN4llvm4Pass14lookupPassInfoEPKv, __ZN4llvm4Pass17dumpPassStructureEj, 
                       __ZN4llvm4Pass18getAsImmutablePassEv, __ZN4llvm4Pass18getAsPMDataManagerEv, 
                       __ZN4llvm4Pass18preparePassManagerERNS_7PMStackE, 
                       __ZN4llvm4Pass26getAdjustedAnalysisPointerEPKv, 
                       __ZN4llvm4PassD0Ev, __ZN4llvm4PassD1Ev, __ZN4llvm4PassD2Ev, 
                       __ZN4llvm4Type10getFP128TyERNS_11LLVMContextE, __ZN4llvm4Type10getFloatTyERNS_11LLVMContextE, 
                       __ZN4llvm4Type10getInt16TyERNS_11LLVMContextE, __ZN4llvm4Type10getInt32TyERNS_11LLVMContextE, 
                       __ZN4llvm4Type10getInt64TyERNS_11LLVMContextE, __ZN4llvm4Type10getLabelTyERNS_11LLVMContextE, 
                       __ZN4llvm4Type11getDoubleTyERNS_11LLVMContextE, 
                       __ZN4llvm4Type12getHalfPtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type12getInt1PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type12getIntNPtrTyERNS_11LLVMContextEjj, 
                       __ZN4llvm4Type12getPointerToEj, __ZN4llvm4Type12getX86_MMXTyERNS_11LLVMContextE, 
                       __ZN4llvm4Type13getFP128PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type13getFloatPtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type13getInt16PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type13getInt32PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type13getInt64PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type13getMetadataTyERNS_11LLVMContextE, 
                       __ZN4llvm4Type13getScalarTypeEv, __ZN4llvm4Type13getX86_FP80TyERNS_11LLVMContextE, 
                       __ZN4llvm4Type14getDoublePtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type14getPPC_FP128TyERNS_11LLVMContextE, 
                       __ZN4llvm4Type15getX86_MMXPtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type16getPrimitiveTypeERNS_11LLVMContextENS0_6TypeIDE, 
                       __ZN4llvm4Type16getX86_FP80PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type17getPPC_FP128PtrTyERNS_11LLVMContextEj, 
                       __ZN4llvm4Type19getScalarSizeInBitsEv, __ZN4llvm4Type9getHalfTyERNS_11LLVMContextE, 
                       __ZN4llvm4Type9getInt1TyERNS_11LLVMContextE, __ZN4llvm4Type9getInt8TyERNS_11LLVMContextE, 
                       __ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj, __ZN4llvm4Type9getVoidTyERNS_11LLVMContextE, 
                       __ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_, 
                       __ZN4llvm4User6anchorEv, __ZN4llvm4UserdlEPv, __ZN4llvm4UsernwEmj, 
                       __ZN4llvm4dbgsEv, __ZN4llvm4errsEv, __ZN4llvm4outsEv, 
                       __ZN4llvm4yaml10dumpTokensENS_9StringRefERNS_11raw_ostreamE, 
                       __ZN4llvm4yaml10scanTokensENS_9StringRefE, __ZN4llvm4yaml11MappingNode9incrementEv, 
                       __ZN4llvm4yaml12KeyValueNode6getKeyEv, __ZN4llvm4yaml12KeyValueNode8getValueEv, 
                       __ZN4llvm4yaml12SequenceNode9incrementEv, __ZN4llvm4yaml4Node12getAllocatorEv, 
                       __ZN4llvm4yaml4Node14parseBlockNodeEv, __ZN4llvm4yaml4Node7getNextEv, 
                       __ZN4llvm4yaml4Node8peekNextEv, __ZN4llvm4yaml4NodeC1EjRNS_9OwningPtrINS0_8DocumentEEENS_9StringRefE, 
                       __ZN4llvm4yaml4NodeC2EjRNS_9OwningPtrINS0_8DocumentEEENS_9StringRefE, 
                       __ZN4llvm4yaml6Stream10printErrorEPNS0_4NodeERKNS_5TwineE, 
                       __ZN4llvm4yaml6Stream19handleYAMLDirectiveERKNS0_5TokenE, 
                       __ZN4llvm4yaml6Stream3endEv, __ZN4llvm4yaml6Stream4skipEv, 
                       __ZN4llvm4yaml6Stream5beginEv, __ZN4llvm4yaml6Stream6failedEv, 
                       __ZN4llvm4yaml6StreamC1ENS_9StringRefERNS_9SourceMgrE, 
                       __ZN4llvm4yaml6StreamC2ENS_9StringRefERNS_9SourceMgrE, 
                       __ZN4llvm4yaml6StreamD1Ev, __ZN4llvm4yaml6StreamD2Ev, 
                       __ZN4llvm4yaml6escapeENS_9StringRefE, __ZN4llvm4yaml7Scanner10rollIndentEiNS0_5Token9TokenKindENS_14ilist_iteratorIS2_EE, 
                       __ZN4llvm4yaml7Scanner10skip_whileEMS1_FPKcS3_ES3_, 
                       __ZN4llvm4yaml7Scanner12skip_b_breakEPKc, __ZN4llvm4yaml7Scanner12skip_nb_charEPKc, 
                       __ZN4llvm4yaml7Scanner12skip_ns_charEPKc, __ZN4llvm4yaml7Scanner12skip_s_whiteEPKc, 
                       __ZN4llvm4yaml7Scanner12unrollIndentEi, __ZN4llvm4yaml7Scanner13scanDirectiveEv, 
                       __ZN4llvm4yaml7Scanner13scanFlowEntryEv, __ZN4llvm4yaml7Scanner13scanStreamEndEv, 
                       __ZN4llvm4yaml7Scanner14isBlankOrBreakEPKc, __ZN4llvm4yaml7Scanner14scanBlockEntryEv, 
                       __ZN4llvm4yaml7Scanner14scanFlowScalarEb, __ZN4llvm4yaml7Scanner15fetchMoreTokensEv, 
                       __ZN4llvm4yaml7Scanner15scanBlockScalarEb, __ZN4llvm4yaml7Scanner15scanPlainScalarEv, 
                       __ZN4llvm4yaml7Scanner15scanStreamStartEv, __ZN4llvm4yaml7Scanner15scanToNextTokenEv, 
                       __ZN4llvm4yaml7Scanner16scan_ns_uri_charEv, __ZN4llvm4yaml7Scanner17scanAliasOrAnchorEb, 
                       __ZN4llvm4yaml7Scanner21scanDocumentIndicatorEb, 
                       __ZN4llvm4yaml7Scanner21scanFlowCollectionEndEb, 
                       __ZN4llvm4yaml7Scanner22saveSimpleKeyCandidateENS_14ilist_iteratorINS0_5TokenEEEjb, 
                       __ZN4llvm4yaml7Scanner22scan_ns_plain_one_lineEv, 
                       __ZN4llvm4yaml7Scanner23scanFlowCollectionStartEb, 
                       __ZN4llvm4yaml7Scanner30removeStaleSimpleKeyCandidatesEv, 
                       __ZN4llvm4yaml7Scanner36removeSimpleKeyCandidatesOnFlowLevelEj, 
                       __ZN4llvm4yaml7Scanner4skipEj, __ZN4llvm4yaml7Scanner7consumeEj, 
                       __ZN4llvm4yaml7Scanner7getNextEv, __ZN4llvm4yaml7Scanner7scanKeyEv, 
                       __ZN4llvm4yaml7Scanner7scanTagEv, __ZN4llvm4yaml7Scanner8peekNextEv, 
                       __ZN4llvm4yaml7Scanner9scanValueEv, __ZN4llvm4yaml7ScannerC1ENS_9StringRefERNS_9SourceMgrE, 
                       __ZN4llvm4yaml7ScannerC2ENS_9StringRefERNS_9SourceMgrE, 
                       __ZN4llvm4yaml8Document11expectTokenEi, __ZN4llvm4yaml8Document14parseBlockNodeEv, 
                       __ZN4llvm4yaml8Document15parseDirectivesEv, __ZN4llvm4yaml8Document4skipEv, 
                       __ZN4llvm4yaml8Document7getNextEv, __ZN4llvm4yaml8Document8peekNextEv, 
                       __ZN4llvm4yaml8DocumentC1ERNS0_6StreamE, __ZN4llvm4yaml8DocumentC2ERNS0_6StreamE, 
                       __ZN4llvm5APInt10fromStringEjNS_9StringRefEh, __ZN4llvm5APInt10tcClearBitEPyj, 
                       __ZN4llvm5APInt10tcMultiplyEPyPKyS3_j, __ZN4llvm5APInt10tcSubtractEPyPKyyj, 
                       __ZN4llvm5APInt11tcIncrementEPyj, __ZN4llvm5APInt11tcShiftLeftEPyjj, 
                       __ZN4llvm5APInt12initSlowCaseERKS0_, __ZN4llvm5APInt12initSlowCaseEjyb, 
                       __ZN4llvm5APInt12tcComplementEPyj, __ZN4llvm5APInt12tcExtractBitEPKyj, 
                       __ZN4llvm5APInt12tcShiftRightEPyjj, __ZN4llvm5APInt13getBitsNeededENS_9StringRefEh, 
                       __ZN4llvm5APInt13initFromArrayENS_8ArrayRefIyEE, 
                       __ZN4llvm5APInt14AssignSlowCaseERKS0_, __ZN4llvm5APInt14tcFullMultiplyEPyPKyS3_jj, 
                       __ZN4llvm5APInt14tcMultiplyPartEPyPKyyyjjb, __ZN4llvm5APInt25tcSetLeastSignificantBitsEPyjj, 
                       __ZN4llvm5APInt4tcOrEPyPKyj, __ZN4llvm5APInt5tcAddEPyPKyyj, 
                       __ZN4llvm5APInt5tcAndEPyPKyj, __ZN4llvm5APInt5tcLSBEPKyj, 
                       __ZN4llvm5APInt5tcMSBEPKyj, __ZN4llvm5APInt5tcSetEPyyj, 
                       __ZN4llvm5APInt5tcXorEPyPKyj, __ZN4llvm5APInt6divideES0_jRKS0_jPS0_S3_, 
                       __ZN4llvm5APInt6setBitEj, __ZN4llvm5APInt7flipBitEj, 
                       __ZN4llvm5APInt7udivremERKS0_S2_RS0_S3_, __ZN4llvm5APInt8clearBitEj, 
                       __ZN4llvm5APInt8tcAssignEPyPKyj, __ZN4llvm5APInt8tcDivideEPyPKyS1_S1_j, 
                       __ZN4llvm5APInt8tcIsZeroEPKyj, __ZN4llvm5APInt8tcNegateEPyj, 
                       __ZN4llvm5APInt8tcSetBitEPyj, __ZN4llvm5APInt9tcCompareEPKyS2_j, 
                       __ZN4llvm5APInt9tcExtractEPyjPKyjj, __ZN4llvm5APIntC1EjNS_8ArrayRefIyEE, 
                       __ZN4llvm5APIntC1EjNS_9StringRefEh, __ZN4llvm5APIntC1EjjPKy, 
                       __ZN4llvm5APIntC2EjNS_8ArrayRefIyEE, __ZN4llvm5APIntC2EjNS_9StringRefEh, 
                       __ZN4llvm5APIntC2EjjPKy, __ZN4llvm5APIntaNERKS0_, 
                       __ZN4llvm5APIntaSEy, __ZN4llvm5APInteOERKS0_, __ZN4llvm5APIntmIERKS0_, 
                       __ZN4llvm5APIntmLERKS0_, __ZN4llvm5APIntmmEv, __ZN4llvm5APIntoRERKS0_, 
                       __ZN4llvm5APIntpLERKS0_, __ZN4llvm5APIntppEv, __ZN4llvm5IsInfEd, 
                       __ZN4llvm5IsInfEf, __ZN4llvm5IsNANEd, __ZN4llvm5IsNANEf, 
                       __ZN4llvm5MCELF10GetBindingERKNS_12MCSymbolDataE, 
                       __ZN4llvm5MCELF10SetBindingERNS_12MCSymbolDataEj, 
                       __ZN4llvm5MCELF13GetVisibilityERNS_12MCSymbolDataE, 
                       __ZN4llvm5MCELF13SetVisibilityERNS_12MCSymbolDataEj, 
                       __ZN4llvm5MCELF7GetTypeERKNS_12MCSymbolDataE, __ZN4llvm5MCELF7SetTypeERNS_12MCSymbolDataEj, 
                       __ZN4llvm5RTLIB10getFPROUNDENS_3EVTES1_, __ZN4llvm5RTLIB11getFPTOSINTENS_3EVTES1_, 
                       __ZN4llvm5RTLIB11getFPTOUINTENS_3EVTES1_, __ZN4llvm5RTLIB11getSINTTOFPENS_3EVTES1_, 
                       __ZN4llvm5RTLIB11getUINTTOFPENS_3EVTES1_, __ZN4llvm5RTLIB8getFPEXTENS_3EVTES1_, 
                       __ZN4llvm5Regex3subENS_9StringRefES1_PNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZN4llvm5Regex5matchENS_9StringRefEPNS_15SmallVectorImplIS1_EE, 
                       __ZN4llvm5Regex7isValidERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm5RegexC1ENS_9StringRefEj, __ZN4llvm5RegexC2ENS_9StringRefEj, 
                       __ZN4llvm5RegexD1Ev, __ZN4llvm5RegexD2Ev, __ZN4llvm5SUnit10removePredERKNS_4SDepE, 
                       __ZN4llvm5SUnit12ComputeDepthEv, __ZN4llvm5SUnit13ComputeHeightEv, 
                       __ZN4llvm5SUnit13setDepthDirtyEv, __ZN4llvm5SUnit14setHeightDirtyEv, 
                       __ZN4llvm5SUnit17setDepthToAtLeastEj, __ZN4llvm5SUnit18setHeightToAtLeastEj, 
                       __ZN4llvm5SUnit7addPredERKNS_4SDepE, __ZN4llvm5Timer10startTimerEv, 
                       __ZN4llvm5Timer4initENS_9StringRefE, __ZN4llvm5Timer4initENS_9StringRefERNS_10TimerGroupE, 
                       __ZN4llvm5Timer9stopTimerEv, __ZN4llvm5TimerD1Ev, 
                       __ZN4llvm5TimerD2Ev, __ZN4llvm5Value16DoPHITranslationEPKNS_10BasicBlockES3_, 
                       __ZN4llvm5Value17stripPointerCastsEv, __ZN4llvm5Value18replaceAllUsesWithEPS0_, 
                       __ZN4llvm5Value20stripInBoundsOffsetsEv, __ZN4llvm5Value28stripInBoundsConstantOffsetsEv, 
                       __ZN4llvm5Value7setNameERKNS_5TwineE, __ZN4llvm5Value8takeNameEPS0_, 
                       __ZN4llvm5ValueC1EPNS_4TypeEj, __ZN4llvm5ValueC2EPNS_4TypeEj, 
                       __ZN4llvm5ValueD0Ev, __ZN4llvm5ValueD1Ev, __ZN4llvm5ValueD2Ev, 
                       __ZN4llvm5dwarf10CaseStringEj, __ZN4llvm5dwarf13MacinfoStringEj, 
                       __ZN4llvm5dwarf14ChildrenStringEj, __ZN4llvm5dwarf14LanguageStringEj, 
                       __ZN4llvm5dwarf15AttributeStringEj, __ZN4llvm5dwarf15CallFrameStringEj, 
                       __ZN4llvm5dwarf15EndianityStringEj, __ZN4llvm5dwarf16ArrayOrderStringEj, 
                       __ZN4llvm5dwarf16ConventionStringEj, __ZN4llvm5dwarf16InlineCodeStringEj, 
                       __ZN4llvm5dwarf16LNExtendedStringEj, __ZN4llvm5dwarf16LNStandardStringEj, 
                       __ZN4llvm5dwarf16VirtualityStringEj, __ZN4llvm5dwarf16VisibilityStringEj, 
                       __ZN4llvm5dwarf17DecimalSignStringEj, __ZN4llvm5dwarf18DiscriminantStringEj, 
                       __ZN4llvm5dwarf18FormEncodingStringEj, __ZN4llvm5dwarf19AccessibilityStringEj, 
                       __ZN4llvm5dwarf23AttributeEncodingStringEj, __ZN4llvm5dwarf23OperationEncodingStringEj, 
                       __ZN4llvm5dwarf9TagStringEj, __ZN4llvm5fdbgsEv, 
                       __ZN4llvm5ferrsEv, __ZN4llvm5foutsEv, __ZN4llvm5nullsEv, 
                       __ZN4llvm6DIType16isUnsignedDITypeEv, __ZN4llvm6DIType18replaceAllUsesWithEPNS_6MDNodeE, 
                       __ZN4llvm6DIType18replaceAllUsesWithERNS_12DIDescriptorE, 
                       __ZN4llvm6DITypeC1EPKNS_6MDNodeE, __ZN4llvm6DITypeC2EPKNS_6MDNodeE, 
                       __ZN4llvm6Linker10LinkInFileERKNS_3sys4PathERb, 
                       __ZN4llvm6Linker10LoadObjectERKNS_3sys4PathE, __ZN4llvm6Linker11LinkInFilesERKNSt3__16vectorINS_3sys4PathENS1_9allocatorIS4_EEEE, 
                       __ZN4llvm6Linker11LinkInItemsERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbEENS7_ISA_EEEERSC_, 
                       __ZN4llvm6Linker11LinkModulesEPNS_6ModuleES2_jPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZN4llvm6Linker13LinkInArchiveERKNS_3sys4PathERb, 
                       __ZN4llvm6Linker13LinkInLibraryENS_9StringRefERb, 
                       __ZN4llvm6Linker13releaseModuleEv, __ZN4llvm6Linker14addSystemPathsEv, 
                       __ZN4llvm6Linker15LinkInLibrariesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE, 
                       __ZN4llvm6Linker5errorENS_9StringRefE, __ZN4llvm6Linker7FindLibENS_9StringRefE, 
                       __ZN4llvm6Linker7addPathERKNS_3sys4PathE, __ZN4llvm6Linker7verboseENS_9StringRefE, 
                       __ZN4llvm6Linker7warningENS_9StringRefE, __ZN4llvm6Linker8addPathsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE, 
                       __ZN4llvm6LinkerC1ENS_9StringRefEPNS_6ModuleEj, 
                       __ZN4llvm6LinkerC1ENS_9StringRefES1_RNS_11LLVMContextEj, 
                       __ZN4llvm6LinkerC2ENS_9StringRefEPNS_6ModuleEj, 
                       __ZN4llvm6LinkerC2ENS_9StringRefES1_RNS_11LLVMContextEj, 
                       __ZN4llvm6LinkerD1Ev, __ZN4llvm6LinkerD2Ev, __ZN4llvm6MCAtom5splitEy, 
                       __ZN4llvm6MCAtom7addDataERKh, __ZN4llvm6MCAtom7addInstERKNS_6MCInstEyj, 
                       __ZN4llvm6MCAtom8truncateEy, __ZN4llvm6MDNode11getIfExistsERNS_11LLVMContextENS_8ArrayRefIPNS_5ValueEEE, 
                       __ZN4llvm6MDNode12getTemporaryERNS_11LLVMContextENS_8ArrayRefIPNS_5ValueEEE, 
                       __ZN4llvm6MDNode14replaceOperandEPNS_13MDNodeOperandEPNS_5ValueE, 
                       __ZN4llvm6MDNode15deleteTemporaryEPS0_, __ZN4llvm6MDNode15setIsNotUniquedEv, 
                       __ZN4llvm6MDNode18getMostGenericTBAAEPS0_S1_, __ZN4llvm6MDNode18replaceOperandWithEjPNS_5ValueE, 
                       __ZN4llvm6MDNode19getMostGenericRangeEPS0_S1_, __ZN4llvm6MDNode20getMostGenericFPMathEPS0_S1_, 
                       __ZN4llvm6MDNode21getWhenValsUnresolvedERNS_11LLVMContextENS_8ArrayRefIPNS_5ValueEEEb, 
                       __ZN4llvm6MDNode3getERNS_11LLVMContextENS_8ArrayRefIPNS_5ValueEEE, 
                       __ZN4llvm6MDNode7destroyEv, __ZN4llvm6MDNode9getMDNodeERNS_11LLVMContextENS_8ArrayRefIPNS_5ValueEEENS0_17FunctionLocalnessEb, 
                       __ZN4llvm6MDNodeC1ERNS_11LLVMContextENS_8ArrayRefIPNS_5ValueEEEb, 
                       __ZN4llvm6MDNodeC2ERNS_11LLVMContextENS_8ArrayRefIPNS_5ValueEEEb, 
                       __ZN4llvm6MDNodeD0Ev, __ZN4llvm6MDNodeD1Ev, __ZN4llvm6MDNodeD2Ev, 
                       __ZN4llvm6Module10addLibraryENS_9StringRefE, __ZN4llvm6Module11MaterializeEPNS_11GlobalValueEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZN4llvm6Module13DematerializeEPNS_11GlobalValueE, 
                       __ZN4llvm6Module13addModuleFlagENS0_15ModFlagBehaviorENS_9StringRefEPNS_5ValueE, 
                       __ZN4llvm6Module13addModuleFlagENS0_15ModFlagBehaviorENS_9StringRefEj, 
                       __ZN4llvm6Module13addModuleFlagEPNS_6MDNodeE, __ZN4llvm6Module13removeLibraryENS_9StringRefE, 
                       __ZN4llvm6Module14MaterializeAllEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm6Module15setMaterializerEPNS_14GVMaterializerE, 
                       __ZN4llvm6Module17dropAllReferencesEv, __ZN4llvm6Module17getOrInsertGlobalENS_9StringRefEPNS_4TypeE, 
                       __ZN4llvm6Module18eraseNamedMetadataEPNS_11NamedMDNodeE, 
                       __ZN4llvm6Module19getOrInsertFunctionENS_9StringRefENS_11AttrListPtrEPNS_4TypeEz, 
                       __ZN4llvm6Module19getOrInsertFunctionENS_9StringRefEPNS_12FunctionTypeE, 
                       __ZN4llvm6Module19getOrInsertFunctionENS_9StringRefEPNS_12FunctionTypeENS_11AttrListPtrE, 
                       __ZN4llvm6Module19getOrInsertFunctionENS_9StringRefEPNS_4TypeEz, 
                       __ZN4llvm6Module24getOrInsertNamedMetadataENS_9StringRefE, 
                       __ZN4llvm6Module25MaterializeAllPermanentlyEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm6Module26getOrInsertTargetIntrinsicENS_9StringRefEPNS_12FunctionTypeENS_11AttrListPtrE, 
                       __ZN4llvm6Module30getOrInsertModuleFlagsMetadataEv, 
                       __ZN4llvm6ModuleC1ENS_9StringRefERNS_11LLVMContextE, 
                       __ZN4llvm6ModuleC2ENS_9StringRefERNS_11LLVMContextE, 
                       __ZN4llvm6ModuleD1Ev, __ZN4llvm6ModuleD2Ev, __ZN4llvm6Region11element_endEv, 
                       __ZN4llvm6Region11replaceExitEPNS_10BasicBlockE, 
                       __ZN4llvm6Region12addSubRegionEPS0_b, __ZN4llvm6Region12replaceEntryEPNS_10BasicBlockE, 
                       __ZN4llvm6Region13element_beginEv, __ZN4llvm6Region14clearNodeCacheEv, 
                       __ZN4llvm6Region15removeSubRegionEPS0_, __ZN4llvm6Region18transferChildrenToEPS0_, 
                       __ZN4llvm6RegionC1EPNS_10BasicBlockES2_PNS_10RegionInfoEPNS_13DominatorTreeEPS0_, 
                       __ZN4llvm6RegionC2EPNS_10BasicBlockES2_PNS_10RegionInfoEPNS_13DominatorTreeEPS0_, 
                       __ZN4llvm6RegionD1Ev, __ZN4llvm6RegionD2Ev, __ZN4llvm6SDNode12DropOperandsEv, 
                       __ZN4llvm6SDNode16getValueTypeListENS_3EVTE, __ZN4llvm6SDNode18getIndexedModeNameENS_3ISD14MemIndexedModeE, 
                       __ZN4llvm6Triple11setArchNameENS_9StringRefE, __ZN4llvm6Triple13getOSTypeNameENS0_6OSTypeE, 
                       __ZN4llvm6Triple13setVendorNameENS_9StringRefE, 
                       __ZN4llvm6Triple14setEnvironmentENS0_15EnvironmentTypeE, 
                       __ZN4llvm6Triple15getArchTypeNameENS0_8ArchTypeE, 
                       __ZN4llvm6Triple17getArchTypePrefixENS0_8ArchTypeE, 
                       __ZN4llvm6Triple17getVendorTypeNameENS0_10VendorTypeE, 
                       __ZN4llvm6Triple18setEnvironmentNameENS_9StringRefE, 
                       __ZN4llvm6Triple22getArchTypeForLLVMNameENS_9StringRefE, 
                       __ZN4llvm6Triple22getEnvironmentTypeNameENS0_15EnvironmentTypeE, 
                       __ZN4llvm6Triple23getArchNameForAssemblerEv, __ZN4llvm6Triple23setOSAndEnvironmentNameENS_9StringRefE, 
                       __ZN4llvm6Triple28getArchTypeForDarwinArchNameENS_9StringRefE, 
                       __ZN4llvm6Triple5setOSENS0_6OSTypeE, __ZN4llvm6Triple7setArchENS0_8ArchTypeE, 
                       __ZN4llvm6Triple9normalizeENS_9StringRefE, __ZN4llvm6Triple9setOSNameENS_9StringRefE, 
                       __ZN4llvm6Triple9setTripleERKNS_5TwineE, __ZN4llvm6Triple9setVendorENS0_10VendorTypeE, 
                       __ZN4llvm6TripleC1ERKNS_5TwineE, __ZN4llvm6TripleC1ERKNS_5TwineES3_S3_, 
                       __ZN4llvm6TripleC1ERKNS_5TwineES3_S3_S3_, __ZN4llvm6TripleC2ERKNS_5TwineE, 
                       __ZN4llvm6TripleC2ERKNS_5TwineES3_S3_, __ZN4llvm6TripleC2ERKNS_5TwineES3_S3_S3_, 
                       __ZN4llvm6X86_MC12getX86RegNumEj, __ZN4llvm6X86_MC14ParseX86TripleENS_9StringRefE, 
                       __ZN4llvm6X86_MC15GetCpuIDAndInfoEjPjS1_S1_S1_, 
                       __ZN4llvm6X86_MC17DetectFamilyModelEjRjS1_, __ZN4llvm6X86_MC17GetCpuIDAndInfoExEjjPjS1_S1_S1_, 
                       __ZN4llvm6X86_MC18getDwarfRegFlavourENS_9StringRefEb, 
                       __ZN4llvm6X86_MC24createX86MCSubtargetInfoENS_9StringRefES1_S1_, 
                       __ZN4llvm6X86_MC27InitLLVM2SEHRegisterMappingEPNS_14MCRegisterInfoE, 
                       __ZN4llvm6object10ObjectFile16createObjectFileENS_9StringRefE, 
                       __ZN4llvm6object10ObjectFile16createObjectFileEPNS_12MemoryBufferE, 
                       __ZN4llvm6object10ObjectFile19createELFObjectFileEPNS_12MemoryBufferE, 
                       __ZN4llvm6object10ObjectFile20createCOFFObjectFileEPNS_12MemoryBufferE, 
                       __ZN4llvm6object10ObjectFile21createMachOObjectFileEPNS_12MemoryBufferE, 
                       __ZN4llvm6object10ObjectFile6anchorEv, __ZN4llvm6object10ObjectFileC2EjPNS_12MemoryBufferERNS_10error_codeE, 
                       __ZN4llvm6object11MachOObject14LoadFromBufferEPNS_12MemoryBufferEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm6object11MachOObject19RegisterStringTableERNS0_5macho17SymtabLoadCommandE, 
                       __ZN4llvm6object11MachOObjectC1EPNS_12MemoryBufferEbb, 
                       __ZN4llvm6object11MachOObjectC2EPNS_12MemoryBufferEbb, 
                       __ZN4llvm6object11MachOObjectD1Ev, __ZN4llvm6object11MachOObjectD2Ev, 
                       __ZN4llvm6object12createBinaryENS_9StringRefERNS_9OwningPtrINS0_6BinaryEEE, 
                       __ZN4llvm6object12createBinaryEPNS_12MemoryBufferERNS_9OwningPtrINS0_6BinaryEEE, 
                       __ZN4llvm6object14COFFObjectFileC1EPNS_12MemoryBufferERNS_10error_codeE, 
                       __ZN4llvm6object14COFFObjectFileC2EPNS_12MemoryBufferERNS_10error_codeE, 
                       __ZN4llvm6object15MachOObjectFileC1EPNS_12MemoryBufferEPNS0_11MachOObjectERNS_10error_codeE, 
                       __ZN4llvm6object15MachOObjectFileC2EPNS_12MemoryBufferEPNS0_11MachOObjectERNS_10error_codeE, 
                       __ZN4llvm6object15object_categoryEv, __ZN4llvm6object6BinaryC1EjPNS_12MemoryBufferE, 
                       __ZN4llvm6object6BinaryC2EjPNS_12MemoryBufferE, 
                       __ZN4llvm6object6BinaryD0Ev, __ZN4llvm6object6BinaryD1Ev, 
                       __ZN4llvm6object6BinaryD2Ev, __ZN4llvm6object7Archive6anchorEv, 
                       __ZN4llvm6object7ArchiveC1EPNS_12MemoryBufferERNS_10error_codeE, 
                       __ZN4llvm6object7ArchiveC2EPNS_12MemoryBufferERNS_10error_codeE, 
                       __ZN4llvm7APFloat10IEEEdoubleE, __ZN4llvm7APFloat10IEEEsingleE, 
                       __ZN4llvm7APFloat10changeSignEv, __ZN4llvm7APFloat10getLargestERKNS_12fltSemanticsEb, 
                       __ZN4llvm7APFloat10initializeEPKNS_12fltSemanticsE, 
                       __ZN4llvm7APFloat11getSmallestERKNS_12fltSemanticsEb, 
                       __ZN4llvm7APFloat11modSpecialsERKS0_, __ZN4llvm7APFloat13addOrSubtractERKS0_NS0_12roundingModeEb, 
                       __ZN4llvm7APFloat13initFromAPIntERKNS_5APIntEb, 
                       __ZN4llvm7APFloat14addSignificandERKS0_, __ZN4llvm7APFloat14divideSpecialsERKS0_, 
                       __ZN4llvm7APFloat14handleOverflowENS0_12roundingModeE, 
                       __ZN4llvm7APFloat15PPCDoubleDoubleE, __ZN4llvm7APFloat15copySignificandERKS0_, 
                       __ZN4llvm7APFloat15freeSignificandEv, __ZN4llvm7APFloat15getAllOnesValueEjb, 
                       __ZN4llvm7APFloat15roundToIntegralENS0_12roundingModeE, 
                       __ZN4llvm7APFloat15zeroSignificandEv, __ZN4llvm7APFloat16convertFromAPIntERKNS_5APIntEbNS0_12roundingModeE, 
                       __ZN4llvm7APFloat16fusedMultiplyAddERKS0_S2_NS0_12roundingModeE, 
                       __ZN4llvm7APFloat16multiplySpecialsERKS0_, __ZN4llvm7APFloat16significandPartsEv, 
                       __ZN4llvm7APFloat17convertFromStringENS_9StringRefENS0_12roundingModeE, 
                       __ZN4llvm7APFloat17divideSignificandERKS0_, __ZN4llvm7APFloat17initFromHalfAPIntERKNS_5APIntE, 
                       __ZN4llvm7APFloat17x87DoubleExtendedE, __ZN4llvm7APFloat18initFromFloatAPIntERKNS_5APIntE, 
                       __ZN4llvm7APFloat18semanticsPrecisionERKNS_12fltSemanticsE, 
                       __ZN4llvm7APFloat19initFromDoubleAPIntERKNS_5APIntE, 
                       __ZN4llvm7APFloat19multiplySignificandERKS0_PS1_, 
                       __ZN4llvm7APFloat19subtractSignificandERKS0_y, __ZN4llvm7APFloat20incrementSignificandEv, 
                       __ZN4llvm7APFloat20shiftSignificandLeftEj, __ZN4llvm7APFloat21addOrSubtractSpecialsERKS0_b, 
                       __ZN4llvm7APFloat21getSmallestNormalizedERKNS_12fltSemanticsEb, 
                       __ZN4llvm7APFloat21shiftSignificandRightEj, __ZN4llvm7APFloat22initFromQuadrupleAPIntERKNS_5APIntE, 
                       __ZN4llvm7APFloat24addOrSubtractSignificandERKS0_b, 
                       __ZN4llvm7APFloat24convertFromDecimalStringENS_9StringRefENS0_12roundingModeE, 
                       __ZN4llvm7APFloat24convertFromUnsignedPartsEPKyjNS0_12roundingModeE, 
                       __ZN4llvm7APFloat26initFromF80LongDoubleAPIntERKNS_5APIntE, 
                       __ZN4llvm7APFloat28convertFromHexadecimalStringENS_9StringRefENS0_12roundingModeE, 
                       __ZN4llvm7APFloat28initFromPPCDoubleDoubleAPIntERKNS_5APIntE, 
                       __ZN4llvm7APFloat28roundSignificandWithExponentEPKyjiNS0_12roundingModeE, 
                       __ZN4llvm7APFloat30convertFromSignExtendedIntegerEPKyjbNS0_12roundingModeE, 
                       __ZN4llvm7APFloat30convertFromZeroExtendedIntegerEPKyjbNS0_12roundingModeE, 
                       __ZN4llvm7APFloat3addERKS0_NS0_12roundingModeE, 
                       __ZN4llvm7APFloat3modERKS0_NS0_12roundingModeE, 
                       __ZN4llvm7APFloat5BogusE, __ZN4llvm7APFloat6assignERKS0_, 
                       __ZN4llvm7APFloat6divideERKS0_NS0_12roundingModeE, 
                       __ZN4llvm7APFloat7convertERKNS_12fltSemanticsENS0_12roundingModeEPb, 
                       __ZN4llvm7APFloat7makeNaNERKNS_12fltSemanticsEbbPKNS_5APIntE, 
                       __ZN4llvm7APFloat7makeNaNEbbPKNS_5APIntE, __ZN4llvm7APFloat8IEEEhalfE, 
                       __ZN4llvm7APFloat8IEEEquadE, __ZN4llvm7APFloat8copySignERKS0_, 
                       __ZN4llvm7APFloat8multiplyERKS0_NS0_12roundingModeE, 
                       __ZN4llvm7APFloat8subtractERKS0_NS0_12roundingModeE, 
                       __ZN4llvm7APFloat9clearSignEv, __ZN4llvm7APFloat9normalizeENS0_12roundingModeENS_12lostFractionE, 
                       __ZN4llvm7APFloat9remainderERKS0_, __ZN4llvm7APFloatC1ERKNS_12fltSemanticsE, 
                       __ZN4llvm7APFloatC1ERKNS_12fltSemanticsENS0_11fltCategoryEb, 
                       __ZN4llvm7APFloatC1ERKNS_12fltSemanticsENS0_16uninitializedTagE, 
                       __ZN4llvm7APFloatC1ERKNS_12fltSemanticsENS_9StringRefE, 
                       __ZN4llvm7APFloatC1ERKNS_12fltSemanticsEy, __ZN4llvm7APFloatC1ERKNS_5APIntEb, 
                       __ZN4llvm7APFloatC1ERKS0_, __ZN4llvm7APFloatC1Ed, 
                       __ZN4llvm7APFloatC1Ef, __ZN4llvm7APFloatC2ERKNS_12fltSemanticsE, 
                       __ZN4llvm7APFloatC2ERKNS_12fltSemanticsENS0_11fltCategoryEb, 
                       __ZN4llvm7APFloatC2ERKNS_12fltSemanticsENS0_16uninitializedTagE, 
                       __ZN4llvm7APFloatC2ERKNS_12fltSemanticsENS_9StringRefE, 
                       __ZN4llvm7APFloatC2ERKNS_12fltSemanticsEy, __ZN4llvm7APFloatC2ERKNS_5APIntEb, 
                       __ZN4llvm7APFloatC2ERKS0_, __ZN4llvm7APFloatC2Ed, 
                       __ZN4llvm7APFloatC2Ef, __ZN4llvm7APFloatD1Ev, __ZN4llvm7APFloatD2Ev, 
                       __ZN4llvm7APFloataSERKS0_, __ZN4llvm7Archive11CreateEmptyERKNS_3sys4PathERNS_11LLVMContextE, 
                       __ZN4llvm7Archive11OpenAndLoadERKNS_3sys4PathERNS_11LLVMContextEPNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE, 
                       __ZN4llvm7Archive11loadArchiveEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm7Archive11mapToMemoryEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm7Archive11writeMemberERKNS_13ArchiveMemberERNSt3__114basic_ofstreamIcNS4_11char_traitsIcEEEEbbPNS4_12basic_stringIcS7_NS4_9allocatorIcEEEE, 
                       __ZN4llvm7Archive11writeToDiskEbbPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm7Archive13addFileBeforeERKNS_3sys4PathENS_14ilist_iteratorINS_13ArchiveMemberEEEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE, 
                       __ZN4llvm7Archive13cleanUpMemoryEv, __ZN4llvm7Archive13getAllModulesERNSt3__16vectorIPNS_6ModuleENS1_9allocatorIS4_EEEEPNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEE, 
                       __ZN4llvm7Archive14checkSignatureEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm7Archive15loadSymbolTableEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm7Archive16isBitcodeArchiveEv, __ZN4llvm7Archive16parseSymbolTableEPKvjPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZN4llvm7Archive16writeSymbolTableERNSt3__114basic_ofstreamIcNS1_11char_traitsIcEEEE, 
                       __ZN4llvm7Archive17parseMemberHeaderERPKcS2_PNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE, 
                       __ZN4llvm7Archive18OpenAndLoadSymbolsERKNS_3sys4PathERNS_11LLVMContextEPNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE, 
                       __ZN4llvm7Archive24findModuleDefiningSymbolERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_, 
                       __ZN4llvm7Archive26findModulesDefiningSymbolsERNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEERNS_15SmallVectorImplIPNS_6ModuleEEEPS8_, 
                       __ZN4llvm7ArchiveC1ERKNS_3sys4PathERNS_11LLVMContextE, 
                       __ZN4llvm7ArchiveC2ERKNS_3sys4PathERNS_11LLVMContextE, 
                       __ZN4llvm7ArchiveD1Ev, __ZN4llvm7ArchiveD2Ev, __ZN4llvm7CCState11CheckReturnERKNS_15SmallVectorImplINS_3ISD9OutputArgEEEPFbjNS_3MVTES7_NS_11CCValAssign7LocInfoENS2_10ArgFlagsTyERS0_E, 
                       __ZN4llvm7CCState11HandleByValEjNS_3MVTES1_NS_11CCValAssign7LocInfoEiiNS_3ISD10ArgFlagsTyE, 
                       __ZN4llvm7CCState13AnalyzeReturnERKNS_15SmallVectorImplINS_3ISD9OutputArgEEEPFbjNS_3MVTES7_NS_11CCValAssign7LocInfoENS2_10ArgFlagsTyERS0_E, 
                       __ZN4llvm7CCState13MarkAllocatedEj, __ZN4llvm7CCState17AnalyzeCallResultENS_3MVTEPFbjS1_S1_NS_11CCValAssign7LocInfoENS_3ISD10ArgFlagsTyERS0_E, 
                       __ZN4llvm7CCState17AnalyzeCallResultERKNS_15SmallVectorImplINS_3ISD8InputArgEEEPFbjNS_3MVTES7_NS_11CCValAssign7LocInfoENS2_10ArgFlagsTyERS0_E, 
                       __ZN4llvm7CCState19AnalyzeCallOperandsERKNS_15SmallVectorImplINS_3ISD9OutputArgEEEPFbjNS_3MVTES7_NS_11CCValAssign7LocInfoENS2_10ArgFlagsTyERS0_E, 
                       __ZN4llvm7CCState19AnalyzeCallOperandsERNS_15SmallVectorImplINS_3MVTEEERNS1_INS_3ISD10ArgFlagsTyEEEPFbjS2_S2_NS_11CCValAssign7LocInfoES6_RS0_E, 
                       __ZN4llvm7CCState22AnalyzeFormalArgumentsERKNS_15SmallVectorImplINS_3ISD8InputArgEEEPFbjNS_3MVTES7_NS_11CCValAssign7LocInfoENS2_10ArgFlagsTyERS0_E, 
                       __ZN4llvm7CCStateC1ENS_11CallingConv2IDEbRNS_15MachineFunctionERKNS_13TargetMachineERNS_11SmallVectorINS_11CCValAssignELj16EEERNS_11LLVMContextE, 
                       __ZN4llvm7CCStateC2ENS_11CallingConv2IDEbRNS_15MachineFunctionERKNS_13TargetMachineERNS_11SmallVectorINS_11CCValAssignELj16EEERNS_11LLVMContextE, 
                       __ZN4llvm7CmpInst10isUnsignedEt, __ZN4llvm7CmpInst11isUnorderedEt, 
                       __ZN4llvm7CmpInst12swapOperandsEv, __ZN4llvm7CmpInst15isTrueWhenEqualEt, 
                       __ZN4llvm7CmpInst16isFalseWhenEqualEt, __ZN4llvm7CmpInst19getInversePredicateENS0_9PredicateE, 
                       __ZN4llvm7CmpInst19getSwappedPredicateENS0_9PredicateE, 
                       __ZN4llvm7CmpInst6CreateENS_11Instruction8OtherOpsEtPNS_5ValueES4_RKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm7CmpInst6CreateENS_11Instruction8OtherOpsEtPNS_5ValueES4_RKNS_5TwineEPS1_, 
                       __ZN4llvm7CmpInst6anchorEv, __ZN4llvm7CmpInst8isSignedEt, 
                       __ZN4llvm7CmpInst9isOrderedEt, __ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsEtPNS_5ValueES6_RKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsEtPNS_5ValueES6_RKNS_5TwineEPS3_, 
                       __ZN4llvm7IVUsers12AddUsersImplEPNS_11InstructionERNS_11SmallPtrSetIPNS_4LoopELj16EEE, 
                       __ZN4llvm7IVUsers13releaseMemoryEv, __ZN4llvm7IVUsers21AddUsersIfInterestingEPNS_11InstructionE, 
                       __ZN4llvm7IVUsers2IDE, __ZN4llvm7IVUsers7AddUserEPNS_11InstructionEPNS_5ValueE, 
                       __ZN4llvm7IVUsers9runOnLoopEPNS_4LoopERNS_13LPPassManagerE, 
                       __ZN4llvm7IVUsersC1Ev, __ZN4llvm7IVUsersC2Ev, __ZN4llvm7Inliner12shouldInlineENS_8CallSiteE, 
                       __ZN4llvm7Inliner14doFinalizationERNS_9CallGraphE, 
                       __ZN4llvm7Inliner19removeDeadFunctionsERNS_9CallGraphEb, 
                       __ZN4llvm7Inliner8runOnSCCERNS_12CallGraphSCCE, 
                       __ZN4llvm7InlinerC2ERc, __ZN4llvm7InlinerC2ERcib, 
                       __ZN4llvm7LCSSAIDE, __ZN4llvm7LLLexer10LexExclaimEv, 
                       __ZN4llvm7LLLexer10LexPercentEv, __ZN4llvm7LLLexer10ReadStringENS_5lltok4KindE, 
                       __ZN4llvm7LLLexer11HexIntToValEPKcS2_, __ZN4llvm7LLLexer11LexPositiveEv, 
                       __ZN4llvm7LLLexer11ReadVarNameEv, __ZN4llvm7LLLexer11getNextCharEv, 
                       __ZN4llvm7LLLexer12HexToIntPairEPKcS2_Py, __ZN4llvm7LLLexer13LexIdentifierEv, 
                       __ZN4llvm7LLLexer15SkipLineCommentEv, __ZN4llvm7LLLexer16FP80HexToIntPairEPKcS2_Py, 
                       __ZN4llvm7LLLexer18LexDigitOrNegativeEv, __ZN4llvm7LLLexer5Lex0xEv, 
                       __ZN4llvm7LLLexer5LexAtEv, __ZN4llvm7LLLexer6atoullEPKcS2_, 
                       __ZN4llvm7LLLexer8LexQuoteEv, __ZN4llvm7LLLexer8LexTokenEv, 
                       __ZN4llvm7LLLexerC1EPNS_12MemoryBufferERNS_9SourceMgrERNS_12SMDiagnosticERNS_11LLVMContextE, 
                       __ZN4llvm7LLLexerC2EPNS_12MemoryBufferERNS_9SourceMgrERNS_12SMDiagnosticERNS_11LLVMContextE, 
                       __ZN4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb, 
                       __ZN4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEERKNS_5TwineENS0_15ManglerPrefixTyE, 
                       __ZN4llvm7Mangler9getSymbolEPKNS_11GlobalValueE, 
                       __ZN4llvm7PHINode12growOperandsEv, __ZN4llvm7PHINode19removeIncomingValueEjb, 
                       __ZN4llvm7PHINodeC1ERKS0_, __ZN4llvm7PHINodeC2ERKS0_, 
                       __ZN4llvm7PHINodeD0Ev, __ZN4llvm7PHINodeD1Ev, __ZN4llvm7PHINodeD2Ev, 
                       __ZN4llvm7PMStack3popEv, __ZN4llvm7PMStack4pushEPNS_13PMDataManagerE, 
                       __ZN4llvm7Spiller6anchorEv, __ZN4llvm7SpillerD0Ev, 
                       __ZN4llvm7SpillerD1Ev, __ZN4llvm7SpillerD2Ev, __ZN4llvm7hashing6detail19fixed_seed_overrideE, 
                       __ZN4llvm8APIntOps18RoundDoubleToAPIntEdj, __ZN4llvm8APIntOps21GreatestCommonDivisorERKNS_5APIntES3_, 
                       __ZN4llvm8AliasSet10addPointerERNS_15AliasSetTrackerERNS0_10PointerRecEyPKNS_6MDNodeEb, 
                       __ZN4llvm8AliasSet10mergeSetInERS0_RNS_15AliasSetTrackerE, 
                       __ZN4llvm8AliasSet14addUnknownInstEPNS_11InstructionERNS_13AliasAnalysisE, 
                       __ZN4llvm8AliasSet17removeFromTrackerERNS_15AliasSetTrackerE, 
                       __ZN4llvm8Argument10removeAttrENS_10AttributesE, 
                       __ZN4llvm8Argument6anchorEv, __ZN4llvm8Argument7addAttrENS_10AttributesE, 
                       __ZN4llvm8Argument9setParentEPNS_8FunctionE, __ZN4llvm8ArgumentC1EPNS_4TypeERKNS_5TwineEPNS_8FunctionE, 
                       __ZN4llvm8ArgumentC2EPNS_4TypeERKNS_5TwineEPNS_8FunctionE, 
                       __ZN4llvm8AsmLexer11ReturnErrorEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZN4llvm8AsmLexer11getNextCharEv, __ZN4llvm8AsmLexer13LexIdentifierEv, 
                       __ZN4llvm8AsmLexer14LexLineCommentEv, __ZN4llvm8AsmLexer14LexSingleQuoteEv, 
                       __ZN4llvm8AsmLexer15LexFloatLiteralEv, __ZN4llvm8AsmLexer17LexUntilEndOfLineEv, 
                       __ZN4llvm8AsmLexer18isAtStartOfCommentEc, __ZN4llvm8AsmLexer22LexUntilEndOfStatementEv, 
                       __ZN4llvm8AsmLexer22isAtStatementSeparatorEPKc, 
                       __ZN4llvm8AsmLexer8LexDigitEv, __ZN4llvm8AsmLexer8LexQuoteEv, 
                       __ZN4llvm8AsmLexer8LexSlashEv, __ZN4llvm8AsmLexer8LexTokenEv, 
                       __ZN4llvm8AsmLexer9setBufferEPKNS_12MemoryBufferEPKc, 
                       __ZN4llvm8AsmLexerC1ERKNS_9MCAsmInfoE, __ZN4llvm8AsmLexerC2ERKNS_9MCAsmInfoE, 
                       __ZN4llvm8AsmLexerD0Ev, __ZN4llvm8AsmLexerD1Ev, 
                       __ZN4llvm8AsmLexerD2Ev, __ZN4llvm8CallInst10CreateFreeEPNS_5ValueEPNS_10BasicBlockE, 
                       __ZN4llvm8CallInst10CreateFreeEPNS_5ValueEPNS_11InstructionE, 
                       __ZN4llvm8CallInst12CreateMallocEPNS_10BasicBlockEPNS_4TypeES4_PNS_5ValueES6_PNS_8FunctionERKNS_5TwineE, 
                       __ZN4llvm8CallInst12CreateMallocEPNS_11InstructionEPNS_4TypeES4_PNS_5ValueES6_PNS_8FunctionERKNS_5TwineE, 
                       __ZN4llvm8CallInst12addAttributeEjNS_10AttributesE, 
                       __ZN4llvm8CallInst15removeAttributeEjNS_10AttributesE, 
                       __ZN4llvm8CallInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE, 
                       __ZN4llvm8CallInst4initEPNS_5ValueERKNS_5TwineE, 
                       __ZN4llvm8CallInstC1EPNS_5ValueERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CallInstC1EPNS_5ValueERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CallInstC1ERKS0_, __ZN4llvm8CallInstC2EPNS_5ValueERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CallInstC2EPNS_5ValueERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CallInstC2ERKS0_, __ZN4llvm8CallInstD0Ev, 
                       __ZN4llvm8CallInstD1Ev, __ZN4llvm8CallInstD2Ev, 
                       __ZN4llvm8CastInst10isCastableEPNS_4TypeES2_, __ZN4llvm8CastInst10isNoopCastENS_11Instruction7CastOpsEPNS_4TypeES4_S4_, 
                       __ZN4llvm8CastInst11castIsValidENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeE, 
                       __ZN4llvm8CastInst12CreateFPCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CastInst12CreateFPCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CastInst13getCastOpcodeEPKNS_5ValueEbPNS_4TypeEb, 
                       __ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CastInst17CreatePointerCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CastInst17CreatePointerCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CastInst19CreateSExtOrBitCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CastInst19CreateSExtOrBitCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CastInst19CreateZExtOrBitCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CastInst19CreateZExtOrBitCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CastInst20CreateTruncOrBitCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CastInst20CreateTruncOrBitCastEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8CastInst20isEliminableCastPairENS_11Instruction7CastOpsES2_PNS_4TypeES4_S4_S4_, 
                       __ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_, 
                       __ZN4llvm8CastInst6anchorEv, __ZN4llvm8Constant12getNullValueEPNS_4TypeE, 
                       __ZN4llvm8Constant15getAllOnesValueEPNS_4TypeE, 
                       __ZN4llvm8Constant15getIntegerValueEPNS_4TypeERKNS_5APIntE, 
                       __ZN4llvm8Constant19destroyConstantImplEv, __ZN4llvm8Constant6anchorEv, 
                       __ZN4llvm8DIEBlock11ComputeSizeEPNS_10AsmPrinterE, 
                       __ZN4llvm8DIEValue6anchorEv, __ZN4llvm8DebugLoc17getFromDILocationEPNS_6MDNodeE, 
                       __ZN4llvm8DebugLoc21getFromDILexicalBlockEPNS_6MDNodeE, 
                       __ZN4llvm8DebugLoc3getEjjPNS_6MDNodeES2_, __ZN4llvm8EmitPutSEPNS_5ValueERNS_9IRBuilderILb1ENS_14ConstantFolderENS_24IRBuilderDefaultInserterILb1EEEEEPKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm8FastISel10FastEmit_fENS_3MVTES1_jPKNS_10ConstantFPE, 
                       __ZN4llvm8FastISel10FastEmit_iENS_3MVTES1_jy, __ZN4llvm8FastISel10FastEmit_rENS_3MVTES1_jjb, 
                       __ZN4llvm8FastISel10SelectCallEPKNS_4UserE, __ZN4llvm8FastISel10SelectCastEPKNS_4UserEj, 
                       __ZN4llvm8FastISel10SelectFNegEPKNS_4UserE, __ZN4llvm8FastISel11FastEmit_rfENS_3MVTES1_jjbPKNS_10ConstantFPE, 
                       __ZN4llvm8FastISel11FastEmit_riENS_3MVTES1_jjby, 
                       __ZN4llvm8FastISel11FastEmit_rrENS_3MVTES1_jjbjb, 
                       __ZN4llvm8FastISel12FastEmit_ri_ENS_3MVTEjjbyS1_, 
                       __ZN4llvm8FastISel12FastEmit_rriENS_3MVTES1_jjbjby, 
                       __ZN4llvm8FastISel13FastEmitInst_EjPKNS_19TargetRegisterClassE, 
                       __ZN4llvm8FastISel13SelectBitCastEPKNS_4UserE, __ZN4llvm8FastISel13startNewBlockEv, 
                       __ZN4llvm8FastISel14FastEmitBranchEPNS_17MachineBasicBlockENS_8DebugLocE, 
                       __ZN4llvm8FastISel14FastEmitInst_iEjPKNS_19TargetRegisterClassEy, 
                       __ZN4llvm8FastISel14FastEmitInst_rEjPKNS_19TargetRegisterClassEjb, 
                       __ZN4llvm8FastISel14SelectBinaryOpEPKNS_4UserEj, 
                       __ZN4llvm8FastISel14SelectOperatorEPKNS_4UserEj, 
                       __ZN4llvm8FastISel14UpdateValueMapEPKNS_5ValueEjj, 
                       __ZN4llvm8FastISel14getRegForValueEPKNS_5ValueE, 
                       __ZN4llvm8FastISel14removeDeadCodeENS_17MachineBasicBlock15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS3_EEEES6_, 
                       __ZN4llvm8FastISel15FastEmitInst_iiEjPKNS_19TargetRegisterClassEyy, 
                       __ZN4llvm8FastISel15FastEmitInst_rfEjPKNS_19TargetRegisterClassEjbPKNS_10ConstantFPE, 
                       __ZN4llvm8FastISel15FastEmitInst_riEjPKNS_19TargetRegisterClassEjby, 
                       __ZN4llvm8FastISel15FastEmitInst_rrEjPKNS_19TargetRegisterClassEjbjb, 
                       __ZN4llvm8FastISel15createResultRegEPKNS_19TargetRegisterClassE, 
                       __ZN4llvm8FastISel16FastEmitInst_riiEjPKNS_19TargetRegisterClassEjbyy, 
                       __ZN4llvm8FastISel16FastEmitInst_rriEjPKNS_19TargetRegisterClassEjbjby, 
                       __ZN4llvm8FastISel16FastEmitInst_rrrEjPKNS_19TargetRegisterClassEjbjbjb, 
                       __ZN4llvm8FastISel17FastEmitInst_rriiEjPKNS_19TargetRegisterClassEjbjbyy, 
                       __ZN4llvm8FastISel17SelectInstructionEPKNS_11InstructionE, 
                       __ZN4llvm8FastISel17getRegForGEPIndexEPKNS_5ValueE, 
                       __ZN4llvm8FastISel17lookUpRegForValueEPKNS_5ValueE, 
                       __ZN4llvm8FastISel17recomputeInsertPtEv, __ZN4llvm8FastISel18FastEmitZExtFromI1ENS_3MVTEjb, 
                       __ZN4llvm8FastISel18SelectExtractValueEPKNS_4UserE, 
                       __ZN4llvm8FastISel18flushLocalValueMapEv, __ZN4llvm8FastISel19SelectGetElementPtrEPKNS_4UserE, 
                       __ZN4llvm8FastISel19enterLocalValueAreaEv, __ZN4llvm8FastISel19leaveLocalValueAreaENS0_9SavePointE, 
                       __ZN4llvm8FastISel22materializeRegForValueEPKNS_5ValueENS_3MVTE, 
                       __ZN4llvm8FastISel26FastEmitInst_extractsubregENS_3MVTEjbj, 
                       __ZN4llvm8FastISel31HandlePHINodesInSuccessorBlocksEPKNS_10BasicBlockE, 
                       __ZN4llvm8FastISel9FastEmit_ENS_3MVTES1_j, __ZN4llvm8FastISelC2ERNS_20FunctionLoweringInfoEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm8FastISelD0Ev, __ZN4llvm8FastISelD1Ev, 
                       __ZN4llvm8FastISelD2Ev, __ZN4llvm8FileInfo12addLineCountENS_9StringRefEjj, 
                       __ZN4llvm8FileInfo5printEv, __ZN4llvm8Function12addAttributeEjNS_10AttributesE, 
                       __ZN4llvm8Function15eraseFromParentEv, __ZN4llvm8Function15removeAttributeEjNS_10AttributesE, 
                       __ZN4llvm8Function16removeFromParentEv, __ZN4llvm8Function17dropAllReferencesEv, 
                       __ZN4llvm8Function18copyAttributesFromEPKNS_11GlobalValueE, 
                       __ZN4llvm8Function5setGCEPKc, __ZN4llvm8Function7clearGCEv, 
                       __ZN4llvm8Function9setParentEPNS_6ModuleE, __ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesERKNS_5TwineEPNS_6ModuleE, 
                       __ZN4llvm8FunctionC2EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesERKNS_5TwineEPNS_6ModuleE, 
                       __ZN4llvm8FunctionD0Ev, __ZN4llvm8FunctionD1Ev, 
                       __ZN4llvm8FunctionD2Ev, __ZN4llvm8GCOVFile17collectLineCountsERNS_8FileInfoE, 
                       __ZN4llvm8GCOVFile4dumpEv, __ZN4llvm8GCOVFile4readERNS_10GCOVBufferE, 
                       __ZN4llvm8GCOVFileD1Ev, __ZN4llvm8GCOVFileD2Ev, 
                       __ZN4llvm8ICmpInst17makeConstantRangeENS_7CmpInst9PredicateERKNS_5APIntE, 
                       __ZN4llvm8ICmpInst18getSignedPredicateENS_7CmpInst9PredicateE, 
                       __ZN4llvm8ICmpInst20getUnsignedPredicateENS_7CmpInst9PredicateE, 
                       __ZN4llvm8LLParser10ParseAliasERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5SMLocEj, 
                       __ZN4llvm8LLParser10ParseAllocERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser10ParseFenceERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser10ParseStoreERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser10ParseTokenENS_5lltok4KindEPKc, 
                       __ZN4llvm8LLParser10ParseValIDERNS_5ValIDEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser10ParseValueEPNS_4TypeERPNS_5ValueEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser11ParseDefineEv, __ZN4llvm8LLParser11ParseGlobalERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5SMLocEjbj, 
                       __ZN4llvm8LLParser11ParseInvokeERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser11ParseResumeERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser11ParseSelectERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser11ParseSwitchERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser11ParseUInt32ERj, __ZN4llvm8LLParser11ParseVA_ArgERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser12GetGlobalValERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_4TypeENS_5SMLocE, 
                       __ZN4llvm8LLParser12GetGlobalValEjPNS_4TypeENS_5SMLocE, 
                       __ZN4llvm8LLParser12ParseCmpXchgERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser12ParseCompareERPNS_11InstructionERNS0_16PerFunctionStateEj, 
                       __ZN4llvm8LLParser12ParseDeclareEv, __ZN4llvm8LLParser12ParseDepLibsEv, 
                       __ZN4llvm8LLParser12ParseLogicalERPNS_11InstructionERNS0_16PerFunctionStateEj, 
                       __ZN4llvm8LLParser13ParseMDNodeIDERPNS_6MDNodeE, 
                       __ZN4llvm8LLParser13ParseMDNodeIDERPNS_6MDNodeERj, 
                       __ZN4llvm8LLParser13ParseMDStringERPNS_8MDStringE, 
                       __ZN4llvm8LLParser13ParseTLSModelERNS_14GlobalVariable15ThreadLocalModeE, 
                       __ZN4llvm8LLParser14ParseAtomicRMWERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser14ParseIndexListERNS_15SmallVectorImplIjEERb, 
                       __ZN4llvm8LLParser14ParseModuleAsmEv, __ZN4llvm8LLParser14ParseNamedTypeEv, 
                       __ZN4llvm8LLParser15ParseArithmeticERPNS_11InstructionERNS0_16PerFunctionStateEjj, 
                       __ZN4llvm8LLParser15ParseBasicBlockERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser15ParseGlobalTypeERb, __ZN4llvm8LLParser15ParseIndirectBrERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser15ParseLandingPadERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser15ParseStructBodyERNS_15SmallVectorImplIPNS_4TypeEEE, 
                       __ZN4llvm8LLParser16ParseGlobalValueEPNS_4TypeERPNS_8ConstantE, 
                       __ZN4llvm8LLParser16ParseInsertValueERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser16ParseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser16ParseNamedGlobalEv, __ZN4llvm8LLParser16ParseUnnamedTypeEv, 
                       __ZN4llvm8LLParser16PerFunctionState11SetInstNameEiRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_5SMLocEPNS_11InstructionE, 
                       __ZN4llvm8LLParser16PerFunctionState14FinishFunctionEv, 
                       __ZN4llvm8LLParser16PerFunctionState5GetBBERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_5SMLocE, 
                       __ZN4llvm8LLParser16PerFunctionState5GetBBEjNS_5SMLocE, 
                       __ZN4llvm8LLParser16PerFunctionState6GetValERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_4TypeENS_5SMLocE, 
                       __ZN4llvm8LLParser16PerFunctionState6GetValEjPNS_4TypeENS_5SMLocE, 
                       __ZN4llvm8LLParser16PerFunctionState8DefineBBERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_5SMLocE, 
                       __ZN4llvm8LLParser16PerFunctionStateC1ERS0_RNS_8FunctionEi, 
                       __ZN4llvm8LLParser16PerFunctionStateC2ERS0_RNS_8FunctionEi, 
                       __ZN4llvm8LLParser16PerFunctionStateD1Ev, __ZN4llvm8LLParser16PerFunctionStateD2Ev, 
                       __ZN4llvm8LLParser17ParseArgumentListERNS_15SmallVectorImplINS0_7ArgInfoEEERb, 
                       __ZN4llvm8LLParser17ParseCmpPredicateERjj, __ZN4llvm8LLParser17ParseExtractValueERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser17ParseFunctionBodyERNS_8FunctionE, 
                       __ZN4llvm8LLParser17ParseFunctionTypeERPNS_4TypeE, 
                       __ZN4llvm8LLParser17ParseMDNodeVectorERNS_15SmallVectorImplIPNS_5ValueEEEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser17ParseTypeAndValueERPNS_5ValueEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser18ParseGetElementPtrERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser18ParseInsertElementERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser18ParseMetadataValueERNS_5ValIDEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser18ParseNamedMetadataEv, __ZN4llvm8LLParser18ParseOptionalAttrsERNS_10AttributesEj, 
                       __ZN4llvm8LLParser18ParseParameterListERNS_15SmallVectorImplINS0_9ParamInfoEEERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser18ParseShuffleVectorERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser18ParseUnnamedGlobalEv, __ZN4llvm8LLParser19ConvertValIDToValueEPNS_4TypeERNS_5ValIDERPNS_5ValueEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser19ParseAnonStructTypeERPNS_4TypeEb, 
                       __ZN4llvm8LLParser19ParseExtractElementERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser19ParseFunctionHeaderERPNS_8FunctionEb, 
                       __ZN4llvm8LLParser19ParseStringConstantERNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZN4llvm8LLParser19ValidateEndOfModuleEv, __ZN4llvm8LLParser20ParseArrayVectorTypeERPNS_4TypeEb, 
                       __ZN4llvm8LLParser20ParseOptionalLinkageERjRb, __ZN4llvm8LLParser21ParseScopeAndOrderingEbRNS_20SynchronizationScopeERNS_14AtomicOrderingE, 
                       __ZN4llvm8LLParser21ParseStructDefinitionENS_5SMLocENS_9StringRefERNSt3__14pairIPNS_4TypeES1_EERS6_, 
                       __ZN4llvm8LLParser21ParseTargetDefinitionEv, __ZN4llvm8LLParser21ParseTopLevelEntitiesEv, 
                       __ZN4llvm8LLParser22ParseGlobalValueVectorERNS_15SmallVectorImplIPNS_8ConstantEEE, 
                       __ZN4llvm8LLParser22ParseMetadataListValueERNS_5ValIDEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser22ParseOptionalAddrSpaceERj, __ZN4llvm8LLParser22ParseOptionalAlignmentERj, 
                       __ZN4llvm8LLParser22ParseTypeAndBasicBlockERPNS_10BasicBlockERNS_5SMLocERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser23ParseGlobalTypeAndValueERPNS_8ConstantE, 
                       __ZN4llvm8LLParser23ParseOptionalCommaAlignERjRb, 
                       __ZN4llvm8LLParser23ParseOptionalVisibilityERj, 
                       __ZN4llvm8LLParser23ParseStandaloneMetadataEv, __ZN4llvm8LLParser24ParseInstructionMetadataEPNS_11InstructionEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser24ParseOptionalCallingConvERNS_11CallingConv2IDE, 
                       __ZN4llvm8LLParser24ParseOptionalThreadLocalERNS_14GlobalVariable15ThreadLocalModeE, 
                       __ZN4llvm8LLParser27ParseOptionalStackAlignmentERj, 
                       __ZN4llvm8LLParser31ResolveForwardRefBlockAddressesEPNS_8FunctionERNSt3__16vectorINS3_4pairINS_5ValIDEPNS_11GlobalValueEEENS3_9allocatorIS9_EEEEPNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser3RunEv, __ZN4llvm8LLParser7ParseBrERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser8ParsePHIERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser8ParseRetERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser9ParseCallERPNS_11InstructionERNS0_16PerFunctionStateEb, 
                       __ZN4llvm8LLParser9ParseCastERPNS_11InstructionERNS0_16PerFunctionStateEj, 
                       __ZN4llvm8LLParser9ParseLoadERPNS_11InstructionERNS0_16PerFunctionStateE, 
                       __ZN4llvm8LLParser9ParseTypeERPNS_4TypeEb, __ZN4llvm8LoadInst12setAlignmentEj, 
                       __ZN4llvm8LoadInst8AssertOKEv, __ZN4llvm8LoadInstC1EPNS_5ValueEPKcPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueEPKcPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueEPKcbPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueEPKcbPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueEPKcPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueEPKcPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueEPKcbPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueEPKcbPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEbPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEbPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_11InstructionE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEbjPNS_10BasicBlockE, 
                       __ZN4llvm8LoadInstC2EPNS_5ValueERKNS_5TwineEbjPNS_11InstructionE, 
                       __ZN4llvm8LoopInfo12updateUnloopEPNS_4LoopE, __ZN4llvm8LoopInfo13runOnFunctionERNS_8FunctionE, 
                       __ZN4llvm8LoopInfo2IDE, __ZN4llvm8LoopPass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE, 
                       __ZN4llvm8LoopPass18preparePassManagerERNS_7PMStackE, 
                       __ZN4llvm8MCModule10createAtomENS_6MCAtom8AtomTypeEyy, 
                       __ZN4llvm8MCModule5remapEPNS_6MCAtomEyy, __ZN4llvm8MCSymbol16setVariableValueEPKNS_6MCExprE, 
                       __ZN4llvm8MCSymbol21AbsolutePseudoSectionE, __ZN4llvm8MDString3getERNS_11LLVMContextENS_9StringRefE, 
                       __ZN4llvm8MDString6anchorEv, __ZN4llvm8MDStringC1ERNS_11LLVMContextE, 
                       __ZN4llvm8MDStringC2ERNS_11LLVMContextE, __ZN4llvm8MapValueEPKNS_5ValueERNS_8ValueMapIS2_NS_6WeakVHENS_14ValueMapConfigIS2_EEEENS_10RemapFlagsEPNS_20ValueMapTypeRemapperE, 
                       __ZN4llvm8SExtInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8SExtInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8SExtInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8SExtInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8X86InstsE, __ZN4llvm8ZExtInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8ZExtInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8ZExtInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm8ZExtInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm8getTokenENS_9StringRefES0_, __ZN4llvm9ArrayType18isValidElementTypeEPNS_4TypeE, 
                       __ZN4llvm9ArrayType3getEPNS_4TypeEy, __ZN4llvm9ArrayTypeC1EPNS_4TypeEy, 
                       __ZN4llvm9ArrayTypeC2EPNS_4TypeEy, __ZN4llvm9BlackList4isInERKNS_14GlobalVariableE, 
                       __ZN4llvm9BlackList4isInERKNS_6ModuleE, __ZN4llvm9BlackList4isInERKNS_8FunctionE, 
                       __ZN4llvm9BlackList8isInInitERKNS_14GlobalVariableE, 
                       __ZN4llvm9BlackList9inSectionENS_9StringRefES1_, 
                       __ZN4llvm9BlackListC1ENS_9StringRefE, __ZN4llvm9BlackListC2ENS_9StringRefE, 
                       __ZN4llvm9CallGraph10initializeERNS_6ModuleE, __ZN4llvm9CallGraph14spliceFunctionEPKNS_8FunctionES3_, 
                       __ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE, 
                       __ZN4llvm9CallGraph24removeFunctionFromModuleEPNS_13CallGraphNodeE, 
                       __ZN4llvm9CallGraph2IDE, __ZN4llvm9CallGraph7destroyEv, 
                       __ZN4llvm9DIBuilder10createFileENS_9StringRefES1_, 
                       __ZN4llvm9DIBuilder10retainTypeENS_6DITypeE, __ZN4llvm9DIBuilder12createFriendENS_6DITypeES1_, 
                       __ZN4llvm9DIBuilder12createMethodENS_12DIDescriptorENS_9StringRefES2_NS_6DIFileEjNS_6DITypeEbbjjPNS_6MDNodeEjbPNS_8FunctionES6_, 
                       __ZN4llvm9DIBuilder13createTypedefENS_6DITypeENS_9StringRefENS_6DIFileEjNS_12DIDescriptorE, 
                       __ZN4llvm9DIBuilder13insertDeclareEPNS_5ValueENS_10DIVariableEPNS_10BasicBlockE, 
                       __ZN4llvm9DIBuilder13insertDeclareEPNS_5ValueENS_10DIVariableEPNS_11InstructionE, 
                       __ZN4llvm9DIBuilder14createFunctionENS_12DIDescriptorENS_9StringRefES2_NS_6DIFileEjNS_6DITypeEbbjjbPNS_8FunctionEPNS_6MDNodeES8_, 
                       __ZN4llvm9DIBuilder14createObjCIVarENS_9StringRefENS_6DIFileEjyyyjNS_6DITypeEPNS_6MDNodeE, 
                       __ZN4llvm9DIBuilder14createObjCIVarENS_9StringRefENS_6DIFileEjyyyjNS_6DITypeES1_S1_S1_j, 
                       __ZN4llvm9DIBuilder15createArrayTypeEyyNS_6DITypeENS_7DIArrayE, 
                       __ZN4llvm9DIBuilder15createBasicTypeENS_9StringRefEyyj, 
                       __ZN4llvm9DIBuilder15createClassTypeENS_12DIDescriptorENS_9StringRefENS_6DIFileEjyyyjNS_6DITypeENS_7DIArrayEPNS_6MDNodeES7_, 
                       __ZN4llvm9DIBuilder15createNameSpaceENS_12DIDescriptorENS_9StringRefENS_6DIFileEj, 
                       __ZN4llvm9DIBuilder15createUnionTypeENS_12DIDescriptorENS_9StringRefENS_6DIFileEjyyjNS_7DIArrayEj, 
                       __ZN4llvm9DIBuilder16createEnumeratorENS_9StringRefEy, 
                       __ZN4llvm9DIBuilder16createMemberTypeENS_12DIDescriptorENS_9StringRefENS_6DIFileEjyyyjNS_6DITypeE, 
                       __ZN4llvm9DIBuilder16createStructTypeENS_12DIDescriptorENS_9StringRefENS_6DIFileEjyyjNS_7DIArrayEj, 
                       __ZN4llvm9DIBuilder16createVectorTypeEyyNS_6DITypeENS_7DIArrayE, 
                       __ZN4llvm9DIBuilder16getOrCreateArrayENS_8ArrayRefIPNS_5ValueEEE, 
                       __ZN4llvm9DIBuilder17createCompileUnitEjNS_9StringRefES1_S1_bS1_j, 
                       __ZN4llvm9DIBuilder17createForwardDeclEjNS_9StringRefENS_12DIDescriptorENS_6DIFileEjjyy, 
                       __ZN4llvm9DIBuilder17createInheritanceENS_6DITypeES1_yj, 
                       __ZN4llvm9DIBuilder17createNullPtrTypeENS_9StringRefE, 
                       __ZN4llvm9DIBuilder17createPointerTypeENS_6DITypeEyyNS_9StringRefE, 
                       __ZN4llvm9DIBuilder18createLexicalBlockENS_12DIDescriptorENS_6DIFileEjj, 
                       __ZN4llvm9DIBuilder18createObjCPropertyENS_9StringRefENS_6DIFileEjS1_S1_jNS_6DITypeE, 
                       __ZN4llvm9DIBuilder19createLocalVariableEjNS_12DIDescriptorENS_9StringRefENS_6DIFileEjNS_6DITypeEbjj, 
                       __ZN4llvm9DIBuilder19createQualifiedTypeEjNS_6DITypeE, 
                       __ZN4llvm9DIBuilder19createReferenceTypeEjNS_6DITypeE, 
                       __ZN4llvm9DIBuilder19createTemporaryTypeENS_6DIFileE, 
                       __ZN4llvm9DIBuilder19createTemporaryTypeEv, __ZN4llvm9DIBuilder19getOrCreateSubrangeExx, 
                       __ZN4llvm9DIBuilder20createArtificialTypeENS_6DITypeE, 
                       __ZN4llvm9DIBuilder20createGlobalVariableENS_9StringRefENS_6DIFileEjNS_6DITypeEbPNS_5ValueE, 
                       __ZN4llvm9DIBuilder20createStaticVariableENS_12DIDescriptorENS_9StringRefES2_NS_6DIFileEjNS_6DITypeEbPNS_5ValueE, 
                       __ZN4llvm9DIBuilder20createSubroutineTypeENS_6DIFileENS_7DIArrayE, 
                       __ZN4llvm9DIBuilder21createComplexVariableEjNS_12DIDescriptorENS_9StringRefENS_6DIFileEjNS_6DITypeENS_8ArrayRefIPNS_5ValueEEEj, 
                       __ZN4llvm9DIBuilder21createEnumerationTypeENS_12DIDescriptorENS_9StringRefENS_6DIFileEjyyNS_7DIArrayENS_6DITypeE, 
                       __ZN4llvm9DIBuilder22createLexicalBlockFileENS_12DIDescriptorENS_6DIFileE, 
                       __ZN4llvm9DIBuilder23createObjectPointerTypeENS_6DITypeE, 
                       __ZN4llvm9DIBuilder23insertDbgValueIntrinsicEPNS_5ValueEyNS_10DIVariableEPNS_10BasicBlockE, 
                       __ZN4llvm9DIBuilder23insertDbgValueIntrinsicEPNS_5ValueEyNS_10DIVariableEPNS_11InstructionE, 
                       __ZN4llvm9DIBuilder26createUnspecifiedParameterEv, 
                       __ZN4llvm9DIBuilder27createTemplateTypeParameterENS_12DIDescriptorENS_9StringRefENS_6DITypeEPNS_6MDNodeEjj, 
                       __ZN4llvm9DIBuilder28createTemplateValueParameterENS_12DIDescriptorENS_9StringRefENS_6DITypeEyPNS_6MDNodeEjj, 
                       __ZN4llvm9DIBuilder8finalizeEv, __ZN4llvm9DIBuilderC1ERNS_6ModuleE, 
                       __ZN4llvm9DIBuilderC2ERNS_6ModuleE, __ZN4llvm9EmitFPutCEPNS_5ValueES1_RNS_9IRBuilderILb1ENS_14ConstantFolderENS_24IRBuilderDefaultInserterILb1EEEEEPKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm9EmitFPutSEPNS_5ValueES1_RNS_9IRBuilderILb1ENS_14ConstantFolderENS_24IRBuilderDefaultInserterILb1EEEEEPKNS_10TargetDataEPKNS_17TargetLibraryInfoE, 
                       __ZN4llvm9FPExtInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm9FPExtInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm9FPExtInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm9FPExtInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm9FenceInstC1ERNS_11LLVMContextENS_14AtomicOrderingENS_20SynchronizationScopeEPNS_10BasicBlockE, 
                       __ZN4llvm9FenceInstC1ERNS_11LLVMContextENS_14AtomicOrderingENS_20SynchronizationScopeEPNS_11InstructionE, 
                       __ZN4llvm9FenceInstC2ERNS_11LLVMContextENS_14AtomicOrderingENS_20SynchronizationScopeEPNS_10BasicBlockE, 
                       __ZN4llvm9FenceInstC2ERNS_11LLVMContextENS_14AtomicOrderingENS_20SynchronizationScopeEPNS_11InstructionE, 
                       __ZN4llvm9GCOVBlock17collectLineCountsERNS_8FileInfoE, 
                       __ZN4llvm9GCOVBlock4dumpEv, __ZN4llvm9GCOVBlock7addLineENS_9StringRefEj, 
                       __ZN4llvm9GCOVBlockD1Ev, __ZN4llvm9GCOVBlockD2Ev, 
                       __ZN4llvm9GCOVLines17collectLineCountsERNS_8FileInfoENS_9StringRefEj, 
                       __ZN4llvm9GCOVLines4dumpEv, __ZN4llvm9IVVisitor6anchorEv, 
                       __ZN4llvm9InlineAsm14ConstraintInfo17selectAlternativeEj, 
                       __ZN4llvm9InlineAsm14ConstraintInfo5ParseENS_9StringRefERNSt3__16vectorIS1_NS3_9allocatorIS1_EEEE, 
                       __ZN4llvm9InlineAsm14ConstraintInfoC1ERKS1_, __ZN4llvm9InlineAsm14ConstraintInfoC1Ev, 
                       __ZN4llvm9InlineAsm14ConstraintInfoC2ERKS1_, __ZN4llvm9InlineAsm14ConstraintInfoC2Ev, 
                       __ZN4llvm9InlineAsm15destroyConstantEv, __ZN4llvm9InlineAsm16ParseConstraintsENS_9StringRefE, 
                       __ZN4llvm9InlineAsm3getEPNS_12FunctionTypeENS_9StringRefES3_bbNS0_10AsmDialectE, 
                       __ZN4llvm9InlineAsm6VerifyEPNS_12FunctionTypeENS_9StringRefE, 
                       __ZN4llvm9InlineAsmC1EPNS_11PointerTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_bbNS0_10AsmDialectE, 
                       __ZN4llvm9InlineAsmC2EPNS_11PointerTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_bbNS0_10AsmDialectE, 
                       __ZN4llvm9InlineAsmD0Ev, __ZN4llvm9InlineAsmD1Ev, 
                       __ZN4llvm9InlineAsmD2Ev, __ZN4llvm9Intrinsic12isOverloadedENS0_2IDE, 
                       __ZN4llvm9Intrinsic13getAttributesENS0_2IDE, __ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleENS0_2IDENS_8ArrayRefIPNS_4TypeEEE, 
                       __ZN4llvm9Intrinsic25getIntrinsicForGCCBuiltinEPKcS2_, 
                       __ZN4llvm9Intrinsic28getIntrinsicInfoTableEntriesENS0_2IDERNS_15SmallVectorImplINS0_13IITDescriptorEEE, 
                       __ZN4llvm9Intrinsic7getNameENS0_2IDENS_8ArrayRefIPNS_4TypeEEE, 
                       __ZN4llvm9Intrinsic7getTypeERNS_11LLVMContextENS0_2IDENS_8ArrayRefIPNS_4TypeEEE, 
                       __ZN4llvm9MCAsmInfo14getSLEB128SizeEi, __ZN4llvm9MCAsmInfo14getULEB128SizeEj, 
                       __ZN4llvm9MCAsmInfoC1Ev, __ZN4llvm9MCAsmInfoC2Ev, 
                       __ZN4llvm9MCAsmInfoD0Ev, __ZN4llvm9MCAsmInfoD1Ev, 
                       __ZN4llvm9MCAsmInfoD2Ev, __ZN4llvm9MCContext10FatalErrorENS_5SMLocERKNS_5TwineE, 
                       __ZN4llvm9MCContext11GetInstanceEx, __ZN4llvm9MCContext12CreateSymbolENS_9StringRefE, 
                       __ZN4llvm9MCContext12GetDwarfFileENS_9StringRefES1_j, 
                       __ZN4llvm9MCContext12NextInstanceEx, __ZN4llvm9MCContext13getELFSectionENS_9StringRefEjjNS_11SectionKindE, 
                       __ZN4llvm9MCContext13getELFSectionENS_9StringRefEjjNS_11SectionKindEjS1_, 
                       __ZN4llvm9MCContext14getCOFFSectionENS_9StringRefEjiNS_11SectionKindE, 
                       __ZN4llvm9MCContext15getMachOSectionENS_9StringRefES1_jjNS_11SectionKindE, 
                       __ZN4llvm9MCContext16CreateTempSymbolEv, __ZN4llvm9MCContext17GetOrCreateSymbolENS_9StringRefE, 
                       __ZN4llvm9MCContext17GetOrCreateSymbolERKNS_5TwineE, 
                       __ZN4llvm9MCContext21CreateELFGroupSectionEv, __ZN4llvm9MCContext22isValidDwarfFileNumberEj, 
                       __ZN4llvm9MCContext25GetDirectionalLocalSymbolExi, 
                       __ZN4llvm9MCContext28CreateDirectionalLocalSymbolEx, 
                       __ZN4llvm9MCContextC1ERKNS_9MCAsmInfoERKNS_14MCRegisterInfoEPKNS_16MCObjectFileInfoEPKNS_9SourceMgrE, 
                       __ZN4llvm9MCContextC2ERKNS_9MCAsmInfoERKNS_14MCRegisterInfoEPKNS_16MCObjectFileInfoEPKNS_9SourceMgrE, 
                       __ZN4llvm9MCContextD1Ev, __ZN4llvm9MCContextD2Ev, 
                       __ZN4llvm9MCSectionD0Ev, __ZN4llvm9MCSectionD1Ev, 
                       __ZN4llvm9MCSectionD2Ev, __ZN4llvm9MemSDNodeC1EjNS_8DebugLocENS_8SDVTListENS_3EVTEPNS_17MachineMemOperandE, 
                       __ZN4llvm9MemSDNodeC1EjNS_8DebugLocENS_8SDVTListEPKNS_7SDValueEjNS_3EVTEPNS_17MachineMemOperandE, 
                       __ZN4llvm9MemSDNodeC2EjNS_8DebugLocENS_8SDVTListENS_3EVTEPNS_17MachineMemOperandE, 
                       __ZN4llvm9MemSDNodeC2EjNS_8DebugLocENS_8SDVTListEPKNS_7SDValueEjNS_3EVTEPNS_17MachineMemOperandE, 
                       __ZN4llvm9SourceMgr14AddIncludeFileERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5SMLocERS7_, 
                       __ZN4llvm9SourceMgrD1Ev, __ZN4llvm9SourceMgrD2Ev, 
                       __ZN4llvm9SplitEdgeEPNS_10BasicBlockES1_PNS_4PassE, 
                       __ZN4llvm9Statistic17RegisterStatisticEv, __ZN4llvm9StoreInst12setAlignmentEj, 
                       __ZN4llvm9StoreInst8AssertOKEv, __ZN4llvm9StoreInstC1EPNS_5ValueES2_PNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC1EPNS_5ValueES2_PNS_11InstructionE, 
                       __ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE, 
                       __ZN4llvm9StoreInstC1EPNS_5ValueES2_bjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC1EPNS_5ValueES2_bjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_11InstructionE, 
                       __ZN4llvm9StoreInstC1EPNS_5ValueES2_bjPNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC1EPNS_5ValueES2_bjPNS_11InstructionE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_PNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_PNS_11InstructionE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_bPNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_bPNS_11InstructionE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_bjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_bjNS_14AtomicOrderingENS_20SynchronizationScopeEPNS_11InstructionE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_bjPNS_10BasicBlockE, 
                       __ZN4llvm9StoreInstC2EPNS_5ValueES2_bjPNS_11InstructionE, 
                       __ZN4llvm9StringRef13edit_distanceES0_bj, __ZN4llvm9StringRef4nposE, 
                       __ZN4llvm9TruncInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm9TruncInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm9TruncInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_10BasicBlockE, 
                       __ZN4llvm9TruncInstC2EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE, 
                       __ZN4llvm9X86StagesE, __ZN4llvmlsERNS_11raw_ostreamENSt3__14pairIPKNS_10BasicBlockES6_EE, 
                       __ZN4llvmlsERNS_11raw_ostreamENSt3__14pairIPKNS_17MachineBasicBlockES6_EE, 
                       __ZN4llvmlsERNS_11raw_ostreamEPKNS_15MachineFunctionE, 
                       __ZN4llvmlsERNS_11raw_ostreamEPKNS_17MachineBasicBlockE, 
                       __ZN4llvmlsERNS_11raw_ostreamERKNS_14BlockFrequencyE, 
                       __ZN4llvmlsERNS_11raw_ostreamERKNS_16MachineLoopRangeE, 
                       __ZN4llvmlsERNS_11raw_ostreamERKNS_17BranchProbabilityE, 
                       __ZN4llvmlsERNS_11raw_ostreamERKNS_17MachineBasicBlockE, 
                       __ZN4llvmlsERNS_11raw_ostreamERKNS_17MachineMemOperandE, 
                       __ZN4llvmlsERNS_11raw_ostreamERKNS_7MCFixupE, __ZN4llvmlsERNS_11raw_ostreamERKNS_9LiveRangeE, 
                       __ZNK4llvm10AllocaInst10clone_implEv, __ZNK4llvm10AllocaInst14isStaticAllocaEv, 
                       __ZNK4llvm10AllocaInst16getAllocatedTypeEv, __ZNK4llvm10AllocaInst17isArrayAllocationEv, 
                       __ZNK4llvm10AsmPrinter11EmitCFAByteEj, __ZNK4llvm10AsmPrinter11EmitLinkageEjPNS_8MCSymbolE, 
                       __ZNK4llvm10AsmPrinter11EmitSLEB128EiPKc, __ZNK4llvm10AsmPrinter11EmitULEB128EjPKcj, 
                       __ZNK4llvm10AsmPrinter11printOffsetExRNS_11raw_ostreamE, 
                       __ZNK4llvm10AsmPrinter12GetCPISymbolEj, __ZNK4llvm10AsmPrinter12GetJTISymbolEjb, 
                       __ZNK4llvm10AsmPrinter12PrintSpecialEPKNS_12MachineInstrERNS_11raw_ostreamEPKc, 
                       __ZNK4llvm10AsmPrinter13EmitAlignmentEjPKNS_11GlobalValueE, 
                       __ZNK4llvm10AsmPrinter13EmitInlineAsmENS_9StringRefEPKNS_6MDNodeENS_9InlineAsm10AsmDialectE, 
                       __ZNK4llvm10AsmPrinter13EmitInlineAsmEPKNS_12MachineInstrE, 
                       __ZNK4llvm10AsmPrinter13EmitReferenceEPKNS_11GlobalValueEj, 
                       __ZNK4llvm10AsmPrinter13EmitReferenceEPKNS_8MCSymbolEj, 
                       __ZNK4llvm10AsmPrinter13GetTempSymbolENS_9StringRefE, 
                       __ZNK4llvm10AsmPrinter13GetTempSymbolENS_9StringRefEj, 
                       __ZNK4llvm10AsmPrinter13getTargetDataEv, __ZNK4llvm10AsmPrinter14EmitDwarfRegOpERKNS_15MachineLocationE, 
                       __ZNK4llvm10AsmPrinter14EmitVisibilityEPNS_8MCSymbolEjb, 
                       __ZNK4llvm10AsmPrinter14GetJTSetSymbolEjj, __ZNK4llvm10AsmPrinter16EmitCFIFrameMoveERKNS_11MachineMoveE, 
                       __ZNK4llvm10AsmPrinter16EmitEncodingByteEjPKc, __ZNK4llvm10AsmPrinter16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm10AsmPrinter17EmitSectionOffsetEPKNS_8MCSymbolES3_, 
                       __ZNK4llvm10AsmPrinter17getCurrentSectionEv, __ZNK4llvm10AsmPrinter17getFunctionNumberEv, 
                       __ZNK4llvm10AsmPrinter18EmitJumpTableEntryEPKNS_20MachineJumpTableInfoEPKNS_17MachineBasicBlockEj, 
                       __ZNK4llvm10AsmPrinter18getObjFileLoweringEv, __ZNK4llvm10AsmPrinter19EmitBasicBlockStartEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm10AsmPrinter19EmitLabelDifferenceEPKNS_8MCSymbolES3_j, 
                       __ZNK4llvm10AsmPrinter19EmitLabelPlusOffsetEPKNS_8MCSymbolEyj, 
                       __ZNK4llvm10AsmPrinter21GetBlockAddressSymbolEPKNS_10BasicBlockE, 
                       __ZNK4llvm10AsmPrinter21GetBlockAddressSymbolEPKNS_12BlockAddressE, 
                       __ZNK4llvm10AsmPrinter21GetSizeOfEncodedValueEj, 
                       __ZNK4llvm10AsmPrinter21getDebugValueLocationEPKNS_12MachineInstrE, 
                       __ZNK4llvm10AsmPrinter23GetExternalSymbolSymbolENS_9StringRefE, 
                       __ZNK4llvm10AsmPrinter25EmitLabelOffsetDifferenceEPKNS_8MCSymbolEyS3_j, 
                       __ZNK4llvm10AsmPrinter28GetSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefEb, 
                       __ZNK4llvm10AsmPrinter33isBlockOnlyReachableByFallthroughEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm10AsmPrinter34needsRelocationsForDwarfStringPoolEv, 
                       __ZNK4llvm10AsmPrinter8EmitInt8Ei, __ZNK4llvm10AsmPrinter9EmitInt16Ei, 
                       __ZNK4llvm10AsmPrinter9EmitInt32Ei, __ZNK4llvm10Attributes11getAsStringEv, 
                       __ZNK4llvm10BasicBlock10getContextEv, __ZNK4llvm10BasicBlock12isLandingPadEv, 
                       __ZNK4llvm10BasicBlock13getTerminatorEv, __ZNK4llvm10BasicBlock17getLandingPadInstEv, 
                       __ZNK4llvm10BranchInst10clone_implEv, __ZNK4llvm10BranchInst13getSuccessorVEj, 
                       __ZNK4llvm10BranchInst17getNumSuccessorsVEv, __ZNK4llvm10ConstantFP14isExactlyValueERKNS_7APFloatE, 
                       __ZNK4llvm10DIEInteger6SizeOfEPNS_10AsmPrinterEj, 
                       __ZNK4llvm10DIEInteger9EmitValueEPNS_10AsmPrinterEj, 
                       __ZNK4llvm10DILocation6VerifyEv, __ZNK4llvm10DISubrange13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm10DIVariable12getInlinedAtEv, __ZNK4llvm10DIVariable13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm10DIVariable17printExtendedNameERNS_11raw_ostreamE, 
                       __ZNK4llvm10DIVariable18getNumAddrElementsEv, __ZNK4llvm10DIVariable6VerifyEv, 
                       __ZNK4llvm10DwarfDebug17emitAbbreviationsEv, __ZNK4llvm10FPToSIInst10clone_implEv, 
                       __ZNK4llvm10FPToUIInst10clone_implEv, __ZNK4llvm10InvokeInst10clone_implEv, 
                       __ZNK4llvm10InvokeInst12paramHasAttrEjNS_10AttributesE, 
                       __ZNK4llvm10InvokeInst13getSuccessorVEj, __ZNK4llvm10InvokeInst17getLandingPadInstEv, 
                       __ZNK4llvm10InvokeInst17getNumSuccessorsVEv, __ZNK4llvm10LiveStacks16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm10LiveStacks5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm10MCAsmLexer6getLocEv, __ZNK4llvm10ModulePass17createPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZNK4llvm10ModulePass27getPotentialPassManagerTypeEv, 
                       __ZNK4llvm10RegionInfo12getRegionForEPNS_10BasicBlockE, 
                       __ZNK4llvm10RegionInfo14getNextPostDomEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_8DenseMapIPS2_S6_NS_12DenseMapInfoIS6_EEEE, 
                       __ZNK4llvm10RegionInfo14insertShortCutEPNS_10BasicBlockES2_PNS_8DenseMapIS2_S2_NS_12DenseMapInfoIS2_EEEE, 
                       __ZNK4llvm10RegionInfo14verifyAnalysisEv, __ZNK4llvm10RegionInfo15getCommonRegionEPNS_6RegionES2_, 
                       __ZNK4llvm10RegionInfo15getCommonRegionERNS_15SmallVectorImplIPNS_10BasicBlockEEE, 
                       __ZNK4llvm10RegionInfo15getCommonRegionERNS_15SmallVectorImplIPNS_6RegionEEE, 
                       __ZNK4llvm10RegionInfo15isTrivialRegionEPNS_10BasicBlockES2_, 
                       __ZNK4llvm10RegionInfo16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm10RegionInfo16getMaxRegionExitEPNS_10BasicBlockE, 
                       __ZNK4llvm10RegionInfo19isCommonDomFrontierEPNS_10BasicBlockES2_S2_, 
                       __ZNK4llvm10RegionInfo5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm10RegionInfo8isRegionEPNS_10BasicBlockES2_, 
                       __ZNK4llvm10RegionInfoixEPNS_10BasicBlockE, __ZNK4llvm10RegionPass17createPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZNK4llvm10ResumeInst10clone_implEv, __ZNK4llvm10ResumeInst13getSuccessorVEj, 
                       __ZNK4llvm10ResumeInst17getNumSuccessorsVEv, __ZNK4llvm10ReturnInst10clone_implEv, 
                       __ZNK4llvm10ReturnInst13getSuccessorVEj, __ZNK4llvm10ReturnInst17getNumSuccessorsVEv, 
                       __ZNK4llvm10SIToFPInst10clone_implEv, __ZNK4llvm10SSAUpdater16HasValueForBlockEPNS_10BasicBlockE, 
                       __ZNK4llvm10SelectInst10clone_implEv, __ZNK4llvm10StructType17isLayoutIdenticalEPS0_, 
                       __ZNK4llvm10StructType7getNameEv, __ZNK4llvm10StructType7isSizedEv, 
                       __ZNK4llvm10SwitchInst10clone_implEv, __ZNK4llvm10SwitchInst13getSuccessorVEj, 
                       __ZNK4llvm10SwitchInst17getNumSuccessorsVEv, __ZNK4llvm10TargetData12getAlignmentEPNS_4TypeEb, 
                       __ZNK4llvm10TargetData13getIntPtrTypeERNS_11LLVMContextE, 
                       __ZNK4llvm10TargetData15getStructLayoutEPNS_10StructTypeE, 
                       __ZNK4llvm10TargetData16getAlignmentInfoENS_13AlignTypeEnumEjbPNS_4TypeE, 
                       __ZNK4llvm10TargetData16getIndexedOffsetEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE, 
                       __ZNK4llvm10TargetData17getTypeSizeInBitsEPNS_4TypeE, 
                       __ZNK4llvm10TargetData19getABITypeAlignmentEPNS_4TypeE, 
                       __ZNK4llvm10TargetData20getPrefTypeAlignmentEPNS_4TypeE, 
                       __ZNK4llvm10TargetData21getPreferredAlignmentEPKNS_14GlobalVariableE, 
                       __ZNK4llvm10TargetData23getStringRepresentationEv, 
                       __ZNK4llvm10TargetData24getPreferredAlignmentLogEPKNS_14GlobalVariableE, 
                       __ZNK4llvm10TargetData25getCallFrameTypeAlignmentEPNS_4TypeE, 
                       __ZNK4llvm10TargetData26getABIIntegerTypeAlignmentEj, 
                       __ZNK4llvm10TargetData30getPreferredTypeAlignmentShiftEPNS_4TypeE, 
                       __ZNK4llvm10TimeRecord5printERKS0_RNS_11raw_ostreamE, 
                       __ZNK4llvm10UIToFPInst10clone_implEv, __ZNK4llvm10UndefValue15getElementValueEPNS_8ConstantE, 
                       __ZNK4llvm10UndefValue15getElementValueEj, __ZNK4llvm10UndefValue16getStructElementEj, 
                       __ZNK4llvm10UndefValue20getSequentialElementEv, 
                       __ZNK4llvm10VirtRegMap5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm10error_code7messageEv, __ZNK4llvm11AttrListPtr10removeAttrEjNS_10AttributesE, 
                       __ZNK4llvm11AttrListPtr11getNumSlotsEv, __ZNK4llvm11AttrListPtr13getAttributesEj, 
                       __ZNK4llvm11AttrListPtr16hasAttrSomewhereENS_10AttributesE, 
                       __ZNK4llvm11AttrListPtr4dumpEv, __ZNK4llvm11AttrListPtr7addAttrEjNS_10AttributesE, 
                       __ZNK4llvm11AttrListPtr7getSlotEj, __ZNK4llvm11BitCastInst10clone_implEv, 
                       __ZNK4llvm11DIBasicType6VerifyEv, __ZNK4llvm11DINameSpace6VerifyEv, 
                       __ZNK4llvm11DbgVariable7getTypeEv, __ZNK4llvm11EdgeBundles16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm11EdgeBundles4viewEv, __ZNK4llvm11ExtAddrMode5printERNS_11raw_ostreamE, 
                       __ZNK4llvm11FPTruncInst10clone_implEv, __ZNK4llvm11GlobalAlias16getAliasedGlobalEv, 
                       __ZNK4llvm11GlobalAlias20resolveAliasedGlobalEb, 
                       __ZNK4llvm11GlobalValue13isDeclarationEv, __ZNK4llvm11GlobalValue16isMaterializableEv, 
                       __ZNK4llvm11GlobalValue18isDematerializableEv, __ZNK4llvm11Instruction13isIdenticalToEPKS0_, 
                       __ZNK4llvm11Instruction15getMetadataImplENS_9StringRefE, 
                       __ZNK4llvm11Instruction15getMetadataImplEj, __ZNK4llvm11Instruction16mayWriteToMemoryEv, 
                       __ZNK4llvm11Instruction17isSameOperationAsEPKS0_j, 
                       __ZNK4llvm11Instruction17mayReadFromMemoryEv, __ZNK4llvm11Instruction18getAllMetadataImplERNS_15SmallVectorImplINSt3__14pairIjPNS_6MDNodeEEEEE, 
                       __ZNK4llvm11Instruction20isUsedOutsideOfBlockEPKNS_10BasicBlockE, 
                       __ZNK4llvm11Instruction24isIdenticalToWhenDefinedEPKS0_, 
                       __ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplINSt3__14pairIjPNS_6MDNodeEEEEE, 
                       __ZNK4llvm11Instruction5cloneEv, __ZNK4llvm11Instruction8mayThrowEv, 
                       __ZNK4llvm11IntegerType19isPowerOf2ByteWidthEv, 
                       __ZNK4llvm11IntegerType7getMaskEv, __ZNK4llvm11LLVMContext11getMDKindIDENS_9StringRefE, 
                       __ZNK4llvm11LLVMContext14getMDKindNamesERNS_15SmallVectorImplINS_9StringRefEEE, 
                       __ZNK4llvm11LLVMContext29getInlineAsmDiagnosticContextEv, 
                       __ZNK4llvm11LLVMContext29getInlineAsmDiagnosticHandlerEv, 
                       __ZNK4llvm11LibCallInfo15getFunctionInfoEPKNS_8FunctionE, 
                       __ZNK4llvm11LibCallInfo15getLocationInfoEj, __ZNK4llvm11MCAsmLayout11EnsureValidEPKNS_10MCFragmentE, 
                       __ZNK4llvm11MCAsmLayout15getSymbolOffsetEPKNS_12MCSymbolDataE, 
                       __ZNK4llvm11MCAsmLayout17getFragmentOffsetEPKNS_10MCFragmentE, 
                       __ZNK4llvm11MCAsmLayout18getSectionFileSizeEPKNS_13MCSectionDataE, 
                       __ZNK4llvm11MCAsmLayout18isFragmentUpToDateEPKNS_10MCFragmentE, 
                       __ZNK4llvm11MCAsmLayout21getSectionAddressSizeEPKNS_13MCSectionDataE, 
                       __ZNK4llvm11MCAssembler13evaluateFixupERKNS_11MCAsmLayoutERKNS_7MCFixupEPKNS_10MCFragmentERNS_7MCValueERy, 
                       __ZNK4llvm11MCAssembler16writeSectionDataEPKNS_13MCSectionDataERKNS_11MCAsmLayoutE, 
                       __ZNK4llvm11MCAssembler19computeFragmentSizeERKNS_11MCAsmLayoutERKNS_10MCFragmentE, 
                       __ZNK4llvm11MCAssembler20fixupNeedsRelaxationERKNS_7MCFixupEPKNS_14MCInstFragmentERKNS_11MCAsmLayoutE, 
                       __ZNK4llvm11MCAssembler21isSymbolLinkerVisibleERKNS_8MCSymbolE, 
                       __ZNK4llvm11MCAssembler23fragmentNeedsRelaxationEPKNS_14MCInstFragmentERKNS_11MCAsmLayoutE, 
                       __ZNK4llvm11MCAssembler7getAtomEPKNS_12MCSymbolDataE, 
                       __ZNK4llvm11MCDwarfFile5printERNS_11raw_ostreamE, 
                       __ZNK4llvm11NamedMDNode10getOperandEj, __ZNK4llvm11NamedMDNode14getNumOperandsEv, 
                       __ZNK4llvm11NamedMDNode4dumpEv, __ZNK4llvm11NamedMDNode5printERNS_11raw_ostreamEPNS_24AssemblyAnnotationWriterE, 
                       __ZNK4llvm11NamedMDNode7getNameEv, __ZNK4llvm11ProfilePath12getFrequencyEv, 
                       __ZNK4llvm11ProfilePath12getPathEdgesEv, __ZNK4llvm11ProfilePath13getPathBlocksEv, 
                       __ZNK4llvm11ProfilePath19getFirstBlockInPathEv, 
                       __ZNK4llvm11SCEVUnknown10isOffsetOfERPNS_4TypeERPNS_8ConstantE, 
                       __ZNK4llvm11SCEVUnknown8isSizeOfERPNS_4TypeE, __ZNK4llvm11SCEVUnknown9isAlignOfERPNS_4TypeE, 
                       __ZNK4llvm11ScheduleDAG11getNodeDescEPKNS_6SDNodeE, 
                       __ZNK4llvm11SlotIndexes16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm11_do_message7messageEi, __ZNK4llvm11raw_ostream21preferred_buffer_sizeEv, 
                       __ZNK4llvm12BranchFolder18MergePotentialsEltltERKS1_, 
                       __ZNK4llvm12ConstantExpr10getIndicesEv, __ZNK4llvm12ConstantExpr10hasIndicesEv, 
                       __ZNK4llvm12ConstantExpr12getPredicateEv, __ZNK4llvm12ConstantExpr13getOpcodeNameEv, 
                       __ZNK4llvm12ConstantExpr15getWithOperandsENS_8ArrayRefIPNS_8ConstantEEEPNS_4TypeE, 
                       __ZNK4llvm12ConstantExpr22getWithOperandReplacedEjPNS_8ConstantE, 
                       __ZNK4llvm12ConstantExpr31isGEPWithNoNotionalOverIndexingEv, 
                       __ZNK4llvm12ConstantExpr6isCastEv, __ZNK4llvm12ConstantExpr9isCompareEv, 
                       __ZNK4llvm12DIDescriptor10isSubrangeEv, __ZNK4llvm12DIDescriptor10isVariableEv, 
                       __ZNK4llvm12DIDescriptor11isBasicTypeEv, __ZNK4llvm12DIDescriptor11isNameSpaceEv, 
                       __ZNK4llvm12DIDescriptor12isEnumeratorEv, __ZNK4llvm12DIDescriptor12isSubprogramEv, 
                       __ZNK4llvm12DIDescriptor13isCompileUnitEv, __ZNK4llvm12DIDescriptor13isDerivedTypeEv, 
                       __ZNK4llvm12DIDescriptor14getStringFieldEj, __ZNK4llvm12DIDescriptor14getUInt64FieldEj, 
                       __ZNK4llvm12DIDescriptor14isLexicalBlockEv, __ZNK4llvm12DIDescriptor14isObjCPropertyEv, 
                       __ZNK4llvm12DIDescriptor15isCompositeTypeEv, __ZNK4llvm12DIDescriptor16getConstantFieldEj, 
                       __ZNK4llvm12DIDescriptor16getFunctionFieldEj, __ZNK4llvm12DIDescriptor16isGlobalVariableEv, 
                       __ZNK4llvm12DIDescriptor18getDescriptorFieldEj, 
                       __ZNK4llvm12DIDescriptor18isLexicalBlockFileEv, 
                       __ZNK4llvm12DIDescriptor22getGlobalVariableFieldEj, 
                       __ZNK4llvm12DIDescriptor22isUnspecifiedParameterEv, 
                       __ZNK4llvm12DIDescriptor23isTemplateTypeParameterEv, 
                       __ZNK4llvm12DIDescriptor24isTemplateValueParameterEv, 
                       __ZNK4llvm12DIDescriptor4dumpEv, __ZNK4llvm12DIDescriptor5printERNS_11raw_ostreamE, 
                       __ZNK4llvm12DIDescriptor6isFileEv, __ZNK4llvm12DIDescriptor6isTypeEv, 
                       __ZNK4llvm12DIDescriptor7isScopeEv, __ZNK4llvm12DIDescriptor8isGlobalEv, 
                       __ZNK4llvm12DIEnumerator13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm12DISubprogram11isOptimizedEv, __ZNK4llvm12DISubprogram12getVariablesEv, 
                       __ZNK4llvm12DISubprogram13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm12DISubprogram17getVariablesNodesEv, __ZNK4llvm12DISubprogram6VerifyEv, 
                       __ZNK4llvm12DbgValueInst8getValueEv, __ZNK4llvm12FunctionPass17createPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZNK4llvm12FunctionPass27getPotentialPassManagerTypeEv, 
                       __ZNK4llvm12InstrEmitter24getDstOfOnlyCopyToRegUseEPNS_6SDNodeEj, 
                       __ZNK4llvm12IntEqClasses10findLeaderEj, __ZNK4llvm12IntToPtrInst10clone_implEv, 
                       __ZNK4llvm12LexicalScope4dumpEv, __ZNK4llvm12LiveInterval12overlapsFromERKS0_PKNS_9LiveRangeE, 
                       __ZNK4llvm12LiveInterval5printERNS_11raw_ostreamE, 
                       __ZNK4llvm12LiveInterval7getSizeEv, __ZNK4llvm12LiveInterval8overlapsENS_9SlotIndexES1_, 
                       __ZNK4llvm12LiveInterval8overlapsERKS0_RKNS_13CoalescerPairERKNS_11SlotIndexesE, 
                       __ZNK4llvm12MCAsmBackend16getFixupKindInfoENS_11MCFixupKindE, 
                       __ZNK4llvm12MCSectionELF12UseCodeAlignEv, __ZNK4llvm12MCSectionELF16isVirtualSectionEv, 
                       __ZNK4llvm12MCSectionELF20PrintSwitchToSectionERKNS_9MCAsmInfoERNS_11raw_ostreamE, 
                       __ZNK4llvm12MCSectionELF26ShouldOmitSectionDirectiveENS_9StringRefERKNS_9MCAsmInfoE, 
                       __ZNK4llvm12MachineInstr12isSafeToMoveEPKNS_15TargetInstrInfoEPNS_13AliasAnalysisERb, 
                       __ZNK4llvm12MachineInstr13getBundleSizeEv, __ZNK4llvm12MachineInstr13isIdenticalToEPKS0_NS0_11MICheckTypeE, 
                       __ZNK4llvm12MachineInstr13isSafeToReMatEPKNS_15TargetInstrInfoEPNS_13AliasAnalysisEj, 
                       __ZNK4llvm12MachineInstr14allDefsAreDeadEv, __ZNK4llvm12MachineInstr15isInvariantLoadEPNS_13AliasAnalysisE, 
                       __ZNK4llvm12MachineInstr18findTiedOperandIdxEj, 
                       __ZNK4llvm12MachineInstr18isConstantValuePHIEv, 
                       __ZNK4llvm12MachineInstr19getInlineAsmDialectEv, 
                       __ZNK4llvm12MachineInstr19hasOrderedMemoryRefEv, 
                       __ZNK4llvm12MachineInstr19hasPropertyInBundleEjNS0_9QueryTypeE, 
                       __ZNK4llvm12MachineInstr20findInlineAsmFlagIdxEjPj, 
                       __ZNK4llvm12MachineInstr21getRegClassConstraintEjPKNS_15TargetInstrInfoEPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12MachineInstr22getNumExplicitOperandsEv, 
                       __ZNK4llvm12MachineInstr23findFirstPredOperandIdxEv, 
                       __ZNK4llvm12MachineInstr23hasUnmodeledSideEffectsEv, 
                       __ZNK4llvm12MachineInstr24isStackAligningInlineAsmEv, 
                       __ZNK4llvm12MachineInstr25findRegisterDefOperandIdxEjbbPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12MachineInstr25findRegisterUseOperandIdxEjbPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12MachineInstr26readsWritesVirtualRegisterEjPNS_15SmallVectorImplIjEE, 
                       __ZNK4llvm12MachineInstr4dumpEv, __ZNK4llvm12MachineInstr5printERNS_11raw_ostreamEPKNS_13TargetMachineE, 
                       __ZNK4llvm12MachineInstr9emitErrorENS_9StringRefE, 
                       __ZNK4llvm12MachineInstr9isBundledEv, __ZNK4llvm12MemoryObject9readBytesEyyPhPy, 
                       __ZNK4llvm12PHITransAddr28IsPotentiallyPHITranslatableEv, 
                       __ZNK4llvm12PHITransAddr6VerifyEv, __ZNK4llvm12PassRegistry11getPassInfoENS_9StringRefE, 
                       __ZNK4llvm12PassRegistry11getPassInfoEPKv, __ZNK4llvm12PassRegistry7getImplEv, 
                       __ZNK4llvm12PrintRegUnit5printERNS_11raw_ostreamE, 
                       __ZNK4llvm12PtrToIntInst10clone_implEv, __ZNK4llvm12RegScavenger11isAliasUsedEj, 
                       __ZNK4llvm12RegScavenger13FindUnusedRegEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm12SMDiagnostic5printEPKcRNS_11raw_ostreamEb, 
                       __ZNK4llvm12SelectionDAG11GetOrderingEPKNS_6SDNodeE, 
                       __ZNK4llvm12SelectionDAG13SignBitIsZeroENS_7SDValueEj, 
                       __ZNK4llvm12SelectionDAG13getGraphAttrsEPKNS_6SDNodeE, 
                       __ZNK4llvm12SelectionDAG15getEVTAlignmentENS_3EVTE, 
                       __ZNK4llvm12SelectionDAG15isKnownNeverNaNENS_7SDValueE, 
                       __ZNK4llvm12SelectionDAG16isKnownNeverZeroENS_7SDValueE, 
                       __ZNK4llvm12SelectionDAG17ComputeMaskedBitsENS_7SDValueERNS_5APIntES3_j, 
                       __ZNK4llvm12SelectionDAG17InferPtrAlignmentENS_7SDValueE, 
                       __ZNK4llvm12SelectionDAG17MaskedValueIsZeroENS_7SDValueERKNS_5APIntEj, 
                       __ZNK4llvm12SelectionDAG17isConsecutiveLoadEPNS_10LoadSDNodeES2_ji, 
                       __ZNK4llvm12SelectionDAG18ComputeNumSignBitsENS_7SDValueEj, 
                       __ZNK4llvm12SelectionDAG24isBaseWithConstantOffsetENS_7SDValueE, 
                       __ZNK4llvm12SelectionDAG4dumpEv, __ZNK4llvm12SelectionDAG9isEqualToENS_7SDValueES1_, 
                       __ZNK4llvm12SparseSolver5PrintERNS_8FunctionERNS_11raw_ostreamE, 
                       __ZNK4llvm12StructLayout26getElementContainingOffsetEy, 
                       __ZNK4llvm12X86InstrInfo11copyPhysRegERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEENS_8DebugLocEjjb, 
                       __ZNK4llvm12X86InstrInfo12InsertBranchERNS_17MachineBasicBlockEPS1_S3_RKNS_15SmallVectorImplINS_14MachineOperandEEENS_8DebugLocE, 
                       __ZNK4llvm12X86InstrInfo12RemoveBranchERNS_17MachineBasicBlockE, 
                       __ZNK4llvm12X86InstrInfo12insertSelectERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEENS_8DebugLocEjRKNS_15SmallVectorImplINS_14MachineOperandEEEjj, 
                       __ZNK4llvm12X86InstrInfo13AnalyzeBranchERNS_17MachineBasicBlockERPS1_S4_RNS_15SmallVectorImplINS_14MachineOperandEEEb, 
                       __ZNK4llvm12X86InstrInfo13reMaterializeERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEEjjPKS4_RKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12X86InstrInfo14analyzeCompareEPKNS_12MachineInstrERjS4_RiS5_, 
                       __ZNK4llvm12X86InstrInfo14isFrameOperandEPKNS_12MachineInstrEjRi, 
                       __ZNK4llvm12X86InstrInfo14storeRegToAddrERNS_15MachineFunctionEjbRNS_15SmallVectorImplINS_14MachineOperandEEEPKNS_19TargetRegisterClassEPPNS_17MachineMemOperandESC_RNS3_IPNS_12MachineInstrEEE, 
                       __ZNK4llvm12X86InstrInfo15canInsertSelectERKNS_17MachineBasicBlockERKNS_15SmallVectorImplINS_14MachineOperandEEEjjRiS9_S9_, 
                       __ZNK4llvm12X86InstrInfo15loadRegFromAddrERNS_15MachineFunctionEjRNS_15SmallVectorImplINS_14MachineOperandEEEPKNS_19TargetRegisterClassEPPNS_17MachineMemOperandESC_RNS3_IPNS_12MachineInstrEEE, 
                       __ZNK4llvm12X86InstrInfo16getGlobalBaseRegEPNS_15MachineFunctionE, 
                       __ZNK4llvm12X86InstrInfo16isHighLatencyDefEi, __ZNK4llvm12X86InstrInfo17optimizeLoadInstrEPNS_12MachineInstrEPKNS_19MachineRegisterInfoERjRS2_, 
                       __ZNK4llvm12X86InstrInfo18commuteInstructionEPNS_12MachineInstrEb, 
                       __ZNK4llvm12X86InstrInfo18expandPostRAPseudoENS_17MachineBasicBlock15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS3_EEEE, 
                       __ZNK4llvm12X86InstrInfo18getExecutionDomainEPKNS_12MachineInstrE, 
                       __ZNK4llvm12X86InstrInfo18isStoreToStackSlotEPKNS_12MachineInstrERi, 
                       __ZNK4llvm12X86InstrInfo18setExecutionDomainEPNS_12MachineInstrEj, 
                       __ZNK4llvm12X86InstrInfo19isLoadFromStackSlotEPKNS_12MachineInstrERi, 
                       __ZNK4llvm12X86InstrInfo19storeRegToStackSlotERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEEjbiPKNS_19TargetRegisterClassEPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12X86InstrInfo19unfoldMemoryOperandERNS_12SelectionDAGEPNS_6SDNodeERNS_15SmallVectorImplIS4_EE, 
                       __ZNK4llvm12X86InstrInfo19unfoldMemoryOperandERNS_15MachineFunctionEPNS_12MachineInstrEjbbRNS_15SmallVectorImplIS4_EE, 
                       __ZNK4llvm12X86InstrInfo20canFoldMemoryOperandEPKNS_12MachineInstrERKNS_15SmallVectorImplIjEE, 
                       __ZNK4llvm12X86InstrInfo20loadRegFromStackSlotERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEEjiPKNS_19TargetRegisterClassEPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12X86InstrInfo20optimizeCompareInstrEPNS_12MachineInstrEjjiiPKNS_19MachineRegisterInfoE, 
                       __ZNK4llvm12X86InstrInfo21convertToThreeAddressERNS_14ilist_iteratorINS_17MachineBasicBlockEEERNS2_15bundle_iteratorINS_12MachineInstrENS1_IS6_EEEEPNS_13LiveVariablesE, 
                       __ZNK4llvm12X86InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionEPNS_12MachineInstrERKNS_15SmallVectorImplIjEES4_, 
                       __ZNK4llvm12X86InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionEPNS_12MachineInstrERKNS_15SmallVectorImplIjEEi, 
                       __ZNK4llvm12X86InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionEPNS_12MachineInstrEjRKNS_15SmallVectorImplINS_14MachineOperandEEEjj, 
                       __ZNK4llvm12X86InstrInfo21getNoopForMachoTargetERNS_6MCInstE, 
                       __ZNK4llvm12X86InstrInfo21hasHighOperandLatencyEPKNS_18InstrItineraryDataEPKNS_19MachineRegisterInfoEPKNS_12MachineInstrEjS9_j, 
                       __ZNK4llvm12X86InstrInfo21isCoalescableExtInstrERKNS_12MachineInstrERjS4_S4_, 
                       __ZNK4llvm12X86InstrInfo22ReverseBranchConditionERNS_15SmallVectorImplINS_14MachineOperandEEE, 
                       __ZNK4llvm12X86InstrInfo23areLoadsFromSameBasePtrEPNS_6SDNodeES2_RxS3_, 
                       __ZNK4llvm12X86InstrInfo23shouldScheduleLoadsNearEPNS_6SDNodeES2_xxj, 
                       __ZNK4llvm12X86InstrInfo24emitFrameIndexDebugValueERNS_15MachineFunctionEiyPKNS_6MDNodeENS_8DebugLocE, 
                       __ZNK4llvm12X86InstrInfo24isSafeToMoveRegClassDefsEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm12X86InstrInfo24isStoreToStackSlotPostFEEPKNS_12MachineInstrERi, 
                       __ZNK4llvm12X86InstrInfo24isUnpredicatedTerminatorEPKNS_12MachineInstrE, 
                       __ZNK4llvm12X86InstrInfo25breakPartialRegDependencyENS_17MachineBasicBlock15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS3_EEEEjPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12X86InstrInfo25isLoadFromStackSlotPostFEEPKNS_12MachineInstrERi, 
                       __ZNK4llvm12X86InstrInfo26getOpcodeAfterMemoryUnfoldEjbbPj, 
                       __ZNK4llvm12X86InstrInfo28convertToThreeAddressWithLEAEjRNS_14ilist_iteratorINS_17MachineBasicBlockEEERNS2_15bundle_iteratorINS_12MachineInstrENS1_IS6_EEEEPNS_13LiveVariablesE, 
                       __ZNK4llvm12X86InstrInfo28getPartialRegUpdateClearanceEPKNS_12MachineInstrEjPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm12X86InstrInfo33isReallyTriviallyReMaterializableEPKNS_12MachineInstrEPNS_13AliasAnalysisE, 
                       __ZNK4llvm12X86Subtarget13getBZeroEntryEv, __ZNK4llvm12X86Subtarget21enablePostRASchedulerENS_10CodeGenOpt5LevelERNS_19TargetSubtargetInfo16AntiDepBreakModeERNS_15SmallVectorImplIPKNS_19TargetRegisterClassEEE, 
                       __ZNK4llvm12X86Subtarget23ClassifyGlobalReferenceEPKNS_11GlobalValueERKNS_13TargetMachineE, 
                       __ZNK4llvm12X86Subtarget26IsLegalToCallImmediateAddrERKNS_13TargetMachineE, 
                       __ZNK4llvm12X86Subtarget29ClassifyBlockAddressReferenceEv, 
                       __ZNK4llvm12latency_sortclEPKNS_5SUnitES3_, __ZNK4llvm13AliasAnalysis16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm13ArchiveMember13getMemberSizeEv, __ZNK4llvm13AtomicRMWInst10clone_implEv, 
                       __ZNK4llvm13BallLarusEdge7getTypeEv, __ZNK4llvm13BallLarusEdge9getSourceEv, 
                       __ZNK4llvm13BallLarusEdge9getTargetEv, __ZNK4llvm13BitcodeReader16isMaterializableEPKNS_11GlobalValueE, 
                       __ZNK4llvm13BitcodeReader18isDematerializableEPKNS_11GlobalValueE, 
                       __ZNK4llvm13CallGraphNode5printERNS_11raw_ostreamE, 
                       __ZNK4llvm13CoalescerPair13isCoalescableEPKNS_12MachineInstrE, 
                       __ZNK4llvm13CodeExtractor17findInputsOutputsERNS_9SetVectorIPNS_5ValueENSt3__16vectorIS3_NS4_9allocatorIS3_EEEENS_8SmallSetIS3_Lj16ENS4_4lessIS3_EEEEEESE_, 
                       __ZNK4llvm13CompositeType10indexValidEPKNS_5ValueE, 
                       __ZNK4llvm13CompositeType10indexValidEj, __ZNK4llvm13ConstantRange10differenceERKS0_, 
                       __ZNK4llvm13ConstantRange10getSetSizeEv, __ZNK4llvm13ConstantRange10isEmptySetEv, 
                       __ZNK4llvm13ConstantRange10signExtendEj, __ZNK4llvm13ConstantRange10zeroExtendEj, 
                       __ZNK4llvm13ConstantRange11sextOrTruncEj, __ZNK4llvm13ConstantRange11zextOrTruncEj, 
                       __ZNK4llvm13ConstantRange12getSignedMaxEv, __ZNK4llvm13ConstantRange12getSignedMinEv, 
                       __ZNK4llvm13ConstantRange12isWrappedSetEv, __ZNK4llvm13ConstantRange13intersectWithERKS0_, 
                       __ZNK4llvm13ConstantRange14getUnsignedMaxEv, __ZNK4llvm13ConstantRange14getUnsignedMinEv, 
                       __ZNK4llvm13ConstantRange16isSignWrappedSetEv, __ZNK4llvm13ConstantRange3addERKS0_, 
                       __ZNK4llvm13ConstantRange3shlERKS0_, __ZNK4llvm13ConstantRange3subERKS0_, 
                       __ZNK4llvm13ConstantRange4dumpEv, __ZNK4llvm13ConstantRange4lshrERKS0_, 
                       __ZNK4llvm13ConstantRange4smaxERKS0_, __ZNK4llvm13ConstantRange4udivERKS0_, 
                       __ZNK4llvm13ConstantRange4umaxERKS0_, __ZNK4llvm13ConstantRange5printERNS_11raw_ostreamE, 
                       __ZNK4llvm13ConstantRange7inverseEv, __ZNK4llvm13ConstantRange8binaryOrERKS0_, 
                       __ZNK4llvm13ConstantRange8containsERKNS_5APIntE, 
                       __ZNK4llvm13ConstantRange8containsERKS0_, __ZNK4llvm13ConstantRange8multiplyERKS0_, 
                       __ZNK4llvm13ConstantRange8subtractERKNS_5APIntE, 
                       __ZNK4llvm13ConstantRange8truncateEj, __ZNK4llvm13ConstantRange9binaryAndERKS0_, 
                       __ZNK4llvm13ConstantRange9isFullSetEv, __ZNK4llvm13ConstantRange9unionWithERKS0_, 
                       __ZNK4llvm13DICompileUnit12getEnumTypesEv, __ZNK4llvm13DICompileUnit13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm13DICompileUnit14getSubprogramsEv, __ZNK4llvm13DICompileUnit16getRetainedTypesEv, 
                       __ZNK4llvm13DICompileUnit18getGlobalVariablesEv, 
                       __ZNK4llvm13DICompileUnit6VerifyEv, __ZNK4llvm13DIDerivedType13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm13DIDerivedType15getObjCPropertyEv, __ZNK4llvm13DIDerivedType19getOriginalTypeSizeEv, 
                       __ZNK4llvm13DIDerivedType6VerifyEv, __ZNK4llvm13DIEAbbrevData7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm13DataExtractor10getSLEB128EPj, __ZNK4llvm13DataExtractor10getULEB128EPj, 
                       __ZNK4llvm13DataExtractor11getUnsignedEPjj, __ZNK4llvm13DataExtractor5getU8EPj, 
                       __ZNK4llvm13DataExtractor5getU8EPjPhj, __ZNK4llvm13DataExtractor6getU16EPj, 
                       __ZNK4llvm13DataExtractor6getU16EPjPtj, __ZNK4llvm13DataExtractor6getU32EPj, 
                       __ZNK4llvm13DataExtractor6getU32EPjS1_j, __ZNK4llvm13DataExtractor6getU64EPj, 
                       __ZNK4llvm13DataExtractor6getU64EPjPyj, __ZNK4llvm13DataExtractor7getCStrEPj, 
                       __ZNK4llvm13DataExtractor9getSignedEPjj, __ZNK4llvm13DominatorTree14verifyAnalysisEv, 
                       __ZNK4llvm13DominatorTree20isReachableFromEntryERKNS_3UseE, 
                       __ZNK4llvm13DominatorTree5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionEPKNS_10BasicBlockE, 
                       __ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionERKNS_3UseE, 
                       __ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_, 
                       __ZNK4llvm13DominatorTree9dominatesERKNS_14BasicBlockEdgeEPKNS_10BasicBlockE, 
                       __ZNK4llvm13DominatorTree9dominatesERKNS_14BasicBlockEdgeERKNS_3UseE, 
                       __ZNK4llvm13FindUsedTypes5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm13IRBuilderBase28getCurrentFunctionReturnTypeEv, 
                       __ZNK4llvm13LPPassManager16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm13LazyValueInfo16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm13LiveIntervals10hasPHIKillERKNS_12LiveIntervalEPKNS_6VNInfoE, 
                       __ZNK4llvm13LiveIntervals11printInstrsERNS_11raw_ostreamE, 
                       __ZNK4llvm13LiveIntervals16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm13LiveIntervals18intervalIsInOneMBBERKNS_12LiveIntervalE, 
                       __ZNK4llvm13LiveIntervals5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm13LiveRegMatrix16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm13LiveVariables16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm13LiveVariables7VarInfo4dumpEv, __ZNK4llvm13LiveVariables7VarInfo8findKillEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm13MCInstPrinter12printRegNameERNS_11raw_ostreamEj, 
                       __ZNK4llvm13MCInstPrinter13getOpcodeNameEj, __ZNK4llvm13MCSectionCOFF12UseCodeAlignEv, 
                       __ZNK4llvm13MCSectionCOFF16isVirtualSectionEv, __ZNK4llvm13MCSectionCOFF20PrintSwitchToSectionERKNS_9MCAsmInfoERNS_11raw_ostreamE, 
                       __ZNK4llvm13MCSectionCOFF26ShouldOmitSectionDirectiveENS_9StringRefERKNS_9MCAsmInfoE, 
                       __ZNK4llvm13PBQPRAProblem13getAllowedSetEj, __ZNK4llvm13PBQPRAProblem14getNodeForVRegEj, 
                       __ZNK4llvm13PBQPRAProblem14getVRegForNodeENSt3__121__list_const_iteratorIN4PBQP5Graph9NodeEntryEPvEE, 
                       __ZNK4llvm13PBQPRAProblem16getPRegForOptionEjj, 
                       __ZNK4llvm13PMDataManager12dumpLastUsesEPNS_4PassEj, 
                       __ZNK4llvm13PMDataManager15dumpRequiredSetEPKNS_4PassE, 
                       __ZNK4llvm13PMDataManager16dumpPreservedSetEPKNS_4PassE, 
                       __ZNK4llvm13PMDataManager17dumpAnalysisUsageENS_9StringRefEPKNS_4PassERKNS_11SmallVectorIPKvLj32EEE, 
                       __ZNK4llvm13PMDataManager17dumpPassArgumentsEv, 
                       __ZNK4llvm13PMDataManager31isPassDebuggingExecutionsOrMoreEv, 
                       __ZNK4llvm13RGPassManager16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm13SplitAnalysis15countLiveBlocksEPKNS_12LiveIntervalE, 
                       __ZNK4llvm13SplitAnalysis18isOriginalEndpointENS_9SlotIndexE, 
                       __ZNK4llvm13SplitAnalysis22shouldSplitSingleBlockERKNS0_9BlockInfoEb, 
                       __ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE, 
                       __ZNK4llvm13TargetMachine11getOptLevelEv, __ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE, 
                       __ZNK4llvm13TargetMachine12getCodeModelEv, __ZNK4llvm13TargetMachine18getRelocationModelEv, 
                       __ZNK4llvm13TargetOptions16LessPreciseFPMADEv, __ZNK4llvm13TargetOptions19getTrapFunctionNameEv, 
                       __ZNK4llvm13TargetOptions23DisableFramePointerElimERKNS_15MachineFunctionE, 
                       __ZNK4llvm13TargetOptions32HonorSignDependentRoundingFPMathEv, 
                       __ZNK4llvm13resource_sortclEPKNS_5SUnitES3_, __ZNK4llvm14BasicBlockEdge12isSingleEdgeEv, 
                       __ZNK4llvm14BasicBlockPass17createPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZNK4llvm14BasicBlockPass27getPotentialPassManagerTypeEv, 
                       __ZNK4llvm14BinaryOperator10clone_implEv, __ZNK4llvm14BinaryOperator15hasNoSignedWrapEv, 
                       __ZNK4llvm14BinaryOperator17hasNoUnsignedWrapEv, 
                       __ZNK4llvm14BinaryOperator7isExactEv, __ZNK4llvm14BlockFrequency5printERNS_11raw_ostreamE, 
                       __ZNK4llvm14BlockFrequencymlERKNS_17BranchProbabilityE, 
                       __ZNK4llvm14BlockFrequencyplERKS0_, __ZNK4llvm14ConstantVector13getSplatValueEv, 
                       __ZNK4llvm14DIObjCProperty13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm14DIObjCProperty6VerifyEv, __ZNK4llvm14DbgDeclareInst10getAddressEv, 
                       __ZNK4llvm14FPMathOperator13getFPAccuracyEv, __ZNK4llvm14IndirectBrInst10clone_implEv, 
                       __ZNK4llvm14IndirectBrInst13getSuccessorVEj, __ZNK4llvm14IndirectBrInst17getNumSuccessorsVEv, 
                       __ZNK4llvm14LandingPadInst10clone_implEv, __ZNK4llvm14MCObjectWriter34IsSymbolRefDifferenceFullyResolvedERKNS_11MCAssemblerEPKNS_15MCSymbolRefExprES6_b, 
                       __ZNK4llvm14MCObjectWriter38IsSymbolRefDifferenceFullyResolvedImplERKNS_11MCAssemblerERKNS_12MCSymbolDataERKNS_10MCFragmentEbb, 
                       __ZNK4llvm14MCRegisterInfo12getSEHRegNumEj, __ZNK4llvm14MCRegisterInfo13getLLVMRegNumEjb, 
                       __ZNK4llvm14MCRegisterInfo14getDwarfRegNumEjb, __ZNK4llvm14MCRegisterInfo14getSubRegIndexEjj, 
                       __ZNK4llvm14MCRegisterInfo19getMatchingSuperRegEjjPKNS_15MCRegisterClassE, 
                       __ZNK4llvm14MCRegisterInfo9getSubRegEjj, __ZNK4llvm14MCSectionMachO12UseCodeAlignEv, 
                       __ZNK4llvm14MCSectionMachO16isVirtualSectionEv, 
                       __ZNK4llvm14MCSectionMachO20PrintSwitchToSectionERKNS_9MCAsmInfoERNS_11raw_ostreamE, 
                       __ZNK4llvm14MachineOperand13isIdenticalToERKS0_, 
                       __ZNK4llvm14MachineOperand5printERNS_11raw_ostreamEPKNS_13TargetMachineE, 
                       __ZNK4llvm14RuntimeDyldELF18isCompatibleFormatEPKNS_12MemoryBufferE, 
                       __ZNK4llvm14SCEVAddRecExpr19evaluateAtIterationEPKNS_4SCEVERNS_15ScalarEvolutionE, 
                       __ZNK4llvm14SCEVAddRecExpr23getNumIterationsInRangeENS_13ConstantRangeERNS_15ScalarEvolutionE, 
                       __ZNK4llvm14SpillPlacement16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm14TargetLowering11LowerCallToERNS0_16CallLoweringInfoE, 
                       __ZNK4llvm14TargetLowering13SimplifySetCCENS_3EVTENS_7SDValueES2_NS_3ISD8CondCodeEbRNS0_15DAGCombinerInfoENS_8DebugLocE, 
                       __ZNK4llvm14TargetLowering14AsmOperandInfo17getMatchedOperandEv, 
                       __ZNK4llvm14TargetLowering14AsmOperandInfo25isMatchingInputConstraintEv, 
                       __ZNK4llvm14TargetLowering14BuildExactSDIVENS_7SDValueES1_NS_8DebugLocERNS_12SelectionDAGE, 
                       __ZNK4llvm14TargetLowering14LowerOperationENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm14TargetLowering14isGAPlusOffsetEPNS_6SDNodeERPKNS_11GlobalValueERx, 
                       __ZNK4llvm14TargetLowering16LowerXConstraintENS_3EVTE, 
                       __ZNK4llvm14TargetLowering16ParseConstraintsENS_17ImmutableCallSiteE, 
                       __ZNK4llvm14TargetLowering16getShiftAmountTyENS_3EVTE, 
                       __ZNK4llvm14TargetLowering17PerformDAGCombineEPNS_6SDNodeERNS0_15DAGCombinerInfoE, 
                       __ZNK4llvm14TargetLowering17getConstraintTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZNK4llvm14TargetLowering17getTargetNodeNameEj, 
                       __ZNK4llvm14TargetLowering18getSetCCResultTypeENS_3EVTE, 
                       __ZNK4llvm14TargetLowering20SimplifyDemandedBitsENS_7SDValueERKNS_5APIntERS2_S5_RNS0_17TargetLoweringOptEj, 
                       __ZNK4llvm14TargetLowering20getJumpTableEncodingEv, 
                       __ZNK4llvm14TargetLowering20isOffsetFoldingLegalEPKNS_19GlobalAddressSDNodeE, 
                       __ZNK4llvm14TargetLowering21LowerOperationWrapperEPNS_6SDNodeERNS_15SmallVectorImplINS_7SDValueEEERNS_12SelectionDAGE, 
                       __ZNK4llvm14TargetLowering21getByValTypeAlignmentEPNS_4TypeE, 
                       __ZNK4llvm14TargetLowering21isLegalAddressingModeERKNS0_8AddrModeEPNS_4TypeE, 
                       __ZNK4llvm14TargetLowering22ComputeConstraintToUseERNS0_14AsmOperandInfoENS_7SDValueEPNS_12SelectionDAGE, 
                       __ZNK4llvm14TargetLowering22getVectorTypeBreakdownERNS_11LLVMContextENS_3EVTERS3_RjS4_, 
                       __ZNK4llvm14TargetLowering23findRepresentativeClassENS_3EVTE, 
                       __ZNK4llvm14TargetLowering23getCmpLibcallReturnTypeEv, 
                       __ZNK4llvm14TargetLowering24getPICJumpTableRelocBaseENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm14TargetLowering27EmitInstrWithCustomInserterEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm14TargetLowering28LowerAsmOperandForConstraintENS_7SDValueERNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERNS2_6vectorIS1_NS6_IS1_EEEERNS_12SelectionDAGE, 
                       __ZNK4llvm14TargetLowering28getPICJumpTableRelocBaseExprEPKNS_15MachineFunctionEjRNS_9MCContextE, 
                       __ZNK4llvm14TargetLowering28getRegForInlineAsmConstraintERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_3EVTE, 
                       __ZNK4llvm14TargetLowering29AdjustInstrPostInstrSelectionEPNS_12MachineInstrEPNS_6SDNodeE, 
                       __ZNK4llvm14TargetLowering30computeMaskedBitsForTargetNodeENS_7SDValueERNS_5APIntES3_RKNS_12SelectionDAGEj, 
                       __ZNK4llvm14TargetLowering30getSingleConstraintMatchWeightERNS0_14AsmOperandInfoEPKc, 
                       __ZNK4llvm14TargetLowering31ComputeNumSignBitsForTargetNodeENS_7SDValueEj, 
                       __ZNK4llvm14TargetLowering32getMultipleConstraintMatchWeightERNS0_14AsmOperandInfoEi, 
                       __ZNK4llvm14TargetLowering9BuildSDIVEPNS_6SDNodeERNS_12SelectionDAGEbPNSt3__16vectorIS2_NS5_9allocatorIS2_EEEE, 
                       __ZNK4llvm14TargetLowering9BuildUDIVEPNS_6SDNodeERNS_12SelectionDAGEbPNSt3__16vectorIS2_NS5_9allocatorIS2_EEEE, 
                       __ZNK4llvm14TargetLowering9canOpTrapEjNS_3EVTE, 
                       __ZNK4llvm14TargetLowering9isLegalRCEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm14error_category10equivalentERKNS_10error_codeEi, 
                       __ZNK4llvm14error_category10equivalentEiRKNS_15error_conditionE, 
                       __ZNK4llvm14error_category23default_error_conditionEi, 
                       __ZNK4llvm14raw_fd_ostream10has_colorsEv, __ZNK4llvm14raw_fd_ostream12is_displayedEv, 
                       __ZNK4llvm14raw_fd_ostream21preferred_buffer_sizeEv, 
                       __ZNK4llvm14raw_os_ostream11current_posEv, __ZNK4llvm15AliasSetTracker15containsPointerEPNS_5ValueEyPKNS_6MDNodeE, 
                       __ZNK4llvm15AliasSetTracker5printERNS_11raw_ostreamE, 
                       __ZNK4llvm15DICompositeType13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm15DICompositeType6VerifyEv, __ZNK4llvm15InsertValueInst10clone_implEv, 
                       __ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj, 
                       __ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj, 
                       __ZNK4llvm15JITDwarfEmitter11EmitEHFrameEPKNS_8FunctionEPhS4_S4_S4_, 
                       __ZNK4llvm15JITDwarfEmitter14EmitFrameMovesElRKNSt3__16vectorINS_11MachineMoveENS1_9allocatorIS3_EEEE, 
                       __ZNK4llvm15JITDwarfEmitter17EmitCommonEHFrameEPKNS_8FunctionE, 
                       __ZNK4llvm15JITDwarfEmitter18EmitExceptionTableEPNS_15MachineFunctionEPhS3_, 
                       __ZNK4llvm15LockFileManager8getStateEv, __ZNK4llvm15MCInstrAnalysis14evaluateBranchERKNS_6MCInstEyy, 
                       __ZNK4llvm15MCSubtargetInfo14initInstrItinsERNS_18InstrItineraryDataE, 
                       __ZNK4llvm15MCSubtargetInfo19getSchedModelForCPUENS_9StringRefE, 
                       __ZNK4llvm15MCSubtargetInfo23getInstrItineraryForCPUENS_9StringRefE, 
                       __ZNK4llvm15MachineFunction11viewCFGOnlyEv, __ZNK4llvm15MachineFunction12getJTISymbolEjRNS_9MCContextEb, 
                       __ZNK4llvm15MachineFunction16getPICBaseSymbolEv, 
                       __ZNK4llvm15MachineFunction5printERNS_11raw_ostreamEPNS_11SlotIndexesE, 
                       __ZNK4llvm15MachineFunction6verifyEPNS_4PassEPKc, 
                       __ZNK4llvm15MachineFunction7getNameEv, __ZNK4llvm15MachineFunction7viewCFGEv, 
                       __ZNK4llvm15MachineLoopInfo16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm15PathProfileInfo18getCurrentFunctionEv, 
                       __ZNK4llvm15ScalarEvolution10hasOperandEPKNS_4SCEVES3_, 
                       __ZNK4llvm15ScalarEvolution10isSCEVableEPNS_4TypeE, 
                       __ZNK4llvm15ScalarEvolution16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm15ScalarEvolution17BackedgeTakenInfo6getMaxEPS0_, 
                       __ZNK4llvm15ScalarEvolution17BackedgeTakenInfo8getExactEPNS_10BasicBlockEPS0_, 
                       __ZNK4llvm15ScalarEvolution17BackedgeTakenInfo8getExactEPS0_, 
                       __ZNK4llvm15ScalarEvolution17getTypeSizeInBitsEPNS_4TypeE, 
                       __ZNK4llvm15ScalarEvolution20getEffectiveSCEVTypeEPNS_4TypeE, 
                       __ZNK4llvm15ScalarEvolution5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm15SmallPtrSetImpl13FindBucketForEPKv, 
                       __ZNK4llvm15TargetAlignElemeqERKS0_, __ZNK4llvm15TargetInstrInfo10insertNoopERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEE, 
                       __ZNK4llvm15TargetInstrInfo11getRegClassERKNS_11MCInstrDescEjPKNS_18TargetRegisterInfoERKNS_15MachineFunctionE, 
                       __ZNK4llvm15TargetInstrInfo17defaultDefLatencyEPKNS_12MCSchedModelEPKNS_12MachineInstrE, 
                       __ZNK4llvm15TargetInstrInfo17foldMemoryOperandENS_17MachineBasicBlock15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS3_EEEERKNS_15SmallVectorImplIjEEPS3_, 
                       __ZNK4llvm15TargetInstrInfo17foldMemoryOperandENS_17MachineBasicBlock15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS3_EEEERKNS_15SmallVectorImplIjEEi, 
                       __ZNK4llvm15TargetInstrInfo18getInlineAsmLengthEPKcRKNS_9MCAsmInfoE, 
                       __ZNK4llvm15TargetInstrInfo21computeOperandLatencyEPKNS_18InstrItineraryDataEPKNS_12MachineInstrEjS6_jb, 
                       __ZNK4llvm15TargetInstrInfo24computeDefOperandLatencyEPKNS_18InstrItineraryDataEPKNS_12MachineInstrEb, 
                       __ZNK4llvm15TargetInstrInfo40isReallyTriviallyReMaterializableGenericEPKNS_12MachineInstrEPNS_13AliasAnalysisE, 
                       __ZNK4llvm15UnreachableInst10clone_implEv, __ZNK4llvm15UnreachableInst13getSuccessorVEj, 
                       __ZNK4llvm15UnreachableInst17getNumSuccessorsVEv, 
                       __ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE, 
                       __ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE, 
                       __ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE, 
                       __ZNK4llvm15ValueEnumerator4dumpEv, __ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EEEEPKc, 
                       __ZNK4llvm15X86Disassembler22X86GenericDisassembler14getInstructionERNS_6MCInstERyRKNS_12MemoryObjectEyRNS_11raw_ostreamES9_, 
                       __ZNK4llvm15X86Disassembler22X86GenericDisassembler9getEDInfoEv, 
                       __ZNK4llvm15X86ELFMCAsmInfo28getNonexecutableStackSectionERNS_9MCContextE, 
                       __ZNK4llvm15X86RegisterInfo12getSEHRegNumEj, __ZNK4llvm15X86RegisterInfo14hasBasePointerERKNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo15canRealignStackERKNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo15getReservedRegsERKNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo16getFrameRegisterERKNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo18getCalleeSavedRegsEPKNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo18getPointerRegClassERKNS_15MachineFunctionEj, 
                       __ZNK4llvm15X86RegisterInfo19eliminateFrameIndexENS_17MachineBasicBlock15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS3_EEEEiPNS_12RegScavengerE, 
                       __ZNK4llvm15X86RegisterInfo19getRegPressureLimitEPKNS_19TargetRegisterClassERNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo20getCallPreservedMaskENS_11CallingConv2IDE, 
                       __ZNK4llvm15X86RegisterInfo20getCrossCopyRegClassEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm15X86RegisterInfo20getEHHandlerRegisterEv, 
                       __ZNK4llvm15X86RegisterInfo20hasReservedSpillSlotERKNS_15MachineFunctionEjRi, 
                       __ZNK4llvm15X86RegisterInfo21getSubClassWithSubRegEPKNS_19TargetRegisterClassEj, 
                       __ZNK4llvm15X86RegisterInfo21needsStackRealignmentERKNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo22getCompactUnwindRegNumEjb, 
                       __ZNK4llvm15X86RegisterInfo22getEHExceptionRegisterEv, 
                       __ZNK4llvm15X86RegisterInfo24getMatchingSuperRegClassEPKNS_19TargetRegisterClassES3_j, 
                       __ZNK4llvm15X86RegisterInfo25getLargestLegalSuperClassEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm15X86RegisterInfo26trackLivenessAfterRegAllocERKNS_15MachineFunctionE, 
                       __ZNK4llvm15X86RegisterInfo29eliminateCallFramePseudoInstrERNS_15MachineFunctionERNS_17MachineBasicBlockENS3_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS6_EEEE, 
                       __ZNK4llvm15error_condition7messageEv, __ZNK4llvm16AnalysisResolver22getAnalysisIfAvailableEPKvb, 
                       __ZNK4llvm16BumpPtrAllocator10PrintStatsEv, __ZNK4llvm16BumpPtrAllocator11GetNumSlabsEv, 
                       __ZNK4llvm16BumpPtrAllocator14getTotalMemoryEv, 
                       __ZNK4llvm16CallGraphSCCPass16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm16CallGraphSCCPass17createPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZNK4llvm16ConstantFPSDNode14isExactlyValueERKNS_7APFloatE, 
                       __ZNK4llvm16DIGlobalVariable13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm16DIGlobalVariable6VerifyEv, __ZNK4llvm16ExtractValueInst10clone_implEv, 
                       __ZNK4llvm16FoldingSetNodeID11ComputeHashEv, __ZNK4llvm16FoldingSetNodeID6InternERNS_16BumpPtrAllocatorE, 
                       __ZNK4llvm16FoldingSetNodeIDeqENS_19FoldingSetNodeIDRefE, 
                       __ZNK4llvm16FoldingSetNodeIDeqERKS0_, __ZNK4llvm16FoldingSetNodeIDltENS_19FoldingSetNodeIDRefE, 
                       __ZNK4llvm16FoldingSetNodeIDltERKS0_, __ZNK4llvm16MCObjectStreamer18getCurrentFragmentEv, 
                       __ZNK4llvm16MCObjectStreamer23getOrCreateDataFragmentEv, 
                       __ZNK4llvm16MachObjectWriter14MachSymbolDataltERKS1_, 
                       __ZNK4llvm16MachObjectWriter14getPaddingSizeEPKNS_13MCSectionDataERKNS_11MCAsmLayoutE, 
                       __ZNK4llvm16MachObjectWriter16getSymbolAddressEPKNS_12MCSymbolDataERKNS_11MCAsmLayoutE, 
                       __ZNK4llvm16MachObjectWriter18getFragmentAddressEPKNS_10MCFragmentERKNS_11MCAsmLayoutE, 
                       __ZNK4llvm16MachObjectWriter38IsSymbolRefDifferenceFullyResolvedImplERKNS_11MCAssemblerERKNS_12MCSymbolDataERKNS_10MCFragmentEbb, 
                       __ZNK4llvm16MachineFrameInfo15getPristineRegsEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm16MachineFrameInfo5printERKNS_15MachineFunctionERNS_11raw_ostreamE, 
                       __ZNK4llvm16MachineLoopRange5printERNS_11raw_ostreamE, 
                       __ZNK4llvm16MachineLoopRange9getNumberEv, __ZNK4llvm16RuntimeDyldMachO18isCompatibleFormatEPKNS_12MemoryBufferE, 
                       __ZNK4llvm16SelectionDAGISel11CheckOrMaskENS_7SDValueEPNS_14ConstantSDNodeEx, 
                       __ZNK4llvm16SelectionDAGISel12CheckAndMaskENS_7SDValueEPNS_14ConstantSDNodeEx, 
                       __ZNK4llvm16SelectionDAGISel16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm16SelectionDAGISel18IsProfitableToFoldENS_7SDValueEPNS_6SDNodeES3_, 
                       __ZNK4llvm16TargetPassConfig19getOptimizeRegAllocEv, 
                       __ZNK4llvm16TargetPassConfig19getPassSubstitutionEPKv, 
                       __ZNK4llvm16TargetSchedModel13getDefLatencyEPKNS_12MachineInstrEb, 
                       __ZNK4llvm16TargetSchedModel14getNumMicroOpsEPNS_12MachineInstrE, 
                       __ZNK4llvm16TargetSchedModel17resolveSchedClassEPKNS_12MachineInstrE, 
                       __ZNK4llvm16TargetSchedModel18hasInstrSchedModelEv, 
                       __ZNK4llvm16TargetSchedModel19computeInstrLatencyEPKNS_12MachineInstrE, 
                       __ZNK4llvm16TargetSchedModel19hasInstrItinerariesEv, 
                       __ZNK4llvm16TargetSchedModel20computeOutputLatencyEPKNS_12MachineInstrEjS3_, 
                       __ZNK4llvm16TargetSchedModel21computeOperandLatencyEPKNS_12MachineInstrEjS3_jb, 
                       __ZNK4llvm16ValueSymbolTable4dumpEv, __ZNK4llvm16X86ELFWriterInfo15isPCRelativeRelEj, 
                       __ZNK4llvm16X86ELFWriterInfo17computeRelocationEjjj, 
                       __ZNK4llvm16X86ELFWriterInfo17getRelocationTypeEj, 
                       __ZNK4llvm16X86ELFWriterInfo19getRelocationTySizeEj, 
                       __ZNK4llvm16X86ELFWriterInfo24getDefaultAddendForRelTyEjl, 
                       __ZNK4llvm16X86ELFWriterInfo28getAbsoluteLabelMachineRelTyEv, 
                       __ZNK4llvm16X86FrameLowering12emitEpilogueERNS_15MachineFunctionERNS_17MachineBasicBlockE, 
                       __ZNK4llvm16X86FrameLowering12emitPrologueERNS_15MachineFunctionE, 
                       __ZNK4llvm16X86FrameLowering19getFrameIndexOffsetERKNS_15MachineFunctionEi, 
                       __ZNK4llvm16X86FrameLowering20hasReservedCallFrameERKNS_15MachineFunctionE, 
                       __ZNK4llvm16X86FrameLowering22getFrameIndexReferenceERKNS_15MachineFunctionEiRj, 
                       __ZNK4llvm16X86FrameLowering24adjustForSegmentedStacksERNS_15MachineFunctionE, 
                       __ZNK4llvm16X86FrameLowering24getCompactUnwindEncodingERNS_15MachineFunctionE, 
                       __ZNK4llvm16X86FrameLowering25emitCalleeSavedFrameMovesERNS_15MachineFunctionEPNS_8MCSymbolEj, 
                       __ZNK4llvm16X86FrameLowering25spillCalleeSavedRegistersERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEERKNSt3__16vectorINS_15CalleeSavedInfoENS8_9allocatorISA_EEEEPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm16X86FrameLowering27restoreCalleeSavedRegistersERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEERKNSt3__16vectorINS_15CalleeSavedInfoENS8_9allocatorISA_EEEEPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm16X86FrameLowering36processFunctionBeforeCalleeSavedScanERNS_15MachineFunctionEPNS_12RegScavengerE, 
                       __ZNK4llvm16X86FrameLowering5hasFPERKNS_15MachineFunctionE, 
                       __ZNK4llvm16raw_null_ostream11current_posEv, __ZNK4llvm17AtomicCmpXchgInst10clone_implEv, 
                       __ZNK4llvm17BranchProbability4dumpEv, __ZNK4llvm17BranchProbability5printERNS_11raw_ostreamE, 
                       __ZNK4llvm17GetElementPtrInst10clone_implEv, __ZNK4llvm17GetElementPtrInst10isInBoundsEv, 
                       __ZNK4llvm17GetElementPtrInst17hasAllZeroIndicesEv, 
                       __ZNK4llvm17GetElementPtrInst21hasAllConstantIndicesEv, 
                       __ZNK4llvm17InsertElementInst10clone_implEv, __ZNK4llvm17IntervalPartition5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm17LiveIntervalUnion5Query18isSeenInterferenceEPNS_12LiveIntervalE, 
                       __ZNK4llvm17LiveIntervalUnion5printERNS_11raw_ostreamEPKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm17MachineBasicBlock11getFullNameEv, __ZNK4llvm17MachineBasicBlock11isSuccessorEPKS0_, 
                       __ZNK4llvm17MachineBasicBlock13getSuccWeightENSt3__111__wrap_iterIPKPS0_EE, 
                       __ZNK4llvm17MachineBasicBlock13isPredecessorEPKS0_, 
                       __ZNK4llvm17MachineBasicBlock17getWeightIteratorENSt3__111__wrap_iterIPKPS0_EE, 
                       __ZNK4llvm17MachineBasicBlock17isLayoutSuccessorEPKS0_, 
                       __ZNK4llvm17MachineBasicBlock18getFirstTerminatorEv, 
                       __ZNK4llvm17MachineBasicBlock20getLastNonDebugInstrEv, 
                       __ZNK4llvm17MachineBasicBlock22getLandingPadSuccessorEv, 
                       __ZNK4llvm17MachineBasicBlock5printERNS_11raw_ostreamEPNS_11SlotIndexesE, 
                       __ZNK4llvm17MachineBasicBlock7getNameEv, __ZNK4llvm17MachineBasicBlock8isLiveInEj, 
                       __ZNK4llvm17MachineBasicBlock9getSymbolEv, __ZNK4llvm17MachineLoopRanges16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm17MachineMemOperand12getAlignmentEv, __ZNK4llvm17MachineMemOperand7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm17MachineModuleInfo14getPersonalityEv, 
                       __ZNK4llvm17MachineModuleInfo19getPersonalityIndexEv, 
                       __ZNK4llvm17MachineSSAUpdater16HasValueForBlockEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E, 
                       __ZNK4llvm17ManagedStaticBase7destroyEv, __ZNK4llvm17PMTopLevelManager10dumpPassesEv, 
                       __ZNK4llvm17PMTopLevelManager13dumpArgumentsEv, 
                       __ZNK4llvm17PostDominatorTree5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm17PseudoSourceValue10isConstantEPKNS_16MachineFrameInfoE, 
                       __ZNK4llvm17PseudoSourceValue11printCustomERNS_11raw_ostreamE, 
                       __ZNK4llvm17PseudoSourceValue8mayAliasEPKNS_16MachineFrameInfoE, 
                       __ZNK4llvm17PseudoSourceValue9isAliasedEPKNS_16MachineFrameInfoE, 
                       __ZNK4llvm17RegisterClassInfo7computeEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm17ScheduleDAGInstrs10getDAGNameEv, __ZNK4llvm17ScheduleDAGInstrs17getGraphNodeLabelEPKNS_5SUnitE, 
                       __ZNK4llvm17ScheduleDAGInstrs8dumpNodeEPKNS_5SUnitE, 
                       __ZNK4llvm17ShuffleVectorInst10clone_implEv, __ZNK4llvm17SubtargetFeatures5printERNS_11raw_ostreamE, 
                       __ZNK4llvm17SubtargetFeatures9getStringEv, __ZNK4llvm17TargetLibraryInfo10getLibFuncENS_9StringRefERNS_7LibFunc4FuncE, 
                       __ZNK4llvm17X86ATTInstPrinter12printRegNameERNS_11raw_ostreamEj, 
                       __ZNK4llvm17X86TargetLowering10LowerSETCCENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering10LowerShiftENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering10LowerVAARGENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering10isZExtFreeENS_3EVTES1_, 
                       __ZNK4llvm17X86TargetLowering10isZExtFreeEPNS_4TypeES2_, 
                       __ZNK4llvm17X86TargetLowering11EmitMonitorEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering11LowerBRCONDENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering11LowerReturnENS_7SDValueENS_11CallingConv2IDEbRKNS_15SmallVectorImplINS_3ISD9OutputArgEEERKNS4_IS1_EENS_8DebugLocERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering11LowerSELECTENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering11LowerVSETCCENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering12LowerBITCASTENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering12LowerVASTARTENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering12isFPImmLegalERKNS_7APFloatENS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering14CanLowerReturnENS_11CallingConv2IDERNS_15MachineFunctionEbRKNS_15SmallVectorImplINS_3ISD9OutputArgEEERNS_11LLVMContextE, 
                       __ZNK4llvm17X86TargetLowering14LowerEH_RETURNENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering14LowerFCOPYSIGNENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering14LowerFRAMEADDRENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering14LowerJumpTableENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering14LowerOperationENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering14createFastISelERNS_20FunctionLoweringInfoEPKNS_17TargetLibraryInfoE, 
                       __ZNK4llvm17X86TargetLowering14isGAPlusOffsetEPNS_6SDNodeERPKNS_11GlobalValueERx, 
                       __ZNK4llvm17X86TargetLowering14isTruncateFreeENS_3EVTES1_, 
                       __ZNK4llvm17X86TargetLowering14isTruncateFreeEPNS_4TypeES2_, 
                       __ZNK4llvm17X86TargetLowering15ExpandInlineAsmEPNS_8CallInstE, 
                       __ZNK4llvm17X86TargetLowering15FP_TO_INTHelperENS_7SDValueERNS_12SelectionDAGEbb, 
                       __ZNK4llvm17X86TargetLowering15LowerCallResultENS_7SDValueES1_NS_11CallingConv2IDEbRKNS_15SmallVectorImplINS_3ISD8InputArgEEENS_8DebugLocERNS_12SelectionDAGERNS4_IS1_EE, 
                       __ZNK4llvm17X86TargetLowering15LowerFP_TO_SINTENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering15LowerFP_TO_UINTENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering15LowerRETURNADDRENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering15LowerSINT_TO_FPENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering15LowerShiftPartsENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering15LowerUINT_TO_FPENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering16LowerFLT_ROUNDS_ENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering16LowerMemArgumentENS_7SDValueENS_11CallingConv2IDERKNS_15SmallVectorImplINS_3ISD8InputArgEEENS_8DebugLocERNS_12SelectionDAGERKNS_11CCValAssignEPNS_16MachineFrameInfoEj, 
                       __ZNK4llvm17X86TargetLowering16LowerMemOpCallToENS_7SDValueES1_S1_NS_8DebugLocERNS_12SelectionDAGERKNS_11CCValAssignENS_3ISD10ArgFlagsTyE, 
                       __ZNK4llvm17X86TargetLowering16LowerXConstraintENS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering17EmitLoweredSelectEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering17LowerBUILD_VECTORENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering17LowerBlockAddressENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering17LowerConstantPoolENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering17PerformDAGCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE, 
                       __ZNK4llvm17X86TargetLowering17getConstraintTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, 
                       __ZNK4llvm17X86TargetLowering17getTargetNodeNameEj, 
                       __ZNK4llvm17X86TargetLowering18EmitLoweredTLSCallEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering18LowerGlobalAddressENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering18LowerGlobalAddressEPKNS_11GlobalValueENS_8DebugLocExRNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering18ReplaceNodeResultsEPNS_6SDNodeERNS_15SmallVectorImplINS_7SDValueEEERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering18getSetCCResultTypeENS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering18isShuffleMaskLegalERKNS_15SmallVectorImplIiEENS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering18isUsedByReturnOnlyEPNS_6SDNodeERNS_7SDValueE, 
                       __ZNK4llvm17X86TargetLowering19EmitAtomicLoadArithEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering19LowerExternalSymbolENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering19LowerUINT_TO_FP_i32ENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering19LowerUINT_TO_FP_i64ENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering19LowerVECTOR_SHUFFLEENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering19LowerVectorFpExtendERNS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering19getOptimalMemOpTypeEyjjbbRNS_15MachineFunctionE, 
                       __ZNK4llvm17X86TargetLowering19isLegalAddImmediateEx, 
                       __ZNK4llvm17X86TargetLowering20EmitLoweredSegAllocaEPNS_12MachineInstrEPNS_17MachineBasicBlockEb, 
                       __ZNK4llvm17X86TargetLowering20EmitLoweredWinAllocaEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering20LowerFormalArgumentsENS_7SDValueENS_11CallingConv2IDEbRKNS_15SmallVectorImplINS_3ISD8InputArgEEENS_8DebugLocERNS_12SelectionDAGERNS4_IS1_EE, 
                       __ZNK4llvm17X86TargetLowering20LowerINIT_TRAMPOLINEENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering20LowerVectorBroadcastENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering20getJumpTableEncodingEv, 
                       __ZNK4llvm17X86TargetLowering20isLegalICmpImmediateEx, 
                       __ZNK4llvm17X86TargetLowering20isTypeDesirableForOpEjNS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering21ConvertCmpIfNecessaryENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering21LowerGlobalTLSAddressENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering21getByValTypeAlignmentEPNS_4TypeE, 
                       __ZNK4llvm17X86TargetLowering21isLegalAddressingModeERKNS_14TargetLowering8AddrModeEPNS_4TypeE, 
                       __ZNK4llvm17X86TargetLowering21isNarrowingProfitableENS_3EVTES1_, 
                       __ZNK4llvm17X86TargetLowering22IsDesirableToPromoteOpENS_7SDValueERNS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering22LowerAsSplatVectorLoadENS_7SDValueENS_3EVTENS_8DebugLocERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering22LowerINSERT_VECTOR_ELTENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering22LowerSIGN_EXTEND_INREGENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering22LowerVectorAllZeroTestENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering22NormalizeVectorShuffleENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering22getStackCookieLocationERjS1_, 
                       __ZNK4llvm17X86TargetLowering22isVectorClearMaskLegalERKNS_15SmallVectorImplIiEENS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering22mayBeEmittedAsTailCallEPNS_8CallInstE, 
                       __ZNK4llvm17X86TargetLowering23EmitAtomicLoadArith6432EPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering23EmitTailCallLoadRetAddrERNS_12SelectionDAGERNS_7SDValueES3_bbiNS_8DebugLocE, 
                       __ZNK4llvm17X86TargetLowering23LowerDYNAMIC_STACKALLOCENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering23LowerEXTRACT_VECTOR_ELTENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering23findRepresentativeClassENS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering24getPICJumpTableRelocBaseENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering24getTypeForExtArgOrReturnERNS_11LLVMContextENS_3EVTENS_3ISD8NodeTypeE, 
                       __ZNK4llvm17X86TargetLowering25LowerCustomJumpTableEntryEPKNS_20MachineJumpTableInfoEPKNS_17MachineBasicBlockEjRNS_9MCContextE, 
                       __ZNK4llvm17X86TargetLowering25LowerFRAME_TO_ARGS_OFFSETENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering26getReturnAddressFrameIndexERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering27EmitInstrWithCustomInserterEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering27GetAlignedArgumentStackSizeEjRNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering27LowerINSERT_VECTOR_ELT_SSE4ENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering28LowerAsmOperandForConstraintENS_7SDValueERNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERNS2_6vectorIS1_NS6_IS1_EEEERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering28LowerEXTRACT_VECTOR_ELT_SSE4ENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering28getPICJumpTableRelocBaseExprEPKNS_15MachineFunctionEjRNS_9MCContextE, 
                       __ZNK4llvm17X86TargetLowering28getRegForInlineAsmConstraintERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_3EVTE, 
                       __ZNK4llvm17X86TargetLowering29EmitVAARG64WithCustomInserterEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering30computeMaskedBitsForTargetNodeENS_7SDValueERNS_5APIntES3_RKNS_12SelectionDAGEj, 
                       __ZNK4llvm17X86TargetLowering30getSingleConstraintMatchWeightERNS_14TargetLowering14AsmOperandInfoEPKc, 
                       __ZNK4llvm17X86TargetLowering31ComputeNumSignBitsForTargetNodeENS_7SDValueEj, 
                       __ZNK4llvm17X86TargetLowering33IsEligibleForTailCallOptimizationENS_7SDValueENS_11CallingConv2IDEbbbPNS_4TypeERKNS_15SmallVectorImplINS_3ISD9OutputArgEEERKNS6_IS1_EERKNS6_INS7_8InputArgEEERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering40EmitVAStartSaveXMMRegsWithCustomInserterEPNS_12MachineInstrEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm17X86TargetLowering7EmitCmpENS_7SDValueES1_jRNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering8EmitPCMPEPNS_12MachineInstrEPNS_17MachineBasicBlockEjb, 
                       __ZNK4llvm17X86TargetLowering8EmitTestENS_7SDValueEjRNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering9BuildFILDENS_7SDValueENS_3EVTES1_S1_RNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering9LowerCallERNS_14TargetLowering16CallLoweringInfoERNS_15SmallVectorImplINS_7SDValueEEE, 
                       __ZNK4llvm17X86TargetLowering9LowerFABSENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering9LowerFNEGENS_7SDValueERNS_12SelectionDAGE, 
                       __ZNK4llvm17X86TargetLowering9LowerToBTENS_7SDValueENS_3ISD8CondCodeENS_8DebugLocERNS_12SelectionDAGE, 
                       __ZNK4llvm18BlockFrequencyInfo12getBlockFreqEPKNS_10BasicBlockE, 
                       __ZNK4llvm18BlockFrequencyInfo16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm18BlockFrequencyInfo5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm18ConstantDataVector13getSplatValueEv, 
                       __ZNK4llvm18ConstantPoolSDNode7getTypeEv, __ZNK4llvm18ExtractElementInst10clone_implEv, 
                       __ZNK4llvm18LiveDebugVariables16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm18MCParsedAsmOperand4dumpEv, __ZNK4llvm18MachinePointerInfo12getAddrSpaceEv, 
                       __ZNK4llvm18PassManagerBuilder17addExtensionsToPMENS0_16ExtensionPointTyERNS_15PassManagerBaseE, 
                       __ZNK4llvm18PassManagerBuilder29addInitialAliasAnalysisPassesERNS_15PassManagerBaseE, 
                       __ZNK4llvm18RegPressureTracker11isTopClosedEv, __ZNK4llvm18RegPressureTracker14isBottomClosedEv, 
                       __ZNK4llvm18ScheduleDAGSDNodes10getDAGNameEv, __ZNK4llvm18ScheduleDAGSDNodes17getGraphNodeLabelEPKNS_5SUnitE, 
                       __ZNK4llvm18ScheduleDAGSDNodes21computeOperandLatencyEPNS_6SDNodeES2_jRNS_4SDepE, 
                       __ZNK4llvm18ScheduleDAGSDNodes22getCustomGraphFeaturesERNS_11GraphWriterIPNS_11ScheduleDAGEEE, 
                       __ZNK4llvm18ScheduleDAGSDNodes8dumpNodeEPKNS_5SUnitE, 
                       __ZNK4llvm18TargetRegisterInfo17getAllocatableSetERKNS_15MachineFunctionEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm18TargetRegisterInfo17getCommonSubClassEPKNS_19TargetRegisterClassES3_, 
                       __ZNK4llvm18TargetRegisterInfo19getAllocatableClassEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm18TargetRegisterInfo22getCommonSuperRegClassEPKNS_19TargetRegisterClassEjS3_jRjS4_, 
                       __ZNK4llvm18TargetRegisterInfo22getMinimalPhysRegClassEjNS_3EVTE, 
                       __ZNK4llvm18TargetRegisterInfo24getMatchingSuperRegClassEPKNS_19TargetRegisterClassES3_j, 
                       __ZNK4llvm18X86GenRegisterInfo17getRegClassWeightEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm18X86GenRegisterInfo21getNumRegPressureSetsEv, 
                       __ZNK4llvm18X86GenRegisterInfo21getRegPressureSetNameEj, 
                       __ZNK4llvm18X86GenRegisterInfo21getSubClassWithSubRegEPKNS_19TargetRegisterClassEj, 
                       __ZNK4llvm18X86GenRegisterInfo22getRegPressureSetLimitEj, 
                       __ZNK4llvm18X86GenRegisterInfo23getRegClassPressureSetsEPKNS_19TargetRegisterClassE, 
                       __ZNK4llvm18X86GenRegisterInfo24composeSubRegIndicesImplEjj, 
                       __ZNK4llvm19FoldingSetNodeIDRef11ComputeHashEv, 
                       __ZNK4llvm19FoldingSetNodeIDRefeqES0_, __ZNK4llvm19FoldingSetNodeIDRefltES0_, 
                       __ZNK4llvm19GlobalAddressSDNode15getAddressSpaceEv, 
                       __ZNK4llvm19MachineConstantPool5printERNS_11raw_ostreamE, 
                       __ZNK4llvm19MachineFunctionPass16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm19MachineFunctionPass17createPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZNK4llvm19MachineRegisterInfo10getVRegDefEj, __ZNK4llvm19MachineRegisterInfo14clearKillFlagsEj, 
                       __ZNK4llvm19MachineRegisterInfo15hasOneNonDBGUseEj, 
                       __ZNK4llvm19MachineRegisterInfo16getLiveInPhysRegEj, 
                       __ZNK4llvm19MachineRegisterInfo16getLiveInVirtRegEj, 
                       __ZNK4llvm19MachineRegisterInfo16getUniqueVRegDefEj, 
                       __ZNK4llvm19MachineRegisterInfo17isConstantPhysRegEjRKNS_15MachineFunctionE, 
                       __ZNK4llvm19MachineRegisterInfo8isLiveInEj, __ZNK4llvm19MachineRegisterInfo9isLiveOutEj, 
                       __ZNK4llvm19MachineTraceMetrics14TraceBlockInfo5printERNS_11raw_ostreamE, 
                       __ZNK4llvm19MachineTraceMetrics14verifyAnalysisEv, 
                       __ZNK4llvm19MachineTraceMetrics16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm19MachineTraceMetrics5Trace11getPHIDepthEPKNS_12MachineInstrE, 
                       __ZNK4llvm19MachineTraceMetrics5Trace13getInstrSlackEPKNS_12MachineInstrE, 
                       __ZNK4llvm19MachineTraceMetrics5Trace16getResourceDepthEb, 
                       __ZNK4llvm19MachineTraceMetrics5Trace17getResourceLengthENS_8ArrayRefIPKNS_17MachineBasicBlockEEE, 
                       __ZNK4llvm19MachineTraceMetrics5Trace5printERNS_11raw_ostreamE, 
                       __ZNK4llvm19MachineTraceMetrics8Ensemble10getLoopForEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm19MachineTraceMetrics8Ensemble17getDepthResourcesEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm19MachineTraceMetrics8Ensemble18getHeightResourcesEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm19MachineTraceMetrics8Ensemble5printERNS_11raw_ostreamE, 
                       __ZNK4llvm19MachineTraceMetrics8Ensemble6verifyEv, 
                       __ZNK4llvm19SelectionDAGBuilder13getEdgeWeightEPKNS_17MachineBasicBlockES3_, 
                       __ZNK4llvm19TargetFrameLowering19getFrameIndexOffsetERKNS_15MachineFunctionEi, 
                       __ZNK4llvm19TargetFrameLowering22getFrameIndexReferenceERKNS_15MachineFunctionEiRj, 
                       __ZNK4llvm19TargetInstrInfoImpl13reMaterializeERNS_17MachineBasicBlockENS1_15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS4_EEEEjjPKS4_RKNS_18TargetRegisterInfoE, 
                       __ZNK4llvm19TargetInstrInfoImpl14getNumMicroOpsEPKNS_18InstrItineraryDataEPKNS_12MachineInstrE, 
                       __ZNK4llvm19TargetInstrInfoImpl15getInstrLatencyEPKNS_18InstrItineraryDataEPKNS_12MachineInstrEPj, 
                       __ZNK4llvm19TargetInstrInfoImpl15getInstrLatencyEPKNS_18InstrItineraryDataEPNS_6SDNodeE, 
                       __ZNK4llvm19TargetInstrInfoImpl16hasLowDefLatencyEPKNS_18InstrItineraryDataEPKNS_12MachineInstrEj, 
                       __ZNK4llvm19TargetInstrInfoImpl16produceSameValueEPKNS_12MachineInstrES3_PKNS_19MachineRegisterInfoE, 
                       __ZNK4llvm19TargetInstrInfoImpl17getOperandLatencyEPKNS_18InstrItineraryDataEPKNS_12MachineInstrEjS6_j, 
                       __ZNK4llvm19TargetInstrInfoImpl17getOperandLatencyEPKNS_18InstrItineraryDataEPNS_6SDNodeEjS5_j, 
                       __ZNK4llvm19TargetInstrInfoImpl18commuteInstructionEPNS_12MachineInstrEb, 
                       __ZNK4llvm19TargetInstrInfoImpl19hasStoreToStackSlotEPKNS_12MachineInstrERPKNS_17MachineMemOperandERi, 
                       __ZNK4llvm19TargetInstrInfoImpl20PredicateInstructionEPNS_12MachineInstrERKNS_15SmallVectorImplINS_14MachineOperandEEE, 
                       __ZNK4llvm19TargetInstrInfoImpl20canFoldMemoryOperandEPKNS_12MachineInstrERKNS_15SmallVectorImplIjEE, 
                       __ZNK4llvm19TargetInstrInfoImpl20hasLoadFromStackSlotEPKNS_12MachineInstrERPKNS_17MachineMemOperandERi, 
                       __ZNK4llvm19TargetInstrInfoImpl20isSchedulingBoundaryEPKNS_12MachineInstrEPKNS_17MachineBasicBlockERKNS_15MachineFunctionE, 
                       __ZNK4llvm19TargetInstrInfoImpl21findCommutedOpIndicesEPNS_12MachineInstrERjS3_, 
                       __ZNK4llvm19TargetInstrInfoImpl23ReplaceTailWithBranchToENS_17MachineBasicBlock15bundle_iteratorINS_12MachineInstrENS_14ilist_iteratorIS3_EEEEPS1_, 
                       __ZNK4llvm19TargetInstrInfoImpl24isUnpredicatedTerminatorEPKNS_12MachineInstrE, 
                       __ZNK4llvm19TargetInstrInfoImpl24usePreRAHazardRecognizerEv, 
                       __ZNK4llvm19TargetInstrInfoImpl28CreateTargetHazardRecognizerEPKNS_13TargetMachineEPKNS_11ScheduleDAGE, 
                       __ZNK4llvm19TargetInstrInfoImpl30CreateTargetMIHazardRecognizerEPKNS_18InstrItineraryDataEPKNS_11ScheduleDAGE, 
                       __ZNK4llvm19TargetInstrInfoImpl34CreateTargetPostRAHazardRecognizerEPKNS_18InstrItineraryDataEPKNS_11ScheduleDAGE, 
                       __ZNK4llvm19TargetInstrInfoImpl9duplicateEPNS_12MachineInstrERNS_15MachineFunctionE, 
                       __ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPNS_8FunctionE, 
                       __ZNK4llvm19TargetSubtargetInfo21enablePostRASchedulerENS_10CodeGenOpt5LevelERNS0_16AntiDepBreakModeERNS_15SmallVectorImplIPKNS_19TargetRegisterClassEEE, 
                       __ZNK4llvm19X86GenSubtargetInfo17resolveSchedClassEjPKNS_12MachineInstrEPKNS_16TargetSchedModelE, 
                       __ZNK4llvm19X86IntelInstPrinter12printRegNameERNS_11raw_ostreamEj, 
                       __ZNK4llvm19X86SelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGENS_8DebugLocENS_7SDValueES4_S4_S4_jbbNS_18MachinePointerInfoES5_, 
                       __ZNK4llvm19X86SelectionDAGInfo23EmitTargetCodeForMemsetERNS_12SelectionDAGENS_8DebugLocENS_7SDValueES4_S4_S4_jbNS_18MachinePointerInfoE, 
                       __ZNK4llvm19raw_svector_ostream11current_posEv, 
                       __ZNK4llvm20CrashRecoveryContext12getBacktraceEv, 
                       __ZNK4llvm20LatencyPriorityQueue4dumpEPNS_11ScheduleDAGE, 
                       __ZNK4llvm20LibCallAliasAnalysis16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm20LoadAndStorePromoter12isInstInListEPNS_11InstructionERKNS_15SmallVectorImplIS2_EE, 
                       __ZNK4llvm20LoadAndStorePromoter3runERKNS_15SmallVectorImplIPNS_11InstructionEEE, 
                       __ZNK4llvm20MachineDominatorTree16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm20MachineDominatorTree5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm20MachineJumpTableInfo12getEntrySizeERKNS_10TargetDataE, 
                       __ZNK4llvm20MachineJumpTableInfo17getEntryAlignmentERKNS_10TargetDataE, 
                       __ZNK4llvm20MachineJumpTableInfo5printERNS_11raw_ostreamE, 
                       __ZNK4llvm21BranchProbabilityInfo10getHotSuccEPNS_10BasicBlockE, 
                       __ZNK4llvm21BranchProbabilityInfo13getEdgeWeightEPKNS_10BasicBlockES3_, 
                       __ZNK4llvm21BranchProbabilityInfo13getEdgeWeightEPKNS_10BasicBlockEj, 
                       __ZNK4llvm21BranchProbabilityInfo14getSumForBlockEPKNS_10BasicBlockE, 
                       __ZNK4llvm21BranchProbabilityInfo16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm21BranchProbabilityInfo18getEdgeProbabilityEPKNS_10BasicBlockES3_, 
                       __ZNK4llvm21BranchProbabilityInfo18getEdgeProbabilityEPKNS_10BasicBlockEj, 
                       __ZNK4llvm21BranchProbabilityInfo20printEdgeProbabilityERNS_11raw_ostreamEPKNS_10BasicBlockES5_, 
                       __ZNK4llvm21BranchProbabilityInfo5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm21BranchProbabilityInfo9isEdgeHotEPKNS_10BasicBlockES3_, 
                       __ZNK4llvm21CalculateSpillWeights16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm21ConstantAggregateZero15getElementValueEPNS_8ConstantE, 
                       __ZNK4llvm21ConstantAggregateZero15getElementValueEj, 
                       __ZNK4llvm21ConstantAggregateZero16getStructElementEj, 
                       __ZNK4llvm21ConstantAggregateZero20getSequentialElementEv, 
                       __ZNK4llvm21DominanceFrontierBase5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm21ResourcePriorityQueue4dumpEPNS_11ScheduleDAGE, 
                       __ZNK4llvm21StreamingMemoryObject11isObjectEndEy, 
                       __ZNK4llvm21StreamingMemoryObject14isValidAddressEy, 
                       __ZNK4llvm21StreamingMemoryObject8readByteEyPh, 
                       __ZNK4llvm21StreamingMemoryObject9getExtentEv, __ZNK4llvm21StreamingMemoryObject9readBytesEyyPhPy, 
                       __ZNK4llvm21X86_64MCAsmInfoDarwin27getExprForPersonalitySymbolEPKNS_8MCSymbolEjRNS_10MCStreamerE, 
                       __ZNK4llvm22ConstantDataSequential14getElementTypeEv, 
                       __ZNK4llvm22ConstantDataSequential14getNumElementsEv, 
                       __ZNK4llvm22ConstantDataSequential16getRawDataValuesEv, 
                       __ZNK4llvm22ConstantDataSequential17getElementAsFloatEj, 
                       __ZNK4llvm22ConstantDataSequential17getElementPointerEj, 
                       __ZNK4llvm22ConstantDataSequential18getElementAsDoubleEj, 
                       __ZNK4llvm22ConstantDataSequential18getElementByteSizeEv, 
                       __ZNK4llvm22ConstantDataSequential19getElementAsAPFloatEj, 
                       __ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj, 
                       __ZNK4llvm22ConstantDataSequential20getElementAsConstantEj, 
                       __ZNK4llvm22ConstantDataSequential8isStringEv, __ZNK4llvm22ConstantDataSequential9isCStringEv, 
                       __ZNK4llvm22LoopDependenceAnalysis10analyseMIVEPKNS_4SCEVES3_PNS0_9SubscriptE, 
                       __ZNK4llvm22LoopDependenceAnalysis10analyseSIVEPKNS_4SCEVES3_PNS0_9SubscriptE, 
                       __ZNK4llvm22LoopDependenceAnalysis10analyseZIVEPKNS_4SCEVES3_PNS0_9SubscriptE, 
                       __ZNK4llvm22LoopDependenceAnalysis11analysePairEPNS0_14DependencePairE, 
                       __ZNK4llvm22LoopDependenceAnalysis15isLoopInvariantEPKNS_4SCEVE, 
                       __ZNK4llvm22LoopDependenceAnalysis16analyseSubscriptEPKNS_4SCEVES3_PNS0_9SubscriptE, 
                       __ZNK4llvm22LoopDependenceAnalysis16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm22LoopDependenceAnalysis16isDependencePairEPKNS_5ValueES3_, 
                       __ZNK4llvm22LoopDependenceAnalysis5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm22LoopDependenceAnalysis8getLoopsEPKNS_4SCEVEPNS_8DenseSetIPKNS_4LoopENS_12DenseMapInfoIS7_EEEE, 
                       __ZNK4llvm22LoopDependenceAnalysis8isAffineEPKNS_4SCEVE, 
                       __ZNK4llvm22LoopDependenceAnalysis9isSIVPairEPKNS_4SCEVES3_, 
                       __ZNK4llvm22LoopDependenceAnalysis9isZIVPairEPKNS_4SCEVES3_, 
                       __ZNK4llvm22PrettyStackTraceString5printERNS_11raw_ostreamE, 
                       __ZNK4llvm22UnifyFunctionExitNodes16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm22_system_error_category23default_error_conditionEi, 
                       __ZNK4llvm22_system_error_category4nameEv, __ZNK4llvm22_system_error_category7messageEi, 
                       __ZNK4llvm23MCELFObjectTargetWriter14ExplicitRelSymERKNS_11MCAssemblerERKNS_7MCValueERKNS_10MCFragmentERKNS_7MCFixupEb, 
                       __ZNK4llvm23MCELFObjectTargetWriter9getEFlagsEv, 
                       __ZNK4llvm23MachineFunctionAnalysis16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm23PrettyStackTraceProgram5printERNS_11raw_ostreamE, 
                       __ZNK4llvm23_generic_error_category4nameEv, __ZNK4llvm23_generic_error_category7messageEi, 
                       __ZNK4llvm24MachineConstantPoolEntry17getRelocationInfoEv, 
                       __ZNK4llvm24MachineConstantPoolEntry7getTypeEv, 
                       __ZNK4llvm24MachinePostDominatorTree16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm24MachinePostDominatorTree5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm24MemoryDependenceAnalysis13verifyRemovedEPNS_11InstructionE, 
                       __ZNK4llvm24MemoryDependenceAnalysis16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_13TargetMachineEPKNS_8MCSymbolE, 
                       __ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantENS_11SectionKindE, 
                       __ZNK4llvm24TargetLoweringObjectFile22SelectSectionForGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm24TargetLoweringObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoE, 
                       __ZNK4llvm24TargetLoweringObjectFile24getExprForDwarfReferenceEPKNS_8MCSymbolEjRNS_10MCStreamerE, 
                       __ZNK4llvm24TargetLoweringObjectFile30getExprForDwarfGlobalReferenceEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoEjRNS_10MCStreamerE, 
                       __ZNK4llvm25MachineBlockFrequencyInfo12getBlockFreqEPKNS_17MachineBasicBlockE, 
                       __ZNK4llvm25MachineBlockFrequencyInfo16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm26ScoreboardHazardRecognizer12atIssueLimitEv, 
                       __ZNK4llvm27FixedStackPseudoSourceValue10isConstantEPKNS_16MachineFrameInfoE, 
                       __ZNK4llvm27FixedStackPseudoSourceValue11printCustomERNS_11raw_ostreamE, 
                       __ZNK4llvm27FixedStackPseudoSourceValue8mayAliasEPKNS_16MachineFrameInfoE, 
                       __ZNK4llvm27FixedStackPseudoSourceValue9isAliasedEPKNS_16MachineFrameInfoE, 
                       __ZNK4llvm27PassManagerPrettyStackEntry5printERNS_11raw_ostreamE, 
                       __ZNK4llvm27TargetLoweringObjectFileELF20emitPersonalityValueERNS_10MCStreamerERKNS_13TargetMachineEPKNS_8MCSymbolE, 
                       __ZNK4llvm27TargetLoweringObjectFileELF20getStaticCtorSectionEj, 
                       __ZNK4llvm27TargetLoweringObjectFileELF20getStaticDtorSectionEj, 
                       __ZNK4llvm27TargetLoweringObjectFileELF21getSectionForConstantENS_11SectionKindE, 
                       __ZNK4llvm27TargetLoweringObjectFileELF22SelectSectionForGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm27TargetLoweringObjectFileELF23getCFIPersonalitySymbolEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoE, 
                       __ZNK4llvm27TargetLoweringObjectFileELF24getExplicitSectionGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm27TargetLoweringObjectFileELF30getExprForDwarfGlobalReferenceEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoEjRNS_10MCStreamerE, 
                       __ZNK4llvm27X86_64MachoTargetObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoE, 
                       __ZNK4llvm27X86_64MachoTargetObjectFile30getExprForDwarfGlobalReferenceEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoEjRNS_10MCStreamerE, 
                       __ZNK4llvm28MachineBranchProbabilityInfo10getHotSuccEPNS_17MachineBasicBlockE, 
                       __ZNK4llvm28MachineBranchProbabilityInfo13getEdgeWeightEPKNS_17MachineBasicBlockENSt3__111__wrap_iterIPKPS1_EE, 
                       __ZNK4llvm28MachineBranchProbabilityInfo13getEdgeWeightEPKNS_17MachineBasicBlockES3_, 
                       __ZNK4llvm28MachineBranchProbabilityInfo14getSumForBlockEPKNS_17MachineBasicBlockERj, 
                       __ZNK4llvm28MachineBranchProbabilityInfo18getEdgeProbabilityEPNS_17MachineBasicBlockES2_, 
                       __ZNK4llvm28MachineBranchProbabilityInfo20printEdgeProbabilityERNS_11raw_ostreamEPNS_17MachineBasicBlockES4_, 
                       __ZNK4llvm28MachineBranchProbabilityInfo9isEdgeHotEPNS_17MachineBasicBlockES2_, 
                       __ZNK4llvm28TargetLoweringObjectFileCOFF22SelectSectionForGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm28TargetLoweringObjectFileCOFF24getExplicitSectionGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm29TargetLoweringObjectFileMachO15emitModuleFlagsERNS_10MCStreamerENS_8ArrayRefINS_6Module15ModuleFlagEntryEEEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm29TargetLoweringObjectFileMachO21getSectionForConstantENS_11SectionKindE, 
                       __ZNK4llvm29TargetLoweringObjectFileMachO22SelectSectionForGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm29TargetLoweringObjectFileMachO23getCFIPersonalitySymbolEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoE, 
                       __ZNK4llvm29TargetLoweringObjectFileMachO24getExplicitSectionGlobalEPKNS_11GlobalValueENS_11SectionKindEPNS_7ManglerERKNS_13TargetMachineE, 
                       __ZNK4llvm29TargetLoweringObjectFileMachO26shouldEmitUsedDirectiveForEPKNS_11GlobalValueEPNS_7ManglerE, 
                       __ZNK4llvm29TargetLoweringObjectFileMachO30getExprForDwarfGlobalReferenceEPKNS_11GlobalValueEPNS_7ManglerEPNS_17MachineModuleInfoEjRNS_10MCStreamerE, 
                       __ZNK4llvm2cl17basic_parser_impl14getOptionWidthERKNS0_6OptionE, 
                       __ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm, 
                       __ZNK4llvm2cl17basic_parser_impl15printOptionNameERKNS0_6OptionEm, 
                       __ZNK4llvm2cl17basic_parser_impl18printOptionNoValueERKNS0_6OptionEm, 
                       __ZNK4llvm2cl19generic_parser_base14getOptionWidthERKNS0_6OptionE, 
                       __ZNK4llvm2cl19generic_parser_base15printOptionInfoERKNS0_6OptionEm, 
                       __ZNK4llvm2cl19generic_parser_base22printGenericOptionDiffERKNS0_6OptionERKNS0_18GenericOptionValueES7_m, 
                       __ZNK4llvm2cl5alias14getOptionWidthEv, __ZNK4llvm2cl5alias15printOptionInfoEm, 
                       __ZNK4llvm2cl6parserINS0_13boolOrDefaultEE15printOptionDiffERKNS0_6OptionES2_NS0_11OptionValueIS2_EEm, 
                       __ZNK4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15printOptionDiffERKNS0_6OptionENS_9StringRefENS0_11OptionValueIS8_EEm, 
                       __ZNK4llvm2cl6parserIbE15printOptionDiffERKNS0_6OptionEbNS0_11OptionValueIbEEm, 
                       __ZNK4llvm2cl6parserIcE15printOptionDiffERKNS0_6OptionEcNS0_11OptionValueIcEEm, 
                       __ZNK4llvm2cl6parserIdE15printOptionDiffERKNS0_6OptionEdNS0_11OptionValueIdEEm, 
                       __ZNK4llvm2cl6parserIfE15printOptionDiffERKNS0_6OptionEfNS0_11OptionValueIfEEm, 
                       __ZNK4llvm2cl6parserIiE15printOptionDiffERKNS0_6OptionEiNS0_11OptionValueIiEEm, 
                       __ZNK4llvm2cl6parserIjE15printOptionDiffERKNS0_6OptionEjNS0_11OptionValueIjEEm, 
                       __ZNK4llvm2cl6parserIyE15printOptionDiffERKNS0_6OptionEyNS0_11OptionValueIyEEm, 
                       __ZNK4llvm3EVT12getEVTStringEv, __ZNK4llvm3EVT13getTypeForEVTERNS_11LLVMContextE, 
                       __ZNK4llvm3EVT16isExtendedVectorEv, __ZNK4llvm3EVT17isExtendedIntegerEv, 
                       __ZNK4llvm3EVT21getExtendedSizeInBitsEv, __ZNK4llvm3EVT21isExtended16BitVectorEv, 
                       __ZNK4llvm3EVT21isExtended32BitVectorEv, __ZNK4llvm3EVT21isExtended64BitVectorEv, 
                       __ZNK4llvm3EVT22isExtended128BitVectorEv, __ZNK4llvm3EVT22isExtended256BitVectorEv, 
                       __ZNK4llvm3EVT22isExtended512BitVectorEv, __ZNK4llvm3EVT23isExtended1024BitVectorEv, 
                       __ZNK4llvm3EVT23isExtendedFloatingPointEv, __ZNK4llvm3EVT28getExtendedVectorElementTypeEv, 
                       __ZNK4llvm3EVT28getExtendedVectorNumElementsEv, 
                       __ZNK4llvm3EVT40changeExtendedVectorElementTypeToIntegerEv, 
                       __ZNK4llvm3PEI16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm3Use14getImpliedUserEv, __ZNK4llvm3Use7getUserEv, 
                       __ZNK4llvm3sys14PathWithStatus13getFileStatusEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZNK4llvm3sys2fs15directory_entry6statusERNS1_11file_statusE, 
                       __ZNK4llvm3sys2fs18mapped_file_region10const_dataEv, 
                       __ZNK4llvm3sys2fs18mapped_file_region4dataEv, __ZNK4llvm3sys2fs18mapped_file_region4sizeEv, 
                       __ZNK4llvm3sys2fs18mapped_file_region5flagsEv, __ZNK4llvm3sys4Path10canExecuteEv, 
                       __ZNK4llvm3sys4Path10getDirnameEv, __ZNK4llvm3sys4Path10isAbsoluteEv, 
                       __ZNK4llvm3sys4Path11getBasenameEv, __ZNK4llvm3sys4Path11isDirectoryEv, 
                       __ZNK4llvm3sys4Path12isObjectFileEv, __ZNK4llvm3sys4Path13eraseFromDiskEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, 
                       __ZNK4llvm3sys4Path13isBitcodeFileEv, __ZNK4llvm3sys4Path13isRegularFileEv, 
                       __ZNK4llvm3sys4Path14getMagicNumberERNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEj, 
                       __ZNK4llvm3sys4Path14hasMagicNumberENS_9StringRefE, 
                       __ZNK4llvm3sys4Path16isDynamicLibraryEv, __ZNK4llvm3sys4Path19setStatusInfoOnDiskERKNS0_10FileStatusEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE, 
                       __ZNK4llvm3sys4Path20getDirectoryContentsERNSt3__13setIS1_NS2_4lessIS1_EENS2_9allocatorIS1_EEEEPNS2_12basic_stringIcNS2_11char_traitsIcEENS6_IcEEEE, 
                       __ZNK4llvm3sys4Path6existsEv, __ZNK4llvm3sys4Path7canReadEv, 
                       __ZNK4llvm3sys4Path7getLastEv, __ZNK4llvm3sys4Path7isValidEv, 
                       __ZNK4llvm3sys4Path8canWriteEv, __ZNK4llvm3sys4Path9getSuffixEv, 
                       __ZNK4llvm3sys4Path9isArchiveEv, __ZNK4llvm3sys4Path9isSymLinkEv, 
                       __ZNK4llvm3sys4PatheqERKS1_, __ZNK4llvm3sys4PathltERKS1_, 
                       __ZNK4llvm3sys4path14const_iteratoreqERKS2_, __ZNK4llvm3sys4path14const_iteratormiERKS2_, 
                       __ZNK4llvm3sys4path14const_iteratorneERKS2_, __ZNK4llvm3sys7Program6GetPidEv, 
                       __ZNK4llvm3sys9TimeValue3strEv, __ZNK4llvm4Loop11isLCSSAFormERNS_13DominatorTreeE, 
                       __ZNK4llvm4Loop13isSafeToCloneEv, __ZNK4llvm4Loop15isLoopInvariantEPNS_5ValueE, 
                       __ZNK4llvm4Loop17hasDedicatedExitsEv, __ZNK4llvm4Loop17makeLoopInvariantEPNS_11InstructionERbS2_, 
                       __ZNK4llvm4Loop17makeLoopInvariantEPNS_5ValueERbPNS_11InstructionE, 
                       __ZNK4llvm4Loop18getUniqueExitBlockEv, __ZNK4llvm4Loop18isLoopSimplifyFormEv, 
                       __ZNK4llvm4Loop19getUniqueExitBlocksERNS_15SmallVectorImplIPNS_10BasicBlockEEE, 
                       __ZNK4llvm4Loop24hasLoopInvariantOperandsEPNS_11InstructionE, 
                       __ZNK4llvm4Loop29getCanonicalInductionVariableEv, 
                       __ZNK4llvm4Pass11getPassNameEv, __ZNK4llvm4Pass14verifyAnalysisEv, 
                       __ZNK4llvm4Pass16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm4Pass22mustPreserveAnalysisIDERc, __ZNK4llvm4Pass27getPotentialPassManagerTypeEv, 
                       __ZNK4llvm4Pass4dumpEv, __ZNK4llvm4Pass5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm4SCEV14isAllOnesValueEv, __ZNK4llvm4SCEV21isNonConstantNegativeEv, 
                       __ZNK4llvm4SCEV5isOneEv, __ZNK4llvm4SCEV5printERNS_11raw_ostreamE, 
                       __ZNK4llvm4SCEV6isZeroEv, __ZNK4llvm4SCEV7getTypeEv, 
                       __ZNK4llvm4Type11isIntegerTyEj, __ZNK4llvm4Type13getStructNameEv, 
                       __ZNK4llvm4Type16isFPOrFPVectorTyEv, __ZNK4llvm4Type16isFunctionVarArgEv, 
                       __ZNK4llvm4Type18getFPMantissaWidthEv, __ZNK4llvm4Type18getIntegerBitWidthEv, 
                       __ZNK4llvm4Type18isIntOrIntVectorTyEv, __ZNK4llvm4Type18isSizedDerivedTypeEv, 
                       __ZNK4llvm4Type19getArrayNumElementsEv, __ZNK4llvm4Type20getFunctionNumParamsEv, 
                       __ZNK4llvm4Type20getFunctionParamTypeEj, __ZNK4llvm4Type20getStructElementTypeEj, 
                       __ZNK4llvm4Type20getStructNumElementsEv, __ZNK4llvm4Type20getVectorNumElementsEv, 
                       __ZNK4llvm4Type22canLosslesslyBitCastToEPS0_, __ZNK4llvm4Type22getPointerAddressSpaceEv, 
                       __ZNK4llvm4Type22getPrimitiveSizeInBitsEv, __ZNK4llvm4Type24getSequentialElementTypeEv, 
                       __ZNK4llvm4Type4dumpEv, __ZNK4llvm4Type5printERNS_11raw_ostreamE, 
                       __ZNK4llvm4Type9isEmptyTyEv, __ZNK4llvm4User16allocHungoffUsesEj, 
                       __ZNK4llvm4yaml10ScalarNode20unescapeDoubleQuotedENS_9StringRefEmRNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm4yaml10ScalarNode8getValueERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm4yaml4Node6failedEv, __ZNK4llvm4yaml4Node8setErrorERKNS_5TwineERNS0_5TokenE, 
                       __ZNK4llvm4yaml8Document6failedEv, __ZNK4llvm4yaml8Document8setErrorERKNS_5TwineERNS0_5TokenE, 
                       __ZNK4llvm5APInt10OrSlowCaseERKS0_, __ZNK4llvm5APInt10sextOrSelfEj, 
                       __ZNK4llvm5APInt10zextOrSelfEj, __ZNK4llvm5APInt11AndSlowCaseERKS0_, 
                       __ZNK4llvm5APInt11XorSlowCaseERKS0_, __ZNK4llvm5APInt11sextOrTruncEj, 
                       __ZNK4llvm5APInt11shlSlowCaseEj, __ZNK4llvm5APInt11zextOrTruncEj, 
                       __ZNK4llvm5APInt13EqualSlowCaseERKS0_, __ZNK4llvm5APInt13EqualSlowCaseEy, 
                       __ZNK4llvm5APInt13roundToDoubleEb, __ZNK4llvm5APInt16countLeadingOnesEv, 
                       __ZNK4llvm5APInt18countTrailingZerosEv, __ZNK4llvm5APInt21multiplicativeInverseERKS0_, 
                       __ZNK4llvm5APInt23countPopulationSlowCaseEv, __ZNK4llvm5APInt25countLeadingZerosSlowCaseEv, 
                       __ZNK4llvm5APInt25countTrailingOnesSlowCaseEv, __ZNK4llvm5APInt3shlERKS0_, 
                       __ZNK4llvm5APInt3sltERKS0_, __ZNK4llvm5APInt3ultERKS0_, 
                       __ZNK4llvm5APInt4ashrERKS0_, __ZNK4llvm5APInt4ashrEj, 
                       __ZNK4llvm5APInt4dumpEv, __ZNK4llvm5APInt4lshrERKS0_, 
                       __ZNK4llvm5APInt4lshrEj, __ZNK4llvm5APInt4rotlERKS0_, 
                       __ZNK4llvm5APInt4rotlEj, __ZNK4llvm5APInt4rotrERKS0_, 
                       __ZNK4llvm5APInt4rotrEj, __ZNK4llvm5APInt4sextEj, 
                       __ZNK4llvm5APInt4sqrtEv, __ZNK4llvm5APInt4udivERKS0_, 
                       __ZNK4llvm5APInt4uremERKS0_, __ZNK4llvm5APInt4zextEj, 
                       __ZNK4llvm5APInt5magicEv, __ZNK4llvm5APInt5printERNS_11raw_ostreamEb, 
                       __ZNK4llvm5APInt5truncEj, __ZNK4llvm5APInt6magicuEj, 
                       __ZNK4llvm5APInt7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm5APInt7sadd_ovERKS0_Rb, __ZNK4llvm5APInt7sdiv_ovERKS0_Rb, 
                       __ZNK4llvm5APInt7smul_ovERKS0_Rb, __ZNK4llvm5APInt7sshl_ovEjRb, 
                       __ZNK4llvm5APInt7ssub_ovERKS0_Rb, __ZNK4llvm5APInt7uadd_ovERKS0_Rb, 
                       __ZNK4llvm5APInt7umul_ovERKS0_Rb, __ZNK4llvm5APInt7usub_ovERKS0_Rb, 
                       __ZNK4llvm5APInt8byteSwapEv, __ZNK4llvm5APInt8toStringERNS_15SmallVectorImplIcEEjbb, 
                       __ZNK4llvm5APInt8toStringEjb, __ZNK4llvm5APInt9getHiBitsEj, 
                       __ZNK4llvm5APInt9getLoBitsEj, __ZNK4llvm5APIntmiERKS0_, 
                       __ZNK4llvm5APIntmlERKS0_, __ZNK4llvm5APIntplERKS0_, 
                       __ZNK4llvm5Regex13getNumMatchesEv, __ZNK4llvm5Trace11getFunctionEv, 
                       __ZNK4llvm5Trace5printERNS_11raw_ostreamE, __ZNK4llvm5Trace9getModuleEv, 
                       __ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm5Twine13printOneChildERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE, 
                       __ZNK4llvm5Twine17printOneChildReprERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE, 
                       __ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm5Twine3strEv, __ZNK4llvm5Twine4dumpEv, 
                       __ZNK4llvm5Twine5printERNS_11raw_ostreamE, __ZNK4llvm5Twine8dumpReprEv, 
                       __ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm5Twine9printReprERNS_11raw_ostreamE, __ZNK4llvm5Value10getContextEv, 
                       __ZNK4llvm5Value10getNumUsesEv, __ZNK4llvm5Value11printCustomERNS_11raw_ostreamE, 
                       __ZNK4llvm5Value14hasNUsesOrMoreEj, __ZNK4llvm5Value18isUsedInBasicBlockEPKNS_10BasicBlockE, 
                       __ZNK4llvm5Value24isDereferenceablePointerEv, __ZNK4llvm5Value4dumpEv, 
                       __ZNK4llvm5Value5printERNS_11raw_ostreamEPNS_24AssemblyAnnotationWriterE, 
                       __ZNK4llvm5Value7getNameEv, __ZNK4llvm5Value8hasNUsesEj, 
                       __ZNK4llvm6APSInt7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm6DIType13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm6DIType6VerifyEv, __ZNK4llvm6MCExpr18EvaluateAsAbsoluteERx, 
                       __ZNK4llvm6MCExpr18EvaluateAsAbsoluteERxPKNS_11MCAssemblerEPKNS_11MCAsmLayoutEPKNS_8DenseMapIPKNS_13MCSectionDataEyNS_12DenseMapInfoISB_EEEE, 
                       __ZNK4llvm6MCExpr18EvaluateAsAbsoluteERxRKNS_11MCAsmLayoutE, 
                       __ZNK4llvm6MCExpr18EvaluateAsAbsoluteERxRKNS_11MCAsmLayoutERKNS_8DenseMapIPKNS_13MCSectionDataEyNS_12DenseMapInfoIS8_EEEE, 
                       __ZNK4llvm6MCExpr18EvaluateAsAbsoluteERxRKNS_11MCAssemblerE, 
                       __ZNK4llvm6MCExpr21EvaluateAsRelocatableERNS_7MCValueERKNS_11MCAsmLayoutE, 
                       __ZNK4llvm6MCExpr21FindAssociatedSectionEv, __ZNK4llvm6MCExpr25EvaluateAsRelocatableImplERNS_7MCValueEPKNS_11MCAssemblerEPKNS_11MCAsmLayoutEPKNS_8DenseMapIPKNS_13MCSectionDataEyNS_12DenseMapInfoISC_EEEEb, 
                       __ZNK4llvm6MCExpr5printERNS_11raw_ostreamE, __ZNK4llvm6MCInst11dump_prettyERNS_11raw_ostreamEPKNS_9MCAsmInfoEPKNS_13MCInstPrinterENS_9StringRefE, 
                       __ZNK4llvm6MCInst5printERNS_11raw_ostreamEPKNS_9MCAsmInfoE, 
                       __ZNK4llvm6MDNode10getOperandEj, __ZNK4llvm6MDNode11getFunctionEv, 
                       __ZNK4llvm6MDNode7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm6Module11getFunctionENS_9StringRefE, __ZNK4llvm6Module11getMDKindIDENS_9StringRefE, 
                       __ZNK4llvm6Module13getEndiannessEv, __ZNK4llvm6Module13getNamedAliasENS_9StringRefE, 
                       __ZNK4llvm6Module13getNamedValueENS_9StringRefE, 
                       __ZNK4llvm6Module13getTypeByNameENS_9StringRefE, 
                       __ZNK4llvm6Module14getMDKindNamesERNS_15SmallVectorImplINS_9StringRefEEE, 
                       __ZNK4llvm6Module14getPointerSizeEv, __ZNK4llvm6Module16getNamedMetadataERKNS_5TwineE, 
                       __ZNK4llvm6Module16isMaterializableEPKNS_11GlobalValueE, 
                       __ZNK4llvm6Module17getGlobalVariableENS_9StringRefEb, 
                       __ZNK4llvm6Module18isDematerializableEPKNS_11GlobalValueE, 
                       __ZNK4llvm6Module22getModuleFlagsMetadataERNS_15SmallVectorImplINS0_15ModuleFlagEntryEEE, 
                       __ZNK4llvm6Module22getModuleFlagsMetadataEv, __ZNK4llvm6Module4dumpEv, 
                       __ZNK4llvm6Module5printERNS_11raw_ostreamEPNS_24AssemblyAnnotationWriterE, 
                       __ZNK4llvm6Region10getNameStrEv, __ZNK4llvm6Region10verifyWalkEPNS_10BasicBlockEPNSt3__13setIS2_NS3_4lessIS2_EENS3_9allocatorIS2_EEEE, 
                       __ZNK4llvm6Region11element_endEv, __ZNK4llvm6Region12verifyRegionEv, 
                       __ZNK4llvm6Region13element_beginEv, __ZNK4llvm6Region15getExitingBlockEv, 
                       __ZNK4llvm6Region16getEnteringBlockEv, __ZNK4llvm6Region16getSubRegionNodeEPNS_10BasicBlockE, 
                       __ZNK4llvm6Region16verifyBBInRegionEPNS_10BasicBlockE, 
                       __ZNK4llvm6Region16verifyRegionNestEv, __ZNK4llvm6Region17getExpandedRegionEv, 
                       __ZNK4llvm6Region21outermostLoopInRegionEPNS_4LoopE, 
                       __ZNK4llvm6Region21outermostLoopInRegionEPNS_8LoopInfoEPNS_10BasicBlockE, 
                       __ZNK4llvm6Region5printERNS_11raw_ostreamEbjNS0_10PrintStyleE, 
                       __ZNK4llvm6Region7getNodeEPNS_10BasicBlockE, __ZNK4llvm6Region8containsEPKNS_10BasicBlockE, 
                       __ZNK4llvm6Region8containsEPKNS_4LoopE, __ZNK4llvm6Region8getDepthEv, 
                       __ZNK4llvm6Region8isSimpleEv, __ZNK4llvm6Region9getBBNodeEPNS_10BasicBlockE, 
                       __ZNK4llvm6SDNode10printrFullERNS_11raw_ostreamEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode11isOperandOfEPS0_, __ZNK4llvm6SDNode11print_typesERNS_11raw_ostreamEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode12isOnlyUserOfEPS0_, __ZNK4llvm6SDNode13print_detailsERNS_11raw_ostreamEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode14dumprWithDepthEPKNS_12SelectionDAGEj, 
                       __ZNK4llvm6SDNode14hasPredecessorEPKS0_, __ZNK4llvm6SDNode15hasNUsesOfValueEjj, 
                       __ZNK4llvm6SDNode15printrWithDepthERNS_11raw_ostreamEPKNS_12SelectionDAGEj, 
                       __ZNK4llvm6SDNode16getOperationNameEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode16hasAnyUseOfValueEj, __ZNK4llvm6SDNode20hasPredecessorHelperEPKS0_RNS_11SmallPtrSetIS2_Lj32EEERNS_11SmallVectorIS2_Lj16EEE, 
                       __ZNK4llvm6SDNode21getConstantOperandValEj, __ZNK4llvm6SDNode4dumpEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode4dumpEv, __ZNK4llvm6SDNode5dumprEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode5dumprEv, __ZNK4llvm6SDNode5printERNS_11raw_ostreamEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode6printrERNS_11raw_ostreamEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6SDNode7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm6SDNode9dumprFullEPKNS_12SelectionDAGE, 
                       __ZNK4llvm6Triple11getArchNameEv, __ZNK4llvm6Triple11isArch16BitEv, 
                       __ZNK4llvm6Triple11isArch32BitEv, __ZNK4llvm6Triple11isArch64BitEv, 
                       __ZNK4llvm6Triple12getOSVersionERjS1_S1_, __ZNK4llvm6Triple13getVendorNameEv, 
                       __ZNK4llvm6Triple13getiOSVersionERjS1_S1_, __ZNK4llvm6Triple16getMacOSXVersionERjS1_S1_, 
                       __ZNK4llvm6Triple18getEnvironmentNameEv, __ZNK4llvm6Triple19get32BitArchVariantEv, 
                       __ZNK4llvm6Triple19get64BitArchVariantEv, __ZNK4llvm6Triple23getOSAndEnvironmentNameEv, 
                       __ZNK4llvm6Triple9getOSNameEv, __ZNK4llvm6object11MachOObject10dumpHeaderEv, 
                       __ZNK4llvm6object11MachOObject11ReadSectionERKNS1_15LoadCommandInfoEjRNS_14InMemoryStructINS0_5macho7SectionEEE, 
                       __ZNK4llvm6object11MachOObject11printHeaderERNS_11raw_ostreamE, 
                       __ZNK4llvm6object11MachOObject12ReadULEB128sEyRNS_15SmallVectorImplIyEE, 
                       __ZNK4llvm6object11MachOObject13ReadSection64ERKNS1_15LoadCommandInfoEjRNS_14InMemoryStructINS0_5macho9Section64EEE, 
                       __ZNK4llvm6object11MachOObject18getLoadCommandInfoEj, 
                       __ZNK4llvm6object11MachOObject19ReadRelocationEntryEyjRNS_14InMemoryStructINS0_5macho15RelocationEntryEEE, 
                       __ZNK4llvm6object11MachOObject20ReadSymbolTableEntryEyjRNS_14InMemoryStructINS0_5macho16SymbolTableEntryEEE, 
                       __ZNK4llvm6object11MachOObject21ReadSymtabLoadCommandERKNS1_15LoadCommandInfoERNS_14InMemoryStructINS0_5macho17SymtabLoadCommandEEE, 
                       __ZNK4llvm6object11MachOObject22ReadSegmentLoadCommandERKNS1_15LoadCommandInfoERNS_14InMemoryStructINS0_5macho18SegmentLoadCommandEEE, 
                       __ZNK4llvm6object11MachOObject22ReadSymbol64TableEntryEyjRNS_14InMemoryStructINS0_5macho18Symbol64TableEntryEEE, 
                       __ZNK4llvm6object11MachOObject23ReadDysymtabLoadCommandERKNS1_15LoadCommandInfoERNS_14InMemoryStructINS0_5macho19DysymtabLoadCommandEEE, 
                       __ZNK4llvm6object11MachOObject24ReadDataInCodeTableEntryEyjRNS_14InMemoryStructINS0_5macho20DataInCodeTableEntryEEE, 
                       __ZNK4llvm6object11MachOObject24ReadSegment64LoadCommandERKNS1_15LoadCommandInfoERNS_14InMemoryStructINS0_5macho20Segment64LoadCommandEEE, 
                       __ZNK4llvm6object11MachOObject27ReadLinkeditDataLoadCommandERKNS1_15LoadCommandInfoERNS_14InMemoryStructINS0_5macho23LinkeditDataLoadCommandEEE, 
                       __ZNK4llvm6object11MachOObject28ReadIndirectSymbolTableEntryERKNS0_5macho19DysymtabLoadCommandEjRNS_14InMemoryStructINS2_24IndirectSymbolTableEntryEEE, 
                       __ZNK4llvm6object11MachOObject4dumpEv, __ZNK4llvm6object11MachOObject5printERNS_11raw_ostreamE, 
                       __ZNK4llvm6object11MachOObject7getDataEmm, __ZNK4llvm6object14COFFObjectFile10getSectionEiRPKNS0_12coff_sectionE, 
                       __ZNK4llvm6object14COFFObjectFile11end_symbolsEv, 
                       __ZNK4llvm6object14COFFObjectFile11getLoadNameEv, 
                       __ZNK4llvm6object14COFFObjectFile12end_sectionsEv, 
                       __ZNK4llvm6object14COFFObjectFile12isSectionBSSENS0_11DataRefImplERb, 
                       __ZNK4llvm6object14COFFObjectFile13begin_symbolsEv, 
                       __ZNK4llvm6object14COFFObjectFile13getCOFFSymbolERNS0_16content_iteratorINS0_9SymbolRefEEE, 
                       __ZNK4llvm6object14COFFObjectFile13getSymbolNameENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object14COFFObjectFile13getSymbolNameEPKNS0_11coff_symbolERNS_9StringRefE, 
                       __ZNK4llvm6object14COFFObjectFile13getSymbolNextENS0_11DataRefImplERNS0_9SymbolRefE, 
                       __ZNK4llvm6object14COFFObjectFile13getSymbolSizeENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile13getSymbolTypeENS0_11DataRefImplERNS0_9SymbolRef4TypeE, 
                       __ZNK4llvm6object14COFFObjectFile13isSectionDataENS0_11DataRefImplERb, 
                       __ZNK4llvm6object14COFFObjectFile13isSectionTextENS0_11DataRefImplERb, 
                       __ZNK4llvm6object14COFFObjectFile14begin_sectionsEv, 
                       __ZNK4llvm6object14COFFObjectFile14getCOFFSectionERNS0_16content_iteratorINS0_10SectionRefEEE, 
                       __ZNK4llvm6object14COFFObjectFile14getLibraryNextENS0_11DataRefImplERNS0_10LibraryRefE, 
                       __ZNK4llvm6object14COFFObjectFile14getLibraryPathENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object14COFFObjectFile14getSectionNameENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object14COFFObjectFile14getSectionNameEPKNS0_12coff_sectionERNS_9StringRefE, 
                       __ZNK4llvm6object14COFFObjectFile14getSectionNextENS0_11DataRefImplERNS0_10SectionRefE, 
                       __ZNK4llvm6object14COFFObjectFile14getSectionSizeENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile14getSymbolFlagsENS0_11DataRefImplERj, 
                       __ZNK4llvm6object14COFFObjectFile16getSectionRelEndENS0_11DataRefImplE, 
                       __ZNK4llvm6object14COFFObjectFile16getSymbolAddressENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile16getSymbolAuxDataEPKNS0_11coff_symbolE, 
                       __ZNK4llvm6object14COFFObjectFile16getSymbolSectionENS0_11DataRefImplERNS0_16content_iteratorINS0_10SectionRefEEE, 
                       __ZNK4llvm6object14COFFObjectFile16isSectionVirtualENS0_11DataRefImplERb, 
                       __ZNK4llvm6object14COFFObjectFile17getBytesInAddressEv, 
                       __ZNK4llvm6object14COFFObjectFile17getCOFFRelocationERNS0_16content_iteratorINS0_13RelocationRefEEE, 
                       __ZNK4llvm6object14COFFObjectFile17getFileFormatNameEv, 
                       __ZNK4llvm6object14COFFObjectFile17getRelocationNextENS0_11DataRefImplERNS0_13RelocationRefE, 
                       __ZNK4llvm6object14COFFObjectFile17getRelocationTypeENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile17getSectionAddressENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile17isSectionZeroInitENS0_11DataRefImplERb, 
                       __ZNK4llvm6object14COFFObjectFile18getSectionContentsENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object14COFFObjectFile18getSectionContentsEPKNS0_12coff_sectionERNS_8ArrayRefIhEE, 
                       __ZNK4llvm6object14COFFObjectFile18getSectionRelBeginENS0_11DataRefImplE, 
                       __ZNK4llvm6object14COFFObjectFile19end_dynamic_symbolsEv, 
                       __ZNK4llvm6object14COFFObjectFile19getRelocationOffsetENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile19getRelocationSymbolENS0_11DataRefImplERNS0_9SymbolRefE, 
                       __ZNK4llvm6object14COFFObjectFile19getSectionAlignmentENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile19getSymbolFileOffsetENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile19getSymbolNMTypeCharENS0_11DataRefImplERc, 
                       __ZNK4llvm6object14COFFObjectFile20end_libraries_neededEv, 
                       __ZNK4llvm6object14COFFObjectFile20getRelocationAddressENS0_11DataRefImplERy, 
                       __ZNK4llvm6object14COFFObjectFile21begin_dynamic_symbolsEv, 
                       __ZNK4llvm6object14COFFObjectFile21getRelocationTypeNameENS0_11DataRefImplERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm6object14COFFObjectFile21sectionContainsSymbolENS0_11DataRefImplES2_Rb, 
                       __ZNK4llvm6object14COFFObjectFile22begin_libraries_neededEv, 
                       __ZNK4llvm6object14COFFObjectFile24getRelocationValueStringENS0_11DataRefImplERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm6object14COFFObjectFile27getRelocationAdditionalInfoENS0_11DataRefImplERx, 
                       __ZNK4llvm6object14COFFObjectFile29isSectionRequiredForExecutionENS0_11DataRefImplERb, 
                       __ZNK4llvm6object14COFFObjectFile5toRelENS0_11DataRefImplE, 
                       __ZNK4llvm6object14COFFObjectFile5toSecENS0_11DataRefImplE, 
                       __ZNK4llvm6object14COFFObjectFile6toSymbENS0_11DataRefImplE, 
                       __ZNK4llvm6object14COFFObjectFile7getArchEv, __ZNK4llvm6object14COFFObjectFile9getHeaderERPKNS0_16coff_file_headerE, 
                       __ZNK4llvm6object14COFFObjectFile9getStringEjRNS_9StringRefE, 
                       __ZNK4llvm6object14COFFObjectFile9getSymbolEjRPKNS0_11coff_symbolE, 
                       __ZNK4llvm6object15MachOObjectFile10getSectionENS0_11DataRefImplERNS_14InMemoryStructINS0_5macho7SectionEEE, 
                       __ZNK4llvm6object15MachOObjectFile11end_symbolsEv, 
                       __ZNK4llvm6object15MachOObjectFile11getLoadNameEv, 
                       __ZNK4llvm6object15MachOObjectFile12end_sectionsEv, 
                       __ZNK4llvm6object15MachOObjectFile12getSection64ENS0_11DataRefImplERNS_14InMemoryStructINS0_5macho9Section64EEE, 
                       __ZNK4llvm6object15MachOObjectFile12isSectionBSSENS0_11DataRefImplERb, 
                       __ZNK4llvm6object15MachOObjectFile13begin_symbolsEv, 
                       __ZNK4llvm6object15MachOObjectFile13getRelocationENS0_11DataRefImplERNS_14InMemoryStructINS0_5macho15RelocationEntryEEE, 
                       __ZNK4llvm6object15MachOObjectFile13getSymbolNameENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object15MachOObjectFile13getSymbolNextENS0_11DataRefImplERNS0_9SymbolRefE, 
                       __ZNK4llvm6object15MachOObjectFile13getSymbolSizeENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile13getSymbolTypeENS0_11DataRefImplERNS0_9SymbolRef4TypeE, 
                       __ZNK4llvm6object15MachOObjectFile13isSectionDataENS0_11DataRefImplERb, 
                       __ZNK4llvm6object15MachOObjectFile13isSectionTextENS0_11DataRefImplERb, 
                       __ZNK4llvm6object15MachOObjectFile14begin_sectionsEv, 
                       __ZNK4llvm6object15MachOObjectFile14getLibraryNextENS0_11DataRefImplERNS0_10LibraryRefE, 
                       __ZNK4llvm6object15MachOObjectFile14getLibraryPathENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object15MachOObjectFile14getSectionNameENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object15MachOObjectFile14getSectionNextENS0_11DataRefImplERNS0_10SectionRefE, 
                       __ZNK4llvm6object15MachOObjectFile14getSectionSizeENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile14getSymbolFlagsENS0_11DataRefImplERj, 
                       __ZNK4llvm6object15MachOObjectFile15getSectionIndexENS0_11DataRefImplE, 
                       __ZNK4llvm6object15MachOObjectFile16getSectionRelEndENS0_11DataRefImplE, 
                       __ZNK4llvm6object15MachOObjectFile16getSymbolAddressENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile16getSymbolSectionENS0_11DataRefImplERNS0_16content_iteratorINS0_10SectionRefEEE, 
                       __ZNK4llvm6object15MachOObjectFile16isSectionVirtualENS0_11DataRefImplERb, 
                       __ZNK4llvm6object15MachOObjectFile16moveToNextSymbolERNS0_11DataRefImplE, 
                       __ZNK4llvm6object15MachOObjectFile17getBytesInAddressEv, 
                       __ZNK4llvm6object15MachOObjectFile17getFileFormatNameEv, 
                       __ZNK4llvm6object15MachOObjectFile17getRelocationNextENS0_11DataRefImplERNS0_13RelocationRefE, 
                       __ZNK4llvm6object15MachOObjectFile17getRelocationTypeENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile17getSectionAddressENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile17isSectionZeroInitENS0_11DataRefImplERb, 
                       __ZNK4llvm6object15MachOObjectFile17moveToNextSectionERNS0_11DataRefImplE, 
                       __ZNK4llvm6object15MachOObjectFile18getSectionContentsENS0_11DataRefImplERNS_9StringRefE, 
                       __ZNK4llvm6object15MachOObjectFile18getSectionRelBeginENS0_11DataRefImplE, 
                       __ZNK4llvm6object15MachOObjectFile19end_dynamic_symbolsEv, 
                       __ZNK4llvm6object15MachOObjectFile19getRelocationHiddenENS0_11DataRefImplERb, 
                       __ZNK4llvm6object15MachOObjectFile19getRelocationOffsetENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile19getRelocationSymbolENS0_11DataRefImplERNS0_9SymbolRefE, 
                       __ZNK4llvm6object15MachOObjectFile19getSectionAlignmentENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile19getSymbolFileOffsetENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile19getSymbolNMTypeCharENS0_11DataRefImplERc, 
                       __ZNK4llvm6object15MachOObjectFile19getSymbolTableEntryENS0_11DataRefImplERNS_14InMemoryStructINS0_5macho16SymbolTableEntryEEE, 
                       __ZNK4llvm6object15MachOObjectFile20end_libraries_neededEv, 
                       __ZNK4llvm6object15MachOObjectFile20getRelocationAddressENS0_11DataRefImplERy, 
                       __ZNK4llvm6object15MachOObjectFile21begin_dynamic_symbolsEv, 
                       __ZNK4llvm6object15MachOObjectFile21getRelocationTypeNameENS0_11DataRefImplERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm6object15MachOObjectFile21getSymbol64TableEntryENS0_11DataRefImplERNS_14InMemoryStructINS0_5macho18Symbol64TableEntryEEE, 
                       __ZNK4llvm6object15MachOObjectFile21sectionContainsSymbolENS0_11DataRefImplES2_Rb, 
                       __ZNK4llvm6object15MachOObjectFile22begin_libraries_neededEv, 
                       __ZNK4llvm6object15MachOObjectFile24getRelocationValueStringENS0_11DataRefImplERNS_15SmallVectorImplIcEE, 
                       __ZNK4llvm6object15MachOObjectFile25printRelocationTargetNameERNS_14InMemoryStructINS0_5macho15RelocationEntryEEERNS_18raw_string_ostreamE, 
                       __ZNK4llvm6object15MachOObjectFile27getRelocationAdditionalInfoENS0_11DataRefImplERx, 
                       __ZNK4llvm6object15MachOObjectFile29isSectionRequiredForExecutionENS0_11DataRefImplERb, 
                       __ZNK4llvm6object15MachOObjectFile7getArchEv, __ZNK4llvm6object6Binary11getFileNameEv, 
                       __ZNK4llvm6object6Binary7getDataEv, __ZNK4llvm6object7Archive11end_symbolsEv, 
                       __ZNK4llvm6object7Archive12end_childrenEv, __ZNK4llvm6object7Archive13begin_symbolsEv, 
                       __ZNK4llvm6object7Archive14begin_childrenEb, __ZNK4llvm6object7Archive5Child11getAsBinaryERNS_9OwningPtrINS0_6BinaryEEE, 
                       __ZNK4llvm6object7Archive5Child7getNameERNS_9StringRefE, 
                       __ZNK4llvm6object7Archive5Child7getNextEv, __ZNK4llvm6object7Archive5Child7getSizeEv, 
                       __ZNK4llvm6object7Archive5Child9getBufferEv, __ZNK4llvm6object7Archive6Symbol7getNameERNS_9StringRefE, 
                       __ZNK4llvm6object7Archive6Symbol7getNextEv, __ZNK4llvm6object7Archive6Symbol9getMemberERNS1_14child_iteratorE, 
                       __ZNK4llvm7APFloat14bitcastToAPIntEv, __ZNK4llvm7APFloat14bitwiseIsEqualERKS0_, 
                       __ZNK4llvm7APFloat14convertToFloatEv, __ZNK4llvm7APFloat14significandLSBEv, 
                       __ZNK4llvm7APFloat14significandMSBEv, __ZNK4llvm7APFloat15convertToDoubleEv, 
                       __ZNK4llvm7APFloat15getExactInverseEPS0_, __ZNK4llvm7APFloat16convertToIntegerEPyjbNS0_12roundingModeEPb, 
                       __ZNK4llvm7APFloat16convertToIntegerERNS_6APSIntENS0_12roundingModeEPb, 
                       __ZNK4llvm7APFloat16significandPartsEv, __ZNK4llvm7APFloat17roundAwayFromZeroENS0_12roundingModeENS_12lostFractionEj, 
                       __ZNK4llvm7APFloat18convertToHexStringEPcjbNS0_12roundingModeE, 
                       __ZNK4llvm7APFloat20compareAbsoluteValueERKS0_, 
                       __ZNK4llvm7APFloat24convertNormalToHexStringEPcjbNS0_12roundingModeE, 
                       __ZNK4llvm7APFloat25convertHalfAPFloatToAPIntEv, 
                       __ZNK4llvm7APFloat26convertFloatAPFloatToAPIntEv, 
                       __ZNK4llvm7APFloat27convertDoubleAPFloatToAPIntEv, 
                       __ZNK4llvm7APFloat28convertToSignExtendedIntegerEPyjbNS0_12roundingModeEPb, 
                       __ZNK4llvm7APFloat30convertQuadrupleAPFloatToAPIntEv, 
                       __ZNK4llvm7APFloat34convertF80LongDoubleAPFloatToAPIntEv, 
                       __ZNK4llvm7APFloat36convertPPCDoubleDoubleAPFloatToAPIntEv, 
                       __ZNK4llvm7APFloat7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm7APFloat7compareERKS0_, __ZNK4llvm7APFloat8toStringERNS_15SmallVectorImplIcEEjj, 
                       __ZNK4llvm7APFloat9partCountEv, __ZNK4llvm7Archive10fillHeaderERKNS_13ArchiveMemberERNS_19ArchiveMemberHeaderEib, 
                       __ZNK4llvm7CmpInst10isEqualityEv, __ZNK4llvm7CmpInst13isCommutativeEv, 
                       __ZNK4llvm7DIArray14getNumElementsEv, __ZNK4llvm7DIScope11getFilenameEv, 
                       __ZNK4llvm7DIScope12getDirectoryEv, __ZNK4llvm7DIScope13printInternalERNS_11raw_ostreamE, 
                       __ZNK4llvm7IVUsers16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm7IVUsers18getReplacementExprERKNS_11IVStrideUseE, 
                       __ZNK4llvm7IVUsers5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm7IVUsers7getExprERKNS_11IVStrideUseE, 
                       __ZNK4llvm7IVUsers9getStrideERKNS_11IVStrideUseEPKNS_4LoopE, 
                       __ZNK4llvm7Inliner16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm7Inliner18getInlineThresholdENS_8CallSiteE, 
                       __ZNK4llvm7LLLexer11getFilenameEv, __ZNK4llvm7LLLexer5ErrorENS_5SMLocERKNS_5TwineE, 
                       __ZNK4llvm7MCLabel5printERNS_11raw_ostreamE, __ZNK4llvm7MCValue5printERNS_11raw_ostreamEPKNS_9MCAsmInfoE, 
                       __ZNK4llvm7PHINode10clone_implEv, __ZNK4llvm7PHINode16allocHungoffUsesEj, 
                       __ZNK4llvm7PHINode16hasConstantValueEv, __ZNK4llvm7PMStack4dumpEv, 
                       __ZNK4llvm7SDValue11isOperandOfEPNS_6SDNodeE, __ZNK4llvm7SDValue30reachesChainWithoutSideEffectsES0_j, 
                       __ZNK4llvm8AliasSet14aliasesPointerEPKNS_5ValueEyPKNS_6MDNodeERNS_13AliasAnalysisE, 
                       __ZNK4llvm8AliasSet18aliasesUnknownInstEPNS_11InstructionERNS_13AliasAnalysisE, 
                       __ZNK4llvm8AliasSet5printERNS_11raw_ostreamE, __ZNK4llvm8Argument11hasNestAttrEv, 
                       __ZNK4llvm8Argument12hasByValAttrEv, __ZNK4llvm8Argument14hasNoAliasAttrEv, 
                       __ZNK4llvm8Argument16hasNoCaptureAttrEv, __ZNK4llvm8Argument16hasStructRetAttrEv, 
                       __ZNK4llvm8Argument17getParamAlignmentEv, __ZNK4llvm8Argument8getArgNoEv, 
                       __ZNK4llvm8AsmToken6getLocEv, __ZNK4llvm8AsmToken9getEndLocEv, 
                       __ZNK4llvm8CallInst10clone_implEv, __ZNK4llvm8CallInst12paramHasAttrEjNS_10AttributesE, 
                       __ZNK4llvm8CallSite9getCalleeEv, __ZNK4llvm8CastInst10isNoopCastEPNS_4TypeE, 
                       __ZNK4llvm8CastInst13isIntegerCastEv, __ZNK4llvm8CastInst14isLosslessCastEv, 
                       __ZNK4llvm8Constant11isNullValueEv, __ZNK4llvm8Constant14isAllOnesValueEv, 
                       __ZNK4llvm8Constant14isConstantUsedEv, __ZNK4llvm8Constant17getRelocationInfoEv, 
                       __ZNK4llvm8Constant19getAggregateElementEPS0_, __ZNK4llvm8Constant19getAggregateElementEj, 
                       __ZNK4llvm8Constant19isNegativeZeroValueEv, __ZNK4llvm8Constant23removeDeadConstantUsersEv, 
                       __ZNK4llvm8Constant7canTrapEv, __ZNK4llvm8DIEBlock6SizeOfEPNS_10AsmPrinterEj, 
                       __ZNK4llvm8DIEBlock9EmitValueEPNS_10AsmPrinterEj, 
                       __ZNK4llvm8DIEDelta6SizeOfEPNS_10AsmPrinterEj, __ZNK4llvm8DIEDelta9EmitValueEPNS_10AsmPrinterEj, 
                       __ZNK4llvm8DIEEntry9EmitValueEPNS_10AsmPrinterEj, 
                       __ZNK4llvm8DIELabel6SizeOfEPNS_10AsmPrinterEj, __ZNK4llvm8DIELabel9EmitValueEPNS_10AsmPrinterEj, 
                       __ZNK4llvm8DebugLoc11getAsMDNodeERKNS_11LLVMContextE, 
                       __ZNK4llvm8DebugLoc12getInlinedAtERKNS_11LLVMContextE, 
                       __ZNK4llvm8DebugLoc20getScopeAndInlinedAtERPNS_6MDNodeES3_RKNS_11LLVMContextE, 
                       __ZNK4llvm8DebugLoc4dumpERKNS_11LLVMContextE, __ZNK4llvm8DebugLoc8getScopeERKNS_11LLVMContextE, 
                       __ZNK4llvm8FCmpInst10clone_implEv, __ZNK4llvm8FastISel14hasTrivialKillEPKNS_5ValueE, 
                       __ZNK4llvm8Function10getContextEv, __ZNK4llvm8Function11viewCFGOnlyEv, 
                       __ZNK4llvm8Function13getReturnTypeEv, __ZNK4llvm8Function14getIntrinsicIDEv, 
                       __ZNK4llvm8Function15getFunctionTypeEv, __ZNK4llvm8Function15hasAddressTakenEPPKNS_4UserE, 
                       __ZNK4llvm8Function18BuildLazyArgumentsEv, __ZNK4llvm8Function18isDefTriviallyDeadEv, 
                       __ZNK4llvm8Function29callsFunctionThatReturnsTwiceEv, 
                       __ZNK4llvm8Function5getGCEv, __ZNK4llvm8Function5hasGCEv, 
                       __ZNK4llvm8Function7viewCFGEv, __ZNK4llvm8Function8arg_sizeEv, 
                       __ZNK4llvm8Function8isVarArgEv, __ZNK4llvm8Function9arg_emptyEv, 
                       __ZNK4llvm8ICmpInst10clone_implEv, __ZNK4llvm8Interval5printERNS_11raw_ostreamE, 
                       __ZNK4llvm8Interval6isLoopEv, __ZNK4llvm8LoadInst10clone_implEv, 
                       __ZNK4llvm8LoopInfo14verifyAnalysisEv, __ZNK4llvm8LoopInfo16getAnalysisUsageERNS_13AnalysisUsageE, 
                       __ZNK4llvm8LoopInfo5printERNS_11raw_ostreamEPKNS_6ModuleE, 
                       __ZNK4llvm8LoopPass17createPrinterPassERNS_11raw_ostreamERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE, 
                       __ZNK4llvm8MCSymbol13AliasedSymbolEv, __ZNK4llvm8MCSymbol5printERNS_11raw_ostreamE, 
                       __ZNK4llvm8PassInfo10createPassEv, __ZNK4llvm8PrintReg5printERNS_11raw_ostreamE, 
                       __ZNK4llvm8SExtInst10clone_implEv, __ZNK4llvm8ZExtInst10clone_implEv, 
                       __ZNK4llvm9CallGraph5printERNS_11raw_ostreamEPNS_6ModuleE, 
                       __ZNK4llvm9DIEAbbrev4EmitEPNS_10AsmPrinterE, __ZNK4llvm9DIEAbbrev7ProfileERNS_16FoldingSetNodeIDE, 
                       __ZNK4llvm9FPExtInst10clone_implEv, __ZNK4llvm9FenceInst10clone_implEv, 
                       __ZNK4llvm9InlineAsm15getFunctionTypeEv, __ZNK4llvm9LiveRange5printERNS_11raw_ostreamE, 
                       __ZNK4llvm9MCAsmInfo19getExprForFDESymbolEPKNS_8MCSymbolEjRNS_10MCStreamerE, 
                       __ZNK4llvm9MCAsmInfo27getExprForPersonalitySymbolEPKNS_8MCSymbolEjRNS_10MCStreamerE, 
                       __ZNK4llvm9MCContext12LookupSymbolENS_9StringRefE, 
                       __ZNK4llvm9MCContext12LookupSymbolERKNS_5TwineE, 
                       __ZNK4llvm9MCOperand5printERNS_11raw_ostreamEPKNS_9MCAsmInfoE, 
                       __ZNK4llvm9SlotIndex5printERNS_11raw_ostreamE, __ZNK4llvm9SourceMgr10GetMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEE, 
                       __ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEEb, 
                       __ZNK4llvm9SourceMgr16getLineAndColumnENS_5SMLocEi, 
                       __ZNK4llvm9SourceMgr17PrintIncludeStackENS_5SMLocERNS_11raw_ostreamE, 
                       __ZNK4llvm9SourceMgr23FindBufferContainingLocENS_5SMLocE, 
                       __ZNK4llvm9StoreInst10clone_implEv, __ZNK4llvm9StringRef12find_last_ofES0_m, 
                       __ZNK4llvm9StringRef12getAsIntegerEjRNS_5APIntE, 
                       __ZNK4llvm9StringRef13compare_lowerES0_, __ZNK4llvm9StringRef13find_first_ofES0_m, 
                       __ZNK4llvm9StringRef15compare_numericES0_, __ZNK4llvm9StringRef16find_last_not_ofES0_m, 
                       __ZNK4llvm9StringRef16find_last_not_ofEcm, __ZNK4llvm9StringRef17find_first_not_ofES0_m, 
                       __ZNK4llvm9StringRef17find_first_not_ofEcm, __ZNK4llvm9StringRef4findES0_m, 
                       __ZNK4llvm9StringRef5countES0_, __ZNK4llvm9StringRef5lowerEv, 
                       __ZNK4llvm9StringRef5rfindES0_, __ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EES0_ib, 
                       __ZNK4llvm9StringRef5upperEv, __ZNK4llvm9TruncInst10clone_implEv, 
                       __ZNK4llvm9VAArgInst10clone_implEv, __ZTIN4llvm10AllocaInstE, 
                       __ZTIN4llvm10AsmPrinterE, __ZTIN4llvm10BasicBlockE, 
                       __ZTIN4llvm10BranchInstE, __ZTIN4llvm10CallbackVHE, 
                       __ZTIN4llvm10ConstantFPE, __ZTIN4llvm10DIEIntegerE, 
                       __ZTIN4llvm10DebugRecVHE, __ZTIN4llvm10FPToSIInstE, 
                       __ZTIN4llvm10FPToUIInstE, __ZTIN4llvm10GCStrategyE, 
                       __ZTIN4llvm10InvokeInstE, __ZTIN4llvm10LiveStacksE, 
                       __ZTIN4llvm10MCAsmLexerE, __ZTIN4llvm10MCFragmentE, 
                       __ZTIN4llvm10MCStreamerE, __ZTIN4llvm10ModulePassE, 
                       __ZTIN4llvm10RegionInfoE, __ZTIN4llvm10RegionPassE, 
                       __ZTIN4llvm10ResumeInstE, __ZTIN4llvm10ReturnInstE, 
                       __ZTIN4llvm10SIToFPInstE, __ZTIN4llvm10SelectInstE, 
                       __ZTIN4llvm10SwitchInstE, __ZTIN4llvm10TargetDataE, 
                       __ZTIN4llvm10UIToFPInstE, __ZTIN4llvm10UndefValueE, 
                       __ZTIN4llvm10VirtRegMapE, __ZTIN4llvm10X86JITInfoE, 
                       __ZTIN4llvm11BitCastInstE, __ZTIN4llvm11ConstantIntE, 
                       __ZTIN4llvm11EdgeBundlesE, __ZTIN4llvm11FPTruncInstE, 
                       __ZTIN4llvm11GlobalAliasE, __ZTIN4llvm11GlobalValueE, 
                       __ZTIN4llvm11IVStrideUseE, __ZTIN4llvm11InstructionE, 
                       __ZTIN4llvm11LibCallInfoE, __ZTIN4llvm11MCAsmParserE, 
                       __ZTIN4llvm11PBQPBuilderE, __ZTIN4llvm11PassManagerE, 
                       __ZTIN4llvm11SCEVUnknownE, __ZTIN4llvm11ScheduleDAGE, 
                       __ZTIN4llvm11SlotIndexesE, __ZTIN4llvm11_do_messageE, 
                       __ZTIN4llvm11raw_ostreamE, __ZTIN4llvm12ARMExceptionE, 
                       __ZTIN4llvm12BallLarusDagE, __ZTIN4llvm12BlockAddressE, 
                       __ZTIN4llvm12ConstantExprE, __ZTIN4llvm12DataStreamerE, 
                       __ZTIN4llvm12FunctionPassE, __ZTIN4llvm12GCModuleInfoE, 
                       __ZTIN4llvm12IntToPtrInstE, __ZTIN4llvm12LexicalScopeE, 
                       __ZTIN4llvm12MCAsmBackendE, __ZTIN4llvm12MCSectionELFE, 
                       __ZTIN4llvm12MCTargetExprE, __ZTIN4llvm12MemoryBufferE, 
                       __ZTIN4llvm12MemoryObjectE, __ZTIN4llvm12PtrToIntInstE, 
                       __ZTIN4llvm12SelectionDAG17DAGUpdateListenerE, __ZTIN4llvm12X86InstrInfoE, 
                       __ZTIN4llvm12X86SubtargetE, __ZTIN4llvm13AliasAnalysisE, 
                       __ZTIN4llvm13AtomicRMWInstE, __ZTIN4llvm13BitcodeReaderE, 
                       __ZTIN4llvm13ConstantArrayE, __ZTIN4llvm13DominatorTreeE, 
                       __ZTIN4llvm13FPPassManagerE, __ZTIN4llvm13FindUsedTypesE, 
                       __ZTIN4llvm13ImmutablePassE, __ZTIN4llvm13LPPassManagerE, 
                       __ZTIN4llvm13LazyValueInfoE, __ZTIN4llvm13LexicalScopesE, 
                       __ZTIN4llvm13LiveIntervalsE, __ZTIN4llvm13LiveRangeEdit8DelegateE, 
                       __ZTIN4llvm13LiveRegMatrixE, __ZTIN4llvm13LiveVariablesE, 
                       __ZTIN4llvm13MCAsmInfoCOFFE, __ZTIN4llvm13MCCodeEmitterE, 
                       __ZTIN4llvm13MCInstPrinterE, __ZTIN4llvm13MCLEBFragmentE, 
                       __ZTIN4llvm13MCOrgFragmentE, __ZTIN4llvm13MCSectionCOFFE, 
                       __ZTIN4llvm13MDNodeOperandE, __ZTIN4llvm13MPPassManagerE, 
                       __ZTIN4llvm13PMDataManagerE, __ZTIN4llvm13RGPassManagerE, 
                       __ZTIN4llvm13ScheduleDAGMIE, __ZTIN4llvm13SlabAllocatorE, 
                       __ZTIN4llvm13TargetJITInfoE, __ZTIN4llvm13TargetMachineE, 
                       __ZTIN4llvm14AntiDepBreakerE, __ZTIN4llvm14BasicBlockPassE, 
                       __ZTIN4llvm14BinaryOperatorE, __ZTIN4llvm14CaptureTrackerE, 
                       __ZTIN4llvm14ConstantStructE, __ZTIN4llvm14ConstantVectorE, 
                       __ZTIN4llvm14DeltaAlgorithmE, __ZTIN4llvm14DwarfExceptionE, 
                       __ZTIN4llvm14FoldingSetImplE, __ZTIN4llvm14GVMaterializerE, 
                       __ZTIN4llvm14GlobalVariableE, __ZTIN4llvm14IndirectBrInstE, 
                       __ZTIN4llvm14JITCodeEmitterE, __ZTIN4llvm14LandingPadInstE, 
                       __ZTIN4llvm14MCDataFragmentE, __ZTIN4llvm14MCDisassemblerE, 
                       __ZTIN4llvm14MCFillFragmentE, __ZTIN4llvm14MCInstFragmentE, 
                       __ZTIN4llvm14MCObjectWriterE, __ZTIN4llvm14MCSectionMachOE, 
                       __ZTIN4llvm14PassNameParserE, __ZTIN4llvm14RuntimeDyldELFE, 
                       __ZTIN4llvm14SpillPlacementE, __ZTIN4llvm14TargetLoweringE, 
                       __ZTIN4llvm14TerminatorInstE, __ZTIN4llvm14Win64ExceptionE, 
                       __ZTIN4llvm14error_categoryE, __ZTIN4llvm14raw_fd_ostreamE, 
                       __ZTIN4llvm14raw_os_ostreamE, __ZTIN4llvm15AliasSetTracker13ASTCallbackVHE, 
                       __ZTIN4llvm15ExecutionEngineE, __ZTIN4llvm15InsertValueInstE, 
                       __ZTIN4llvm15MCAlignFragmentE, __ZTIN4llvm15MCAsmInfoDarwinE, 
                       __ZTIN4llvm15MCInstrAnalysisE, __ZTIN4llvm15MachineLoopInfoE, 
                       __ZTIN4llvm15PassManagerBaseE, __ZTIN4llvm15PassManagerImplE, 
                       __ZTIN4llvm15RuntimeDyldImplE, __ZTIN4llvm15ScalarEvolution14SCEVCallbackVHE, 
                       __ZTIN4llvm15ScalarEvolutionE, __ZTIN4llvm15TargetInstrInfoE, 
                       __ZTIN4llvm15UnreachableInstE, __ZTIN4llvm15X86Disassembler22X86GenericDisassemblerE, 
                       __ZTIN4llvm15X86ELFMCAsmInfoE, __ZTIN4llvm15X86RegisterInfoE, 
                       __ZTIN4llvm16CallGraphSCCPassE, __ZTIN4llvm16ExtractValueInstE, 
                       __ZTIN4llvm16JITEventListenerE, __ZTIN4llvm16JITMemoryManagerE, 
                       __ZTIN4llvm16MCAsmInfoGNUCOFFE, __ZTIN4llvm16MCObjectStreamerE, 
                       __ZTIN4llvm16MCTargetAsmLexerE, __ZTIN4llvm16MachObjectWriterE, 
                       __ZTIN4llvm16RuntimeDyldMachOE, __ZTIN4llvm16SelectionDAGISelE, 
                       __ZTIN4llvm16TargetPassConfigE, __ZTIN4llvm16UnaryInstructionE, 
                       __ZTIN4llvm16X86ELFWriterInfoE, __ZTIN4llvm16X86FrameLoweringE, 
                       __ZTIN4llvm16X86TargetMachineE, __ZTIN4llvm16raw_null_ostreamE, 
                       __ZTIN4llvm17AtomicCmpXchgInstE, __ZTIN4llvm17ConstantDataArrayE, 
                       __ZTIN4llvm17DAGDeltaAlgorithmE, __ZTIN4llvm17DominanceFrontierE, 
                       __ZTIN4llvm17DwarfCFIExceptionE, __ZTIN4llvm17GCMetadataPrinterE, 
                       __ZTIN4llvm17GetElementPtrInstE, __ZTIN4llvm17InsertElementInstE, 
                       __ZTIN4llvm17IntervalPartitionE, __ZTIN4llvm17LLVMTargetMachineE, 
                       __ZTIN4llvm17MCTargetAsmParserE, __ZTIN4llvm17MachineLoopRangesE, 
                       __ZTIN4llvm17MachineModuleInfoE, __ZTIN4llvm17PMTopLevelManagerE, 
                       __ZTIN4llvm17PostDominatorTreeE, __ZTIN4llvm17PseudoSourceValueE, 
                       __ZTIN4llvm17ScheduleDAGInstrsE, __ZTIN4llvm17ShuffleVectorInstE, 
                       __ZTIN4llvm17TargetLibraryInfoE, __ZTIN4llvm17UnaryConstantExprE, 
                       __ZTIN4llvm17X86ATTInstPrinterE, __ZTIN4llvm17X86TargetLoweringE, 
                       __ZTIN4llvm18BinaryConstantExprE, __ZTIN4llvm18BlockFrequencyInfoE, 
                       __ZTIN4llvm18ConstantDataVectorE, __ZTIN4llvm18ExtractElementInstE, 
                       __ZTIN4llvm18LiveDebugVariablesE, __ZTIN4llvm18MCAsmInfoMicrosoftE, 
                       __ZTIN4llvm18MCParsedAsmOperandE, __ZTIN4llvm18MachineCodeEmitterE, 
                       __ZTIN4llvm18RefCountedBaseVPTRE, __ZTIN4llvm18ScheduleDAGSDNodesE, 
                       __ZTIN4llvm18SelectConstantExprE, __ZTIN4llvm18TargetRegisterInfoE, 
                       __ZTIN4llvm18VLIWPacketizerListE, __ZTIN4llvm18X86GenRegisterInfoE, 
                       __ZTIN4llvm18X86MCAsmInfoDarwinE, __ZTIN4llvm18format_object_baseE, 
                       __ZTIN4llvm18raw_string_ostreamE, __ZTIN4llvm19CompareConstantExprE, 
                       __ZTIN4llvm19ConstantPointerNullE, __ZTIN4llvm19FunctionPassManagerE, 
                       __ZTIN4llvm19MachineFunctionInfoE, __ZTIN4llvm19MachineFunctionPassE, 
                       __ZTIN4llvm19MachineSchedContextE, __ZTIN4llvm19MachineTraceMetrics8EnsembleE, 
                       __ZTIN4llvm19MachineTraceMetricsE, __ZTIN4llvm19MallocSlabAllocatorE, 
                       __ZTIN4llvm19RTDyldMemoryManagerE, __ZTIN4llvm19TargetELFWriterInfoE, 
                       __ZTIN4llvm19TargetFrameLoweringE, __ZTIN4llvm19TargetInstrInfoImplE, 
                       __ZTIN4llvm19TargetIntrinsicInfoE, __ZTIN4llvm19TargetSubtargetInfoE, 
                       __ZTIN4llvm19X86GenSubtargetInfoE, __ZTIN4llvm19X86IntelInstPrinterE, 
                       __ZTIN4llvm19X86MCAsmInfoGNUCOFFE, __ZTIN4llvm19X86SelectionDAGInfoE, 
                       __ZTIN4llvm19X86_32TargetMachineE, __ZTIN4llvm19X86_64TargetMachineE, 
                       __ZTIN4llvm19raw_svector_ostreamE, __ZTIN4llvm20DefaultVLIWSchedulerE, 
                       __ZTIN4llvm20LatencyPriorityQueueE, __ZTIN4llvm20LibCallAliasAnalysisE, 
                       __ZTIN4llvm20LoadAndStorePromoterE, __ZTIN4llvm20MCAsmParserExtensionE, 
                       __ZTIN4llvm20MachineDominatorTreeE, __ZTIN4llvm20MachineModuleInfoELFE, 
                       __ZTIN4llvm20ValueMapTypeRemapperE, __ZTIN4llvm20circular_raw_ostreamE, 
                       __ZTIN4llvm21BranchProbabilityInfoE, __ZTIN4llvm21CalculateSpillWeightsE, 
                       __ZTIN4llvm21ConstantAggregateZeroE, __ZTIN4llvm21DominanceFrontierBaseE, 
                       __ZTIN4llvm21MachineModuleInfoImplE, __ZTIN4llvm21PrettyStackTraceEntryE, 
                       __ZTIN4llvm21ResourcePriorityQueueE, __ZTIN4llvm21StreamingMemoryObjectE, 
                       __ZTIN4llvm21X86MCAsmInfoMicrosoftE, __ZTIN4llvm21X86_64MCAsmInfoDarwinE, 
                       __ZTIN4llvm21formatted_raw_ostreamE, __ZTIN4llvm22ConstantDataSequentialE, 
                       __ZTIN4llvm22CriticalAntiDepBreakerE, __ZTIN4llvm22LoopDependenceAnalysisE, 
                       __ZTIN4llvm22MachineModuleInfoMachOE, __ZTIN4llvm22PrettyStackTraceStringE, 
                       __ZTIN4llvm22StreamableMemoryObjectE, __ZTIN4llvm22TargetSelectionDAGInfoE, 
                       __ZTIN4llvm22UnifyFunctionExitNodesE, __ZTIN4llvm22X86MachineFunctionInfoE, 
                       __ZTIN4llvm22_system_error_categoryE, __ZTIN4llvm23AbstractLatticeFunctionE, 
                       __ZTIN4llvm23FunctionPassManagerImplE, __ZTIN4llvm23InsertValueConstantExprE, 
                       __ZTIN4llvm23MCAsmParserSemaCallbackE, __ZTIN4llvm23MCDwarfLineAddrFragmentE, 
                       __ZTIN4llvm23MCELFObjectTargetWriterE, __ZTIN4llvm23MachineFunctionAnalysisE, 
                       __ZTIN4llvm23PrettyStackTraceProgramE, __ZTIN4llvm23SchedulingPriorityQueueE, 
                       __ZTIN4llvm23_generic_error_categoryE, __ZTIN4llvm24AggressiveAntiDepBreakerE, 
                       __ZTIN4llvm24AssemblyAnnotationWriterE, __ZTIN4llvm24ExtractValueConstantExprE, 
                       __ZTIN4llvm24MCDwarfCallFrameFragmentE, __ZTIN4llvm24MCMachObjectTargetWriterE, 
                       __ZTIN4llvm24MachineConstantPoolValueE, __ZTIN4llvm24MachinePostDominatorTreeE, 
                       __ZTIN4llvm24MemoryDependenceAnalysisE, __ZTIN4llvm24PassRegistrationListenerE, 
                       __ZTIN4llvm24ScheduleHazardRecognizerE, __ZTIN4llvm24TargetLoweringObjectFileE, 
                       __ZTIN4llvm24X86COFFMachineModuleInfoE, __ZTIN4llvm24X86LinuxTargetObjectFileE, 
                       __ZTIN4llvm25GetElementPtrConstantExprE, __ZTIN4llvm25InsertElementConstantExprE, 
                       __ZTIN4llvm25MachineBlockFrequencyInfoE, __ZTIN4llvm25PBQPBuilderWithCoalescingE, 
                       __ZTIN4llvm25ShuffleVectorConstantExprE, __ZTIN4llvm25SimplifyFortifiedLibCallsE, 
                       __ZTIN4llvm26ExtractElementConstantExprE, __ZTIN4llvm26MMIAddrLabelMapCallbackPtrE, 
                       __ZTIN4llvm26ScoreboardHazardRecognizerE, __ZTIN4llvm27CrashRecoveryContextCleanupE, 
                       __ZTIN4llvm27FixedStackPseudoSourceValueE, __ZTIN4llvm27MachinePassRegistryListenerE, 
                       __ZTIN4llvm27PassManagerPrettyStackEntryE, __ZTIN4llvm27TargetLoweringObjectFileELFE, 
                       __ZTIN4llvm27X86_64MachoTargetObjectFileE, __ZTIN4llvm28MachineBranchProbabilityInfoE, 
                       __ZTIN4llvm28TargetLoweringObjectFileCOFFE, __ZTIN4llvm29TargetLoweringObjectFileMachOE, 
                       __ZTIN4llvm2cl11OptionValueINS0_13boolOrDefaultEEE, 
                       __ZTIN4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                       __ZTIN4llvm2cl17basic_parser_implE, __ZTIN4llvm2cl18GenericOptionValueE, 
                       __ZTIN4llvm2cl19generic_parser_baseE, __ZTIN4llvm2cl5aliasE, 
                       __ZTIN4llvm2cl6OptionE, __ZTIN4llvm2cl6parserINS0_13boolOrDefaultEEE, 
                       __ZTIN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                       __ZTIN4llvm2cl6parserIbEE, __ZTIN4llvm2cl6parserIcEE, 
                       __ZTIN4llvm2cl6parserIdEE, __ZTIN4llvm2cl6parserIfEE, 
                       __ZTIN4llvm2cl6parserIiEE, __ZTIN4llvm2cl6parserIjEE, 
                       __ZTIN4llvm2cl6parserIyEE, __ZTIN4llvm3DIEE, __ZTIN4llvm3JITE, 
                       __ZTIN4llvm3PEIE, __ZTIN4llvm3sys15ThreadLocalImplE, 
                       __ZTIN4llvm4PassE, __ZTIN4llvm4UserE, __ZTIN4llvm5ValueE, 
                       __ZTIN4llvm6MDNodeE, __ZTIN4llvm6object10ObjectFileE, 
                       __ZTIN4llvm6object14COFFObjectFileE, __ZTIN4llvm6object15MachOObjectFileE, 
                       __ZTIN4llvm6object6BinaryE, __ZTIN4llvm6object7ArchiveE, 
                       __ZTIN4llvm7CmpInstE, __ZTIN4llvm7IVUsersE, __ZTIN4llvm7InlinerE, 
                       __ZTIN4llvm7PHINodeE, __ZTIN4llvm7SpillerE, __ZTIN4llvm8ArgumentE, 
                       __ZTIN4llvm8AsmLexerE, __ZTIN4llvm8CallInstE, __ZTIN4llvm8CastInstE, 
                       __ZTIN4llvm8ConstantE, __ZTIN4llvm8DIEBlockE, __ZTIN4llvm8DIEDeltaE, 
                       __ZTIN4llvm8DIEEntryE, __ZTIN4llvm8DIELabelE, __ZTIN4llvm8DIEValueE, 
                       __ZTIN4llvm8FCmpInstE, __ZTIN4llvm8FastISelE, __ZTIN4llvm8FunctionE, 
                       __ZTIN4llvm8ICmpInstE, __ZTIN4llvm8LoadInstE, __ZTIN4llvm8LoopInfoE, 
                       __ZTIN4llvm8LoopPassE, __ZTIN4llvm8MDStringE, __ZTIN4llvm8SExtInstE, 
                       __ZTIN4llvm8ZExtInstE, __ZTIN4llvm9CallGraphE, __ZTIN4llvm9FPExtInstE, 
                       __ZTIN4llvm9FenceInstE, __ZTIN4llvm9IVVisitorE, 
                       __ZTIN4llvm9InlineAsmE, __ZTIN4llvm9MCAsmInfoE, 
                       __ZTIN4llvm9MCSectionE, __ZTIN4llvm9StoreInstE, 
                       __ZTIN4llvm9TruncInstE, __ZTIN4llvm9VAArgInstE, 
                       __ZTSN4llvm10AllocaInstE, __ZTSN4llvm10AsmPrinterE, 
                       __ZTSN4llvm10BasicBlockE, __ZTSN4llvm10BranchInstE, 
                       __ZTSN4llvm10CallbackVHE, __ZTSN4llvm10ConstantFPE, 
                       __ZTSN4llvm10DIEIntegerE, __ZTSN4llvm10DebugRecVHE, 
                       __ZTSN4llvm10FPToSIInstE, __ZTSN4llvm10FPToUIInstE, 
                       __ZTSN4llvm10GCStrategyE, __ZTSN4llvm10InvokeInstE, 
                       __ZTSN4llvm10LiveStacksE, __ZTSN4llvm10MCAsmLexerE, 
                       __ZTSN4llvm10MCFragmentE, __ZTSN4llvm10MCStreamerE, 
                       __ZTSN4llvm10ModulePassE, __ZTSN4llvm10RegionInfoE, 
                       __ZTSN4llvm10RegionPassE, __ZTSN4llvm10ResumeInstE, 
                       __ZTSN4llvm10ReturnInstE, __ZTSN4llvm10SIToFPInstE, 
                       __ZTSN4llvm10SelectInstE, __ZTSN4llvm10SwitchInstE, 
                       __ZTSN4llvm10TargetDataE, __ZTSN4llvm10UIToFPInstE, 
                       __ZTSN4llvm10UndefValueE, __ZTSN4llvm10VirtRegMapE, 
                       __ZTSN4llvm10X86JITInfoE, __ZTSN4llvm11BitCastInstE, 
                       __ZTSN4llvm11ConstantIntE, __ZTSN4llvm11EdgeBundlesE, 
                       __ZTSN4llvm11FPTruncInstE, __ZTSN4llvm11GlobalAliasE, 
                       __ZTSN4llvm11GlobalValueE, __ZTSN4llvm11IVStrideUseE, 
                       __ZTSN4llvm11InstructionE, __ZTSN4llvm11LibCallInfoE, 
                       __ZTSN4llvm11MCAsmParserE, __ZTSN4llvm11PBQPBuilderE, 
                       __ZTSN4llvm11PassManagerE, __ZTSN4llvm11SCEVUnknownE, 
                       __ZTSN4llvm11ScheduleDAGE, __ZTSN4llvm11SlotIndexesE, 
                       __ZTSN4llvm11_do_messageE, __ZTSN4llvm11raw_ostreamE, 
                       __ZTSN4llvm12ARMExceptionE, __ZTSN4llvm12BallLarusDagE, 
                       __ZTSN4llvm12BlockAddressE, __ZTSN4llvm12ConstantExprE, 
                       __ZTSN4llvm12DataStreamerE, __ZTSN4llvm12FunctionPassE, 
                       __ZTSN4llvm12GCModuleInfoE, __ZTSN4llvm12IntToPtrInstE, 
                       __ZTSN4llvm12LexicalScopeE, __ZTSN4llvm12MCAsmBackendE, 
                       __ZTSN4llvm12MCSectionELFE, __ZTSN4llvm12MCTargetExprE, 
                       __ZTSN4llvm12MemoryBufferE, __ZTSN4llvm12MemoryObjectE, 
                       __ZTSN4llvm12PtrToIntInstE, __ZTSN4llvm12SelectionDAG17DAGUpdateListenerE, 
                       __ZTSN4llvm12X86InstrInfoE, __ZTSN4llvm12X86SubtargetE, 
                       __ZTSN4llvm13AliasAnalysisE, __ZTSN4llvm13AtomicRMWInstE, 
                       __ZTSN4llvm13BitcodeReaderE, __ZTSN4llvm13ConstantArrayE, 
                       __ZTSN4llvm13DominatorTreeE, __ZTSN4llvm13FPPassManagerE, 
                       __ZTSN4llvm13FindUsedTypesE, __ZTSN4llvm13ImmutablePassE, 
                       __ZTSN4llvm13LPPassManagerE, __ZTSN4llvm13LazyValueInfoE, 
                       __ZTSN4llvm13LexicalScopesE, __ZTSN4llvm13LiveIntervalsE, 
                       __ZTSN4llvm13LiveRangeEdit8DelegateE, __ZTSN4llvm13LiveRegMatrixE, 
                       __ZTSN4llvm13LiveVariablesE, __ZTSN4llvm13MCAsmInfoCOFFE, 
                       __ZTSN4llvm13MCCodeEmitterE, __ZTSN4llvm13MCInstPrinterE, 
                       __ZTSN4llvm13MCLEBFragmentE, __ZTSN4llvm13MCOrgFragmentE, 
                       __ZTSN4llvm13MCSectionCOFFE, __ZTSN4llvm13MDNodeOperandE, 
                       __ZTSN4llvm13MPPassManagerE, __ZTSN4llvm13PMDataManagerE, 
                       __ZTSN4llvm13RGPassManagerE, __ZTSN4llvm13ScheduleDAGMIE, 
                       __ZTSN4llvm13SlabAllocatorE, __ZTSN4llvm13TargetJITInfoE, 
                       __ZTSN4llvm13TargetMachineE, __ZTSN4llvm14AntiDepBreakerE, 
                       __ZTSN4llvm14BasicBlockPassE, __ZTSN4llvm14BinaryOperatorE, 
                       __ZTSN4llvm14CaptureTrackerE, __ZTSN4llvm14ConstantStructE, 
                       __ZTSN4llvm14ConstantVectorE, __ZTSN4llvm14DeltaAlgorithmE, 
                       __ZTSN4llvm14DwarfExceptionE, __ZTSN4llvm14FoldingSetImplE, 
                       __ZTSN4llvm14GVMaterializerE, __ZTSN4llvm14GlobalVariableE, 
                       __ZTSN4llvm14IndirectBrInstE, __ZTSN4llvm14JITCodeEmitterE, 
                       __ZTSN4llvm14LandingPadInstE, __ZTSN4llvm14MCDataFragmentE, 
                       __ZTSN4llvm14MCDisassemblerE, __ZTSN4llvm14MCFillFragmentE, 
                       __ZTSN4llvm14MCInstFragmentE, __ZTSN4llvm14MCObjectWriterE, 
                       __ZTSN4llvm14MCSectionMachOE, __ZTSN4llvm14PassNameParserE, 
                       __ZTSN4llvm14RuntimeDyldELFE, __ZTSN4llvm14SpillPlacementE, 
                       __ZTSN4llvm14TargetLoweringE, __ZTSN4llvm14TerminatorInstE, 
                       __ZTSN4llvm14Win64ExceptionE, __ZTSN4llvm14error_categoryE, 
                       __ZTSN4llvm14raw_fd_ostreamE, __ZTSN4llvm14raw_os_ostreamE, 
                       __ZTSN4llvm15AliasSetTracker13ASTCallbackVHE, __ZTSN4llvm15ExecutionEngineE, 
                       __ZTSN4llvm15InsertValueInstE, __ZTSN4llvm15MCAlignFragmentE, 
                       __ZTSN4llvm15MCAsmInfoDarwinE, __ZTSN4llvm15MCInstrAnalysisE, 
                       __ZTSN4llvm15MachineLoopInfoE, __ZTSN4llvm15PassManagerBaseE, 
                       __ZTSN4llvm15PassManagerImplE, __ZTSN4llvm15RuntimeDyldImplE, 
                       __ZTSN4llvm15ScalarEvolution14SCEVCallbackVHE, __ZTSN4llvm15ScalarEvolutionE, 
                       __ZTSN4llvm15TargetInstrInfoE, __ZTSN4llvm15UnreachableInstE, 
                       __ZTSN4llvm15X86Disassembler22X86GenericDisassemblerE, 
                       __ZTSN4llvm15X86ELFMCAsmInfoE, __ZTSN4llvm15X86RegisterInfoE, 
                       __ZTSN4llvm16CallGraphSCCPassE, __ZTSN4llvm16ExtractValueInstE, 
                       __ZTSN4llvm16JITEventListenerE, __ZTSN4llvm16JITMemoryManagerE, 
                       __ZTSN4llvm16MCAsmInfoGNUCOFFE, __ZTSN4llvm16MCObjectStreamerE, 
                       __ZTSN4llvm16MCTargetAsmLexerE, __ZTSN4llvm16MachObjectWriterE, 
                       __ZTSN4llvm16RuntimeDyldMachOE, __ZTSN4llvm16SelectionDAGISelE, 
                       __ZTSN4llvm16TargetPassConfigE, __ZTSN4llvm16UnaryInstructionE, 
                       __ZTSN4llvm16X86ELFWriterInfoE, __ZTSN4llvm16X86FrameLoweringE, 
                       __ZTSN4llvm16X86TargetMachineE, __ZTSN4llvm16raw_null_ostreamE, 
                       __ZTSN4llvm17AtomicCmpXchgInstE, __ZTSN4llvm17ConstantDataArrayE, 
                       __ZTSN4llvm17DAGDeltaAlgorithmE, __ZTSN4llvm17DominanceFrontierE, 
                       __ZTSN4llvm17DwarfCFIExceptionE, __ZTSN4llvm17GCMetadataPrinterE, 
                       __ZTSN4llvm17GetElementPtrInstE, __ZTSN4llvm17InsertElementInstE, 
                       __ZTSN4llvm17IntervalPartitionE, __ZTSN4llvm17LLVMTargetMachineE, 
                       __ZTSN4llvm17MCTargetAsmParserE, __ZTSN4llvm17MachineLoopRangesE, 
                       __ZTSN4llvm17MachineModuleInfoE, __ZTSN4llvm17PMTopLevelManagerE, 
                       __ZTSN4llvm17PostDominatorTreeE, __ZTSN4llvm17PseudoSourceValueE, 
                       __ZTSN4llvm17ScheduleDAGInstrsE, __ZTSN4llvm17ShuffleVectorInstE, 
                       __ZTSN4llvm17TargetLibraryInfoE, __ZTSN4llvm17UnaryConstantExprE, 
                       __ZTSN4llvm17X86ATTInstPrinterE, __ZTSN4llvm17X86TargetLoweringE, 
                       __ZTSN4llvm18BinaryConstantExprE, __ZTSN4llvm18BlockFrequencyInfoE, 
                       __ZTSN4llvm18ConstantDataVectorE, __ZTSN4llvm18ExtractElementInstE, 
                       __ZTSN4llvm18LiveDebugVariablesE, __ZTSN4llvm18MCAsmInfoMicrosoftE, 
                       __ZTSN4llvm18MCParsedAsmOperandE, __ZTSN4llvm18MachineCodeEmitterE, 
                       __ZTSN4llvm18RefCountedBaseVPTRE, __ZTSN4llvm18ScheduleDAGSDNodesE, 
                       __ZTSN4llvm18SelectConstantExprE, __ZTSN4llvm18TargetRegisterInfoE, 
                       __ZTSN4llvm18VLIWPacketizerListE, __ZTSN4llvm18X86GenRegisterInfoE, 
                       __ZTSN4llvm18X86MCAsmInfoDarwinE, __ZTSN4llvm18format_object_baseE, 
                       __ZTSN4llvm18raw_string_ostreamE, __ZTSN4llvm19CompareConstantExprE, 
                       __ZTSN4llvm19ConstantPointerNullE, __ZTSN4llvm19FunctionPassManagerE, 
                       __ZTSN4llvm19MachineFunctionInfoE, __ZTSN4llvm19MachineFunctionPassE, 
                       __ZTSN4llvm19MachineSchedContextE, __ZTSN4llvm19MachineTraceMetrics8EnsembleE, 
                       __ZTSN4llvm19MachineTraceMetricsE, __ZTSN4llvm19MallocSlabAllocatorE, 
                       __ZTSN4llvm19RTDyldMemoryManagerE, __ZTSN4llvm19TargetELFWriterInfoE, 
                       __ZTSN4llvm19TargetFrameLoweringE, __ZTSN4llvm19TargetInstrInfoImplE, 
                       __ZTSN4llvm19TargetIntrinsicInfoE, __ZTSN4llvm19TargetSubtargetInfoE, 
                       __ZTSN4llvm19X86GenSubtargetInfoE, __ZTSN4llvm19X86IntelInstPrinterE, 
                       __ZTSN4llvm19X86MCAsmInfoGNUCOFFE, __ZTSN4llvm19X86SelectionDAGInfoE, 
                       __ZTSN4llvm19X86_32TargetMachineE, __ZTSN4llvm19X86_64TargetMachineE, 
                       __ZTSN4llvm19raw_svector_ostreamE, __ZTSN4llvm20DefaultVLIWSchedulerE, 
                       __ZTSN4llvm20LatencyPriorityQueueE, __ZTSN4llvm20LibCallAliasAnalysisE, 
                       __ZTSN4llvm20LoadAndStorePromoterE, __ZTSN4llvm20MCAsmParserExtensionE, 
                       __ZTSN4llvm20MachineDominatorTreeE, __ZTSN4llvm20MachineModuleInfoELFE, 
                       __ZTSN4llvm20ValueMapTypeRemapperE, __ZTSN4llvm20circular_raw_ostreamE, 
                       __ZTSN4llvm21BranchProbabilityInfoE, __ZTSN4llvm21CalculateSpillWeightsE, 
                       __ZTSN4llvm21ConstantAggregateZeroE, __ZTSN4llvm21DominanceFrontierBaseE, 
                       __ZTSN4llvm21MachineModuleInfoImplE, __ZTSN4llvm21PrettyStackTraceEntryE, 
                       __ZTSN4llvm21ResourcePriorityQueueE, __ZTSN4llvm21StreamingMemoryObjectE, 
                       __ZTSN4llvm21X86MCAsmInfoMicrosoftE, __ZTSN4llvm21X86_64MCAsmInfoDarwinE, 
                       __ZTSN4llvm21formatted_raw_ostreamE, __ZTSN4llvm22ConstantDataSequentialE, 
                       __ZTSN4llvm22CriticalAntiDepBreakerE, __ZTSN4llvm22LoopDependenceAnalysisE, 
                       __ZTSN4llvm22MachineModuleInfoMachOE, __ZTSN4llvm22PrettyStackTraceStringE, 
                       __ZTSN4llvm22StreamableMemoryObjectE, __ZTSN4llvm22TargetSelectionDAGInfoE, 
                       __ZTSN4llvm22UnifyFunctionExitNodesE, __ZTSN4llvm22X86MachineFunctionInfoE, 
                       __ZTSN4llvm22_system_error_categoryE, __ZTSN4llvm23AbstractLatticeFunctionE, 
                       __ZTSN4llvm23FunctionPassManagerImplE, __ZTSN4llvm23InsertValueConstantExprE, 
                       __ZTSN4llvm23MCAsmParserSemaCallbackE, __ZTSN4llvm23MCDwarfLineAddrFragmentE, 
                       __ZTSN4llvm23MCELFObjectTargetWriterE, __ZTSN4llvm23MachineFunctionAnalysisE, 
                       __ZTSN4llvm23PrettyStackTraceProgramE, __ZTSN4llvm23SchedulingPriorityQueueE, 
                       __ZTSN4llvm23_generic_error_categoryE, __ZTSN4llvm24AggressiveAntiDepBreakerE, 
                       __ZTSN4llvm24AssemblyAnnotationWriterE, __ZTSN4llvm24ExtractValueConstantExprE, 
                       __ZTSN4llvm24MCDwarfCallFrameFragmentE, __ZTSN4llvm24MCMachObjectTargetWriterE, 
                       __ZTSN4llvm24MachineConstantPoolValueE, __ZTSN4llvm24MachinePostDominatorTreeE, 
                       __ZTSN4llvm24MemoryDependenceAnalysisE, __ZTSN4llvm24PassRegistrationListenerE, 
                       __ZTSN4llvm24ScheduleHazardRecognizerE, __ZTSN4llvm24TargetLoweringObjectFileE, 
                       __ZTSN4llvm24X86COFFMachineModuleInfoE, __ZTSN4llvm24X86LinuxTargetObjectFileE, 
                       __ZTSN4llvm25GetElementPtrConstantExprE, __ZTSN4llvm25InsertElementConstantExprE, 
                       __ZTSN4llvm25MachineBlockFrequencyInfoE, __ZTSN4llvm25PBQPBuilderWithCoalescingE, 
                       __ZTSN4llvm25ShuffleVectorConstantExprE, __ZTSN4llvm25SimplifyFortifiedLibCallsE, 
                       __ZTSN4llvm26ExtractElementConstantExprE, __ZTSN4llvm26MMIAddrLabelMapCallbackPtrE, 
                       __ZTSN4llvm26ScoreboardHazardRecognizerE, __ZTSN4llvm27CrashRecoveryContextCleanupE, 
                       __ZTSN4llvm27FixedStackPseudoSourceValueE, __ZTSN4llvm27MachinePassRegistryListenerE, 
                       __ZTSN4llvm27PassManagerPrettyStackEntryE, __ZTSN4llvm27TargetLoweringObjectFileELFE, 
                       __ZTSN4llvm27X86_64MachoTargetObjectFileE, __ZTSN4llvm28MachineBranchProbabilityInfoE, 
                       __ZTSN4llvm28TargetLoweringObjectFileCOFFE, __ZTSN4llvm29TargetLoweringObjectFileMachOE, 
                       __ZTSN4llvm2cl11OptionValueINS0_13boolOrDefaultEEE, 
                       __ZTSN4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                       __ZTSN4llvm2cl17basic_parser_implE, __ZTSN4llvm2cl18GenericOptionValueE, 
                       __ZTSN4llvm2cl19generic_parser_baseE, __ZTSN4llvm2cl5aliasE, 
                       __ZTSN4llvm2cl6OptionE, __ZTSN4llvm2cl6parserINS0_13boolOrDefaultEEE, 
                       __ZTSN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                       __ZTSN4llvm2cl6parserIbEE, __ZTSN4llvm2cl6parserIcEE, 
                       __ZTSN4llvm2cl6parserIdEE, __ZTSN4llvm2cl6parserIfEE, 
                       __ZTSN4llvm2cl6parserIiEE, __ZTSN4llvm2cl6parserIjEE, 
                       __ZTSN4llvm2cl6parserIyEE, __ZTSN4llvm3DIEE, __ZTSN4llvm3JITE, 
                       __ZTSN4llvm3PEIE, __ZTSN4llvm3sys15ThreadLocalImplE, 
                       __ZTSN4llvm4PassE, __ZTSN4llvm4UserE, __ZTSN4llvm5ValueE, 
                       __ZTSN4llvm6MDNodeE, __ZTSN4llvm6object10ObjectFileE, 
                       __ZTSN4llvm6object14COFFObjectFileE, __ZTSN4llvm6object15MachOObjectFileE, 
                       __ZTSN4llvm6object6BinaryE, __ZTSN4llvm6object7ArchiveE, 
                       __ZTSN4llvm7CmpInstE, __ZTSN4llvm7IVUsersE, __ZTSN4llvm7InlinerE, 
                       __ZTSN4llvm7PHINodeE, __ZTSN4llvm7SpillerE, __ZTSN4llvm8ArgumentE, 
                       __ZTSN4llvm8AsmLexerE, __ZTSN4llvm8CallInstE, __ZTSN4llvm8CastInstE, 
                       __ZTSN4llvm8ConstantE, __ZTSN4llvm8DIEBlockE, __ZTSN4llvm8DIEDeltaE, 
                       __ZTSN4llvm8DIEEntryE, __ZTSN4llvm8DIELabelE, __ZTSN4llvm8DIEValueE, 
                       __ZTSN4llvm8FCmpInstE, __ZTSN4llvm8FastISelE, __ZTSN4llvm8FunctionE, 
                       __ZTSN4llvm8ICmpInstE, __ZTSN4llvm8LoadInstE, __ZTSN4llvm8LoopInfoE, 
                       __ZTSN4llvm8LoopPassE, __ZTSN4llvm8MDStringE, __ZTSN4llvm8SExtInstE, 
                       __ZTSN4llvm8ZExtInstE, __ZTSN4llvm9CallGraphE, __ZTSN4llvm9FPExtInstE, 
                       __ZTSN4llvm9FenceInstE, __ZTSN4llvm9IVVisitorE, 
                       __ZTSN4llvm9InlineAsmE, __ZTSN4llvm9MCAsmInfoE, 
                       __ZTSN4llvm9MCSectionE, __ZTSN4llvm9StoreInstE, 
                       __ZTSN4llvm9TruncInstE, __ZTSN4llvm9VAArgInstE, 
                       __ZTVN4llvm10AllocaInstE, __ZTVN4llvm10AsmPrinterE, 
                       __ZTVN4llvm10BasicBlockE, __ZTVN4llvm10BranchInstE, 
                       __ZTVN4llvm10CallbackVHE, __ZTVN4llvm10ConstantFPE, 
                       __ZTVN4llvm10DIEIntegerE, __ZTVN4llvm10DebugRecVHE, 
                       __ZTVN4llvm10FPToSIInstE, __ZTVN4llvm10FPToUIInstE, 
                       __ZTVN4llvm10GCStrategyE, __ZTVN4llvm10InvokeInstE, 
                       __ZTVN4llvm10LiveStacksE, __ZTVN4llvm10MCAsmLexerE, 
                       __ZTVN4llvm10MCFragmentE, __ZTVN4llvm10MCStreamerE, 
                       __ZTVN4llvm10ModulePassE, __ZTVN4llvm10RegionInfoE, 
                       __ZTVN4llvm10RegionPassE, __ZTVN4llvm10ResumeInstE, 
                       __ZTVN4llvm10ReturnInstE, __ZTVN4llvm10SIToFPInstE, 
                       __ZTVN4llvm10SelectInstE, __ZTVN4llvm10SwitchInstE, 
                       __ZTVN4llvm10TargetDataE, __ZTVN4llvm10UIToFPInstE, 
                       __ZTVN4llvm10UndefValueE, __ZTVN4llvm10VirtRegMapE, 
                       __ZTVN4llvm10X86JITInfoE, __ZTVN4llvm11BitCastInstE, 
                       __ZTVN4llvm11ConstantIntE, __ZTVN4llvm11EdgeBundlesE, 
                       __ZTVN4llvm11FPTruncInstE, __ZTVN4llvm11GlobalAliasE, 
                       __ZTVN4llvm11GlobalValueE, __ZTVN4llvm11IVStrideUseE, 
                       __ZTVN4llvm11InstructionE, __ZTVN4llvm11LibCallInfoE, 
                       __ZTVN4llvm11MCAsmParserE, __ZTVN4llvm11PBQPBuilderE, 
                       __ZTVN4llvm11PassManagerE, __ZTVN4llvm11SCEVUnknownE, 
                       __ZTVN4llvm11ScheduleDAGE, __ZTVN4llvm11SlotIndexesE, 
                       __ZTVN4llvm11_do_messageE, __ZTVN4llvm11raw_ostreamE, 
                       __ZTVN4llvm12ARMExceptionE, __ZTVN4llvm12BallLarusDagE, 
                       __ZTVN4llvm12BlockAddressE, __ZTVN4llvm12ConstantExprE, 
                       __ZTVN4llvm12DataStreamerE, __ZTVN4llvm12FunctionPassE, 
                       __ZTVN4llvm12GCModuleInfoE, __ZTVN4llvm12IntToPtrInstE, 
                       __ZTVN4llvm12LexicalScopeE, __ZTVN4llvm12MCAsmBackendE, 
                       __ZTVN4llvm12MCSectionELFE, __ZTVN4llvm12MCTargetExprE, 
                       __ZTVN4llvm12MemoryBufferE, __ZTVN4llvm12MemoryObjectE, 
                       __ZTVN4llvm12PtrToIntInstE, __ZTVN4llvm12SelectionDAG17DAGUpdateListenerE, 
                       __ZTVN4llvm12X86InstrInfoE, __ZTVN4llvm12X86SubtargetE, 
                       __ZTVN4llvm13AliasAnalysisE, __ZTVN4llvm13AtomicRMWInstE, 
                       __ZTVN4llvm13BitcodeReaderE, __ZTVN4llvm13ConstantArrayE, 
                       __ZTVN4llvm13DominatorTreeE, __ZTVN4llvm13FPPassManagerE, 
                       __ZTVN4llvm13FindUsedTypesE, __ZTVN4llvm13ImmutablePassE, 
                       __ZTVN4llvm13LPPassManagerE, __ZTVN4llvm13LazyValueInfoE, 
                       __ZTVN4llvm13LexicalScopesE, __ZTVN4llvm13LiveIntervalsE, 
                       __ZTVN4llvm13LiveRangeEdit8DelegateE, __ZTVN4llvm13LiveRegMatrixE, 
                       __ZTVN4llvm13LiveVariablesE, __ZTVN4llvm13MCAsmInfoCOFFE, 
                       __ZTVN4llvm13MCCodeEmitterE, __ZTVN4llvm13MCInstPrinterE, 
                       __ZTVN4llvm13MCLEBFragmentE, __ZTVN4llvm13MCOrgFragmentE, 
                       __ZTVN4llvm13MCSectionCOFFE, __ZTVN4llvm13MDNodeOperandE, 
                       __ZTVN4llvm13MPPassManagerE, __ZTVN4llvm13PMDataManagerE, 
                       __ZTVN4llvm13RGPassManagerE, __ZTVN4llvm13ScheduleDAGMIE, 
                       __ZTVN4llvm13SlabAllocatorE, __ZTVN4llvm13TargetJITInfoE, 
                       __ZTVN4llvm13TargetMachineE, __ZTVN4llvm14AntiDepBreakerE, 
                       __ZTVN4llvm14BasicBlockPassE, __ZTVN4llvm14BinaryOperatorE, 
                       __ZTVN4llvm14CaptureTrackerE, __ZTVN4llvm14ConstantStructE, 
                       __ZTVN4llvm14ConstantVectorE, __ZTVN4llvm14DeltaAlgorithmE, 
                       __ZTVN4llvm14DwarfExceptionE, __ZTVN4llvm14FoldingSetImplE, 
                       __ZTVN4llvm14GVMaterializerE, __ZTVN4llvm14GlobalVariableE, 
                       __ZTVN4llvm14IndirectBrInstE, __ZTVN4llvm14JITCodeEmitterE, 
                       __ZTVN4llvm14LandingPadInstE, __ZTVN4llvm14MCDataFragmentE, 
                       __ZTVN4llvm14MCDisassemblerE, __ZTVN4llvm14MCFillFragmentE, 
                       __ZTVN4llvm14MCInstFragmentE, __ZTVN4llvm14MCObjectWriterE, 
                       __ZTVN4llvm14MCSectionMachOE, __ZTVN4llvm14PassNameParserE, 
                       __ZTVN4llvm14RuntimeDyldELFE, __ZTVN4llvm14SpillPlacementE, 
                       __ZTVN4llvm14TargetLoweringE, __ZTVN4llvm14TerminatorInstE, 
                       __ZTVN4llvm14Win64ExceptionE, __ZTVN4llvm14error_categoryE, 
                       __ZTVN4llvm14raw_fd_ostreamE, __ZTVN4llvm14raw_os_ostreamE, 
                       __ZTVN4llvm15AliasSetTracker13ASTCallbackVHE, __ZTVN4llvm15ExecutionEngineE, 
                       __ZTVN4llvm15InsertValueInstE, __ZTVN4llvm15MCAlignFragmentE, 
                       __ZTVN4llvm15MCAsmInfoDarwinE, __ZTVN4llvm15MCInstrAnalysisE, 
                       __ZTVN4llvm15MachineLoopInfoE, __ZTVN4llvm15PassManagerBaseE, 
                       __ZTVN4llvm15PassManagerImplE, __ZTVN4llvm15RuntimeDyldImplE, 
                       __ZTVN4llvm15ScalarEvolution14SCEVCallbackVHE, __ZTVN4llvm15ScalarEvolutionE, 
                       __ZTVN4llvm15TargetInstrInfoE, __ZTVN4llvm15UnreachableInstE, 
                       __ZTVN4llvm15X86Disassembler22X86GenericDisassemblerE, 
                       __ZTVN4llvm15X86ELFMCAsmInfoE, __ZTVN4llvm15X86RegisterInfoE, 
                       __ZTVN4llvm16CallGraphSCCPassE, __ZTVN4llvm16ExtractValueInstE, 
                       __ZTVN4llvm16JITEventListenerE, __ZTVN4llvm16JITMemoryManagerE, 
                       __ZTVN4llvm16MCAsmInfoGNUCOFFE, __ZTVN4llvm16MCObjectStreamerE, 
                       __ZTVN4llvm16MCTargetAsmLexerE, __ZTVN4llvm16MachObjectWriterE, 
                       __ZTVN4llvm16RuntimeDyldMachOE, __ZTVN4llvm16SelectionDAGISelE, 
                       __ZTVN4llvm16TargetPassConfigE, __ZTVN4llvm16UnaryInstructionE, 
                       __ZTVN4llvm16X86ELFWriterInfoE, __ZTVN4llvm16X86FrameLoweringE, 
                       __ZTVN4llvm16X86TargetMachineE, __ZTVN4llvm16raw_null_ostreamE, 
                       __ZTVN4llvm17AtomicCmpXchgInstE, __ZTVN4llvm17ConstantDataArrayE, 
                       __ZTVN4llvm17DAGDeltaAlgorithmE, __ZTVN4llvm17DominanceFrontierE, 
                       __ZTVN4llvm17DwarfCFIExceptionE, __ZTVN4llvm17GCMetadataPrinterE, 
                       __ZTVN4llvm17GetElementPtrInstE, __ZTVN4llvm17InsertElementInstE, 
                       __ZTVN4llvm17IntervalPartitionE, __ZTVN4llvm17LLVMTargetMachineE, 
                       __ZTVN4llvm17MCTargetAsmParserE, __ZTVN4llvm17MachineLoopRangesE, 
                       __ZTVN4llvm17MachineModuleInfoE, __ZTVN4llvm17PMTopLevelManagerE, 
                       __ZTVN4llvm17PostDominatorTreeE, __ZTVN4llvm17PseudoSourceValueE, 
                       __ZTVN4llvm17ScheduleDAGInstrsE, __ZTVN4llvm17ShuffleVectorInstE, 
                       __ZTVN4llvm17TargetLibraryInfoE, __ZTVN4llvm17UnaryConstantExprE, 
                       __ZTVN4llvm17X86ATTInstPrinterE, __ZTVN4llvm17X86TargetLoweringE, 
                       __ZTVN4llvm18BinaryConstantExprE, __ZTVN4llvm18BlockFrequencyInfoE, 
                       __ZTVN4llvm18ConstantDataVectorE, __ZTVN4llvm18ExtractElementInstE, 
                       __ZTVN4llvm18LiveDebugVariablesE, __ZTVN4llvm18MCAsmInfoMicrosoftE, 
                       __ZTVN4llvm18MCParsedAsmOperandE, __ZTVN4llvm18MachineCodeEmitterE, 
                       __ZTVN4llvm18RefCountedBaseVPTRE, __ZTVN4llvm18ScheduleDAGSDNodesE, 
                       __ZTVN4llvm18SelectConstantExprE, __ZTVN4llvm18TargetRegisterInfoE, 
                       __ZTVN4llvm18VLIWPacketizerListE, __ZTVN4llvm18X86GenRegisterInfoE, 
                       __ZTVN4llvm18X86MCAsmInfoDarwinE, __ZTVN4llvm18format_object_baseE, 
                       __ZTVN4llvm18raw_string_ostreamE, __ZTVN4llvm19CompareConstantExprE, 
                       __ZTVN4llvm19ConstantPointerNullE, __ZTVN4llvm19FunctionPassManagerE, 
                       __ZTVN4llvm19MachineFunctionInfoE, __ZTVN4llvm19MachineFunctionPassE, 
                       __ZTVN4llvm19MachineSchedContextE, __ZTVN4llvm19MachineTraceMetrics8EnsembleE, 
                       __ZTVN4llvm19MachineTraceMetricsE, __ZTVN4llvm19MallocSlabAllocatorE, 
                       __ZTVN4llvm19RTDyldMemoryManagerE, __ZTVN4llvm19TargetELFWriterInfoE, 
                       __ZTVN4llvm19TargetFrameLoweringE, __ZTVN4llvm19TargetInstrInfoImplE, 
                       __ZTVN4llvm19TargetIntrinsicInfoE, __ZTVN4llvm19TargetSubtargetInfoE, 
                       __ZTVN4llvm19X86GenSubtargetInfoE, __ZTVN4llvm19X86IntelInstPrinterE, 
                       __ZTVN4llvm19X86MCAsmInfoGNUCOFFE, __ZTVN4llvm19X86SelectionDAGInfoE, 
                       __ZTVN4llvm19X86_32TargetMachineE, __ZTVN4llvm19X86_64TargetMachineE, 
                       __ZTVN4llvm19raw_svector_ostreamE, __ZTVN4llvm20DefaultVLIWSchedulerE, 
                       __ZTVN4llvm20LatencyPriorityQueueE, __ZTVN4llvm20LibCallAliasAnalysisE, 
                       __ZTVN4llvm20LoadAndStorePromoterE, __ZTVN4llvm20MCAsmParserExtensionE, 
                       __ZTVN4llvm20MachineDominatorTreeE, __ZTVN4llvm20MachineModuleInfoELFE, 
                       __ZTVN4llvm20ValueMapTypeRemapperE, __ZTVN4llvm20circular_raw_ostreamE, 
                       __ZTVN4llvm21BranchProbabilityInfoE, __ZTVN4llvm21CalculateSpillWeightsE, 
                       __ZTVN4llvm21ConstantAggregateZeroE, __ZTVN4llvm21DominanceFrontierBaseE, 
                       __ZTVN4llvm21MachineModuleInfoImplE, __ZTVN4llvm21PrettyStackTraceEntryE, 
                       __ZTVN4llvm21ResourcePriorityQueueE, __ZTVN4llvm21StreamingMemoryObjectE, 
                       __ZTVN4llvm21X86MCAsmInfoMicrosoftE, __ZTVN4llvm21X86_64MCAsmInfoDarwinE, 
                       __ZTVN4llvm21formatted_raw_ostreamE, __ZTVN4llvm22ConstantDataSequentialE, 
                       __ZTVN4llvm22CriticalAntiDepBreakerE, __ZTVN4llvm22LoopDependenceAnalysisE, 
                       __ZTVN4llvm22MachineModuleInfoMachOE, __ZTVN4llvm22PrettyStackTraceStringE, 
                       __ZTVN4llvm22StreamableMemoryObjectE, __ZTVN4llvm22TargetSelectionDAGInfoE, 
                       __ZTVN4llvm22UnifyFunctionExitNodesE, __ZTVN4llvm22X86MachineFunctionInfoE, 
                       __ZTVN4llvm22_system_error_categoryE, __ZTVN4llvm23AbstractLatticeFunctionE, 
                       __ZTVN4llvm23FunctionPassManagerImplE, __ZTVN4llvm23InsertValueConstantExprE, 
                       __ZTVN4llvm23MCAsmParserSemaCallbackE, __ZTVN4llvm23MCDwarfLineAddrFragmentE, 
                       __ZTVN4llvm23MCELFObjectTargetWriterE, __ZTVN4llvm23MachineFunctionAnalysisE, 
                       __ZTVN4llvm23PrettyStackTraceProgramE, __ZTVN4llvm23SchedulingPriorityQueueE, 
                       __ZTVN4llvm23_generic_error_categoryE, __ZTVN4llvm24AggressiveAntiDepBreakerE, 
                       __ZTVN4llvm24AssemblyAnnotationWriterE, __ZTVN4llvm24ExtractValueConstantExprE, 
                       __ZTVN4llvm24MCDwarfCallFrameFragmentE, __ZTVN4llvm24MCMachObjectTargetWriterE, 
                       __ZTVN4llvm24MachineConstantPoolValueE, __ZTVN4llvm24MachinePostDominatorTreeE, 
                       __ZTVN4llvm24MemoryDependenceAnalysisE, __ZTVN4llvm24PassRegistrationListenerE, 
                       __ZTVN4llvm24ScheduleHazardRecognizerE, __ZTVN4llvm24TargetLoweringObjectFileE, 
                       __ZTVN4llvm24X86COFFMachineModuleInfoE, __ZTVN4llvm24X86LinuxTargetObjectFileE, 
                       __ZTVN4llvm25GetElementPtrConstantExprE, __ZTVN4llvm25InsertElementConstantExprE, 
                       __ZTVN4llvm25MachineBlockFrequencyInfoE, __ZTVN4llvm25PBQPBuilderWithCoalescingE, 
                       __ZTVN4llvm25ShuffleVectorConstantExprE, __ZTVN4llvm25SimplifyFortifiedLibCallsE, 
                       __ZTVN4llvm26ExtractElementConstantExprE, __ZTVN4llvm26MMIAddrLabelMapCallbackPtrE, 
                       __ZTVN4llvm26ScoreboardHazardRecognizerE, __ZTVN4llvm27CrashRecoveryContextCleanupE, 
                       __ZTVN4llvm27FixedStackPseudoSourceValueE, __ZTVN4llvm27MachinePassRegistryListenerE, 
                       __ZTVN4llvm27PassManagerPrettyStackEntryE, __ZTVN4llvm27TargetLoweringObjectFileELFE, 
                       __ZTVN4llvm27X86_64MachoTargetObjectFileE, __ZTVN4llvm28MachineBranchProbabilityInfoE, 
                       __ZTVN4llvm28TargetLoweringObjectFileCOFFE, __ZTVN4llvm29TargetLoweringObjectFileMachOE, 
                       __ZTVN4llvm2cl11OptionValueINS0_13boolOrDefaultEEE, 
                       __ZTVN4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                       __ZTVN4llvm2cl17basic_parser_implE, __ZTVN4llvm2cl18GenericOptionValueE, 
                       __ZTVN4llvm2cl19generic_parser_baseE, __ZTVN4llvm2cl5aliasE, 
                       __ZTVN4llvm2cl6OptionE, __ZTVN4llvm2cl6parserINS0_13boolOrDefaultEEE, 
                       __ZTVN4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                       __ZTVN4llvm2cl6parserIbEE, __ZTVN4llvm2cl6parserIcEE, 
                       __ZTVN4llvm2cl6parserIdEE, __ZTVN4llvm2cl6parserIfEE, 
                       __ZTVN4llvm2cl6parserIiEE, __ZTVN4llvm2cl6parserIjEE, 
                       __ZTVN4llvm2cl6parserIyEE, __ZTVN4llvm3DIEE, __ZTVN4llvm3JITE, 
                       __ZTVN4llvm3PEIE, __ZTVN4llvm3sys15ThreadLocalImplE, 
                       __ZTVN4llvm4PassE, __ZTVN4llvm4UserE, __ZTVN4llvm5ValueE, 
                       __ZTVN4llvm6MDNodeE, __ZTVN4llvm6object10ObjectFileE, 
                       __ZTVN4llvm6object14COFFObjectFileE, __ZTVN4llvm6object15MachOObjectFileE, 
                       __ZTVN4llvm6object6BinaryE, __ZTVN4llvm6object7ArchiveE, 
                       __ZTVN4llvm7CmpInstE, __ZTVN4llvm7IVUsersE, __ZTVN4llvm7InlinerE, 
                       __ZTVN4llvm7PHINodeE, __ZTVN4llvm7SpillerE, __ZTVN4llvm8ArgumentE, 
                       __ZTVN4llvm8AsmLexerE, __ZTVN4llvm8CallInstE, __ZTVN4llvm8CastInstE, 
                       __ZTVN4llvm8ConstantE, __ZTVN4llvm8DIEBlockE, __ZTVN4llvm8DIEDeltaE, 
                       __ZTVN4llvm8DIEEntryE, __ZTVN4llvm8DIELabelE, __ZTVN4llvm8DIEValueE, 
                       __ZTVN4llvm8FCmpInstE, __ZTVN4llvm8FastISelE, __ZTVN4llvm8FunctionE, 
                       __ZTVN4llvm8ICmpInstE, __ZTVN4llvm8LoadInstE, __ZTVN4llvm8LoopInfoE, 
                       __ZTVN4llvm8LoopPassE, __ZTVN4llvm8MDStringE, __ZTVN4llvm8SExtInstE, 
                       __ZTVN4llvm8ZExtInstE, __ZTVN4llvm9CallGraphE, __ZTVN4llvm9FPExtInstE, 
                       __ZTVN4llvm9FenceInstE, __ZTVN4llvm9IVVisitorE, 
                       __ZTVN4llvm9InlineAsmE, __ZTVN4llvm9MCAsmInfoE, 
                       __ZTVN4llvm9MCSectionE, __ZTVN4llvm9StoreInstE, 
                       __ZTVN4llvm9TruncInstE, __ZTVN4llvm9VAArgInstE, 
                       ___jit_debug_register_code, _abort, _decodeInstruction, 
                       _getPointerToNamedFunction, _llvm_regcomp, _llvm_regerror, 
                       _llvm_regexec, _llvm_regfree, _llvm_strlcpy, _raise, 
                       _x86DisassemblerDebug, _x86DisassemblerGetInstrName ]
    weak-def-symbols: [ __ZN4llvm11IntervalMapINS_9SlotIndexEjLj4ENS_15IntervalMapInfoIS1_EEE10deleteNodeENS_15IntervalMapImpl7NodeRefEj, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE10removeLoopENSt3__111__wrap_iterIPKPS2_EE, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE11removeBlockEPS1_, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE13changeLoopForEPS1_PS2_, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE13releaseMemoryEv, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE15addTopLevelLoopEPS2_, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE18changeTopLevelLoopEPS2_S4_, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE23isNotAlreadyContainedInEPKS2_S5_, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE7AnalyzeERNS_17DominatorTreeBaseIS1_EE, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEEC1Ev, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEEC2Ev, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEED1Ev, 
                        __ZN4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEED2Ev, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE10removeLoopENSt3__111__wrap_iterIPKPS2_EE, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE11removeBlockEPS1_, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE13changeLoopForEPS1_PS2_, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE13releaseMemoryEv, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE15addTopLevelLoopEPS2_, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE18changeTopLevelLoopEPS2_S4_, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE23isNotAlreadyContainedInEPKS2_S5_, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE7AnalyzeERNS_17DominatorTreeBaseIS1_EE, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEEC1Ev, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEEC2Ev, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEED1Ev, 
                        __ZN4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEED2Ev, 
                        __ZN4llvm14object_creatorINS_10FoldingSetINS_17AttributeListImplEEEEEPvv, 
                        __ZN4llvm14object_creatorINS_11LLVMContextEEEPvv, 
                        __ZN4llvm14object_creatorINS_11SmallVectorINSt3__14pairINS_18PassManagerBuilder16ExtensionPointTyEPFvRKS4_RNS_15PassManagerBaseEEEELj8EEEEEPvv, 
                        __ZN4llvm14object_creatorINS_12PassRegistryEEEPvv, 
                        __ZN4llvm14object_creatorINS_16LeakDetectorImplIvEEEEPvv, 
                        __ZN4llvm14object_creatorINS_3sys10SmartMutexILb1EEEEEPvv, 
                        __ZN4llvm14object_creatorINS_3sys12SmartRWMutexILb1EEEEEPvv, 
                        __ZN4llvm14object_creatorINS_9StringMapINS_5TimerENS_15MallocAllocatorEEEEEPvv, 
                        __ZN4llvm14object_creatorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPvv, 
                        __ZN4llvm14object_creatorINSt3__13setINS_3EVTENS3_14compareRawBitsENS1_9allocatorIS3_EEEEEEPvv, 
                        __ZN4llvm14object_creatorINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEEPvv, 
                        __ZN4llvm14object_creatorINSt3__16vectorIPKcNS1_9allocatorIS4_EEEEEEPvv, 
                        __ZN4llvm14object_creatorINSt3__16vectorIPNS_5TimerENS1_9allocatorIS4_EEEEEEPvv, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEE16clearAllChildrenEv, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEE3endEv, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEE5beginEv, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEE7compareEPS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEE7setIDomEPS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEE8addChildEPS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEEC1EPS1_PS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_10BasicBlockEEC2EPS1_PS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE16clearAllChildrenEv, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE3endEv, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE5beginEv, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE7compareEPS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE7setIDomEPS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE8addChildEPS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEEC1EPS1_PS2_, 
                        __ZN4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEEC2EPS1_PS2_, 
                        __ZN4llvm15callDefaultCtorINS_10LiveStacksEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_10RegionInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_10TargetDataEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_10VirtRegMapEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_11EdgeBundlesEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_11SlotIndexesEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_12GCModuleInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_13DominatorTreeEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_13FindUsedTypesEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_13LazyValueInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_13LiveIntervalsEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_13LiveRegMatrixEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_13LiveVariablesEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_14SpillPlacementEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_15MachineLoopInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_15ScalarEvolutionEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_16TargetPassConfigEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_17DominanceFrontierEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_17IntervalPartitionEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_17MachineLoopRangesEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_17MachineModuleInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_17PostDominatorTreeEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_17TargetLibraryInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_18BlockFrequencyInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_18LiveDebugVariablesEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_19MachineTraceMetricsEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_20LibCallAliasAnalysisEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_20MachineDominatorTreeEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_21BranchProbabilityInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_21CalculateSpillWeightsEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_22LoopDependenceAnalysisEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_22UnifyFunctionExitNodesEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_24MachinePostDominatorTreeEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_24MemoryDependenceAnalysisEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_25MachineBlockFrequencyInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_28MachineBranchProbabilityInfoEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_3PEIEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_7IVUsersEEEPNS_4PassEv, 
                        __ZN4llvm15callDefaultCtorINS_8LoopInfoEEEPNS_4PassEv, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE10removeNodeEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE10splitBlockEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE11addNewBlockEPS1_S3_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE11getRootNodeEv, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE13releaseMemoryEv, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE15getNodeForBlockEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE16updateDFSNumbersEv, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE17properlyDominatesEPKNS_15DomTreeNodeBaseIS1_EES6_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE17properlyDominatesEPKS1_S4_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE24changeImmediateDominatorEPNS_15DomTreeNodeBaseIS1_EES5_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE24changeImmediateDominatorEPS1_S3_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE26findNearestCommonDominatorEPKS1_S4_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE26findNearestCommonDominatorEPS1_S3_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE5resetEv, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE7InfoRecC1Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE7InfoRecC2Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE7addRootEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE9dominatesEPKNS_15DomTreeNodeBaseIS1_EES6_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE9dominatesEPKS1_S4_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEE9eraseNodeEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEEC1Eb, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEEC2Eb, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEED0Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEED1Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_10BasicBlockEED2Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE10removeNodeEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE10splitBlockEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE11addNewBlockEPS1_S3_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE11getRootNodeEv, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE13releaseMemoryEv, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE15getNodeForBlockEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE16updateDFSNumbersEv, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE17properlyDominatesEPKNS_15DomTreeNodeBaseIS1_EES6_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE17properlyDominatesEPKS1_S4_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE24changeImmediateDominatorEPNS_15DomTreeNodeBaseIS1_EES5_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE24changeImmediateDominatorEPS1_S3_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE26findNearestCommonDominatorEPKS1_S4_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE26findNearestCommonDominatorEPS1_S3_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE5resetEv, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE7InfoRecC1Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE7InfoRecC2Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE9dominatesEPKNS_15DomTreeNodeBaseIS1_EES6_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE9dominatesEPKS1_S4_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE9eraseNodeEPS1_, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEC1Eb, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEC2Eb, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEED0Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEED1Ev, 
                        __ZN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEED2Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE12getListOwnerEv, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE13addNodeToListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE18removeNodeFromListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE21transferNodesFromListERNS_12ilist_traitsIS1_EENS_14ilist_iteratorIS1_EES8_, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE5toPtrEPNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE5toPtrERNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE7getListEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEE9getSymTabEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEEC1Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_10BasicBlockENS_8FunctionEEC2Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE12getListOwnerEv, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE13addNodeToListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE18removeNodeFromListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE21transferNodesFromListERNS_12ilist_traitsIS1_EENS_14ilist_iteratorIS1_EES8_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE5toPtrEPNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE5toPtrERNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE7getListEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEE9getSymTabEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEEC1Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_11GlobalAliasENS_6ModuleEEC2Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE12getListOwnerEv, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE13addNodeToListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE18removeNodeFromListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE21transferNodesFromListERNS_12ilist_traitsIS1_EENS_14ilist_iteratorIS1_EES8_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE5toPtrEPNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE5toPtrERNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE7getListEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEE9getSymTabEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEEC1Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_11InstructionENS_10BasicBlockEEC2Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE12getListOwnerEv, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE13addNodeToListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE18removeNodeFromListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE21transferNodesFromListERNS_12ilist_traitsIS1_EENS_14ilist_iteratorIS1_EES8_, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE5toPtrEPNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE5toPtrERNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE7getListEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEE9getSymTabEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEEC1Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_14GlobalVariableENS_6ModuleEEC2Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE12getListOwnerEv, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE13addNodeToListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE18removeNodeFromListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE21transferNodesFromListERNS_12ilist_traitsIS1_EENS_14ilist_iteratorIS1_EES8_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE5toPtrEPNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE5toPtrERNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE7getListEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEE9getSymTabEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEEC1Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_8ArgumentENS_8FunctionEEC2Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE12getListOwnerEv, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE13addNodeToListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE18removeNodeFromListEPS1_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE21transferNodesFromListERNS_12ilist_traitsIS1_EENS_14ilist_iteratorIS1_EES8_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE5toPtrEPNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE5toPtrERNS_16ValueSymbolTableE, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE7getListEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEE9getSymTabEPS2_, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEEC1Ev, 
                        __ZN4llvm21SymbolTableListTraitsINS_8FunctionENS_6ModuleEEC2Ev, 
                        __ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE15setInitialValueERKS8_, 
                        __ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16handleOccurrenceEjNS_9StringRefESC_, 
                        __ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE19getExtraOptionNamesERNS_15SmallVectorImplIPKcEE, 
                        __ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE4doneEv, 
                        __ZN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE9getParserEv, 
                        __ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE15setInitialValueERKb, 
                        __ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE16handleOccurrenceEjNS_9StringRefES5_, 
                        __ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE19getExtraOptionNamesERNS_15SmallVectorImplIPKcEE, 
                        __ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE4doneEv, 
                        __ZN4llvm2cl3optIbLb0ENS0_6parserIbEEE9getParserEv, 
                        __ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE15setInitialValueERKc, 
                        __ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE16handleOccurrenceEjNS_9StringRefES5_, 
                        __ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE19getExtraOptionNamesERNS_15SmallVectorImplIPKcEE, 
                        __ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE4doneEv, 
                        __ZN4llvm2cl3optIcLb0ENS0_6parserIcEEE9getParserEv, 
                        __ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE15setInitialValueERKi, 
                        __ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE16handleOccurrenceEjNS_9StringRefES5_, 
                        __ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE19getExtraOptionNamesERNS_15SmallVectorImplIPKcEE, 
                        __ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE4doneEv, 
                        __ZN4llvm2cl3optIiLb0ENS0_6parserIiEEE9getParserEv, 
                        __ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE15setInitialValueERKj, 
                        __ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE16handleOccurrenceEjNS_9StringRefES5_, 
                        __ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE19getExtraOptionNamesERNS_15SmallVectorImplIPKcEE, 
                        __ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE4doneEv, 
                        __ZN4llvm2cl3optIjLb0ENS0_6parserIjEEE9getParserEv, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE12addChildLoopEPS2_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE12moveToHeaderEPS1_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE13addBlockEntryEPS1_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE13setParentLoopEPS2_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE15getBlocksVectorEv, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE15removeChildLoopENSt3__111__wrap_iterIPKPS2_EE, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE17getSubLoopsVectorEv, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE19addBasicBlockToLoopEPS1_RNS_12LoopInfoBaseIS1_S2_EE, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE19removeBlockFromLoopEPS1_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE20replaceChildLoopWithEPS2_S4_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEEC1EPS1_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEEC1Ev, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEEC2EPS1_, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEEC2Ev, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEED1Ev, 
                        __ZN4llvm8LoopBaseINS_10BasicBlockENS_4LoopEED2Ev, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE12addChildLoopEPS2_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE12moveToHeaderEPS1_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE13addBlockEntryEPS1_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE13setParentLoopEPS2_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE15getBlocksVectorEv, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE15removeChildLoopENSt3__111__wrap_iterIPKPS2_EE, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE17getSubLoopsVectorEv, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE19addBasicBlockToLoopEPS1_RNS_12LoopInfoBaseIS1_S2_EE, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE19removeBlockFromLoopEPS1_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE20replaceChildLoopWithEPS2_S4_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEEC1EPS1_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEEC1Ev, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEEC2EPS1_, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEEC2Ev, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEED1Ev, 
                        __ZN4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEED2Ev, 
                        __ZN4llvm8RegistryINS_10GCStrategyENS_14RegistryTraitsIS1_EEE12ListenerHeadE, 
                        __ZN4llvm8RegistryINS_10GCStrategyENS_14RegistryTraitsIS1_EEE4HeadE, 
                        __ZN4llvm8RegistryINS_10GCStrategyENS_14RegistryTraitsIS1_EEE4TailE, 
                        __ZN4llvm8RegistryINS_17GCMetadataPrinterENS_14RegistryTraitsIS1_EEE12ListenerHeadE, 
                        __ZN4llvm8RegistryINS_17GCMetadataPrinterENS_14RegistryTraitsIS1_EEE4HeadE, 
                        __ZN4llvm8RegistryINS_17GCMetadataPrinterENS_14RegistryTraitsIS1_EEE4TailE, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE10getLoopForEPKS1_, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE12getLoopDepthEPKS1_, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE12isLoopHeaderEPS1_, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE3endEv, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE4rendEv, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE5beginEv, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE5emptyEv, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE5printERNS_11raw_ostreamE, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEE6rbeginEv, 
                        __ZNK4llvm12LoopInfoBaseINS_10BasicBlockENS_4LoopEEixEPKS1_, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE10getLoopForEPKS1_, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE12getLoopDepthEPKS1_, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE12isLoopHeaderEPS1_, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE3endEv, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE4rendEv, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE5beginEv, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE5emptyEv, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE5printERNS_11raw_ostreamE, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEE6rbeginEv, 
                        __ZNK4llvm12LoopInfoBaseINS_17MachineBasicBlockENS_11MachineLoopEEixEPKS1_, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE11DominatedByEPKS2_, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE11getChildrenEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE11getDFSNumInEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE12getDFSNumOutEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE14getNumChildrenEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE3endEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE5beginEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE7getIDomEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_10BasicBlockEE8getBlockEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE11DominatedByEPKS2_, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE11getChildrenEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE11getDFSNumInEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE12getDFSNumOutEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE14getNumChildrenEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE3endEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE5beginEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE7getIDomEv, 
                        __ZNK4llvm15DomTreeNodeBaseINS_17MachineBasicBlockEE8getBlockEv, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE11getRootNodeEv, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE20isReachableFromEntryEPKNS_15DomTreeNodeBaseIS1_EE, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE20isReachableFromEntryEPKS1_, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE23dominatedBySlowTreeWalkEPKNS_15DomTreeNodeBaseIS1_EES6_, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE5printERNS_11raw_ostreamE, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE7compareERS2_, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE7getIDomEPS1_, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE7getNodeEPS1_, 
                        __ZNK4llvm17DominatorTreeBaseINS_10BasicBlockEE7getRootEv, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE11getRootNodeEv, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE20isReachableFromEntryEPKNS_15DomTreeNodeBaseIS1_EE, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE20isReachableFromEntryEPKS1_, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE23dominatedBySlowTreeWalkEPKNS_15DomTreeNodeBaseIS1_EES6_, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE5printERNS_11raw_ostreamE, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE7compareERS2_, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE7getIDomEPS1_, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE7getNodeEPS1_, 
                        __ZNK4llvm17DominatorTreeBaseINS_17MachineBasicBlockEE7getRootEv, 
                        __ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE14getOptionWidthEv, 
                        __ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE15printOptionInfoEm, 
                        __ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE16printOptionValueEmb, 
                        __ZNK4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEE27getValueExpectedFlagDefaultEv, 
                        __ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE14getOptionWidthEv, 
                        __ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE15printOptionInfoEm, 
                        __ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE16printOptionValueEmb, 
                        __ZNK4llvm2cl3optIbLb0ENS0_6parserIbEEE27getValueExpectedFlagDefaultEv, 
                        __ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE14getOptionWidthEv, 
                        __ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE15printOptionInfoEm, 
                        __ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE16printOptionValueEmb, 
                        __ZNK4llvm2cl3optIcLb0ENS0_6parserIcEEE27getValueExpectedFlagDefaultEv, 
                        __ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE14getOptionWidthEv, 
                        __ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE15printOptionInfoEm, 
                        __ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE16printOptionValueEmb, 
                        __ZNK4llvm2cl3optIiLb0ENS0_6parserIiEEE27getValueExpectedFlagDefaultEv, 
                        __ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE14getOptionWidthEv, 
                        __ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE15printOptionInfoEm, 
                        __ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE16printOptionValueEmb, 
                        __ZNK4llvm2cl3optIjLb0ENS0_6parserIjEEE27getValueExpectedFlagDefaultEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE10verifyLoopEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE11block_beginEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE11getSubLoopsEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE12getExitBlockEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE12getExitEdgesERNS_15SmallVectorImplINSt3__14pairIPKS1_S8_EEEE, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE12getLoopDepthEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE12getLoopLatchEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE12getNumBlocksEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE13getExitBlocksERNS_15SmallVectorImplIPS1_EE, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE13getParentLoopEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE13isLoopExitingEPKS1_, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE14verifyLoopNestEPNS_8DenseSetIPKS2_NS_12DenseMapInfoIS6_EEEE, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE15getExitingBlockEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE15getNumBackEdgesEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE16getExitingBlocksERNS_15SmallVectorImplIPS1_EE, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE16getLoopPreheaderEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE18getLoopPredecessorEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE3endEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE4rendEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE5beginEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE5emptyEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE5printERNS_11raw_ostreamEj, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE6rbeginEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE8containsEPKS1_, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE8containsEPKS2_, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE9block_endEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE9getBlocksEv, 
                        __ZNK4llvm8LoopBaseINS_10BasicBlockENS_4LoopEE9getHeaderEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE10verifyLoopEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE11block_beginEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE11getSubLoopsEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE12getExitBlockEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE12getExitEdgesERNS_15SmallVectorImplINSt3__14pairIPKS1_S8_EEEE, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE12getLoopDepthEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE12getLoopLatchEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE12getNumBlocksEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE13getExitBlocksERNS_15SmallVectorImplIPS1_EE, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE13getParentLoopEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE13isLoopExitingEPKS1_, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE14verifyLoopNestEPNS_8DenseSetIPKS2_NS_12DenseMapInfoIS6_EEEE, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE15getExitingBlockEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE15getNumBackEdgesEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE16getExitingBlocksERNS_15SmallVectorImplIPS1_EE, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE16getLoopPreheaderEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE18getLoopPredecessorEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE3endEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE4rendEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE5beginEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE5emptyEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE5printERNS_11raw_ostreamEj, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE6rbeginEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE8containsEPKS1_, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE8containsEPKS2_, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE9block_endEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE9getBlocksEv, 
                        __ZNK4llvm8LoopBaseINS_17MachineBasicBlockENS_11MachineLoopEE9getHeaderEv, 
                        __ZTIN4llvm10FoldingSetINS_14AttributesImplEEE, 
                        __ZTIN4llvm10FoldingSetINS_17AttributeListImplEEE, 
                        __ZTIN4llvm10FoldingSetINS_22LoopDependenceAnalysis14DependencePairEEE, 
                        __ZTIN4llvm10FoldingSetINS_4SCEVEEE, __ZTIN4llvm10FoldingSetINS_6MDNodeEEE, 
                        __ZTIN4llvm10FoldingSetINS_6SDNodeEEE, __ZTIN4llvm10FoldingSetINS_9DIEAbbrevEEE, 
                        __ZTIN4llvm10ilist_nodeINS_10BasicBlockEEE, __ZTIN4llvm10ilist_nodeINS_10MCFragmentEEE, 
                        __ZTIN4llvm10ilist_nodeINS_11GlobalAliasEEE, __ZTIN4llvm10ilist_nodeINS_11IVStrideUseEEE, 
                        __ZTIN4llvm10ilist_nodeINS_11InstructionEEE, __ZTIN4llvm10ilist_nodeINS_14GlobalVariableEEE, 
                        __ZTIN4llvm10ilist_nodeINS_8ArgumentEEE, __ZTIN4llvm10ilist_nodeINS_8FunctionEEE, 
                        __ZTIN4llvm11MCInstrInfoE, __ZTIN4llvm11ObjectImageE, 
                        __ZTIN4llvm12JITRegistrarE, __ZTIN4llvm12ProfileInfoTINS_8FunctionENS_10BasicBlockEEE, 
                        __ZTIN4llvm12RegAllocBaseE, __ZTIN4llvm13DominatorBaseINS_10BasicBlockEEE, 
                        __ZTIN4llvm13DominatorBaseINS_17MachineBasicBlockEEE, 
                        __ZTIN4llvm14FoldingSetImpl4NodeE, __ZTIN4llvm14MCRegisterInfoE, 
                        __ZTIN4llvm14format_object1IdEE, __ZTIN4llvm14format_object1IhEE, 
                        __ZTIN4llvm14format_object1IjEE, __ZTIN4llvm14format_object1IxEE, 
                        __ZTIN4llvm14format_object1IyEE, __ZTIN4llvm14format_object2IddEE, 
                        __ZTIN4llvm14format_object3IjPKcS2_EE, __ZTIN4llvm14format_object5IjjjPKcS2_EE, 
                        __ZTIN4llvm15MCSubtargetInfoE, __ZTIN4llvm15PathProfileInfoE, 
                        __ZTIN4llvm15ValueHandleBaseE, __ZTIN4llvm15X86GenInstrInfoE, 
                        __ZTIN4llvm15ilist_half_nodeINS_10BasicBlockEEE, 
                        __ZTIN4llvm15ilist_half_nodeINS_10MCFragmentEEE, 
                        __ZTIN4llvm15ilist_half_nodeINS_11GlobalAliasEEE, 
                        __ZTIN4llvm15ilist_half_nodeINS_11IVStrideUseEEE, 
                        __ZTIN4llvm15ilist_half_nodeINS_11InstructionEEE, 
                        __ZTIN4llvm15ilist_half_nodeINS_14GlobalVariableEEE, 
                        __ZTIN4llvm15ilist_half_nodeINS_8ArgumentEEE, __ZTIN4llvm15ilist_half_nodeINS_8FunctionEEE, 
                        __ZTIN4llvm16MCObjectFileInfoE, __ZTIN4llvm17DominatorTreeBaseINS_10BasicBlockEEE, 
                        __ZTIN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEE, 
                        __ZTIN4llvm18RegisterPassParserINS_16RegisterRegAllocEEE, 
                        __ZTIN4llvm18RegisterPassParserINS_17RegisterSchedulerEEE, 
                        __ZTIN4llvm18RegisterPassParserINS_20MachineSchedRegistryEEE, 
                        __ZTIN4llvm18ValueMapCallbackVHIPKNS_10BasicBlockEPvNS_14ValueMapConfigIS3_EEEE, 
                        __ZTIN4llvm18ValueMapCallbackVHIPKNS_11GlobalValueEPvNS_20ExecutionEngineState16AddressMapConfigEEE, 
                        __ZTIN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_6WeakVHENS_14ValueMapConfigIS3_EEEE, 
                        __ZTIN4llvm18ValueMapCallbackVHIPNS_5ValueES2_NS_14ValueMapConfigIS2_EEEE, 
                        __ZTIN4llvm20DOTGraphTraitsViewerINS_10RegionInfoELb0EEE, 
                        __ZTIN4llvm20DOTGraphTraitsViewerINS_10RegionInfoELb1EEE, 
                        __ZTIN4llvm20DOTGraphTraitsViewerINS_13DominatorTreeELb0EEE, 
                        __ZTIN4llvm20DOTGraphTraitsViewerINS_13DominatorTreeELb1EEE, 
                        __ZTIN4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb0EEE, 
                        __ZTIN4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb1EEE, 
                        __ZTIN4llvm20MachineSchedStrategyE, __ZTIN4llvm21DOTGraphTraitsPrinterINS_10RegionInfoELb0EEE, 
                        __ZTIN4llvm21DOTGraphTraitsPrinterINS_10RegionInfoELb1EEE, 
                        __ZTIN4llvm21DOTGraphTraitsPrinterINS_13DominatorTreeELb0EEE, 
                        __ZTIN4llvm21DOTGraphTraitsPrinterINS_13DominatorTreeELb1EEE, 
                        __ZTIN4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb0EEE, 
                        __ZTIN4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb1EEE, 
                        __ZTIN4llvm27MCWinCOFFObjectTargetWriterE, __ZTIN4llvm2cl11OptionValueI17AsmWriterFlavorTyEE, 
                        __ZTIN4llvm2cl11OptionValueI20ShrinkWrapDebugLevelEE, 
                        __ZTIN4llvm2cl11OptionValueINS_11SplitEditor19ComplementSpillModeEEE, 
                        __ZTIN4llvm2cl11OptionValueINS_14PassDebugLevelEEE, 
                        __ZTIN4llvm2cl11OptionValueINS_6Region10PrintStyleEEE, 
                        __ZTIN4llvm2cl11OptionValueIPFPNS_12FunctionPassEvEEE, 
                        __ZTIN4llvm2cl11OptionValueIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE, 
                        __ZTIN4llvm2cl11OptionValueIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE, 
                        __ZTIN4llvm2cl11OptionValueIPKNS_8PassInfoEEE, 
                        __ZTIN4llvm2cl11OptionValueIbEE, __ZTIN4llvm2cl11OptionValueIcEE, 
                        __ZTIN4llvm2cl11OptionValueIdEE, __ZTIN4llvm2cl11OptionValueIiEE, 
                        __ZTIN4llvm2cl11OptionValueIjEE, __ZTIN4llvm2cl11opt_storageI17AsmWriterFlavorTyLb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageI20ShrinkWrapDebugLevelLb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageINS0_13boolOrDefaultELb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageINS_11SplitEditor19ComplementSpillModeELb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageINS_14PassDebugLevelELb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageINS_6Region10PrintStyleELb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ELb1EEE, 
                        __ZTIN4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ELb1EEE, 
                        __ZTIN4llvm2cl11opt_storageIPFPNS_12FunctionPassEvELb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageIbLb0ELb0EEE, __ZTIN4llvm2cl11opt_storageIbLb1ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageIcLb0ELb0EEE, __ZTIN4llvm2cl11opt_storageIdLb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageIiLb0ELb0EEE, __ZTIN4llvm2cl11opt_storageIjLb0ELb0EEE, 
                        __ZTIN4llvm2cl11opt_storageIjLb1ELb0EEE, __ZTIN4llvm2cl12basic_parserINS0_13boolOrDefaultEEE, 
                        __ZTIN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                        __ZTIN4llvm2cl12basic_parserIbEE, __ZTIN4llvm2cl12basic_parserIcEE, 
                        __ZTIN4llvm2cl12basic_parserIdEE, __ZTIN4llvm2cl12basic_parserIfEE, 
                        __ZTIN4llvm2cl12basic_parserIiEE, __ZTIN4llvm2cl12basic_parserIjEE, 
                        __ZTIN4llvm2cl12basic_parserIyEE, __ZTIN4llvm2cl12list_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbEE, 
                        __ZTIN4llvm2cl12list_storageIPKNS_8PassInfoEbEE, 
                        __ZTIN4llvm2cl15OptionValueBaseI17AsmWriterFlavorTyLb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseI20ShrinkWrapDebugLevelLb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseINS_11SplitEditor19ComplementSpillModeELb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseINS_14PassDebugLevelELb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseINS_6Region10PrintStyleELb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseIPFPNS_12FunctionPassEvELb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseIPKNS_8PassInfoELb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseIbLb0EEE, __ZTIN4llvm2cl15OptionValueBaseIcLb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseIdLb0EEE, __ZTIN4llvm2cl15OptionValueBaseIiLb0EEE, 
                        __ZTIN4llvm2cl15OptionValueBaseIjLb0EEE, __ZTIN4llvm2cl15OptionValueCopyI17AsmWriterFlavorTyEE, 
                        __ZTIN4llvm2cl15OptionValueCopyI20ShrinkWrapDebugLevelEE, 
                        __ZTIN4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyINS_11SplitEditor19ComplementSpillModeEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyINS_14PassDebugLevelEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyINS_6Region10PrintStyleEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyIPFPNS_12FunctionPassEvEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyIPKNS_8PassInfoEEE, 
                        __ZTIN4llvm2cl15OptionValueCopyIbEE, __ZTIN4llvm2cl15OptionValueCopyIcEE, 
                        __ZTIN4llvm2cl15OptionValueCopyIdEE, __ZTIN4llvm2cl15OptionValueCopyIiEE, 
                        __ZTIN4llvm2cl15OptionValueCopyIjEE, __ZTIN4llvm2cl3optI17AsmWriterFlavorTyLb0ENS0_6parserIS2_EEEE, 
                        __ZTIN4llvm2cl3optI20ShrinkWrapDebugLevelLb0ENS0_6parserIS2_EEEE, 
                        __ZTIN4llvm2cl3optINS0_13boolOrDefaultELb0ENS0_6parserIS2_EEEE, 
                        __ZTIN4llvm2cl3optINS_11SplitEditor19ComplementSpillModeELb0ENS0_6parserIS3_EEEE, 
                        __ZTIN4llvm2cl3optINS_14PassDebugLevelELb0ENS0_6parserIS2_EEEE, 
                        __ZTIN4llvm2cl3optINS_6Region10PrintStyleELb0ENS0_6parserIS3_EEEE, 
                        __ZTIN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE, 
                        __ZTIN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ENS0_6parserIS8_EEEE, 
                        __ZTIN4llvm2cl3optIPFPNS_12FunctionPassEvELb0ENS_18RegisterPassParserINS_16RegisterRegAllocEEEEE, 
                        __ZTIN4llvm2cl3optIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ENS_18RegisterPassParserINS_20MachineSchedRegistryEEEEE, 
                        __ZTIN4llvm2cl3optIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ENS_18RegisterPassParserINS_17RegisterSchedulerEEEEE, 
                        __ZTIN4llvm2cl3optIbLb0ENS0_6parserIbEEEE, __ZTIN4llvm2cl3optIbLb1ENS0_6parserIbEEEE, 
                        __ZTIN4llvm2cl3optIcLb0ENS0_6parserIcEEEE, __ZTIN4llvm2cl3optIdLb0ENS0_6parserIdEEEE, 
                        __ZTIN4llvm2cl3optIiLb0ENS0_6parserIiEEEE, __ZTIN4llvm2cl3optIjLb0ENS0_6parserIjEEEE, 
                        __ZTIN4llvm2cl3optIjLb1ENS0_6parserIjEEEE, __ZTIN4llvm2cl4listINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbNS0_6parserIS8_EEEE, 
                        __ZTIN4llvm2cl4listIPKNS_8PassInfoEbNS_14PassNameParserEEE, 
                        __ZTIN4llvm2cl6parserI17AsmWriterFlavorTyEE, __ZTIN4llvm2cl6parserI20ShrinkWrapDebugLevelEE, 
                        __ZTIN4llvm2cl6parserINS_11SplitEditor19ComplementSpillModeEEE, 
                        __ZTIN4llvm2cl6parserINS_14PassDebugLevelEEE, __ZTIN4llvm2cl6parserINS_6Region10PrintStyleEEE, 
                        __ZTIN4llvm2cl6parserIPFPNS_12FunctionPassEvEEE, 
                        __ZTIN4llvm2cl6parserIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE, 
                        __ZTIN4llvm2cl6parserIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE, 
                        __ZTIN4llvm2cl6parserIPKNS_8PassInfoEEE, __ZTIN4llvm3sys11ThreadLocalIKNS_21PrettyStackTraceEntryEEE, 
                        __ZTIN4llvm3sys11ThreadLocalIKNS_27CrashRecoveryContextCleanupEEE, 
                        __ZTIN4llvm4SCEVE, __ZTIN4llvm4yaml10ScalarNodeE, 
                        __ZTIN4llvm4yaml11MappingNodeE, __ZTIN4llvm4yaml12KeyValueNodeE, 
                        __ZTIN4llvm4yaml12SequenceNodeE, __ZTIN4llvm4yaml4NodeE, 
                        __ZTIN4llvm4yaml8NullNodeE, __ZTIN4llvm4yaml9AliasNodeE, 
                        __ZTIN4llvm6MCExprE, __ZTIN4llvm6object13ELFObjectFileILNS_7support10endiannessE0ELb0EEE, 
                        __ZTIN4llvm6object13ELFObjectFileILNS_7support10endiannessE0ELb1EEE, 
                        __ZTIN4llvm6object13ELFObjectFileILNS_7support10endiannessE1ELb0EEE, 
                        __ZTIN4llvm6object13ELFObjectFileILNS_7support10endiannessE1ELb1EEE, 
                        __ZTINSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE, 
                        __ZTINSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE, 
                        __ZTINSt3__113__vector_baseIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE, 
                        __ZTINSt3__113basic_filebufIcNS_11char_traitsIcEEEE, 
                        __ZTINSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, 
                        __ZTINSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE, 
                        __ZTINSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, 
                        __ZTINSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, 
                        __ZTINSt3__120__vector_base_commonILb1EEE, __ZTINSt3__121__basic_string_commonILb1EEE, 
                        __ZTINSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE, 
                        __ZTINSt3__16vectorIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE, 
                        __ZTSN4llvm10FoldingSetINS_14AttributesImplEEE, 
                        __ZTSN4llvm10FoldingSetINS_17AttributeListImplEEE, 
                        __ZTSN4llvm10FoldingSetINS_22LoopDependenceAnalysis14DependencePairEEE, 
                        __ZTSN4llvm10FoldingSetINS_4SCEVEEE, __ZTSN4llvm10FoldingSetINS_6MDNodeEEE, 
                        __ZTSN4llvm10FoldingSetINS_6SDNodeEEE, __ZTSN4llvm10FoldingSetINS_9DIEAbbrevEEE, 
                        __ZTSN4llvm10ilist_nodeINS_10BasicBlockEEE, __ZTSN4llvm10ilist_nodeINS_10MCFragmentEEE, 
                        __ZTSN4llvm10ilist_nodeINS_11GlobalAliasEEE, __ZTSN4llvm10ilist_nodeINS_11IVStrideUseEEE, 
                        __ZTSN4llvm10ilist_nodeINS_11InstructionEEE, __ZTSN4llvm10ilist_nodeINS_14GlobalVariableEEE, 
                        __ZTSN4llvm10ilist_nodeINS_8ArgumentEEE, __ZTSN4llvm10ilist_nodeINS_8FunctionEEE, 
                        __ZTSN4llvm11MCInstrInfoE, __ZTSN4llvm11ObjectImageE, 
                        __ZTSN4llvm12JITRegistrarE, __ZTSN4llvm12ProfileInfoTINS_8FunctionENS_10BasicBlockEEE, 
                        __ZTSN4llvm12RegAllocBaseE, __ZTSN4llvm13DominatorBaseINS_10BasicBlockEEE, 
                        __ZTSN4llvm13DominatorBaseINS_17MachineBasicBlockEEE, 
                        __ZTSN4llvm14FoldingSetImpl4NodeE, __ZTSN4llvm14MCRegisterInfoE, 
                        __ZTSN4llvm14format_object1IdEE, __ZTSN4llvm14format_object1IhEE, 
                        __ZTSN4llvm14format_object1IjEE, __ZTSN4llvm14format_object1IxEE, 
                        __ZTSN4llvm14format_object1IyEE, __ZTSN4llvm14format_object2IddEE, 
                        __ZTSN4llvm14format_object3IjPKcS2_EE, __ZTSN4llvm14format_object5IjjjPKcS2_EE, 
                        __ZTSN4llvm15MCSubtargetInfoE, __ZTSN4llvm15PathProfileInfoE, 
                        __ZTSN4llvm15ValueHandleBaseE, __ZTSN4llvm15X86GenInstrInfoE, 
                        __ZTSN4llvm15ilist_half_nodeINS_10BasicBlockEEE, 
                        __ZTSN4llvm15ilist_half_nodeINS_10MCFragmentEEE, 
                        __ZTSN4llvm15ilist_half_nodeINS_11GlobalAliasEEE, 
                        __ZTSN4llvm15ilist_half_nodeINS_11IVStrideUseEEE, 
                        __ZTSN4llvm15ilist_half_nodeINS_11InstructionEEE, 
                        __ZTSN4llvm15ilist_half_nodeINS_14GlobalVariableEEE, 
                        __ZTSN4llvm15ilist_half_nodeINS_8ArgumentEEE, __ZTSN4llvm15ilist_half_nodeINS_8FunctionEEE, 
                        __ZTSN4llvm16MCObjectFileInfoE, __ZTSN4llvm17DominatorTreeBaseINS_10BasicBlockEEE, 
                        __ZTSN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEE, 
                        __ZTSN4llvm18RegisterPassParserINS_16RegisterRegAllocEEE, 
                        __ZTSN4llvm18RegisterPassParserINS_17RegisterSchedulerEEE, 
                        __ZTSN4llvm18RegisterPassParserINS_20MachineSchedRegistryEEE, 
                        __ZTSN4llvm18ValueMapCallbackVHIPKNS_10BasicBlockEPvNS_14ValueMapConfigIS3_EEEE, 
                        __ZTSN4llvm18ValueMapCallbackVHIPKNS_11GlobalValueEPvNS_20ExecutionEngineState16AddressMapConfigEEE, 
                        __ZTSN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_6WeakVHENS_14ValueMapConfigIS3_EEEE, 
                        __ZTSN4llvm18ValueMapCallbackVHIPNS_5ValueES2_NS_14ValueMapConfigIS2_EEEE, 
                        __ZTSN4llvm20DOTGraphTraitsViewerINS_10RegionInfoELb0EEE, 
                        __ZTSN4llvm20DOTGraphTraitsViewerINS_10RegionInfoELb1EEE, 
                        __ZTSN4llvm20DOTGraphTraitsViewerINS_13DominatorTreeELb0EEE, 
                        __ZTSN4llvm20DOTGraphTraitsViewerINS_13DominatorTreeELb1EEE, 
                        __ZTSN4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb0EEE, 
                        __ZTSN4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb1EEE, 
                        __ZTSN4llvm20MachineSchedStrategyE, __ZTSN4llvm21DOTGraphTraitsPrinterINS_10RegionInfoELb0EEE, 
                        __ZTSN4llvm21DOTGraphTraitsPrinterINS_10RegionInfoELb1EEE, 
                        __ZTSN4llvm21DOTGraphTraitsPrinterINS_13DominatorTreeELb0EEE, 
                        __ZTSN4llvm21DOTGraphTraitsPrinterINS_13DominatorTreeELb1EEE, 
                        __ZTSN4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb0EEE, 
                        __ZTSN4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb1EEE, 
                        __ZTSN4llvm27MCWinCOFFObjectTargetWriterE, __ZTSN4llvm2cl11OptionValueI17AsmWriterFlavorTyEE, 
                        __ZTSN4llvm2cl11OptionValueI20ShrinkWrapDebugLevelEE, 
                        __ZTSN4llvm2cl11OptionValueINS_11SplitEditor19ComplementSpillModeEEE, 
                        __ZTSN4llvm2cl11OptionValueINS_14PassDebugLevelEEE, 
                        __ZTSN4llvm2cl11OptionValueINS_6Region10PrintStyleEEE, 
                        __ZTSN4llvm2cl11OptionValueIPFPNS_12FunctionPassEvEEE, 
                        __ZTSN4llvm2cl11OptionValueIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE, 
                        __ZTSN4llvm2cl11OptionValueIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE, 
                        __ZTSN4llvm2cl11OptionValueIPKNS_8PassInfoEEE, 
                        __ZTSN4llvm2cl11OptionValueIbEE, __ZTSN4llvm2cl11OptionValueIcEE, 
                        __ZTSN4llvm2cl11OptionValueIdEE, __ZTSN4llvm2cl11OptionValueIiEE, 
                        __ZTSN4llvm2cl11OptionValueIjEE, __ZTSN4llvm2cl11opt_storageI17AsmWriterFlavorTyLb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageI20ShrinkWrapDebugLevelLb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageINS0_13boolOrDefaultELb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageINS_11SplitEditor19ComplementSpillModeELb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageINS_14PassDebugLevelELb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageINS_6Region10PrintStyleELb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ELb1EEE, 
                        __ZTSN4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ELb1EEE, 
                        __ZTSN4llvm2cl11opt_storageIPFPNS_12FunctionPassEvELb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageIbLb0ELb0EEE, __ZTSN4llvm2cl11opt_storageIbLb1ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageIcLb0ELb0EEE, __ZTSN4llvm2cl11opt_storageIdLb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageIiLb0ELb0EEE, __ZTSN4llvm2cl11opt_storageIjLb0ELb0EEE, 
                        __ZTSN4llvm2cl11opt_storageIjLb1ELb0EEE, __ZTSN4llvm2cl12basic_parserINS0_13boolOrDefaultEEE, 
                        __ZTSN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                        __ZTSN4llvm2cl12basic_parserIbEE, __ZTSN4llvm2cl12basic_parserIcEE, 
                        __ZTSN4llvm2cl12basic_parserIdEE, __ZTSN4llvm2cl12basic_parserIfEE, 
                        __ZTSN4llvm2cl12basic_parserIiEE, __ZTSN4llvm2cl12basic_parserIjEE, 
                        __ZTSN4llvm2cl12basic_parserIyEE, __ZTSN4llvm2cl12list_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbEE, 
                        __ZTSN4llvm2cl12list_storageIPKNS_8PassInfoEbEE, 
                        __ZTSN4llvm2cl15OptionValueBaseI17AsmWriterFlavorTyLb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseI20ShrinkWrapDebugLevelLb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseINS_11SplitEditor19ComplementSpillModeELb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseINS_14PassDebugLevelELb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseINS_6Region10PrintStyleELb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseIPFPNS_12FunctionPassEvELb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseIPKNS_8PassInfoELb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseIbLb0EEE, __ZTSN4llvm2cl15OptionValueBaseIcLb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseIdLb0EEE, __ZTSN4llvm2cl15OptionValueBaseIiLb0EEE, 
                        __ZTSN4llvm2cl15OptionValueBaseIjLb0EEE, __ZTSN4llvm2cl15OptionValueCopyI17AsmWriterFlavorTyEE, 
                        __ZTSN4llvm2cl15OptionValueCopyI20ShrinkWrapDebugLevelEE, 
                        __ZTSN4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyINS_11SplitEditor19ComplementSpillModeEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyINS_14PassDebugLevelEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyINS_6Region10PrintStyleEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyIPFPNS_12FunctionPassEvEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyIPKNS_8PassInfoEEE, 
                        __ZTSN4llvm2cl15OptionValueCopyIbEE, __ZTSN4llvm2cl15OptionValueCopyIcEE, 
                        __ZTSN4llvm2cl15OptionValueCopyIdEE, __ZTSN4llvm2cl15OptionValueCopyIiEE, 
                        __ZTSN4llvm2cl15OptionValueCopyIjEE, __ZTSN4llvm2cl3optI17AsmWriterFlavorTyLb0ENS0_6parserIS2_EEEE, 
                        __ZTSN4llvm2cl3optI20ShrinkWrapDebugLevelLb0ENS0_6parserIS2_EEEE, 
                        __ZTSN4llvm2cl3optINS0_13boolOrDefaultELb0ENS0_6parserIS2_EEEE, 
                        __ZTSN4llvm2cl3optINS_11SplitEditor19ComplementSpillModeELb0ENS0_6parserIS3_EEEE, 
                        __ZTSN4llvm2cl3optINS_14PassDebugLevelELb0ENS0_6parserIS2_EEEE, 
                        __ZTSN4llvm2cl3optINS_6Region10PrintStyleELb0ENS0_6parserIS3_EEEE, 
                        __ZTSN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE, 
                        __ZTSN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ENS0_6parserIS8_EEEE, 
                        __ZTSN4llvm2cl3optIPFPNS_12FunctionPassEvELb0ENS_18RegisterPassParserINS_16RegisterRegAllocEEEEE, 
                        __ZTSN4llvm2cl3optIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ENS_18RegisterPassParserINS_20MachineSchedRegistryEEEEE, 
                        __ZTSN4llvm2cl3optIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ENS_18RegisterPassParserINS_17RegisterSchedulerEEEEE, 
                        __ZTSN4llvm2cl3optIbLb0ENS0_6parserIbEEEE, __ZTSN4llvm2cl3optIbLb1ENS0_6parserIbEEEE, 
                        __ZTSN4llvm2cl3optIcLb0ENS0_6parserIcEEEE, __ZTSN4llvm2cl3optIdLb0ENS0_6parserIdEEEE, 
                        __ZTSN4llvm2cl3optIiLb0ENS0_6parserIiEEEE, __ZTSN4llvm2cl3optIjLb0ENS0_6parserIjEEEE, 
                        __ZTSN4llvm2cl3optIjLb1ENS0_6parserIjEEEE, __ZTSN4llvm2cl4listINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbNS0_6parserIS8_EEEE, 
                        __ZTSN4llvm2cl4listIPKNS_8PassInfoEbNS_14PassNameParserEEE, 
                        __ZTSN4llvm2cl6parserI17AsmWriterFlavorTyEE, __ZTSN4llvm2cl6parserI20ShrinkWrapDebugLevelEE, 
                        __ZTSN4llvm2cl6parserINS_11SplitEditor19ComplementSpillModeEEE, 
                        __ZTSN4llvm2cl6parserINS_14PassDebugLevelEEE, __ZTSN4llvm2cl6parserINS_6Region10PrintStyleEEE, 
                        __ZTSN4llvm2cl6parserIPFPNS_12FunctionPassEvEEE, 
                        __ZTSN4llvm2cl6parserIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE, 
                        __ZTSN4llvm2cl6parserIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE, 
                        __ZTSN4llvm2cl6parserIPKNS_8PassInfoEEE, __ZTSN4llvm3sys11ThreadLocalIKNS_21PrettyStackTraceEntryEEE, 
                        __ZTSN4llvm3sys11ThreadLocalIKNS_27CrashRecoveryContextCleanupEEE, 
                        __ZTSN4llvm4SCEVE, __ZTSN4llvm4yaml10ScalarNodeE, 
                        __ZTSN4llvm4yaml11MappingNodeE, __ZTSN4llvm4yaml12KeyValueNodeE, 
                        __ZTSN4llvm4yaml12SequenceNodeE, __ZTSN4llvm4yaml4NodeE, 
                        __ZTSN4llvm4yaml8NullNodeE, __ZTSN4llvm4yaml9AliasNodeE, 
                        __ZTSN4llvm6MCExprE, __ZTSN4llvm6object13ELFObjectFileILNS_7support10endiannessE0ELb0EEE, 
                        __ZTSN4llvm6object13ELFObjectFileILNS_7support10endiannessE0ELb1EEE, 
                        __ZTSN4llvm6object13ELFObjectFileILNS_7support10endiannessE1ELb0EEE, 
                        __ZTSN4llvm6object13ELFObjectFileILNS_7support10endiannessE1ELb1EEE, 
                        __ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE, 
                        __ZTSNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE, 
                        __ZTSNSt3__113__vector_baseIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE, 
                        __ZTSNSt3__113basic_filebufIcNS_11char_traitsIcEEEE, 
                        __ZTSNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, 
                        __ZTSNSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE, 
                        __ZTSNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, 
                        __ZTSNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, 
                        __ZTSNSt3__120__vector_base_commonILb1EEE, __ZTSNSt3__121__basic_string_commonILb1EEE, 
                        __ZTSNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE, 
                        __ZTSNSt3__16vectorIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE, 
                        __ZTVN4llvm17DominatorTreeBaseINS_10BasicBlockEEE, 
                        __ZTVN4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEE, 
                        __ZTVN4llvm2cl12basic_parserINS0_13boolOrDefaultEEE, 
                        __ZTVN4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, 
                        __ZTVN4llvm2cl12basic_parserIbEE, __ZTVN4llvm2cl12basic_parserIcEE, 
                        __ZTVN4llvm2cl12basic_parserIdEE, __ZTVN4llvm2cl12basic_parserIfEE, 
                        __ZTVN4llvm2cl12basic_parserIiEE, __ZTVN4llvm2cl12basic_parserIjEE, 
                        __ZTVN4llvm2cl12basic_parserIyEE, __ZTVN4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE, 
                        __ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE, __ZTVN4llvm2cl3optIcLb0ENS0_6parserIcEEEE, 
                        __ZTVN4llvm2cl3optIiLb0ENS0_6parserIiEEEE, __ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE ]
...
                                                                                                                                                                                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL.tbd0100644 0001750 0001750 00000005155 12571375070 031300  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        ---
archs:           [ i386, x86_64 ]
platform:        macosx
install-name:    /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
exports:         
  - archs:           [ i386, x86_64 ]
    re-exports:      [ /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib, 
                       /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib ]
    symbols:         [ _CGLAreContextsShared, _CGLBackDispatch, _CGLChoosePixelFormat, 
                       _CGLClearDrawable, _CGLCopyContext, _CGLCreateContext, 
                       _CGLCreatePBuffer, _CGLDescribePBuffer, _CGLDescribePixelFormat, 
                       _CGLDescribeRenderer, _CGLDestroyContext, _CGLDestroyPBuffer, 
                       _CGLDestroyPixelFormat, _CGLDestroyRendererInfo, 
                       _CGLDisable, _CGLEnable, _CGLErrorString, _CGLFlushDrawable, 
                       _CGLFrontDispatch, _CGLGetContextRetainCount, _CGLGetDeviceFromGLRenderer, 
                       _CGLGetGlobalOption, _CGLGetNextContext, _CGLGetOffScreen, 
                       _CGLGetOption, _CGLGetPBuffer, _CGLGetPBufferRetainCount, 
                       _CGLGetParameter, _CGLGetPixelFormat, _CGLGetPixelFormatRetainCount, 
                       _CGLGetShareGroup, _CGLGetSurface, _CGLGetVersion, 
                       _CGLGetVirtualScreen, _CGLIsEnabled, _CGLLockContext, 
                       _CGLOpenCLMuxLockDown, _CGLQueryRendererInfo, _CGLReleaseContext, 
                       _CGLReleasePBuffer, _CGLReleasePixelFormat, _CGLRestoreDispatch, 
                       _CGLRestoreDispatchFunction, _CGLRetainContext, 
                       _CGLRetainPBuffer, _CGLRetainPixelFormat, _CGLSelectDispatch, 
                       _CGLSelectDispatchBounded, _CGLSelectDispatchFunction, 
                       _CGLSetFullScreen, _CGLSetFullScreenOnDisplay, _CGLSetGlobalOption, 
                       _CGLSetOffScreen, _CGLSetOption, _CGLSetPBuffer, 
                       _CGLSetPBufferVolatileState, _CGLSetParameter, _CGLSetSurface, 
                       _CGLSetVirtualScreen, _CGLTexImageIOSurface2D, _CGLTexImagePBuffer, 
                       _CGLUnlockContext, _CGLUpdateContext, _GLCDescribePixelFormat, 
                       _GLCGetPBuffer, _GLCGetParameter, _GLCGetProfilerStorage, 
                       _GLCGetSurface, _GLCGetVirtualScreen, _GLCSetProfilerStorage, 
                       _cglBadApplicationNotMuxAwareLockDown, _glcDebugListener, 
                       _glcGetIOAccelService, _glcNoop, _glcPluginConnect, 
                       _glcPluginCount, _glcPluginDisconnect, _glcRecordError ]
...
                                                                                                                                                                                                                                                                                                                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework/Versions/Current     0120777 0001750 0001750 00000000000 12620245063 030733  2A                                                                                                   ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework/module.map           0100644 0001750 0001750 00000002026 12566173266 027456  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        framework module OpenGL [extern_c] {
  umbrella header "OpenGL.h"

  module CGLRenderers { 
    header "CGLRenderers.h"
    export *
  }

  module CGLDevice {
    header "CGLDevice.h"
    export *
  }
  
  export *
  module * { 
    export *
  }

  module GLTypes {
    header "gltypes.h"
    export *
  }

  explicit module GL3 {
    header "gl3.h"
    export GLTypes
    export *    

    explicit module Ext {
      header "gl3ext.h"
      export *    
    }
  }

  explicit module IOSurface {
    header "CGLIOSurface.h"
    export *
  }

  explicit module GL {
    header "gl.h"
    export GLTypes
    export *    

    explicit module Ext {
      header "glext.h"
      export *    
    }

    explicit module GLU {
      header "glu.h"
      export *

      explicit module Macro {
        header "gluMacro.h"
        header "gluContext.h"
        export *
      }
    }

    explicit module Macro {
      header "CGLMacro.h"
      header "CGLContext.h"
      header "gliContext.h"
      header "gliDispatch.h"
      export *
    }
  }
}

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/                       0040755 0001750 0001750 00000000000 12612224743 025066  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Headers                0120777 0001750 0001750 00000000000 12620245063 033105  2Versions/Current/Headers                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Modules                0120777 0001750 0001750 00000000000 12620245063 033177  2Versions/Current/Modules                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/PCSC.tbd               0120777 0001750 0001750 00000000000 12620245063 032757  2Versions/Current/PCSC.tbd                                                                           ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/              0040755 0001750 0001750 00000000000 12612224743 026676  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/            0040755 0001750 0001750 00000000000 12612224743 027056  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Headers/    0040755 0001750 0001750 00000000000 12612224743 030431  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        mscdefines.h                                                                                        0100644 0001750 0001750 00000012555 12566213765 032662  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Headers                                                                        /*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 *
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

/******************************************************************

        MUSCLE SmartCard Development ( http://www.linuxnet.com )
            Title  : mscdefines.h
            Package: MuscleCard Framework
            Author : David Corcoran
            Date   : 10/02/01
            License: Copyright (C) 2001-2002 David Corcoran
                     <corcoran@linuxnet.com>
            Purpose: This provides high level definitions for
                     data types, structures.

	    You may not remove this header from this file
	    without prior permission from the author.
   
********************************************************************/

#ifndef __mscdefines_h__
#define __mscdefines_h__

#ifdef __cplusplus
extern "C"
{
#endif

#ifdef WIN32
#include "../win32/win32_pcsclite.h"
#else
#include "pcsclite.h"
#endif

#ifndef __APPLE__
#include <winscard.h>
#else
#include <PCSC/winscard.h>
#endif

#include <stdint.h>

#ifdef MSC_ARCH_WIN32
#define MAX_BUFFER_SIZE		265
#endif

	/*
	 * Some type defines used in MuscleCard 
	 */

	typedef uint32_t MSC_RV;
	typedef char MSCChar8;
	typedef uint8_t *MSCPUChar8;
	typedef const uint8_t *MSCPCUChar8;
	typedef uint8_t MSCUChar8;
	typedef uint16_t *MSCPUShort16;
	typedef uint16_t MSCUShort16;
	typedef int16_t *MSCPShort16;
	typedef int16_t MSCShort16;
	typedef uint32_t *MSCPULong32;
	typedef uint32_t MSCULong32;
	typedef int32_t *MSCPLong32;
	typedef int32_t MSCLong32;
	typedef const void *MSCPCVoid32;
	typedef void *MSCPVoid32;
	typedef const char *MSCCString;
	typedef char *MSCString;

	typedef struct
	{
		MSCPVoid32 pvfWriteFramework;
		MSCPVoid32 pvfInitializePlugin;
		MSCPVoid32 pvfIdentifyToken;
		MSCPVoid32 pvfFinalizePlugin;
		MSCPVoid32 pvfGetStatus;
		MSCPVoid32 pvfGetCapabilities;
		MSCPVoid32 pvfExtendedFeature;
		MSCPVoid32 pvfGenerateKeys;
		MSCPVoid32 pvfImportKey;
		MSCPVoid32 pvfExportKey;
		MSCPVoid32 pvfComputeCrypt;
		MSCPVoid32 pvfExtAuthenticate;
		MSCPVoid32 pvfListKeys;
		MSCPVoid32 pvfCreatePIN;
		MSCPVoid32 pvfVerifyPIN;
		MSCPVoid32 pvfChangePIN;
		MSCPVoid32 pvfUnblockPIN;
		MSCPVoid32 pvfListPINs;
		MSCPVoid32 pvfCreateObject;
		MSCPVoid32 pvfDeleteObject;
		MSCPVoid32 pvfWriteObject;
		MSCPVoid32 pvfReadObject;
		MSCPVoid32 pvfListObjects;
		MSCPVoid32 pvfLogoutAll;
		MSCPVoid32 pvfGetChallenge;

	}
	CFDyLibPointers, *LPCFDyLibPointers;

#define MSC_MAXSIZE_TOKENAME      150
#define MSC_MAXSIZE_SVCPROV       200
#define MSC_MAXSIZE_OBJID          16
#define MSC_MAXSIZE_AID            64
#define MSC_MAXSIZE_MAC           128
#define MSC_MAXSIZE_LABEL          32
#define MSC_MAXSIZE_CERT_ISSUER    512
#define MSC_MAXSIZE_CERT_SUBJECT   512
#define MSC_MAXSIZE_CERT_SERIAL    512
#define MSC_MAXSIZE_BUFFER     MAX_BUFFER_SIZE

	typedef struct
	{
	        MSCChar8 tokenName[MSC_MAXSIZE_TOKENAME]; /* Token name */ 
                MSCChar8 slotName[MAX_READERNAME];	/* Slot/reader name */
		MSCChar8 svProvider[MSC_MAXSIZE_SVCPROV]; /* Library */
		MSCUChar8 tokenId[MAX_ATR_SIZE];     /* Token ID (ATR) */
		MSCUChar8 tokenApp[MSC_MAXSIZE_AID]; /* Default app ID */
		MSCULong32 tokenAppLen;	  /* Default AID Length */
		MSCULong32 tokenIdLength; /* ID Length (ATR Length) */
		MSCULong32 tokenState;	  /* State (dwEventState) */
		MSCULong32 tokenType;	  /* Type - RFU */
		MSCPVoid32 addParams;	  /* Additional Data */
		MSCULong32 addParamsSize; /* Size of additional data */
	}
	MSCTokenInfo, *MSCLPTokenInfo;

	/*
	 * Callback function definitions 
	 */

	typedef MSCULong32(*MSCCallBack) (MSCLPTokenInfo, MSCULong32,
					  MSCPVoid32);

	typedef struct
	{
		MSCULong32 arraySize;
		MSCLPTokenInfo tokenArray;
		MSCPVoid32 appData;
		MSCCallBack callBack;
	}
	MSCEventWaitInfo, *MSCLPEventWaitInfo;

	typedef MSC_RV(*LPRWEventCallback) (MSCPVoid32, int);

	typedef struct
	{
		MSCLong32 hContext;	      /* Handle to resource manager */
		MSCLong32 hCard;	      /* Handle to the connection */
		LPSCARD_IO_REQUEST ioType;    /* Type of protocol */
		MSCUChar8 pMac[MSC_MAXSIZE_MAC];  /* MAC code */
		MSCULong32 macSize;	      /* Size of the MAC code */
		MSCPVoid32 tokenLibHandle;    /* Handle to token library */
		CFDyLibPointers libPointers;  /* Function pointers */
		MSCTokenInfo tokenInfo;	/* token information */
		MSCUChar8 loggedIDs;	/* Verification bit mask */
		MSCULong32 shareMode;	/* Sharing mode for this */
		LPRWEventCallback rwCallback;	/* Registered callback */
	}
	MSCTokenConnection, *MSCLPTokenConnection;

#define MSC_OK MSC_SUCCESS

#ifdef __cplusplus
}
#endif

#endif							/* __mscdefines_h__ */
                                                                                                                                                   musclecard.h                                                                                        0100644 0001750 0001750 00000072745 12566213765 032673  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Headers                                                                        /*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 *
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

/******************************************************************
 
        MUSCLE SmartCard Development ( http://www.linuxnet.com )
            Title  : musclecard.h
            Package: MuscleCard Framework
            Author : David Corcoran
            Date   : 11/28/01
            License: Copyright (C) 2001 David Corcoran
                     <corcoran@linuxnet.com>
            Purpose: This abstracts the MUSCLE Card Edge Inteface

	    You may not remove this header from this file
	    without prior permission from the author.
 
********************************************************************/

#ifndef __musclecard_h__
#define __musclecard_h__

#ifdef __cplusplus
extern "C"
{
#endif

#ifdef WIN32
#include "PCSC.h"
#endif

#ifndef __APPLE__
#include <mscdefines.h>
#else
#include <PCSC/mscdefines.h>
#endif

	/****************
     * Return codes *
     ****************/

	/** success */
#define MSC_SUCCESS                        0x9000

	/** There have been memory problems on the card */
#define MSC_NO_MEMORY_LEFT                 0x9C01
	/** Entered PIN is not correct */
#define MSC_AUTH_FAILED                    0x9C02
	/** Required operation is not allowed in actual circumstances */
#define MSC_OPERATION_NOT_ALLOWED          0x9C03
	/** Required operation is inconsistent with memory contents */
#define MSC_INCONSISTENT_STATUS            0x9C04
	/** Required feature is not (yet) supported */
#define MSC_UNSUPPORTED_FEATURE            0x9C05
	/** Required operation was not authorized because of a lack of privileges */
#define MSC_UNAUTHORIZED                   0x9C06
	/** Required object is missing */
#define MSC_OBJECT_NOT_FOUND               0x9C07
	/** New object ID already in use */
#define MSC_OBJECT_EXISTS                  0x9C08
	/** Algorithm specified is not correct */
#define MSC_INCORRECT_ALG                  0x9C09

	/** Verify operation detected an invalid signature */
#define MSC_SIGNATURE_INVALID              0x9C0B
	/** Operation has been blocked for security reason  */
#define MSC_IDENTITY_BLOCKED               0x9C0C
	/** Unspecified error */
#define MSC_UNSPECIFIED_ERROR              0x9C0D
	/** PCSC and driver transport errors */
#define MSC_TRANSPORT_ERROR                0x9C0E
	/** Invalid parameter given */
#define MSC_INVALID_PARAMETER              0x9C0F
	/** Incorrect P1 parameter */
#define MSC_INCORRECT_P1                   0x9C10
	/** Incorrect P2 parameter */
#define MSC_INCORRECT_P2                   0x9C11
	/** End of sequence */
#define MSC_SEQUENCE_END                   0x9C12
	/** For debugging purposes */
#define MSC_INTERNAL_ERROR                 0x9CFF

	/*******************************************************/
	/*
	 * These returns are beyond the protocol specification 
	 */
	/*
	 * and only exist here to provide return codes for the 
	 */
	/*
	 * additional functions provided by the MuscleCard API 
	 */
	/*
	 * beyond the protocol specification.  
	 */
	/*******************************************************/

	/** A blocking event has been cancelled */
#define MSC_CANCELLED                      0x9C50
	/*
	 * The buffer provided is too short 
	 */
#define MSC_INSUFFICIENT_BUFFER            0x9C51
	/*
	 * The selected token is not recognized 
	 */
#define MSC_UNRECOGNIZED_TOKEN             0x9C52
	/*
	 * The PC/SC services is not available 
	 */
#define MSC_SERVICE_UNRESPONSIVE           0x9C53
	/*
	 * The action has timed out 
	 */
#define MSC_TIMEOUT_OCCURRED               0x9C54
	/*
	 * The token has been removed 
	 */
#define MSC_TOKEN_REMOVED                  0x9C55
	/*
	 * The token has been reset 
	 */
#define MSC_TOKEN_RESET                    0x9C56
	/*
	 * The token has been inserted 
	 */
#define MSC_TOKEN_INSERTED                 0x9C57
	/*
	 * The token is unresponsive 
	 */
#define MSC_TOKEN_UNRESPONSIVE             0x9C58
	/*
	 * The handle is invalid 
	 */
#define MSC_INVALID_HANDLE                 0x9C59
	/*
	 * Invalid sharing 
	 */
#define MSC_SHARING_VIOLATION              0x9C60


#define MSC_BLOCKSTATUS_RESUME             0x0000
#define MSC_BLOCKSTATUS_BLOCKING           0x0001
#define MSC_BLOCKSTATUS_CANCELLING         0x0002

	/*
	 * Some boundary defines 
	 */
#define MSC_MAX_KEYS                       16
#define MSC_MAX_PINS                        8
#define MSC_SIZEOF_KEYPACKET              200
#define MSC_MAXSIZEOF_APDU_DATALEN        255
#define MSC_PERCENT_STEPSIZE             1000
#define MSC_SINGLE_READ_PACKET            255
#define MSC_MAXSIZE_TOKENARRAY            255

	/*
	 * KeyPair Generation algorithms 
	 */
#define MSC_GEN_ALG_RSA	        0x00
#define MSC_GEN_ALG_RSA_CRT	0x01
#define MSC_GEN_ALG_DSA	        0x02
#define MSC_GEN_ALG_DES	        0x03
#define MSC_GEN_ALG_3DES	0x04
#define MSC_GEN_ALG_3DES3	0x05

	/*
	 * Blob encodings in KeyBlob structure 
	 */
#define MSC_BLOB_ENC_PLAIN	0x00
#define MSC_BLOB_ENC_CRYPT	0x01

	/*
	 * Key Type in Key Blobs 
	 */
#define MSC_KEY_RSA_PUBLIC       0x01
#define MSC_KEY_RSA_PRIVATE      0x02
#define MSC_KEY_RSA_PRIVATE_CRT  0x03
#define MSC_KEY_DSA_PUBLIC       0x04
#define MSC_KEY_DSA_PRIVATE      0x05
#define MSC_KEY_DES              0x06
#define MSC_KEY_3DES             0x07
#define MSC_KEY_3DES3            0x08

	/*
	 * Key generation options TODO: add other 
	 */
#define MSC_OPT_DEFAULT		 0x00
#define MSC_OPT_RSA_PUB_EXP      0x01
#define MSC_OPT_DSA_GPQ          0x02

	/*
	 * Cipher operations in ComputeCrypt() 
	 */
#define MSC_CIPHER_INIT	        0x01
#define MSC_CIPHER_PROCESS	0x02
#define MSC_CIPHER_FINAL	0x03

	/*
	 * Cipher modes in ComputeCrypt() 
	 */
#define MSC_MODE_RSA_NOPAD	0x00
#define MSC_MODE_RSA_PAD_PKCS1	0x01
#define MSC_MODE_DSA_SHA	0x10
#define MSC_MODE_DES_CBC_NOPAD	0x20
#define MSC_MODE_DES_ECB_NOPAD	0x21

	/*
	 * Cipher directions 
	 */
#define MSC_DIR_SIGN		0x01
#define MSC_DIR_VERIFY		0x02
#define MSC_DIR_ENCRYPT		0x03
#define MSC_DIR_DECRYPT		0x04

	/*
	 * Sequence options in ListXXX() 
	 */
#define MSC_SEQUENCE_RESET	0x00
#define MSC_SEQUENCE_NEXT	0x01

	/*
	 * Zero flag in DeleteObject() 
	 */
#define MSC_ZF_DEFAULT	0x00
#define MSC_ZF_WRITE_ZERO	0x01

	/*
	 * Some defines for ID's Bitmask 
	 */
#define MSC_AUT_ALL       0x0000
#define MSC_AUT_NONE      0xFFFF

#define MSC_AUT_PIN_0     0x0001
#define MSC_AUT_PIN_1     0x0002
#define MSC_AUT_PIN_2     0x0004
#define MSC_AUT_PIN_3     0x0008
#define MSC_AUT_PIN_4     0x0010

#define MSC_AUT_KEY_0     0x0100
#define MSC_AUT_KEY_1     0x0200
#define MSC_AUT_KEY_2     0x0400
#define MSC_AUT_KEY_3     0x0800
#define MSC_AUT_KEY_4     0x1000
#define MSC_AUT_KEY_5     0x2000

#define MSC_AUT_USR_0     0x4000
#define MSC_AUT_USR_1     0x8000

	/*
	 * This structure allows you to customize your MuscleCard. It is used
	 * in MSCWriteFramework to specify attributes you may want to set in
	 * this 'personalization' routine and will be getting new values in
	 * future revisions of the API 
	 */

#define MSC_INIT_DEFAULT_KEY     0x00	/* Use card's default transport
										 * key */
#define MSC_INIT_IGNORE_KEY      0x01	/* Don't verify any key at all */
#define MSC_INIT_USE_KEY         0x02	/* Use the key in this struct */

	typedef struct
	{
		MSCUChar8 transportKey[MAX_BUFFER_SIZE];
		MSCULong32 transportKeyLen;
		MSCUChar8  transportBehavior;
		MSCULong32 objectMemory;

		MSCUChar8  newTransportKey[MAX_BUFFER_SIZE];
		MSCULong32 newTransportKeyLen;

		MSCUChar8  defaultCHV[MAX_BUFFER_SIZE];
		MSCULong32 defaultCHVLen;
		MSCUChar8  defaultCHVTries;

		MSCUChar8  defaultCHVUnblock[MAX_BUFFER_SIZE];
		MSCULong32 defaultCHVUnblockSize;
		MSCUChar8  defaultCHVUnblockTries;

		MSCUShort16 createObjectACL;
		MSCUShort16 createKeysACL;
		MSCUShort16 createPINsACL;

		MSCUChar8   maxNumberKeys;
		MSCUChar8   maxNumberPINs;
		MSCUShort16 maxNumberObjects;

	}
	MSCInitTokenParams, *MSCLPInitTokenParams;

	/*
	 * Direction policy bitmasks for MSCKeyPolicy 
	 */
#define MSC_KEYPOLICY_MODE_RSA_NOPAD      0x0001
#define MSC_KEYPOLICY_MODE_RSA_PAD_PKCS1  0x0002
#define MSC_KEYPOLICY_MODE_DSA_SHA        0x0004
#define MSC_KEYPOLICY_MODE_DES_CBC_NOPAD  0x0008
#define MSC_KEYPOLICY_MODE_DES_ECB_NOPAD  0x0010

#define MSC_KEYPOLICY_DIR_SIGN            0x0100
#define MSC_KEYPOLICY_DIR_VERIFY          0x0200
#define MSC_KEYPOLICY_DIR_ENCRYPT         0x0400
#define MSC_KEYPOLICY_DIR_DECRYPT         0x0800

	typedef struct
	{
		MSCUShort16 cipherMode;
		MSCUShort16 cipherDirection;
	}
	MSCKeyPolicy, *MSCLPKeyPolicy;

	typedef struct
	{
		MSCUShort16 readPermission;
		MSCUShort16 writePermission;
		MSCUShort16 usePermission;
	}
	MSCKeyACL, *MSCLPKeyACL;

	typedef struct
	{
		MSCUShort16 readPermission;
		MSCUShort16 writePermission;
		MSCUShort16 deletePermission;
	}
	MSCObjectACL, *MSCLPObjectACL, MSCCertACL, *MSCLPCertACL;

	typedef struct
	{
		MSCUChar8 algoType;
		MSCUShort16 keySize;
		MSCKeyACL privateKeyACL;
		MSCKeyACL publicKeyACL;
		MSCKeyPolicy privateKeyPolicy;
		MSCKeyPolicy publicKeyPolicy;
		MSCUChar8 keyGenOptions;
		MSCPUChar8 pOptParams;
		MSCULong32 optParamsSize;
	}
	MSCGenKeyParams, *MSCLPGenKeyParams;

	typedef MSCPUChar8 MSCLPKeyBlob;

	typedef struct
	{
		MSCUChar8 keyNum;
		MSCUChar8 keyType;
		MSCUChar8 keyPartner;   /* Do not use (deprecated) */
	        MSCUChar8 keyMapping;   /* Do not use (deprecated) */
		MSCUShort16 keySize;
		MSCKeyPolicy keyPolicy;
		MSCKeyACL keyACL;
	}
	MSCKeyInfo, *MSCLPKeyInfo;

	typedef struct
	{
		MSCUChar8 keyNum;
		MSCUChar8 cipherMode;
		MSCUChar8 cipherDirection;
		MSCPUChar8 optParams;
		MSCUShort16 optParamsSize;
	}
	MSCCryptInit, *MSCLPCryptInit;

	/*
	 * Scope definitions for MSCListTokens 
	 */
#define MSC_LIST_KNOWN     1	/* Lists known tokens only */
#define MSC_LIST_SLOTS     2	/* Lists all slots, with or without tokens 
								 */
#define MSC_LIST_ALL       3	/* Lists all tokens, known or not */

#define MSC_TOKEN_EMPTY_STR    "Token Removed"
#define MSC_TOKEN_UNKNOWN_STR  "Token Unknown"

#define MSC_TOKEN_TYPE_REMOVED   1	/* Token was removed at one point */
#define MSC_TOKEN_TYPE_UNKNOWN   2	/* Token is unknown, state is fine */
#define MSC_TOKEN_TYPE_KNOWN     4	/* Token is known, state is fine */
#define MSC_TOKEN_TYPE_RESET     8	/* Token is known, was reset */

	/*
	 * endAction definitions for MSCReleaseConnection 
	 */
#define MSC_LEAVE_TOKEN    SCARD_LEAVE_CARD
#define MSC_RESET_TOKEN    SCARD_RESET_CARD
#define MSC_EJECT_TOKEN    SCARD_EJECT_CARD

	/*
	 * sharingMode for MSCEstablishConnection 
	 */
#define MSC_SHARE_SHARED     SCARD_SHARE_SHARED
#define MSC_SHARE_EXCLUSIVE  SCARD_SHARE_EXCLUSIVE
#define MSC_SHARE_DIRECT     SCARD_SHARE_DIRECT

	/*
	 * tokenState for MSCWaitForTokenEvent 
	 */
#define MSC_STATE_UNAWARE      0x4000
#define MSC_STATE_CHANGED      SCARD_STATE_CHANGED
#define MSC_STATE_UNKNOWN      SCARD_STATE_UNKNOWN
#define MSC_STATE_UNAVAILABLE  SCARD_STATE_UNAVAILABLE
#define MSC_STATE_EMPTY        SCARD_STATE_EMPTY
#define MSC_STATE_PRESENT      SCARD_STATE_PRESENT
#define MSC_STATE_EXCLUSIVE    SCARD_STATE_EXCLUSIVE
#define MSC_STATE_INUSE        SCARD_STATE_INUSE
#define MSC_STATE_MUTE         SCARD_STATE_MUTE

#define MSC_NO_TIMEOUT         INFINITE

/********************** TAGS for GetStatus ********************************/

	/*
	 * high level tags 
	 */
#define MSC_TAG_SUPPORT_FUNCTIONS     101	/* Supported functions */
#define MSC_TAG_SUPPORT_CRYPTOALG     102	/* Supported crypto algorithms 
											 */

	/*
	 * crypto related tags 
	 */
#define MSC_TAG_CAPABLE_RSA           103	/* RSA capabilities */
#define MSC_TAG_CAPABLE_DSA           104	/* DSA capabilities */
#define MSC_TAG_CAPABLE_ECURVE        105	/* Eliptic Curve capabilities */
#define MSC_TAG_CAPABLE_ELGAMAL       106	/* El Gamal capabilities */

#define MSC_TAG_CAPABLE_KEY_AUTH      180	/* Key import/gen AUT needed */

#define MSC_TAG_CAPABLE_DES           201	/* DES capabilities */
#define MSC_TAG_CAPABLE_3DES          202	/* Triple DES capabilities */
#define MSC_TAG_CAPABLE_IDEA          203	/* IDEA capabilities */
#define MSC_TAG_CAPABLE_AES           204	/* AES capabilities */
#define MSC_TAG_CAPABLE_BLOWFISH      205	/* Blowfish capabilities */
#define MSC_TAG_CAPABLE_TWOFISH       206	/* Twofish capabilities */

#define MSC_TAG_CAPABLE_MD5           207	/* MD5 capabilities */
#define MSC_TAG_CAPABLE_SHA1          208	/* SHA1 capabilities */

	/*
	 * object related tags 
	 */
#define MSC_TAG_CAPABLE_OBJ_ATTR      301	/* returns general attributes */
#define MSC_TAG_CAPABLE_OBJ_IDSIZE    302	/* returns size of object id */
#define MSC_TAG_CAPABLE_OBJ_AUTH      303	/* return AUT needed for
											 * create */
#define MSC_TAG_CAPABLE_OBJ_MAXNUM    304	/* maximum number of objects */

	/*
	 * pin related tags 
	 */
#define MSC_TAG_CAPABLE_PIN_ATTR      401	/* returns general attributes */
#define MSC_TAG_CAPABLE_PIN_MAXNUM    402	/* returns max number of pins */
#define MSC_TAG_CAPABLE_PIN_MINSIZE   403	/* returns minimum pin size */
#define MSC_TAG_CAPABLE_PIN_MAXSIZE   404	/* returns maximum pin size */
#define MSC_TAG_CAPABLE_PIN_CHARSET   405	/* char set supported
											 * (bitmask) */
#define MSC_TAG_CAPABLE_PIN_POLICY    406	/* returns pin policy
											 * (bitmask) */
#define MSC_TAG_CAPABLE_PIN_AUTH      407	/* return AUT needed for
											 * create */

#define MSC_TAG_CAPABLE_ID_STATE      501	/* returns state capability */

#define MSC_TAG_CAPABLE_RANDOM        600	/* Random number capabilities */
#define MSC_TAG_CAPABLE_RANDOM_MAX    601	/* Maximum random number */
#define MSC_TAG_CAPABLE_RANDOM_MIN    602	/* Minimum random number */

/********************************** END OF TAGS ***************************/

	/*
	 * Bitmask for TAG MSC_TAG_SUPPORT_FUNCTIONS 
	 */
#define MSC_SUPPORT_GENKEYS           0x00000001
#define MSC_SUPPORT_IMPORTKEY         0x00000002
#define MSC_SUPPORT_EXPORTKEY         0x00000004
#define MSC_SUPPORT_COMPUTECRYPT      0x00000008
#define MSC_SUPPORT_EXTAUTH           0x00000010
#define MSC_SUPPORT_LISTKEYS          0x00000020
#define MSC_SUPPORT_CREATEPIN         0x00000040
#define MSC_SUPPORT_VERIFYPIN         0x00000080
#define MSC_SUPPORT_CHANGEPIN         0x00000100
#define MSC_SUPPORT_UNBLOCKPIN        0x00000200
#define MSC_SUPPORT_LISTPINS          0x00000400
#define MSC_SUPPORT_CREATEOBJECT      0x00000800
#define MSC_SUPPORT_DELETEOBJECT      0x00001000
#define MSC_SUPPORT_WRITEOBJECT       0x00002000
#define MSC_SUPPORT_READOBJECT        0x00004000
#define MSC_SUPPORT_LISTOBJECTS       0x00008000
#define MSC_SUPPORT_LOGOUTALL         0x00010000
#define MSC_SUPPORT_GETCHALLENGE      0x00020000

	/*
	 * Bitmask for MSC_TAG_SUPPORT_CRYPTOALG 
	 */
#define MSC_SUPPORT_RSA           0x00000001	/* Supports RSA */
#define MSC_SUPPORT_DSA           0x00000002	/* Supports DSA */
#define MSC_SUPPORT_ECURVE        0x00000004	/* Supports Eliptic Curve */
#define MSC_SUPPORT_ELGAMAL       0x00000008	/* Supports El Gamal */

#define MSC_SUPPORT_DES           0x00000010	/* Supports DES */
#define MSC_SUPPORT_3DES          0x00000020	/* Supports Triple DES */
#define MSC_SUPPORT_IDEA          0x00000040	/* Supports IDEA */
#define MSC_SUPPORT_AES           0x00000080	/* Supports AES */
#define MSC_SUPPORT_BLOWFISH      0x00000100	/* Supports Blowfish */
#define MSC_SUPPORT_TWOFISH       0x00000200	/* Supports Twofish */
#define MSC_SUPPORT_SHA1          0x00000400	/* Supports SHA1 */
#define MSC_SUPPORT_MD5           0x00000800	/* Supports MD5 */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_RSA 
	 */
#define MSC_CAPABLE_RSA_512       0x00000001	/* Supports 512 bit RSA */
#define MSC_CAPABLE_RSA_768       0x00000002	/* Supports 768 bit RSA */
#define MSC_CAPABLE_RSA_1024      0x00000004	/* Supports 1024 bit RSA */
#define MSC_CAPABLE_RSA_2048      0x00000008	/* Supports 2048 bit RSA */
#define MSC_CAPABLE_RSA_4096      0x00000010	/* Supports 4096 bit RSA */

#define MSC_CAPABLE_RSA_KEYGEN    0x00001000	/* Support RSA key-gen */
#define MSC_CAPABLE_RSA_NOPAD     0x00002000	/* Supports RSA NO PAD */
#define MSC_CAPABLE_RSA_PKCS1     0x00004000	/* Supports PKCS padding */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_DSA 
	 */
#define MSC_CAPABLE_DSA_512       0x00000001	/* Supports 512 bit DSA */
#define MSC_CAPABLE_DSA_768       0x00000002	/* Supports 768 bit DSA */
#define MSC_CAPABLE_DSA_1024      0x00000004	/* Supports 1024 bit DSA */
#define MSC_CAPABLE_DSA_2048      0x00000008	/* Supports 2048 bit DSA */
#define MSC_CAPABLE_DSA_4096      0x00000010	/* Supports 4096 bit DSA */
#define MSC_CAPABLE_DSA_KEYGEN    0x00001000	/* Supports DSA key-gen */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_DES 
	 */
#define MSC_CAPABLE_DES_KEYGEN    0x00001000	/* Supports DES key-gen */
#define MSC_CAPABLE_DES_CBC       0x00002000	/* Supports DES CBC mode */
#define MSC_CAPABLE_DES_EBC       0x00004000	/* Supports DES EBC mode */
#define MSC_CAPABLE_DES_ECB       0x00008000	/* Supports DES ECB mode */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_3DES 
	 */
#define MSC_CAPABLE_3DES_KEYGEN   0x00001000	/* Supports 3DES key-gen */
#define MSC_CAPABLE_3DES_3KEY     0x00002000	/* Support 3 key 3DES */
#define MSC_CAPABLE_3DES_CBC      0x00004000	/* Supports 3DES CBC mode */
#define MSC_CAPABLE_3DES_EBC      0x00008000	/* Supports 3DES EBC mode */
#define MSC_CAPABLE_3DES_ECB      0x00010000	/* Supports 3DES ECB mode */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_IDEA 
	 */
#define MSC_CAPABLE_IDEA_KEYGEN   0x00001000	/* Supports IDEA key-gen */
#define MSC_CAPABLE_IDEA_CBC      0x00002000	/* Supports IDEA CBC mode */
#define MSC_CAPABLE_IDEA_ECB      0x00008000	/* Supports IDEA ECB mode */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_AES 
	 */
#define MSC_CAPABLE_AES_KEYGEN    0x00001000	/* Supports AES key-gen */
#define MSC_CAPABLE_AES_CBC       0x00002000	/* Supports AES CBC mode */
#define MSC_CAPABLE_AES_ECB       0x00008000	/* Supports AES ECB mode */

	/***********************************
     Bitmasks for other crypto algorithms 
     will come in future releases 
    ************************************/

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_OBJ_ATTR 
	 */
#define MSC_CAPABLE_OBJ_ZERO      0x00010000	/* Supports zero on DEL */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_PIN_ATTR 
	 */
#define MSC_CAPABLE_PIN_RESET     0x00000100	/* Unblock reset's pin */
#define MSC_CAPABLE_PIN_LEAVE     0x00000200	/* Unblock leaves pin */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_PIN_CHARSET 
	 */
#define MSC_CAPABLE_PIN_A_Z       0x00000001	/* Supports uppercase A-Z */
#define MSC_CAPABLE_PIN_a_z       0x00000002	/* Supports lowercase a-z */
#define MSC_CAPABLE_PIN_0_9       0x00000004	/* Supports numbers 0-9 */
#define MSC_CAPABLE_PIN_SPACE     0x00000008	/* Supports spaces */
#define MSC_CAPABLE_PIN_CALC      0x00000010	/* Supports + - / * % .= */
#define MSC_CAPABLE_PIN_NONALPHA  0x00000020	/* Supports all other
												 * chars */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_PIN_POLICY 
	 */
#define MSC_CAPABLE_PIN_A_Z       0x00000001	/* Requires uppercase A-Z */
#define MSC_CAPABLE_PIN_a_z       0x00000002	/* Requires lowercase a-z */
#define MSC_CAPABLE_PIN_0_9       0x00000004	/* Requires numbers 0-9 */
#define MSC_CAPABLE_PIN_NONALPHA  0x00000020	/* Requires
												 * non-alphanumeric */
#define MSC_CAPABLE_PIN_HISTORY   0x00001000	/* Checks pin history */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_ID_STATE 
	 */
#define MSC_CAPABLE_ID_STATE      0x00000001	/* maintains logged id
												 * state */

	/*
	 * Bitmask for TAG MSC_TAG_CAPABLE_RANDOM 
	 */
#define MSC_CAPABLE_RANDOM_SEED   0x00000001	/* Uses supplied seed */

	/*
	 * Structure used in MSCGetStatus to return status and capability
	 * information about the inserted token 
	 */

	typedef struct
	{
		MSCUShort16 appVersion;	/* Applet version number */
		MSCUShort16 swVersion;	/* Software version number */
		MSCULong32 freeMemory;	/* Free memory for objects */
		MSCULong32 totalMemory;	/* Total amount of memory */
		MSCUChar8 usedPINs;		/* Number of pins used */
		MSCUChar8 usedKeys;		/* Number of keys used */
		MSCUShort16 loggedID;	/* Bitmask of ID's verified */
	}
	MSCStatusInfo, *MSCLPStatusInfo;

	typedef struct
	{
		MSCChar8 objectID[MSC_MAXSIZE_OBJID];
		MSCULong32 objectSize;
		MSCObjectACL objectACL;
	}
	MSCObjectInfo, *MSCLPObjectInfo;

	/*******************************************************************/
	/*
	 * Connection oriented functions 
	 */
	/*
	 * These functions do not coorespond to internal library funcions 
	 */
	/*
	 * but serve to connect to tokens.  You can still use the internal 
	 */
	/*
	 * PC/SC calls to do this.  These provide an abstract means.  
	 */
	/*******************************************************************/

	/*
	 * Lists all known tokens on the system 
	 */
#ifdef WIN32
	PCSC_API
#endif
	 MSC_RV MSCListTokens(MSCULong32 listScope,	/* defines the scope to
												 * return */
		MSCLPTokenInfo tokenArray,	/* token struct array */
		MSCPULong32 arrayLength	/* Length of array */
		);

	/*
	 * Establishes a connection to the specified token 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCEstablishConnection(MSCLPTokenInfo tokenStruct,	/* The
																 * struct
																 * of
																 * token */
		MSCULong32 sharingMode,	/* Mode of sharing */
		MSCPUChar8 applicationName,	/* The applet ID/Name */
		MSCULong32 nameSize,	/* The ID/Name Size */
		MSCLPTokenConnection pConnection	/* Returned connection */
		);

	/*
	 * Releases a connection to the specified token 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCReleaseConnection(MSCLPTokenConnection pConnection,	/* Connection 
																	 * handle 
																	 */
		MSCULong32 endAction	/* Action to perform */
		);

	/*
	 * Blocks for an event to occur on a token 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCWaitForTokenEvent(MSCLPTokenInfo tokenArray,	/* Array of
															 * token
															 * structs */
		MSCULong32 arraySize,	/* Size of the array */
		MSCULong32 timeoutValue	/* Timeout */
		);

	/*
	 * Cancels a pending MSCWaitForTokenEvent 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCCancelEventWait(void	/* No parameters */
		);

	/*
	 * Registers a callback function for event change 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCCallbackForTokenEvent(MSCLPTokenInfo tokenArray,	/* Array
																 * of
																 * token
																 * structs 
																 */
		MSCULong32 arraySize,	/* Size of the array */
		MSCCallBack callBack,	/* Callback function */
		MSCPVoid32 appData		/* Application data */
		);

	/*
	 * Cancels all callback registrations 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCCallbackCancelEvent(void);

	/*
	 * Locks a transaction to the token 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCBeginTransaction(MSCLPTokenConnection pConnection	/* Connection 
																 * handle */
		);

	/*
	 * Releases a locked transaction to the token 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCEndTransaction(MSCLPTokenConnection pConnection,	/* Connection 
																 * handle */
		MSCULong32 endAction	/* Action to perform on token */
		);

	/*
	 * Selects applet - Not to be used by applications 
	 */
	MSC_RV MSCSelectAID(MSCLPTokenConnection pConnection,
		MSCPUChar8 aidValue, MSCULong32 aidSize);

	/*
	 * Pre-personalization function 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCWriteFramework(MSCLPTokenConnection pConnection,
		MSCLPInitTokenParams pInitParams);

	/*****************************************************************/
	/*
	 * Core Musclecard functions 
	 */
	/*
	 * These functions coorespond directly to internal library 
	 */
	/*
	 * functions.  
	 */
	/*****************************************************************/

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCGetStatus(MSCLPTokenConnection pConnection,
		MSCLPStatusInfo pStatusInfo);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCGetCapabilities(MSCLPTokenConnection pConnection,
		MSCULong32 Tag, MSCPUChar8 Value, MSCPULong32 Length);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCExtendedFeature(MSCLPTokenConnection pConnection,
		MSCULong32 extFeature,
		MSCPUChar8 outData,
		MSCULong32 outLength, MSCPUChar8 inData, MSCPULong32 inLength);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCGenerateKeys(MSCLPTokenConnection pConnection,
		MSCUChar8 prvKeyNum,
		MSCUChar8 pubKeyNum, MSCLPGenKeyParams pParams);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCImportKey(MSCLPTokenConnection pConnection,
		MSCUChar8 keyNum,
		MSCLPKeyACL pKeyACL,
		MSCPUChar8 pKeyBlob,
		MSCULong32 keyBlobSize,
		MSCLPKeyPolicy keyPolicy,
		MSCPVoid32 pAddParams, MSCUChar8 addParamsSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCExportKey(MSCLPTokenConnection pConnection,
		MSCUChar8 keyNum,
		MSCPUChar8 pKeyBlob,
		MSCPULong32 keyBlobSize,
		MSCPVoid32 pAddParams, MSCUChar8 addParamsSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCComputeCrypt(MSCLPTokenConnection pConnection,
		MSCLPCryptInit cryptInit,
		MSCPUChar8 pInputData,
		MSCULong32 inputDataSize,
		MSCPUChar8 pOutputData, MSCPULong32 outputDataSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCExtAuthenticate(MSCLPTokenConnection pConnection,
				  MSCUChar8 keyNum,
				  MSCUChar8 cipherMode,
				  MSCUChar8 cipherDirection, 
				  MSCPUChar8 pData, 
				  MSCULong32 dataSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCListKeys(MSCLPTokenConnection pConnection,
			   MSCUChar8 seqOption, 
			   MSCLPKeyInfo pKeyInfo);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCCreatePIN(MSCLPTokenConnection pConnection,
			    MSCUChar8 pinNum,
			    MSCUChar8 pinAttempts,
			    MSCPUChar8 pPinCode,
			    MSCULong32 pinCodeSize,
			    MSCPUChar8 pUnblockCode, 
			    MSCUChar8 unblockCodeSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCVerifyPIN(MSCLPTokenConnection pConnection,
			    MSCUChar8 pinNum, 
			    MSCPUChar8 pPinCode, 
			    MSCULong32 pinCodeSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCChangePIN(MSCLPTokenConnection pConnection,
		MSCUChar8 pinNum,
		MSCPUChar8 pOldPinCode,
		MSCUChar8 oldPinCodeSize,
		MSCPUChar8 pNewPinCode, MSCUChar8 newPinCodeSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCUnblockPIN(MSCLPTokenConnection pConnection,
		MSCUChar8 pinNum,
		MSCPUChar8 pUnblockCode, MSCULong32 unblockCodeSize);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCListPINs(MSCLPTokenConnection pConnection,
		MSCPUShort16 pPinBitMask);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCCreateObject(MSCLPTokenConnection pConnection,
		MSCString objectID,
		MSCULong32 objectSize, MSCLPObjectACL pObjectACL);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCDeleteObject(MSCLPTokenConnection pConnection,
		MSCString objectID, MSCUChar8 zeroFlag);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCWriteObject(MSCLPTokenConnection pConnection,
		MSCString objectID, MSCULong32 offset, 
		MSCPUChar8 pInputData, MSCULong32 dataSize,
		LPRWEventCallback rwCallback, MSCPVoid32 addParams);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCReadObject(MSCLPTokenConnection pConnection,
		MSCString objectID, MSCULong32 offset, 
                MSCPUChar8 pOutputData, MSCULong32 dataSize,
		LPRWEventCallback rwCallback, MSCPVoid32 addParams);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCReadAllocateObject(MSCLPTokenConnection pConnection,
		MSCString objectID, MSCPUChar8 *pOutputData, 
                MSCPULong32 dataSize,
                LPRWEventCallback rwCallback, MSCPVoid32 addParams);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCListObjects(MSCLPTokenConnection pConnection,
		MSCUChar8 seqOption, MSCLPObjectInfo pObjectInfo);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCLogoutAll(MSCLPTokenConnection pConnection);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCGetChallenge(MSCLPTokenConnection pConnection,
		MSCPUChar8 pSeed,
		MSCUShort16 seedSize,
		MSCPUChar8 pRandomData, MSCUShort16 randomDataSize);

	/*****************************************************************/
	/*
	 * Extended Musclecard functions 
	 */
	/*
	 * These functions do not coorespond to internal library funcions 
	 */
	/*
	 * but rather use them to provide some extended functionality.  
	 */
	/*****************************************************************/

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCGetKeyAttributes(MSCLPTokenConnection pConnection,
				   MSCUChar8 keyNumber, 
				   MSCLPKeyInfo pKeyInfo);

#ifdef WIN32
	PCSC_API
#endif
	MSC_RV MSCGetObjectAttributes(MSCLPTokenConnection pConnection,
				      MSCString objectID, 
				      MSCLPObjectInfo pObjectInfo);

#ifdef WIN32
	PCSC_API
#endif
	char *msc_error(unsigned long int errorCode);

	/*
	 * Was the token reset ? 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSCUChar8 MSCIsTokenReset(MSCLPTokenConnection pConnection);

	/*
	 * Clear the Reset state 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSCUChar8 MSCClearReset(MSCLPTokenConnection pConnection);

	/*
	 * Was the token moved (removed, removed/inserted) ? 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSCUChar8 MSCIsTokenMoved(MSCLPTokenConnection pConnection);

	/*
	 * Did any state change with the token ? 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSCUChar8 MSCIsTokenChanged(MSCLPTokenConnection pConnection);

	/*
	 * Is the token recognized ? 
	 */
#ifdef WIN32
	PCSC_API
#endif
	MSCUChar8 MSCIsTokenKnown(MSCLPTokenConnection pConnection);

#ifdef __cplusplus
}
#endif

#endif							/* __musclecard_h__ */
                           pcsclite.h                                                                                          0100644 0001750 0001750 00000037654 12566213765 032357  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Headers                                                                        /*
 * Copyright (c) 2000-2006 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 *
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

/*
 * MUSCLE SmartCard Development ( http://www.linuxnet.com )
 *
 * Copyright (C) 1999-2004
 *  David Corcoran <corcoran@linuxnet.com>
 *  Ludovic Rousseau <ludovic.rousseau@free.fr>
 *
 * $Id: pcsclite.h 123 2010-03-27 10:50:42Z ludovic.rousseau@gmail.com $
 */

/**
 * @file
 * @brief This keeps a list of defines for pcsc-lite.
 *
 * Error codes from http://msdn.microsoft.com/en-us/library/aa924526.aspx
 */

#ifndef __pcsclite_h__
#define __pcsclite_h__

#include <stdint.h>

#ifdef __cplusplus
extern "C"
{
#endif

    typedef int32_t SCARDCONTEXT; /**< \p hContext returned by SCardEstablishContext() */
    typedef SCARDCONTEXT *PSCARDCONTEXT;
    typedef SCARDCONTEXT *LPSCARDCONTEXT;
    typedef int32_t SCARDHANDLE; /**< \p hCard returned by SCardConnect() */
    typedef SCARDHANDLE *PSCARDHANDLE;
    typedef SCARDHANDLE *LPSCARDHANDLE;

#define MAX_ATR_SIZE			33	/**< Maximum ATR size */

    /* Set structure elements aligment on bytes
     * http://gcc.gnu.org/onlinedocs/gcc/Structure_002dPacking-Pragmas.html */
#ifdef __APPLE__
#pragma pack(1)
#else
#pragma pack(push, 1)
#endif

    typedef struct
    {
        const char *szReader;
        void *pvUserData;
        uint32_t dwCurrentState;
        uint32_t dwEventState;
        uint32_t cbAtr;
        unsigned char rgbAtr[MAX_ATR_SIZE];
    }
    SCARD_READERSTATE_A;

    typedef SCARD_READERSTATE_A SCARD_READERSTATE, *PSCARD_READERSTATE_A,
	*LPSCARD_READERSTATE_A;

    /** Protocol Control Information (PCI) */
    typedef struct _SCARD_IO_REQUEST
    {
        uint32_t dwProtocol;	/**< Protocol identifier */
        uint32_t cbPciLength;	/**< Protocol Control Inf Length */
    }
    SCARD_IO_REQUEST, *PSCARD_IO_REQUEST, *LPSCARD_IO_REQUEST;

    typedef const SCARD_IO_REQUEST *LPCSCARD_IO_REQUEST;

    extern SCARD_IO_REQUEST g_rgSCardT0Pci, g_rgSCardT1Pci,
	g_rgSCardRawPci;

    /* restore default structure elements alignment */
#ifdef __APPLE__
#pragma pack()
#else
#pragma pack(pop)
#endif

#define SCARD_PCI_T0	(&g_rgSCardT0Pci) /**< protocol control information (PCI) for T=0 */
#define SCARD_PCI_T1	(&g_rgSCardT1Pci) /**< protocol control information (PCI) for T=1 */
#define SCARD_PCI_RAW	(&g_rgSCardRawPci) /**< protocol control information (PCI) for RAW protocol */

    /** error codes from http://msdn.microsoft.com/en-us/library/aa924526.aspx
     */
#define SCARD_S_SUCCESS			0x00000000 /**< No error was encountered. */
#define SCARD_F_INTERNAL_ERROR		0x80100001 /**< An internal consistency check failed. */
#define SCARD_E_CANCELLED		0x80100002 /**< The action was cancelled by an SCardCancel request. */
#define SCARD_E_INVALID_HANDLE		0x80100003 /**< The supplied handle was invalid. */
#define SCARD_E_INVALID_PARAMETER	0x80100004 /**< One or more of the supplied parameters could not be properly interpreted. */
#define SCARD_E_INVALID_TARGET		0x80100005 /**< Registry startup information is missing or invalid. */
#define SCARD_E_NO_MEMORY		0x80100006 /**< Not enough memory available to complete this command. */
#define SCARD_F_WAITED_TOO_LONG		0x80100007 /**< An internal consistency timer has expired. */
#define SCARD_E_INSUFFICIENT_BUFFER	0x80100008 /**< The data buffer to receive returned data is too small for the returned data. */
#define SCARD_E_UNKNOWN_READER		0x80100009 /**< The specified reader name is not recognized. */
#define SCARD_E_TIMEOUT			0x8010000A /**< The user-specified timeout value has expired. */
#define SCARD_E_SHARING_VIOLATION	0x8010000B /**< The smart card cannot be accessed because of other connections outstanding. */
#define SCARD_E_NO_SMARTCARD		0x8010000C /**< The operation requires a Smart Card, but no Smart Card is currently in the device. */
#define SCARD_E_UNKNOWN_CARD		0x8010000D /**< The specified smart card name is not recognized. */
#define SCARD_E_CANT_DISPOSE		0x8010000E /**< The system could not dispose of the media in the requested manner. */
#define SCARD_E_PROTO_MISMATCH		0x8010000F /**< The requested protocols are incompatible with the protocol currently in use with the smart card. */
#define SCARD_E_NOT_READY		0x80100010 /**< The reader or smart card is not ready to accept commands. */
#define SCARD_E_INVALID_VALUE		0x80100011 /**< One or more of the supplied parameters values could not be properly interpreted. */
#define SCARD_E_SYSTEM_CANCELLED	0x80100012 /**< The action was cancelled by the system, presumably to log off or shut down. */
#define SCARD_F_COMM_ERROR		0x80100013 /**< An internal communications error has been detected. */
#define SCARD_F_UNKNOWN_ERROR		0x80100014 /**< An internal error has been detected, but the source is unknown. */
#define SCARD_E_INVALID_ATR		0x80100015 /**< An ATR obtained from the registry is not a valid ATR string. */
#define SCARD_E_NOT_TRANSACTED		0x80100016 /**< An attempt was made to end a non-existent transaction. */
#define SCARD_E_READER_UNAVAILABLE	0x80100017 /**< The specified reader is not currently available for use. */
#define SCARD_P_SHUTDOWN		0x80100018 /**< The operation has been aborted to allow the server application to exit. */
#define SCARD_E_PCI_TOO_SMALL		0x80100019 /**< The PCI Receive buffer was too small. */
#define SCARD_E_READER_UNSUPPORTED	0x8010001A /**< The reader driver does not meet minimal requirements for support. */
#define SCARD_E_DUPLICATE_READER	0x8010001B /**< The reader driver did not produce a unique reader name. */
#define SCARD_E_CARD_UNSUPPORTED	0x8010001C /**< The smart card does not meet minimal requirements for support. */
#define SCARD_E_NO_SERVICE		0x8010001D /**< The Smart card resource manager is not running. */
#define SCARD_E_SERVICE_STOPPED		0x8010001E /**< The Smart card resource manager has shut down. */
#define SCARD_E_UNEXPECTED		0x8010001F /**< An unexpected card error has occurred. */
#define SCARD_E_ICC_INSTALLATION	0x80100020 /**< No primary provider can be found for the smart card. */
#define SCARD_E_ICC_CREATEORDER		0x80100021 /**< The requested order of object creation is not supported. */
    /* #define SCARD_E_UNSUPPORTED_FEATURE	0x80100022 / **< This smart card does not support the requested feature. */
#define SCARD_E_DIR_NOT_FOUND		0x80100023 /**< The identified directory does not exist in the smart card. */
#define SCARD_E_FILE_NOT_FOUND		0x80100024 /**< The identified file does not exist in the smart card. */
#define SCARD_E_NO_DIR			0x80100025 /**< The supplied path does not represent a smart card directory. */
#define SCARD_E_NO_FILE			0x80100026 /**< The supplied path does not represent a smart card file. */
#define SCARD_E_NO_ACCESS		0x80100027 /**< Access is denied to this file. */
#define SCARD_E_WRITE_TOO_MANY		0x80100028 /**< The smart card does not have enough memory to store the information. */
#define SCARD_E_BAD_SEEK		0x80100029 /**< There was an error trying to set the smart card file object pointer. */
#define SCARD_E_INVALID_CHV		0x8010002A /**< The supplied PIN is incorrect. */
#define SCARD_E_UNKNOWN_RES_MNG		0x8010002B /**< An unrecognized error code was returned from a layered component. */
#define SCARD_E_NO_SUCH_CERTIFICATE	0x8010002C /**< The requested certificate does not exist. */
#define SCARD_E_CERTIFICATE_UNAVAILABLE	0x8010002D /**< The requested certificate could not be obtained. */
#define SCARD_E_NO_READERS_AVAILABLE    0x8010002E /**< Cannot find a smart card reader. */
#define SCARD_E_COMM_DATA_LOST		0x8010002F /**< A communications error with the smart card has been detected. Retry the operation. */
#define SCARD_E_NO_KEY_CONTAINER	0x80100030 /**< The requested key container does not exist on the smart card. */
#define SCARD_E_SERVER_TOO_BUSY		0x80100031 /**< The Smart Card Resource Manager is too busy to complete this operation. */

#define SCARD_W_UNSUPPORTED_CARD	0x80100065 /**< The reader cannot communicate with the card, due to ATR string configuration conflicts. */
#define SCARD_W_UNRESPONSIVE_CARD	0x80100066 /**< The smart card is not responding to a reset. */
#define SCARD_W_UNPOWERED_CARD		0x80100067 /**< Power has been removed from the smart card, so that further communication is not possible. */
#define SCARD_W_RESET_CARD		0x80100068 /**< The smart card has been reset, so any shared state information is invalid. */
#define SCARD_W_REMOVED_CARD		0x80100069 /**< The smart card has been removed, so further communication is not possible. */

#define SCARD_W_SECURITY_VIOLATION	0x8010006A /**< Access was denied because of a security violation. */
#define SCARD_W_WRONG_CHV		0x8010006B /**< The card cannot be accessed because the wrong PIN was presented. */
#define SCARD_W_CHV_BLOCKED		0x8010006C /**< The card cannot be accessed because the maximum number of PIN entry attempts has been reached. */
#define SCARD_W_EOF			0x8010006D /**< The end of the smart card file has been reached. */
#define SCARD_W_CANCELLED_BY_USER	0x8010006E /**< The user pressed "Cancel" on a Smart Card Selection Dialog. */
#define SCARD_W_CARD_NOT_AUTHENTICATED	0x8010006F /**< No PIN was presented to the smart card. */

#define SCARD_SCOPE_USER		0x0000	/**< Scope in user space */
#define SCARD_SCOPE_TERMINAL		0x0001	/**< Scope in terminal */
#define SCARD_SCOPE_SYSTEM		0x0002	/**< Scope in system */

#define SCARD_PROTOCOL_UNDEFINED	0x0000	/**< protocol not set */
#define SCARD_PROTOCOL_UNSET SCARD_PROTOCOL_UNDEFINED	/* backward compat */
#define SCARD_PROTOCOL_T0		0x0001	/**< T=0 active protocol. */
#define SCARD_PROTOCOL_T1		0x0002	/**< T=1 active protocol. */
#define SCARD_PROTOCOL_RAW		0x0004	/**< Raw active protocol. */
#define SCARD_PROTOCOL_T15		0x0008	/**< T=15 protocol. */

#define SCARD_PROTOCOL_ANY		(SCARD_PROTOCOL_T0|SCARD_PROTOCOL_T1)	/**< IFD determines prot. */

#define SCARD_SHARE_EXCLUSIVE		0x0001	/**< Exclusive mode only */
#define SCARD_SHARE_SHARED		0x0002	/**< Shared mode only */
#define SCARD_SHARE_DIRECT		0x0003	/**< Raw mode only */

#define SCARD_LEAVE_CARD		0x0000	/**< Do nothing on close */
#define SCARD_RESET_CARD		0x0001	/**< Reset on close */
#define SCARD_UNPOWER_CARD		0x0002	/**< Power down on close */
#define SCARD_EJECT_CARD		0x0003	/**< Eject on close */

#define SCARD_UNKNOWN			0x0001	/**< Unknown state */
#define SCARD_ABSENT			0x0002	/**< Card is absent */
#define SCARD_PRESENT			0x0004	/**< Card is present */
#define SCARD_SWALLOWED			0x0008	/**< Card not powered */
#define SCARD_POWERED			0x0010	/**< Card is powered */
#define SCARD_NEGOTIABLE		0x0020	/**< Ready for PTS */
#define SCARD_SPECIFIC			0x0040	/**< PTS has been set */

#define SCARD_STATE_UNAWARE		0x0000	/**< App wants status */
#define SCARD_STATE_IGNORE		0x0001	/**< Ignore this reader */
#define SCARD_STATE_CHANGED		0x0002	/**< State has changed */
#define SCARD_STATE_UNKNOWN		0x0004	/**< Reader unknown */
#define SCARD_STATE_UNAVAILABLE		0x0008	/**< Status unavailable */
#define SCARD_STATE_EMPTY		0x0010	/**< Card removed */
#define SCARD_STATE_PRESENT		0x0020	/**< Card inserted */
#define SCARD_STATE_ATRMATCH		0x0040	/**< ATR matches card */
#define SCARD_STATE_EXCLUSIVE		0x0080	/**< Exclusive Mode */
#define SCARD_STATE_INUSE		0x0100	/**< Shared Mode */
#define SCARD_STATE_MUTE		0x0200	/**< Unresponsive card */
#define SCARD_STATE_UNPOWERED		0x0400	/**< Unpowered card */

    /** PC/SC Lite specific extensions */
#define SCARD_W_INSERTED_CARD		0x8010006A
#define SCARD_E_UNSUPPORTED_FEATURE	0x8010001F

#define SCARD_SCOPE_GLOBAL		0x0003	/**< Scope is global */

#define SCARD_RESET			0x0001	/**< Card was reset */
#define SCARD_INSERTED			0x0002	/**< Card was inserted */
#define SCARD_REMOVED			0x0004	/**< Card was removed */

#define BLOCK_STATUS_RESUME		0x00FF	/**< Normal resume */
#define BLOCK_STATUS_BLOCKING		0x00FA	/**< Function is blocking */

#define PCSCLITE_CONFIG_DIR		"/etc"

#ifndef USE_IPCDIR
#define PCSCLITE_IPC_DIR		"/var/run"
#else
#define PCSCLITE_IPC_DIR		USE_IPCDIR
#endif

#define PCSCLITE_READER_CONFIG		PCSCLITE_CONFIG_DIR "/reader.conf"
#define PCSCLITE_PUBSHM_FILE		PCSCLITE_IPC_DIR "/pcscd.pub"
#define PCSCLITE_CSOCK_NAME		PCSCLITE_IPC_DIR "/pcscd.comm"

#define PCSCLITE_SVC_IDENTITY		0x01030000	/**< Service ID */

#ifndef INFINITE
#define INFINITE			0xFFFFFFFF	/**< Infinite timeout */
#endif
#define PCSCLITE_INFINITE_TIMEOUT	4320000		/**< 50 day infinite t/o */

#define PCSCLITE_VERSION_NUMBER		"1.4.0"	/**< Current version */
#define PCSCLITE_CLIENT_ATTEMPTS	120		/**< Attempts to reach sv */
#define PCSCLITE_MCLIENT_ATTEMPTS	20		/**< Attempts to reach sv */
#define PCSCLITE_STATUS_POLL_RATE	400000		/**< Status polling rate */
#define PCSCLITE_MSG_KEY_LEN		16		/**< App ID key length */
#define PCSCLITE_RW_ATTEMPTS		100		/**< Attempts to rd/wrt */

    /** Maximum applications */
#define PCSCLITE_MAX_APPLICATIONS			16
    /** Maximum contexts by application */
#define PCSCLITE_MAX_APPLICATION_CONTEXTS		16
    /** Maximum of applications contexts that pcscd can accept */
#define PCSCLITE_MAX_APPLICATIONS_CONTEXTS \
PCSCLITE_MAX_APPLICATIONS * PCSCLITE_MAX_APPLICATION_CONTEXTS
    /** Maximum channels on a reader context */
#define PCSCLITE_MAX_READER_CONTEXT_CHANNELS		16
    /** Maximum channels on an application context */
#define PCSCLITE_MAX_APPLICATION_CONTEXT_CHANNELS	16
    /** Maximum readers context (a slot is count as a reader) */
#define PCSCLITE_MAX_READERS_CONTEXTS			16

    /* PCSCLITE_MAX_READERS is deprecated
     * use PCSCLITE_MAX_READERS_CONTEXTS instead */
    /* extern int PCSCLITE_MAX_READERS __attribute__ ((deprecated)); */

#define PCSCLITE_MAX_THREADS		16	/**< Stat change threads */
#define PCSCLITE_STATUS_WAIT		200000	/**< Status Change Sleep */
#define PCSCLITE_TRANSACTION_TIMEOUT	40	/**< Transaction timeout */
#define MAX_READERNAME			52
#define MAX_LIBNAME			100
#define MAX_DEVICENAME		255

#ifndef SCARD_ATR_LENGTH
#define SCARD_ATR_LENGTH		MAX_ATR_SIZE	/**< Maximum ATR size */
#endif

    /* These are deprecated */
#define PCSCLITE_MAX_CHANNELS           16	/* Maximum channels */
#define PCSCLITE_MAX_CONTEXTS           16	/* Maximum readers */
#define PCSCLITE_MAX_COMSIZE            64	/* Maximum arg size */

    /*
     * Enhanced messaging has been added to accomodate newer devices which have
     * more advanced capabilites, such as dedicated secure co-processors which
     * can stream and encrypt data over USB.  In order to used enhanced messaging
     * you must define PCSCLITE_ENHANCED_MESSAGING in the framework(library),
     * the daemon, and your application
     */

    /*
     * The message and buffer sizes must be multiples of 16.
     * The max message size must be at least large enough
     * to accomodate the transmit_struct
     */

#ifndef PCSCLITE_ENHANCED_MESSAGING
#define PCSCLITE_MAX_MESSAGE_SIZE	2048	/**< Transport msg len */
#define MAX_BUFFER_SIZE			264	/**< Maximum Tx/Rx Buffer for short APDU */
#define PCSCLITE_SERVER_ATTEMPTS	5	/**< Attempts to reach cl */
#else
#define PCSCLITE_MAX_MESSAGE_SIZE       (1<<17)  /* enhanced (128K) msg len */
#define MAX_BUFFER_SIZE                 (1<<15)  /* enhanced (32K) Tx/Rx Buffer */
#define PCSCLITE_SERVER_ATTEMPTS         200     /* To allow larger data reads/writes */
#endif
    
#define MAX_BUFFER_SIZE_EXTENDED	(4 + 3 + (1<<16) + 3)	/**< enhanced (64K + APDU + Lc + Le) Tx/Rx Buffer */
    
    /*
     * Gets a stringified error response 
     */
    char *pcsc_stringify_error(int32_t err);
    
#ifdef __cplusplus
}
#endif

#endif
                                                                                    winscard.h                                                                                          0100644 0001750 0001750 00000012126 12566213765 032346  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Headers                                                                        /*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 *
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

/*
 * MUSCLE SmartCard Development ( http://www.linuxnet.com )
 *
 * Copyright (C) 1999-2003
 *  David Corcoran <corcoran@linuxnet.com>
 *  Ludovic Rousseau <ludovic.rousseau@free.fr>
 *
 * $Id: winscard.h 123 2010-03-27 10:50:42Z ludovic.rousseau@gmail.com $
 */

/**
 * @file
 * @brief This handles smartcard reader communications.
 */

#ifndef __winscard_h__
#define __winscard_h__

#include <PCSC/pcsclite.h>
#include <stdint.h>
//#include "pcscexport.h"

#ifdef __cplusplus
extern "C"
{
#endif

#ifndef PCSC_API
#define PCSC_API
#endif

	PCSC_API int32_t SCardEstablishContext(uint32_t dwScope,
                                           const void *pvReserved1, const void *pvReserved2, LPSCARDCONTEXT phContext);

	PCSC_API int32_t SCardReleaseContext(SCARDCONTEXT hContext);

	PCSC_API int32_t SCardIsValidContext(SCARDCONTEXT hContext);

	PCSC_API int32_t SCardSetTimeout(SCARDCONTEXT hContext, uint32_t dwTimeout);

	PCSC_API int32_t SCardConnect(SCARDCONTEXT hContext,
                                  const char *szReader,
                                  uint32_t dwShareMode,
                                  uint32_t dwPreferredProtocols,
                                  LPSCARDHANDLE phCard, uint32_t *pdwActiveProtocol);

	PCSC_API int32_t SCardReconnect(SCARDHANDLE hCard,
                                    uint32_t dwShareMode,
                                    uint32_t dwPreferredProtocols,
                                    uint32_t dwInitialization, uint32_t *pdwActiveProtocol);

	PCSC_API int32_t SCardDisconnect(SCARDHANDLE hCard, uint32_t dwDisposition);

	PCSC_API int32_t SCardBeginTransaction(SCARDHANDLE hCard);

	PCSC_API int32_t SCardEndTransaction(SCARDHANDLE hCard, uint32_t dwDisposition);

	PCSC_API int32_t SCardCancelTransaction(SCARDHANDLE hCard);

	PCSC_API int32_t SCardStatus(SCARDHANDLE hCard,
                                 char *mszReaderNames, uint32_t *pcchReaderLen,
                                 uint32_t *pdwState,
                                 uint32_t *pdwProtocol,
                                 unsigned char *pbAtr, uint32_t *pcbAtrLen);

	PCSC_API int32_t SCardGetStatusChange(SCARDCONTEXT hContext,
                                          uint32_t dwTimeout,
                                          LPSCARD_READERSTATE_A rgReaderStates, uint32_t cReaders);

	PCSC_API int32_t SCardControl(SCARDHANDLE hCard,
                                  const void *pbSendBuffer, uint32_t cbSendLength,
                                  void *pbRecvBuffer, uint32_t *pcbRecvLength);

	PCSC_API int32_t SCardControl132(SCARDHANDLE hCard, uint32_t dwControlCode,
                                     const void *pbSendBuffer, uint32_t cbSendLength,
                                     void *pbRecvBuffer, uint32_t cbRecvLength, uint32_t *lpBytesReturned);

	PCSC_API int32_t SCardTransmit(SCARDHANDLE hCard,
                                   LPCSCARD_IO_REQUEST pioSendPci,
                                   const unsigned char *pbSendBuffer, uint32_t cbSendLength,
                                   LPSCARD_IO_REQUEST pioRecvPci,
                                   unsigned char *pbRecvBuffer, uint32_t *pcbRecvLength);

	PCSC_API int32_t SCardListReaderGroups(SCARDCONTEXT hContext,
                                           char *mszGroups, uint32_t *pcchGroups);
    
	PCSC_API int32_t SCardListReaders(SCARDCONTEXT hContext,
                                      const char *mszGroups,
                                      char *mszReaders, uint32_t *pcchReaders);
    
	PCSC_API int32_t SCardCancel(SCARDCONTEXT hContext);
    
	PCSC_API int32_t SCardGetAttrib(SCARDHANDLE hCard, uint32_t dwAttrId,
                                    uint8_t *pbAttr, uint32_t *pcbAttrLen);
    
	PCSC_API int32_t SCardSetAttrib(SCARDHANDLE hCard, uint32_t dwAttrId,
                                    const uint8_t *pbAttr, uint32_t cbAttrLen);
    
	void SCardUnload(void);
    
#ifdef __cplusplus
}
#endif

/*
 To support the newer version of SCardControl, we define it
 as follows. The old version number was 1.1.2, the new call
 appears in 1.3.2 of pcsc-lite (or perhaps earlier).
 */

#if !defined(USE_SCARD_CONTROL_112)
#define SCardControl SCardControl132
#endif /* USE_SCARD_CONTROL_112 */

#endif

                                                                                                                                                                                                                                                                                                                                                                                                                                          wintypes.h                                                                                          0100644 0001750 0001750 00000004335 12566213765 032421  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Headers                                                                        /*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 *
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

/*
 * MUSCLE SmartCard Development ( http://www.linuxnet.com )
 *
 * Copyright (C) 1999
 *  David Corcoran <corcoran@linuxnet.com>
 *
 * $Id: wintypes.h 123 2010-03-27 10:50:42Z ludovic.rousseau@gmail.com $
 */

/**
 * @file
 * @brief This keeps a list of Windows(R) types.
 */

#ifndef __wintypes_h__
#define __wintypes_h__

#ifdef __cplusplus
extern "C"
{
#endif

#if !defined(WIN32)

#include <stdint.h>

#ifndef BYTE
	typedef uint8_t BYTE;
#endif
	typedef uint8_t UCHAR;
	typedef uint8_t *PUCHAR;
	typedef uint16_t USHORT;

#ifndef __COREFOUNDATION_CFPLUGINCOM__
	typedef uint32_t ULONG;
	typedef void *LPVOID;
	typedef int16_t BOOL;
#endif

	typedef uint32_t *PULONG;
	typedef const void *LPCVOID;
	typedef uint32_t DWORD;
	typedef uint32_t *PDWORD;
	typedef uint16_t WORD;
	typedef int32_t LONG;
	typedef int32_t RESPONSECODE;
	typedef const char *LPCSTR;
	typedef const BYTE *LPCBYTE;
	typedef BYTE *LPBYTE;
	typedef DWORD *LPDWORD;
	typedef char *LPSTR;

	/* these types are deprecated but still used by old drivers and applications
	 * You should use LPSTR instead */
	typedef char *LPTSTR ;
	typedef const char *LPCTSTR ;
	typedef char *LPCWSTR
#ifdef __GNUC__
    /* __attribute__ is a GCC only extension */
    __attribute__ ((deprecated))
#endif
    ;

#else
#include <windows.h>
#endif

#ifdef __cplusplus
}
#endif

#endif
                                                                                                                                                                                                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Modules/    0040755 0001750 0001750 00000000000 12612224743 030466  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        module.modulemap                                                                                    0100644 0001750 0001750 00000000350 12566213765 033606  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/Modules                                                                        framework module PCSC [extern_c] {
    requires !swift

    umbrella header "winscard.h"

    export *
    module * { export * }

    exclude header "musclecard.h"
    exclude header "mscdefines.h"
    exclude header "wintypes.h"
}
                                                                                                                                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/A/PCSC.tbd    0100644 0001750 0001750 00000005371 12571375070 030310  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        ---
archs:           [ i386, x86_64 ]
platform:        macosx
install-name:    /System/Library/Frameworks/PCSC.framework/Versions/A/PCSC
exports:         
  - archs:           [ i386, x86_64 ]
    symbols:         [ _DYN_CloseLibrary, _DYN_GetAddress, _DYN_LoadLibrary, 
                       _DebugLogCategory, _DebugLogSetCategory, _DebugLogSetLevel, 
                       _DebugLogSetLogType, _LTPBundleFindValueWithKey, 
                       _MSCBeginTransaction, _MSCCancelEventWait, _MSCChangePIN, 
                       _MSCClearReset, _MSCComputeCrypt, _MSCCreateObject, 
                       _MSCCreatePIN, _MSCDeleteObject, _MSCEndTransaction, 
                       _MSCEstablishConnection, _MSCExportKey, _MSCExtAuthenticate, 
                       _MSCExtendedFeature, _MSCGenerateKeys, _MSCGetCapabilities, 
                       _MSCGetChallenge, _MSCGetKeyAttributes, _MSCGetObjectAttributes, 
                       _MSCGetStatus, _MSCImportKey, _MSCIsTokenChanged, 
                       _MSCIsTokenKnown, _MSCIsTokenMoved, _MSCIsTokenReset, 
                       _MSCListKeys, _MSCListObjects, _MSCListPINs, _MSCListTokens, 
                       _MSCLogoutAll, _MSCReEstablishConnection, _MSCReadAllocateObject, 
                       _MSCReadObject, _MSCReleaseConnection, _MSCUnblockPIN, 
                       _MSCVerifyPIN, _MSCWaitForTokenEvent, _MSCWriteFramework, 
                       _MSCWriteObject, _SCardBeginTransaction, _SCardCancel, 
                       _SCardCancelTransaction, _SCardConnect, _SCardControl, 
                       _SCardControl132, _SCardDisconnect, _SCardEndTransaction, 
                       _SCardEstablishContext, _SCardGetAttrib, _SCardGetStatusChange, 
                       _SCardIsValidContext, _SCardListReaderGroups, _SCardListReaders, 
                       _SCardReconnect, _SCardReleaseContext, _SCardSetAttrib, 
                       _SCardSetTimeout, _SCardStatus, _SCardTransmit, 
                       _SCardUnload, _TPBindFunctions, _TPLoadToken, _TPSearchBundlesForAtr, 
                       _TPSvcDropdir, _TPUnbindFunctions, _TPUnloadToken, 
                       _atrToString, _g_rgSCardRawPci, _g_rgSCardT0Pci, 
                       _g_rgSCardT1Pci, _log_msg, _log_xxd, _mscLockThread, 
                       _mscUnLockThread, _msc_error, _pcscToMSC, _pcsc_stringify_error, 
                       _stringToBytes, _tp_create_buffer, _tp_delete_buffer, 
                       _tp_flush_buffer, _tp_init_buffer, _tp_load_buffer_state, 
                       _tp_scan_buffer, _tp_scan_bytes, _tp_scan_string, 
                       _tp_switch_to_buffer, _tperrorCheck, _tpevalToken, 
                       _tpin, _tpleng, _tplex, _tpout, _tprestart, _tptext, 
                       _tpwrap ]
...
                                                                                                                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/Versions/Current       0120777 0001750 0001750 00000000000 12620245063 030337  2A                                                                                                   ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PCSC.framework/module.map             0100644 0001750 0001750 00000000615 12566173266 027064  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        framework module PCSC [extern_c] {
  explicit module defines {
    header "mscdefines.h"
    export *
  }

  explicit module musclecard {
    header "musclecard.h"
    export *
  }

  explicit module pcsclite {
    header "pcsclite.h"
    export *
  }

  explicit module winscard {
    header "winscard.h"
    export *
  }

  explicit module wintypes {
    header "wintypes.h"
    export *
  }
}

                                                                                                                   osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/                     0040755 0001750 0001750 00000000000 12612224743 025612  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Headers              0120777 0001750 0001750 00000000000 12620245063 033631  2Versions/Current/Headers                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Photos.tbd           0120777 0001750 0001750 00000000000 12620245063 034753  2Versions/Current/Photos.tbd                                                                         ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/            0040755 0001750 0001750 00000000000 12612224743 027422  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/          0040755 0001750 0001750 00000000000 12612224743 027602  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/Headers/  0040755 0001750 0001750 00000000000 12612224743 031155  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        PHAdjustmentData.h                                                                                  0100644 0001750 0001750 00000001306 12566534106 034411  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/Headers                                                                      //
//  PHAdjustmentData.h
//  Photos
//
//  Copyright (c) 2014 Apple Inc. All rights reserved.
//

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

NS_CLASS_AVAILABLE_MAC(10_11) @interface PHAdjustmentData : NSObject

- (instancetype)initWithFormatIdentifier:(NSString *)formatIdentifier formatVersion:(NSString *)formatVersion data:(NSData *)data;

// Used to identify the format of the data blob (e.g. identifier "com.apple.myapp" and version "1.0")
@property (readonly, copy) NSString *formatIdentifier;
@property (readonly, copy) NSString *formatVersion;

// Binary blob that describes the adjustments applied to the asset.
@property (readonly, strong) NSData *data;

@end

NS_ASSUME_NONNULL_END                                                                                                                                                                                                                                                                                                                          PHContentEditingInput.h                                                                             0100644 0001750 0001750 00000002274 12566534106 035444  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/Headers                                                                      //
//  PHContentEditingInput.h
//  Photos
//
//  Copyright (c) 2014 Apple Inc. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <Photos/PhotosTypes.h>

@class PHAdjustmentData;
@class AVAsset;
@class CLLocation;

NS_ASSUME_NONNULL_BEGIN

NS_CLASS_AVAILABLE_MAC(10_11) @interface PHContentEditingInput : NSObject

@property (readonly, assign) PHAssetMediaType mediaType;
@property (readonly, assign) PHAssetMediaSubtype mediaSubtypes;
@property (readonly, copy, nullable) NSDate *creationDate;
@property (readonly, copy, nullable) CLLocation *location;
@property (readonly, copy, nullable) NSString *uniformTypeIdentifier;

// Adjustments to be applied onto the provided input image or video.
@property (readonly, strong) PHAdjustmentData *adjustmentData;

// Input image:
@property (readonly, strong, nullable) NSImage *displaySizeImage;
@property (readonly, copy, nullable) NSURL *fullSizeImageURL;
@property (readonly, assign) int fullSizeImageOrientation; // EXIF value

// Input video:
@property (readonly, strong, nullable) AVAsset *avAsset NS_DEPRECATED_IOS(8_0, 9_0);
@property (readonly, strong, nullable) AVAsset *audiovisualAsset NS_AVAILABLE(10_11, 9_0);

@end

NS_ASSUME_NONNULL_END                                                                                                                                                                                                                                                                                                                                    PHContentEditingOutput.h                                                                            0100644 0001750 0001750 00000001152 12566534106 035637  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/Headers                                                                      //
//  PHContentEditingOutput.h
//  Photos
//
//  Copyright (c) 2014 Apple Inc. All rights reserved.
//

#import <Foundation/Foundation.h>

@class PHContentEditingInput, PHAdjustmentData;

NS_ASSUME_NONNULL_BEGIN

NS_CLASS_AVAILABLE_MAC(10_11) @interface PHContentEditingOutput : NSObject

- (instancetype)initWithContentEditingInput:(PHContentEditingInput *)contentEditingInput;

@property (readwrite, strong) PHAdjustmentData *adjustmentData;

// File URL where the rendered output, with adjustments baked-in, needs to be written to.
@property (readonly, copy) NSURL *renderedContentURL;

@end

NS_ASSUME_NONNULL_END                                                                                                                                                                                                                                                                                                                                                                                                                      Photos.h                                                                                            0100644 0001750 0001750 00000000422 12566534106 032523  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/Headers                                                                      //
//  Photos.h
//  Photos
//
//  Copyright (c) 2015 Apple Inc. All rights reserved.
//

#import <Foundation/Foundation.h>

#import <Photos/PhotosTypes.h>
#import <Photos/PHContentEditingInput.h>
#import <Photos/PHContentEditingOutput.h>
#import <Photos/PHAdjustmentData.h>
                                                                                                                                                                                                                                              PhotosTypes.h                                                                                       0100644 0001750 0001750 00000001440 12566534106 033551  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/Headers                                                                      //
//  PhotosTypes.h
//  Photos
//
//  Copyright (c) 2014 Apple Inc. All rights reserved.
//

typedef NS_ENUM(NSInteger, PHAssetMediaType) {
	PHAssetMediaTypeUnknown = 0,
	PHAssetMediaTypeImage,
	PHAssetMediaTypeVideo,
	PHAssetMediaTypeAudio,
} NS_ENUM_AVAILABLE_MAC(10_11);

typedef NS_OPTIONS(NSUInteger, PHAssetMediaSubtype) {
    PHAssetMediaSubtypeNone               = 0,
    
    // Photo subtypes
    PHAssetMediaSubtypePhotoPanorama      = (1UL << 0),
    PHAssetMediaSubtypePhotoHDR           = (1UL << 1),
	PHAssetMediaSubtypePhotoScreenshot    = (1UL << 2),
    
    // Video subtypes
    PHAssetMediaSubtypeVideoStreamed      = (1UL << 16),
    PHAssetMediaSubtypeVideoHighFrameRate = (1UL << 17),
    PHAssetMediaSubtypeVideoTimelapse     = (1UL << 18),
} NS_ENUM_AVAILABLE_MAC(10_11);

                                                                                                                                                                                                                                osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/A/Photos.tbd0100644 0001750 0001750 00000000564 12571375070 031557  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        ---
archs:           [ x86_64 ]
platform:        macosx
install-name:    /System/Library/Frameworks/Photos.framework/Versions/A/Photos
current-version: 335.4
exports:         
  - archs:           [ x86_64 ]
    symbols:         [ _PhotosVersionNumber, _PhotosVersionString ]
    objc-classes:    [ _PHAdjustmentData, _PHContentEditingInput, _PHContentEditingOutput ]
...
                                                                                                                                            osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Photos.framework/Versions/Current     0120777 0001750 0001750 00000000000 12620245063 031063  2A                                                                                                   ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/                   0040755 0001750 0001750 00000000000 12612224743 026050  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Headers            0120777 0001750 0001750 00000000000 12620245063 034067  2Versions/Current/Headers                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/PhotosUI.tbd       0120777 0001750 0001750 00000000000 12620245063 035705  2Versions/Current/PhotosUI.tbd                                                                       ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Versions/          0040755 0001750 0001750 00000000000 12612224743 027660  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Versions/A/        0040755 0001750 0001750 00000000000 12612224743 030040  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Versions/A/Headers/0040755 0001750 0001750 00000000000 12612224743 031413  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        PHContentEditingController.h                                                                        0100644 0001750 0001750 00000003275 12566534110 036723  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Versions/A/Headers                                                                    //
//  PHContentEditingController.h
//  PhotosUI
//
//  Copyright (c) 2014 Apple Inc. All rights reserved.
//

#import <Foundation/Foundation.h>

@class PHAdjustmentData, PHContentEditingInput, PHContentEditingOutput;


// Protocol to which the principal view controller of the extension must conform.
@protocol PHContentEditingController <NSObject>
@required

// Query whether the receiver can handle (i.e. can decode and render) the given adjustment data.
- (BOOL)canHandleAdjustmentData:(PHAdjustmentData *)adjustmentData;

// Provides the input for the editing session. The placeholder image represents the current version of the asset (with adjustments baked in), and can be used as UI placeholder, in case rendering the adjustments from the input cannot be done in a timely fashion.
- (void)startContentEditingWithInput:(PHContentEditingInput *)contentEditingInput placeholderImage:(NSImage *)placeholderImage;

// Called when the user finishes the editing session. The receiver should prevent the user from editing the asset further. Also, it should create the editing output and call the completion handler. The completion handler returns after the output has been consumed, so it is safe to perform clean up after it returns. The completion handler can (and should best) be called on a background queue.
- (void)finishContentEditingWithCompletionHandler:(void (^)(PHContentEditingOutput *))completionHandler;

// Called if the user cancels the editing session. (Can be called while the receiver is producing the editing output.)
- (void)cancelContentEditing;

// Returns whether the user should be prompted when canceling the editing session.
@property (readonly, nonatomic) BOOL shouldShowCancelConfirmation;

@end
                                                                                                                                                                                                                                                                                                                                   PhotosUI.h                                                                                          0100644 0001750 0001750 00000000316 12566534110 033214  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Versions/A/Headers                                                                    //
//  PhotosUI.h
//  PhotosUI
//
//  Copyright (c) 2015 Apple Inc. All rights reserved.
//

#ifndef PhotosUI_PhotosUI_h
#define PhotosUI_PhotosUI_h

#import <PhotosUI/PHContentEditingController.h>

#endif
                                                                                                                                                                                                                                                                                                                  PhotosUI.tbd                                                                                        0100644 0001750 0001750 00000001165 12571375070 032172  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Versions/A                                                                            ---
archs:           [ x86_64 ]
platform:        macosx
install-name:    /System/Library/Frameworks/PhotosUI.framework/Versions/A/PhotosUI
current-version: 335.4
exports:         
  - archs:           [ x86_64 ]
    symbols:         [ _PUEditingFullsizeImageDataTypeIdentifer, _PUEditingInitialPayloadTypeIdentifier, 
                       _PhotosUIVersionNumber, _PhotosUIVersionString ]
    objc-classes:    [ _PHEditingExtensionContext, _PHEditingRemoteView, 
                       _PHEditingRemoteViewController, _PHEditingViewService, 
                       _PUEditingExtensionHostContext, _PUEditingInitialPayload ]
...
                                                                                                                                                                                                                                                                                                                                                                                                           osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PhotosUI.framework/Versions/Current   0120777 0001750 0001750 00000000000 12620245063 031321  2A                                                                                                   ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/            0040755 0001750 0001750 00000000000 12612224743 027403  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Headers     0120777 0001750 0001750 00000000000 12620245063 035422  2Versions/Current/Headers                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Modules     0120777 0001750 0001750 00000000000 12620245063 035514  2Versions/Current/Modules                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        PreferencePanes.tbd                                                                                 0120777 0001750 0001750 00000000000 12620245063 042047  2Versions/Current/PreferencePanes.tbd                                                                ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework                                                                                osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/   0040755 0001750 0001750 00000000000 12612224743 031213  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/A/ 0040755 0001750 0001750 00000000000 12612224743 031373  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        Headers/                                                                                            0040755 0001750 0001750 00000000000 12612224743 032667  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/A                                                                     NSPreferencePane.h                                                                                  0100644 0001750 0001750 00000017072 12566226361 036175  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/A/Headers                                                             /*
 *  NSPreferencePane.h
 *  PreferencePanes
 *
 *  Copyright (c) 2001-2010 Apple. All rights reserved.
 *
 */

#import <Cocoa/Cocoa.h>

typedef NS_ENUM(NSUInteger, NSPreferencePaneUnselectReply)
{
    NSUnselectCancel = 0,
    NSUnselectNow = 1,
    NSUnselectLater = 2
};


extern NSString * __nonnull const 	NSPreferencePaneDoUnselectNotification;
extern NSString * __nonnull const 	NSPreferencePaneCancelUnselectNotification;

// Help Menu support
APPKIT_EXTERN NSString * __nonnull const				NSPrefPaneHelpMenuInfoPListKey;
APPKIT_EXTERN NSString * __nonnull const				NSPrefPaneHelpMenuTitleKey;
APPKIT_EXTERN NSString * __nonnull const				NSPrefPaneHelpMenuAnchorKey;


#if MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_7

#define kNSPrefPaneHelpMenuInfoPListKey		NSPrefPaneHelpMenuInfoPListKey	
#define kNSPrefPaneHelpMenuTitleKey			NSPrefPaneHelpMenuTitleKey		
#define kNSPrefPaneHelpMenuAnchorKey			NSPrefPaneHelpMenuAnchorKey		

#else /* MAC_OS_X_VERSION_MIN_REQUIRED < MAC_OS_X_VERSION_10_7 */

#define	kNSPrefPaneHelpMenuInfoPListKey		@"NSPrefPaneHelpAnchors"
#define	kNSPrefPaneHelpMenuTitleKey			@"title"		
#define	kNSPrefPaneHelpMenuAnchorKey		@"anchor"

#endif

@interface NSPreferencePane : NSObject
{
	@private
		//  Connect the _window outlet to a window in your main nib file.
		//  The loadMainView method will remove the content view from this
		//  window and set the main view of the preference pane to be the
		//  content view.  The window is then disposed.
		IBOutlet NSWindow * __nullable	_window;
	
		//  Connect these outlets to the initial, first and last keyboard
		//  focus chain views.  These views MUST be subviews of the main view.
		IBOutlet NSView * __nullable	_initialKeyView;
		IBOutlet NSView * __nullable	_firstKeyView;
		IBOutlet NSView * __nullable	_lastKeyView;
	
		NSView * __nonnull		_mainView;
		NSBundle * __nonnull	_bundle;
	
		__nullable id _reserved1;
		__nullable id _reserved2;
		__nullable id _reserved3;
}

- (nonnull instancetype) initWithBundle:(nonnull NSBundle *)bundle;

@property (readonly, strong, nonnull) NSBundle *bundle;

//
//  loadMainView loads the main nib file and invokes assignMainView to
//  set the main view of the preference pane.
//
//  NSPreferencePane subclasses should rarely need to override this method.
//
//  Override loadMainView if your NSPreferencePane subclass needs to use
//  a non-nib based technique for creating the main view.  loadMainView
//  should call setMainView: to set the main view of the preference pane
//  before it returns.  It should also call setInitialKeyView, setFirstKeyView
//  and setLastKeyView to set the initial, first and last keyboard focus views
//  respectively.
//
- (nonnull NSView *) loadMainView;

//
//  mainViewDidLoad is invoked by the default implementation of loadMainView
//  after the main nib file has been loaded and the main view of the preference
//  pane has been set.  The default implementation does nothing.  Override
//  this method to perform any setup that must be performed after the main
//  nib file has been loaded and the main view has been set.
//
- (void) mainViewDidLoad;

//
//  mainNibName is invoked by the default implementation of loadMainView.
//
//  The default implementation returns the value of the NSMainNibFile key
//  in the bundle's Info plist. You can override this if you want to
//  dynamically select the main nib file for this preference.
//
//  The value returned must NOT include the ".nib" extension.
//
@property (readonly, strong, nonnull) NSString *mainNibName;

//
//  assignMainView is invoked by the default implementation of loadMainView,
//  immediately after the main nib file has been loaded.  This method extracts
//  the content view from the window referenced by the _window
//  outlet and makes this view the main view of the preference pane.
//
//  Override assignMainView if your NSPreferencePane subclass needs to
//  dynamically choose a main view.  assignMainView should call setMainView:
//  to set the main view of the preference pane before it returns.  It should
//  also call setInitialKeyView, setFirstKeyView and setLastKeyView to set the
//  initial, first and last keyboard focus views respectively.
//
- (void) assignMainView;

//
//  These messages get sent to the a preference panel just before and
//  just after it becomes the currently selected preference panel.
//
- (void) willSelect;
- (void) didSelect;

//
//  Override shouldUnselect if your panel needs to cancel or delay an unselect
//  action.  The default implementation always returns NSUnselectNow.  If your
//  subclass overrides this method to return NSUnselectLater, it must call 
//  replyToShouldUnselect: when it has determined whether or not to allow the
//  unselect to occur.
//
@property (readonly) NSPreferencePaneUnselectReply shouldUnselect;

//
//  If you override shouldUnselect to return NSUnselectLater, you must call
//  replyToShouldUnselect when you have determined whether or not to unselect
//  the preference pane.
//
- (void) replyToShouldUnselect:(BOOL)shouldUnselect;

//
//  The willUnselect message gets sent to the currently selected preference panel
//  just before and just after it gets swapped out for another preference panel
//
- (void) willUnselect;
- (void) didUnselect;

//
//  Sets the main view of the preference pane. NSPreferencePane subclasses should
//  not need to call this directly unless they override loadMainView or
//  assignMainView.
//
//  Returns the main view of the preference pane.
//
@property (strong, nonnull) NSView *mainView;

//
//  Returns the view that should have the keyboard focus when the pane is selected.
//  The default implementation returns the _initialKeyView ivar which is an outlet
//  that can be connected in the nib file.
//
//  A subclass can override this method if it needs to determine the
//  initial key view dynamically.
//
@property (strong, nullable) NSView *initialKeyView;

//
//  Returns the view that is the first view in the keyboard focus chain.
//  The default implementation returns the _firstKeyView ivar which is an outlet
//  that can be connected in the nib file.
//
//  A subclass can override this method if it needs to determine the
//  first key view dynamically.
//
@property (strong, nullable) NSView *firstKeyView;

//
//  Returns the view that is the last view in the keyboard focus chain.
//  The default implementation returns the _lastKeyView ivar which is an outlet
//  that can be connected in the nib file.
//
//  A subclass can override this method if it needs to determine the
//  last key view dynamically.
//
@property (strong, nullable) NSView *lastKeyView;


// Default = YES
// If set to YES, text fields will be forced to give up their responder status
// before shouldUnselect is called on the preference pane.
// If overriden and set to NO, the preference pane will be responsible for 
// forcing the fields to give up their responder status before saving them.
//
@property (readonly) BOOL autoSaveTextFields;

// Returns YES if preference pane is currently selected by user,
// NO otherwise
//
@property (getter=isSelected, readonly) BOOL selected;

// Help Menu support
// A subclass can override this method if it needs to update help menu
// dynamically. If you have static help menu items specify them under
// @"NSPrefPaneHelpAnchors" key in Info.plist instead.
//
// Array must contain dictionaries with following keys:
//	<dict>					- describes every help menu item
//		<key>title</key>	- localized title for help menu item
//		<key>anchor</key>	- anchor reference for AHLookupAnchor as string
//	</dict>
//
- (void) updateHelpMenuWithArray:(nullable NSArray<NSDictionary<NSString *, NSString *> *> *)inArrayOfMenuItems;
@end

                                                                                                                                                                                                                                                                                                                                                                                                                                                                      PreferencePanes.h                                                                                   0100644 0001750 0001750 00000000235 12566226362 036111  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/A/Headers                                                             /*
 *  PreferencePanes.h
 *  PreferencePanes
 *
 *  Copyright (c) 2001-2010 Apple. All rights reserved.
 *
 */

#import <PreferencePanes/NSPreferencePane.h>
                                                                                                                                                                                                                                                                                                                                                                   Modules/                                                                                            0040755 0001750 0001750 00000000000 12612224743 032724  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/A                                                                     module.modulemap                                                                                    0100644 0001750 0001750 00000000172 12566226377 036130  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/A/Modules                                                             framework module PreferencePanes [extern_c] {
  umbrella header "PreferencePanes.h"
  export *
  module * { export * }
}

                                                                                                                                                                                                                                                                                                                                                                                                      PreferencePanes.tbd                                                                                 0100644 0001750 0001750 00000013635 12571375070 035065  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions/A                                                                     ---
archs:           [ i386, x86_64 ]
platform:        macosx
install-name:    /System/Library/Frameworks/PreferencePanes.framework/Versions/A/PreferencePanes
exports:         
  - archs:           [ x86_64 ]
    objc-ivars:      [ _AddRemoveView.mActionPopupCell, _AddRemoveView.mAddAction, 
                       _AddRemoveView.mAddRemoveControl, _AddRemoveView.mDeleteAction, 
                       _AddRemoveView.mShowsActionButton, _AddRemoveView.mShowsArrow, 
                       _AddRemoveView.mTarget, _NSAdminMultiAuthenticator.mAuthenticators, 
                       _NSAdminPreference._bundleID, _NSAdminPreference._deauthenticatePending, 
                       _NSAdminPreference._ignoreShouldDeauthorize, _NSAdminPreference._realAuthenticator, 
                       _NSAdminPreference.authenticator, _NSAdminPreference.comboAuthButton, 
                       _NSCFPrefManager._registeredDefaults, _NSPrefAnimatedView.mAnimationEffect, 
                       _NSPrefAnimatedView.mPercent, _NSPrefAnimatedView.mSourceImage, 
                       _NSPrefCrossFadeView.mDestImage, _NSPrefCrossFadeWindow.mAnimatedViews, 
                       _NSPrefCrossFadeWindow.mMoveHelper, _NSPrefCrossFadeWindowMoveHelper._displayFlag, 
                       _NSPrefCrossFadeWindowMoveHelper._done, _NSPrefCrossFadeWindowMoveHelper._frameDelta, 
                       _NSPrefCrossFadeWindowMoveHelper._moveTimer, _NSPrefCrossFadeWindowMoveHelper._percent, 
                       _NSPrefCrossFadeWindowMoveHelper._runLoop, _NSPrefCrossFadeWindowMoveHelper._screenMaxY, 
                       _NSPrefCrossFadeWindowMoveHelper._startFrame, _NSPrefCrossFadeWindowMoveHelper._startTime, 
                       _NSPrefCrossFadeWindowMoveHelper._totalTime, _NSPrefCrossFadeWindowMoveHelper._window, 
                       _NSPrefPaneAnchor.mAnchorString, _NSPrefPaneAnchor.mPPIdentifier, 
                       _NSPrefPaneBundle._bestLocale, _NSPrefPaneBundle._bundle, 
                       _NSPrefPaneBundle._description, _NSPrefPaneBundle._enabled, 
                       _NSPrefPaneBundle._favorite, _NSPrefPaneBundle._hardwareTestTool, 
                       _NSPrefPaneBundle._icon, _NSPrefPaneBundle._iconLabel, 
                       _NSPrefPaneBundle._iconName, _NSPrefPaneBundle._identifier, 
                       _NSPrefPaneBundle._ioServiceAttributesToMatch, _NSPrefPaneBundle._ioServiceToMatch, 
                       _NSPrefPaneBundle._isDisabledOnServer, _NSPrefPaneBundle._largeIcon, 
                       _NSPrefPaneBundle._localizations, _NSPrefPaneBundle._localizedIconLabels, 
                       _NSPrefPaneBundle._localizedNames, _NSPrefPaneBundle._longName, 
                       _NSPrefPaneBundle._overrideVisible, _NSPrefPaneBundle._path, 
                       _NSPrefPaneBundle._prefPaneObject, _NSPrefPaneBundle._remoteViewClass, 
                       _NSPrefPaneBundle._searchAnchors, _NSPrefPaneBundle._searchGroupsPath, 
                       _NSPrefPaneBundle._shortName, _NSPrefPaneBundle._shortVersion, 
                       _NSPrefPaneBundle._visible, _NSPrefPaneSearchCenter.mDebug, 
                       _NSPrefPaneSearchCenter.mIndexRef, _NSPrefPaneSearchCenter.mSKLock, 
                       _NSPrefPaneSearchCenter.mValidated, _NSPrefPaneUtils.mNotifyPort, 
                       _NSPrefPanesCenter._ioIterator, _NSPrefPanesCenter._notifyPort, 
                       _NSPrefPanesCenter._numIOPrefPanes, _NSPrefPanesCenter._ppBundles, 
                       _NSPrefPanesCenter._ppByIdentifier, _NSPrefTabsController.fTabViewItemToSwitchTo, 
                       _NSPrefTabsController.parentLayout, _NSPrefTabsController.tabView, 
                       _NSPreference._isDirty, _NSPreference._isEditable, 
                       _NSPreference._prefTabsController, _NSPreference._prefs, 
                       _NSPreference._relevantDomains, _PreferencePaneDispatch._connection, 
                       _PreferencePaneDispatch._prefPaneObject, _PreferencePaneDispatch._replyToShouldUnselectBlock ]
  - archs:           [ i386, x86_64 ]
    symbols:         [ _NSPrefPaneHelpMenuAnchorKey, _NSPrefPaneHelpMenuInfoPListKey, 
                       _NSPrefPaneHelpMenuTitleKey, _NSPrefPaneSupportsAutoLayout, 
                       _NSPreferencePaneCancelUnselectNotification, _NSPreferencePaneDidCrashNotification, 
                       _NSPreferencePaneDidFinishBackgroundTaskNotification, 
                       _NSPreferencePaneDidStartBackgroundTaskNotification, 
                       _NSPreferencePaneDoUnselectNotification, _NSPreferencePaneExtension, 
                       _NSPreferencePaneFrameworkIdentifier, _NSPreferencePaneSuddenTerminationStateShouldChangeNotification, 
                       _NSPreferencePaneSwitchToPaneNotification, _NSPreferencePaneUpdateHelpMenuNotification, 
                       _NSPreferencePrefPaneIsAvailableNotification, _NSPreferencePrefPaneUnavailableNotification, 
                       _PreferencePaneMain, _SetSymbolicHotKeyButtonValue, 
                       _SetSymbolicHotKeyEnabled, _SetSymbolicHotKeyValue, 
                       _SetSymbolicHotModifierValue, __keyboardListChanged, 
                       __sortSearchResults, _copySymbolicHotKeyPreferences, 
                       _getHotKeyEntry, _ppIntegrityCheck ]
    objc-classes:    [ _AddRemoveView, _NSAdminMultiAuthenticator, _NSAdminPreference, 
                       _NSCFPrefManager, _NSPrefAnimatedView, _NSPrefCrossFadeView, 
                       _NSPrefCrossFadeWindow, _NSPrefCrossFadeWindowMoveHelper, 
                       _NSPrefPaneAnchor, _NSPrefPaneBundle, _NSPrefPaneSearchCenter, 
                       _NSPrefPaneUtils, _NSPrefPanesCenter, _NSPrefRemoteViewService, 
                       _NSPrefTabsController, _NSPreference, _NSPreferencePane, 
                       _NSProxyPreferencePane, _PreferencePaneDispatch, 
                       _PreferencePaneListenerDelegate, __NSPrefCrossFadeWindowPlaceHolder ]
...
                                                                                                   Current                                                                                             0120777 0001750 0001750 00000000000 12620245063 032575  2A                                                                                                   ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PreferencePanes.framework/Versions                                                                       osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/                     0040755 0001750 0001750 00000000000 12612224743 025536  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Headers              0120777 0001750 0001750 00000000000 12620245063 033555  2Versions/Current/Headers                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/PubSub.tbd           0120777 0001750 0001750 00000000000 12620245063 034547  2Versions/Current/PubSub.tbd                                                                         ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/            0040755 0001750 0001750 00000000000 12612224743 027346  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/          0040755 0001750 0001750 00000000000 12612224743 027526  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers/  0040755 0001750 0001750 00000000000 12612224743 031101  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        PSAuthor.h                                                                                          0100644 0001750 0001750 00000004452 12566222666 032714  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSAuthor.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
@class NSString;
@class NSURL;


#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED

@class ABPerson;


/*!
    @class      PSAuthor
    @discussion A <code>PSAuthor</code> object is used to identify an author of a entry object. Use an author object to retrieve
                information about the author of an entry, and to associate the author with an Address Book person (<code>ABPerson</code>) object. Each
                author object can contain a name, an email address and a URL.
				
                To determine the author of an entry, use the author property of an entry object. It returns an array of author objects. It is not
                recommended that you subclass <code>PSAuthor</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide 
*/

NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSAuthor : NSObject {
    @private
    id _internal;
}


/*! @property name 
    @abstract The author's name. (read-only) 
    @discussion Corresponds to the <name> element of a Person construct in Atom.  Parsed from the <author> element in RSS. */
@property (readonly, retain) NSString * name;


/*! @property email 
    @abstract The author's email address. (read-only) 
    @discussion Corresponds to the <email> element of a Person construct in Atom.  Parsed from the <author> element in RSS. */
@property (readonly, retain) NSString * email;


/*! @property URL 
    @abstract A URL to the author's homepage. (read-only) 
    @discussion Corresponds to the <uri> element of a Person construct in Atom.  There is no RSS equivalent. */
@property (readonly, retain) NSURL * URL;



/*
    @method     person
    @abstract   Returns the Address Book record associated with the receiver.
    @result     The associated record.
    @discussion Currently, associations to Address Book records must be made manually, by calling
                the <code>setPerson:</code> method. In the future, this method may attempt to locate a default <code>ABPerson</code>
                by looking up the email address or URL in the Address Book.
*/
@property (retain) ABPerson * person;


@end

#endif
                                                                                                                                                                                                                      PSClient.h                                                                                          0100644 0001750 0001750 00000022402 12566222666 032663  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSClient.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
@class NSArray;
@class NSString;
@class NSDate;
@class NSURL;


#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED

#import <PubSub/PSEnclosure.h>

@class PSFeed;
@class PSEntry;
@class PSFeedSettings;


/*!
    @class      PSClient
    @discussion A <code>PSClient</code> object represents a client of the API that has its own set of feeds.
                PSClient is the backbone of the Publication Subscription framework.
                To subscribe to feeds, your application must use a client object. You can then
                add feeds to the PubSub Database with the <code>addFeed:</code> and <code>addFeedWithURL:</code> methods.
                Similarly, you can unsubscribe from a feed with the <code>removeFeed:</code> method.
                It is not recommended that you subclass <code>PSClient</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide		
*/
NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSClient : NSObject 
{
    @private
    id _internal;
}


/*!
    @method   applicationClient
    @abstract Creates the default instance for the current application.
    @result   A client object for the current application.
*/
+ (PSClient*) applicationClient;


/*!
    @method     clientForBundleIdentifier:
    @abstract   Creates a client for the specified bundle identifier.
    @param      bundleIdentifier	The bundle identifier of the client you want to inspect.
    @result     A client object for the specified bundle identifier.
    @discussion This method should be used by applications that want to inspect the subscriptions of other applications
                or by a suite of applications that want to use a shared subscription client. If you need to create a client
                for the current application, use <code>applicationClient</code> instead.
*/
+ (PSClient*) clientForBundleIdentifier:(NSString *)bundleIdentifier;


/*!
    @method     allClientBundleIdentifiers:
    @abstract   Returns a list of the bundle identifiers for the clients that have registered with the PubSub Agent.
    @result     An array of string objects containing the bundle identifiers of the clients registered with the PubSub Agent.
    @discussion This method should be used by applications that want to inspect the subscriptions
                of another application or construct a set of all subscribed
                feeds. However, the results may not be complete, because this method does not
                return the bundle identifiers of private clients.
*/
+ (NSArray*) allClientBundleIdentifiers;


/*!
    @property   settings
    @abstract   The feed settings of the client.
    @discussion If the settings have not been modified, returns the default settings.

                This property attempts to communicate with the PubSubAgent process and causes the agent 
                to launch if it is not already running.  If PubSubAgent cannot be contacted, an exception 
                will be thrown with the name <code>PSException</code>.  To avoid problems, you should 
                always be prepared to catch an exception thrown by this property.
*/
@property (retain) PSFeedSettings * settings;


/*!
    @property   dateLastUpdated
    @abstract   The date and time associated with the most recent feed-change notification delivered to the receiver's delegate.
    @discussion If no notifications have been sent at the time this method was called, it returns the date and time that the receiver
                was created. Because feeds and entries can change when
                a client isn't running, store the value from <code>dateLastUpdated</code> when your application quits, and pass
                that value to <code>sendChangesSinceDate:</code> to retrieve any notifications that would have been called while
                your application was not running.                
*/
@property (readonly) NSDate * dateLastUpdated;


/*!
    @method     sendChangesSinceDate:
    @abstract   Calls the delegate methods and sends the corresponding notifications that would have been called if the client had been running since the specified date.
    @param      dateLastUpdated  The date after which you want changes sent.
    @discussion Some clients may choose to associate their data with various
                Publication Subscription instances.  Since feeds and articles can change when
                a client isn't running, <code>dateLastUpdated</code> and <code>sendChangesSinceDate:</code>
                are needed to maintain a synchronized state. The typical date passed
                to this method is the value that was returned by the <code>dateLastUpdated</code> method just
                before the application quit.
*/
- (void) sendChangesSinceDate:(NSDate *)dateLastUpdated;


/*!
    @method     addFeed:
    @abstract   Subscribes the client to the given feed.
    @param      feed  The existing feed object to subscribe to. 
    @result     <code>YES</code> on success; <code>NO</code> if an immediate error occurred.
    @discussion A feed object may only belong to one client, so if the given feed has already
                been added to any other client, this method will fail. Instead, create
                a new feed object with the same URL as the existing one or use <code>addFeedWithURL:</code>.
*/
- (BOOL) addFeed: (PSFeed*)feed;


/*!
    @method     addFeedWithURL:
    @abstract   Subscribes the client to the feed at the given URL.
    @param      url  The URL of the feed. Must be an <code>HTTP</code>, <code>HTTPS</code>, or <code>FEED</code> protocol.
    @result     The subscribed feed, or <code>nil</code> if an error occurred.
    @discussion This method creates a subscribed feed from the given URL.
                If a feed with this URL is already subscribed, this method returns a feed object from the existing data in the PubSub Database.
*/
- (PSFeed *) addFeedWithURL: (NSURL*)url;


/*!
    @method     removeFeed:
    @abstract   Unsubscribes the client from a feed.
    @param      feed  The feed to be removed.
    @result     <code>YES</code> if the client is unsubscribed; <code>NO</code> if an error occurred.
*/
- (BOOL) removeFeed:(PSFeed *)feed;


/*!
    @method     feedWithURL:
    @abstract   Returns the subscribed feed with the given URL.
    @param url  The URL of the feed.
    @result     The feed from the given URL.
*/
- (PSFeed *) feedWithURL: (NSURL*)url;


/*!
    @property   feeds
    @abstract   An array of all the feeds subscribed to by the client.
    @discussion The ordering of the feeds in the array is undefined.
*/
@property (readonly) NSArray * feeds;


/*!
    @method     feedWithIdentifier:
    @abstract   Returns the feed with the specified identifier.
    @param      identifier  The unique string associated with a feed.
    @result     The feed associated with the specified identifier, or <code>nil</code> if the client isn't subscribed to the feed associated with this identifier.
    @discussion Feed identifiers are persistent, unique, and unchangeable, so they provide a way for your application
                to establish a persistent reference to an feed.
                This method considers only feeds subscribed to by this client.
*/
- (PSFeed *) feedWithIdentifier: (NSString*)identifier;


/*!
    @method     entryWithIdentifier:
    @abstract   Returns the entry with the given identifier.
    @param      identifier  The unique string associated with a entry.
    @result     The entry associated with the specified identifier, or <code>nil</code> if the identifier is not in a subscribed feed.
    @discussion Entry identifiers are persistent, unique, and unchangeable, so they provide a way for your application
                to establish a persistent reference to an entry.
                This method considers only entries in feeds subscribed to by this client.
*/
- (PSEntry *) entryWithIdentifier: (NSString*)identifier;


/*! @property signature 
    @abstract The application bundle identifier associated with the <code>PSClient</code> instance. 
    @discussion  */
@property (readonly, retain) NSString * signature;


/*! @property isPrivate 
    @abstract A Boolean value that indicates whether the client instance is private. 
    @discussion A private <code>PSClient</code> instance can be accessed only by an application process whose bundle identifier matches the signature of the <code>PSClient</code>. */
@property (getter=isPrivate, setter=setPrivate:) BOOL isPrivate;



/*!
    @property   delegate
    @abstract   The delegate of the client.
    @discussion The delegate should implement the <code>PSClientDelegate</code> informal protocol.
*/
@property (assign) id delegate;

@end


@interface NSObject (PSClientDelegate)

- (void) feedDidBeginRefresh:(PSFeed *)feed;
- (void) feedDidEndRefresh:(PSFeed *)feed;

- (void) feed:(PSFeed *)feed didAddEntries:(NSArray *)entries;
- (void) feed:(PSFeed *)feed didRemoveEntriesWithIdentifiers:(NSArray *)identifiers;
- (void) feed:(PSFeed *)feed didUpdateEntries:(NSArray *)entries;
- (void) feed:(PSFeed *)feed didChangeFlagsInEntries:(NSArray *)entries;

- (void) enclosure:(PSEnclosure *)enclosure downloadStateDidChange:(PSEnclosureDownloadState)state;

@end

#endif
                                                                                                                                                                                                                                                              PSContent.h                                                                                         0100644 0001750 0001750 00000005073 12566222666 033064  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSContent.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
@class NSData;
@class NSString;


#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED


/*!
    @class      PSContent
    @discussion A <code>PSContent</code> object contains the description from an entry.
                The entry's description is usually a plain text string or an HTML string,
                although it is allowed to be any data type. <code>PSContent</code> provides accessor methods for
                retrieving the content information as either plain text, HTML formatted text or an <code>NSData</code> object.
                Both summaries and entries are represented as content objects. It is not recommended that you subclass <code>PSContent</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide
*/

NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSContent : NSObject 
{
    @private
    id _internal;
}


/*!
    @method     plainTextString
    @abstract   A plain text representation of the content. (read-only)
    @discussion If the original MIME type is HTML, tags are removed and entities decoded.
                Additionally, minimal formatting is applied, such as line breaks between HTML blocks.
                If the content is nontextual, this method returns <code>nil</code>.
*/
@property (readonly) NSString * plainTextString;


/*! @property HTMLString 
    @abstract An HTML representation of the content. (read-only) 
    @discussion The string returned is an HTML fragment corresponding to the content, not the entire document. To display it, you would typically set this as the <code>innerHTML</code> of a <code>DIV</code> element. If the original MIME type is HTML, the content will have been "tidied" to fix common problems such as unclosed tags and to remove elements such as <code>SCRIPT</code>. If the original MIME type is plain text, then HTML metacharacters will be escaped. If the content is non-textual, this method returns <code>nil</code>. */
@property (readonly, retain) NSString * HTMLString;


/*! @property data 
    @abstract The raw data representation of the content. (read-only) 
    @discussion  */
@property (readonly, retain) NSData * data;


/*! @property MIMEType 
    @abstract The MIME type of the content. (read-only) 
    @discussion The MIME type returned is in the format <code>text/html</code> or <code>text/plain</code>. */
@property (readonly, retain) NSString * MIMEType;



@end

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     PSEnclosure.h                                                                                       0100644 0001750 0001750 00000014522 12566222666 033410  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSEnclosure.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
@class NSString;
@class NSData;
@class NSURL;
@class NSError;


#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED

@class PSEntry;


/*!
    @class      PSEnclosure
    @discussion A <code>PSEnclosure</code> object contains a link to an external resource such as a sound or image file  
                associated with an entry. An enclosure is similar to an attachment 
                in an email, but rather than include the file itself in the entry, only a link is provided. Each enclosure
                object is linked to a entry object.
                
                An enclosure object provides properties for retrieving information about the enclosure, such as its URL, length,
                and MIME type, as well as methods to download the file linked to in the enclosure. Invoke the <code>download:</code> method to
                begin downloading the enclosure's file. To check on the status of the download, register for the
                <code>PSEnclosureDownloadStateDidChangeNotification</code> notification. It is not recommended that you subclass <code>PSEnclosure</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide
*/

NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSEnclosure : NSObject {
    @private
    id _internal;
}


/*!
    @method     entry
    @abstract   The entry with which the enclosure is linked. (read-only)
    @discussion The inverse of the <code>enclosures</code> property of the <code>PSEntry</code> class.
                An enclosure follows a one-to-one relationship and can only be linked to a single entry. 

                This method attempts to communicate with the PubSubAgent process and causes the agent 
                to launch if it is not already running.  If PubSubAgent cannot be contacted, an exception 
                will be thrown with the name <code>PSException</code>.  To avoid problems, you should 
                always be prepared to catch an exception thrown by this method.
    @result     The entry associated with the enclosure.
*/
@property (readonly) PSEntry* entry;


/*! @property URL 
    @abstract A URL to the enclosure's location. (read-only) 
    @discussion The return value corresponds to the <code>'href'</code> attribute of the <link rel="enclosure"> element in Atom and to the <code>'url'</code> attribute of the <enclosure> element in RSS. */
@property (readonly, retain) NSURL * URL;


/*! @property MIMEType 
    @abstract The MIME type of the enclosure. (read-only) 
    @discussion The MIME type corresponds to the <code>'type'</code> attribute of the <link rel="enclosure"> element in Atom and to the <code>'type'</code> attribute of the <enclosure> element in RSS. */
@property (readonly, retain) NSString * MIMEType;



/*!
    @method     length
    @abstract   The length of the file in the enclosure. (read-only)
    @discussion The return value is initially parsed from the length attribute of a <link rel="enclosure"> element
                in Atom and the length attribute of <enclosure> in RSS.
                If this attribute does not exist in the feed, the return value is <code>0</code>.
                The value may change after downloading begins and the true length is
                received from the server.
    @result     The length, in bytes, of the file in the enclosure.
*/
@property (readonly) long long length;


typedef enum {
    PSEnclosureDownloadIsIdle NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),       // A download has not been requested
    PSEnclosureDownloadIsQueued NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),     // A download will commence sometime in the future 
    PSEnclosureDownloadIsActive NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),     // A download is currently active (check downloadProgress)
    PSEnclosureDownloadDidFinish NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),    // A download successfully finish
    PSEnclosureDownloadDidFail NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),      // A download failed (check downloadError)
    PSEnclosureDownloadWasDeleted NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA)    // A download finished, but another application or the user removed the result
} PSEnclosureDownloadState NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA);

/*
    @method     downloadState
    @abstract   The current state of the download. (read-only)
*/
@property (readonly) PSEnclosureDownloadState downloadState;


/*
    @method     downloadProgress
    @abstract   The fraction of the enclosure that has been downloaded. (read-only)
*/
@property (readonly) double downloadProgress;


/*
    @method     downloadError
    @abstract   The error, if any, from the last download attempt. (read-only)
    @discussion This is cleared to nil when <code>download:</code> is called again.
*/
@property (readonly) NSError * downloadError;


/*!
    @property downloadedPath 
    @abstract The path to the downloaded enclosure. (read-only)
    @discussion The method returns <code>nil</code> unless the download has completed.
*/
@property (readonly) NSString * downloadedPath;


/*
    @method     download:
    @abstract   Requests that the enclosure be downloaded.
    @discussion Downloading is an asynchronous operation so this method does not block. Because the operation is
                performed asynchronously, errors are more likely to show up later during the download then when the download is started.
                These can be accessed via the enclosure's <code>downloadError</code> property.
                If a download is currently in progress, this has no effect.
                If the enclosure has already been downloaded, this will re-download it if it's changed.
    @result     YES if the download begins, NO if the download cannot be started. If this method returns NO, the <code>error</code> 
                parameter is also set.
*/
- (BOOL) download: (NSError**)error;


/*
    @method     cancelDownload
    @abstract   Cancels any download currently in progress.
*/
- (void) cancelDownload;


/*
    @method     deleteDownload
    @abstract   Deletes the downloaded file located at <code>downloadedPath</code>.
*/
- (void) deleteDownload;


@end

extern NSString* const PSEnclosureDownloadStateDidChangeNotification NS_DEPRECATED(10_5, 10_9, NA, NA);

#endif
                                                                                                                                                                              PSEntry.h                                                                                           0100644 0001750 0001750 00000026355 12566222666 032561  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSEntry.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
@class NSArray;
@class NSString;
@class NSDate;
@class NSTimeZone;
@class NSURL;
@class NSXMLElement;


#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED

@class PSFeed;
@class PSContent;


/*!
    @class      PSEntry
    @discussion A <code>PSEntry</code> is an entry in a feed object. Entry objects are acquired from the
                associated feed object.
				
                Most of the attributes for an entry are defined by the RSS 2.0 and Atom 1.0 specs.
                Any attributes defined by those specs (or nonstandard extensions) that are not
                natively supported by PSEntry can be retrieved from the entry objects' <code>XMLRepresentation</code> property.

                Some <code>PSEntry</code> attributes are specific to the local copy of the entry,
                such as <code>isRead</code> and <code>receivedDate</code>.

                Since the values of the RSS and Atom attributes are derived from data received
                from the server, they may be missing or incorrect. If you have the opportunity, use
                attributes generated by the Publication Subscription framework, as it is more reliable.
                For example, using <code>updatedDate</code> to find entries that have been modified 
                since a certain time would be unreliable. Use <code>receivedDate</code> instead. It 
                is not recommended that you subclass <code>PSEntry</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide
*/

NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSEntry : NSObject 
{
    @protected
    id _internal;
}


/*!
    @property   feed
    @abstract   The feed the receiver belongs to. (read-only)
*/
@property (readonly) PSFeed * feed;


/*! @property identifier 
    @abstract A string that uniquely identifies an entry. (read-only) 
    @discussion This identifier can be used as a key to map between <code>PSEntry</code> objects and your application's own data model objects.
    This identifier is generated internally by the Publication Subscription framework by combining the identifier of the feed with the 'most unique' attribute of the entry. You should not make any assumptions about its format or size, as they may change.
    (Although Atom defines a mandatory <id> element, it cannot be used for this purpose since the RSS equivalent (<guid>) is optional.  Thus, Publication Subscription uses its own mechanism for uniquely identifying entries. Clients can manually parse the <code>XMLRepresentation</code> output if they need the Atom <id> element or RSS <guid> element.) */
@property (readonly, retain) NSString * identifier;


/*! @property title 
    @abstract The entry's title. (read-only) 
    @discussion Corresponds to the <title> element in both Atom and RSS. */
@property (readonly, retain) NSString * title;


/*! @property rights 
    @abstract The entry's copyright information. (read-only) 
    @discussion Corresponds to the <rights> element in Atom.  There is no RSS equivalent. */
@property (readonly, retain) NSString * rights;


/*! @property content 
    @abstract The content of the entry. (read-only) 
    @discussion Corresponds to the <content> element in Atom and <description> in RSS. */
@property (readonly, retain) PSContent * content;


/*! @property summary 
    @abstract A string that contains the entry's summary. (read-only) 
    @discussion Corresponds to the <summary> element in Atom.  There is no RSS equivalent. */
@property (readonly, retain) PSContent * summary;


/*! @property dateUpdated 
    @abstract The date that the entry was last modified. (read-only) 
    @discussion The return value corresponds to the <updated> elements in Atom.  There is no RSS equivalent. To get the local date and time that the latest update was received by the user's machine, use the <code>localDateUpdated</code> method. */
@property (readonly, retain) NSDate * dateUpdated;


@property (readonly, retain) NSTimeZone * timeZoneUpdated;


/*! @property datePublished 
    @abstract The date that the entry was published. (read-only) 
    @discussion The return value corresponds to the <published> element in Atom and the <pubDate> element in RSS. */
@property (readonly, retain) NSDate * datePublished;


@property (readonly, retain) NSTimeZone * timeZonePublished;


/*! @property dateCreated 
    @abstract The date that the entry was created. (read-only) 
    @discussion The date corresponds to the <dc:created> element in Dublin Core (http://dublincore.org/).  There is no Atom nor RSS equivalent. When it exists, this date is set by either the author's blogging software or the server and is stored in the feed. It may be earlier than <code>datePublished</code> if the entry was not immediately published after being written. To get the local date and time when the entry was received by the user's machine, use the <code>locateDateCreated</code> method instead. */
@property (readonly, retain) NSDate * dateCreated;


@property (readonly, retain) NSTimeZone * timeZoneCreated;


/*! @property dateForDisplay 
    @abstract A guaranteed non-<code>nil</code> date for the entry, suitable for displaying or sorting. (read-only) 
    @discussion This returns the entry's <code>datePublished</code> if available, otherwise the <code>dateUpdated</code>; if neither appears in the feed, it falls back on the <code>localDateCreated</code>. Use this method if you need a guaranteed non-<code>nil</code> date, as in sorting or displaying in a table column. */
@property (readonly, retain) NSDate * dateForDisplay;


/*! @property baseURL 
    @abstract The base URL for resolving relative links.(read-only) 
    @discussion The returned URL corresponds to the xml:base attribute on an Atom <entry> element or an RSS <item> element. Publication Subscription resolves all parsed URLs to be absolute.  However, this is not possible for URLs embedded within an entry's content or summary.  If a client chooses to display content in HTML form, the base URL must be set for relative URLs to work.Note: Atom technically allows the xml:base attribute to appear as an attribute of the <content> or <summary> elements.  In practice, this seldom occurs.  A client may choose to parse these xml:base attributes manually via <code>XMLRepresentation</code>. */
@property (readonly, retain) NSURL * baseURL;


/*! @property alternateURL 
    @abstract The URL to an alternate version of the entry resource. (read-only) 
    @discussion Traditionally, the alternate URL corresponds to the HTML version of an entry. The URL is parsed from the <link rel="alternate"> element in Atom and the <link> element in RSS. This URL is often called a permalink. */
@property (readonly, retain) NSURL * alternateURL;


/*! @property authors 
    @abstract An array of author objects representing the entry's authors. (read-only) 
    @discussion The authors correspond to the <author> element in Atom and RSS. This method currently only supports a single author, the first one. */
@property (readonly, retain) NSArray * authors;


/*! @property contributors 
    @abstract An array of author objects that contains the entry's contributors. (read-only) 
    @discussion Corresponds to the <contributor> element in Atom.  There is no RSS equivalent. */
@property (readonly, retain) NSArray * contributors;


/*! @property enclosures 
    @abstract An array of enclosure objects of the enclosures of an entry. (read-only) 
    @discussion The enclosures correspond to the <link rel="enclosure"> element in Atom and the <enclosure> element in RSS. The order of the enclosure objects returned is undefined. */
@property (readonly, retain) NSArray * enclosures;


/*! @property current 
    @abstract A Boolean value indicating whether an entry still appears in its feed. (read-only) 
    @discussion Typically, a feed contains 10-15 entries at a time, so as a new entry is added, the oldest entry "falls off." If the property returns NO, the entry has 'fallen off the bottom' of the feed but is still in the PubSub Database. */
@property (readonly, getter=isCurrent) BOOL current;


/*! @property read 
    @abstract A Boolean value indicating whether or not the entry is read. 
    @discussion Read status of an article is shared among all applications using the Publication Subscription framework. By default, this method returns <code>NO</code>. */
@property (getter=isRead, setter=setRead:) BOOL read;


/*! @property flagged 
    @abstract A Boolean value indicating whether or not the entry is flagged. 
    @discussion Flagged status of an article is shared among all applications using the Publication Subscription framework. By default, this method returns <code>NO</code>. */
@property (getter=isFlagged, setter=setFlagged:) BOOL flagged;


/*! @property localDateCreated 
    @abstract The date when the entry was created in the local Publication Subscription database. (read-only) 
    @discussion  */
@property (readonly, retain) NSDate * localDateCreated;


/*! @property localDateUpdated 
    @abstract The date when the entry was updated in the local Publication Subscription database. (read-only) 
    @discussion  */
@property (readonly, retain) NSDate * localDateUpdated;



/*!
    @property   titleForDisplay
    @abstract   A string to display as the entry's title. (read-only)
    @discussion This property returns up to the first 100 characters 
                of the entry's summary, or content if there is no summary.
*/
@property (readonly) NSString * titleForDisplay;


/*!
    @property   authorsForDisplay
    @abstract   The authors of the entry as a string. (read-only)
    @discussion If there are multiple authors, they are comma-delimited.
*/
@property (readonly) NSString* authorsForDisplay;


/*!
    @property   XMLRepresentation
    @abstract   The raw XML entry. (read-only)
    @discussion The raw XML is parsed into a DOM tree, and the <entry> or <article> element
                is returned.
*/
@property (readonly) NSXMLElement * XMLRepresentation;


/*!
    @method     extensionXMLElementsUsingNamespace:
    @abstract   Returns an array of the extension XML elements that are outside of the RSS or Atom standards.
    @param      nameSpace  The extension XML elements you want to receive. Pass <code>nil</code> to get all extension XML elements, regardless of their namespace.
    @result     An array containing the extension XML elements requested. Make sure to pass a namespace and not a namespace prefix
                for the <code>nameSpace</code> parameter. For example, to retrieve the iTunes Podcast elements, use
                <code>extensionXMLElementsUsingNamespace:@"http://www.itunes.com/dtds/podcast-1.0.dtd"</code>, not
                <code>extensionXMLElementsUsingNamespace:@"itunes"</code>.
                
                This method attempts to communicate with the PubSubAgent process and causes the agent 
                to launch if it is not already running.  If PubSubAgent cannot be contacted, an exception 
                will be thrown with the name <code>PSException</code>.  To avoid problems, you should 
                always be prepared to catch an exception thrown by this method.
*/
- (NSArray *) extensionXMLElementsUsingNamespace:(NSString *)nameSpace;


@end

#endif
                                                                                                                                                                                                                                                                                   PSFeed.h                                                                                            0100644 0001750 0001750 00000043130 12566222666 032311  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSFeed.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
@class NSArray;
@class NSEnumerator;
@class NSString;
@class NSData;
@class NSDate;
@class NSTimeZone;
@class NSError;
@class NSURL;
@class NSXMLElement;


#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED

@class PSFeedSettings, PSClient;


extern NSString* const PSErrorDomain NS_DEPRECATED(10_5, 10_9, NA, NA);
enum {
    PSInternalError NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA) = 1,                // An internal error occurred
    PSNotAFeedError NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA)                     // Data is not Atom or RSS
} NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA);


/*!
    @enum       PSFeedFormat
    @abstract   The data format of a feed.
    @discussion The PubSub framework handles two types of feeds: RSS and Atom. These are both standards built with XML.
    @constant   These types will track the latest published specifications for RSS and Atom. Their current versions are as follows:
                PSRSSType RSS 2.0, as specified by http://blogs.law.harvard.edu/tech/rss
                PSAtomType Atom 1.0, as specified by http://www.ietf.org/rfc/rfc4287.txt
*/
typedef enum {
    PSUnknownFormat NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA) = 0,
    PSRSSFormat NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA)     = 1,
    PSAtomFormat NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA)    = 2,
} PSFeedFormat NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA);


/*!
    @class      PSFeed
    @discussion A <code>PSFeed</code> object is used for managing RSS and Atom feeds. Each feed object represents
                a single feed. Feed objects can either be created for subscription or parsing. To subscribe to
                a feed, use <code>initWithURL:</code> and then add the newly returned feed object to a client. To use Publication
                Subscription to simply parse a feed, download the feed with <code>NSURL</code> and then use <code>initWithData:URL:</code>.

                Many of the feed's attributes are defined by the RSS 2.0 and Atom 1.0 specs. Any
                attributes defined by the specifications (or nonstandard extensions) that do not appear
                in this API can be retrieved using the <code>XMLRepresentation</code> method.

                Since the values of the RSS and Atom attributes are derived from data received
                from the server, they may be missing or incorrect. If you have the opportunity, use
                attributes generated by the Publication Subscription framework, as it is more reliable.
                For example, using <code>updatedDate</code> to find entries that have been modified 
                since a certain time would be unreliable. Use <code>receivedDate</code> instead. It 
                is not recommended that you subclass <code>PSFeed</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide
*/

NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSFeed : NSObject
{
    @protected
    id _internal;
}


/*!
    @method     initWithURL:
    @abstract   Returns a temporary feed object initialized from the specified URL.
    @discussion This method does not cause any network activity. The feed's entries and metadata
                will not be available until the feed is added to a client (via the <code>
                addFeedWithURL:</code> method of <code>PSClient</code>) or its update method is called, and the feed has been
                downloaded and parsed.
 
                Temporary feeds are not associated with any <code>PSClient</code>, and their contents will
                not be stored persistently. If desired, this feed can later be made persistent and
                'subscribed to' by calling addFeed: on a <code>PSClient</code> object.
 
                Temporary feeds are not automatically updated on a schedule. Instead, you must
                call "update" whenever you want to check for updates.
    @param      aURL  The URL of the feed.
    @result     A feed from the specified URL.
*/
- (id) initWithURL: (NSURL*)url;


/*!
    @method     initWithData:URL:
    @abstract   Returns a temporary feed object initialized to the specified XML data located at the specified URL.
    @discussion This method does not cause any network activity. The feed is parsed directly from the
                provided XML data. The URL parameter is required only to resolve relative URLs, and
                for future reference if this object is later subscribed to.
 
                See the discussion under the <code>initWithURL:</code> method for more information about
                temporary feeds.
    @param      data  A data object containing the feed. This object can be obtained by using NSURL
                or <code>NSURLConnection</code> to download the feed in its entirety.
    @param      aURL  The URL of the feed.
    @result     A feed parsed from the specified data.
*/
- (id) initWithData:(NSData *)data URL:(NSURL *)aURL;


/*!
    @method    client
    @abstract  Returns the client that the receiver belongs to, or <code>nil</code> if the receiver has not been
               added to any client.
    @result    The client associated with the receiver.
*/
@property (readonly) PSClient * client;


/*! @property identifier 
    @abstract A string that uniquely identifies the feed. (read-only) 
    @discussion This identifier can be used as a key to map between <code>PSFeed</code> objects and your application's own data model objects.
    This identifier is generated internally by the Publication Subscription framework. You should not make any assumptions about its format or size, as they may change.
    Although Atom defines a mandatory <id> element, it cannot be used for this purpose since the RSS equivalent (<guid>) is optional.  Thus, Publication Subscription uses its own mechanism for uniquely identifying feeds. Clients can manually parse the XMLRepresentation if they need the Atom <id> element or RSS <guid> element. */
@property (readonly, retain) NSString * identifier;


/*! @property title 
    @abstract A string that contains the title of a given feed. (read-only) 
    @discussion The returned title corresponds to the <title> element in both Atom and RSS. */
@property (readonly, retain) NSString * title;


/*! @property subtitle 
    @abstract A string that contains the subtitle (or description) of a given feed. (read-only) 
    @discussion The returned subtitle corresponds to the <subtitle> element in Atom and <description> in RSS. */
@property (readonly, retain) NSString * subtitle;


/*! @property rights 
    @abstract The legal information of a given feed. (read-only) 
    @discussion The returned string corresponds to the <rights> elements in Atom and <copyright> in RSS. */
@property (readonly, retain) NSString * rights;


/*! @property dateUpdated 
    @abstract A date that represents the most recent time the feed was modified. (read-only) 
    @discussion The date is stored in the feed and set by the software that creates it. Therefore, it is associated with the feed's server, not the machine your application is running on. The returned date corresponds to the <updated> element in Atom and the <lastBuildDate> element in RSS. */
@property (readonly, retain) NSDate * dateUpdated;


@property (readonly, retain) NSTimeZone * timeZoneUpdated;


/*! @property URL 
    @abstract A URL to the feed's original location. 
    @discussion  */
@property (readonly, retain) NSURL * URL;


/*! @property alternateURL 
    @abstract A URL to an alternate version of the feed resource. (read-only) 
    @discussion Traditionally, the alternate URL corresponds to the homepage associated with the feed. The URL is parsed from the <link rel="alternate"> element in Atom and the <link> element in RSS. */
@property (readonly, retain) NSURL * alternateURL;


/*! @property iconURL 
    @abstract A URL to the feed's icon. (read-only) 
    @discussion Icons should have an aspect ratio of 1:1 and be suitable for presentation at a small size.  The URL corresponds to the <icon> element in Atom.  There is no RSS equivalent. */
@property (readonly, retain) NSURL * iconURL;


/*! @property logoURL 
    @abstract A URL to a feed's logo. (read-only) 
    @discussion Even though Atom states that logos should have an aspect ratio of 2:1, RSS prefers a default size of 88 x 31 pixels.  The returned URL corresponds to the <logo> element in Atom and the <image> element in RSS. */
@property (readonly, retain) NSURL * logoURL;


/*! @property redirectedURL 
    @abstract A URL to the current location of a given feed. (read-only) 
    @discussion The URL is to the feed's current location following any redirects. */
@property (readonly, retain) NSURL * redirectedURL;


/*! @property localDateUpdated 
    @abstract The date when the feed and/or its entries were updated in the local Publication Subscription database. (read-only) 
    @discussion This is the date/time that changes in the feed were <i>received</i>, whereas the <code>dateUpdated</code> is the time that changes were <i>published</i> by the server. */
@property (readonly, retain) NSDate * localDateUpdated;


/*! @property login 
    @abstract The user name used if the feed requires authentication. 
    @discussion  */
@property (retain) NSString * login;


/*! @property feedFormat 
    @abstract The data format of the feed (RSS or Atom). (read-only) 
    @discussion  */
@property (readonly) int feedFormat;



/*!
    @property   refreshing
    @abstract   A Boolean value that indicates whether the feed is currently being refreshed. (read-only)
    @discussion	If this property returns a value of <code>NO</code>, this may be because the feed has finished refreshing or because the feed
                has not started refreshing. To get more accurate output, register for the <code>PSFeedRefreshingNotification</code> notification
                and then call this method.
*/
@property (readonly, getter=isRefreshing) BOOL refreshing;


/*!
    @method     refresh
    @abstract   Forces a refresh of the feed.
    @discussion If any immediate problem is encountered, this method returns <code>NO</code> and sets the error parameter.
             	However, refreshing is an asynchronous operation, and errors are more likely to show up later.
             	These can be accessed via the feed's <code>latestError</code> property after it sends a notification
             	that it's ended refreshing.

                To check on the status of the refresh, register for the <code>PSFeedRefreshingNotification</code> notification
                and then check the <code>isRefreshing</code> property.
*/
- (BOOL) refresh: (NSError**)error;


/*!
    @property   lastError
    @abstract   The most recent error that occurred during the feed update, or <code>nil</code> if it was successful. (read-only)
    @discussion Can be used to obtain failure status such as "Feed is 404", "Server is not responding", etc.
*/
@property (readonly) NSError * lastError;


/*!
    @property   settings
    @abstract   The current feed settings.
    @discussion The client's settings are used whenever a feed's settings are undefined.

                This property attempts to communicate with the PubSubAgent process and causes the agent 
                to launch if it is not already running.  If PubSubAgent cannot be contacted, an exception 
                will be thrown with the name <code>PSException</code>.  To avoid problems, you should 
                always be prepared to catch an exception thrown by this property.
*/
@property (retain) PSFeedSettings * settings;


/*!
    @property   links
    @abstract   An array of link objects that provide links to other URLs that are declared in this feed. (read-only)
    @discussion Feeds and HTML pages can contain both "link" tags (that define explicit links to
                other URLs) and the purposes of those links. This is often used for
                "autodiscovery", where a web page contains a link to its feed.
*/
@property (readonly) NSArray * links;


/*!
    @method     setPassword:
    @abstract   Sets the password to use for a feed whose server requires authentication.
    @discussion The password is stored in the user's default keychain, associated with this feed's
                URL.
 
                There is intentionally no corresponding <code>getPassword</code> method, because only PubSub
                itself needs to access the password.
 
                This method is optional. If no password is found in the keychain when the feed
                is being updated, Publication Subscription will prompt the user for one, and 
                add it to the keychain. However, your application's UI may want to let the user 
                enter the password at the same time as he enters the user name.
                
                This method attempts to communicate with the PubSubAgent process and causes the agent 
                to launch if it is not already running.  If PubSubAgent cannot be contacted, an exception 
                will be thrown with the name <code>PSException</code>.  To avoid problems, you should 
                always be prepared to catch an exception thrown by this method.
*/
- (void) setPassword: (NSString*)password;


/*!
    @method     entryEnumeratorSortedBy:
    @abstract   Returns an enumerator that contains the feed's entries sorted by the specified sort descriptors.
    @discussion This method allows the entries to be loaded into memory one at a time, which
                can make it more efficient than the regular entries method. (However, you
                also need to wrap your enumeration loop in an autorelease pool
                and drain the pool at the end of the loop. Otherwise, prior entries will not 
                be deallocated until sometime after the loop finishes.)

                If <code>sortDescriptors</code> is empty or <code>nil</code>, the entries will not be sorted.
    @param      sortDescriptors	An array containing a sort descriptor for sorting the feed's entries.
    @result     An enumerator containing each of the feed's entries, sorted by the given
                sort descriptors.
*/
- (NSEnumerator*) entryEnumeratorSortedBy: (NSArray*)sortDescriptors;



/*!
    @property   unreadCount
    @abstract   The number of unread entries in the feed. (read-only)
    @discussion To track this value (by displaying it in your UI, for example),
                call this method when this <code>PSFeed</code> sends a <code>PSFeedEntriesChangedNotification</code>.
*/
@property (readonly) int unreadCount;


/*!
    @method     entries
    @abstract   An array of entry objects that contains the entries of a feed. (read-only)
    @discussion Corresponds to <entry> in Atom and <item> in RSS.
*/
@property (readonly) NSArray * entries;


/*!
    @method     XMLRepresentation
    @abstract   Returns the raw feed, including entries.
    @discussion Equivalent to calling <code>XMLRepresentationWithEntries:YES</code>.
    @result     The raw feed including entry and article elements.
*/
- (NSXMLElement *) XMLRepresentation;


/*!
    @method     XMLRepresentationWithEntries:
    @abstract   Returns the raw feed, with or without the entry and article elements.
    @discussion The raw feed data is parsed into a DOM tree, and the root element (<feed> or <rss>)
                is returned. No other processing is performed.
                Setting the <code>withEntries</code> flag to <code>NO</code> causes the <entry> or <article> elements to be
                stripped out; other nonstandard child elements are kept, however.
    @param      withEntries  A boolean value to determine whether or not the resulting <code>NSXMLElement<code> object will
                contain the entry and article elements.
    @result     The raw feed.
*/
- (NSXMLElement *) XMLRepresentationWithEntries:(BOOL)withEntries;


/*!
    @method     extensionXMLElementsUsingNamespace:
    @abstract   Returns an array of the extension XML elements outside of the RSS and/or Atom standards.
    @discussion Pass <code>nil</code> for <code>nameSpace</code> to get all extension XML elements, 
                regardless of their namespace. This works at the feed-level only. You can use
                the same method on an entry to retrieve extension XML elements at that level.
                When using the <code>nameSpace</code> parameter, make sure to pass a full namespace, such as
                <code>http://www.itunes.com/dtds/podcast-1.0.dtd</code>, instead of the namespace prefix.
    @param      nameSpace  The namespace of the extension XML elements; pass <code>nil</code> to receive
                all extension XML elements.
    @result     An array of <code>NSXMLElement</code> objects containing the appropriate extension XML elements.
*/
- (NSArray *) extensionXMLElementsUsingNamespace:(NSString *)nameSpace;


@end


/* Notification posted by a PSFeed when it begins or ends refreshing.
   (Call -isRefreshing to get its new state.) */
extern NSString* const PSFeedRefreshingNotification NS_DEPRECATED(10_5, 10_9, NA, NA);


/* Notification posted by a PSFeed when entries are changed.
   The keys below appear in the userInfo dictionary, and their values are NSArrays of PSEntries,
   except for PSFeedRemovedEntriesKey whose value is an NSArray of entry identifier strings. */
extern NSString* const PSFeedEntriesChangedNotification NS_DEPRECATED(10_5, 10_9, NA, NA);

extern NSString* const PSFeedAddedEntriesKey NS_DEPRECATED(10_5, 10_9, NA, NA);
extern NSString* const PSFeedRemovedEntriesKey NS_DEPRECATED(10_5, 10_9, NA, NA);
extern NSString* const PSFeedUpdatedEntriesKey NS_DEPRECATED(10_5, 10_9, NA, NA);
extern NSString* const PSFeedDidChangeEntryFlagsKey NS_DEPRECATED(10_5, 10_9, NA, NA);

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                        PSFeedSettings.h                                                                                    0100644 0001750 0001750 00000010376 12566222534 034032  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSFeedSettings.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
#import <Foundation/NSDate.h>

@class NSArray;


#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED

/*!
    @defined    PSFeedSettingsIntervalDefault
    @discussion Specifies that the per-client default interval should be used. 
*/
#define PSFeedSettingsIntervalDefault 0.0

/*!
    @defined    PSFeedSettingsIntervalNever
    @discussion Specifies that refreshing or expiring should never occur automatically.
                As a result, the application or user must force an update manually by calling the update method.
*/
#define PSFeedSettingsIntervalNever -1.0

/*!
    @defined    PSFeedSettingsUnlimitedSize
    @discussion Specifies no limit on enclosure sizes. 
*/
#define PSFeedSettingsUnlimitedSize 0

/*!
    @defined    PSFeedSettingsAllTypes
    @discussion Specifies all MIME types.
*/
#define PSFeedSettingsAllTypes nil


/*!
    @class      PSFeedSettings
    @discussion A <code>PSFeedSettings</code> object contains settings pertaining to retrieving subscribed feeds. 
                You can access and modify all feed settings, which include refresh and expiration intervals, and enclosure 
                download policies. Initially all the values are set to default settings, meaning that they inherit from 
                the PSClient's own feed settings object, but you can override those by putting explicit 
                values in the feed's feed settings object.

                Globally, there can be multiple feed subscriptions with different settings for the same URL. For example, 
                two clients may subscribe to the same feed URL but with different refresh intervals or enclosure policies. 
                In this case the PubSub Agent uses the most liberal policy: the minimum refresh interval, the maximum 
                enclosure size limit, and so on. It is not recommended that you subclass <code>PSFeedSettings</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide
*/

NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSFeedSettings : NSObject
{
    @private
    id _internal;
}


/*!
    @method     defaultFeedSettings
    @abstract   Returns a settings object initialized with the default values for a feed.
*/
+ (PSFeedSettings*) defaultFeedSettings;

/*!
    @method     defaultClientSettings
    @abstract   Returns a settings object initialized with the default values for a client.
    @discussion The returned object can be used to determine the actual default values of
                settings such as the refresh interval.
*/
+ (PSFeedSettings*) defaultClientSettings;


/*!
    @property   refreshInterval
    @abstract   The desired time interval that the PubSub Agent will poll for updates.
*/
@property NSTimeInterval refreshInterval;


/*!
    @property expirationInterval
    @abstract The amount of time before an entry is deleted.
*/
@property NSTimeInterval expirationInterval;


/*!
    @property     refreshesInBackground
    @abstract 	  A Boolean value that determines whether or not the PubSub Agent will refresh the feed when the client application is not running.
    @discussion   Returns YES if the PubSub Agent will refresh the feed in the background, NO if it will not.
*/
@property BOOL refreshesInBackground;


/*!
    @property     downloadsEnclosures
    @abstract     A Boolean value that indicates whether or not the PubSub Agent will automatically download enclosures associated with new entries.
    @discussion   Returns YES if the PubSub Agent will automatically download enclosures, NO if it will not. By default,
                  enclosures are not automatically downloaded.
*/
@property BOOL downloadsEnclosures;


/*!
    @property  maxEnclosureSize
    @abstract  The maximum size, in bytes, of an enclosure to be downloaded automatically.
*/
@property double maxEnclosureSize;


/*!
    @property   enclosureTypes
    @abstract   An array of string objects that contain the enclosure MIME types to be downloaded automatically.
    @discussion A wildcard can be used as a MIME subtype, for example, <code>image/ *</code>.
*/
@property (retain) NSArray* enclosureTypes;


@end

#endif
                                                                                                                                                                                                                                                                  PSLink.h                                                                                            0100644 0001750 0001750 00000014434 12566222534 032342  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PSLink.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/


#import <Foundation/NSObject.h>
@class NSArray, NSSet, NSString, NSURL;

#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED


/*! @enum       PSLinkKind
    @abstract   Result of the linkKind accessor. Defines common types of links.
    @constant   PSLinkToOther
                    Any type of feed not covered by this enumeration.
    @constant   PSLinkToRSS
                    An RSS feed.
    @constant   PSLinkToAtom
                    An Atom feed.
    @constant   PSLinkToAtomService
                    An Atom Publishing Protocol document.
    @constant   PSLinkToFOAF
                    An FOAF file (social network data).
    @constant   PSLinkTORSD
                    A Really Simple Discovery (RSD) document for locating Blogger API.
    @constant   PSLinkToSelf
                    Definitive URL of the current feed.
    @constant   PSLinkToAlternate
                    An alternate representation of the current feed (usually an HTML page).
*/
typedef enum {
    PSLinkToOther NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),            // Any other kind not covered by this enumeration
    PSLinkToRSS NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),              // RSS feed
    PSLinkToAtom NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),             // Atom feed
    PSLinkToAtomService NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),      // Atom Publishing Protocol service document
    PSLinkToFOAF NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),             // FOAF file (social network data)
    PSLinkToRSD NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),              // RSD (really simple discovery) document for locating Blogger API
    PSLinkToSelf NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA),             // Definitive URL of this very resource
    PSLinkToAlternate NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA)         // Some other alternate representation (usually an HTML page)
} PSLinkKind NS_ENUM_DEPRECATED(10_5, 10_9, NA, NA);


/*!
    @class      PSLink
    @discussion A <code>PSLink</code> object represents an explicitly declared link from a feed
                or HTML document to a document at another URL. These links are declared by means of
                <link> elements in the source document.
                
                Links serve several purposes, the most common of which is "autodiscovery": a way to
                automatically locate the feeds associated with a particular web page. If a <code>PSFeed</code> object
                parses a document that turns out to be an HTML page instead of an Atom or RSS feed,
                the feed object's <code>feedFormat</code> will be <code>PSUnknownFormat</code>, but its links method will return
                an array of <code>PSLink</code> objects representing all of the <link> tags found in the HTML.
                Most HTML pages that belong to a website that serves feeds will contain links of type
                <code>PSLinkToAtom</code> or <code>PSLinkToRSS</code>. If you find these, you can use their URLs to initialize a
                new <code>PSFeed</code> object which will parse the actual feed. It is not recommended that you subclass <code>PSLink</code>.
    @attribute 	Framework /System/Library/Frameworks/PubSub.framework
    @seealso 	//apple_ref/doc/uid/TP40004945 Publication Subscription Programming Guide
*/

NS_DEPRECATED(10_5, 10_9, NA, NA)
@interface PSLink : NSObject
{
    @private
    PSLinkKind _linkKind;
    NSSet *_relations;
    NSString *_MIMEType;
    NSString *_title;
    NSString *_href;
    NSURL *_baseURL;
}


/*!
    @method     linksInXML:baseURL:
    @abstract   Returns an array of links objects, one for each link found in an XML tree.
    @param      root  The root element of the parsed XMLDocument.
    @param      baseURL  An optional absolute URL, used to interpret relative URLs in links.
                If provided, the <code>URL</code> accessors of all returned <code>PSLink</code> objects will always return
                absolute URLs.
    @return     An array of <code>PSLink</code> objects, one for each link found in the XML tree.
    @discussion Use this method if you have retrieved an XML (or HTML) document without creating
                a <code>PSFeed</code> object and want to examine it for links. If you just want to find the
                links from a <code>PSFeed</code> object, call its <code>links</code> method instead.
*/
+ (NSArray*) linksInXML: (NSXMLElement*)root baseURL: (NSURL*)baseURL;


/*!
    @property   linkKind
    @abstract   The format of the linked-to document. (read-only)
    @discussion The type of a link is derived by looking at the relations, title, and MIME type,
                as defined by the relevant specifications.
*/
@property (readonly) PSLinkKind linkKind;

/*!
    @property   URL
    @abstract   The URL linked to. (read-only)
    @discussion In HTML and Atom documents, this is the value of the <code>href</code> attribute.
                In RSS documents, it is the <i>content</i> of the <code><link></code> element.
*/
@property (readonly) NSURL *URL;

/*!
    @property   relations
    @abstract   The set of relations declared by the <code><link></code> element. (read-only)
    @discussion This value is derived from the <code>rel</code> attribute, as defined by the HTML
                and Atom specifications. The value of the attribute is split into words
                at whitespace boundaries, and the individual words lowercased to facilitate
                case-insensitive comparison.
                
                The default value of this method, if no <code>rel</code> attribute exists, is a set
                containing the string <code>alternate</code>.
*/
@property (readonly) NSSet *relations;

/*!
    @property   title
    @abstract   The human-readable title of the link, if it exists. (read-only)
    @discussion In HTML and Atom documents, this is the value of the <code>title</code> attribute.
                Links in RSS documents have no title.
*/
@property (readonly) NSString *title;

/*!
    @property   MIMEType
    @abstract   The MIME type of the linked-to document. (read-only)
    @discussion In HTML and Atom documents, this is the value of the <code>type</code> attribute.
                Links in RSS documents have no MIME type.
*/
@property (readonly) NSString *MIMEType;

@end


#endif
                                                                                                                                                                                                                                    PubSub.h                                                                                            0100644 0001750 0001750 00000000607 12566222534 032377  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/Headers                                                                      /*
    PubSub.h
    PubSub

    Copyright 2006, Apple Computer, Inc.  All rights reserved.
*/

#if MAC_OS_X_VERSION_10_5 <= MAC_OS_X_VERSION_MAX_ALLOWED

#import <PubSub/PSClient.h>
#import <PubSub/PSFeed.h>
#import <PubSub/PSFeedSettings.h>
#import <PubSub/PSEntry.h>
#import <PubSub/PSAuthor.h>
#import <PubSub/PSContent.h>
#import <PubSub/PSEnclosure.h>
#import <PubSub/PSLink.h>

#endif
                                                                                                                         osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/A/PubSub.tbd0100644 0001750 0001750 00000001531 12571375070 031422  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        ---
archs:           [ i386, x86_64 ]
platform:        macosx
install-name:    /System/Library/Frameworks/PubSub.framework/Versions/A/PubSub
exports:         
  - archs:           [ i386, x86_64 ]
    symbols:         [ _PSAgentFrameworkMain, _PSEnclosureDownloadStateDidChangeNotification, 
                       _PSErrorDomain, _PSException, _PSFeedAddedEntriesKey, 
                       _PSFeedDidChangeEntryFlagsKey, _PSFeedEntriesChangedNotification, 
                       _PSFeedRefreshingNotification, _PSFeedRemovedEntriesKey, 
                       _PSFeedUnreadCountChangedNotification, _PSFeedUpdatedEntriesKey ]
    objc-classes:    [ _PSAggregate, _PSAuthor, _PSClient, _PSContent, 
                       _PSEnclosure, _PSEntry, _PSFeed, _PSFeedSettings, 
                       _PSFeedURLUtils, _PSLink, _PSSCGIProtocol, _PSUtils ]
...
                                                                                                                                                                       osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/PubSub.framework/Versions/Current     0120777 0001750 0001750 00000000000 12620245063 031007  2A                                                                                                   ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/                     0040755 0001750 0001750 00000000000 12612224744 025620  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/            0040755 0001750 0001750 00000000000 12612224743 027375  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/     0040755 0001750 0001750 00000000000 12612224743 030523  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        2.5.1/                                                                                              0040755 0001750 0001750 00000000000 12612224743 031107  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC                                                                         ApplicationPlugins/                                                                                 0040755 0001750 0001750 00000000000 12612224743 034714  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1                                                                   Colloqui/                                                                                           0040755 0001750 0001750 00000000000 12612224743 036503  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins                                                Colloquy Plugin SDK/                                                                                0040755 0001750 0001750 00000000000 12612224743 042133  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui                                       Headers/                                                                                            0040755 0001750 0001750 00000000000 12612224743 043506  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   Headers/JVAppearancePreferences.h                                                                   0100644 0001750 0001750 00000003743 12073616736 050354  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSNibDeclarations.h>
#import "NSPreferences.h"

@class WebView;
@class NSPopUpButton;
@class NSTextView;
@class JVFontPreviewField;
@class NSTextField;
@class NSStepper;
@class NSSet;
@class NSDrawer;
@class NSTableView;
@class JVStyle;

@interface JVAppearancePreferences : NSPreferencesModule {
	IBOutlet WebView *preview;
	IBOutlet NSPopUpButton *styles;
	IBOutlet NSPopUpButton *emoticons;
	IBOutlet JVFontPreviewField *standardFont;
	IBOutlet NSTextField *minimumFontSize;
	IBOutlet NSStepper *minimumFontSizeStepper;
	IBOutlet NSTextField *baseFontSize;
	IBOutlet NSStepper *baseFontSizeStepper;
	IBOutlet NSButton *useStyleFont;
	IBOutlet NSDrawer *optionsDrawer;
	IBOutlet NSTableView *optionsTable;
	IBOutlet NSPanel *newVariantPanel;
	IBOutlet NSTextField *newVariantName;
	BOOL _variantLocked;
	BOOL _alertDisplayed;
	JVStyle *_style;
	NSSet *_emoticonBundles;
	NSMutableArray *_styleOptions;
	NSString *_userStyle;
}
- (void) selectStyleWithIdentifier:(NSString *) identifier;
- (void) selectEmoticonsWithIdentifier:(NSString *) identifier;

- (void) setStyle:(JVStyle *) style;

- (void) changePreferences;

- (IBAction) changeBaseFontSize:(id) sender;
- (IBAction) changeMinimumFontSize:(id) sender;

- (IBAction) changeDefaultChatStyle:(id) sender;

- (IBAction) noGraphicEmoticons:(id) sender;
- (IBAction) changeDefaultEmoticons:(id) sender;

- (IBAction) changeUseStyleFont:(id) sender;

- (IBAction) showOptions:(id) sender;

- (void) updateChatStylesMenu;
- (void) updateEmoticonsMenu;
- (void) updatePreview;
- (void) updateVariant;

- (void) parseStyleOptions;
- (NSString *) valueOfProperty:(NSString *) property forSelector:(NSString *) selector inStyle:(NSString *) style;
- (void) setStyleProperty:(NSString *) property forSelector:(NSString *) selector toValue:(NSString *) value;
- (void) setUserStyle:(NSString *) style;
- (void) saveStyleOptions;

- (void) showNewVariantSheet;
- (IBAction) closeNewVariantSheet:(id) sender;
- (IBAction) createNewVariant:(id) sender;
@end
                             Headers/JVBuddy.h                                                                                   0100644 0001750 0001750 00000005011 12073616736 045170  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <Foundation/NSDate.h>

extern NSString *JVBuddyCameOnlineNotification;
extern NSString *JVBuddyWentOfflineNotification;

extern NSString *JVBuddyNicknameCameOnlineNotification;
extern NSString *JVBuddyNicknameWentOfflineNotification;
extern NSString *JVBuddyNicknameStatusChangedNotification;

extern NSString *JVBuddyActiveNicknameChangedNotification;

@class ABPerson;
@class NSMutableSet;
@class NSMutableDictionary;
@class NSURL;
@class NSString;
@class NSImage;
@class NSSet;

typedef enum {
	JVBuddyOfflineStatus = 'oflN',
	JVBuddyAvailableStatus = 'avaL',
	JVBuddyIdleStatus = 'idlE',
	JVBuddyAwayStatus = 'awaY'
} JVBuddyStatus;

typedef enum {
	JVBuddyActiveNickname = 0x0,
	JVBuddyGivenNickname = 0x1,
	JVBuddyFullName = 0x2
} JVBuddyName;

@interface JVBuddy : NSObject {
	ABPerson *_person;
	NSMutableSet *_nicknames;
	NSMutableSet *_onlineNicknames;
	NSMutableDictionary *_nicknameStatus;
	NSURL *_activeNickname;
}
+ (JVBuddyName) preferredName;
+ (void) setPreferredName:(JVBuddyName) preferred;

+ (id) buddyWithPerson:(ABPerson *) person;
+ (id) buddyWithUniqueIdentifier:(NSString *) identifier;

- (id) initWithPerson:(ABPerson *) person;

- (void) registerWithApplicableConnections;
- (void) unregisterWithApplicableConnections;

- (NSURL *) activeNickname;
- (void) setActiveNickname:(NSURL *) nickname;

- (JVBuddyStatus) status;
- (BOOL) isOnline;
- (NSTimeInterval) idleTime;
- (NSString *) awayMessage;

- (NSSet *) nicknames;
- (NSSet *) onlineNicknames;

- (void) addNickname:(NSURL *) nickname;
- (void) removeNickname:(NSURL *) nickname;
- (void) replaceNickname:(NSURL *) old withNickname:(NSURL *) new;

- (NSImage *) picture;
- (void) setPicture:(NSImage *) picture;

- (NSString *) preferredName;
- (JVBuddyName) preferredNameWillReturn;
- (unsigned int) availableNames;

- (NSString *) compositeName;
- (NSString *) firstName;
- (NSString *) lastName;
- (NSString *) primaryEmail;
- (NSString *) givenNickname;

- (void) setFirstName:(NSString *) name;
- (void) setLastName:(NSString *) name;
- (void) setPrimaryEmail:(NSString *) email;
- (void) setGivenNickname:(NSString *) name;

- (NSString *) uniqueIdentifier;
- (ABPerson *) person;
- (void) editInAddressBook;
- (void) viewInAddressBook;

- (NSComparisonResult) availabilityCompare:(JVBuddy *) buddy;
- (NSComparisonResult) firstNameCompare:(JVBuddy *) buddy;
- (NSComparisonResult) lastNameCompare:(JVBuddy *) buddy;
- (NSComparisonResult) serverCompare:(JVBuddy *) buddy;
- (NSComparisonResult) nicknameCompare:(JVBuddy *) buddy;
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Headers/JVChatConsole.h                                                                             0100644 0001750 0001750 00000002221 12073616736 046323  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <AppKit/NSNibDeclarations.h>
#import "JVChatWindowController.h"

@class NSView;
@class NSTextView;
@class MVTextView;
@class MVChatConnection;

@interface JVChatConsole : NSObject <JVChatViewController> {
	@protected
	IBOutlet NSView *contents;
	IBOutlet NSTextView *display;
	IBOutlet MVTextView *send;
	BOOL _nibLoaded;
	BOOL _verbose;
	BOOL _ignorePRIVMSG;
	BOOL _paused;
	float _sendHeight;
	BOOL _scrollerIsAtBottom;
	BOOL _forceSplitViewPosition;
	int _historyIndex;
	NSMutableArray *_sendHistory;
	JVChatWindowController *_windowController;
	MVChatConnection *_connection;
}
- (id) initWithConnection:(MVChatConnection *) connection;

- (void) pause;
- (void) resume;
- (BOOL) isPaused;
	
- (void) addMessageToDisplay:(NSString *) message asOutboundMessage:(BOOL) outbound;
- (IBAction) send:(id) sender;
@end

@interface JVChatConsole (JVChatConsoleScripting) <JVChatListItemScripting>
- (NSNumber *) uniqueIdentifier;
@end

@interface NSObject (MVChatPluginCommandSupport)
- (BOOL) processUserCommand:(NSString *) command withArguments:(NSAttributedString *) arguments toConnection:(MVChatConnection *) connection;
@end
                                                                                                                                                                                                                                                                                                                                                                               Headers/JVChatController.h                                                                          0100644 0001750 0001750 00000004132 12073616736 047047  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <AppKit/NSNibDeclarations.h>

@class NSMutableSet;
@class MVChatConnection;
@class NSSet;
@class JVChatWindowController;
@class NSString;
@class JVChatRoom;
@class JVDirectChat;
@class JVChatTranscript;
@class JVChatConsole;
@class NSAttributedString;

@protocol JVChatViewController;

@interface JVChatController : NSObject {
	@private
	NSMutableArray *_chatWindows;
	NSMutableArray *_chatControllers;
	NSMutableDictionary *_ignoreRules;
}
+ (JVChatController *) defaultManager;

- (NSSet *) allChatWindowControllers;
- (JVChatWindowController *) newChatWindowController;
- (void) disposeChatWindowController:(JVChatWindowController *) controller;

- (NSSet *) allChatViewControllers;
- (NSSet *) chatViewControllersWithConnection:(MVChatConnection *) connection;
- (NSSet *) chatViewControllersOfClass:(Class) class;
- (NSSet *) chatViewControllersKindOfClass:(Class) class;
- (JVChatRoom *) chatViewControllerForRoom:(NSString *) room withConnection:(MVChatConnection *) connection ifExists:(BOOL) exists;
- (JVDirectChat *) chatViewControllerForUser:(NSString *) user withConnection:(MVChatConnection *) connection ifExists:(BOOL) exists;
- (JVDirectChat *) chatViewControllerForUser:(NSString *) user withConnection:(MVChatConnection *) connection ifExists:(BOOL) exists userInitiated:(BOOL) requested;
- (JVChatTranscript *) chatViewControllerForTranscript:(NSString *) filename;
- (JVChatConsole *) chatConsoleForConnection:(MVChatConnection *) connection ifExists:(BOOL) exists;

- (void) disposeViewController:(id <JVChatViewController>) controller;
- (void) detachViewController:(id <JVChatViewController>) controller;

- (IBAction) detachView:(id) sender;

- (void) addIgnore:(NSString *)inIgnoreName withKey:(NSString *)ignoreKeyExpression inRooms:(NSArray *) rooms usesRegex:(BOOL) regex isMember:(BOOL) member;
- (BOOL) shouldIgnoreUser:(NSString *) user inRoom:(NSString *) room;
- (BOOL) shouldIgnoreMessage:(NSAttributedString *) message inRoom:(NSString *) room;
- (BOOL) shouldIgnoreMessage:(NSAttributedString *) message fromUser:(NSString *)user inRoom:(NSString *) room;
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                      Headers/JVChatMessage.h                                                                             0100644 0001750 0001750 00000001725 12073616736 046315  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>

@class JVChatTranscript;

@interface JVChatMessage : NSObject {
	@protected
	/* xmlNodePtr */ void *_node;
	unsigned long long _messageNumber;
	unsigned long long _envelopeNumber;
	JVChatTranscript *_transcript;
	NSString *_sender;
	NSString *_htmlMessage;
	NSTextStorage *_attributedMessage;
	NSDate *_date;
	BOOL _action;
	BOOL _highlighted;
	BOOL _loaded;
}
+ (id) messageWithNode:(/* xmlNode */ void *) node messageIndex:(unsigned long long) messageIndex andTranscript:(JVChatTranscript *) transcript;
- (id) initWithNode:(/* xmlNode */ void *) node messageIndex:(unsigned long long) messageIndex andTranscript:(JVChatTranscript *) transcript;

- (NSDate *) date;
- (NSString *) sender;

- (NSTextStorage *) message;
- (NSString *) messageAsPlainText;
- (NSString *) messageAsHTML;

- (BOOL) isAction;
- (BOOL) isHighlighted;

- (JVChatTranscript *) transcript;
- (unsigned long long) messageNumber;
- (unsigned long long) envelopeNumber;
@end
                                           Headers/JVChatRoom.h                                                                                0100644 0001750 0001750 00000007072 12073616736 045646  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import "JVDirectChat.h"
#import <AppKit/NSNibDeclarations.h>

@class NSTextView;
@class WebView;
@class NSMutableDictionary;
@class NSMutableArray;
@class NSData;
@class NSString;
@class JVChatRoomMember;

extern NSString *MVChatRoomModeChangedNotification;

@interface JVChatRoom : JVDirectChat {
	@protected
	IBOutlet NSTextView *topicLine;

	NSMutableDictionary *_members;
	NSMutableArray *_sortedMembers;
	NSMutableSet *_nextMessageAlertMembers;
	NSAttributedString *_topicAttributed;
	NSData *_topic;
	NSString *_topicAuth;
	NSString *_key;
	unsigned int _modes;
	unsigned int _limit;

	BOOL _kickedFromRoom;
	BOOL _inRoom;
	BOOL _keepAfterPart;
	
	BOOL _initialBanlistReceived;
}
- (void) joined;
- (void) parting;

- (void) joinChat:(id) sender;
- (void) partChat:(id) sender;

- (BOOL) keepAfterPart;
- (void) setKeepAfterPart:(BOOL) keep;

- (void) addWhoInformationToMembers:(NSArray *) members;
- (void) addExistingMembersToChat:(NSArray *) members;
- (void) addMemberToChat:(NSString *) member withInformation:(NSDictionary *) info;
- (void) removeChatMember:(NSString *) member withReason:(NSData *) reason;
- (void) changeChatMember:(NSString *) member to:(NSString *) nick;

- (void) promoteChatMember:(NSString *) member by:(NSString *) by;
- (void) demoteChatMember:(NSString *) member by:(NSString *) by;
- (void) voiceChatMember:(NSString *) member by:(NSString *) by;
- (void) devoiceChatMember:(NSString *) member by:(NSString *) by;

- (void) chatMember:(NSString *) member kickedBy:(NSString *) by forReason:(NSData *) reason;
- (void) kickedFromChatBy:(NSString *) by forReason:(NSData *) reason;

- (void) newBan:(NSString *) ban by:(NSString *) by;
- (void) removedBan:(NSString *) ban by:(NSString *) by;
- (void) banlistReceived;

- (void) changeTopic:(NSData *) topic by:(NSString *) author displayChange:(BOOL) showChange;
- (NSAttributedString *) topic;

- (void) setModes:(unsigned int) modes;
- (unsigned int) modes;

- (void) setKey:(NSString *) key;
- (NSString *) key;

- (void) setLimit:(unsigned int) limit;
- (unsigned int) limit;

- (JVChatRoomMember *) chatRoomMemberWithName:(NSString *) name;
- (void) resortMembers;
@end

@interface NSObject (MVChatPluginRoomSupport)
- (BOOL) processUserCommand:(NSString *) command withArguments:(NSAttributedString *) arguments toRoom:(JVChatRoom *) room;

- (void) processMessage:(NSMutableString *) message asAction:(BOOL) action fromMember:(JVChatRoomMember *) member inRoom:(JVChatRoom *) room;
- (void) processMessage:(NSMutableAttributedString *) message asAction:(BOOL) action toRoom:(JVChatRoom *) room;

- (void) memberJoined:(JVChatRoomMember *) member inRoom:(JVChatRoom *) room;
- (void) memberParted:(JVChatRoomMember *) member fromRoom:(JVChatRoom *) room forReason:(NSString *) reason;
- (void) memberKicked:(JVChatRoomMember *) member fromRoom:(JVChatRoom *) room by:(JVChatRoomMember *) by forReason:(NSString *) reason;

- (void) memberPromoted:(JVChatRoomMember *) member inRoom:(JVChatRoom *) room by:(JVChatRoomMember *) by;
- (void) memberDemoted:(JVChatRoomMember *) member inRoom:(JVChatRoom *) room by:(JVChatRoomMember *) by;
- (void) memberVoiced:(JVChatRoomMember *) member inRoom:(JVChatRoom *) room by:(JVChatRoomMember *) by;
- (void) memberDevoiced:(JVChatRoomMember *) member inRoom:(JVChatRoom *) room by:(JVChatRoomMember *) by;

- (void) joinedRoom:(JVChatRoom *) room;
- (void) partingFromRoom:(JVChatRoom *) room;
- (void) kickedFromRoom:(JVChatRoom *) room by:(JVChatRoomMember *) by forReason:(NSString *) reason;

- (void) topicChangedTo:(NSString *) topic inRoom:(JVChatRoom *) room by:(JVChatRoomMember *) member;
@end                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Headers/JVChatRoomBrowser.h                                                                         0100644 0001750 0001750 00000002551 12073616736 047207  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSWindowController.h>
#import <AppKit/NSNibDeclarations.h>

@class MVChatConnection;
@class NSTableView;
@class NSTabView;
@class NSPopUpButton;
@class NSComboBox;
@class NSTextField;
@class NSButton;
@class NSMutableArray;
@class NSMutableDictionary;

@interface JVChatRoomBrowser : NSWindowController {
	IBOutlet NSTableView *roomsTable;
	IBOutlet NSTabView *borwserArea;
	IBOutlet NSTabView *searchArea;
	IBOutlet NSPopUpButton *connectionPopup;
	IBOutlet NSComboBox *roomField;
	IBOutlet NSTextField *searchField;
	IBOutlet NSTextField *indexResults;
	IBOutlet NSTextField *indexAndFindResults;
	IBOutlet NSButton *showBroswer;
	IBOutlet NSButton *acceptButton;
	BOOL _collapsed;
	BOOL _ascending;
	BOOL _needsRefresh;
	NSString *_sortColumn;
	MVChatConnection *_connection;
	NSMutableDictionary *_roomResults;
	NSMutableArray *_roomOrder;
	NSString *_currentFilter;
	NSTimer *_refreshTimer;
}
+ (id) chatRoomBrowserForConnection:(MVChatConnection *) connection;

- (IBAction) close:(id) sender;
- (IBAction) joinRoom:(id) sender;

- (IBAction) hideRoomBrowser:(id) sender;
- (IBAction) showRoomBrowser:(id) sender;
- (IBAction) toggleRoomBrowser:(id) sender;

- (IBAction) changeConnection:(id) sender;

- (void) setFilter:(NSString *) filter;
- (NSString *) filter;

- (void) setConnection:(MVChatConnection *) connection;
- (MVChatConnection *) connection;
@end
                                                                                                                                                       Headers/JVChatRoomMember.h                                                                          0100644 0001750 0001750 00000003606 12073616736 046775  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import "JVChatWindowController.h"

@class JVChatRoom;
@class NSString;
@class MVChatConnection;
@class JVBuddy;

@interface JVChatRoomMember : NSObject <JVChatListItem> {
	JVChatRoom *_parent;
	NSString *_nickname;
	NSString *_address;
	NSString *_realName;
	JVBuddy *_buddy;
	BOOL _operator;
	BOOL _halfOperator;
	BOOL _serverOperator;
	BOOL _voice;
	
	// Custom ban ivars
	BOOL _nibLoaded;
	IBOutlet NSTextField *banTitle;
	IBOutlet NSTextField *firstTitle;
	IBOutlet NSTextField *secondTitle;
	IBOutlet NSTextField *firstField;
	IBOutlet NSTextField *secondField;
	IBOutlet NSButton *banButton;
	IBOutlet NSButton *cancelButton;
	IBOutlet NSWindow *banWindow;
}
- (id) initWithRoom:(JVChatRoom *) room andNickname:(NSString *) name;

- (NSComparisonResult) compare:(JVChatRoomMember *) member;
- (NSComparisonResult) compareUsingStatus:(JVChatRoomMember *) member;
- (NSComparisonResult) compareUsingBuddyStatus:(JVChatRoomMember *) member;

- (MVChatConnection *) connection;
- (NSString *) nickname;
- (NSString *) realName;
- (NSString *) address;
- (JVBuddy *) buddy;

- (BOOL) voice;
- (BOOL) operator;
- (BOOL) halfOperator;
- (BOOL) serverOperator;
- (BOOL) isLocalUser;

- (IBAction) startChat:(id) sender;
- (IBAction) sendFile:(id) sender;
- (IBAction) addBuddy:(id) sender;

- (IBAction) toggleOperatorStatus:(id) sender;
- (IBAction) toggleVoiceStatus:(id) sender;
- (IBAction) kick:(id) sender;
- (IBAction) ban:(id) sender;
- (IBAction) customKick:(id) sender;
- (IBAction) customBan:(id) sender;
- (IBAction) kickban:(id) sender;
- (IBAction) customKickban:(id) sender;

- (IBAction) closeKickSheet:(id) sender;
- (IBAction) closeBanSheet:(id) sender;
- (IBAction) closeKickbanSheet:(id) sender;
- (IBAction) cancelSheet:(id) sender;
@end

#pragma mark -

@interface JVChatRoomMember (JVChatRoomMemberScripting) <JVChatListItemScripting>
- (NSNumber *) uniqueIdentifier;
@end                                                                                                                          Headers/JVChatTranscript.h                                                                          0100644 0001750 0001750 00000004106 12073616736 047056  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSString.h>
#import <Foundation/NSObject.h>
#import <AppKit/NSNibDeclarations.h>
#import "JVChatWindowController.h"

@class WebView;
@class MVMenuButton;
@class NSMutableSet;
@class NSString;
@class JVStyle;
@class NSBundle;
@class NSDictionary;
@class NSMutableDictionary;
@class JVChatMessage;
@class NSLock;

extern NSMutableSet *JVChatStyleBundles;
extern NSMutableSet *JVChatEmoticonBundles;

extern NSString *JVChatStylesScannedNotification;
extern NSString *JVChatEmoticonsScannedNotification;

@interface JVChatTranscript : NSObject <JVChatViewController> {
	@protected
	IBOutlet NSView *contents;
	IBOutlet WebView *display;
	BOOL _nibLoaded;

	JVChatWindowController *_windowController;

	NSString *_filePath;
	BOOL _isArchive;

	NSLock *_logLock;
	void *_xmlLog; /* xmlDocPtr */
	NSMutableArray *_messages;

	NSMenu *_styleMenu;
	JVStyle *_chatStyle;
	NSString *_chatStyleVariant;
	NSMutableDictionary *_styleParams;

	NSMenu *_emoticonMenu;
	NSBundle *_chatEmoticons;
	NSDictionary *_emoticonMappings;

	BOOL _previousStyleSwitch;
}
- (id) initWithTranscript:(NSString *) filename;

- (void) saveTranscriptTo:(NSString *) path;

- (IBAction) changeChatStyle:(id) sender;
- (void) setChatStyle:(JVStyle *) style withVariant:(NSString *) variant;
- (JVStyle *) chatStyle;

- (IBAction) changeChatStyleVariant:(id) sender;
- (void) setChatStyleVariant:(NSString *) variant;
- (NSString *) chatStyleVariant;

- (IBAction) changeChatEmoticons:(id) sender;
- (void) setChatEmoticons:(NSBundle *) emoticons;
- (void) setChatEmoticons:(NSBundle *) emoticons performRefresh:(BOOL) refresh;
- (NSBundle *) chatEmoticons;

- (unsigned long) numberOfMessages;
- (JVChatMessage *) messageAtIndex:(unsigned long) index;
- (NSArray *) messagesInRange:(NSRange) range;

- (IBAction) leaveChat:(id) sender;
@end

#pragma mark -

@interface JVChatTranscript (JVChatTranscriptScripting) <JVChatListItemScripting>
- (NSNumber *) uniqueIdentifier;
@end

#pragma mark -

@interface NSObject (MVChatPluginLinkClickSupport)
- (BOOL) handleClickedLink:(NSURL *) url inView:(id <JVChatViewController>) view;
@end                                                                                                                                                                                                                                                                                                                                                                                                                                                          Headers/JVChatWindowController.h                                                                    0100644 0001750 0001750 00000007664 12073616736 050254  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSWindowController.h>
#import <AppKit/NSNibDeclarations.h>
#import "JVInspectorController.h"

@class NSDrawer;
@class NSOutlineView;
@class MVMenuButton;
@class NSMutableArray;
@class MVChatConnection;
@class NSArray;
@class NSToolbarItem;
@class NSString;
@class NSView;
@class JVChatWindowController;
@class NSToolbar;
@class NSImage;
@class NSMenu;

@protocol JVChatViewController;
@protocol JVChatListItem;

extern NSString *JVToolbarToggleChatDrawerItemIdentifier;
extern NSString *JVToolbarToggleChatActivityItemIdentifier;
extern NSString *JVChatViewPboardType;

@interface JVChatWindowController : NSWindowController <JVInspectionDelegator> {
	@protected
	IBOutlet NSDrawer *viewsDrawer;
	IBOutlet NSOutlineView *chatViewsOutlineView;
	IBOutlet MVMenuButton *viewActionButton;
	IBOutlet MVMenuButton *favoritesButton;
	IBOutlet MVMenuButton *activityToolbarButton;
	NSToolbarItem *_activityToolbarItem;
	NSView *_placeHolder;
	NSMutableArray *_views;
	id <JVChatViewController> _activeViewController;
	BOOL _usesSmallIcons;
}
- (void) showChatViewController:(id <JVChatViewController>) controller;

- (void) addChatViewController:(id <JVChatViewController>) controller;
- (void) insertChatViewController:(id <JVChatViewController>) controller atIndex:(unsigned int) index;

- (void) removeChatViewController:(id <JVChatViewController>) controller;
- (void) removeChatViewControllerAtIndex:(unsigned int) index;
- (void) removeAllChatViewControllers;

- (void) replaceChatViewController:(id <JVChatViewController>) controller withController:(id <JVChatViewController>) newController;
- (void) replaceChatViewControllerAtIndex:(unsigned int) index withController:(id <JVChatViewController>) controller;

- (NSArray *) chatViewControllersForConnection:(MVChatConnection *) connection;
- (NSArray *) chatViewControllersWithControllerClass:(Class) class;
- (NSArray *) allChatViewControllers;

- (id <JVChatViewController>) activeChatViewController;
- (id <JVChatListItem>) selectedListItem;

- (IBAction) getInfo:(id) sender;

- (IBAction) joinRoom:(id) sender;

- (IBAction) closeCurrentPanel:(id) sender;
- (IBAction) detachCurrentPanel:(id) sender;
- (IBAction) selectPreviousPanel:(id) sender;
- (IBAction) selectPreviousActivePanel:(id) sender;
- (IBAction) selectNextPanel:(id) sender;
- (IBAction) selectNextActivePanel:(id) sender;

- (NSToolbarItem *) toggleChatDrawerToolbarItem;
- (NSToolbarItem *) chatActivityToolbarItem;
- (IBAction) toggleViewsDrawer:(id) sender;
- (IBAction) openViewsDrawer:(id) sender;
- (IBAction) closeViewsDrawer:(id) sender;
	
- (void) reloadListItem:(id <JVChatListItem>) controller andChildren:(BOOL) children;
- (BOOL) isListItemExpanded:(id <JVChatListItem>) item;
- (void) expandListItem:(id <JVChatListItem>) item;
- (void) collapseListItem:(id <JVChatListItem>) item;
@end

@interface JVChatWindowController (JVChatWindowControllerScripting)
- (NSNumber *) uniqueIdentifier;
@end

@protocol JVChatViewController <NSObject, JVChatListItem>
- (MVChatConnection *) connection;

- (JVChatWindowController *) windowController;
- (void) setWindowController:(JVChatWindowController *) controller;

- (NSView *) view;
- (NSResponder *) firstResponder;
- (NSToolbar *) toolbar;
- (NSString *) windowTitle;
- (NSString *) identifier;
@end

@interface NSObject (JVChatViewControllerOptional)
- (void) willSelect;
- (void) didSelect;

- (void) willUnselect;
- (void) didUnselect;

- (void) willDispose;
@end

@protocol JVChatListItemScripting
- (NSNumber *) uniqueIdentifier;
@end

@protocol JVChatListItem <NSObject>
- (id <JVChatListItem>) parent;

- (NSImage *) icon;
- (NSString *) title;
@end

@interface NSObject (JVChatListItemOptional)
- (BOOL) acceptsDraggedFileOfType:(NSString *) type;
- (void) handleDraggedFile:(NSString *) path;
- (IBAction) doubleClicked:(id) sender;
- (BOOL) isEnabled;

- (NSMenu *) menu;
- (NSString *) information;
- (NSString *) toolTip;
- (NSImage *) statusImage;

- (int) numberOfChildren;
- (id) childAtIndex:(int) index;
@end                                                                            Headers/JVDirectChat.h                                                                              0100644 0001750 0001750 00000006200 12073616736 046134  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import "JVChatTranscript.h"
#import <AppKit/NSNibDeclarations.h>
#import <Foundation/NSFileHandle.h>

@class NSView;
@class MVTextView;
@class NSPopUpButton;
@class NSString;
@class NSPanel;
@class MVChatConnection;
@class NSDate;
@class NSMutableData;
@class NSMutableArray;
@class NSMutableDictionary;
@class NSMutableString;
@class NSBundle;
@class NSDictionary;
@class NSToolbar;
@class NSData;
@class NSAttributedString;
@class NSMutableAttributedString;
@class JVBuddy;

@interface JVDirectChat : JVChatTranscript {
	@protected
	IBOutlet MVTextView *send;

	NSString *_target;
	NSStringEncoding _encoding;
	NSMenu *_encodingMenu;
	MVChatConnection *_connection;
	NSMutableArray *_sendHistory;
	NSMutableArray *_waitingAlerts;
	NSMutableDictionary *_waitingAlertNames;
	NSMutableDictionary *_settings;
	NSMenu *_spillEncodingMenu;
	JVBuddy *_buddy;
	NSFileHandle *_logFile;
	NSMutableArray *_messageQueue;

	unsigned int _messageId;
	BOOL _firstMessage;
	BOOL _requiresFullMessage;
	BOOL _isActive;
	unsigned int _newMessageCount;
	unsigned int _newHighlightMessageCount;
	BOOL _cantSendMessages;

	int _historyIndex;	
	float _sendHeight;
	BOOL _scrollerIsAtBottom;
	long _previousLogOffset;
	BOOL _forceSplitViewPosition;
}
- (id) initWithTarget:(NSString *) target forConnection:(MVChatConnection *) connection;

- (void) setTarget:(NSString *) target;
- (NSString *) target;
- (JVBuddy *) buddy;

- (void) unavailable;

- (IBAction) addToFavorites:(id) sender;

- (void) showAlert:(NSPanel *) alert withName:(NSString *) name;

- (void) setPreference:(id) value forKey:(NSString *) key;
- (id) preferenceForKey:(NSString *) key;

- (NSStringEncoding) encoding;
- (IBAction) changeEncoding:(id) sender;	

- (void) addEventMessageToDisplay:(NSString *) message withName:(NSString *) name andAttributes:(NSDictionary *) attributes;
- (void) addEventMessageToDisplay:(NSString *) message withName:(NSString *) name andAttributes:(NSDictionary *) attributes entityEncodeAttributes:(BOOL) encode;
- (void) addMessageToDisplay:(NSData *) message fromUser:(NSString *) user asAction:(BOOL) action;
- (void) processMessage:(NSMutableString *) message asAction:(BOOL) action fromUser:(NSString *) user;
- (void) echoSentMessageToDisplay:(NSAttributedString *) message asAction:(BOOL) action;

- (unsigned int) newMessagesWaiting;
- (unsigned int) newHighlightMessagesWaiting;

- (IBAction) send:(id) sender;
- (void) sendAttributedMessage:(NSMutableAttributedString *) message asAction:(BOOL) action;
- (BOOL) processUserCommand:(NSString *) command withArguments:(NSAttributedString *) arguments;

- (IBAction) clear:(id) sender;
- (IBAction) clearDisplay:(id) sender;
@end

@interface NSObject (MVChatPluginDirectChatSupport)
- (BOOL) processUserCommand:(NSString *) command withArguments:(NSAttributedString *) arguments toChat:(JVDirectChat *) chat;

- (void) processMessage:(NSMutableString *) message asAction:(BOOL) action inChat:(JVDirectChat *) chat;
- (void) processMessage:(NSMutableAttributedString *) message asAction:(BOOL) action toChat:(JVDirectChat *) chat;

- (void) userNamed:(NSString *) nickname isNowKnownAs:(NSString *) newNickname inView:(id <JVChatViewController>) view;
@end
                                                                                                                                                                                                                                                                                                                                                                                                Headers/JVInspectorController.h                                                                     0100644 0001750 0001750 00000002273 12073616736 050142  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSWindowController.h>
#import <AppKit/NSNibDeclarations.h>
#import <Foundation/NSGeometry.h>

@class NSView;
@protocol JVInspection;

@protocol JVInspector <NSObject>
- (NSView *) view;
- (NSSize) minSize;
- (NSString *) title;
- (NSString *) type;
@end

@interface NSObject (JVInspectorOptional)
- (void) willLoad;
- (void) didLoad;

- (BOOL) shouldUnload;
- (void) didUnload;
@end

@protocol JVInspection <NSObject>
- (id <JVInspector>) inspector;
@end

@interface NSObject (JVInspectionOptional)
- (void) willBeInspected;
@end

@protocol JVInspectionDelegator <NSObject>
- (id <JVInspection>) objectToInspect;
- (IBAction) getInfo:(id) sender;
@end

@interface JVInspectorController : NSWindowController {
	BOOL _locked;
	id <JVInspection> _object;
	id <JVInspector> _inspector;
}
+ (JVInspectorController *) sharedInspector;
+ (IBAction) showInspector:(id) sender;
+ (JVInspectorController *) inspectorOfObject:(id <JVInspection>) object;

- (id) initWithObject:(id <JVInspection>) object lockedOn:(BOOL) locked;

- (IBAction) show:(id) sender;
- (BOOL) locked;

- (void) inspectObject:(id <JVInspection>) object;

- (id <JVInspection>) inspectedObject;
- (id <JVInspector>) inspector;
@end
                                                                                                                                                                                                                                                                                                                                     Headers/JVNotificationController.h                                                                  0100644 0001750 0001750 00000000427 12073616736 050621  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>

@class NSLock;

@interface JVNotificationController : NSObject {
	NSMutableDictionary *_bubbles;
}
+ (JVNotificationController *) defaultManager;
- (void) performNotification:(NSString *) identifier withContextInfo:(NSDictionary *) context;
@end
                                                                                                                                                                                                                                         Headers/JVPreferencesController.h                                                                   0100644 0001750 0001750 00000000126 12073616736 050430  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import "NSPreferences.h"

@interface JVPreferencesController : NSPreferences {}
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                          Headers/JVStyle.h                                                                                   0100644 0001750 0001750 00000003733 12073616736 045232  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>

@class NSBundle;
@class NSDictionary;
@class NSArray;
@class NSSet;
@class NSString;
@class NSURL;

extern NSString *JVStylesScannedNotification;
extern NSString *JVDefaultStyleChangedNotification;
extern NSString *JVDefaultStyleVariantChangedNotification;
extern NSString *JVNewStyleVariantAddedNotification;
extern NSString *JVStyleVariantChangedNotification;

@interface JVStyle : NSObject {
	NSBundle *_bundle;
	NSDictionary *_parameters;
	NSArray *_styleOptions;
	NSArray *_variants;
	NSArray *_userVariants;
	void *_XSLStyle; /* xsltStylesheet */
	BOOL _releasing;
}
+ (void) scanForStyles;
+ (NSSet *) styles;
+ (id) styleWithIdentifier:(NSString *) identifier;
+ (id) newWithBundle:(NSBundle *) bundle;

+ (id) defaultStyle;
+ (void) setDefaultStyle:(JVStyle *) style;

- (id) initWithBundle:(NSBundle *) bundle;

- (void) unlink;
- (void) reload;
- (BOOL) isCompliant;

- (NSBundle *) bundle;
- (NSString *) identifier;

- (NSString *) transformXML:(NSString *) xml withParameters:(NSDictionary *) parameters;
- (NSString *) transformXMLDocument:(/* xmlDoc */ void *) document withParameters:(NSDictionary *) parameters;

- (NSComparisonResult) compare:(JVStyle *) style;
- (NSString *) displayName;

- (NSString *) mainVariantDisplayName;
- (NSArray *) variantStyleSheetNames;
- (NSArray *) userVariantStyleSheetNames;
- (BOOL) isUserVariantName:(NSString *) name;
- (NSString *) defaultVariantName;
- (void) setDefaultVariantName:(NSString *) name;

- (NSArray *) styleSheetOptions;

- (void) setMainParameters:(NSDictionary *) parameters;
- (NSDictionary *) mainParameters;

- (NSURL *) baseLocation;
- (NSURL *) mainStyleSheetLocation;
- (NSURL *) variantStyleSheetLocationWithName:(NSString *) name;
- (NSString *) XMLStyleSheetFilePath;
- (NSString *) previewTranscriptFilePath;
- (NSString *) headerFilePath;

- (NSString *) contentsOfMainStyleSheet;
- (NSString *) contentsOfVariantStyleSheetWithName:(NSString *) name;
- (NSString *) contentsOfHeaderFile;
@end                                     Headers/JVTabbedChatWindowController.h                                                              0100644 0001750 0001750 00000001075 12073616736 051344  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <JVChatWindowController.h>

@class AICustomTabsView;
@class NSTabView;
@class NSImageView;

@interface JVTabbedChatWindowController : JVChatWindowController {
	IBOutlet AICustomTabsView *customTabsView;
	IBOutlet NSTabView *tabView;
	IBOutlet NSImageView *icon;
	NSMutableArray *_tabItems;
    BOOL _supressHiding;
    BOOL _tabIsShowing;
    BOOL _autoHideTabBar;
	int _forceTabBarVisible; // -1 = Doesn't matter, 0 = NO, 1 = YES;
    float _tabHeight;
}
- (IBAction) toggleTabBarVisible:(id) sender;
- (void) updateTabBarVisibilityAndAnimate:(BOOL) animate;
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Headers/MVApplicationController.h                                                                   0100644 0001750 0001750 00000001060 12073616736 050433  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Cocoa/Cocoa.h>

extern NSString *JVChatStyleInstalledNotification;
extern NSString *JVChatEmoticonSetInstalledNotification;

@interface MVApplicationController : NSObject {}
- (IBAction) checkForUpdate:(id) sender;
- (IBAction) connectToSupportRoom:(id) sender;
- (IBAction) emailDeveloper:(id) sender;
- (IBAction) productWebsite:(id) sender;

- (IBAction) showPreferences:(id) sender;
- (IBAction) showTransferManager:(id) sender;
- (IBAction) showConnectionManager:(id) sender;
- (IBAction) showBuddyList:(id) sender;

+ (BOOL) isTerminating;
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Headers/MVBuddyListController.h                                                                     0100644 0001750 0001750 00000006031 12073616736 050076  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSWindowController.h>
#import <AppKit/NSNibDeclarations.h>
#import "JVInspectorController.h"

@class MVTableView;
@class NSWindow;
@class NSView;
@class NSMenu;
@class NSButton;
@class NSImageView;
@class NSTextField;
@class NSPopUpButton;
@class JVBuddy;
@class NSMutableSet;
@class NSMutableArray;
@class NSString;
@class NSTimer;
@class ABPeoplePickerController;
@class MVChatConnection;

typedef enum {
	MVAvailabilitySortOrder = 'avlY',
	MVFirstNameSortOrder = 'fSnM',
	MVLastNameSortOrder = 'lSnM',
	MVServerSortOrder = 'serV'
} MVBuddyListSortOrder;

@interface MVBuddyListController : NSWindowController <JVInspectionDelegator> {
	@private
	IBOutlet MVTableView *buddies;
	IBOutlet NSMenu *actionMenu;
	IBOutlet NSButton *sendMessageButton;
	IBOutlet NSButton *infoButton;

	IBOutlet NSWindow *pickerWindow;
	IBOutlet NSView *pickerView;

	IBOutlet NSWindow *newPersonWindow;
	IBOutlet NSTextField *nickname;
	IBOutlet NSPopUpButton *server;
	IBOutlet NSTextField *firstName;
	IBOutlet NSTextField *lastName;
	IBOutlet NSTextField *email;
	IBOutlet NSImageView *image;
	IBOutlet NSButton *addButton;

	NSMutableSet *_buddyList;
	NSMutableSet *_onlineBuddies;
	NSMutableArray *_buddyOrder;
	ABPeoplePickerController* _picker;
	NSString *_addPerson;

	BOOL _showFullNames;
	BOOL _showNicknameAndServer;
	BOOL _showIcons;
	BOOL _showOfflineBuddies;
	MVBuddyListSortOrder _sortOrder;

	float _animationPosition;
	NSMutableArray *_oldPositions;
	NSTimer *_sortTimer;
	BOOL _viewingTop;
	BOOL _needsToAnimate;
	BOOL _animating;
}
+ (MVBuddyListController *) sharedBuddyList;

- (IBAction) getInfo:(id) sender;

- (IBAction) showBuddyList:(id) sender;
- (IBAction) hideBuddyList:(id) sender;

- (JVBuddy *) buddyForNickname:(NSString *) name onServer:(NSString *) address;
- (NSArray *) buddies;
- (NSArray *) onlineBuddies;

- (IBAction) showBuddyPickerSheet:(id) sender;
- (IBAction) cancelBuddySelection:(id) sender;
- (IBAction) confirmBuddySelection:(id) sender;

- (IBAction) showNewPersonSheet:(id) sender;
- (IBAction) cancelNewBuddy:(id) sender;
- (IBAction) confirmNewBuddy:(id) sender;

- (void) setNewBuddyNickname:(NSString *) nick;
- (void) setNewBuddyFullname:(NSString *) name;
- (void) setNewBuddyServer:(MVChatConnection *) connection;

- (IBAction) messageSelectedBuddy:(id) sender;
- (IBAction) sendFileToSelectedBuddy:(id) sender;

- (void) setShowFullNames:(BOOL) flag;
- (BOOL) showFullNames;
- (IBAction) toggleShowFullNames:(id) sender;

- (void) setShowNicknameAndServer:(BOOL) flag;
- (BOOL) showNicknameAndServer;
- (IBAction) toggleShowNicknameAndServer:(id) sender;

- (void) setShowIcons:(BOOL) flag;
- (BOOL) showIcons;
- (IBAction) toggleShowIcons:(id) sender;

- (void) setShowOfflineBuddies:(BOOL) flag;
- (BOOL) showOfflineBuddies;
- (IBAction) toggleShowOfflineBuddies:(id) sender;

- (void) setSortOrder:(MVBuddyListSortOrder) order;
- (MVBuddyListSortOrder) sortOrder;
- (IBAction) sortByAvailability:(id) sender;
- (IBAction) sortByFirstName:(id) sender;
- (IBAction) sortByLastName:(id) sender;
- (IBAction) sortByServer:(id) sender;
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Headers/MVChatConnection.h                                                                          0100644 0001750 0001750 00000024462 12073616736 047036  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <Foundation/NSString.h>

typedef enum {
	MVChatConnectionDisconnectedStatus = 'disC',
	MVChatConnectionServerDisconnectedStatus = 'sdsC',
	MVChatConnectionConnectingStatus = 'conG',
	MVChatConnectionConnectedStatus = 'conD',
	MVChatConnectionSuspendedStatus = 'susP'
} MVChatConnectionStatus;

typedef enum {
	MVChatConnectionNoProxy = 'nonE',
	MVChatConnectionHTTPProxy = 'httP',
	MVChatConnectionHTTPSProxy = 'htpS',
	MVChatConnectionSOCKSProxy = 'sokS'
} MVChatConnectionProxy;

typedef enum {
	MVChatRoomNoModes = 0x0,
	MVChatRoomPrivateMode = 0x1,
	MVChatRoomSecretMode = 0x2,
	MVChatRoomInviteOnlyMode = 0x4,
	MVChatRoomModeratedMode = 0x8,
	MVChatRoomSetTopicOperatorOnlyMode = 0x10,
	MVChatRoomNoOutsideMessagesMode = 0x20,
	MVChatRoomPasswordRequiredMode = 0x40,
	MVChatRoomMemberLimitMode = 0x80
} MVChatRoomMode;

typedef enum {
	MVChatMemberNoModes = 0x0,
	MVChatMemberOperatorMode = 0x1,
	MVChatMemberHalfOperatorMode = 0x2,
	MVChatMemberVoiceMode = 0x4
} MVChatMemberMode;

typedef enum {
	MVChatNoError,
	MVChatConnectingError,
	MVChatNoMatchError,
	MVChatPacketError,
	MVChatBadUserPasswordError,
	MVChatSequenceError,
	MVChatFrameTypeError,
	MVChatPacketSizeError,
	MVChatServerError,
	MVChatUnknownError,
	MVChatBlockedError,
	MVChatWiredPacketError,
	MVChatCallbackNumberError,
	MVChatBadTargetError,
	MVChatNotFoundError,
	MVChatDisconnectError,
	MVChatSocketError,
	MVChatDNSError,
	MVChatVersionError,
	MVChatUserUnavailableError,
	MVChatUserInfoUnavailableError,
	MVChatTooFastError,
	MVChatRoomUnavailableError,
	MVChatIncomingError,
	MVChatUserDisconnectError,
	MVChatInvalidFormatError,
	MVChatIdleFastError,
	MVChatBadRoomError,
	MVChatBadMessageError,
	MVChatBadPrototypeError,
	MVChatNotConnectedError,
	MVChatBadConnectionError,
	MVChatNoPermissionsError,
	MVChatNoChangePasswordError,
	MVChatDuplicateUserError,
	MVChatDuplicateRoomError,
	MVChatIOError,
	MVChatBadHandleError,
	MVChatTimeoutError,
	MVChatNotDoneError
} MVChatError;

@class NSTimer;
@class NSString;
@class NSArray;
@class NSMutableArray;
@class NSMutableDictionary;
@class NSDictionary;
@class NSAttributedString;
@class MVUploadFileTransfer;
@class NSAttributedString;
@class NSMutableDictionary;
@class NSDate;
@class MVUploadFileTransfer;

extern NSString *MVChatConnectionGotRawMessageNotification;

extern NSString *MVChatConnectionWillConnectNotification;
extern NSString *MVChatConnectionDidConnectNotification;
extern NSString *MVChatConnectionDidNotConnectNotification;
extern NSString *MVChatConnectionWillDisconnectNotification;
extern NSString *MVChatConnectionDidDisconnectNotification;
extern NSString *MVChatConnectionErrorNotification;

extern NSString *MVChatConnectionNeedNicknamePasswordNotification;

extern NSString *MVChatConnectionGotPrivateMessageNotification;

extern NSString *MVChatConnectionBuddyIsOnlineNotification;
extern NSString *MVChatConnectionBuddyIsOfflineNotification;
extern NSString *MVChatConnectionBuddyIsAwayNotification;
extern NSString *MVChatConnectionBuddyIsUnawayNotification;
extern NSString *MVChatConnectionBuddyIsIdleNotification;

extern NSString *MVChatConnectionSelfAwayStatusNotification;

extern NSString *MVChatConnectionGotUserWhoisNotification;
extern NSString *MVChatConnectionGotUserServerNotification;
extern NSString *MVChatConnectionGotUserChannelsNotification;
extern NSString *MVChatConnectionGotUserOperatorNotification;
extern NSString *MVChatConnectionGotUserIdleNotification;
extern NSString *MVChatConnectionGotUserWhoisCompleteNotification;

extern NSString *MVChatConnectionGotRoomInfoNotification;

extern NSString *MVChatConnectionGotJoinWhoListNotification;
extern NSString *MVChatConnectionRoomExistingMemberListNotification;
extern NSString *MVChatConnectionJoinedRoomNotification;
extern NSString *MVChatConnectionLeftRoomNotification;
extern NSString *MVChatConnectionUserJoinedRoomNotification;
extern NSString *MVChatConnectionUserLeftRoomNotification;
extern NSString *MVChatConnectionUserQuitNotification;
extern NSString *MVChatConnectionUserNicknameChangedNotification;
extern NSString *MVChatConnectionUserKickedFromRoomNotification;
extern NSString *MVChatConnectionUserAwayStatusNotification;
extern NSString *MVChatConnectionGotMemberModeNotification;
extern NSString *MVChatConnectionGotRoomModeNotification;
extern NSString *MVChatConnectionGotRoomMessageNotification;
extern NSString *MVChatConnectionGotRoomTopicNotification;

extern NSString *MVChatConnectionNewBanNotification;
extern NSString *MVChatConnectionRemovedBanNotification;
extern NSString *MVChatConnectionBanlistReceivedNotification;

extern NSString *MVChatConnectionKickedFromRoomNotification;
extern NSString *MVChatConnectionInvitedToRoomNotification;

extern NSString *MVChatConnectionNicknameAcceptedNotification;
extern NSString *MVChatConnectionNicknameRejectedNotification;

extern NSString *MVChatConnectionSubcodeRequestNotification;
extern NSString *MVChatConnectionSubcodeReplyNotification;

#pragma mark -

@interface MVChatConnection : NSObject {
@private
	NSTimer *_reconnectTimer;
	NSString *_npassword;
	NSString *_proxyUsername;
	NSString *_proxyPassword;
	MVChatConnectionStatus _status;
	MVChatConnectionProxy _proxy;
	NSStringEncoding _encoding;

	void *_chatConnection /* SERVER_REC */;
	void *_chatConnectionSettings /* SERVER_CONNECT_REC */;
	NSMutableDictionary *_roomsCache;
	NSDate *_lastConnectAttempt;
	NSDate *_cachedDate;
	NSAttributedString *_awayMessage;
	NSArray *_alternateNicks;

	BOOL _nickIdentified;
	unsigned int _nextAltNickIndex;
	unsigned int _sleepNotifier; /* io_object_t */
	unsigned int _powerConnection; /* io_connect_t */
}
- (id) initWithURL:(NSURL *) url;
- (id) initWithServer:(NSString *) server port:(unsigned short) port user:(NSString *) nickname;

- (void) connect;
- (void) connectToServer:(NSString *) server onPort:(unsigned short) port asUser:(NSString *) nickname;
- (void) disconnect;
- (void) disconnectWithReason:(NSAttributedString *) reason;

#pragma mark -

- (NSURL *) url;

#pragma mark -

- (void) setEncoding:(NSStringEncoding) encoding;
- (NSStringEncoding) encoding;
- (NSString *) stringWithEncodedBytes:(const char *) bytes;
- (const char *) encodedBytesWithString:(NSString *) string;

#pragma mark -

- (void) setRealName:(NSString *) name;
- (NSString *) realName;

- (void) setNickname:(NSString *) nickname;
- (NSString *) nickname;
- (NSString *) preferredNickname;

- (void) setAlternateNicknames:(NSArray *) nicknames;
- (NSArray *) alternateNicknames;
- (NSString *) nextAlternateNickname;

- (void) setNicknamePassword:(NSString *) password;
- (NSString *) nicknamePassword;

- (void) setPassword:(NSString *) password;
- (NSString *) password;

- (void) setUsername:(NSString *) username;
- (NSString *) username;

- (void) setServer:(NSString *) server;
- (NSString *) server;

- (void) setServerPort:(unsigned short) port;
- (unsigned short) serverPort;

- (void) setProxyUsername:(NSString *) username;
- (NSString *) proxyUsername;

- (void) setProxyPassword:(NSString *) password;
- (NSString *) proxyPassword;

- (void) setSecure:(BOOL) ssl;
- (BOOL) isSecure;

#pragma mark -

- (void) setProxyType:(MVChatConnectionProxy) type;
- (MVChatConnectionProxy) proxyType;

- (void) setProxyServer:(NSString *) address;
- (NSString *) proxyServer;

- (void) setProxyServerPort:(unsigned short) port;
- (unsigned short) proxyServerPort;

#pragma mark -

- (void) sendMessage:(NSAttributedString *) message withEncoding:(NSStringEncoding) encoding toUser:(NSString *) user asAction:(BOOL) action;
- (void) sendMessage:(NSAttributedString *) message withEncoding:(NSStringEncoding) encoding toChatRoom:(NSString *) room asAction:(BOOL) action;

- (void) sendRawMessage:(NSString *) raw;
- (void) sendRawMessage:(NSString *) raw immediately:(BOOL) now;
- (void) sendRawMessageWithFormat:(NSString *) format, ...;

- (MVUploadFileTransfer *) sendFile:(NSString *) path toUser:(NSString *) user;
- (MVUploadFileTransfer *) sendFile:(NSString *) path toUser:(NSString *) user passively:(BOOL) passive;

#pragma mark -

- (void) sendSubcodeRequest:(NSString *) command toUser:(NSString *) user withArguments:(NSString *) arguments;
- (void) sendSubcodeReply:(NSString *) command toUser:(NSString *) user withArguments:(NSString *) arguments;

#pragma mark -

- (void) joinChatRooms:(NSArray *) rooms;
- (void) joinChatRoom:(NSString *) room;
- (void) partChatRoom:(NSString *) room;

#pragma mark -

- (void) setTopic:(NSAttributedString *) topic withEncoding:(NSStringEncoding) encoding forRoom:(NSString *) room;

- (void) promoteMember:(NSString *) member inRoom:(NSString *) room;
- (void) demoteMember:(NSString *) member inRoom:(NSString *) room;
- (void) halfopMember:(NSString *) member inRoom:(NSString *) room;
- (void) dehalfopMember:(NSString *) member inRoom:(NSString *) room;
- (void) voiceMember:(NSString *) member inRoom:(NSString *) room;
- (void) devoiceMember:(NSString *) member inRoom:(NSString *) room;
- (void) kickMember:(NSString *) member inRoom:(NSString *) room forReason:(NSString *) reason;
- (void) banMember:(NSString *) member inRoom:(NSString *) room;
- (void) unbanMember:(NSString *) member inRoom:(NSString *) room;

#pragma mark -

- (void) addUserToNotificationList:(NSString *) user;
- (void) removeUserFromNotificationList:(NSString *) user;

- (void) fetchInformationForUser:(NSString *) user withPriority:(BOOL) priority fromLocalServer:(BOOL) localOnly;

#pragma mark -

- (void) fetchRoomList;
- (void) fetchRoomListWithRooms:(NSArray *) rooms;
- (void) stopFetchingRoomList;
- (NSMutableDictionary *) roomListResults;

#pragma mark -

- (NSAttributedString *) awayStatusMessage;
- (void) setAwayStatusWithMessage:(NSAttributedString *) message;
- (void) clearAwayStatus;

#pragma mark -

- (BOOL) isConnected;
- (MVChatConnectionStatus) status;
- (BOOL) waitingToReconnect;
- (unsigned int) lag;
@end

#pragma mark -

@interface MVChatConnection (MVChatConnectionScripting)
- (NSNumber *) uniqueIdentifier;
@end

#pragma mark -

@interface NSObject (MVChatPluginConnectionSupport)
- (BOOL) processSubcodeRequest:(NSString *) command withArguments:(NSString *) arguments fromUser:(NSString *) user forConnection:(MVChatConnection *) connection;
- (BOOL) processSubcodeReply:(NSString *) command withArguments:(NSString *) arguments fromUser:(NSString *) user forConnection:(MVChatConnection *) connection;

- (void) connected:(MVChatConnection *) connection;
- (void) disconnecting:(MVChatConnection *) connection;
@end                                                                                                                                                                                                              Headers/MVChatPluginManager.h                                                                       0100644 0001750 0001750 00000002463 12073616736 047465  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <Foundation/NSMethodSignature.h>

@class NSMutableDictionary;
@class NSArray;
@class NSSet;
@class NSEnumerator;

@interface MVChatPluginManager : NSObject {
	@private
	NSMutableDictionary *_plugins;
}
+ (MVChatPluginManager *) defaultManager;

- (NSArray *) pluginSearchPaths;
- (void) findAndLoadPlugins;

- (NSSet *) plugins;
- (NSSet *) pluginsThatRespondToSelector:(SEL) selector;
- (NSSet *) pluginsOfClass:(Class) class thatRespondToSelector:(SEL) selector;

- (NSEnumerator *) pluginEnumerator;
- (NSEnumerator *) enumeratorOfPluginsThatRespondToSelector:(SEL) selector;
- (NSEnumerator *) enumeratorOfPluginsOfClass:(Class) class thatRespondToSelector:(SEL) selector;

- (unsigned int) numberOfPlugins;
- (unsigned int) numberOfPluginsThatRespondToSelector:(SEL) selector;
- (unsigned int) numberOfPluginsOfClass:(Class) class thatRespondToSelector:(SEL) selector;

- (NSArray *) makePluginsPerformInvocation:(NSInvocation *) invocation;
- (NSArray *) makePluginsPerformInvocation:(NSInvocation *) invocation stoppingOnFirstSuccessfulReturn:(BOOL) stop;
- (NSArray *) makePluginsOfClass:(Class) class performInvocation:(NSInvocation *) invocation stoppingOnFirstSuccessfulReturn:(BOOL) stop;
@end

@protocol MVChatPlugin
- (id) initWithManager:(MVChatPluginManager *) manager;
@end
                                                                                                                                                                                                             Headers/MVChatPluginManagerAdditions.h                                                              0100644 0001750 0001750 00000000766 12073616736 051330  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import "MVChatPluginManager.h"

@class MVConnectionsController;
@class JVChatController;
@class MVFileTransferController;
@class MVBuddyListController;
@class JVPreferencesController;

@interface MVChatPluginManager (MVChatPluginManagerAdditions)
- (MVConnectionsController *) connectionsController;
- (JVChatController *) chatController;
- (MVFileTransferController *) fileTransferController;
- (MVBuddyListController *) buddyListController;
- (JVPreferencesController *) preferencesController;
@end
          Headers/MVChatScriptPlugin.h                                                                        0100644 0001750 0001750 00000001177 12073616736 047360  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <ChatCore/MVChatPluginManager.h>

extern unsigned long MVChatScriptPluginClass;

@interface MVChatScriptPlugin : NSObject <MVChatPlugin> {
	NSAppleScript *_script;
	NSMutableSet *_doseNotRespond;
}
- (id) initWithScript:(NSAppleScript *) script andManager:(MVChatPluginManager *) manager;

- (NSAppleScript *) script;
- (id) callScriptHandler:(unsigned long) handler withArguments:(NSDictionary *) arguments;

- (BOOL) respondsToSelector:(SEL) selector;
- (void) doesNotRespondToSelector:(SEL) selector;
@end

@interface NSAppleScript (NSAppleScriptIdentifier)
- (NSNumber *) scriptIdentifier;
@end
                                                                                                                                                                                                                                                                                                                                                                                                 Headers/MVConnectionsController.h                                                                   0100644 0001750 0001750 00000005752 12073616736 050466  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSWindowController.h>
#import <AppKit/NSNibDeclarations.h>
#import "JVInspectorController.h"

@class NSTableView;
@class NSWindow;
@class NSPanel;
@class NSTextField;
@class NSPopUpButton;
@class NSButton;
@class NSTabView;
@class NSComboBox;
@class NSString;
@class NSMutableArray;
@class MVChatConnection;
@class NSURL;

@interface MVConnectionsController : NSWindowController <JVInspectionDelegator> {
@private
	IBOutlet NSTableView *connections;
	IBOutlet NSPanel *openConnection;
	IBOutlet NSPanel *messageUser;
	IBOutlet NSPanel *nicknameAuth;

	/* Nick Auth */
	IBOutlet NSTextField *authNickname;
	IBOutlet NSTextField *authAddress;
	IBOutlet NSTextField *authPassword;
	IBOutlet NSButton *authKeychain;

	/* New Connection */
	IBOutlet NSTextField *newNickname;
	IBOutlet NSTextField *newAddress;
	IBOutlet NSTextField *newPort;
	IBOutlet NSButton *newRemember;
	IBOutlet NSButton *showDetails;
	IBOutlet NSTabView *detailsTabView;
	IBOutlet NSTextField *newServerPassword;
	IBOutlet NSTextField *newUsername;
	IBOutlet NSTextField *newRealName;
	IBOutlet NSPopUpButton *newProxy;
	IBOutlet NSTableView *newJoinRooms;
	IBOutlet NSButton *newRemoveRoom;
	IBOutlet NSButton *sslConnection;

	/* Message User */
	IBOutlet NSTextField *userToMessage;

	NSMutableArray *_bookmarks;
	NSMutableArray *_joinRooms;
	MVChatConnection *_passConnection;
}
+ (MVConnectionsController *) defaultManager;

+ (NSMenu *) favoritesMenu;
+ (void) refreshFavoritesMenu;

- (IBAction) showConnectionManager:(id) sender;
- (IBAction) hideConnectionManager:(id) sender;

- (IBAction) newConnection:(id) sender;
- (IBAction) toggleNewConnectionDetails:(id) sender;
- (IBAction) addRoom:(id) sender;
- (IBAction) removeRoom:(id) sender;
- (IBAction) openNetworkPreferences:(id) sender;
- (IBAction) conenctNewConnection:(id) sender;

- (IBAction) messageUser:(id) sender;

- (IBAction) sendPassword:(id) sender;

- (NSArray *) connections;
- (NSArray *) connectedConnections;
- (MVChatConnection *) connectionForServerAddress:(NSString *) address;
- (NSArray *) connectionsForServerAddress:(NSString *) address;

- (void) setAutoConnect:(BOOL) autoConnect forConnection:(MVChatConnection *) connection;
- (BOOL) autoConnectForConnection:(MVChatConnection *) connection;

- (void) setJoinRooms:(NSArray *) rooms forConnection:(MVChatConnection *) connection;
- (NSArray *) joinRoomsForConnection:(MVChatConnection *) connection;

- (void) setConnectCommands:(NSString *) commands forConnection:(MVChatConnection *) connection;
- (NSString *) connectCommandsForConnection:(MVChatConnection *) connection;

- (void) addConnection:(MVChatConnection *) connection;
- (void) addConnection:(MVChatConnection *) connection keepBookmark:(BOOL) keep;
- (void) insertConnection:(MVChatConnection *) connection atIndex:(unsigned) index;
- (void) removeConnectionAtIndex:(unsigned) index;
- (void) replaceConnectionAtIndex:(unsigned) index withConnection:(MVChatConnection *) connection;

- (void) handleURL:(NSURL *) url andConnectIfPossible:(BOOL) connect;
@end                      Headers/MVFileTransferController.h                                                                  0100644 0001750 0001750 00000002245 12073616736 050562  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <Foundation/NSDate.h>
#import <AppKit/NSNibDeclarations.h>

NSString *MVPrettyFileSize( unsigned long long size );
NSString *MVReadableTime( NSTimeInterval date, BOOL longFormat );

@class NSPanel;
@class NSProgressIndicator;
@class NSTextField;
@class NSTableView;
@class NSMutableArray;
@class NSRecursiveLock;
@class NSTimer;

@interface MVFileTransferController : NSWindowController {
@private
	IBOutlet NSProgressIndicator *progressBar;
	IBOutlet NSTextField *transferStatus;
	IBOutlet NSTableView *currentFiles;
	NSMutableArray *_transferStorage;
	NSMutableArray *_calculationItems;
	NSTimer *_updateTimer;
	NSSet *_safeFileExtentions;
}
+ (NSString *) userPreferredDownloadFolder;
+ (void) setUserPreferredDownloadFolder:(NSString *) path;

+ (MVFileTransferController *) defaultManager;

- (IBAction) showTransferManager:(id) sender;
- (IBAction) hideTransferManager:(id) sender;

- (void) downloadFileAtURL:(NSURL *) url toLocalFile:(NSString *) path;
- (void) addFileTransfer:(id) trtansfer;

- (IBAction) stopSelectedTransfer:(id) sender;
- (IBAction) clearFinishedTransfers:(id) sender;
- (IBAction) revealSelectedFile:(id) sender;
@end
                                                                                                                                                                                                                                                                                                                                                           Headers/NSAttributedStringAdditions.h                                                               0100644 0001750 0001750 00000000503 12073616736 051260  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSAttributedString.h>

@interface NSAttributedString (NSAttributedStringHTMLAdditions)
+ (id) attributedStringWithHTMLFragment:(NSString *) fragment baseURL:(NSURL *) url;
- (NSData *) HTMLWithOptions:(NSDictionary *) options usingEncoding:(NSStringEncoding) encoding allowLossyConversion:(BOOL) loss;
@end
                                                                                                                                                                                             Headers/NSBundleAdditions.h                                                                         0100644 0001750 0001750 00000000236 12073616736 047176  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSBundle.h>

@interface NSBundle (NSBundleAdditions)
- (NSComparisonResult) compare:(NSBundle *) bundle;
- (NSString *) displayName;
@end
                                                                                                                                                                                                                                                                                                                                                                  Headers/NSColorAdditions.h                                                                          0100644 0001750 0001750 00000000417 12073616736 047044  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSColor.h>

@interface NSColor (NSColorAdditions)
+ (NSColor *) colorWithHTMLAttributeValue:(NSString *) attribute;
+ (NSColor *) colorWithCSSAttributeValue:(NSString *) attribute;
- (NSString *) HTMLAttributeValue;
- (NSString *) CSSAttributeValue;
@end
                                                                                                                                                                                                                                                 Headers/NSDataAdditions.h                                                                           0100644 0001750 0001750 00000000405 12073616736 046634  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSData.h>

@interface NSData (NSDataAdditions)
+ (NSData *) dataWithBase64EncodedString:(NSString *) string;
- (id) initWithBase64EncodedString:(NSString *) string;
- (NSString *) base64EncodingWithLineLength:(unsigned int) lineLength;
@end
                                                                                                                                                                                                                                                           Headers/NSImageAdditions.h                                                                          0100644 0001750 0001750 00000000576 12073616736 047016  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSImage.h>

@interface NSImage (NSImageAdditions)
+ (NSImage *) imageNamed:(NSString *) name forClass:(Class) class;
- (void) tileInRect:(NSRect) rect;

+ (NSImage *) imageWithBase64EncodedString:(NSString *) base64String;
- (id) initWithBase64EncodedString:(NSString *) base64String;
- (NSString *) base64EncodingWithFileType:(NSBitmapImageFileType) fileType;
@end
                                                                                                                                  Headers/NSMethodSignatureAdditions.h                                                                0100644 0001750 0001750 00000000267 12073616736 051073  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSMethodSignature.h>

@interface NSMethodSignature (NSMethodSignatureAdditions)
+ (id) methodSignatureWithReturnAndArgumentTypes:(const char *) retType, ...;
@end
                                                                                                                                                                                                                                                                                                                                         Headers/NSNotificationAdditions.h                                                                   0100644 0001750 0001750 00000001101 12073616736 050403  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSNotification.h>
#import <Foundation/NSNotificationQueue.h>

@interface NSNotificationCenter (NSNotificationAdditions)
- (void) postNotificationOnMainThread:(NSNotification *) notification;
@end

@interface NSNotificationQueue (NSNotificationAdditions)
- (void) enqueueNotificationOnMainThread:(NSNotification *) notification postingStyle:(NSPostingStyle) postingStyle;
- (void) enqueueNotificationOnMainThread:(NSNotification *) notification postingStyle:(NSPostingStyle) postingStyle coalesceMask:(unsigned) coalesceMask forModes:(NSArray *) modes;
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                                               Headers/NSNumberAdditions.h                                                                         0100644 0001750 0001750 00000000236 12073616736 047215  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSValue.h>

@interface NSNumber (NSNumberAdditions)
+ (NSNumber *) numberWithBytes:(const void *) bytes objCType:(const char *) type;
@end                                                                                                                                                                                                                                                                                                                                                                  Headers/NSPreferences.h                                                                             0100644 0001750 0001750 00000006510 12073616736 046370  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSObject.h>
#import <Foundation/NSGeometry.h>
#import <AppKit/NSNibDeclarations.h>

// Private classes from the AppKit framework; used by Safari and Mail.

@class NSWindow;
@class NSMatrix;
@class NSBox;
@class NSButtonCell;
@class NSImage;
@class NSView;
@class NSMutableArray;
@class NSMutableDictionary;

@protocol NSPreferencesModule
#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3
- (BOOL) preferencesWindowShouldClose;
- (BOOL) moduleCanBeRemoved;
- (void) moduleWasInstalled;
- (void) moduleWillBeRemoved;
#endif
- (void) didChange;
- (void) initializeFromDefaults;
- (void) willBeDisplayed;
- (void) saveChanges;
- (BOOL) hasChangesPending;
- (NSImage *) imageForPreferenceNamed:(NSString *) name;
- (NSView *) viewForPreferenceNamed:(NSString *) name;
@end

@interface NSPreferences : NSObject {
#if MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_2
	id preferencesPanel;
	NSBox *preferenceBox;
	id moduleMatrix;
	id okButton;
	id cancelButton;
	id applyButton;
#else
	NSWindow *_preferencesPanel;
	NSBox *_preferenceBox;
	NSMatrix *_moduleMatrix;
	NSButtonCell *_okButton;
	NSButtonCell *_cancelButton;
	NSButtonCell *_applyButton;
#endif
	NSMutableArray *_preferenceTitles;
	NSMutableArray *_preferenceModules;
#if MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_2
	NSMutableDictionary *_preferenceViews;
#else
	NSMutableDictionary *_masterPreferenceViews;
	NSMutableDictionary *_currentSessionPreferenceViews;
#endif
	NSBox *_originalContentView;
	BOOL _isModal;
#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3
	float _constrainedWidth;
	id _currentModule;
	void *_reserved;
#endif
}
+ (id) sharedPreferences;
+ (void) setDefaultPreferencesClass:(Class) class;
+ (Class) defaultPreferencesClass;

- (id) init;
- (void) dealloc;
- (void) addPreferenceNamed:(NSString *) name owner:(id) owner;

- (NSSize) preferencesContentSize;

- (void) showPreferencesPanel;
- (void) showPreferencesPanelForOwner:(id) owner;
- (int) showModalPreferencesPanelForOwner:(id) owner;
- (int) showModalPreferencesPanel;

- (void) ok:(id) sender;
- (void) cancel:(id) sender;
- (void) apply:(id) sender;

- (NSString *) windowTitle;
- (BOOL) usesButtons;

#if MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_2
- (void) selectModule:(id) sender;
#endif
@end

@interface NSPreferencesModule : NSObject <NSPreferencesModule> {
#if MAC_OS_X_VERSION_MAX_ALLOWED <= MAC_OS_X_VERSION_10_2
	IBOutlet NSBox *preferencesView;
	BOOL hasChanges;
#else
	IBOutlet NSBox *_preferencesView;
	NSSize _minSize;
	BOOL _hasChanges;
	void *_reserved;
#endif
}
+ (id) sharedInstance;
- (id) init;
- (NSString *) preferencesNibName;
#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3
- (void) setPreferencesView:(NSView *) view;
#endif
- (NSView *) viewForPreferenceNamed:(NSString *) name;
- (NSImage *) imageForPreferenceNamed:(NSString *) name;
#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3
- (NSString *) titleForIdentifier:(NSString *) identifier;
#endif
- (BOOL) hasChangesPending;
- (void) saveChanges;
- (void) willBeDisplayed;
- (void) initializeFromDefaults;
- (void) didChange;
#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3
- (NSSize) minSize;
- (void) setMinSize:(NSSize) size;
- (void) moduleWillBeRemoved;
- (void) moduleWasInstalled;
- (BOOL) moduleCanBeRemoved;
- (BOOL) preferencesWindowShouldClose;
- (BOOL) isResizable;
#endif
@end                                                                                                                                                                                        Headers/NSSplitViewAdditions.h                                                                      0100644 0001750 0001750 00000000423 12073616736 047711  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <AppKit/NSSplitView.h>

@interface NSSplitView (NSSplitViewAdditions)
- (NSString *) stringWithSavedPosition;
- (void) setPositionFromString:(NSString *) string;

- (void) savePositionUsingName:(NSString *) name;
- (BOOL) setPositionUsingName:(NSString *) name;
@end
                                                                                                                                                                                                                                             Headers/NSStringAdditions.h                                                                         0100644 0001750 0001750 00000002125 12073616736 047232  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSString.h>

@interface NSString (NSStringAdditions)
+ (NSString *) mimeCharsetTagFromStringEncoding:(NSStringEncoding) encoding;

- (unsigned long) UTF8StringByteLength;

- (id) initWithBytes:(const void *) bytes encoding:(NSStringEncoding) encoding;
+ (id) stringWithBytes:(const void *) bytes encoding:(NSStringEncoding) encoding;

- (const char *) bytesUsingEncoding:(NSStringEncoding) encoding allowLossyConversion:(BOOL) lossy;
- (const char *) bytesUsingEncoding:(NSStringEncoding) encoding;

- (NSString *) stringByEncodingXMLSpecialCharactersAsEntities;
- (NSString *) stringByDecodingXMLSpecialCharacterEntities;

- (NSString *) stringByEscapingCharactersInSet:(NSCharacterSet *) set;

- (NSString *) stringByEncodingIllegalURLCharacters;
- (NSString *) stringByDecodingIllegalURLCharacters;
@end

@interface NSMutableString (NSMutableStringAdditions)
- (void) encodeXMLSpecialCharactersAsEntities;
- (void) decodeXMLSpecialCharacterEntities;

- (void) escapeCharactersInSet:(NSCharacterSet *) set;

- (void) encodeIllegalURLCharacters;
- (void) decodeIllegalURLCharacters;
@end
                                                                                                                                                                                                                                                                                                                                                                                                                                           Headers/NSURLAdditions.h                                                                            0100644 0001750 0001750 00000000372 12073616736 046430  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Examples/PyObjC/2.5.1/ApplicationPlugins/Colloqui/Colloquy Plugin SDK                   #import <Foundation/NSURL.h>

@interface NSURL (NSURLAdditions)
+ (id) URLWithInternetLocationFile:(NSString *) path;
- (void) writeToInternetLocationFile:(NSString *) path;

- (BOOL) isChatURL;
- (BOOL) isChatRoomURL;
- (BOOL) isDirectChatURL;
@end
                                                                                                                                                                                                                                                                      osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Headers              0120777 0001750 0001750 00000000000 12620245063 033636  2Versions/Current/Headers                                                                            ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Python.tbd           0120777 0001750 0001750 00000000000 12620245063 034772  2Versions/Current/Python.tbd                                                                         ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/            0040755 0001750 0001750 00000000000 12612224744 027430  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/        0040755 0001750 0001750 00000000000 12612224744 027735  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/ 0040755 0001750 0001750 00000000000 12612224743 031202  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        lib/                                                                                                0040755 0001750 0001750 00000000000 12612224743 031671  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras                                                                     python/                                                                                             0040755 0001750 0001750 00000000000 12612224743 033212  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib                                                                 PyObjC/                                                                                             0040755 0001750 0001750 00000000000 12612224743 034340  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python                                                          pyobjc_core-2.3.2a0-py2.6.egg-info/                                                                 0040755 0001750 0001750 00000000000 12612224743 042065  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/PyObjC                                                   include/                                                                                            0040755 0001750 0001750 00000000000 12612224743 043510  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/PyObjC/pyobjc_core-2.3.2a0-py2.6.egg-info                include/pyobjc-api.h                                                                                0100644 0001750 0001750 00000034754 12566246631 045740  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/PyObjC/pyobjc_core-2.3.2a0-py2.6.egg-info                #ifndef PyObjC_API_H
#define PyObjC_API_H

/*
 * Use this in helper modules for the objc package, and in wrappers
 * for functions that deal with objective-C objects/classes
 * 
 * This header defines some utility wrappers for importing and using 
 * the core bridge. 
 *
 * This is the *only* header file that should be used to access 
 * functionality in the core bridge.
 *
 * WARNING: this file is not part of the public interface of PyObjC and
 * might change or be removed without warning or regard for backward
 * compatibility.
 */

#include "Python.h"
#include <objc/objc.h>

#import <Foundation/Foundation.h>

#include "pyobjc-compat.h"





#import <Foundation/NSException.h>

struct PyObjC_WeakLink {
	const char* name;
	void (*func)(void);
};


/* threading support */
#ifdef NO_OBJC2_RUNTIME
#define PyObjC_DURING \
		Py_BEGIN_ALLOW_THREADS \
		NS_DURING

#define PyObjC_HANDLER NS_HANDLER

#define PyObjC_ENDHANDLER \
		NS_ENDHANDLER \
		Py_END_ALLOW_THREADS
#else

#define	PyObjC_DURING \
		Py_BEGIN_ALLOW_THREADS \
		@try {

#define PyObjC_HANDLER } @catch(volatile NSObject* _localException) { \
		NSException* localException __attribute__((__unused__))= (NSException*)_localException;

#define PyObjC_ENDHANDLER \
		} \
		Py_END_ALLOW_THREADS

#endif

#define PyObjC_BEGIN_WITH_GIL \
	{ \
		PyGILState_STATE _GILState; \
		_GILState = PyGILState_Ensure(); 

#define PyObjC_GIL_FORWARD_EXC() \
		do { \
            PyObjCErr_ToObjCWithGILState(&_GILState); \
		} while (0)


#define PyObjC_GIL_RETURN(val) \
		do { \
			PyGILState_Release(_GILState); \
			return (val); \
		} while (0)

#define PyObjC_GIL_RETURNVOID \
		do { \
			PyGILState_Release(_GILState); \
			return; \
		} while (0)


#define PyObjC_END_WITH_GIL \
		PyGILState_Release(_GILState); \
	}



#include <objc/objc-runtime.h>

/* On 10.1 there are no defines for the OS version. */
#ifndef MAC_OS_X_VERSION_10_1
#define MAC_OS_X_VERSION_10_1 1010
#define MAC_OS_X_VERSION_MAX_ALLOWED MAC_OS_X_VERSION_10_1

#error "MAC_OS_X_VERSION_10_1 not defined. You aren't running 10.1 are you?"

#endif

#ifndef MAC_OS_X_VERSION_10_2
#define MAC_OS_X_VERSION_10_2 1020
#endif

#ifndef MAC_OS_X_VERSION_10_3
#define MAC_OS_X_VERSION_10_3 1030
#endif

#ifndef MAC_OS_X_VERSION_10_4
#define MAC_OS_X_VERSION_10_4 1040
#endif

#ifndef MAC_OS_X_VERSION_10_5
#define MAC_OS_X_VERSION_10_5 1050
#endif

/* Current API version, increase whenever:
 * - Semantics of current functions change
 * - Functions are removed
 * Do not increase when adding a new function, the struct_len field
 * can be used for detecting if a function has been added.
 *
 * HISTORY:
 * - Version 2.2 adds PyObjCUnsupportedMethod_IMP 
 *       and PyObjCUnsupportedMethod_Caller 
 * - Version 2.1 adds PyObjCPointerWrapper_Register 
 * - Version 2 adds an argument to PyObjC_InitSuper
 * - Version 3 adds another argument to PyObjC_CallPython
 * - Version 4 adds PyObjCErr_ToObjCGILState
 * - Version 4.1 adds PyObjCRT_AlignOfType and PyObjCRT_SizeOfType
 *         (PyObjC_SizeOfType is now deprecated)
 * - Version 4.2 adds PyObjCRT_SELName
 * - Version 4.3 adds PyObjCRT_SimplifySignature
 * - Version 4.4 adds PyObjC_FreeCArray, PyObjC_PythonToCArray and
 *   		PyObjC_CArrayToPython
 * - Version 5 modifies the signature for PyObjC_RegisterMethodMapping,
 *	PyObjC_RegisterSignatureMapping and PyObjCUnsupportedMethod_IMP,
 *      adds PyObjC_RegisterStructType and removes PyObjC_CallPython
 * - Version 6 adds PyObjCIMP_Type, PyObjCIMP_GetIMP and PyObjCIMP_GetSelector
 * - Version 7 adds PyObjCErr_AsExc, PyGILState_Ensure
 * - Version 8 adds PyObjCObject_IsUninitialized,
        removes PyObjCSelector_IsInitializer
 * - Version 9 (???)
 * - Version 10 changes the signature of PyObjCRT_SimplifySignature
 * - Version 11 adds PyObjCObject_Convert, PyObjCSelector_Convert,
     PyObjCClass_Convert, PyObjC_ConvertBOOL, and PyObjC_ConvertChar
 * - Version 12 adds PyObjCObject_New
 * - Version 13 adds PyObjCCreateOpaquePointerType
 * - Version 14 adds PyObjCObject_NewTransient, PyObjCObject_ReleaseTransient
 * - Version 15 changes the interface of PyObjCObject_New
 * - Version 16 adds PyObjC_PerformWeaklinking
 * - Version 17 introduces Py_ssize_t support
 * - Version 18 introduces several API incompatibilities
 * - Version 19 removes some old junk
 */
#define PYOBJC_API_VERSION 19

#define PYOBJC_API_NAME "__C_API__"

/* 
 * Only add items to the end of this list!
 */
typedef int (RegisterMethodMappingFunctionType)(
			Class, 
			SEL, 
			PyObject *(*)(PyObject*, PyObject*, PyObject*),
			void (*)(void*, void*, void**, void*));

struct pyobjc_api {
	int	      api_version;	/* API version */
	size_t	      struct_len;	/* Length of this struct */
	PyTypeObject* class_type;	/* PyObjCClass_Type    */
	PyTypeObject* object_type;	/* PyObjCObject_Type   */
	PyTypeObject* select_type;	/* PyObjCSelector_Type */

	/* PyObjC_RegisterMethodMapping */
	RegisterMethodMappingFunctionType *register_method_mapping;

	/* PyObjC_RegisterSignatureMapping */
	int (*register_signature_mapping)(
			char*,
			PyObject *(*)(PyObject*, PyObject*, PyObject*),
			void (*)(void*, void*, void**, void*));

	/* PyObjCObject_GetObject */
	id (*obj_get_object)(PyObject*);

	/* PyObjCObject_ClearObject */
	void (*obj_clear_object)(PyObject*);

	/* PyObjCClass_GetClass */
	Class (*cls_get_class)(PyObject*);

	/* PyObjCClass_New */
	PyObject* (*cls_to_python)(Class cls);

	/* PyObjC_PythonToId */
	id (*python_to_id)(PyObject*);

	/* PyObjC_IdToPython */
	PyObject* (*id_to_python)(id);

	/* PyObjCErr_FromObjC */
	void (*err_objc_to_python)(NSException*);

	/* PyObjCErr_ToObjC */
	void (*err_python_to_objc)(void);

	/* PyObjC_PythonToObjC */
	int (*py_to_objc)(const char*, PyObject*, void*);

	/* PyObjC_ObjCToPython */
	PyObject* (*objc_to_py)(const char*, void*);

	/* PyObjC_SizeOfType */
	Py_ssize_t   (*sizeof_type)(const char*);

	/* PyObjCSelector_GetClass */
	Class	   (*sel_get_class)(PyObject* sel);

	/* PyObjCSelector_GetSelector */
	SEL	   (*sel_get_sel)(PyObject* sel);

	/* PyObjC_InitSuper */ 	
	void	(*fill_super)(struct objc_super*, Class, id);

	/* PyObjC_InitSuperCls */
	void	(*fill_super_cls)(struct objc_super*, Class, Class);

	/* PyObjCPointerWrapper_Register */ 
	int  (*register_pointer_wrapper)(
		        const char*, PyObject* (*pythonify)(void*),
			int (*depythonify)(PyObject*, void*)
		);

	void (*unsupported_method_imp)(void*, void*, void**, void*);
	PyObject* (*unsupported_method_caller)(PyObject*, PyObject*, PyObject*);

	/* PyObjCErr_ToObjCWithGILState */
	void (*err_python_to_objc_gil)(PyGILState_STATE* state);

	/* PyObjCRT_AlignOfType */
	Py_ssize_t (*alignof_type)(const char* typestr);

	/* PyObjCRT_SELName */
	const char* (*selname)(SEL sel);

	/* PyObjCRT_SimplifySignature */
	int (*simplify_sig)(char* signature, char* buf, size_t buflen);

	/* PyObjC_FreeCArray */
	void    (*free_c_array)(int,void*);

	/* PyObjC_PythonToCArray */
	int     (*py_to_c_array)(BOOL, BOOL, const char*, PyObject*, void**, Py_ssize_t*, PyObject**);
	
	/* PyObjC_CArrayToPython */
	PyObject* (*c_array_to_py)(const char*, void*, Py_ssize_t);

	/* PyObjC_RegisterStructType */
	PyObject* (*register_struct)(const char*, const char*, const char*, initproc, Py_ssize_t, const char**);

	/* PyObjCIMP_Type */
	PyTypeObject* imp_type;

	/* PyObjCIMP_GetIMP */
	IMP  (*imp_get_imp)(PyObject*);

	/* PyObjCIMP_GetSelector */
	SEL  (*imp_get_sel)(PyObject*);

	/* PyObjCErr_AsExc */
	NSException* (*err_python_to_nsexception)(void);

	/* PyGILState_Ensure */
	PyGILState_STATE (*gilstate_ensure)(void);

	/* PyObjCObject_IsUninitialized */
	int (*obj_is_uninitialized)(PyObject*);

	/* PyObjCObject_New */
	PyObject* (*pyobjc_object_new)(id, int , int);

	/* PyObjCCreateOpaquePointerType */
	PyObject* (*pointer_type_new)(const char*, const char*, const char*);

	/* PyObject* PyObjCObject_NewTransient(id objc_object, int* cookie); */
	PyObject* (*newtransient)(id objc_object, int* cookie);

	/* void PyObjCObject_ReleaseTransient(PyObject* proxy, int cookie); */
	void (*releasetransient)(PyObject* proxy, int cookie);

	void (*doweaklink)(PyObject*, struct PyObjC_WeakLink*);

	const char* (*removefields)(char*, const char*);

	PyObject** pyobjc_null;

	int (*dep_c_array_count)(const char* type, Py_ssize_t count, BOOL strict, PyObject* value, void* datum);

	PyObject* (*varlistnew)(const char* tp, void* array);

	int (*is_ascii_string)(PyObject* unicode_string, const char* ascii_string);
	int (*is_ascii_prefix)(PyObject* unicode_string, const char* ascii_string, size_t n);

	int (*pyobjcobject_convert)(PyObject*,void*);
};

#ifndef PYOBJC_BUILD

#ifndef PYOBJC_METHOD_STUB_IMPL
static struct pyobjc_api*	PyObjC_API;
#endif /* PYOBJC_METHOD_STUB_IMPL */

#define PyObjC_is_ascii_string (PyObjC_API->is_ascii_string)
#define PyObjC_is_ascii_prefix (PyObjC_API->is_ascii_prefix)

#define PyObjCObject_Check(obj) PyObject_TypeCheck(obj, PyObjC_API->object_type)
#define PyObjCClass_Check(obj)  PyObject_TypeCheck(obj, PyObjC_API->class_type)
#define PyObjCSelector_Check(obj)  PyObject_TypeCheck(obj, PyObjC_API->select_type)
#define PyObjCIMP_Check(obj)  PyObject_TypeCheck(obj, PyObjC_API->imp_type)
#define PyObjCObject_GetObject (PyObjC_API->obj_get_object)
#define PyObjCObject_ClearObject (PyObjC_API->obj_clear_object)
#define PyObjCClass_GetClass   (PyObjC_API->cls_get_class)
#define PyObjCClass_New 	     (PyObjC_API->cls_to_python)
#define PyObjCSelector_GetClass (PyObjC_API->sel_get_class)
#define PyObjCSelector_GetSelector (PyObjC_API->sel_get_sel)
#define PyObjC_PythonToId      (PyObjC_API->python_to_id)
#define PyObjC_IdToPython      (PyObjC_API->id_to_python)
#define PyObjCErr_FromObjC     (PyObjC_API->err_objc_to_python)
#define PyObjCErr_ToObjC       (PyObjC_API->err_python_to_objc)
#define PyObjCErr_ToObjCWithGILState       (PyObjC_API->err_python_to_objc_gil)
#define PyObjCErr_AsExc        (PyObjC_API->err_python_to_nsexception)
#define PyObjC_PythonToObjC    (PyObjC_API->py_to_objc)
#define PyObjC_ObjCToPython    (PyObjC_API->objc_to_py)
#define PyObjC_RegisterMethodMapping (PyObjC_API->register_method_mapping)
#define PyObjC_RegisterSignatureMapping (PyObjC_API->register_signature_mapping)
#define PyObjC_SizeOfType      (PyObjC_API->sizeof_type)
#define PyObjC_PythonToObjC   (PyObjC_API->py_to_objc)
#define PyObjC_ObjCToPython   (PyObjC_API->objc_to_py)
#define PyObjC_InitSuper	(PyObjC_API->fill_super)
#define PyObjC_InitSuperCls	(PyObjC_API->fill_super_cls)
#define PyObjCPointerWrapper_Register (PyObjC_API->register_pointer_wrapper)
#define PyObjCUnsupportedMethod_IMP (PyObjC_API->unsupported_method_imp)
#define PyObjCUnsupportedMethod_Caller (PyObjC_API->unsupported_method_caller)
#define PyObjCRT_SizeOfType      (PyObjC_API->sizeof_type)
#define PyObjCRT_AlignOfType	(PyObjC_API->alignof_type)
#define PyObjCRT_SELName	(PyObjC_API->selname)
#define PyObjCRT_SimplifySignature	(PyObjC_API->simplify_sig)
#define PyObjC_FreeCArray	(PyObjC_API->free_c_array)
#define PyObjC_PythonToCArray	(PyObjC_API->py_to_c_array)
#define PyObjC_CArrayToPython	(PyObjC_API->c_array_to_py)
#define PyObjC_RegisterStructType   (PyObjC_API->register_struct)
#define PyObjCIMP_GetIMP   (PyObjC_API->imp_get_imp)
#define PyObjCIMP_GetSelector   (PyObjC_API->imp_get_sel)
#define PyObjCObject_IsUninitialized (PyObjC_API->obj_is_uninitialized)
#define PyObjCObject_New (PyObjC_API->pyobjc_object_new)
#define PyObjCCreateOpaquePointerType (PyObjC_API->pointer_type_new)
#define PyObjCObject_NewTransient (PyObjC_API->newtransient)
#define PyObjCObject_ReleaseTransient (PyObjC_API->releasetransient)
#define PyObjC_PerformWeaklinking (PyObjC_API->doweaklink)
#define PyObjCRT_RemoveFieldNames (PyObjC_API->removefields)
#define PyObjC_NULL		  (*(PyObjC_API->pyobjc_null))
#define PyObjC_DepythonifyCArray  (PyObjC_API->dep_c_array_count)
#define PyObjC_VarList_New  (PyObjC_API->varlistnew)
#define PyObjCObject_Convert (PyObjC_API->pyobjcobject_convert)

typedef void (*PyObjC_Function_Pointer)(void);

typedef struct PyObjC_function_map {
    const char* 		name;
    PyObjC_Function_Pointer     function;
} PyObjC_function_map;



#ifndef PYOBJC_METHOD_STUB_IMPL

static inline PyObject*
PyObjC_CreateInlineTab(PyObjC_function_map* map)
{
#if PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION < 7
	return PyCObject_FromVoidPtr(map, NULL);
#else
	return PyCapsule_New(map, "objc.__inline__", NULL);
#endif
}

static inline int
PyObjC_ImportAPI(PyObject* calling_module)
{
	PyObject* m;
	PyObject* d;
	PyObject* api_obj;
#if PY_MAJOR_VERSION == 2
	PyObject* name = PyString_FromString("objc");
#else
	PyObject* name = PyUnicode_FromString("objc");
#endif
	
	m = PyImport_Import(name);
	Py_DECREF(name);
	if (m == NULL) {
		return -1;
	}

	d = PyModule_GetDict(m);
	if (d == NULL) {
		PyErr_SetString(PyExc_RuntimeError, 
			"No dict in objc module");
		return -1;
	}

	api_obj = PyDict_GetItemString(d, PYOBJC_API_NAME);
	if (api_obj == NULL) {
		PyErr_SetString(PyExc_RuntimeError, 
			"No C_API in objc module");
		return -1;
	}
#if PY_MAJOR_VERSION == 2 && PY_VERSION_MAJOR < 7
	PyObjC_API = PyCObject_AsVoidPtr(api_obj);
#else
	PyObjC_API = PyCapsule_GetPointer(api_obj, "objc." PYOBJC_API_NAME);
#endif
	if (PyObjC_API == NULL) {
		return 0;
	}
	if (PyObjC_API->api_version != PYOBJC_API_VERSION) {
		PyErr_SetString(PyExc_RuntimeError,
			"Wrong version of PyObjC C API");
		return -1;
	}
	
	if (PyObjC_API->struct_len < sizeof(struct pyobjc_api)) {
		PyErr_SetString(PyExc_RuntimeError,
			"Wrong struct-size of PyObjC C API");
		return -1;
	}

	Py_INCREF(api_obj);

	/* Current pyobjc implementation doesn't allow deregistering 
	 * information, avoid unloading of users of the C-API.
	 * (Yes this is ugle, patches to fix this situation are apriciated)
	 */
	Py_INCREF(calling_module);

	return 0;
}
#endif /* PYOBJC_METHOD_STUB_IMPL */

#else /* PyObjC_BUILD */

extern struct pyobjc_api	objc_api;

#endif /* !PYOBJC_BUILD */

/*
 * Helper macros to simplify module init functions.
 */
#define PyObjC__STR(x) #x
#define PyObjC_STR(x) PyObjC__STR(x)

#if PY_MAJOR_VERSION == 3

#define PyObjC_INITERROR() return NULL
#define PyObjC_INITDONE() return m


#define PyObjC_MODULE_INIT(name) \
	static struct PyModuleDef mod_module = { \
		PyModuleDef_HEAD_INIT, \
	 	PyObjC_STR(name), \
		NULL, \
		0, \
		mod_methods, \
		NULL, \
		NULL, \
		NULL, \
		NULL \
	}; \
	\
	PyObject* PyInit_##name(void); \
	PyObject* PyInit_##name(void)

#define PyObjC_MODULE_CREATE(name) \
	PyModule_Create(&mod_module);

#else

#define PyObjC_INITERROR() return
#define PyObjC_INITDONE() return

#define PyObjC_MODULE_INIT(name) \
	void init##name(void); \
	void init##name(void)

#define PyObjC_MODULE_CREATE(name) \
	Py_InitModule4(PyObjC_STR(name), mod_methods, \
			NULL, NULL, PYTHON_API_VERSION);

#endif

#endif /*  PyObjC_API_H */
                    include/pyobjc-compat.h                                                                             0100644 0001750 0001750 00000010347 12566246631 046442  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/PyObjC/pyobjc_core-2.3.2a0-py2.6.egg-info                #ifndef PyObjC_COMPAT_H
#define PyObjC_COMPAT_H

#import <Cocoa/Cocoa.h>
#import <Foundation/NSObjCRuntime.h>






/* 
 * Compatibilty definitions 
 */

#ifdef __GNUC__
#define unlikely(x)	__builtin_expect (!!(x), 0)
#define likely(x)	__builtin_expect (!!(x), 1)
#else
#define likely(x)	x 
#define likely(x)	x 
#endif

#import <AvailabilityMacros.h>
/* On 10.1 there are no defines for the OS version. */
#ifndef MAC_OS_X_VERSION_10_1
#define MAC_OS_X_VERSION_10_1 1010
#define MAC_OS_X_VERSION_MAX_ALLOWED MAC_OS_X_VERSION_10_1

#error "MAC_OS_X_VERSION_10_1 not defined. You aren't running 10.1 are you?"

#endif


#ifndef MAC_OS_X_VERSION_10_2
#define MAC_OS_X_VERSION_10_2 1020
#endif

#ifndef MAC_OS_X_VERSION_10_3
#define MAC_OS_X_VERSION_10_3 1030
#endif

#ifndef MAC_OS_X_VERSION_10_4
#define MAC_OS_X_VERSION_10_4 1040
#endif

#ifndef MAC_OS_X_VERSION_10_5
#define MAC_OS_X_VERSION_10_5 1050
#endif

#ifndef MAC_OS_X_VERSION_10_6
#define MAC_OS_X_VERSION_10_6 1060
#endif


/* On some versions of GCC <limits.h> defines LONG_LONG_MAX but not LLONG_MAX,
 * compensate.
 */
#ifndef LLONG_MIN
#ifdef LONG_LONG_MIN
#define LLONG_MIN LONG_LONG_MIN
#define LLONG_MAX LONG_LONG_MAX
#define ULLONG_MAX ULONG_LONG_MAX
#endif
#endif

#if (PY_VERSION_HEX < 0x02050000)
typedef int Py_ssize_t;
#define PY_FORMAT_SIZE_T ""
#define Py_ARG_SIZE_T "i"
#define PY_SSIZE_T_MAX INT_MAX

#else

#ifndef Py_ARG_SIZE_T
#define Py_ARG_SIZE_T "n"
#endif


#endif

#if PY_MAJOR_VERSION == 2

#ifndef Py_ARG_BYTES
#define Py_ARG_BYTES "z"
#endif

#else

#ifndef Py_ARG_BYTES
#define Py_ARG_BYTES "y"
#endif

#endif

#if __LP64__
#define Py_ARG_NSInteger "l"
#define Py_ARG_NSUInteger "k"
#else
#define Py_ARG_NSInteger "i"
#define Py_ARG_NSUInteger "I"
#endif

#if PY_MAJOR_VERSION == 2
#define Py_REFCNT(ob)           (((PyObject*)(ob))->ob_refcnt)
#define Py_TYPE(ob)             (((PyObject*)(ob))->ob_type)
#define Py_SIZE(ob)             (((PyVarObject*)(ob))->ob_size)


/* Source-level backward compatibility: use PyCapsule API in sources, fall back to
 * PyCObject when needed.
 */
#if PY_MINOR_VERSION < 7
#define PyCapsule_New(pointer, name, destructor) PyCObject_FromVoidPtr(pointer, destructor)
#define PyCapsule_GetPointer(object, name) PyCObject_AsVoidPtr(object)
#define PyCapsule_CheckExact(object)	PyCObject_Check(object)
#endif

#endif

#if PY_MAJOR_VERSION == 2

#define PyErr_Format PyObjCErr_Format

extern PyObject* PyObjCErr_Format(PyObject* exception, const char* format, ...);

#define PyText_Check PyString_Check
#define PyText_FromFormat PyString_FromFormat
#define PyText_FromString PyString_FromString
#define PyText_FromStringAndSize PyString_FromStringAndSize
#define PyText_InternFromString PyString_InternFromString
#define PyText_InternInPlace PyString_InternInPlace
#define PyText_Append PyString_ConcatAndDel
#define PyText_AsString	PyString_AsString

#ifndef PyBytes_FromString
#define PyBytes_AsString	PyString_AsString
#define PyBytes_Size		PyString_Size
#define PyBytes_FromString	PyString_FromString
#define PyBytes_FromStringAndSize	PyString_FromStringAndSize
#define PyBytes_AS_STRING	PyString_AS_STRING
#endif

#define PyBytes_InternFromString	PyString_InternFromString
#define PyBytes_InternFromStringAndSize	PyObjCString_InternFromStringAndSize

extern PyObject* PyObjCString_InternFromStringAndSize(const char* v, Py_ssize_t l);

#else

#define PyText_Check PyUnicode_Check
#define PyText_FromFormat PyUnicode_FromFormat
#define PyText_FromString PyUnicode_FromString
#define PyText_FromStringAndSize PyUnicode_FromStringAndSize
#define PyText_InternFromString PyUnicode_InternFromString
#define PyText_InternInPlace PyUnicode_InternInPlace
#define PyText_Append PyUnicode_Append
#define PyText_AsString	_PyUnicode_AsString

#endif

#if PY_MAJOR_VERSION == 3
#define PyInt_FromLong		PyLong_FromLong
#define PyInt_FromString	PyLong_FromString

extern int PyObject_Cmp (PyObject *o1, PyObject *o2, int *result);
extern PyObject* PyBytes_InternFromString(const char* v);
extern PyObject* PyBytes_InternFromStringAndSize(const char* v, Py_ssize_t l);
#endif

extern void      PyObjC_ClearIntern(void);
extern PyObject* PyObjC_InternValue(PyObject* orig);
extern PyObject* PyObjC_IntFromString(char* v, char**pend, int base);
extern PyObject* PyObjC_IntFromLong(long v);

#endif /* PyObjC_COMPAT_H */
                                                                                                                                                                                                                                                                                         numpy/                                                                                              0040755 0001750 0001750 00000000000 12612224743 034362  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python                                                          core/                                                                                               0040755 0001750 0001750 00000000000 12612224743 035312  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy                                                    include/                                                                                            0040755 0001750 0001750 00000000000 12612224743 036735  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core                                               numpy/                                                                                              0040755 0001750 0001750 00000000000 12612224743 040105  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include                                       __multiarray_api.h                                                                                  0100644 0001750 0001750 00000166161 12566241442 043611  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 
#ifdef _MULTIARRAYMODULE

typedef struct {
        PyObject_HEAD
        npy_bool obval;
} PyBoolScalarObject;

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
extern NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type;
extern NPY_NO_EXPORT PyTypeObject PyArrayNeighborhoodIter_Type;
extern NPY_NO_EXPORT PyBoolScalarObject _PyArrayScalar_BoolValues[2];
#else
NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type;
NPY_NO_EXPORT PyTypeObject PyArrayNeighborhoodIter_Type;
NPY_NO_EXPORT PyBoolScalarObject _PyArrayScalar_BoolValues[2];
#endif

NPY_NO_EXPORT unsigned int PyArray_GetNDArrayCVersion \
       (void);
#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyBigArray_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyBigArray_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyArray_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyArray_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyArrayDescr_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyArrayDescr_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyArrayFlags_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyArrayFlags_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyArrayIter_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyArrayIter_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyArrayMultiIter_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyArrayMultiIter_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT int NPY_NUMUSERTYPES;
#else
    NPY_NO_EXPORT int NPY_NUMUSERTYPES;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyBoolArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyBoolArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
extern NPY_NO_EXPORT PyBoolScalarObject _PyArrayScalar_BoolValues[2];
#else
NPY_NO_EXPORT PyBoolScalarObject _PyArrayScalar_BoolValues[2];
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyGenericArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyGenericArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyNumberArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyNumberArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyIntegerArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyIntegerArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PySignedIntegerArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PySignedIntegerArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyUnsignedIntegerArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyUnsignedIntegerArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyInexactArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyInexactArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyFloatingArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyFloatingArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyComplexFloatingArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyComplexFloatingArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyFlexibleArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyFlexibleArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyCharacterArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyCharacterArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyByteArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyByteArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyShortArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyShortArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyIntArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyIntArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyLongArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyLongArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyLongLongArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyLongLongArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyUByteArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyUByteArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyUShortArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyUShortArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyUIntArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyUIntArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyULongArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyULongArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyULongLongArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyULongLongArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyFloatArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyFloatArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyDoubleArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyDoubleArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyLongDoubleArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyLongDoubleArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyCFloatArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyCFloatArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyCDoubleArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyCDoubleArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyCLongDoubleArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyCLongDoubleArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyObjectArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyObjectArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyStringArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyStringArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyUnicodeArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyUnicodeArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyVoidArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyVoidArrType_Type;
#endif

NPY_NO_EXPORT int PyArray_SetNumericOps \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_GetNumericOps \
       (void);
NPY_NO_EXPORT int PyArray_INCREF \
       (PyArrayObject *);
NPY_NO_EXPORT int PyArray_XDECREF \
       (PyArrayObject *);
NPY_NO_EXPORT void PyArray_SetStringFunction \
       (PyObject *, int);
NPY_NO_EXPORT PyArray_Descr * PyArray_DescrFromType \
       (int);
NPY_NO_EXPORT PyObject * PyArray_TypeObjectFromType \
       (int);
NPY_NO_EXPORT char * PyArray_Zero \
       (PyArrayObject *);
NPY_NO_EXPORT char * PyArray_One \
       (PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_CastToType \
       (PyArrayObject *, PyArray_Descr *, int);
NPY_NO_EXPORT int PyArray_CastTo \
       (PyArrayObject *, PyArrayObject *);
NPY_NO_EXPORT int PyArray_CastAnyTo \
       (PyArrayObject *, PyArrayObject *);
NPY_NO_EXPORT int PyArray_CanCastSafely \
       (int, int);
NPY_NO_EXPORT npy_bool PyArray_CanCastTo \
       (PyArray_Descr *, PyArray_Descr *);
NPY_NO_EXPORT int PyArray_ObjectType \
       (PyObject *, int);
NPY_NO_EXPORT PyArray_Descr * PyArray_DescrFromObject \
       (PyObject *, PyArray_Descr *);
NPY_NO_EXPORT PyArrayObject ** PyArray_ConvertToCommonType \
       (PyObject *, int *);
NPY_NO_EXPORT PyArray_Descr * PyArray_DescrFromScalar \
       (PyObject *);
NPY_NO_EXPORT PyArray_Descr * PyArray_DescrFromTypeObject \
       (PyObject *);
NPY_NO_EXPORT npy_intp PyArray_Size \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_Scalar \
       (void *, PyArray_Descr *, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_FromScalar \
       (PyObject *, PyArray_Descr *);
NPY_NO_EXPORT void PyArray_ScalarAsCtype \
       (PyObject *, void *);
NPY_NO_EXPORT int PyArray_CastScalarToCtype \
       (PyObject *, void *, PyArray_Descr *);
NPY_NO_EXPORT int PyArray_CastScalarDirect \
       (PyObject *, PyArray_Descr *, void *, int);
NPY_NO_EXPORT PyObject * PyArray_ScalarFromObject \
       (PyObject *);
NPY_NO_EXPORT PyArray_VectorUnaryFunc * PyArray_GetCastFunc \
       (PyArray_Descr *, int);
NPY_NO_EXPORT PyObject * PyArray_FromDims \
       (int, int *, int);
NPY_NO_EXPORT PyObject * PyArray_FromDimsAndDataAndDescr \
       (int, int *, PyArray_Descr *, char *);
NPY_NO_EXPORT PyObject * PyArray_FromAny \
       (PyObject *, PyArray_Descr *, int, int, int, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_EnsureArray \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_EnsureAnyArray \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_FromFile \
       (FILE *, PyArray_Descr *, npy_intp, char *);
NPY_NO_EXPORT PyObject * PyArray_FromString \
       (char *, npy_intp, PyArray_Descr *, npy_intp, char *);
NPY_NO_EXPORT PyObject * PyArray_FromBuffer \
       (PyObject *, PyArray_Descr *, npy_intp, npy_intp);
NPY_NO_EXPORT PyObject * PyArray_FromIter \
       (PyObject *, PyArray_Descr *, npy_intp);
NPY_NO_EXPORT PyObject * PyArray_Return \
       (PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_GetField \
       (PyArrayObject *, PyArray_Descr *, int);
NPY_NO_EXPORT int PyArray_SetField \
       (PyArrayObject *, PyArray_Descr *, int, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_Byteswap \
       (PyArrayObject *, npy_bool);
NPY_NO_EXPORT PyObject * PyArray_Resize \
       (PyArrayObject *, PyArray_Dims *, int, NPY_ORDER);
NPY_NO_EXPORT int PyArray_MoveInto \
       (PyArrayObject *, PyArrayObject *);
NPY_NO_EXPORT int PyArray_CopyInto \
       (PyArrayObject *, PyArrayObject *);
NPY_NO_EXPORT int PyArray_CopyAnyInto \
       (PyArrayObject *, PyArrayObject *);
NPY_NO_EXPORT int PyArray_CopyObject \
       (PyArrayObject *, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_NewCopy \
       (PyArrayObject *, NPY_ORDER);
NPY_NO_EXPORT PyObject * PyArray_ToList \
       (PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_ToString \
       (PyArrayObject *, NPY_ORDER);
NPY_NO_EXPORT int PyArray_ToFile \
       (PyArrayObject *, FILE *, char *, char *);
NPY_NO_EXPORT int PyArray_Dump \
       (PyObject *, PyObject *, int);
NPY_NO_EXPORT PyObject * PyArray_Dumps \
       (PyObject *, int);
NPY_NO_EXPORT int PyArray_ValidType \
       (int);
NPY_NO_EXPORT void PyArray_UpdateFlags \
       (PyArrayObject *, int);
NPY_NO_EXPORT PyObject * PyArray_New \
       (PyTypeObject *, int, npy_intp *, int, npy_intp *, void *, int, int, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_NewFromDescr \
       (PyTypeObject *, PyArray_Descr *, int, npy_intp *, npy_intp *, void *, int, PyObject *);
NPY_NO_EXPORT PyArray_Descr * PyArray_DescrNew \
       (PyArray_Descr *);
NPY_NO_EXPORT PyArray_Descr * PyArray_DescrNewFromType \
       (int);
NPY_NO_EXPORT double PyArray_GetPriority \
       (PyObject *, double);
NPY_NO_EXPORT PyObject * PyArray_IterNew \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_MultiIterNew \
       (int, ...);
NPY_NO_EXPORT int PyArray_PyIntAsInt \
       (PyObject *);
NPY_NO_EXPORT npy_intp PyArray_PyIntAsIntp \
       (PyObject *);
NPY_NO_EXPORT int PyArray_Broadcast \
       (PyArrayMultiIterObject *);
NPY_NO_EXPORT void PyArray_FillObjectArray \
       (PyArrayObject *, PyObject *);
NPY_NO_EXPORT int PyArray_FillWithScalar \
       (PyArrayObject *, PyObject *);
NPY_NO_EXPORT npy_bool PyArray_CheckStrides \
       (int, int, npy_intp, npy_intp, npy_intp *, npy_intp *);
NPY_NO_EXPORT PyArray_Descr * PyArray_DescrNewByteorder \
       (PyArray_Descr *, char);
NPY_NO_EXPORT PyObject * PyArray_IterAllButAxis \
       (PyObject *, int *);
NPY_NO_EXPORT PyObject * PyArray_CheckFromAny \
       (PyObject *, PyArray_Descr *, int, int, int, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_FromArray \
       (PyArrayObject *, PyArray_Descr *, int);
NPY_NO_EXPORT PyObject * PyArray_FromInterface \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_FromStructInterface \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_FromArrayAttr \
       (PyObject *, PyArray_Descr *, PyObject *);
NPY_NO_EXPORT NPY_SCALARKIND PyArray_ScalarKind \
       (int, PyArrayObject **);
NPY_NO_EXPORT int PyArray_CanCoerceScalar \
       (int, int, NPY_SCALARKIND);
NPY_NO_EXPORT PyObject * PyArray_NewFlagsObject \
       (PyObject *);
NPY_NO_EXPORT npy_bool PyArray_CanCastScalar \
       (PyTypeObject *, PyTypeObject *);
NPY_NO_EXPORT int PyArray_CompareUCS4 \
       (npy_ucs4 *, npy_ucs4 *, size_t);
NPY_NO_EXPORT int PyArray_RemoveSmallest \
       (PyArrayMultiIterObject *);
NPY_NO_EXPORT int PyArray_ElementStrides \
       (PyObject *);
NPY_NO_EXPORT void PyArray_Item_INCREF \
       (char *, PyArray_Descr *);
NPY_NO_EXPORT void PyArray_Item_XDECREF \
       (char *, PyArray_Descr *);
NPY_NO_EXPORT PyObject * PyArray_FieldNames \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_Transpose \
       (PyArrayObject *, PyArray_Dims *);
NPY_NO_EXPORT PyObject * PyArray_TakeFrom \
       (PyArrayObject *, PyObject *, int, PyArrayObject *, NPY_CLIPMODE);
NPY_NO_EXPORT PyObject * PyArray_PutTo \
       (PyArrayObject *, PyObject*, PyObject *, NPY_CLIPMODE);
NPY_NO_EXPORT PyObject * PyArray_PutMask \
       (PyArrayObject *, PyObject*, PyObject*);
NPY_NO_EXPORT PyObject * PyArray_Repeat \
       (PyArrayObject *, PyObject *, int);
NPY_NO_EXPORT PyObject * PyArray_Choose \
       (PyArrayObject *, PyObject *, PyArrayObject *, NPY_CLIPMODE);
NPY_NO_EXPORT int PyArray_Sort \
       (PyArrayObject *, int, NPY_SORTKIND);
NPY_NO_EXPORT PyObject * PyArray_ArgSort \
       (PyArrayObject *, int, NPY_SORTKIND);
NPY_NO_EXPORT PyObject * PyArray_SearchSorted \
       (PyArrayObject *, PyObject *, NPY_SEARCHSIDE);
NPY_NO_EXPORT PyObject * PyArray_ArgMax \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_ArgMin \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Reshape \
       (PyArrayObject *, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_Newshape \
       (PyArrayObject *, PyArray_Dims *, NPY_ORDER);
NPY_NO_EXPORT PyObject * PyArray_Squeeze \
       (PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_View \
       (PyArrayObject *, PyArray_Descr *, PyTypeObject *);
NPY_NO_EXPORT PyObject * PyArray_SwapAxes \
       (PyArrayObject *, int, int);
NPY_NO_EXPORT PyObject * PyArray_Max \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Min \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Ptp \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Mean \
       (PyArrayObject *, int, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Trace \
       (PyArrayObject *, int, int, int, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Diagonal \
       (PyArrayObject *, int, int, int);
NPY_NO_EXPORT PyObject * PyArray_Clip \
       (PyArrayObject *, PyObject *, PyObject *, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Conjugate \
       (PyArrayObject *, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Nonzero \
       (PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Std \
       (PyArrayObject *, int, int, PyArrayObject *, int);
NPY_NO_EXPORT PyObject * PyArray_Sum \
       (PyArrayObject *, int, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_CumSum \
       (PyArrayObject *, int, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Prod \
       (PyArrayObject *, int, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_CumProd \
       (PyArrayObject *, int, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_All \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Any \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Compress \
       (PyArrayObject *, PyObject *, int, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_Flatten \
       (PyArrayObject *, NPY_ORDER);
NPY_NO_EXPORT PyObject * PyArray_Ravel \
       (PyArrayObject *, NPY_ORDER);
NPY_NO_EXPORT npy_intp PyArray_MultiplyList \
       (npy_intp *, int);
NPY_NO_EXPORT int PyArray_MultiplyIntList \
       (int *, int);
NPY_NO_EXPORT void * PyArray_GetPtr \
       (PyArrayObject *, npy_intp*);
NPY_NO_EXPORT int PyArray_CompareLists \
       (npy_intp *, npy_intp *, int);
NPY_NO_EXPORT int PyArray_AsCArray \
       (PyObject **, void *, npy_intp *, int, PyArray_Descr*);
NPY_NO_EXPORT int PyArray_As1D \
       (PyObject **, char **, int *, int);
NPY_NO_EXPORT int PyArray_As2D \
       (PyObject **, char ***, int *, int *, int);
NPY_NO_EXPORT int PyArray_Free \
       (PyObject *, void *);
NPY_NO_EXPORT int PyArray_Converter \
       (PyObject *, PyObject **);
NPY_NO_EXPORT int PyArray_IntpFromSequence \
       (PyObject *, npy_intp *, int);
NPY_NO_EXPORT PyObject * PyArray_Concatenate \
       (PyObject *, int);
NPY_NO_EXPORT PyObject * PyArray_InnerProduct \
       (PyObject *, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_MatrixProduct \
       (PyObject *, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_CopyAndTranspose \
       (PyObject *);
NPY_NO_EXPORT PyObject * PyArray_Correlate \
       (PyObject *, PyObject *, int);
NPY_NO_EXPORT int PyArray_TypestrConvert \
       (int, int);
NPY_NO_EXPORT int PyArray_DescrConverter \
       (PyObject *, PyArray_Descr **);
NPY_NO_EXPORT int PyArray_DescrConverter2 \
       (PyObject *, PyArray_Descr **);
NPY_NO_EXPORT int PyArray_IntpConverter \
       (PyObject *, PyArray_Dims *);
NPY_NO_EXPORT int PyArray_BufferConverter \
       (PyObject *, PyArray_Chunk *);
NPY_NO_EXPORT int PyArray_AxisConverter \
       (PyObject *, int *);
NPY_NO_EXPORT int PyArray_BoolConverter \
       (PyObject *, npy_bool *);
NPY_NO_EXPORT int PyArray_ByteorderConverter \
       (PyObject *, char *);
NPY_NO_EXPORT int PyArray_OrderConverter \
       (PyObject *, NPY_ORDER *);
NPY_NO_EXPORT unsigned char PyArray_EquivTypes \
       (PyArray_Descr *, PyArray_Descr *);
NPY_NO_EXPORT PyObject * PyArray_Zeros \
       (int, npy_intp *, PyArray_Descr *, int);
NPY_NO_EXPORT PyObject * PyArray_Empty \
       (int, npy_intp *, PyArray_Descr *, int);
NPY_NO_EXPORT PyObject * PyArray_Where \
       (PyObject *, PyObject *, PyObject *);
NPY_NO_EXPORT PyObject * PyArray_Arange \
       (double, double, double, int);
NPY_NO_EXPORT PyObject * PyArray_ArangeObj \
       (PyObject *, PyObject *, PyObject *, PyArray_Descr *);
NPY_NO_EXPORT int PyArray_SortkindConverter \
       (PyObject *, NPY_SORTKIND *);
NPY_NO_EXPORT PyObject * PyArray_LexSort \
       (PyObject *, int);
NPY_NO_EXPORT PyObject * PyArray_Round \
       (PyArrayObject *, int, PyArrayObject *);
NPY_NO_EXPORT unsigned char PyArray_EquivTypenums \
       (int, int);
NPY_NO_EXPORT int PyArray_RegisterDataType \
       (PyArray_Descr *);
NPY_NO_EXPORT int PyArray_RegisterCastFunc \
       (PyArray_Descr *, int, PyArray_VectorUnaryFunc *);
NPY_NO_EXPORT int PyArray_RegisterCanCast \
       (PyArray_Descr *, int, NPY_SCALARKIND);
NPY_NO_EXPORT void PyArray_InitArrFuncs \
       (PyArray_ArrFuncs *);
NPY_NO_EXPORT PyObject * PyArray_IntTupleFromIntp \
       (int, npy_intp *);
NPY_NO_EXPORT int PyArray_TypeNumFromName \
       (char *);
NPY_NO_EXPORT int PyArray_ClipmodeConverter \
       (PyObject *, NPY_CLIPMODE *);
NPY_NO_EXPORT int PyArray_OutputConverter \
       (PyObject *, PyArrayObject **);
NPY_NO_EXPORT PyObject * PyArray_BroadcastToShape \
       (PyObject *, npy_intp *, int);
NPY_NO_EXPORT void _PyArray_SigintHandler \
       (int);
NPY_NO_EXPORT void* _PyArray_GetSigintBuf \
       (void);
NPY_NO_EXPORT int PyArray_DescrAlignConverter \
       (PyObject *, PyArray_Descr **);
NPY_NO_EXPORT int PyArray_DescrAlignConverter2 \
       (PyObject *, PyArray_Descr **);
NPY_NO_EXPORT int PyArray_SearchsideConverter \
       (PyObject *, void *);
NPY_NO_EXPORT PyObject * PyArray_CheckAxis \
       (PyArrayObject *, int *, int);
NPY_NO_EXPORT npy_intp PyArray_OverflowMultiplyList \
       (npy_intp *, int);
NPY_NO_EXPORT int PyArray_CompareString \
       (char *, char *, size_t);
NPY_NO_EXPORT PyObject * PyArray_MultiIterFromObjects \
       (PyObject **, int, int, ...);
NPY_NO_EXPORT int PyArray_GetEndianness \
       (void);
NPY_NO_EXPORT unsigned int PyArray_GetNDArrayCFeatureVersion \
       (void);
NPY_NO_EXPORT PyObject * PyArray_Correlate2 \
       (PyObject *, PyObject *, int);
NPY_NO_EXPORT PyObject* PyArray_NeighborhoodIterNew \
       (PyArrayIterObject *, npy_intp *, int, PyArrayObject*);
#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyTimeIntegerArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyTimeIntegerArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyDatetimeArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyDatetimeArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyTimedeltaArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyTimedeltaArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyHalfArrType_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyHalfArrType_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject NpyIter_Type;
#else
    NPY_NO_EXPORT PyTypeObject NpyIter_Type;
#endif

NPY_NO_EXPORT void PyArray_SetDatetimeParseFunction \
       (PyObject *);
NPY_NO_EXPORT void PyArray_DatetimeToDatetimeStruct \
       (npy_datetime, NPY_DATETIMEUNIT, npy_datetimestruct *);
NPY_NO_EXPORT void PyArray_TimedeltaToTimedeltaStruct \
       (npy_timedelta, NPY_DATETIMEUNIT, npy_timedeltastruct *);
NPY_NO_EXPORT npy_datetime PyArray_DatetimeStructToDatetime \
       (NPY_DATETIMEUNIT, npy_datetimestruct *);
NPY_NO_EXPORT npy_datetime PyArray_TimedeltaStructToTimedelta \
       (NPY_DATETIMEUNIT, npy_timedeltastruct *);
NPY_NO_EXPORT NpyIter * NpyIter_New \
       (PyArrayObject *, npy_uint32, NPY_ORDER, NPY_CASTING, PyArray_Descr*);
NPY_NO_EXPORT NpyIter * NpyIter_MultiNew \
       (int, PyArrayObject **, npy_uint32, NPY_ORDER, NPY_CASTING, npy_uint32 *, PyArray_Descr **);
NPY_NO_EXPORT NpyIter * NpyIter_AdvancedNew \
       (int, PyArrayObject **, npy_uint32, NPY_ORDER, NPY_CASTING, npy_uint32 *, PyArray_Descr **, int, int **, npy_intp *, npy_intp);
NPY_NO_EXPORT NpyIter * NpyIter_Copy \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_Deallocate \
       (NpyIter *);
NPY_NO_EXPORT npy_bool NpyIter_HasDelayedBufAlloc \
       (NpyIter *);
NPY_NO_EXPORT npy_bool NpyIter_HasExternalLoop \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_EnableExternalLoop \
       (NpyIter *);
NPY_NO_EXPORT npy_intp * NpyIter_GetInnerStrideArray \
       (NpyIter *);
NPY_NO_EXPORT npy_intp * NpyIter_GetInnerLoopSizePtr \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_Reset \
       (NpyIter *, char **);
NPY_NO_EXPORT int NpyIter_ResetBasePointers \
       (NpyIter *, char **, char **);
NPY_NO_EXPORT int NpyIter_ResetToIterIndexRange \
       (NpyIter *, npy_intp, npy_intp, char **);
NPY_NO_EXPORT int NpyIter_GetNDim \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_GetNOp \
       (NpyIter *);
NPY_NO_EXPORT NpyIter_IterNextFunc * NpyIter_GetIterNext \
       (NpyIter *, char **);
NPY_NO_EXPORT npy_intp NpyIter_GetIterSize \
       (NpyIter *);
NPY_NO_EXPORT void NpyIter_GetIterIndexRange \
       (NpyIter *, npy_intp *, npy_intp *);
NPY_NO_EXPORT npy_intp NpyIter_GetIterIndex \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_GotoIterIndex \
       (NpyIter *, npy_intp);
NPY_NO_EXPORT npy_bool NpyIter_HasMultiIndex \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_GetShape \
       (NpyIter *, npy_intp *);
NPY_NO_EXPORT NpyIter_GetMultiIndexFunc * NpyIter_GetGetMultiIndex \
       (NpyIter *, char **);
NPY_NO_EXPORT int NpyIter_GotoMultiIndex \
       (NpyIter *, npy_intp *);
NPY_NO_EXPORT int NpyIter_RemoveMultiIndex \
       (NpyIter *);
NPY_NO_EXPORT npy_bool NpyIter_HasIndex \
       (NpyIter *);
NPY_NO_EXPORT npy_bool NpyIter_IsBuffered \
       (NpyIter *);
NPY_NO_EXPORT npy_bool NpyIter_IsGrowInner \
       (NpyIter *);
NPY_NO_EXPORT npy_intp NpyIter_GetBufferSize \
       (NpyIter *);
NPY_NO_EXPORT npy_intp * NpyIter_GetIndexPtr \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_GotoIndex \
       (NpyIter *, npy_intp);
NPY_NO_EXPORT char ** NpyIter_GetDataPtrArray \
       (NpyIter *);
NPY_NO_EXPORT PyArray_Descr ** NpyIter_GetDescrArray \
       (NpyIter *);
NPY_NO_EXPORT PyArrayObject ** NpyIter_GetOperandArray \
       (NpyIter *);
NPY_NO_EXPORT PyArrayObject * NpyIter_GetIterView \
       (NpyIter *, npy_intp);
NPY_NO_EXPORT void NpyIter_GetReadFlags \
       (NpyIter *, char *);
NPY_NO_EXPORT void NpyIter_GetWriteFlags \
       (NpyIter *, char *);
NPY_NO_EXPORT void NpyIter_DebugPrint \
       (NpyIter *);
NPY_NO_EXPORT npy_bool NpyIter_IterationNeedsAPI \
       (NpyIter *);
NPY_NO_EXPORT void NpyIter_GetInnerFixedStrideArray \
       (NpyIter *, npy_intp *);
NPY_NO_EXPORT int NpyIter_RemoveAxis \
       (NpyIter *, int);
NPY_NO_EXPORT npy_intp * NpyIter_GetAxisStrideArray \
       (NpyIter *, int);
NPY_NO_EXPORT npy_bool NpyIter_RequiresBuffering \
       (NpyIter *);
NPY_NO_EXPORT char ** NpyIter_GetInitialDataPtrArray \
       (NpyIter *);
NPY_NO_EXPORT int NpyIter_CreateCompatibleStrides \
       (NpyIter *, npy_intp, npy_intp *);
NPY_NO_EXPORT int PyArray_CastingConverter \
       (PyObject *, NPY_CASTING *);
NPY_NO_EXPORT npy_intp PyArray_CountNonzero \
       (PyArrayObject *);
NPY_NO_EXPORT PyArray_Descr * PyArray_PromoteTypes \
       (PyArray_Descr *, PyArray_Descr *);
NPY_NO_EXPORT PyArray_Descr * PyArray_MinScalarType \
       (PyArrayObject *);
NPY_NO_EXPORT PyArray_Descr * PyArray_ResultType \
       (npy_intp, PyArrayObject **, npy_intp, PyArray_Descr **);
NPY_NO_EXPORT npy_bool PyArray_CanCastArrayTo \
       (PyArrayObject *, PyArray_Descr *, NPY_CASTING);
NPY_NO_EXPORT npy_bool PyArray_CanCastTypeTo \
       (PyArray_Descr *, PyArray_Descr *, NPY_CASTING);
NPY_NO_EXPORT PyArrayObject * PyArray_EinsteinSum \
       (char *, npy_intp, PyArrayObject **, PyArray_Descr *, NPY_ORDER, NPY_CASTING, PyArrayObject *);
NPY_NO_EXPORT PyObject * PyArray_NewLikeArray \
       (PyArrayObject *, NPY_ORDER, PyArray_Descr *, int);
NPY_NO_EXPORT int PyArray_GetArrayParamsFromObject \
       (PyObject *, PyArray_Descr *, npy_bool, PyArray_Descr **, int *, npy_intp *, PyArrayObject **, PyObject *);
NPY_NO_EXPORT int PyArray_ConvertClipmodeSequence \
       (PyObject *, NPY_CLIPMODE *, int);
NPY_NO_EXPORT PyObject * PyArray_MatrixProduct2 \
       (PyObject *, PyObject *, PyArrayObject*);

#else

#if defined(PY_ARRAY_UNIQUE_SYMBOL)
#define PyArray_API PY_ARRAY_UNIQUE_SYMBOL
#endif

#if defined(NO_IMPORT) || defined(NO_IMPORT_ARRAY)
extern void **PyArray_API;
#else
#if defined(PY_ARRAY_UNIQUE_SYMBOL)
void **PyArray_API;
#else
static void **PyArray_API=NULL;
#endif
#endif

#define PyArray_GetNDArrayCVersion \
        (*(unsigned int (*)(void)) \
         PyArray_API[0])
#define PyBigArray_Type (*(PyTypeObject *)PyArray_API[1])
#define PyArray_Type (*(PyTypeObject *)PyArray_API[2])
#define PyArrayDescr_Type (*(PyTypeObject *)PyArray_API[3])
#define PyArrayFlags_Type (*(PyTypeObject *)PyArray_API[4])
#define PyArrayIter_Type (*(PyTypeObject *)PyArray_API[5])
#define PyArrayMultiIter_Type (*(PyTypeObject *)PyArray_API[6])
#define NPY_NUMUSERTYPES (*(int *)PyArray_API[7])
#define PyBoolArrType_Type (*(PyTypeObject *)PyArray_API[8])
#define _PyArrayScalar_BoolValues ((PyBoolScalarObject *)PyArray_API[9])
#define PyGenericArrType_Type (*(PyTypeObject *)PyArray_API[10])
#define PyNumberArrType_Type (*(PyTypeObject *)PyArray_API[11])
#define PyIntegerArrType_Type (*(PyTypeObject *)PyArray_API[12])
#define PySignedIntegerArrType_Type (*(PyTypeObject *)PyArray_API[13])
#define PyUnsignedIntegerArrType_Type (*(PyTypeObject *)PyArray_API[14])
#define PyInexactArrType_Type (*(PyTypeObject *)PyArray_API[15])
#define PyFloatingArrType_Type (*(PyTypeObject *)PyArray_API[16])
#define PyComplexFloatingArrType_Type (*(PyTypeObject *)PyArray_API[17])
#define PyFlexibleArrType_Type (*(PyTypeObject *)PyArray_API[18])
#define PyCharacterArrType_Type (*(PyTypeObject *)PyArray_API[19])
#define PyByteArrType_Type (*(PyTypeObject *)PyArray_API[20])
#define PyShortArrType_Type (*(PyTypeObject *)PyArray_API[21])
#define PyIntArrType_Type (*(PyTypeObject *)PyArray_API[22])
#define PyLongArrType_Type (*(PyTypeObject *)PyArray_API[23])
#define PyLongLongArrType_Type (*(PyTypeObject *)PyArray_API[24])
#define PyUByteArrType_Type (*(PyTypeObject *)PyArray_API[25])
#define PyUShortArrType_Type (*(PyTypeObject *)PyArray_API[26])
#define PyUIntArrType_Type (*(PyTypeObject *)PyArray_API[27])
#define PyULongArrType_Type (*(PyTypeObject *)PyArray_API[28])
#define PyULongLongArrType_Type (*(PyTypeObject *)PyArray_API[29])
#define PyFloatArrType_Type (*(PyTypeObject *)PyArray_API[30])
#define PyDoubleArrType_Type (*(PyTypeObject *)PyArray_API[31])
#define PyLongDoubleArrType_Type (*(PyTypeObject *)PyArray_API[32])
#define PyCFloatArrType_Type (*(PyTypeObject *)PyArray_API[33])
#define PyCDoubleArrType_Type (*(PyTypeObject *)PyArray_API[34])
#define PyCLongDoubleArrType_Type (*(PyTypeObject *)PyArray_API[35])
#define PyObjectArrType_Type (*(PyTypeObject *)PyArray_API[36])
#define PyStringArrType_Type (*(PyTypeObject *)PyArray_API[37])
#define PyUnicodeArrType_Type (*(PyTypeObject *)PyArray_API[38])
#define PyVoidArrType_Type (*(PyTypeObject *)PyArray_API[39])
#define PyArray_SetNumericOps \
        (*(int (*)(PyObject *)) \
         PyArray_API[40])
#define PyArray_GetNumericOps \
        (*(PyObject * (*)(void)) \
         PyArray_API[41])
#define PyArray_INCREF \
        (*(int (*)(PyArrayObject *)) \
         PyArray_API[42])
#define PyArray_XDECREF \
        (*(int (*)(PyArrayObject *)) \
         PyArray_API[43])
#define PyArray_SetStringFunction \
        (*(void (*)(PyObject *, int)) \
         PyArray_API[44])
#define PyArray_DescrFromType \
        (*(PyArray_Descr * (*)(int)) \
         PyArray_API[45])
#define PyArray_TypeObjectFromType \
        (*(PyObject * (*)(int)) \
         PyArray_API[46])
#define PyArray_Zero \
        (*(char * (*)(PyArrayObject *)) \
         PyArray_API[47])
#define PyArray_One \
        (*(char * (*)(PyArrayObject *)) \
         PyArray_API[48])
#define PyArray_CastToType \
        (*(PyObject * (*)(PyArrayObject *, PyArray_Descr *, int)) \
         PyArray_API[49])
#define PyArray_CastTo \
        (*(int (*)(PyArrayObject *, PyArrayObject *)) \
         PyArray_API[50])
#define PyArray_CastAnyTo \
        (*(int (*)(PyArrayObject *, PyArrayObject *)) \
         PyArray_API[51])
#define PyArray_CanCastSafely \
        (*(int (*)(int, int)) \
         PyArray_API[52])
#define PyArray_CanCastTo \
        (*(npy_bool (*)(PyArray_Descr *, PyArray_Descr *)) \
         PyArray_API[53])
#define PyArray_ObjectType \
        (*(int (*)(PyObject *, int)) \
         PyArray_API[54])
#define PyArray_DescrFromObject \
        (*(PyArray_Descr * (*)(PyObject *, PyArray_Descr *)) \
         PyArray_API[55])
#define PyArray_ConvertToCommonType \
        (*(PyArrayObject ** (*)(PyObject *, int *)) \
         PyArray_API[56])
#define PyArray_DescrFromScalar \
        (*(PyArray_Descr * (*)(PyObject *)) \
         PyArray_API[57])
#define PyArray_DescrFromTypeObject \
        (*(PyArray_Descr * (*)(PyObject *)) \
         PyArray_API[58])
#define PyArray_Size \
        (*(npy_intp (*)(PyObject *)) \
         PyArray_API[59])
#define PyArray_Scalar \
        (*(PyObject * (*)(void *, PyArray_Descr *, PyObject *)) \
         PyArray_API[60])
#define PyArray_FromScalar \
        (*(PyObject * (*)(PyObject *, PyArray_Descr *)) \
         PyArray_API[61])
#define PyArray_ScalarAsCtype \
        (*(void (*)(PyObject *, void *)) \
         PyArray_API[62])
#define PyArray_CastScalarToCtype \
        (*(int (*)(PyObject *, void *, PyArray_Descr *)) \
         PyArray_API[63])
#define PyArray_CastScalarDirect \
        (*(int (*)(PyObject *, PyArray_Descr *, void *, int)) \
         PyArray_API[64])
#define PyArray_ScalarFromObject \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[65])
#define PyArray_GetCastFunc \
        (*(PyArray_VectorUnaryFunc * (*)(PyArray_Descr *, int)) \
         PyArray_API[66])
#define PyArray_FromDims \
        (*(PyObject * (*)(int, int *, int)) \
         PyArray_API[67])
#define PyArray_FromDimsAndDataAndDescr \
        (*(PyObject * (*)(int, int *, PyArray_Descr *, char *)) \
         PyArray_API[68])
#define PyArray_FromAny \
        (*(PyObject * (*)(PyObject *, PyArray_Descr *, int, int, int, PyObject *)) \
         PyArray_API[69])
#define PyArray_EnsureArray \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[70])
#define PyArray_EnsureAnyArray \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[71])
#define PyArray_FromFile \
        (*(PyObject * (*)(FILE *, PyArray_Descr *, npy_intp, char *)) \
         PyArray_API[72])
#define PyArray_FromString \
        (*(PyObject * (*)(char *, npy_intp, PyArray_Descr *, npy_intp, char *)) \
         PyArray_API[73])
#define PyArray_FromBuffer \
        (*(PyObject * (*)(PyObject *, PyArray_Descr *, npy_intp, npy_intp)) \
         PyArray_API[74])
#define PyArray_FromIter \
        (*(PyObject * (*)(PyObject *, PyArray_Descr *, npy_intp)) \
         PyArray_API[75])
#define PyArray_Return \
        (*(PyObject * (*)(PyArrayObject *)) \
         PyArray_API[76])
#define PyArray_GetField \
        (*(PyObject * (*)(PyArrayObject *, PyArray_Descr *, int)) \
         PyArray_API[77])
#define PyArray_SetField \
        (*(int (*)(PyArrayObject *, PyArray_Descr *, int, PyObject *)) \
         PyArray_API[78])
#define PyArray_Byteswap \
        (*(PyObject * (*)(PyArrayObject *, npy_bool)) \
         PyArray_API[79])
#define PyArray_Resize \
        (*(PyObject * (*)(PyArrayObject *, PyArray_Dims *, int, NPY_ORDER)) \
         PyArray_API[80])
#define PyArray_MoveInto \
        (*(int (*)(PyArrayObject *, PyArrayObject *)) \
         PyArray_API[81])
#define PyArray_CopyInto \
        (*(int (*)(PyArrayObject *, PyArrayObject *)) \
         PyArray_API[82])
#define PyArray_CopyAnyInto \
        (*(int (*)(PyArrayObject *, PyArrayObject *)) \
         PyArray_API[83])
#define PyArray_CopyObject \
        (*(int (*)(PyArrayObject *, PyObject *)) \
         PyArray_API[84])
#define PyArray_NewCopy \
        (*(PyObject * (*)(PyArrayObject *, NPY_ORDER)) \
         PyArray_API[85])
#define PyArray_ToList \
        (*(PyObject * (*)(PyArrayObject *)) \
         PyArray_API[86])
#define PyArray_ToString \
        (*(PyObject * (*)(PyArrayObject *, NPY_ORDER)) \
         PyArray_API[87])
#define PyArray_ToFile \
        (*(int (*)(PyArrayObject *, FILE *, char *, char *)) \
         PyArray_API[88])
#define PyArray_Dump \
        (*(int (*)(PyObject *, PyObject *, int)) \
         PyArray_API[89])
#define PyArray_Dumps \
        (*(PyObject * (*)(PyObject *, int)) \
         PyArray_API[90])
#define PyArray_ValidType \
        (*(int (*)(int)) \
         PyArray_API[91])
#define PyArray_UpdateFlags \
        (*(void (*)(PyArrayObject *, int)) \
         PyArray_API[92])
#define PyArray_New \
        (*(PyObject * (*)(PyTypeObject *, int, npy_intp *, int, npy_intp *, void *, int, int, PyObject *)) \
         PyArray_API[93])
#define PyArray_NewFromDescr \
        (*(PyObject * (*)(PyTypeObject *, PyArray_Descr *, int, npy_intp *, npy_intp *, void *, int, PyObject *)) \
         PyArray_API[94])
#define PyArray_DescrNew \
        (*(PyArray_Descr * (*)(PyArray_Descr *)) \
         PyArray_API[95])
#define PyArray_DescrNewFromType \
        (*(PyArray_Descr * (*)(int)) \
         PyArray_API[96])
#define PyArray_GetPriority \
        (*(double (*)(PyObject *, double)) \
         PyArray_API[97])
#define PyArray_IterNew \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[98])
#define PyArray_MultiIterNew \
        (*(PyObject * (*)(int, ...)) \
         PyArray_API[99])
#define PyArray_PyIntAsInt \
        (*(int (*)(PyObject *)) \
         PyArray_API[100])
#define PyArray_PyIntAsIntp \
        (*(npy_intp (*)(PyObject *)) \
         PyArray_API[101])
#define PyArray_Broadcast \
        (*(int (*)(PyArrayMultiIterObject *)) \
         PyArray_API[102])
#define PyArray_FillObjectArray \
        (*(void (*)(PyArrayObject *, PyObject *)) \
         PyArray_API[103])
#define PyArray_FillWithScalar \
        (*(int (*)(PyArrayObject *, PyObject *)) \
         PyArray_API[104])
#define PyArray_CheckStrides \
        (*(npy_bool (*)(int, int, npy_intp, npy_intp, npy_intp *, npy_intp *)) \
         PyArray_API[105])
#define PyArray_DescrNewByteorder \
        (*(PyArray_Descr * (*)(PyArray_Descr *, char)) \
         PyArray_API[106])
#define PyArray_IterAllButAxis \
        (*(PyObject * (*)(PyObject *, int *)) \
         PyArray_API[107])
#define PyArray_CheckFromAny \
        (*(PyObject * (*)(PyObject *, PyArray_Descr *, int, int, int, PyObject *)) \
         PyArray_API[108])
#define PyArray_FromArray \
        (*(PyObject * (*)(PyArrayObject *, PyArray_Descr *, int)) \
         PyArray_API[109])
#define PyArray_FromInterface \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[110])
#define PyArray_FromStructInterface \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[111])
#define PyArray_FromArrayAttr \
        (*(PyObject * (*)(PyObject *, PyArray_Descr *, PyObject *)) \
         PyArray_API[112])
#define PyArray_ScalarKind \
        (*(NPY_SCALARKIND (*)(int, PyArrayObject **)) \
         PyArray_API[113])
#define PyArray_CanCoerceScalar \
        (*(int (*)(int, int, NPY_SCALARKIND)) \
         PyArray_API[114])
#define PyArray_NewFlagsObject \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[115])
#define PyArray_CanCastScalar \
        (*(npy_bool (*)(PyTypeObject *, PyTypeObject *)) \
         PyArray_API[116])
#define PyArray_CompareUCS4 \
        (*(int (*)(npy_ucs4 *, npy_ucs4 *, size_t)) \
         PyArray_API[117])
#define PyArray_RemoveSmallest \
        (*(int (*)(PyArrayMultiIterObject *)) \
         PyArray_API[118])
#define PyArray_ElementStrides \
        (*(int (*)(PyObject *)) \
         PyArray_API[119])
#define PyArray_Item_INCREF \
        (*(void (*)(char *, PyArray_Descr *)) \
         PyArray_API[120])
#define PyArray_Item_XDECREF \
        (*(void (*)(char *, PyArray_Descr *)) \
         PyArray_API[121])
#define PyArray_FieldNames \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[122])
#define PyArray_Transpose \
        (*(PyObject * (*)(PyArrayObject *, PyArray_Dims *)) \
         PyArray_API[123])
#define PyArray_TakeFrom \
        (*(PyObject * (*)(PyArrayObject *, PyObject *, int, PyArrayObject *, NPY_CLIPMODE)) \
         PyArray_API[124])
#define PyArray_PutTo \
        (*(PyObject * (*)(PyArrayObject *, PyObject*, PyObject *, NPY_CLIPMODE)) \
         PyArray_API[125])
#define PyArray_PutMask \
        (*(PyObject * (*)(PyArrayObject *, PyObject*, PyObject*)) \
         PyArray_API[126])
#define PyArray_Repeat \
        (*(PyObject * (*)(PyArrayObject *, PyObject *, int)) \
         PyArray_API[127])
#define PyArray_Choose \
        (*(PyObject * (*)(PyArrayObject *, PyObject *, PyArrayObject *, NPY_CLIPMODE)) \
         PyArray_API[128])
#define PyArray_Sort \
        (*(int (*)(PyArrayObject *, int, NPY_SORTKIND)) \
         PyArray_API[129])
#define PyArray_ArgSort \
        (*(PyObject * (*)(PyArrayObject *, int, NPY_SORTKIND)) \
         PyArray_API[130])
#define PyArray_SearchSorted \
        (*(PyObject * (*)(PyArrayObject *, PyObject *, NPY_SEARCHSIDE)) \
         PyArray_API[131])
#define PyArray_ArgMax \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[132])
#define PyArray_ArgMin \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[133])
#define PyArray_Reshape \
        (*(PyObject * (*)(PyArrayObject *, PyObject *)) \
         PyArray_API[134])
#define PyArray_Newshape \
        (*(PyObject * (*)(PyArrayObject *, PyArray_Dims *, NPY_ORDER)) \
         PyArray_API[135])
#define PyArray_Squeeze \
        (*(PyObject * (*)(PyArrayObject *)) \
         PyArray_API[136])
#define PyArray_View \
        (*(PyObject * (*)(PyArrayObject *, PyArray_Descr *, PyTypeObject *)) \
         PyArray_API[137])
#define PyArray_SwapAxes \
        (*(PyObject * (*)(PyArrayObject *, int, int)) \
         PyArray_API[138])
#define PyArray_Max \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[139])
#define PyArray_Min \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[140])
#define PyArray_Ptp \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[141])
#define PyArray_Mean \
        (*(PyObject * (*)(PyArrayObject *, int, int, PyArrayObject *)) \
         PyArray_API[142])
#define PyArray_Trace \
        (*(PyObject * (*)(PyArrayObject *, int, int, int, int, PyArrayObject *)) \
         PyArray_API[143])
#define PyArray_Diagonal \
        (*(PyObject * (*)(PyArrayObject *, int, int, int)) \
         PyArray_API[144])
#define PyArray_Clip \
        (*(PyObject * (*)(PyArrayObject *, PyObject *, PyObject *, PyArrayObject *)) \
         PyArray_API[145])
#define PyArray_Conjugate \
        (*(PyObject * (*)(PyArrayObject *, PyArrayObject *)) \
         PyArray_API[146])
#define PyArray_Nonzero \
        (*(PyObject * (*)(PyArrayObject *)) \
         PyArray_API[147])
#define PyArray_Std \
        (*(PyObject * (*)(PyArrayObject *, int, int, PyArrayObject *, int)) \
         PyArray_API[148])
#define PyArray_Sum \
        (*(PyObject * (*)(PyArrayObject *, int, int, PyArrayObject *)) \
         PyArray_API[149])
#define PyArray_CumSum \
        (*(PyObject * (*)(PyArrayObject *, int, int, PyArrayObject *)) \
         PyArray_API[150])
#define PyArray_Prod \
        (*(PyObject * (*)(PyArrayObject *, int, int, PyArrayObject *)) \
         PyArray_API[151])
#define PyArray_CumProd \
        (*(PyObject * (*)(PyArrayObject *, int, int, PyArrayObject *)) \
         PyArray_API[152])
#define PyArray_All \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[153])
#define PyArray_Any \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[154])
#define PyArray_Compress \
        (*(PyObject * (*)(PyArrayObject *, PyObject *, int, PyArrayObject *)) \
         PyArray_API[155])
#define PyArray_Flatten \
        (*(PyObject * (*)(PyArrayObject *, NPY_ORDER)) \
         PyArray_API[156])
#define PyArray_Ravel \
        (*(PyObject * (*)(PyArrayObject *, NPY_ORDER)) \
         PyArray_API[157])
#define PyArray_MultiplyList \
        (*(npy_intp (*)(npy_intp *, int)) \
         PyArray_API[158])
#define PyArray_MultiplyIntList \
        (*(int (*)(int *, int)) \
         PyArray_API[159])
#define PyArray_GetPtr \
        (*(void * (*)(PyArrayObject *, npy_intp*)) \
         PyArray_API[160])
#define PyArray_CompareLists \
        (*(int (*)(npy_intp *, npy_intp *, int)) \
         PyArray_API[161])
#define PyArray_AsCArray \
        (*(int (*)(PyObject **, void *, npy_intp *, int, PyArray_Descr*)) \
         PyArray_API[162])
#define PyArray_As1D \
        (*(int (*)(PyObject **, char **, int *, int)) \
         PyArray_API[163])
#define PyArray_As2D \
        (*(int (*)(PyObject **, char ***, int *, int *, int)) \
         PyArray_API[164])
#define PyArray_Free \
        (*(int (*)(PyObject *, void *)) \
         PyArray_API[165])
#define PyArray_Converter \
        (*(int (*)(PyObject *, PyObject **)) \
         PyArray_API[166])
#define PyArray_IntpFromSequence \
        (*(int (*)(PyObject *, npy_intp *, int)) \
         PyArray_API[167])
#define PyArray_Concatenate \
        (*(PyObject * (*)(PyObject *, int)) \
         PyArray_API[168])
#define PyArray_InnerProduct \
        (*(PyObject * (*)(PyObject *, PyObject *)) \
         PyArray_API[169])
#define PyArray_MatrixProduct \
        (*(PyObject * (*)(PyObject *, PyObject *)) \
         PyArray_API[170])
#define PyArray_CopyAndTranspose \
        (*(PyObject * (*)(PyObject *)) \
         PyArray_API[171])
#define PyArray_Correlate \
        (*(PyObject * (*)(PyObject *, PyObject *, int)) \
         PyArray_API[172])
#define PyArray_TypestrConvert \
        (*(int (*)(int, int)) \
         PyArray_API[173])
#define PyArray_DescrConverter \
        (*(int (*)(PyObject *, PyArray_Descr **)) \
         PyArray_API[174])
#define PyArray_DescrConverter2 \
        (*(int (*)(PyObject *, PyArray_Descr **)) \
         PyArray_API[175])
#define PyArray_IntpConverter \
        (*(int (*)(PyObject *, PyArray_Dims *)) \
         PyArray_API[176])
#define PyArray_BufferConverter \
        (*(int (*)(PyObject *, PyArray_Chunk *)) \
         PyArray_API[177])
#define PyArray_AxisConverter \
        (*(int (*)(PyObject *, int *)) \
         PyArray_API[178])
#define PyArray_BoolConverter \
        (*(int (*)(PyObject *, npy_bool *)) \
         PyArray_API[179])
#define PyArray_ByteorderConverter \
        (*(int (*)(PyObject *, char *)) \
         PyArray_API[180])
#define PyArray_OrderConverter \
        (*(int (*)(PyObject *, NPY_ORDER *)) \
         PyArray_API[181])
#define PyArray_EquivTypes \
        (*(unsigned char (*)(PyArray_Descr *, PyArray_Descr *)) \
         PyArray_API[182])
#define PyArray_Zeros \
        (*(PyObject * (*)(int, npy_intp *, PyArray_Descr *, int)) \
         PyArray_API[183])
#define PyArray_Empty \
        (*(PyObject * (*)(int, npy_intp *, PyArray_Descr *, int)) \
         PyArray_API[184])
#define PyArray_Where \
        (*(PyObject * (*)(PyObject *, PyObject *, PyObject *)) \
         PyArray_API[185])
#define PyArray_Arange \
        (*(PyObject * (*)(double, double, double, int)) \
         PyArray_API[186])
#define PyArray_ArangeObj \
        (*(PyObject * (*)(PyObject *, PyObject *, PyObject *, PyArray_Descr *)) \
         PyArray_API[187])
#define PyArray_SortkindConverter \
        (*(int (*)(PyObject *, NPY_SORTKIND *)) \
         PyArray_API[188])
#define PyArray_LexSort \
        (*(PyObject * (*)(PyObject *, int)) \
         PyArray_API[189])
#define PyArray_Round \
        (*(PyObject * (*)(PyArrayObject *, int, PyArrayObject *)) \
         PyArray_API[190])
#define PyArray_EquivTypenums \
        (*(unsigned char (*)(int, int)) \
         PyArray_API[191])
#define PyArray_RegisterDataType \
        (*(int (*)(PyArray_Descr *)) \
         PyArray_API[192])
#define PyArray_RegisterCastFunc \
        (*(int (*)(PyArray_Descr *, int, PyArray_VectorUnaryFunc *)) \
         PyArray_API[193])
#define PyArray_RegisterCanCast \
        (*(int (*)(PyArray_Descr *, int, NPY_SCALARKIND)) \
         PyArray_API[194])
#define PyArray_InitArrFuncs \
        (*(void (*)(PyArray_ArrFuncs *)) \
         PyArray_API[195])
#define PyArray_IntTupleFromIntp \
        (*(PyObject * (*)(int, npy_intp *)) \
         PyArray_API[196])
#define PyArray_TypeNumFromName \
        (*(int (*)(char *)) \
         PyArray_API[197])
#define PyArray_ClipmodeConverter \
        (*(int (*)(PyObject *, NPY_CLIPMODE *)) \
         PyArray_API[198])
#define PyArray_OutputConverter \
        (*(int (*)(PyObject *, PyArrayObject **)) \
         PyArray_API[199])
#define PyArray_BroadcastToShape \
        (*(PyObject * (*)(PyObject *, npy_intp *, int)) \
         PyArray_API[200])
#define _PyArray_SigintHandler \
        (*(void (*)(int)) \
         PyArray_API[201])
#define _PyArray_GetSigintBuf \
        (*(void* (*)(void)) \
         PyArray_API[202])
#define PyArray_DescrAlignConverter \
        (*(int (*)(PyObject *, PyArray_Descr **)) \
         PyArray_API[203])
#define PyArray_DescrAlignConverter2 \
        (*(int (*)(PyObject *, PyArray_Descr **)) \
         PyArray_API[204])
#define PyArray_SearchsideConverter \
        (*(int (*)(PyObject *, void *)) \
         PyArray_API[205])
#define PyArray_CheckAxis \
        (*(PyObject * (*)(PyArrayObject *, int *, int)) \
         PyArray_API[206])
#define PyArray_OverflowMultiplyList \
        (*(npy_intp (*)(npy_intp *, int)) \
         PyArray_API[207])
#define PyArray_CompareString \
        (*(int (*)(char *, char *, size_t)) \
         PyArray_API[208])
#define PyArray_MultiIterFromObjects \
        (*(PyObject * (*)(PyObject **, int, int, ...)) \
         PyArray_API[209])
#define PyArray_GetEndianness \
        (*(int (*)(void)) \
         PyArray_API[210])
#define PyArray_GetNDArrayCFeatureVersion \
        (*(unsigned int (*)(void)) \
         PyArray_API[211])
#define PyArray_Correlate2 \
        (*(PyObject * (*)(PyObject *, PyObject *, int)) \
         PyArray_API[212])
#define PyArray_NeighborhoodIterNew \
        (*(PyObject* (*)(PyArrayIterObject *, npy_intp *, int, PyArrayObject*)) \
         PyArray_API[213])
#define PyTimeIntegerArrType_Type (*(PyTypeObject *)PyArray_API[214])
#define PyDatetimeArrType_Type (*(PyTypeObject *)PyArray_API[215])
#define PyTimedeltaArrType_Type (*(PyTypeObject *)PyArray_API[216])
#define PyHalfArrType_Type (*(PyTypeObject *)PyArray_API[217])
#define NpyIter_Type (*(PyTypeObject *)PyArray_API[218])
#define PyArray_SetDatetimeParseFunction \
        (*(void (*)(PyObject *)) \
         PyArray_API[219])
#define PyArray_DatetimeToDatetimeStruct \
        (*(void (*)(npy_datetime, NPY_DATETIMEUNIT, npy_datetimestruct *)) \
         PyArray_API[220])
#define PyArray_TimedeltaToTimedeltaStruct \
        (*(void (*)(npy_timedelta, NPY_DATETIMEUNIT, npy_timedeltastruct *)) \
         PyArray_API[221])
#define PyArray_DatetimeStructToDatetime \
        (*(npy_datetime (*)(NPY_DATETIMEUNIT, npy_datetimestruct *)) \
         PyArray_API[222])
#define PyArray_TimedeltaStructToTimedelta \
        (*(npy_datetime (*)(NPY_DATETIMEUNIT, npy_timedeltastruct *)) \
         PyArray_API[223])
#define NpyIter_New \
        (*(NpyIter * (*)(PyArrayObject *, npy_uint32, NPY_ORDER, NPY_CASTING, PyArray_Descr*)) \
         PyArray_API[224])
#define NpyIter_MultiNew \
        (*(NpyIter * (*)(int, PyArrayObject **, npy_uint32, NPY_ORDER, NPY_CASTING, npy_uint32 *, PyArray_Descr **)) \
         PyArray_API[225])
#define NpyIter_AdvancedNew \
        (*(NpyIter * (*)(int, PyArrayObject **, npy_uint32, NPY_ORDER, NPY_CASTING, npy_uint32 *, PyArray_Descr **, int, int **, npy_intp *, npy_intp)) \
         PyArray_API[226])
#define NpyIter_Copy \
        (*(NpyIter * (*)(NpyIter *)) \
         PyArray_API[227])
#define NpyIter_Deallocate \
        (*(int (*)(NpyIter *)) \
         PyArray_API[228])
#define NpyIter_HasDelayedBufAlloc \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[229])
#define NpyIter_HasExternalLoop \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[230])
#define NpyIter_EnableExternalLoop \
        (*(int (*)(NpyIter *)) \
         PyArray_API[231])
#define NpyIter_GetInnerStrideArray \
        (*(npy_intp * (*)(NpyIter *)) \
         PyArray_API[232])
#define NpyIter_GetInnerLoopSizePtr \
        (*(npy_intp * (*)(NpyIter *)) \
         PyArray_API[233])
#define NpyIter_Reset \
        (*(int (*)(NpyIter *, char **)) \
         PyArray_API[234])
#define NpyIter_ResetBasePointers \
        (*(int (*)(NpyIter *, char **, char **)) \
         PyArray_API[235])
#define NpyIter_ResetToIterIndexRange \
        (*(int (*)(NpyIter *, npy_intp, npy_intp, char **)) \
         PyArray_API[236])
#define NpyIter_GetNDim \
        (*(int (*)(NpyIter *)) \
         PyArray_API[237])
#define NpyIter_GetNOp \
        (*(int (*)(NpyIter *)) \
         PyArray_API[238])
#define NpyIter_GetIterNext \
        (*(NpyIter_IterNextFunc * (*)(NpyIter *, char **)) \
         PyArray_API[239])
#define NpyIter_GetIterSize \
        (*(npy_intp (*)(NpyIter *)) \
         PyArray_API[240])
#define NpyIter_GetIterIndexRange \
        (*(void (*)(NpyIter *, npy_intp *, npy_intp *)) \
         PyArray_API[241])
#define NpyIter_GetIterIndex \
        (*(npy_intp (*)(NpyIter *)) \
         PyArray_API[242])
#define NpyIter_GotoIterIndex \
        (*(int (*)(NpyIter *, npy_intp)) \
         PyArray_API[243])
#define NpyIter_HasMultiIndex \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[244])
#define NpyIter_GetShape \
        (*(int (*)(NpyIter *, npy_intp *)) \
         PyArray_API[245])
#define NpyIter_GetGetMultiIndex \
        (*(NpyIter_GetMultiIndexFunc * (*)(NpyIter *, char **)) \
         PyArray_API[246])
#define NpyIter_GotoMultiIndex \
        (*(int (*)(NpyIter *, npy_intp *)) \
         PyArray_API[247])
#define NpyIter_RemoveMultiIndex \
        (*(int (*)(NpyIter *)) \
         PyArray_API[248])
#define NpyIter_HasIndex \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[249])
#define NpyIter_IsBuffered \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[250])
#define NpyIter_IsGrowInner \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[251])
#define NpyIter_GetBufferSize \
        (*(npy_intp (*)(NpyIter *)) \
         PyArray_API[252])
#define NpyIter_GetIndexPtr \
        (*(npy_intp * (*)(NpyIter *)) \
         PyArray_API[253])
#define NpyIter_GotoIndex \
        (*(int (*)(NpyIter *, npy_intp)) \
         PyArray_API[254])
#define NpyIter_GetDataPtrArray \
        (*(char ** (*)(NpyIter *)) \
         PyArray_API[255])
#define NpyIter_GetDescrArray \
        (*(PyArray_Descr ** (*)(NpyIter *)) \
         PyArray_API[256])
#define NpyIter_GetOperandArray \
        (*(PyArrayObject ** (*)(NpyIter *)) \
         PyArray_API[257])
#define NpyIter_GetIterView \
        (*(PyArrayObject * (*)(NpyIter *, npy_intp)) \
         PyArray_API[258])
#define NpyIter_GetReadFlags \
        (*(void (*)(NpyIter *, char *)) \
         PyArray_API[259])
#define NpyIter_GetWriteFlags \
        (*(void (*)(NpyIter *, char *)) \
         PyArray_API[260])
#define NpyIter_DebugPrint \
        (*(void (*)(NpyIter *)) \
         PyArray_API[261])
#define NpyIter_IterationNeedsAPI \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[262])
#define NpyIter_GetInnerFixedStrideArray \
        (*(void (*)(NpyIter *, npy_intp *)) \
         PyArray_API[263])
#define NpyIter_RemoveAxis \
        (*(int (*)(NpyIter *, int)) \
         PyArray_API[264])
#define NpyIter_GetAxisStrideArray \
        (*(npy_intp * (*)(NpyIter *, int)) \
         PyArray_API[265])
#define NpyIter_RequiresBuffering \
        (*(npy_bool (*)(NpyIter *)) \
         PyArray_API[266])
#define NpyIter_GetInitialDataPtrArray \
        (*(char ** (*)(NpyIter *)) \
         PyArray_API[267])
#define NpyIter_CreateCompatibleStrides \
        (*(int (*)(NpyIter *, npy_intp, npy_intp *)) \
         PyArray_API[268])
#define PyArray_CastingConverter \
        (*(int (*)(PyObject *, NPY_CASTING *)) \
         PyArray_API[269])
#define PyArray_CountNonzero \
        (*(npy_intp (*)(PyArrayObject *)) \
         PyArray_API[270])
#define PyArray_PromoteTypes \
        (*(PyArray_Descr * (*)(PyArray_Descr *, PyArray_Descr *)) \
         PyArray_API[271])
#define PyArray_MinScalarType \
        (*(PyArray_Descr * (*)(PyArrayObject *)) \
         PyArray_API[272])
#define PyArray_ResultType \
        (*(PyArray_Descr * (*)(npy_intp, PyArrayObject **, npy_intp, PyArray_Descr **)) \
         PyArray_API[273])
#define PyArray_CanCastArrayTo \
        (*(npy_bool (*)(PyArrayObject *, PyArray_Descr *, NPY_CASTING)) \
         PyArray_API[274])
#define PyArray_CanCastTypeTo \
        (*(npy_bool (*)(PyArray_Descr *, PyArray_Descr *, NPY_CASTING)) \
         PyArray_API[275])
#define PyArray_EinsteinSum \
        (*(PyArrayObject * (*)(char *, npy_intp, PyArrayObject **, PyArray_Descr *, NPY_ORDER, NPY_CASTING, PyArrayObject *)) \
         PyArray_API[276])
#define PyArray_NewLikeArray \
        (*(PyObject * (*)(PyArrayObject *, NPY_ORDER, PyArray_Descr *, int)) \
         PyArray_API[277])
#define PyArray_GetArrayParamsFromObject \
        (*(int (*)(PyObject *, PyArray_Descr *, npy_bool, PyArray_Descr **, int *, npy_intp *, PyArrayObject **, PyObject *)) \
         PyArray_API[278])
#define PyArray_ConvertClipmodeSequence \
        (*(int (*)(PyObject *, NPY_CLIPMODE *, int)) \
         PyArray_API[279])
#define PyArray_MatrixProduct2 \
        (*(PyObject * (*)(PyObject *, PyObject *, PyArrayObject*)) \
         PyArray_API[280])

#if !defined(NO_IMPORT_ARRAY) && !defined(NO_IMPORT)
static int
_import_array(void)
{
  int st;
  PyObject *numpy = PyImport_ImportModule("numpy.core.multiarray");
  PyObject *c_api = NULL;

  if (numpy == NULL) {
      PyErr_SetString(PyExc_ImportError, "numpy.core.multiarray failed to import");
      return -1;
  }
  c_api = PyObject_GetAttrString(numpy, "_ARRAY_API");
  Py_DECREF(numpy);
  if (c_api == NULL) {
      PyErr_SetString(PyExc_AttributeError, "_ARRAY_API not found");
      return -1;
  }

#if PY_VERSION_HEX >= 0x03000000
  if (!PyCapsule_CheckExact(c_api)) {
      PyErr_SetString(PyExc_RuntimeError, "_ARRAY_API is not PyCapsule object");
      Py_DECREF(c_api);
      return -1;
  }
  PyArray_API = (void **)PyCapsule_GetPointer(c_api, NULL);
#else
  if (!PyCObject_Check(c_api)) {
      PyErr_SetString(PyExc_RuntimeError, "_ARRAY_API is not PyCObject object");
      Py_DECREF(c_api);
      return -1;
  }
  PyArray_API = (void **)PyCObject_AsVoidPtr(c_api);
#endif
  Py_DECREF(c_api);
  if (PyArray_API == NULL) {
      PyErr_SetString(PyExc_RuntimeError, "_ARRAY_API is NULL pointer");
      return -1;
  }

  /* Perform runtime check of C API version */
  if (NPY_VERSION != PyArray_GetNDArrayCVersion()) {
      PyErr_Format(PyExc_RuntimeError, "module compiled against "\
             "ABI version %x but this version of numpy is %x", \
             (int) NPY_VERSION, (int) PyArray_GetNDArrayCVersion());
      return -1;
  }
  if (NPY_FEATURE_VERSION > PyArray_GetNDArrayCFeatureVersion()) {
      PyErr_Format(PyExc_RuntimeError, "module compiled against "\
             "API version %x but this version of numpy is %x", \
             (int) NPY_FEATURE_VERSION, (int) PyArray_GetNDArrayCFeatureVersion());
      return -1;
  }

  /*
   * Perform runtime check of endianness and check it matches the one set by
   * the headers (npy_endian.h) as a safeguard
   */
  st = PyArray_GetEndianness();
  if (st == NPY_CPU_UNKNOWN_ENDIAN) {
      PyErr_Format(PyExc_RuntimeError, "FATAL: module compiled as unknown endian");
      return -1;
  }
#if NPY_BYTE_ORDER == NPY_BIG_ENDIAN
  if (st != NPY_CPU_BIG) {
      PyErr_Format(PyExc_RuntimeError, "FATAL: module compiled as "\
             "big endian, but detected different endianness at runtime");
      return -1;
  }
#elif NPY_BYTE_ORDER == NPY_LITTLE_ENDIAN
  if (st != NPY_CPU_LITTLE) {
      PyErr_Format(PyExc_RuntimeError, "FATAL: module compiled as "\
             "little endian, but detected different endianness at runtime");
      return -1;
  }
#endif

  return 0;
}

#if PY_VERSION_HEX >= 0x03000000
#define NUMPY_IMPORT_ARRAY_RETVAL NULL
#else
#define NUMPY_IMPORT_ARRAY_RETVAL
#endif

#define import_array() {if (_import_array() < 0) {PyErr_Print(); PyErr_SetString(PyExc_ImportError, "numpy.core.multiarray failed to import"); return NUMPY_IMPORT_ARRAY_RETVAL; } }

#define import_array1(ret) {if (_import_array() < 0) {PyErr_Print(); PyErr_SetString(PyExc_ImportError, "numpy.core.multiarray failed to import"); return ret; } }

#define import_array2(msg, ret) {if (_import_array() < 0) {PyErr_Print(); PyErr_SetString(PyExc_ImportError, msg); return ret; } }

#endif

#endif
                                                                                                                                                                                                                                                                                                                                                                                                               __ufunc_api.h                                                                                       0100644 0001750 0001750 00000024310 12566241444 042527  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 
#ifdef _UMATHMODULE

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
extern NPY_NO_EXPORT PyTypeObject PyUFunc_Type;
#else
NPY_NO_EXPORT PyTypeObject PyUFunc_Type;
#endif

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
    extern NPY_NO_EXPORT PyTypeObject PyUFunc_Type;
#else
    NPY_NO_EXPORT PyTypeObject PyUFunc_Type;
#endif

NPY_NO_EXPORT PyObject * PyUFunc_FromFuncAndData \
       (PyUFuncGenericFunction *, void **, char *, int, int, int, int, char *, char *, int);
NPY_NO_EXPORT int PyUFunc_RegisterLoopForType \
       (PyUFuncObject *, int, PyUFuncGenericFunction, int *, void *);
NPY_NO_EXPORT int PyUFunc_GenericFunction \
       (PyUFuncObject *, PyObject *, PyObject *, PyArrayObject **);
NPY_NO_EXPORT void PyUFunc_f_f_As_d_d \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_d_d \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_f_f \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_g_g \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_F_F_As_D_D \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_F_F \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_D_D \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_G_G \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_O_O \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_ff_f_As_dd_d \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_ff_f \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_dd_d \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_gg_g \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_FF_F_As_DD_D \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_DD_D \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_FF_F \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_GG_G \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_OO_O \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_O_O_method \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_OO_O_method \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_On_Om \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT int PyUFunc_GetPyValues \
       (char *, int *, int *, PyObject **);
NPY_NO_EXPORT int PyUFunc_checkfperr \
       (int, PyObject *, int *);
NPY_NO_EXPORT void PyUFunc_clearfperr \
       (void);
NPY_NO_EXPORT int PyUFunc_getfperr \
       (void);
NPY_NO_EXPORT int PyUFunc_handlefperr \
       (int, PyObject *, int, int *);
NPY_NO_EXPORT int PyUFunc_ReplaceLoopBySignature \
       (PyUFuncObject *, PyUFuncGenericFunction, int *, PyUFuncGenericFunction *);
NPY_NO_EXPORT PyObject * PyUFunc_FromFuncAndDataAndSignature \
       (PyUFuncGenericFunction *, void **, char *, int, int, int, int, char *, char *, int, const char *);
NPY_NO_EXPORT int PyUFunc_SetUsesArraysAsData \
       (void **, size_t);
NPY_NO_EXPORT void PyUFunc_e_e \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_e_e_As_f_f \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_e_e_As_d_d \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_ee_e \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_ee_e_As_ff_f \
       (char **, intp *, intp *, void *);
NPY_NO_EXPORT void PyUFunc_ee_e_As_dd_d \
       (char **, intp *, intp *, void *);

#else

#if defined(PY_UFUNC_UNIQUE_SYMBOL)
#define PyUFunc_API PY_UFUNC_UNIQUE_SYMBOL
#endif

#if defined(NO_IMPORT) || defined(NO_IMPORT_UFUNC)
extern void **PyUFunc_API;
#else
#if defined(PY_UFUNC_UNIQUE_SYMBOL)
void **PyUFunc_API;
#else
static void **PyUFunc_API=NULL;
#endif
#endif

#define PyUFunc_Type (*(PyTypeObject *)PyUFunc_API[0])
#define PyUFunc_FromFuncAndData \
        (*(PyObject * (*)(PyUFuncGenericFunction *, void **, char *, int, int, int, int, char *, char *, int)) \
         PyUFunc_API[1])
#define PyUFunc_RegisterLoopForType \
        (*(int (*)(PyUFuncObject *, int, PyUFuncGenericFunction, int *, void *)) \
         PyUFunc_API[2])
#define PyUFunc_GenericFunction \
        (*(int (*)(PyUFuncObject *, PyObject *, PyObject *, PyArrayObject **)) \
         PyUFunc_API[3])
#define PyUFunc_f_f_As_d_d \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[4])
#define PyUFunc_d_d \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[5])
#define PyUFunc_f_f \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[6])
#define PyUFunc_g_g \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[7])
#define PyUFunc_F_F_As_D_D \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[8])
#define PyUFunc_F_F \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[9])
#define PyUFunc_D_D \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[10])
#define PyUFunc_G_G \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[11])
#define PyUFunc_O_O \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[12])
#define PyUFunc_ff_f_As_dd_d \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[13])
#define PyUFunc_ff_f \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[14])
#define PyUFunc_dd_d \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[15])
#define PyUFunc_gg_g \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[16])
#define PyUFunc_FF_F_As_DD_D \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[17])
#define PyUFunc_DD_D \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[18])
#define PyUFunc_FF_F \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[19])
#define PyUFunc_GG_G \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[20])
#define PyUFunc_OO_O \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[21])
#define PyUFunc_O_O_method \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[22])
#define PyUFunc_OO_O_method \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[23])
#define PyUFunc_On_Om \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[24])
#define PyUFunc_GetPyValues \
        (*(int (*)(char *, int *, int *, PyObject **)) \
         PyUFunc_API[25])
#define PyUFunc_checkfperr \
        (*(int (*)(int, PyObject *, int *)) \
         PyUFunc_API[26])
#define PyUFunc_clearfperr \
        (*(void (*)(void)) \
         PyUFunc_API[27])
#define PyUFunc_getfperr \
        (*(int (*)(void)) \
         PyUFunc_API[28])
#define PyUFunc_handlefperr \
        (*(int (*)(int, PyObject *, int, int *)) \
         PyUFunc_API[29])
#define PyUFunc_ReplaceLoopBySignature \
        (*(int (*)(PyUFuncObject *, PyUFuncGenericFunction, int *, PyUFuncGenericFunction *)) \
         PyUFunc_API[30])
#define PyUFunc_FromFuncAndDataAndSignature \
        (*(PyObject * (*)(PyUFuncGenericFunction *, void **, char *, int, int, int, int, char *, char *, int, const char *)) \
         PyUFunc_API[31])
#define PyUFunc_SetUsesArraysAsData \
        (*(int (*)(void **, size_t)) \
         PyUFunc_API[32])
#define PyUFunc_e_e \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[33])
#define PyUFunc_e_e_As_f_f \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[34])
#define PyUFunc_e_e_As_d_d \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[35])
#define PyUFunc_ee_e \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[36])
#define PyUFunc_ee_e_As_ff_f \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[37])
#define PyUFunc_ee_e_As_dd_d \
        (*(void (*)(char **, intp *, intp *, void *)) \
         PyUFunc_API[38])

static int
_import_umath(void)
{
  PyObject *numpy = PyImport_ImportModule("numpy.core.umath");
  PyObject *c_api = NULL;

  if (numpy == NULL) {
      PyErr_SetString(PyExc_ImportError, "numpy.core.umath failed to import");
      return -1;
  }
  c_api = PyObject_GetAttrString(numpy, "_UFUNC_API");
  Py_DECREF(numpy);
  if (c_api == NULL) {
      PyErr_SetString(PyExc_AttributeError, "_UFUNC_API not found");
      return -1;
  }

#if PY_VERSION_HEX >= 0x03000000
  if (!PyCapsule_CheckExact(c_api)) {
      PyErr_SetString(PyExc_RuntimeError, "_UFUNC_API is not PyCapsule object");
      Py_DECREF(c_api);
      return -1;
  }
  PyUFunc_API = (void **)PyCapsule_GetPointer(c_api, NULL);
#else
  if (!PyCObject_Check(c_api)) {
      PyErr_SetString(PyExc_RuntimeError, "_UFUNC_API is not PyCObject object");
      Py_DECREF(c_api);
      return -1;
  }
  PyUFunc_API = (void **)PyCObject_AsVoidPtr(c_api);
#endif
  Py_DECREF(c_api);
  if (PyUFunc_API == NULL) {
      PyErr_SetString(PyExc_RuntimeError, "_UFUNC_API is NULL pointer");
      return -1;
  }
  return 0;
}

#if PY_VERSION_HEX >= 0x03000000
#define NUMPY_IMPORT_UMATH_RETVAL NULL
#else
#define NUMPY_IMPORT_UMATH_RETVAL
#endif

#define import_umath() \
    do {\
        UFUNC_NOFPE\
        if (_import_umath() < 0) {\
            PyErr_Print();\
            PyErr_SetString(PyExc_ImportError,\
                    "numpy.core.umath failed to import");\
            return NUMPY_IMPORT_UMATH_RETVAL;\
        }\
    } while(0)

#define import_umath1(ret) \
    do {\
        UFUNC_NOFPE\
        if (_import_umath() < 0) {\
            PyErr_Print();\
            PyErr_SetString(PyExc_ImportError,\
                    "numpy.core.umath failed to import");\
            return ret;\
        }\
    } while(0)

#define import_umath2(ret, msg) \
    do {\
        UFUNC_NOFPE\
        if (_import_umath() < 0) {\
            PyErr_Print();\
            PyErr_SetString(PyExc_ImportError, msg);\
            return ret;\
        }\
    } while(0)

#define import_ufunc() \
    do {\
        UFUNC_NOFPE\
        if (_import_umath() < 0) {\
            PyErr_Print();\
            PyErr_SetString(PyExc_ImportError,\
                    "numpy.core.umath failed to import");\
        }\
    } while(0)

#endif
                                                                                                                                                                                                                                                                                                                        _neighborhood_iterator_imp.h                                                                        0100644 0001750 0001750 00000003505 11750317130 045635  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef _NPY_INCLUDE_NEIGHBORHOOD_IMP
#error You should not include this header directly
#endif
/*
 * Private API (here for inline)
 */
static NPY_INLINE int
_PyArrayNeighborhoodIter_IncrCoord(PyArrayNeighborhoodIterObject* iter);

/*
 * Update to next item of the iterator
 *
 * Note: this simply increment the coordinates vector, last dimension
 * incremented first , i.e, for dimension 3
 * ...
 * -1, -1, -1
 * -1, -1,  0
 * -1, -1,  1
 *  ....
 * -1,  0, -1
 * -1,  0,  0
 *  ....
 * 0,  -1, -1
 * 0,  -1,  0
 *  ....
 */
#define _UPDATE_COORD_ITER(c) \
    wb = iter->coordinates[c] < iter->bounds[c][1]; \
    if (wb) { \
        iter->coordinates[c] += 1; \
        return 0; \
    } \
    else { \
        iter->coordinates[c] = iter->bounds[c][0]; \
    }

static NPY_INLINE int
_PyArrayNeighborhoodIter_IncrCoord(PyArrayNeighborhoodIterObject* iter)
{
    npy_intp i, wb;

    for (i = iter->nd - 1; i >= 0; --i) {
        _UPDATE_COORD_ITER(i)
    }

    return 0;
}

/*
 * Version optimized for 2d arrays, manual loop unrolling
 */
static NPY_INLINE int
_PyArrayNeighborhoodIter_IncrCoord2D(PyArrayNeighborhoodIterObject* iter)
{
    npy_intp wb;

    _UPDATE_COORD_ITER(1)
    _UPDATE_COORD_ITER(0)

    return 0;
}
#undef _UPDATE_COORD_ITER

/*
 * Advance to the next neighbour
 */
static NPY_INLINE int
PyArrayNeighborhoodIter_Next(PyArrayNeighborhoodIterObject* iter)
{
    _PyArrayNeighborhoodIter_IncrCoord (iter);
    iter->dataptr = iter->translate((PyArrayIterObject*)iter, iter->coordinates);

    return 0;
}

/*
 * Reset functions
 */
static NPY_INLINE int
PyArrayNeighborhoodIter_Reset(PyArrayNeighborhoodIterObject* iter)
{
    npy_intp i;

    for (i = 0; i < iter->nd; ++i) {
        iter->coordinates[i] = iter->bounds[i][0];
    }
    iter->dataptr = iter->translate((PyArrayIterObject*)iter, iter->coordinates);

    return 0;
}
                                                                                                                                                                                           _numpyconfig.h                                                                                      0100644 0001750 0001750 00000001622 12566241442 042754  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #define NPY_SIZEOF_SHORT SIZEOF_SHORT
#define NPY_SIZEOF_INT SIZEOF_INT
#define NPY_SIZEOF_LONG SIZEOF_LONG
#define NPY_SIZEOF_FLOAT 4
#define NPY_SIZEOF_COMPLEX_FLOAT 8
#define NPY_SIZEOF_DOUBLE 8
#define NPY_SIZEOF_COMPLEX_DOUBLE 16
#define NPY_SIZEOF_LONGDOUBLE 16
#define NPY_SIZEOF_COMPLEX_LONGDOUBLE 32
#define NPY_SIZEOF_PY_INTPTR_T 8
#define NPY_SIZEOF_PY_LONG_LONG 8
#define NPY_SIZEOF_LONGLONG 8
#define NPY_NO_SMP 0
#define NPY_HAVE_DECL_ISNAN
#define NPY_HAVE_DECL_ISINF
#define NPY_HAVE_DECL_ISFINITE
#define NPY_HAVE_DECL_SIGNBIT
#define NPY_USE_C99_COMPLEX
#define NPY_HAVE_COMPLEX_DOUBLE 1
#define NPY_HAVE_COMPLEX_FLOAT 1
#define NPY_HAVE_COMPLEX_LONG_DOUBLE 1
#define NPY_USE_C99_FORMATS 1
#define NPY_VISIBILITY_HIDDEN __attribute__((visibility("hidden")))
#define NPY_ABI_VERSION 0x01000009
#define NPY_API_VERSION 0x00000006

#ifndef __STDC_FORMAT_MACROS
#define __STDC_FORMAT_MACROS 1
#endif
                                                                                                              arrayobject.h                                                                                       0100644 0001750 0001750 00000000774 11755722571 042601  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 
/* This expects the following variables to be defined (besides
   the usual ones from pyconfig.h

   SIZEOF_LONG_DOUBLE -- sizeof(long double) or sizeof(double) if no
                         long double is present on platform.
   CHAR_BIT       --     number of bits in a char (usually 8)
                         (should be in limits.h)

*/

#ifndef Py_ARRAYOBJECT_H
#define Py_ARRAYOBJECT_H
#include "ndarrayobject.h"
#ifdef NPY_NO_PREFIX
#include "noprefix.h"
#endif

#include "npy_interrupt.h"

#endif
    arrayscalars.h                                                                                      0100644 0001750 0001750 00000006665 11750317130 042752  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef _NPY_ARRAYSCALARS_H_
#define _NPY_ARRAYSCALARS_H_

#ifndef _MULTIARRAYMODULE
typedef struct {
        PyObject_HEAD
        npy_bool obval;
} PyBoolScalarObject;
#endif


typedef struct {
        PyObject_HEAD
        signed char obval;
} PyByteScalarObject;


typedef struct {
        PyObject_HEAD
        short obval;
} PyShortScalarObject;


typedef struct {
        PyObject_HEAD
        int obval;
} PyIntScalarObject;


typedef struct {
        PyObject_HEAD
        long obval;
} PyLongScalarObject;


typedef struct {
        PyObject_HEAD
        npy_longlong obval;
} PyLongLongScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned char obval;
} PyUByteScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned short obval;
} PyUShortScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned int obval;
} PyUIntScalarObject;


typedef struct {
        PyObject_HEAD
        unsigned long obval;
} PyULongScalarObject;


typedef struct {
        PyObject_HEAD
        npy_ulonglong obval;
} PyULongLongScalarObject;


typedef struct {
        PyObject_HEAD
        npy_half obval;
} PyHalfScalarObject;


typedef struct {
        PyObject_HEAD
        float obval;
} PyFloatScalarObject;


typedef struct {
        PyObject_HEAD
        double obval;
} PyDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        npy_longdouble obval;
} PyLongDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        npy_cfloat obval;
} PyCFloatScalarObject;


typedef struct {
        PyObject_HEAD
        npy_cdouble obval;
} PyCDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        npy_clongdouble obval;
} PyCLongDoubleScalarObject;


typedef struct {
        PyObject_HEAD
        PyObject * obval;
} PyObjectScalarObject;

typedef struct {
        PyObject_HEAD
        npy_datetime obval;
        PyArray_DatetimeMetaData obmeta;
} PyDatetimeScalarObject;

typedef struct {
        PyObject_HEAD
        npy_timedelta obval;
        PyArray_DatetimeMetaData obmeta;
} PyTimedeltaScalarObject;


typedef struct {
        PyObject_HEAD
        char obval;
} PyScalarObject;

#define PyStringScalarObject PyStringObject
#define PyUnicodeScalarObject PyUnicodeObject

typedef struct {
        PyObject_VAR_HEAD
        char *obval;
        PyArray_Descr *descr;
        int flags;
        PyObject *base;
} PyVoidScalarObject;

/* Macros
     Py<Cls><bitsize>ScalarObject
     Py<Cls><bitsize>ArrType_Type
   are defined in ndarrayobject.h
*/

#define PyArrayScalar_False ((PyObject *)(&(_PyArrayScalar_BoolValues[0])))
#define PyArrayScalar_True ((PyObject *)(&(_PyArrayScalar_BoolValues[1])))
#define PyArrayScalar_FromLong(i) \
        ((PyObject *)(&(_PyArrayScalar_BoolValues[((i)!=0)])))
#define PyArrayScalar_RETURN_BOOL_FROM_LONG(i)                  \
        return Py_INCREF(PyArrayScalar_FromLong(i)), \
                PyArrayScalar_FromLong(i)
#define PyArrayScalar_RETURN_FALSE              \
        return Py_INCREF(PyArrayScalar_False),  \
                PyArrayScalar_False
#define PyArrayScalar_RETURN_TRUE               \
        return Py_INCREF(PyArrayScalar_True),   \
                PyArrayScalar_True

#define PyArrayScalar_New(cls) \
        Py##cls##ArrType_Type.tp_alloc(&Py##cls##ArrType_Type, 0)
#define PyArrayScalar_VAL(obj, cls)             \
        ((Py##cls##ScalarObject *)obj)->obval
#define PyArrayScalar_ASSIGN(obj, cls, val) \
        PyArrayScalar_VAL(obj, cls) = val

#endif
                                                                           halffloat.h                                                                                         0100644 0001750 0001750 00000003416 11755722571 042230  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef __NPY_HALFFLOAT_H__
#define __NPY_HALFFLOAT_H__

#include <Python.h>
#include <numpy/ndarraytypes.h>
#include <numpy/npy_math.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Half-precision routines
 */

/* Conversions */
float npy_half_to_float(npy_half h);
double npy_half_to_double(npy_half h);
npy_half npy_float_to_half(float f);
npy_half npy_double_to_half(double d);
/* Comparisons */
int npy_half_eq(npy_half h1, npy_half h2);
int npy_half_ne(npy_half h1, npy_half h2);
int npy_half_le(npy_half h1, npy_half h2);
int npy_half_lt(npy_half h1, npy_half h2);
int npy_half_ge(npy_half h1, npy_half h2);
int npy_half_gt(npy_half h1, npy_half h2);
/* faster *_nonan variants for when you know h1 and h2 are not NaN */
int npy_half_eq_nonan(npy_half h1, npy_half h2);
int npy_half_lt_nonan(npy_half h1, npy_half h2);
int npy_half_le_nonan(npy_half h1, npy_half h2);
/* Miscellaneous functions */
int npy_half_iszero(npy_half h);
int npy_half_isnan(npy_half h);
int npy_half_isinf(npy_half h);
int npy_half_isfinite(npy_half h);
int npy_half_signbit(npy_half h);
npy_half npy_half_copysign(npy_half x, npy_half y);
npy_half npy_half_spacing(npy_half h);
npy_half npy_half_nextafter(npy_half x, npy_half y);

/*
 * Half-precision constants
 */

#define NPY_HALF_ZERO   (0x0000u)
#define NPY_HALF_PZERO  (0x0000u)
#define NPY_HALF_NZERO  (0x8000u)
#define NPY_HALF_ONE    (0x3c00u)
#define NPY_HALF_NEGONE (0xbc00u)
#define NPY_HALF_PINF   (0x7c00u)
#define NPY_HALF_NINF   (0xfc00u)
#define NPY_HALF_NAN    (0x7e00u)

/*
 * Bit-level conversions
 */

npy_uint16 npy_floatbits_to_halfbits(npy_uint32 f);
npy_uint16 npy_doublebits_to_halfbits(npy_uint64 d);
npy_uint32 npy_halfbits_to_floatbits(npy_uint16 h);
npy_uint64 npy_halfbits_to_doublebits(npy_uint16 h);

#ifdef __cplusplus
}
#endif

#endif
                                                                                                                                                                                                                                                  ndarrayobject.h                                                                                     0100644 0001750 0001750 00000024310 11755722571 043113  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 /*
 * DON'T INCLUDE THIS DIRECTLY.
 */

#ifndef NPY_NDARRAYOBJECT_H
#define NPY_NDARRAYOBJECT_H
#ifdef __cplusplus
#define CONFUSE_EMACS {
#define CONFUSE_EMACS2 }
extern "C" CONFUSE_EMACS
#undef CONFUSE_EMACS
#undef CONFUSE_EMACS2
/* ... otherwise a semi-smart identer (like emacs) tries to indent
       everything when you're typing */
#endif

#include "ndarraytypes.h"

/* Includes the "function" C-API -- these are all stored in a
   list of pointers --- one for each file
   The two lists are concatenated into one in multiarray.

   They are available as import_array()
*/

#include "__multiarray_api.h"


/* C-API that requries previous API to be defined */

#define PyArray_DescrCheck(op) (((PyObject*)(op))->ob_type==&PyArrayDescr_Type)

#define PyArray_Check(op) PyObject_TypeCheck(op, &PyArray_Type)
#define PyArray_CheckExact(op) (((PyObject*)(op))->ob_type == &PyArray_Type)

#define PyArray_HasArrayInterfaceType(op, type, context, out)                 \
        ((((out)=PyArray_FromStructInterface(op)) != Py_NotImplemented) ||    \
         (((out)=PyArray_FromInterface(op)) != Py_NotImplemented) ||          \
         (((out)=PyArray_FromArrayAttr(op, type, context)) !=                 \
          Py_NotImplemented))

#define PyArray_HasArrayInterface(op, out)                                    \
        PyArray_HasArrayInterfaceType(op, NULL, NULL, out)

#define PyArray_IsZeroDim(op) (PyArray_Check(op) && (PyArray_NDIM(op) == 0))

#define PyArray_IsScalar(obj, cls)                                            \
        (PyObject_TypeCheck(obj, &Py##cls##ArrType_Type))

#define PyArray_CheckScalar(m) (PyArray_IsScalar(m, Generic) ||               \
                                PyArray_IsZeroDim(m))

#define PyArray_IsPythonNumber(obj)                                           \
        (PyInt_Check(obj) || PyFloat_Check(obj) || PyComplex_Check(obj) ||    \
         PyLong_Check(obj) || PyBool_Check(obj))

#define PyArray_IsPythonScalar(obj)                                           \
        (PyArray_IsPythonNumber(obj) || PyString_Check(obj) ||                \
         PyUnicode_Check(obj))

#define PyArray_IsAnyScalar(obj)                                              \
        (PyArray_IsScalar(obj, Generic) || PyArray_IsPythonScalar(obj))

#define PyArray_CheckAnyScalar(obj) (PyArray_IsPythonScalar(obj) ||           \
                                     PyArray_CheckScalar(obj))

#define PyArray_IsIntegerScalar(obj) (PyInt_Check(obj)                        \
              || PyLong_Check(obj)                                            \
              || PyArray_IsScalar((obj), Integer))


#define PyArray_GETCONTIGUOUS(m) (PyArray_ISCONTIGUOUS(m) ?                   \
                                  Py_INCREF(m), (m) :                         \
                                  (PyArrayObject *)(PyArray_Copy(m)))

#define PyArray_SAMESHAPE(a1,a2) ((PyArray_NDIM(a1) == PyArray_NDIM(a2)) &&   \
                                  PyArray_CompareLists(PyArray_DIMS(a1),      \
                                                       PyArray_DIMS(a2),      \
                                                       PyArray_NDIM(a1)))

#define PyArray_SIZE(m) PyArray_MultiplyList(PyArray_DIMS(m), PyArray_NDIM(m))
#define PyArray_NBYTES(m) (PyArray_ITEMSIZE(m) * PyArray_SIZE(m))
#define PyArray_FROM_O(m) PyArray_FromAny(m, NULL, 0, 0, 0, NULL)

#define PyArray_FROM_OF(m,flags) PyArray_CheckFromAny(m, NULL, 0, 0, flags,   \
                                                      NULL)

#define PyArray_FROM_OT(m,type) PyArray_FromAny(m,                            \
                                PyArray_DescrFromType(type), 0, 0, 0, NULL);

#define PyArray_FROM_OTF(m, type, flags)                                      \
        PyArray_FromAny(m, PyArray_DescrFromType(type), 0, 0,                 \
                        (((flags) & NPY_ENSURECOPY) ?                         \
                         ((flags) | NPY_DEFAULT) : (flags)), NULL)

#define PyArray_FROMANY(m, type, min, max, flags)                             \
        PyArray_FromAny(m, PyArray_DescrFromType(type), min, max,             \
                        (((flags) & NPY_ENSURECOPY) ?                         \
                         (flags) | NPY_DEFAULT : (flags)), NULL)

#define PyArray_ZEROS(m, dims, type, fortran)                                 \
        PyArray_Zeros(m, dims, PyArray_DescrFromType(type), fortran)

#define PyArray_EMPTY(m, dims, type, fortran)                                 \
        PyArray_Empty(m, dims, PyArray_DescrFromType(type), fortran)

#define PyArray_FILLWBYTE(obj, val) memset(PyArray_DATA(obj), val,            \
                                           PyArray_NBYTES(obj))

#define PyArray_REFCOUNT(obj) (((PyObject *)(obj))->ob_refcnt)
#define NPY_REFCOUNT PyArray_REFCOUNT
#define NPY_MAX_ELSIZE (2 * NPY_SIZEOF_LONGDOUBLE)

#define PyArray_ContiguousFromAny(op, type, min_depth, max_depth)             \
        PyArray_FromAny(op, PyArray_DescrFromType(type), min_depth,           \
                              max_depth, NPY_DEFAULT, NULL)

#define PyArray_EquivArrTypes(a1, a2)                                         \
        PyArray_EquivTypes(PyArray_DESCR(a1), PyArray_DESCR(a2))

#define PyArray_EquivByteorders(b1, b2)                                       \
        (((b1) == (b2)) || (PyArray_ISNBO(b1) == PyArray_ISNBO(b2)))

#define PyArray_SimpleNew(nd, dims, typenum)                                  \
        PyArray_New(&PyArray_Type, nd, dims, typenum, NULL, NULL, 0, 0, NULL)

#define PyArray_SimpleNewFromData(nd, dims, typenum, data)                    \
        PyArray_New(&PyArray_Type, nd, dims, typenum, NULL,                   \
                    data, 0, NPY_CARRAY, NULL)

#define PyArray_SimpleNewFromDescr(nd, dims, descr)                           \
        PyArray_NewFromDescr(&PyArray_Type, descr, nd, dims,                  \
                             NULL, NULL, 0, NULL)

#define PyArray_ToScalar(data, arr)                                           \
        PyArray_Scalar(data, PyArray_DESCR(arr), (PyObject *)arr)


/* These might be faster without the dereferencing of obj
   going on inside -- of course an optimizing compiler should
   inline the constants inside a for loop making it a moot point
*/

#define PyArray_GETPTR1(obj, i) ((void *)(PyArray_BYTES(obj) +                \
                                         (i)*PyArray_STRIDES(obj)[0]))

#define PyArray_GETPTR2(obj, i, j) ((void *)(PyArray_BYTES(obj) +             \
                                            (i)*PyArray_STRIDES(obj)[0] +     \
                                            (j)*PyArray_STRIDES(obj)[1]))

#define PyArray_GETPTR3(obj, i, j, k) ((void *)(PyArray_BYTES(obj) +          \
                                            (i)*PyArray_STRIDES(obj)[0] +     \
                                            (j)*PyArray_STRIDES(obj)[1] +     \
                                            (k)*PyArray_STRIDES(obj)[2]))

#define PyArray_GETPTR4(obj, i, j, k, l) ((void *)(PyArray_BYTES(obj) +       \
                                            (i)*PyArray_STRIDES(obj)[0] +     \
                                            (j)*PyArray_STRIDES(obj)[1] +     \
                                            (k)*PyArray_STRIDES(obj)[2] +     \
                                            (l)*PyArray_STRIDES(obj)[3]))

#define PyArray_XDECREF_ERR(obj) \
        if (obj && (PyArray_FLAGS(obj) & NPY_UPDATEIFCOPY)) {                 \
                PyArray_FLAGS(PyArray_BASE(obj)) |= NPY_WRITEABLE;            \
                PyArray_FLAGS(obj) &= ~NPY_UPDATEIFCOPY;                      \
        }                                                                     \
        Py_XDECREF(obj)

#define PyArray_DESCR_REPLACE(descr) do {                                     \
                PyArray_Descr *_new_;                                         \
                _new_ = PyArray_DescrNew(descr);                              \
                Py_XDECREF(descr);                                            \
                descr = _new_;                                                \
        } while(0)

/* Copy should always return contiguous array */
#define PyArray_Copy(obj) PyArray_NewCopy(obj, NPY_CORDER)

#define PyArray_FromObject(op, type, min_depth, max_depth)                    \
        PyArray_FromAny(op, PyArray_DescrFromType(type), min_depth,           \
                              max_depth, NPY_BEHAVED | NPY_ENSUREARRAY, NULL)

#define PyArray_ContiguousFromObject(op, type, min_depth, max_depth)          \
        PyArray_FromAny(op, PyArray_DescrFromType(type), min_depth,           \
                              max_depth, NPY_DEFAULT | NPY_ENSUREARRAY, NULL)

#define PyArray_CopyFromObject(op, type, min_depth, max_depth)                \
        PyArray_FromAny(op, PyArray_DescrFromType(type), min_depth,           \
                        max_depth, NPY_ENSURECOPY | NPY_DEFAULT |             \
                        NPY_ENSUREARRAY, NULL)

#define PyArray_Cast(mp, type_num)                                            \
        PyArray_CastToType(mp, PyArray_DescrFromType(type_num), 0)

#define PyArray_Take(ap, items, axis)                                         \
        PyArray_TakeFrom(ap, items, axis, NULL, NPY_RAISE)

#define PyArray_Put(ap, items, values)                                        \
        PyArray_PutTo(ap, items, values, NPY_RAISE)

/* Compatibility with old Numeric stuff -- don't use in new code */

#define PyArray_FromDimsAndData(nd, d, type, data)                            \
        PyArray_FromDimsAndDataAndDescr(nd, d, PyArray_DescrFromType(type),   \
                                        data)

#include "old_defines.h"

/*
   Check to see if this key in the dictionary is the "title"
   entry of the tuple (i.e. a duplicate dictionary entry in the fields
   dict.
*/

#define NPY_TITLE_KEY(key, value) ((PyTuple_GET_SIZE((value))==3) && \
                                   (PyTuple_GET_ITEM((value), 2) == (key)))


/* Define python version independent deprecation macro */

#if PY_VERSION_HEX >= 0x02050000
#define DEPRECATE(msg) PyErr_WarnEx(PyExc_DeprecationWarning,msg,1)
#else
#define DEPRECATE(msg) PyErr_Warn(PyExc_DeprecationWarning,msg)
#endif


#ifdef __cplusplus
}
#endif


#endif /* NPY_NDARRAYOBJECT_H */
                                                                                                                                                                                                                                                                                                                        ndarraytypes.h                                                                                      0100644 0001750 0001750 00000162074 11755722571 043023  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef NDARRAYTYPES_H
#define NDARRAYTYPES_H

/* This is auto-generated by the installer */
#include "numpyconfig.h"

#include "npy_common.h"
#include "npy_endian.h"
#include "npy_cpu.h"
#include "utils.h"

#ifdef NPY_ENABLE_SEPARATE_COMPILATION
        #define NPY_NO_EXPORT NPY_VISIBILITY_HIDDEN
#else
        #define NPY_NO_EXPORT static
#endif

/* Only use thread if configured in config and python supports it */
#if defined WITH_THREAD && !NPY_NO_SMP
        #define NPY_ALLOW_THREADS 1
#else
        #define NPY_ALLOW_THREADS 0
#endif



/*
 * There are several places in the code where an array of dimensions
 * is allocated statically.  This is the size of that static
 * allocation.
 *
 * The array creation itself could have arbitrary dimensions but all
 * the places where static allocation is used would need to be changed
 * to dynamic (including inside of several structures)
 */

#define NPY_MAXDIMS 32
#define NPY_MAXARGS 32

/* Used for Converter Functions "O&" code in ParseTuple */
#define NPY_FAIL 0
#define NPY_SUCCEED 1

/*
 * Binary compatibility version number.  This number is increased
 * whenever the C-API is changed such that binary compatibility is
 * broken, i.e. whenever a recompile of extension modules is needed.
 */
#define NPY_VERSION NPY_ABI_VERSION

/*
 * Minor API version.  This number is increased whenever a change is
 * made to the C-API -- whether it breaks binary compatibility or not.
 * Some changes, such as adding a function pointer to the end of the
 * function table, can be made without breaking binary compatibility.
 * In this case, only the NPY_FEATURE_VERSION (*not* NPY_VERSION)
 * would be increased.  Whenever binary compatibility is broken, both
 * NPY_VERSION and NPY_FEATURE_VERSION should be increased.
 */
#define NPY_FEATURE_VERSION NPY_API_VERSION

enum NPY_TYPES {    NPY_BOOL=0,
                    NPY_BYTE, NPY_UBYTE,
                    NPY_SHORT, NPY_USHORT,
                    NPY_INT, NPY_UINT,
                    NPY_LONG, NPY_ULONG,
                    NPY_LONGLONG, NPY_ULONGLONG,
                    NPY_FLOAT, NPY_DOUBLE, NPY_LONGDOUBLE,
                    NPY_CFLOAT, NPY_CDOUBLE, NPY_CLONGDOUBLE,
                    NPY_OBJECT=17,
                    NPY_STRING, NPY_UNICODE,
                    NPY_VOID,
                    /*
                     * New 1.6 types appended, may be integrated
                     * into the above in 2.0.
                     */
                    NPY_DATETIME, NPY_TIMEDELTA, NPY_HALF, 

                    NPY_NTYPES,
                    NPY_NOTYPE,
                    NPY_CHAR,      /* special flag */
                    NPY_USERDEF=256,  /* leave room for characters */

                    /* The number of types not including the new 1.6 types */
                    NPY_NTYPES_ABI_COMPATIBLE=21
};

#define NPY_METADATA_DTSTR "__frequency__"

/* basetype array priority */
#define NPY_PRIORITY 0.0

/* default subtype priority */
#define NPY_SUBTYPE_PRIORITY 1.0

/* default scalar priority */
#define NPY_SCALAR_PRIORITY -1000000.0

/* How many floating point types are there (excluding half) */
#define NPY_NUM_FLOATTYPE 3

/*
 * We need to match npy_intp to a signed integer of the same size as a
 * pointer variable. npy_uintp to the equivalent unsigned integer
 */


/*
 * These characters correspond to the array type and the struct
 * module
 */

/*  except 'p' -- signed integer for pointer type */

enum NPY_TYPECHAR { NPY_BOOLLTR = '?',
                        NPY_BYTELTR = 'b',
                        NPY_UBYTELTR = 'B',
                        NPY_SHORTLTR = 'h',
                        NPY_USHORTLTR = 'H',
                        NPY_INTLTR = 'i',
                        NPY_UINTLTR = 'I',
                        NPY_LONGLTR = 'l',
                        NPY_ULONGLTR = 'L',
                        NPY_LONGLONGLTR = 'q',
                        NPY_ULONGLONGLTR = 'Q',
                        NPY_HALFLTR = 'e',
                        NPY_FLOATLTR = 'f',
                        NPY_DOUBLELTR = 'd',
                        NPY_LONGDOUBLELTR = 'g',
                        NPY_CFLOATLTR = 'F',
                        NPY_CDOUBLELTR = 'D',
                        NPY_CLONGDOUBLELTR = 'G',
                        NPY_OBJECTLTR = 'O',
                        NPY_STRINGLTR = 'S',
                        NPY_STRINGLTR2 = 'a',
                        NPY_UNICODELTR = 'U',
                        NPY_VOIDLTR = 'V',
                        NPY_DATETIMELTR = 'M',
                        NPY_TIMEDELTALTR = 'm',
                        NPY_CHARLTR = 'c',

                        /*
                         * No Descriptor, just a define -- this let's
                         * Python users specify an array of integers
                         * large enough to hold a pointer on the
                         * platform
                         */
                        NPY_INTPLTR = 'p',
                        NPY_UINTPLTR = 'P',

                        NPY_GENBOOLLTR ='b',
                        NPY_SIGNEDLTR = 'i',
                        NPY_UNSIGNEDLTR = 'u',
                        NPY_FLOATINGLTR = 'f',
                        NPY_COMPLEXLTR = 'c'
};

typedef enum {
        NPY_QUICKSORT=0,
        NPY_HEAPSORT=1,
        NPY_MERGESORT=2
} NPY_SORTKIND;
#define NPY_NSORTS (NPY_MERGESORT + 1)


typedef enum {
        NPY_SEARCHLEFT=0,
        NPY_SEARCHRIGHT=1
} NPY_SEARCHSIDE;
#define NPY_NSEARCHSIDES (NPY_SEARCHRIGHT + 1)


typedef enum {
        NPY_NOSCALAR=-1,
        NPY_BOOL_SCALAR,
        NPY_INTPOS_SCALAR,
        NPY_INTNEG_SCALAR,
        NPY_FLOAT_SCALAR,
        NPY_COMPLEX_SCALAR,
        NPY_OBJECT_SCALAR
} NPY_SCALARKIND;
#define NPY_NSCALARKINDS (NPY_OBJECT_SCALAR + 1)

/* For specifying array memory layout or iteration order */
typedef enum {
        /* Fortran order if inputs are all Fortran, C otherwise */
        NPY_ANYORDER=-1,
        /* C order */
        NPY_CORDER=0,
        /* Fortran order */
        NPY_FORTRANORDER=1,
        /* An order as close to the inputs as possible */
        NPY_KEEPORDER=2
} NPY_ORDER;

/* For specifying allowed casting in operations which support it */
typedef enum {
        /* Only allow identical types */
        NPY_NO_CASTING=0,
        /* Allow identical and byte swapped types */
        NPY_EQUIV_CASTING=1,
        /* Only allow safe casts */
        NPY_SAFE_CASTING=2,
        /* Allow safe casts or casts within the same kind */
        NPY_SAME_KIND_CASTING=3,
        /* Allow any casts */
        NPY_UNSAFE_CASTING=4
} NPY_CASTING;

typedef enum {
        NPY_CLIP=0,
        NPY_WRAP=1,
        NPY_RAISE=2
} NPY_CLIPMODE;

typedef enum {
        NPY_FR_Y,
        NPY_FR_M,
        NPY_FR_W,
        NPY_FR_B,
        NPY_FR_D,
        NPY_FR_h,
        NPY_FR_m,
        NPY_FR_s,
        NPY_FR_ms,
        NPY_FR_us,
        NPY_FR_ns,
        NPY_FR_ps,
        NPY_FR_fs,
        NPY_FR_as
} NPY_DATETIMEUNIT;

#define NPY_DATETIME_NUMUNITS (NPY_FR_as + 1)
#define NPY_DATETIME_DEFAULTUNIT NPY_FR_us

#define NPY_STR_Y "Y"
#define NPY_STR_M "M"
#define NPY_STR_W "W"
#define NPY_STR_B "B"
#define NPY_STR_D "D"
#define NPY_STR_h "h"
#define NPY_STR_m "m"
#define NPY_STR_s "s"
#define NPY_STR_ms "ms"
#define NPY_STR_us "us"
#define NPY_STR_ns "ns"
#define NPY_STR_ps "ps"
#define NPY_STR_fs "fs"
#define NPY_STR_as "as"


/*
 * This is to typedef npy_intp to the appropriate pointer size for
 * this platform.  Py_intptr_t, Py_uintptr_t are defined in pyport.h.
 */
typedef Py_intptr_t npy_intp;
typedef Py_uintptr_t npy_uintp;
#define NPY_SIZEOF_INTP NPY_SIZEOF_PY_INTPTR_T
#define NPY_SIZEOF_UINTP NPY_SIZEOF_PY_INTPTR_T

#ifdef constchar
#undef constchar
#endif

#if (PY_VERSION_HEX < 0x02050000)
  #ifndef PY_SSIZE_T_MIN
    typedef int Py_ssize_t;
    #define PY_SSIZE_T_MAX INT_MAX
    #define PY_SSIZE_T_MIN INT_MIN
  #endif
#define NPY_SSIZE_T_PYFMT "i"
#undef PyIndex_Check
#define constchar const char
#define PyIndex_Check(op) 0
#else
#define NPY_SSIZE_T_PYFMT "n"
#define constchar char
#endif

/* NPY_INTP_FMT Note:
 *      Unlike the other NPY_*_FMT macros which are used with
 *      PyOS_snprintf, NPY_INTP_FMT is used with PyErr_Format and
 *      PyString_Format. These functions use different formatting
 *      codes which are portably specified according to the Python
 *      documentation. See ticket #1795.
 *
 *      On Windows x64, the LONGLONG formatter should be used, but
 *      in Python 2.6 the %lld formatter is not supported. In this
 *      case we work around the problem by using the %zd formatter.
 */
#if NPY_SIZEOF_PY_INTPTR_T == NPY_SIZEOF_INT
        #define NPY_INTP NPY_INT
        #define NPY_UINTP NPY_UINT
        #define PyIntpArrType_Type PyIntArrType_Type
        #define PyUIntpArrType_Type PyUIntArrType_Type
        #define NPY_MAX_INTP NPY_MAX_INT
        #define NPY_MIN_INTP NPY_MIN_INT
        #define NPY_MAX_UINTP NPY_MAX_UINT
        #define NPY_INTP_FMT "d"
#elif NPY_SIZEOF_PY_INTPTR_T == NPY_SIZEOF_LONG
        #define NPY_INTP NPY_LONG
        #define NPY_UINTP NPY_ULONG
        #define PyIntpArrType_Type PyLongArrType_Type
        #define PyUIntpArrType_Type PyULongArrType_Type
        #define NPY_MAX_INTP NPY_MAX_LONG
        #define NPY_MIN_INTP MIN_LONG
        #define NPY_MAX_UINTP NPY_MAX_ULONG
        #define NPY_INTP_FMT "ld"
#elif defined(PY_LONG_LONG) && (NPY_SIZEOF_PY_INTPTR_T == NPY_SIZEOF_LONGLONG)
        #define NPY_INTP NPY_LONGLONG
        #define NPY_UINTP NPY_ULONGLONG
        #define PyIntpArrType_Type PyLongLongArrType_Type
        #define PyUIntpArrType_Type PyULongLongArrType_Type
        #define NPY_MAX_INTP NPY_MAX_LONGLONG
        #define NPY_MIN_INTP NPY_MIN_LONGLONG
        #define NPY_MAX_UINTP NPY_MAX_ULONGLONG
    #if (PY_VERSION_HEX >= 0x02070000)
        #define NPY_INTP_FMT "lld"
    #else
        #define NPY_INTP_FMT "zd"
    #endif
#endif

/*
 * We can only use C99 formats for npy_int_p if it is the same as
 * intp_t, hence the condition on HAVE_UNITPTR_T
 */
#if (NPY_USE_C99_FORMATS) == 1 \
        && (defined HAVE_UINTPTR_T) \
        && (defined HAVE_INTTYPES_H)
        #include <inttypes.h>
        #undef NPY_INTP_FMT
        #define NPY_INTP_FMT PRIdPTR
#endif

#define NPY_ERR(str) fprintf(stderr, #str); fflush(stderr);
#define NPY_ERR2(str) fprintf(stderr, str); fflush(stderr);

#define NPY_STRINGIFY(x) #x
#define NPY_TOSTRING(x) NPY_STRINGIFY(x)

  /*
   * Macros to define how array, and dimension/strides data is
   * allocated.
   */

  /* Data buffer */
#define PyDataMem_NEW(size) ((char *)malloc(size))
#define PyDataMem_FREE(ptr)  free(ptr)
#define PyDataMem_RENEW(ptr,size) ((char *)realloc(ptr,size))

#define NPY_USE_PYMEM 1

#if NPY_USE_PYMEM == 1
#define PyArray_malloc PyMem_Malloc
#define PyArray_free PyMem_Free
#define PyArray_realloc PyMem_Realloc
#else
#define PyArray_malloc malloc
#define PyArray_free free
#define PyArray_realloc realloc
#endif

/* Dimensions and strides */
#define PyDimMem_NEW(size)                                         \
    ((npy_intp *)PyArray_malloc(size*sizeof(npy_intp)))

#define PyDimMem_FREE(ptr) PyArray_free(ptr)

#define PyDimMem_RENEW(ptr,size)                                   \
        ((npy_intp *)PyArray_realloc(ptr,size*sizeof(npy_intp)))

/* forward declaration */
struct _PyArray_Descr;

/* These must deal with unaligned and swapped data if necessary */
typedef PyObject * (PyArray_GetItemFunc) (void *, void *);
typedef int (PyArray_SetItemFunc)(PyObject *, void *, void *);

typedef void (PyArray_CopySwapNFunc)(void *, npy_intp, void *, npy_intp,
                                     npy_intp, int, void *);

typedef void (PyArray_CopySwapFunc)(void *, void *, int, void *);
typedef npy_bool (PyArray_NonzeroFunc)(void *, void *);


/*
 * These assume aligned and notswapped data -- a buffer will be used
 * before or contiguous data will be obtained
 */

typedef int (PyArray_CompareFunc)(const void *, const void *, void *);
typedef int (PyArray_ArgFunc)(void*, npy_intp, npy_intp*, void *);

typedef void (PyArray_DotFunc)(void *, npy_intp, void *, npy_intp, void *,
                               npy_intp, void *);

typedef void (PyArray_VectorUnaryFunc)(void *, void *, npy_intp, void *,
                                       void *);

/*
 * XXX the ignore argument should be removed next time the API version
 * is bumped. It used to be the separator.
 */
typedef int (PyArray_ScanFunc)(FILE *fp, void *dptr,
                               char *ignore, struct _PyArray_Descr *);
typedef int (PyArray_FromStrFunc)(char *s, void *dptr, char **endptr,
                                  struct _PyArray_Descr *);

typedef int (PyArray_FillFunc)(void *, npy_intp, void *);

typedef int (PyArray_SortFunc)(void *, npy_intp, void *);
typedef int (PyArray_ArgSortFunc)(void *, npy_intp *, npy_intp, void *);

typedef int (PyArray_FillWithScalarFunc)(void *, npy_intp, void *, void *);

typedef int (PyArray_ScalarKindFunc)(void *);

typedef void (PyArray_FastClipFunc)(void *in, npy_intp n_in, void *min,
                                    void *max, void *out);
typedef void (PyArray_FastPutmaskFunc)(void *in, void *mask, npy_intp n_in,
                                       void *values, npy_intp nv);
typedef int  (PyArray_FastTakeFunc)(void *dest, void *src, npy_intp *indarray,
                                       npy_intp nindarray, npy_intp n_outer,
                                       npy_intp m_middle, npy_intp nelem,
                                       NPY_CLIPMODE clipmode);

typedef struct {
        npy_intp *ptr;
        int len;
} PyArray_Dims;

typedef struct {
        /*
         * Functions to cast to most other standard types
         * Can have some NULL entries. The types
         * DATETIME, TIMEDELTA, and HALF go into the castdict
         * even though they are built-in.
         */
        PyArray_VectorUnaryFunc *cast[NPY_NTYPES_ABI_COMPATIBLE];

        /* The next four functions *cannot* be NULL */

        /*
         * Functions to get and set items with standard Python types
         * -- not array scalars
         */
        PyArray_GetItemFunc *getitem;
        PyArray_SetItemFunc *setitem;

        /*
         * Copy and/or swap data.  Memory areas may not overlap
         * Use memmove first if they might
         */
        PyArray_CopySwapNFunc *copyswapn;
        PyArray_CopySwapFunc *copyswap;

        /*
         * Function to compare items
         * Can be NULL
         */
        PyArray_CompareFunc *compare;

        /*
         * Function to select largest
         * Can be NULL
         */
        PyArray_ArgFunc *argmax;

        /*
         * Function to compute dot product
         * Can be NULL
         */
        PyArray_DotFunc *dotfunc;

        /*
         * Function to scan an ASCII file and
         * place a single value plus possible separator
         * Can be NULL
         */
        PyArray_ScanFunc *scanfunc;

        /*
         * Function to read a single value from a string
         * and adjust the pointer; Can be NULL
         */
        PyArray_FromStrFunc *fromstr;

        /*
         * Function to determine if data is zero or not
         * If NULL a default version is
         * used at Registration time.
         */
        PyArray_NonzeroFunc *nonzero;

        /*
         * Used for arange.
         * Can be NULL.
         */
        PyArray_FillFunc *fill;

        /*
         * Function to fill arrays with scalar values
         * Can be NULL
         */
        PyArray_FillWithScalarFunc *fillwithscalar;

        /*
         * Sorting functions
         * Can be NULL
         */
        PyArray_SortFunc *sort[NPY_NSORTS];
        PyArray_ArgSortFunc *argsort[NPY_NSORTS];

        /*
         * Dictionary of additional casting functions
         * PyArray_VectorUnaryFuncs
         * which can be populated to support casting
         * to other registered types. Can be NULL
         */
        PyObject *castdict;

        /*
         * Functions useful for generalizing
         * the casting rules.
         * Can be NULL;
         */
        PyArray_ScalarKindFunc *scalarkind;
        int **cancastscalarkindto;
        int *cancastto;

        PyArray_FastClipFunc *fastclip;
        PyArray_FastPutmaskFunc *fastputmask;
        PyArray_FastTakeFunc *fasttake;

        /*
         * Function to select smallest
         * Can be NULL
         */
        PyArray_ArgFunc *argmin;

} PyArray_ArrFuncs;

/* The item must be reference counted when it is inserted or extracted. */
#define NPY_ITEM_REFCOUNT   0x01
/* Same as needing REFCOUNT */
#define NPY_ITEM_HASOBJECT  0x01
/* Convert to list for pickling */
#define NPY_LIST_PICKLE     0x02
/* The item is a POINTER  */
#define NPY_ITEM_IS_POINTER 0x04
/* memory needs to be initialized for this data-type */
#define NPY_NEEDS_INIT      0x08
/* operations need Python C-API so don't give-up thread. */
#define NPY_NEEDS_PYAPI     0x10
/* Use f.getitem when extracting elements of this data-type */
#define NPY_USE_GETITEM     0x20
/* Use f.setitem when setting creating 0-d array from this data-type.*/
#define NPY_USE_SETITEM     0x40
/* define NPY_IS_COMPLEX */

/*
 *These are inherited for global data-type if any data-types in the
 * field have them
 */
#define NPY_FROM_FIELDS    (NPY_NEEDS_INIT | NPY_LIST_PICKLE |             \
                            NPY_ITEM_REFCOUNT | NPY_NEEDS_PYAPI)

#define NPY_OBJECT_DTYPE_FLAGS (NPY_LIST_PICKLE | NPY_USE_GETITEM |       \
                                NPY_ITEM_IS_POINTER | NPY_ITEM_REFCOUNT | \
                                NPY_NEEDS_INIT | NPY_NEEDS_PYAPI)

#define PyDataType_FLAGCHK(dtype, flag)                                   \
        (((dtype)->flags & (flag)) == (flag))

#define PyDataType_REFCHK(dtype)                                          \
        PyDataType_FLAGCHK(dtype, NPY_ITEM_REFCOUNT)

typedef struct _PyArray_Descr {
        PyObject_HEAD
        PyTypeObject *typeobj;  /*
                                 * the type object representing an
                                 * instance of this type -- should not
                                 * be two type_numbers with the same type
                                 * object.
                                 */
        char kind;              /* kind for this type */
        char type;              /* unique-character representing this type */
        char byteorder;         /*
                                 * '>' (big), '<' (little), '|'
                                 * (not-applicable), or '=' (native).
                                 */
        char flags;             /* flags describing data type */
        int type_num;           /* number representing this type */
        int elsize;             /* element size for this type */
        int alignment;          /* alignment needed for this type */
        struct _arr_descr                                       \
        *subarray;              /*
                                 * Non-NULL if this type is
                                 * is an array (C-contiguous)
                                 * of some other type
                                 */
        PyObject *fields;       /* The fields dictionary for this type
                                 * For statically defined descr this
                                 * is always Py_None
                                 */

        PyObject *names;        /*
                                 * An ordered tuple of field names or NULL
                                 * if no fields are defined
                                 */

        PyArray_ArrFuncs *f;     /*
                                  * a table of functions specific for each
                                  * basic data descriptor
                                  */

        PyObject *metadata;     /* Metadata about this dtype */
} PyArray_Descr;

typedef struct _arr_descr {
        PyArray_Descr *base;
        PyObject *shape;       /* a tuple */
} PyArray_ArrayDescr;

/*
 * The main array object structure. It is recommended to use the macros
 * defined below (PyArray_DATA and friends) access fields here, instead
 * of the members themselves.
 */

typedef struct PyArrayObject {
        PyObject_HEAD
        char *data;             /* pointer to raw data buffer */
        int nd;                 /* number of dimensions, also called ndim */
        npy_intp *dimensions;   /* size in each dimension */
        npy_intp *strides;      /*
                                 * bytes to jump to get to the
                                 * next element in each dimension
                                 */
        PyObject *base;         /*
                                 * This object should be decref'd upon
                                 * deletion of array
                                 *
                                 * For views it points to the original
                                 * array
                                 *
                                 * For creation from buffer object it
                                 * points to an object that shold be
                                 * decref'd on deletion
                                 *
                                 * For UPDATEIFCOPY flag this is an
                                 * array to-be-updated upon deletion
                                 * of this one
                                 */
        PyArray_Descr *descr;   /* Pointer to type structure */
        int flags;              /* Flags describing array -- see below */
        PyObject *weakreflist;  /* For weakreferences */
} PyArrayObject;

#define NPY_AO PyArrayObject

#define fortran fortran_        /* For some compilers */

/* Array Flags Object */
typedef struct PyArrayFlagsObject {
        PyObject_HEAD
        PyObject *arr;
        int flags;
} PyArrayFlagsObject;

/* Mirrors buffer object to ptr */

typedef struct {
        PyObject_HEAD
        PyObject *base;
        void *ptr;
        npy_intp len;
        int flags;
} PyArray_Chunk;


typedef struct {
        NPY_DATETIMEUNIT base;
        int num;
        int den;      /*
                       * Converted to 1 on input for now -- an
                       * input-only mechanism
                       */
        int events;
} PyArray_DatetimeMetaData;

typedef struct {
        npy_longlong year;
        int month, day, hour, min, sec, us, ps, as;
} npy_datetimestruct;

typedef struct {
        npy_longlong day;
        int sec, us, ps, as;
} npy_timedeltastruct;

#if PY_VERSION_HEX >= 0x03000000
#define PyDataType_GetDatetimeMetaData(descr)                                 \
    ((descr->metadata == NULL) ? NULL :                                       \
        ((PyArray_DatetimeMetaData *)(PyCapsule_GetPointer(                   \
                PyDict_GetItemString(                                         \
                    descr->metadata, NPY_METADATA_DTSTR), NULL))))
#else
#define PyDataType_GetDatetimeMetaData(descr)                                 \
    ((descr->metadata == NULL) ? NULL :                                       \
        ((PyArray_DatetimeMetaData *)(PyCObject_AsVoidPtr(                    \
                PyDict_GetItemString(descr->metadata, NPY_METADATA_DTSTR)))))
#endif

typedef int (PyArray_FinalizeFunc)(PyArrayObject *, PyObject *);

/*
 * Means c-style contiguous (last index varies the fastest). The data
 * elements right after each other.
 */
#define NPY_CONTIGUOUS    0x0001

/*
 * set if array is a contiguous Fortran array: the first index varies
 * the fastest in memory (strides array is reverse of C-contiguous
 * array)
 */
#define NPY_FORTRAN       0x0002

#define NPY_C_CONTIGUOUS NPY_CONTIGUOUS
#define NPY_F_CONTIGUOUS NPY_FORTRAN

/*
 * Note: all 0-d arrays are CONTIGUOUS and FORTRAN contiguous. If a
 * 1-d array is CONTIGUOUS it is also FORTRAN contiguous
 */

/*
 * If set, the array owns the data: it will be free'd when the array
 * is deleted.
 */
#define NPY_OWNDATA       0x0004

/*
 * An array never has the next four set; they're only used as parameter
 * flags to the the various FromAny functions
 */

/* Cause a cast to occur regardless of whether or not it is safe. */
#define NPY_FORCECAST     0x0010

/*
 * Always copy the array. Returned arrays are always CONTIGUOUS,
 * ALIGNED, and WRITEABLE.
 */
#define NPY_ENSURECOPY    0x0020

/* Make sure the returned array is a base-class ndarray */
#define NPY_ENSUREARRAY   0x0040

/*
 * Make sure that the strides are in units of the element size Needed
 * for some operations with record-arrays.
 */
#define NPY_ELEMENTSTRIDES 0x0080

/*
 * Array data is aligned on the appropiate memory address for the type
 * stored according to how the compiler would align things (e.g., an
 * array of integers (4 bytes each) starts on a memory address that's
 * a multiple of 4)
 */
#define NPY_ALIGNED       0x0100

/* Array data has the native endianness */
#define NPY_NOTSWAPPED    0x0200

/* Array data is writeable */
#define NPY_WRITEABLE     0x0400

/*
 * If this flag is set, then base contains a pointer to an array of
 * the same size that should be updated with the current contents of
 * this array when this array is deallocated
 */
#define NPY_UPDATEIFCOPY  0x1000

/* This flag is for the array interface */
#define NPY_ARR_HAS_DESCR  0x0800


#define NPY_BEHAVED (NPY_ALIGNED | NPY_WRITEABLE)
#define NPY_BEHAVED_NS (NPY_ALIGNED | NPY_WRITEABLE | NPY_NOTSWAPPED)
#define NPY_CARRAY (NPY_CONTIGUOUS | NPY_BEHAVED)
#define NPY_CARRAY_RO (NPY_CONTIGUOUS | NPY_ALIGNED)
#define NPY_FARRAY (NPY_FORTRAN | NPY_BEHAVED)
#define NPY_FARRAY_RO (NPY_FORTRAN | NPY_ALIGNED)
#define NPY_DEFAULT NPY_CARRAY
#define NPY_IN_ARRAY NPY_CARRAY_RO
#define NPY_OUT_ARRAY NPY_CARRAY
#define NPY_INOUT_ARRAY (NPY_CARRAY | NPY_UPDATEIFCOPY)
#define NPY_IN_FARRAY NPY_FARRAY_RO
#define NPY_OUT_FARRAY NPY_FARRAY
#define NPY_INOUT_FARRAY (NPY_FARRAY | NPY_UPDATEIFCOPY)

#define NPY_UPDATE_ALL (NPY_CONTIGUOUS | NPY_FORTRAN | NPY_ALIGNED)


/*
 * Size of internal buffers used for alignment Make BUFSIZE a multiple
 * of sizeof(cdouble) -- ususally 16 so that ufunc buffers are aligned
 */
#define NPY_MIN_BUFSIZE ((int)sizeof(cdouble))
#define NPY_MAX_BUFSIZE (((int)sizeof(cdouble))*1000000)
#define NPY_BUFSIZE 8192
/* buffer stress test size: */
/*#define NPY_BUFSIZE 17*/

#define PyArray_MAX(a,b) (((a)>(b))?(a):(b))
#define PyArray_MIN(a,b) (((a)<(b))?(a):(b))
#define PyArray_CLT(p,q) ((((p).real==(q).real) ? ((p).imag < (q).imag) : \
                               ((p).real < (q).real)))
#define PyArray_CGT(p,q) ((((p).real==(q).real) ? ((p).imag > (q).imag) : \
                               ((p).real > (q).real)))
#define PyArray_CLE(p,q) ((((p).real==(q).real) ? ((p).imag <= (q).imag) : \
                               ((p).real <= (q).real)))
#define PyArray_CGE(p,q) ((((p).real==(q).real) ? ((p).imag >= (q).imag) : \
                               ((p).real >= (q).real)))
#define PyArray_CEQ(p,q) (((p).real==(q).real) && ((p).imag == (q).imag))
#define PyArray_CNE(p,q) (((p).real!=(q).real) || ((p).imag != (q).imag))

/*
 * C API: consists of Macros and functions.  The MACROS are defined
 * here.
 */


#define PyArray_CHKFLAGS(m, FLAGS)                              \
        ((((PyArrayObject *)(m))->flags & (FLAGS)) == (FLAGS))

#define PyArray_ISCONTIGUOUS(m) PyArray_CHKFLAGS(m, NPY_CONTIGUOUS)
#define PyArray_ISWRITEABLE(m) PyArray_CHKFLAGS(m, NPY_WRITEABLE)
#define PyArray_ISALIGNED(m) PyArray_CHKFLAGS(m, NPY_ALIGNED)

#define PyArray_IS_C_CONTIGUOUS(m) PyArray_CHKFLAGS(m, NPY_C_CONTIGUOUS)
#define PyArray_IS_F_CONTIGUOUS(m) PyArray_CHKFLAGS(m, NPY_F_CONTIGUOUS)

#if NPY_ALLOW_THREADS
#define NPY_BEGIN_ALLOW_THREADS Py_BEGIN_ALLOW_THREADS
#define NPY_END_ALLOW_THREADS Py_END_ALLOW_THREADS
#define NPY_BEGIN_THREADS_DEF PyThreadState *_save=NULL;
#define NPY_BEGIN_THREADS _save = PyEval_SaveThread();
#define NPY_END_THREADS   do {if (_save) PyEval_RestoreThread(_save);} while (0);

#define NPY_BEGIN_THREADS_DESCR(dtype)                          \
        do {if (!(PyDataType_FLAGCHK(dtype, NPY_NEEDS_PYAPI)))      \
                NPY_BEGIN_THREADS;} while (0);

#define NPY_END_THREADS_DESCR(dtype)                            \
        do {if (!(PyDataType_FLAGCHK(dtype, NPY_NEEDS_PYAPI)))      \
                NPY_END_THREADS; } while (0);

#define NPY_ALLOW_C_API_DEF  PyGILState_STATE __save__;
#define NPY_ALLOW_C_API      __save__ = PyGILState_Ensure();
#define NPY_DISABLE_C_API    PyGILState_Release(__save__);
#else
#define NPY_BEGIN_ALLOW_THREADS
#define NPY_END_ALLOW_THREADS
#define NPY_BEGIN_THREADS_DEF
#define NPY_BEGIN_THREADS
#define NPY_END_THREADS
#define NPY_BEGIN_THREADS_DESCR(dtype)
#define NPY_END_THREADS_DESCR(dtype)
#define NPY_ALLOW_C_API_DEF
#define NPY_ALLOW_C_API
#define NPY_DISABLE_C_API
#endif

/*****************************
 * New iterator object
 *****************************/

/* The actual structure of the iterator is an internal detail */
typedef struct NpyIter_InternalOnly NpyIter;

/* Iterator function pointers that may be specialized */
typedef int (NpyIter_IterNextFunc)(NpyIter *iter);
typedef void (NpyIter_GetMultiIndexFunc)(NpyIter *iter,
                                      npy_intp *outcoords);

/*** Global flags that may be passed to the iterator constructors ***/

/* Track an index representing C order */
#define NPY_ITER_C_INDEX                    0x00000001
/* Track an index representing Fortran order */
#define NPY_ITER_F_INDEX                    0x00000002
/* Track a multi-index */
#define NPY_ITER_MULTI_INDEX                0x00000004
/* User code external to the iterator does the 1-dimensional innermost loop */
#define NPY_ITER_EXTERNAL_LOOP              0x00000008
/* Convert all the operands to a common data type */
#define NPY_ITER_COMMON_DTYPE               0x00000010
/* Operands may hold references, requiring API access during iteration */
#define NPY_ITER_REFS_OK                    0x00000020
/* Zero-sized operands should be permitted, iteration checks IterSize for 0 */
#define NPY_ITER_ZEROSIZE_OK                0x00000040
/* Permits reductions (size-0 stride with dimension size > 1) */
#define NPY_ITER_REDUCE_OK                  0x00000080
/* Enables sub-range iteration */
#define NPY_ITER_RANGED                     0x00000100
/* Enables buffering */
#define NPY_ITER_BUFFERED                   0x00000200
/* When buffering is enabled, grows the inner loop if possible */
#define NPY_ITER_GROWINNER                  0x00000400
/* Delay allocation of buffers until first Reset* call */
#define NPY_ITER_DELAY_BUFALLOC             0x00000800
/* When NPY_KEEPORDER is specified, disable reversing negative-stride axes */
#define NPY_ITER_DONT_NEGATE_STRIDES        0x00001000

/*** Per-operand flags that may be passed to the iterator constructors ***/

/* The operand will be read from and written to */
#define NPY_ITER_READWRITE                  0x00010000
/* The operand will only be read from */
#define NPY_ITER_READONLY                   0x00020000
/* The operand will only be written to */
#define NPY_ITER_WRITEONLY                  0x00040000
/* The operand's data must be in native byte order */
#define NPY_ITER_NBO                        0x00080000
/* The operand's data must be aligned */
#define NPY_ITER_ALIGNED                    0x00100000
/* The operand's data must be contiguous (within the inner loop) */
#define NPY_ITER_CONTIG                     0x00200000
/* The operand may be copied to satisfy requirements */
#define NPY_ITER_COPY                       0x00400000
/* The operand may be copied with UPDATEIFCOPY to satisfy requirements */
#define NPY_ITER_UPDATEIFCOPY               0x00800000
/* Allocate the operand if it is NULL */
#define NPY_ITER_ALLOCATE                   0x01000000
/* If an operand is allocated, don't use any subtype */
#define NPY_ITER_NO_SUBTYPE                 0x02000000
/* Require that the dimension match the iterator dimensions exactly */
#define NPY_ITER_NO_BROADCAST               0x08000000

#define NPY_ITER_GLOBAL_FLAGS               0x0000ffff
#define NPY_ITER_PER_OP_FLAGS               0xffff0000


/*****************************
 * Basic iterator object
 *****************************/

/* FWD declaration */
typedef struct PyArrayIterObject_tag PyArrayIterObject;

/*
 * type of the function which translates a set of coordinates to a
 * pointer to the data
 */
typedef char* (*npy_iter_get_dataptr_t)(PyArrayIterObject* iter, npy_intp*);

struct PyArrayIterObject_tag {
        PyObject_HEAD
        int               nd_m1;            /* number of dimensions - 1 */
        npy_intp          index, size;
        npy_intp          coordinates[NPY_MAXDIMS];/* N-dimensional loop */
        npy_intp          dims_m1[NPY_MAXDIMS];    /* ao->dimensions - 1 */
        npy_intp          strides[NPY_MAXDIMS];    /* ao->strides or fake */
        npy_intp          backstrides[NPY_MAXDIMS];/* how far to jump back */
        npy_intp          factors[NPY_MAXDIMS];     /* shape factors */
        PyArrayObject     *ao;
        char              *dataptr;        /* pointer to current item*/
        npy_bool          contiguous;

        npy_intp          bounds[NPY_MAXDIMS][2];
        npy_intp          limits[NPY_MAXDIMS][2];
        npy_intp          limits_sizes[NPY_MAXDIMS];
        npy_iter_get_dataptr_t translate;
} ;


/* Iterator API */
#define PyArrayIter_Check(op) PyObject_TypeCheck(op, &PyArrayIter_Type)

#define _PyAIT(it) ((PyArrayIterObject *)(it))
#define PyArray_ITER_RESET(it) {                                        \
        _PyAIT(it)->index = 0;                                          \
        _PyAIT(it)->dataptr = _PyAIT(it)->ao->data;                     \
        memset(_PyAIT(it)->coordinates, 0,                              \
               (_PyAIT(it)->nd_m1+1)*sizeof(npy_intp));                 \
}

#define _PyArray_ITER_NEXT1(it) {                                       \
        (it)->dataptr += _PyAIT(it)->strides[0];                        \
        (it)->coordinates[0]++;                                         \
}

#define _PyArray_ITER_NEXT2(it) {                                       \
        if ((it)->coordinates[1] < (it)->dims_m1[1]) {                  \
                (it)->coordinates[1]++;                                 \
                (it)->dataptr += (it)->strides[1];                      \
        }                                                               \
        else {                                                          \
                (it)->coordinates[1] = 0;                               \
                (it)->coordinates[0]++;                                 \
                (it)->dataptr += (it)->strides[0] -                     \
                        (it)->backstrides[1];                           \
        }                                                               \
}

#define _PyArray_ITER_NEXT3(it) {                                       \
        if ((it)->coordinates[2] < (it)->dims_m1[2]) {                  \
                (it)->coordinates[2]++;                                 \
                (it)->dataptr += (it)->strides[2];                      \
        }                                                               \
        else {                                                          \
                (it)->coordinates[2] = 0;                               \
                (it)->dataptr -= (it)->backstrides[2];                  \
                if ((it)->coordinates[1] < (it)->dims_m1[1]) {          \
                        (it)->coordinates[1]++;                         \
                        (it)->dataptr += (it)->strides[1];              \
                }                                                       \
                else {                                                  \
                        (it)->coordinates[1] = 0;                       \
                        (it)->coordinates[0]++;                         \
                        (it)->dataptr += (it)->strides[0] -             \
                                (it)->backstrides[1];                   \
                }                                                       \
        }                                                               \
}

#define PyArray_ITER_NEXT(it) {                                            \
        _PyAIT(it)->index++;                                               \
        if (_PyAIT(it)->nd_m1 == 0) {                                      \
                _PyArray_ITER_NEXT1(_PyAIT(it));                           \
        }                                                                  \
        else if (_PyAIT(it)->contiguous)                                   \
                _PyAIT(it)->dataptr += _PyAIT(it)->ao->descr->elsize;      \
        else if (_PyAIT(it)->nd_m1 == 1) {                                 \
                _PyArray_ITER_NEXT2(_PyAIT(it));                           \
        }                                                                  \
        else {                                                             \
                int __npy_i;                                               \
                for (__npy_i=_PyAIT(it)->nd_m1; __npy_i >= 0; __npy_i--) { \
                        if (_PyAIT(it)->coordinates[__npy_i] <             \
                            _PyAIT(it)->dims_m1[__npy_i]) {                \
                                _PyAIT(it)->coordinates[__npy_i]++;        \
                                _PyAIT(it)->dataptr +=                     \
                                        _PyAIT(it)->strides[__npy_i];      \
                                break;                                     \
                        }                                                  \
                        else {                                             \
                                _PyAIT(it)->coordinates[__npy_i] = 0;      \
                                _PyAIT(it)->dataptr -=                     \
                                        _PyAIT(it)->backstrides[__npy_i];  \
                        }                                                  \
                }                                                          \
        }                                                                  \
}

#define PyArray_ITER_GOTO(it, destination) {                            \
        int __npy_i;                                                    \
        _PyAIT(it)->index = 0;                                          \
        _PyAIT(it)->dataptr = _PyAIT(it)->ao->data;                     \
        for (__npy_i = _PyAIT(it)->nd_m1; __npy_i>=0; __npy_i--) {      \
                if (destination[__npy_i] < 0) {                         \
                        destination[__npy_i] +=                         \
                                _PyAIT(it)->dims_m1[__npy_i]+1;         \
                }                                                       \
                _PyAIT(it)->dataptr += destination[__npy_i] *           \
                        _PyAIT(it)->strides[__npy_i];                   \
                _PyAIT(it)->coordinates[__npy_i] =                      \
                        destination[__npy_i];                           \
                _PyAIT(it)->index += destination[__npy_i] *             \
                        ( __npy_i==_PyAIT(it)->nd_m1 ? 1 :              \
                          _PyAIT(it)->dims_m1[__npy_i+1]+1) ;           \
        }                                                               \
}

#define PyArray_ITER_GOTO1D(it, ind) {                                     \
        int __npy_i;                                                       \
        npy_intp __npy_ind = (npy_intp) (ind);                             \
        if (__npy_ind < 0) __npy_ind += _PyAIT(it)->size;                  \
        _PyAIT(it)->index = __npy_ind;                                     \
        if (_PyAIT(it)->nd_m1 == 0) {                                      \
                _PyAIT(it)->dataptr = _PyAIT(it)->ao->data +               \
                        __npy_ind * _PyAIT(it)->strides[0];                \
        }                                                                  \
        else if (_PyAIT(it)->contiguous)                                   \
                _PyAIT(it)->dataptr = _PyAIT(it)->ao->data +               \
                        __npy_ind * _PyAIT(it)->ao->descr->elsize;         \
        else {                                                             \
                _PyAIT(it)->dataptr = _PyAIT(it)->ao->data;                \
                for (__npy_i = 0; __npy_i<=_PyAIT(it)->nd_m1;              \
                     __npy_i++) {                                          \
                        _PyAIT(it)->dataptr +=                             \
                                (__npy_ind / _PyAIT(it)->factors[__npy_i]) \
                                * _PyAIT(it)->strides[__npy_i];            \
                        __npy_ind %= _PyAIT(it)->factors[__npy_i];         \
                }                                                          \
        }                                                                  \
}

#define PyArray_ITER_DATA(it) ((void *)(_PyAIT(it)->dataptr))

#define PyArray_ITER_NOTDONE(it) (_PyAIT(it)->index < _PyAIT(it)->size)


/*
 * Any object passed to PyArray_Broadcast must be binary compatible
 * with this structure.
 */

typedef struct {
        PyObject_HEAD
        int                  numiter;                 /* number of iters */
        npy_intp             size;                    /* broadcasted size */
        npy_intp             index;                   /* current index */
        int                  nd;                      /* number of dims */
        npy_intp             dimensions[NPY_MAXDIMS]; /* dimensions */
        PyArrayIterObject    *iters[NPY_MAXARGS];     /* iterators */
} PyArrayMultiIterObject;

#define _PyMIT(m) ((PyArrayMultiIterObject *)(m))
#define PyArray_MultiIter_RESET(multi) {                                      \
        int __npy_mi;                                                         \
        _PyMIT(multi)->index = 0;                                             \
        for (__npy_mi=0; __npy_mi < _PyMIT(multi)->numiter;  __npy_mi++) {    \
                PyArray_ITER_RESET(_PyMIT(multi)->iters[__npy_mi]);           \
        }                                                                     \
}

#define PyArray_MultiIter_NEXT(multi) {                                       \
        int __npy_mi;                                                         \
        _PyMIT(multi)->index++;                                               \
        for (__npy_mi=0; __npy_mi < _PyMIT(multi)->numiter;   __npy_mi++) {   \
                PyArray_ITER_NEXT(_PyMIT(multi)->iters[__npy_mi]);            \
        }                                                                     \
}

#define PyArray_MultiIter_GOTO(multi, dest) {                               \
        int __npy_mi;                                                       \
        for (__npy_mi=0; __npy_mi < _PyMIT(multi)->numiter; __npy_mi++) {   \
                PyArray_ITER_GOTO(_PyMIT(multi)->iters[__npy_mi], dest);    \
        }                                                                   \
        _PyMIT(multi)->index = _PyMIT(multi)->iters[0]->index;              \
}

#define PyArray_MultiIter_GOTO1D(multi, ind) {                             \
        int __npy_mi;                                                      \
        for (__npy_mi=0; __npy_mi < _PyMIT(multi)->numiter; __npy_mi++) {  \
                PyArray_ITER_GOTO1D(_PyMIT(multi)->iters[__npy_mi], ind);  \
        }                                                                  \
        _PyMIT(multi)->index = _PyMIT(multi)->iters[0]->index;             \
}

#define PyArray_MultiIter_DATA(multi, i)                \
        ((void *)(_PyMIT(multi)->iters[i]->dataptr))

#define PyArray_MultiIter_NEXTi(multi, i)               \
        PyArray_ITER_NEXT(_PyMIT(multi)->iters[i])

#define PyArray_MultiIter_NOTDONE(multi)                \
        (_PyMIT(multi)->index < _PyMIT(multi)->size)

/* Store the information needed for fancy-indexing over an array */

typedef struct {
        PyObject_HEAD
        /*
         * Multi-iterator portion --- needs to be present in this
         * order to work with PyArray_Broadcast
         */

        int                   numiter;                 /* number of index-array
                                                          iterators */
        npy_intp              size;                    /* size of broadcasted
                                                          result */
        npy_intp              index;                   /* current index */
        int                   nd;                      /* number of dims */
        npy_intp              dimensions[NPY_MAXDIMS]; /* dimensions */
        PyArrayIterObject     *iters[NPY_MAXDIMS];     /* index object
                                                          iterators */
        PyArrayIterObject     *ait;                    /* flat Iterator for
                                                          underlying array */

        /* flat iterator for subspace (when numiter < nd) */
        PyArrayIterObject     *subspace;

        /*
         * if subspace iteration, then this is the array of axes in
         * the underlying array represented by the index objects
         */
        int                   iteraxes[NPY_MAXDIMS];
        /*
         * if subspace iteration, the these are the coordinates to the
         * start of the subspace.
         */
        npy_intp              bscoord[NPY_MAXDIMS];

        PyObject              *indexobj;               /* creating obj */
        int                   consec;
        char                  *dataptr;

} PyArrayMapIterObject;

enum {
    NPY_NEIGHBORHOOD_ITER_ZERO_PADDING,
    NPY_NEIGHBORHOOD_ITER_ONE_PADDING,
    NPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING,
    NPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING,
    NPY_NEIGHBORHOOD_ITER_MIRROR_PADDING
};

typedef struct {
    PyObject_HEAD

    /*
     * PyArrayIterObject part: keep this in this exact order
     */
    int               nd_m1;            /* number of dimensions - 1 */
    npy_intp          index, size;
    npy_intp          coordinates[NPY_MAXDIMS];/* N-dimensional loop */
    npy_intp          dims_m1[NPY_MAXDIMS];    /* ao->dimensions - 1 */
    npy_intp          strides[NPY_MAXDIMS];    /* ao->strides or fake */
    npy_intp          backstrides[NPY_MAXDIMS];/* how far to jump back */
    npy_intp          factors[NPY_MAXDIMS];     /* shape factors */
    PyArrayObject     *ao;
    char              *dataptr;        /* pointer to current item*/
    npy_bool          contiguous;

    npy_intp          bounds[NPY_MAXDIMS][2];
    npy_intp          limits[NPY_MAXDIMS][2];
    npy_intp          limits_sizes[NPY_MAXDIMS];
    npy_iter_get_dataptr_t translate;

    /*
     * New members
     */
    npy_intp nd;

    /* Dimensions is the dimension of the array */
    npy_intp dimensions[NPY_MAXDIMS];

    /*
     * Neighborhood points coordinates are computed relatively to the
     * point pointed by _internal_iter
     */
    PyArrayIterObject* _internal_iter;
    /*
     * To keep a reference to the representation of the constant value
     * for constant padding
     */
    char* constant;

    int mode;
} PyArrayNeighborhoodIterObject;

/*
 * Neighborhood iterator API
 */

/* General: those work for any mode */
static NPY_INLINE int
PyArrayNeighborhoodIter_Reset(PyArrayNeighborhoodIterObject* iter);
static NPY_INLINE int
PyArrayNeighborhoodIter_Next(PyArrayNeighborhoodIterObject* iter);
#if 0
static NPY_INLINE int
PyArrayNeighborhoodIter_Next2D(PyArrayNeighborhoodIterObject* iter);
#endif

/*
 * Include inline implementations - functions defined there are not
 * considered public API
 */
#define _NPY_INCLUDE_NEIGHBORHOOD_IMP
#include "_neighborhood_iterator_imp.h"
#undef _NPY_INCLUDE_NEIGHBORHOOD_IMP

/* The default array type */
#define NPY_DEFAULT_TYPE NPY_DOUBLE
#define PyArray_DEFAULT NPY_DEFAULT_TYPE

/*
 * All sorts of useful ways to look into a PyArrayObject.  These are
 * the recommended over casting to PyArrayObject and accessing the
 * members directly.
 */

#define PyArray_NDIM(obj) (((PyArrayObject *)(obj))->nd)
#define PyArray_ISONESEGMENT(m) (PyArray_NDIM(m) == 0 ||                      \
                                 PyArray_CHKFLAGS(m, NPY_CONTIGUOUS) ||       \
                                 PyArray_CHKFLAGS(m, NPY_FORTRAN))

#define PyArray_ISFORTRAN(m) (PyArray_CHKFLAGS(m, NPY_FORTRAN) &&             \
                             (PyArray_NDIM(m) > 1))

#define PyArray_FORTRAN_IF(m) ((PyArray_CHKFLAGS(m, NPY_FORTRAN) ?            \
                              NPY_FORTRAN : 0))

#define FORTRAN_IF PyArray_FORTRAN_IF
#define PyArray_DATA(obj) ((void *)(((PyArrayObject *)(obj))->data))
#define PyArray_BYTES(obj) (((PyArrayObject *)(obj))->data)
#define PyArray_DIMS(obj) (((PyArrayObject *)(obj))->dimensions)
#define PyArray_STRIDES(obj) (((PyArrayObject *)(obj))->strides)
#define PyArray_DIM(obj,n) (PyArray_DIMS(obj)[n])
#define PyArray_STRIDE(obj,n) (PyArray_STRIDES(obj)[n])
#define PyArray_BASE(obj) (((PyArrayObject *)(obj))->base)
#define PyArray_DESCR(obj) (((PyArrayObject *)(obj))->descr)
#define PyArray_FLAGS(obj) (((PyArrayObject *)(obj))->flags)
#define PyArray_ITEMSIZE(obj) (((PyArrayObject *)(obj))->descr->elsize)
#define PyArray_TYPE(obj) (((PyArrayObject *)(obj))->descr->type_num)

#define PyArray_GETITEM(obj,itemptr)                                          \
        ((PyArrayObject *)(obj))->descr->f->getitem((char *)(itemptr),        \
                                                 (PyArrayObject *)(obj))

#define PyArray_SETITEM(obj,itemptr,v)                                        \
        ((PyArrayObject *)(obj))->descr->f->setitem((PyObject *)(v),          \
                                                    (char *)(itemptr),        \
                                                    (PyArrayObject *)(obj))


#define PyTypeNum_ISBOOL(type) ((type) == NPY_BOOL)

#define PyTypeNum_ISUNSIGNED(type) (((type) == NPY_UBYTE) ||   \
                                 ((type) == NPY_USHORT) ||     \
                                 ((type) == NPY_UINT) ||       \
                                 ((type) == NPY_ULONG) ||      \
                                 ((type) == NPY_ULONGLONG))

#define PyTypeNum_ISSIGNED(type) (((type) == NPY_BYTE) ||      \
                               ((type) == NPY_SHORT) ||        \
                               ((type) == NPY_INT) ||          \
                               ((type) == NPY_LONG) ||         \
                               ((type) == NPY_LONGLONG))

#define PyTypeNum_ISINTEGER(type) (((type) >= NPY_BYTE) &&     \
                                ((type) <= NPY_ULONGLONG))

#define PyTypeNum_ISFLOAT(type) ((((type) >= NPY_FLOAT) && \
                              ((type) <= NPY_LONGDOUBLE)) || \
                              ((type) == NPY_HALF))

#define PyTypeNum_ISNUMBER(type) (((type) <= NPY_CLONGDOUBLE) || \
                                  ((type) == NPY_HALF))

#define PyTypeNum_ISSTRING(type) (((type) == NPY_STRING) ||    \
                                  ((type) == NPY_UNICODE))

#define PyTypeNum_ISCOMPLEX(type) (((type) >= NPY_CFLOAT) &&   \
                                ((type) <= NPY_CLONGDOUBLE))

#define PyTypeNum_ISPYTHON(type) (((type) == NPY_LONG) ||      \
                                  ((type) == NPY_DOUBLE) ||    \
                                  ((type) == NPY_CDOUBLE) ||   \
                                  ((type) == NPY_BOOL) ||      \
                                  ((type) == NPY_OBJECT ))

#define PyTypeNum_ISFLEXIBLE(type) (((type) >=NPY_STRING) &&  \
                                    ((type) <=NPY_VOID))

#define PyTypeNum_ISDATETIME(type) (((type) >=NPY_DATETIME) &&  \
                                    ((type) <=NPY_TIMEDELTA))

#define PyTypeNum_ISUSERDEF(type) (((type) >= NPY_USERDEF) && \
                                   ((type) < NPY_USERDEF+     \
                                    NPY_NUMUSERTYPES))

#define PyTypeNum_ISEXTENDED(type) (PyTypeNum_ISFLEXIBLE(type) ||  \
                                    PyTypeNum_ISUSERDEF(type))

#define PyTypeNum_ISOBJECT(type) ((type) == NPY_OBJECT)


#define PyDataType_ISBOOL(obj) PyTypeNum_ISBOOL(_PyADt(obj))
#define PyDataType_ISUNSIGNED(obj) PyTypeNum_ISUNSIGNED(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISSIGNED(obj) PyTypeNum_ISSIGNED(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISINTEGER(obj) PyTypeNum_ISINTEGER(((PyArray_Descr*)(obj))->type_num )
#define PyDataType_ISFLOAT(obj) PyTypeNum_ISFLOAT(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISNUMBER(obj) PyTypeNum_ISNUMBER(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISSTRING(obj) PyTypeNum_ISSTRING(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISCOMPLEX(obj) PyTypeNum_ISCOMPLEX(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISPYTHON(obj) PyTypeNum_ISPYTHON(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISFLEXIBLE(obj) PyTypeNum_ISFLEXIBLE(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISDATETIME(obj) PyTypeNum_ISDATETIME(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISUSERDEF(obj) PyTypeNum_ISUSERDEF(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISEXTENDED(obj) PyTypeNum_ISEXTENDED(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_ISOBJECT(obj) PyTypeNum_ISOBJECT(((PyArray_Descr*)(obj))->type_num)
#define PyDataType_HASFIELDS(obj) (((PyArray_Descr *)(obj))->names != NULL)

#define PyArray_ISBOOL(obj) PyTypeNum_ISBOOL(PyArray_TYPE(obj))
#define PyArray_ISUNSIGNED(obj) PyTypeNum_ISUNSIGNED(PyArray_TYPE(obj))
#define PyArray_ISSIGNED(obj) PyTypeNum_ISSIGNED(PyArray_TYPE(obj))
#define PyArray_ISINTEGER(obj) PyTypeNum_ISINTEGER(PyArray_TYPE(obj))
#define PyArray_ISFLOAT(obj) PyTypeNum_ISFLOAT(PyArray_TYPE(obj))
#define PyArray_ISNUMBER(obj) PyTypeNum_ISNUMBER(PyArray_TYPE(obj))
#define PyArray_ISSTRING(obj) PyTypeNum_ISSTRING(PyArray_TYPE(obj))
#define PyArray_ISCOMPLEX(obj) PyTypeNum_ISCOMPLEX(PyArray_TYPE(obj))
#define PyArray_ISPYTHON(obj) PyTypeNum_ISPYTHON(PyArray_TYPE(obj))
#define PyArray_ISFLEXIBLE(obj) PyTypeNum_ISFLEXIBLE(PyArray_TYPE(obj))
#define PyArray_ISDATETIME(obj) PyTypeNum_ISDATETIME(PyArray_TYPE(obj))
#define PyArray_ISUSERDEF(obj) PyTypeNum_ISUSERDEF(PyArray_TYPE(obj))
#define PyArray_ISEXTENDED(obj) PyTypeNum_ISEXTENDED(PyArray_TYPE(obj))
#define PyArray_ISOBJECT(obj) PyTypeNum_ISOBJECT(PyArray_TYPE(obj))
#define PyArray_HASFIELDS(obj) PyDataType_HASFIELDS(PyArray_DESCR(obj))

    /*
     * FIXME: This should check for a flag on the data-type that
     * states whether or not it is variable length.  Because the
     * ISFLEXIBLE check is hard-coded to the built-in data-types.
     */
#define PyArray_ISVARIABLE(obj) PyTypeNum_ISFLEXIBLE(PyArray_TYPE(obj))

#define PyArray_SAFEALIGNEDCOPY(obj) (PyArray_ISALIGNED(obj) && !PyArray_ISVARIABLE(obj))


#define NPY_LITTLE '<'
#define NPY_BIG '>'
#define NPY_NATIVE '='
#define NPY_SWAP 's'
#define NPY_IGNORE '|'

#if NPY_BYTE_ORDER == NPY_BIG_ENDIAN
#define NPY_NATBYTE NPY_BIG
#define NPY_OPPBYTE NPY_LITTLE
#else
#define NPY_NATBYTE NPY_LITTLE
#define NPY_OPPBYTE NPY_BIG
#endif

#define PyArray_ISNBO(arg) ((arg) != NPY_OPPBYTE)
#define PyArray_IsNativeByteOrder PyArray_ISNBO
#define PyArray_ISNOTSWAPPED(m) PyArray_ISNBO(PyArray_DESCR(m)->byteorder)
#define PyArray_ISBYTESWAPPED(m) (!PyArray_ISNOTSWAPPED(m))

#define PyArray_FLAGSWAP(m, flags) (PyArray_CHKFLAGS(m, flags) &&       \
                                    PyArray_ISNOTSWAPPED(m))

#define PyArray_ISCARRAY(m) PyArray_FLAGSWAP(m, NPY_CARRAY)
#define PyArray_ISCARRAY_RO(m) PyArray_FLAGSWAP(m, NPY_CARRAY_RO)
#define PyArray_ISFARRAY(m) PyArray_FLAGSWAP(m, NPY_FARRAY)
#define PyArray_ISFARRAY_RO(m) PyArray_FLAGSWAP(m, NPY_FARRAY_RO)
#define PyArray_ISBEHAVED(m) PyArray_FLAGSWAP(m, NPY_BEHAVED)
#define PyArray_ISBEHAVED_RO(m) PyArray_FLAGSWAP(m, NPY_ALIGNED)


#define PyDataType_ISNOTSWAPPED(d) PyArray_ISNBO(((PyArray_Descr *)(d))->byteorder)
#define PyDataType_ISBYTESWAPPED(d) (!PyDataType_ISNOTSWAPPED(d))


/*
 * This is the form of the struct that's returned pointed by the
 * PyCObject attribute of an array __array_struct__. See
 * http://numpy.scipy.org/array_interface.shtml for the full
 * documentation.
 */
typedef struct {
    int two;              /*
                           * contains the integer 2 as a sanity
                           * check
                           */

    int nd;               /* number of dimensions */

    char typekind;        /*
                           * kind in array --- character code of
                           * typestr
                           */

    int itemsize;         /* size of each element */

    int flags;            /*
                           * how should be data interpreted. Valid
                           * flags are CONTIGUOUS (1), FORTRAN (2),
                           * ALIGNED (0x100), NOTSWAPPED (0x200), and
                           * WRITEABLE (0x400).  ARR_HAS_DESCR (0x800)
                           * states that arrdescr field is present in
                           * structure
                           */

    npy_intp *shape;       /*
                            * A length-nd array of shape
                            * information
                            */

    npy_intp *strides;    /* A length-nd array of stride information */

    void *data;           /* A pointer to the first element of the array */

    PyObject *descr;      /*
                           * A list of fields or NULL (ignored if flags
                           * does not have ARR_HAS_DESCR flag set)
                           */
} PyArrayInterface;

#endif /* NPY_ARRAYTYPES_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    noprefix.h                                                                                          0100644 0001750 0001750 00000014616 11755722571 042126  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef NPY_NOPREFIX_H
#define NPY_NOPREFIX_H

/* You can directly include noprefix.h as a backward
compatibility measure*/
#ifndef NPY_NO_PREFIX
#include "ndarrayobject.h"
#endif

#define MAX_DIMS NPY_MAXDIMS

#define longlong    npy_longlong
#define ulonglong   npy_ulonglong
#define Bool        npy_bool
#define longdouble  npy_longdouble
#define byte        npy_byte

#ifndef _BSD_SOURCE
#define ushort      npy_ushort
#define uint        npy_uint
#define ulong       npy_ulong
#endif

#define ubyte       npy_ubyte
#define ushort      npy_ushort
#define uint        npy_uint
#define ulong       npy_ulong
#define cfloat      npy_cfloat
#define cdouble     npy_cdouble
#define clongdouble npy_clongdouble
#define Int8        npy_int8
#define UInt8       npy_uint8
#define Int16       npy_int16
#define UInt16      npy_uint16
#define Int32       npy_int32
#define UInt32      npy_uint32
#define Int64       npy_int64
#define UInt64      npy_uint64
#define Int128      npy_int128
#define UInt128     npy_uint128
#define Int256      npy_int256
#define UInt256     npy_uint256
#define Float16     npy_float16
#define Complex32   npy_complex32
#define Float32     npy_float32
#define Complex64   npy_complex64
#define Float64     npy_float64
#define Complex128  npy_complex128
#define Float80     npy_float80
#define Complex160  npy_complex160
#define Float96     npy_float96
#define Complex192  npy_complex192
#define Float128    npy_float128
#define Complex256  npy_complex256
#define intp        npy_intp
#define uintp       npy_uintp
#define datetime    npy_datetime
#define timedelta   npy_timedelta

#define SIZEOF_INTP NPY_SIZEOF_INTP
#define SIZEOF_UINTP NPY_SIZEOF_UINTP
#define SIZEOF_DATETIME NPY_SIZEOF_DATETIME
#define SIZEOF_TIMEDELTA NPY_SIZEOF_TIMEDELTA

#define LONGLONG_FMT NPY_LONGLONG_FMT
#define ULONGLONG_FMT NPY_ULONGLONG_FMT
#define LONGLONG_SUFFIX NPY_LONGLONG_SUFFIX
#define ULONGLONG_SUFFIX NPY_ULONGLONG_SUFFIX(x)

#define MAX_INT8 127
#define MIN_INT8 -128
#define MAX_UINT8 255
#define MAX_INT16 32767
#define MIN_INT16 -32768
#define MAX_UINT16 65535
#define MAX_INT32 2147483647
#define MIN_INT32 (-MAX_INT32 - 1)
#define MAX_UINT32 4294967295U
#define MAX_INT64 LONGLONG_SUFFIX(9223372036854775807)
#define MIN_INT64 (-MAX_INT64 - LONGLONG_SUFFIX(1))
#define MAX_UINT64 ULONGLONG_SUFFIX(18446744073709551615)
#define MAX_INT128 LONGLONG_SUFFIX(85070591730234615865843651857942052864)
#define MIN_INT128 (-MAX_INT128 - LONGLONG_SUFFIX(1))
#define MAX_UINT128 ULONGLONG_SUFFIX(170141183460469231731687303715884105728)
#define MAX_INT256 LONGLONG_SUFFIX(57896044618658097711785492504343953926634992332820282019728792003956564819967)
#define MIN_INT256 (-MAX_INT256 - LONGLONG_SUFFIX(1))
#define MAX_UINT256 ULONGLONG_SUFFIX(115792089237316195423570985008687907853269984665640564039457584007913129639935)

#define MAX_BYTE NPY_MAX_BYTE
#define MIN_BYTE NPY_MIN_BYTE
#define MAX_UBYTE NPY_MAX_UBYTE
#define MAX_SHORT NPY_MAX_SHORT
#define MIN_SHORT NPY_MIN_SHORT
#define MAX_USHORT NPY_MAX_USHORT
#define MAX_INT   NPY_MAX_INT
#define MIN_INT   NPY_MIN_INT
#define MAX_UINT  NPY_MAX_UINT
#define MAX_LONG  NPY_MAX_LONG
#define MIN_LONG  NPY_MIN_LONG
#define MAX_ULONG  NPY_MAX_ULONG
#define MAX_LONGLONG NPY_MAX_LONGLONG
#define MIN_LONGLONG NPY_MIN_LONGLONG
#define MAX_ULONGLONG NPY_MAX_ULONGLONG
#define MIN_DATETIME NPY_MIN_DATETIME
#define MAX_DATETIME NPY_MAX_DATETIME
#define MIN_TIMEDELTA NPY_MIN_TIMEDELTA
#define MAX_TIMEDELTA NPY_MAX_TIMEDELTA

#define SIZEOF_LONGDOUBLE NPY_SIZEOF_LONGDOUBLE
#define SIZEOF_LONGLONG   NPY_SIZEOF_LONGLONG
#define SIZEOF_HALF       NPY_SIZEOF_HALF
#define BITSOF_BOOL       NPY_BITSOF_BOOL
#define BITSOF_CHAR       NPY_BITSOF_CHAR
#define BITSOF_SHORT      NPY_BITSOF_SHORT
#define BITSOF_INT        NPY_BITSOF_INT
#define BITSOF_LONG       NPY_BITSOF_LONG
#define BITSOF_LONGLONG   NPY_BITSOF_LONGLONG
#define BITSOF_HALF       NPY_BITSOF_HALF
#define BITSOF_FLOAT      NPY_BITSOF_FLOAT
#define BITSOF_DOUBLE     NPY_BITSOF_DOUBLE
#define BITSOF_LONGDOUBLE NPY_BITSOF_LONGDOUBLE
#define BITSOF_DATETIME   NPY_BITSOF_DATETIME
#define BITSOF_TIMEDELTA   NPY_BITSOF_TIMEDELTA

#define PyArray_UCS4 npy_ucs4
#define _pya_malloc PyArray_malloc
#define _pya_free PyArray_free
#define _pya_realloc PyArray_realloc

#define BEGIN_THREADS_DEF NPY_BEGIN_THREADS_DEF
#define BEGIN_THREADS     NPY_BEGIN_THREADS
#define END_THREADS       NPY_END_THREADS
#define ALLOW_C_API_DEF   NPY_ALLOW_C_API_DEF
#define ALLOW_C_API       NPY_ALLOW_C_API
#define DISABLE_C_API     NPY_DISABLE_C_API

#define PY_FAIL NPY_FAIL
#define PY_SUCCEED NPY_SUCCEED

#ifndef TRUE
#define TRUE NPY_TRUE
#endif

#ifndef FALSE
#define FALSE NPY_FALSE
#endif

#define LONGDOUBLE_FMT NPY_LONGDOUBLE_FMT

#define CONTIGUOUS         NPY_CONTIGUOUS
#define C_CONTIGUOUS       NPY_C_CONTIGUOUS
#define FORTRAN            NPY_FORTRAN
#define F_CONTIGUOUS       NPY_F_CONTIGUOUS
#define OWNDATA            NPY_OWNDATA
#define FORCECAST          NPY_FORCECAST
#define ENSURECOPY         NPY_ENSURECOPY
#define ENSUREARRAY        NPY_ENSUREARRAY
#define ELEMENTSTRIDES     NPY_ELEMENTSTRIDES
#define ALIGNED            NPY_ALIGNED
#define NOTSWAPPED         NPY_NOTSWAPPED
#define WRITEABLE          NPY_WRITEABLE
#define UPDATEIFCOPY       NPY_UPDATEIFCOPY
#define ARR_HAS_DESCR      NPY_ARR_HAS_DESCR
#define BEHAVED            NPY_BEHAVED
#define BEHAVED_NS         NPY_BEHAVED_NS
#define CARRAY             NPY_CARRAY
#define CARRAY_RO          NPY_CARRAY_RO
#define FARRAY             NPY_FARRAY
#define FARRAY_RO          NPY_FARRAY_RO
#define DEFAULT            NPY_DEFAULT
#define IN_ARRAY           NPY_IN_ARRAY
#define OUT_ARRAY          NPY_OUT_ARRAY
#define INOUT_ARRAY        NPY_INOUT_ARRAY
#define IN_FARRAY          NPY_IN_FARRAY
#define OUT_FARRAY         NPY_OUT_FARRAY
#define INOUT_FARRAY       NPY_INOUT_FARRAY
#define UPDATE_ALL         NPY_UPDATE_ALL

#define OWN_DATA          NPY_OWNDATA
#define BEHAVED_FLAGS     NPY_BEHAVED
#define BEHAVED_FLAGS_NS  NPY_BEHAVED_NS
#define CARRAY_FLAGS_RO   NPY_CARRAY_RO
#define CARRAY_FLAGS      NPY_CARRAY
#define FARRAY_FLAGS      NPY_FARRAY
#define FARRAY_FLAGS_RO   NPY_FARRAY_RO
#define DEFAULT_FLAGS     NPY_DEFAULT
#define UPDATE_ALL_FLAGS  NPY_UPDATE_ALL_FLAGS

#ifndef MIN
#define MIN PyArray_MIN
#endif
#ifndef MAX
#define MAX PyArray_MAX
#endif
#define MAX_INTP NPY_MAX_INTP
#define MIN_INTP NPY_MIN_INTP
#define MAX_UINTP NPY_MAX_UINTP
#define INTP_FMT NPY_INTP_FMT

#define REFCOUNT PyArray_REFCOUNT
#define MAX_ELSIZE NPY_MAX_ELSIZE

#endif
                                                                                                                  npy_3kcompat.h                                                                                      0100644 0001750 0001750 00000022116 11755722571 042675  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 /*
 * This is a convenience header file providing compatibility utilities
 * for supporting Python 2 and Python 3 in the same code base.
 *
 * If you want to use this for your own projects, it's recommended to make a
 * copy of it. Although the stuff below is unlikely to change, we don't provide
 * strong backwards compatibility guarantees at the moment.
 */

#ifndef _NPY_3KCOMPAT_H_
#define _NPY_3KCOMPAT_H_

#include <Python.h>
#include <stdio.h>

#if PY_VERSION_HEX >= 0x03000000
#ifndef NPY_PY3K
#define NPY_PY3K
#endif
#endif

#include "numpy/npy_common.h"
#include "numpy/ndarrayobject.h"

#ifdef __cplusplus
extern "C" {
#endif

/*
 * PyInt -> PyLong
 */

#if defined(NPY_PY3K)
/* Return True only if the long fits in a C long */
static NPY_INLINE int PyInt_Check(PyObject *op) {
    int overflow = 0;
    if (!PyLong_Check(op)) {
        return 0;
    }
    PyLong_AsLongAndOverflow(op, &overflow);
    return (overflow == 0);
}

#define PyInt_FromLong PyLong_FromLong
#define PyInt_AsLong PyLong_AsLong
#define PyInt_AS_LONG PyLong_AsLong
#define PyInt_AsSsize_t PyLong_AsSsize_t

/* NOTE:
 *
 * Since the PyLong type is very different from the fixed-range PyInt,
 * we don't define PyInt_Type -> PyLong_Type.
 */
#endif /* NPY_PY3K */

/*
 * PyString -> PyBytes
 */

#if defined(NPY_PY3K)

#define PyString_Type PyBytes_Type
#define PyString_Check PyBytes_Check
#define PyStringObject PyBytesObject
#define PyString_FromString PyBytes_FromString
#define PyString_FromStringAndSize PyBytes_FromStringAndSize
#define PyString_AS_STRING PyBytes_AS_STRING
#define PyString_AsStringAndSize PyBytes_AsStringAndSize
#define PyString_FromFormat PyBytes_FromFormat
#define PyString_Concat PyBytes_Concat
#define PyString_ConcatAndDel PyBytes_ConcatAndDel
#define PyString_AsString PyBytes_AsString
#define PyString_GET_SIZE PyBytes_GET_SIZE
#define PyString_Size PyBytes_Size

#define PyUString_Type PyUnicode_Type
#define PyUString_Check PyUnicode_Check
#define PyUStringObject PyUnicodeObject
#define PyUString_FromString PyUnicode_FromString
#define PyUString_FromStringAndSize PyUnicode_FromStringAndSize
#define PyUString_FromFormat PyUnicode_FromFormat
#define PyUString_Concat PyUnicode_Concat2
#define PyUString_ConcatAndDel PyUnicode_ConcatAndDel
#define PyUString_GET_SIZE PyUnicode_GET_SIZE
#define PyUString_Size PyUnicode_Size
#define PyUString_InternFromString PyUnicode_InternFromString
#define PyUString_Format PyUnicode_Format

#else

#define PyBytes_Type PyString_Type
#define PyBytes_Check PyString_Check
#define PyBytesObject PyStringObject
#define PyBytes_FromString PyString_FromString
#define PyBytes_FromStringAndSize PyString_FromStringAndSize
#define PyBytes_AS_STRING PyString_AS_STRING
#define PyBytes_AsStringAndSize PyString_AsStringAndSize
#define PyBytes_FromFormat PyString_FromFormat
#define PyBytes_Concat PyString_Concat
#define PyBytes_ConcatAndDel PyString_ConcatAndDel
#define PyBytes_AsString PyString_AsString
#define PyBytes_GET_SIZE PyString_GET_SIZE
#define PyBytes_Size PyString_Size

#define PyUString_Type PyString_Type
#define PyUString_Check PyString_Check
#define PyUStringObject PyStringObject
#define PyUString_FromString PyString_FromString
#define PyUString_FromStringAndSize PyString_FromStringAndSize
#define PyUString_FromFormat PyString_FromFormat
#define PyUString_Concat PyString_Concat
#define PyUString_ConcatAndDel PyString_ConcatAndDel
#define PyUString_GET_SIZE PyString_GET_SIZE
#define PyUString_Size PyString_Size
#define PyUString_InternFromString PyString_InternFromString
#define PyUString_Format PyString_Format

#endif /* NPY_PY3K */


static NPY_INLINE void
PyUnicode_ConcatAndDel(PyObject **left, PyObject *right)
{
    PyObject *newobj;
    newobj = PyUnicode_Concat(*left, right);
    Py_DECREF(*left);
    Py_DECREF(right);
    *left = newobj;
}

static NPY_INLINE void
PyUnicode_Concat2(PyObject **left, PyObject *right)
{
    PyObject *newobj;
    newobj = PyUnicode_Concat(*left, right);
    Py_DECREF(*left);
    *left = newobj;
}


/*
 * Accessing items of ob_base
 */

#if (PY_VERSION_HEX < 0x02060000)
#define Py_TYPE(o)    (((PyObject*)(o))->ob_type)
#define Py_REFCNT(o)  (((PyObject*)(o))->ob_refcnt)
#define Py_SIZE(o)    (((PyVarObject*)(o))->ob_size)
#endif

/*
 * PyFile_* compatibility
 */
#if defined(NPY_PY3K)

/*
 * Get a FILE* handle to the file represented by the Python object
 */
static NPY_INLINE FILE*
npy_PyFile_Dup(PyObject *file, char *mode)
{
    int fd, fd2;
    PyObject *ret, *os;
    Py_ssize_t pos;
    FILE *handle;
    /* Flush first to ensure things end up in the file in the correct order */
    ret = PyObject_CallMethod(file, "flush", "");
    if (ret == NULL) {
        return NULL;
    }
    Py_DECREF(ret);
    fd = PyObject_AsFileDescriptor(file);
    if (fd == -1) {
        return NULL;
    }
    os = PyImport_ImportModule("os");
    if (os == NULL) {
        return NULL;
    }
    ret = PyObject_CallMethod(os, "dup", "i", fd);
    Py_DECREF(os);
    if (ret == NULL) {
        return NULL;
    }
    fd2 = PyNumber_AsSsize_t(ret, NULL);
    Py_DECREF(ret);
#ifdef _WIN32
    handle = _fdopen(fd2, mode);
#else
    handle = fdopen(fd2, mode);
#endif
    if (handle == NULL) {
        PyErr_SetString(PyExc_IOError,
                        "Getting a FILE* from a Python file object failed");
    }
    ret = PyObject_CallMethod(file, "tell", "");
    if (ret == NULL) {
        fclose(handle);
        return NULL;
    }
    pos = PyNumber_AsSsize_t(ret, PyExc_OverflowError);
    Py_DECREF(ret);
    if (PyErr_Occurred()) {
        fclose(handle);
        return NULL;
    }
    fseek(handle, pos, SEEK_SET);
    return handle;
}

/*
 * Close the dup-ed file handle, and seek the Python one to the current position
 */
static NPY_INLINE int
npy_PyFile_DupClose(PyObject *file, FILE* handle)
{
    PyObject *ret;
    long position;
    position = ftell(handle);
    fclose(handle);

    ret = PyObject_CallMethod(file, "seek", "li", position, 0);
    if (ret == NULL) {
        return -1;
    }
    Py_DECREF(ret);
    return 0;
}

static NPY_INLINE int
npy_PyFile_Check(PyObject *file)
{
    int fd;
    fd = PyObject_AsFileDescriptor(file);
    if (fd == -1) {
        PyErr_Clear();
        return 0;
    }
    return 1;
}

#else

#define npy_PyFile_Dup(file, mode) PyFile_AsFile(file)
#define npy_PyFile_DupClose(file, handle) (0)
#define npy_PyFile_Check PyFile_Check

#endif

static NPY_INLINE PyObject*
npy_PyFile_OpenFile(PyObject *filename, char *mode)
{
    PyObject *open;
    open = PyDict_GetItemString(PyEval_GetBuiltins(), "open");
    if (open == NULL) {
        return NULL;
    }
    return PyObject_CallFunction(open, "Os", filename, mode);
}

/*
 * PyObject_Cmp
 */
#if defined(NPY_PY3K)
static NPY_INLINE int
PyObject_Cmp(PyObject *i1, PyObject *i2, int *cmp)
{
    int v;
    v = PyObject_RichCompareBool(i1, i2, Py_LT);
    if (v == 0) {
        *cmp = -1;
        return 1;
    }
    else if (v == -1) {
        return -1;
    }

    v = PyObject_RichCompareBool(i1, i2, Py_GT);
    if (v == 0) {
        *cmp = 1;
        return 1;
    }
    else if (v == -1) {
        return -1;
    }

    v = PyObject_RichCompareBool(i1, i2, Py_EQ);
    if (v == 0) {
        *cmp = 0;
        return 1;
    }
    else {
        *cmp = 0;
        return -1;
    }
}
#endif

/*
 * PyCObject functions adapted to PyCapsules.
 *
 * The main job here is to get rid of the improved error handling
 * of PyCapsules. It's a shame...
 */
#if PY_VERSION_HEX >= 0x03000000

static NPY_INLINE PyObject *
NpyCapsule_FromVoidPtr(void *ptr, void (*dtor)(PyObject *))
{
    PyObject *ret = PyCapsule_New(ptr, NULL, dtor);
    if (ret == NULL) {
        PyErr_Clear();
    }
    return ret;
}

static NPY_INLINE PyObject *
NpyCapsule_FromVoidPtrAndDesc(void *ptr, void* context, void (*dtor)(PyObject *))
{
    PyObject *ret = NpyCapsule_FromVoidPtr(ptr, dtor);
    if (ret != NULL && PyCapsule_SetContext(ret, context) != 0) {
        PyErr_Clear();
        Py_DECREF(ret);
        ret = NULL;
    }
    return ret;
}

static NPY_INLINE void *
NpyCapsule_AsVoidPtr(PyObject *obj)
{
    void *ret = PyCapsule_GetPointer(obj, NULL);
    if (ret == NULL) {
        PyErr_Clear();
    }
    return ret;
}

static NPY_INLINE void *
NpyCapsule_GetDesc(PyObject *obj)
{
    return PyCapsule_GetContext(obj);
}

static NPY_INLINE int
NpyCapsule_Check(PyObject *ptr)
{
    return PyCapsule_CheckExact(ptr);
}

static void
simple_capsule_dtor(PyObject *cap)
{
    PyArray_free(PyCapsule_GetPointer(cap, NULL));
}

#else

static NPY_INLINE PyObject *
NpyCapsule_FromVoidPtr(void *ptr, void (*dtor)(void *))
{
    return PyCObject_FromVoidPtr(ptr, dtor);
}

static NPY_INLINE PyObject *
NpyCapsule_FromVoidPtrAndDesc(void *ptr, void* context,
        void (*dtor)(void *, void *))
{
    return PyCObject_FromVoidPtrAndDesc(ptr, context, dtor);
}

static NPY_INLINE void *
NpyCapsule_AsVoidPtr(PyObject *ptr)
{
    return PyCObject_AsVoidPtr(ptr);
}

static NPY_INLINE void *
NpyCapsule_GetDesc(PyObject *obj)
{
    return PyCObject_GetDesc(obj);
}

static NPY_INLINE int
NpyCapsule_Check(PyObject *ptr)
{
    return PyCObject_Check(ptr);
}

static void
simple_capsule_dtor(void *ptr)
{
    PyArray_free(ptr);
}

#endif

#ifdef __cplusplus
}
#endif

#endif /* _NPY_3KCOMPAT_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                  npy_common.h                                                                                        0100644 0001750 0001750 00000071341 11755722571 042450  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef _NPY_COMMON_H_
#define _NPY_COMMON_H_

/* This is auto-generated */
#include "numpyconfig.h"

#if defined(_MSC_VER)
        #define NPY_INLINE __inline
#elif defined(__GNUC__)
	#if defined(__STRICT_ANSI__)
		#define NPY_INLINE __inline__
	#else
		#define NPY_INLINE inline
	#endif
#else
        #define NPY_INLINE
#endif

/* enums for detected endianness */
enum {
        NPY_CPU_UNKNOWN_ENDIAN,
        NPY_CPU_LITTLE,
        NPY_CPU_BIG
};

/* Some platforms don't define bool, long long, or long double.
   Handle that here.
*/

#define NPY_BYTE_FMT "hhd"
#define NPY_UBYTE_FMT "hhu"
#define NPY_SHORT_FMT "hd"
#define NPY_USHORT_FMT "hu"
#define NPY_INT_FMT "d"
#define NPY_UINT_FMT "u"
#define NPY_LONG_FMT "ld"
#define NPY_ULONG_FMT "lu"
#define NPY_HALF_FMT "g"
#define NPY_FLOAT_FMT "g"
#define NPY_DOUBLE_FMT "g"


#ifdef PY_LONG_LONG
typedef PY_LONG_LONG npy_longlong;
typedef unsigned PY_LONG_LONG npy_ulonglong;
#  ifdef _MSC_VER
#    define NPY_LONGLONG_FMT         "I64d"
#    define NPY_ULONGLONG_FMT        "I64u"
#    define NPY_LONGLONG_SUFFIX(x)   (x##i64)
#    define NPY_ULONGLONG_SUFFIX(x)  (x##Ui64)
#  else
        /* #define LONGLONG_FMT   "lld"      Another possible variant
           #define ULONGLONG_FMT  "llu"

           #define LONGLONG_FMT   "qd"   -- BSD perhaps?
           #define ULONGLONG_FMT   "qu"
        */
#    define NPY_LONGLONG_FMT         "Ld"
#    define NPY_ULONGLONG_FMT        "Lu"
#    define NPY_LONGLONG_SUFFIX(x)   (x##LL)
#    define NPY_ULONGLONG_SUFFIX(x)  (x##ULL)
#  endif
#else
typedef long npy_longlong;
typedef unsigned long npy_ulonglong;
#  define NPY_LONGLONG_SUFFIX(x)  (x##L)
#  define NPY_ULONGLONG_SUFFIX(x) (x##UL)
#endif


typedef unsigned char npy_bool;
#define NPY_FALSE 0
#define NPY_TRUE 1


#if NPY_SIZEOF_LONGDOUBLE == NPY_SIZEOF_DOUBLE
        typedef double npy_longdouble;
        #define NPY_LONGDOUBLE_FMT "g"
#else
        typedef long double npy_longdouble;
        #define NPY_LONGDOUBLE_FMT "Lg"
#endif

#ifndef Py_USING_UNICODE
#error Must use Python with unicode enabled.
#endif


typedef signed char npy_byte;
typedef unsigned char npy_ubyte;
typedef unsigned short npy_ushort;
typedef unsigned int npy_uint;
typedef unsigned long npy_ulong;

/* These are for completeness */
typedef float npy_float;
typedef double npy_double;
typedef short npy_short;
typedef int npy_int;
typedef long npy_long;

/*
 * Disabling C99 complex usage: a lot of C code in numpy/scipy rely on being
 * able to do .real/.imag. Will have to convert code first.
 */
#if 0
#if defined(NPY_USE_C99_COMPLEX) && defined(NPY_HAVE_COMPLEX_DOUBLE)
typedef complex npy_cdouble;
#else
typedef struct { double real, imag; } npy_cdouble;
#endif

#if defined(NPY_USE_C99_COMPLEX) && defined(NPY_HAVE_COMPLEX_FLOAT)
typedef complex float npy_cfloat;
#else
typedef struct { float real, imag; } npy_cfloat;
#endif

#if defined(NPY_USE_C99_COMPLEX) && defined(NPY_HAVE_COMPLEX_LONG_DOUBLE)
typedef complex long double npy_clongdouble;
#else
typedef struct {npy_longdouble real, imag;} npy_clongdouble;
#endif
#endif
#if NPY_SIZEOF_COMPLEX_DOUBLE != 2 * NPY_SIZEOF_DOUBLE
#error npy_cdouble definition is not compatible with C99 complex definition ! \
        Please contact Numpy maintainers and give detailed information about your \
        compiler and platform
#endif
typedef struct { double real, imag; } npy_cdouble;

#if NPY_SIZEOF_COMPLEX_FLOAT != 2 * NPY_SIZEOF_FLOAT
#error npy_cfloat definition is not compatible with C99 complex definition ! \
        Please contact Numpy maintainers and give detailed information about your \
        compiler and platform
#endif
typedef struct { float real, imag; } npy_cfloat;

#if NPY_SIZEOF_COMPLEX_LONGDOUBLE != 2 * NPY_SIZEOF_LONGDOUBLE
#error npy_clongdouble definition is not compatible with C99 complex definition ! \
        Please contact Numpy maintainers and give detailed information about your \
        compiler and platform
#endif
typedef struct { npy_longdouble real, imag; } npy_clongdouble;

/*
 * numarray-style bit-width typedefs
 */
#define NPY_MAX_INT8 127
#define NPY_MIN_INT8 -128
#define NPY_MAX_UINT8 255
#define NPY_MAX_INT16 32767
#define NPY_MIN_INT16 -32768
#define NPY_MAX_UINT16 65535
#define NPY_MAX_INT32 2147483647
#define NPY_MIN_INT32 (-NPY_MAX_INT32 - 1)
#define NPY_MAX_UINT32 4294967295U
#define NPY_MAX_INT64 NPY_LONGLONG_SUFFIX(9223372036854775807)
#define NPY_MIN_INT64 (-NPY_MAX_INT64 - NPY_LONGLONG_SUFFIX(1))
#define NPY_MAX_UINT64 NPY_ULONGLONG_SUFFIX(18446744073709551615)
#define NPY_MAX_INT128 NPY_LONGLONG_SUFFIX(85070591730234615865843651857942052864)
#define NPY_MIN_INT128 (-NPY_MAX_INT128 - NPY_LONGLONG_SUFFIX(1))
#define NPY_MAX_UINT128 NPY_ULONGLONG_SUFFIX(170141183460469231731687303715884105728)
#define NPY_MAX_INT256 NPY_LONGLONG_SUFFIX(57896044618658097711785492504343953926634992332820282019728792003956564819967)
#define NPY_MIN_INT256 (-NPY_MAX_INT256 - NPY_LONGLONG_SUFFIX(1))
#define NPY_MAX_UINT256 NPY_ULONGLONG_SUFFIX(115792089237316195423570985008687907853269984665640564039457584007913129639935)
#define NPY_MIN_DATETIME NPY_MIN_INT64
#define NPY_MAX_DATETIME NPY_MAX_INT64
#define NPY_MIN_TIMEDELTA NPY_MIN_INT64
#define NPY_MAX_TIMEDELTA NPY_MAX_INT64

        /* Need to find the number of bits for each type and
           make definitions accordingly.

           C states that sizeof(char) == 1 by definition

           So, just using the sizeof keyword won't help.

           It also looks like Python itself uses sizeof(char) quite a
           bit, which by definition should be 1 all the time.

           Idea: Make Use of CHAR_BIT which should tell us how many
           BITS per CHARACTER
        */

        /* Include platform definitions -- These are in the C89/90 standard */
#include <limits.h>
#define NPY_MAX_BYTE SCHAR_MAX
#define NPY_MIN_BYTE SCHAR_MIN
#define NPY_MAX_UBYTE UCHAR_MAX
#define NPY_MAX_SHORT SHRT_MAX
#define NPY_MIN_SHORT SHRT_MIN
#define NPY_MAX_USHORT USHRT_MAX
#define NPY_MAX_INT   INT_MAX
#ifndef INT_MIN
#define INT_MIN (-INT_MAX - 1)
#endif
#define NPY_MIN_INT   INT_MIN
#define NPY_MAX_UINT  UINT_MAX
#define NPY_MAX_LONG  LONG_MAX
#define NPY_MIN_LONG  LONG_MIN
#define NPY_MAX_ULONG  ULONG_MAX

#define NPY_SIZEOF_HALF 2
#define NPY_SIZEOF_DATETIME 8
#define NPY_SIZEOF_TIMEDELTA 8

#define NPY_BITSOF_BOOL (sizeof(npy_bool)*CHAR_BIT)
#define NPY_BITSOF_CHAR CHAR_BIT
#define NPY_BITSOF_SHORT (NPY_SIZEOF_SHORT * CHAR_BIT)
#define NPY_BITSOF_INT (NPY_SIZEOF_INT * CHAR_BIT)
#define NPY_BITSOF_LONG (NPY_SIZEOF_LONG * CHAR_BIT)
#define NPY_BITSOF_LONGLONG (NPY_SIZEOF_LONGLONG * CHAR_BIT)
#define NPY_BITSOF_HALF (NPY_SIZEOF_HALF * CHAR_BIT)
#define NPY_BITSOF_FLOAT (NPY_SIZEOF_FLOAT * CHAR_BIT)
#define NPY_BITSOF_DOUBLE (NPY_SIZEOF_DOUBLE * CHAR_BIT)
#define NPY_BITSOF_LONGDOUBLE (NPY_SIZEOF_LONGDOUBLE * CHAR_BIT)
#define NPY_BITSOF_DATETIME (NPY_SIZEOF_DATETIME * CHAR_BIT)
#define NPY_BITSOF_TIMEDELTA (NPY_SIZEOF_TIMEDELTA * CHAR_BIT)

#if NPY_BITSOF_LONG == 8
#define NPY_INT8 NPY_LONG
#define NPY_UINT8 NPY_ULONG
        typedef long npy_int8;
        typedef unsigned long npy_uint8;
#define PyInt8ScalarObject PyLongScalarObject
#define PyInt8ArrType_Type PyLongArrType_Type
#define PyUInt8ScalarObject PyULongScalarObject
#define PyUInt8ArrType_Type PyULongArrType_Type
#define NPY_INT8_FMT NPY_LONG_FMT
#define NPY_UINT8_FMT NPY_ULONG_FMT
#elif NPY_BITSOF_LONG == 16
#define NPY_INT16 NPY_LONG
#define NPY_UINT16 NPY_ULONG
        typedef long npy_int16;
        typedef unsigned long npy_uint16;
#define PyInt16ScalarObject PyLongScalarObject
#define PyInt16ArrType_Type PyLongArrType_Type
#define PyUInt16ScalarObject PyULongScalarObject
#define PyUInt16ArrType_Type PyULongArrType_Type
#define NPY_INT16_FMT NPY_LONG_FMT
#define NPY_UINT16_FMT NPY_ULONG_FMT
#elif NPY_BITSOF_LONG == 32
#define NPY_INT32 NPY_LONG
#define NPY_UINT32 NPY_ULONG
        typedef long npy_int32;
        typedef unsigned long npy_uint32;
        typedef unsigned long npy_ucs4;
#define PyInt32ScalarObject PyLongScalarObject
#define PyInt32ArrType_Type PyLongArrType_Type
#define PyUInt32ScalarObject PyULongScalarObject
#define PyUInt32ArrType_Type PyULongArrType_Type
#define NPY_INT32_FMT NPY_LONG_FMT
#define NPY_UINT32_FMT NPY_ULONG_FMT
#elif NPY_BITSOF_LONG == 64
#define NPY_INT64 NPY_LONG
#define NPY_UINT64 NPY_ULONG
        typedef long npy_int64;
        typedef unsigned long npy_uint64;
#define PyInt64ScalarObject PyLongScalarObject
#define PyInt64ArrType_Type PyLongArrType_Type
#define PyUInt64ScalarObject PyULongScalarObject
#define PyUInt64ArrType_Type PyULongArrType_Type
#define NPY_INT64_FMT NPY_LONG_FMT
#define NPY_UINT64_FMT NPY_ULONG_FMT
#define MyPyLong_FromInt64 PyLong_FromLong
#define MyPyLong_AsInt64 PyLong_AsLong
#elif NPY_BITSOF_LONG == 128
#define NPY_INT128 NPY_LONG
#define NPY_UINT128 NPY_ULONG
        typedef long npy_int128;
        typedef unsigned long npy_uint128;
#define PyInt128ScalarObject PyLongScalarObject
#define PyInt128ArrType_Type PyLongArrType_Type
#define PyUInt128ScalarObject PyULongScalarObject
#define PyUInt128ArrType_Type PyULongArrType_Type
#define NPY_INT128_FMT NPY_LONG_FMT
#define NPY_UINT128_FMT NPY_ULONG_FMT
#endif

#if NPY_BITSOF_LONGLONG == 8
#  ifndef NPY_INT8
#    define NPY_INT8 NPY_LONGLONG
#    define NPY_UINT8 NPY_ULONGLONG
        typedef npy_longlong npy_int8;
        typedef npy_ulonglong npy_uint8;
#    define PyInt8ScalarObject PyLongLongScalarObject
#    define PyInt8ArrType_Type PyLongLongArrType_Type
#    define PyUInt8ScalarObject PyULongLongScalarObject
#    define PyUInt8ArrType_Type PyULongLongArrType_Type
#define NPY_INT8_FMT NPY_LONGLONG_FMT
#define NPY_UINT8_FMT NPY_ULONGLONG_FMT
#  endif
#  define NPY_MAX_LONGLONG NPY_MAX_INT8
#  define NPY_MIN_LONGLONG NPY_MIN_INT8
#  define NPY_MAX_ULONGLONG NPY_MAX_UINT8
#elif NPY_BITSOF_LONGLONG == 16
#  ifndef NPY_INT16
#    define NPY_INT16 NPY_LONGLONG
#    define NPY_UINT16 NPY_ULONGLONG
        typedef npy_longlong npy_int16;
        typedef npy_ulonglong npy_uint16;
#    define PyInt16ScalarObject PyLongLongScalarObject
#    define PyInt16ArrType_Type PyLongLongArrType_Type
#    define PyUInt16ScalarObject PyULongLongScalarObject
#    define PyUInt16ArrType_Type PyULongLongArrType_Type
#define NPY_INT16_FMT NPY_LONGLONG_FMT
#define NPY_UINT16_FMT NPY_ULONGLONG_FMT
#  endif
#  define NPY_MAX_LONGLONG NPY_MAX_INT16
#  define NPY_MIN_LONGLONG NPY_MIN_INT16
#  define NPY_MAX_ULONGLONG NPY_MAX_UINT16
#elif NPY_BITSOF_LONGLONG == 32
#  ifndef NPY_INT32
#    define NPY_INT32 NPY_LONGLONG
#    define NPY_UINT32 NPY_ULONGLONG
        typedef npy_longlong npy_int32;
        typedef npy_ulonglong npy_uint32;
        typedef npy_ulonglong npy_ucs4;
#    define PyInt32ScalarObject PyLongLongScalarObject
#    define PyInt32ArrType_Type PyLongLongArrType_Type
#    define PyUInt32ScalarObject PyULongLongScalarObject
#    define PyUInt32ArrType_Type PyULongLongArrType_Type
#define NPY_INT32_FMT NPY_LONGLONG_FMT
#define NPY_UINT32_FMT NPY_ULONGLONG_FMT
#  endif
#  define NPY_MAX_LONGLONG NPY_MAX_INT32
#  define NPY_MIN_LONGLONG NPY_MIN_INT32
#  define NPY_MAX_ULONGLONG NPY_MAX_UINT32
#elif NPY_BITSOF_LONGLONG == 64
#  ifndef NPY_INT64
#    define NPY_INT64 NPY_LONGLONG
#    define NPY_UINT64 NPY_ULONGLONG
        typedef npy_longlong npy_int64;
        typedef npy_ulonglong npy_uint64;
#    define PyInt64ScalarObject PyLongLongScalarObject
#    define PyInt64ArrType_Type PyLongLongArrType_Type
#    define PyUInt64ScalarObject PyULongLongScalarObject
#    define PyUInt64ArrType_Type PyULongLongArrType_Type
#define NPY_INT64_FMT NPY_LONGLONG_FMT
#define NPY_UINT64_FMT NPY_ULONGLONG_FMT
#    define MyPyLong_FromInt64 PyLong_FromLongLong
#    define MyPyLong_AsInt64 PyLong_AsLongLong
#  endif
#  define NPY_MAX_LONGLONG NPY_MAX_INT64
#  define NPY_MIN_LONGLONG NPY_MIN_INT64
#  define NPY_MAX_ULONGLONG NPY_MAX_UINT64
#elif NPY_BITSOF_LONGLONG == 128
#  ifndef NPY_INT128
#    define NPY_INT128 NPY_LONGLONG
#    define NPY_UINT128 NPY_ULONGLONG
        typedef npy_longlong npy_int128;
        typedef npy_ulonglong npy_uint128;
#    define PyInt128ScalarObject PyLongLongScalarObject
#    define PyInt128ArrType_Type PyLongLongArrType_Type
#    define PyUInt128ScalarObject PyULongLongScalarObject
#    define PyUInt128ArrType_Type PyULongLongArrType_Type
#define NPY_INT128_FMT NPY_LONGLONG_FMT
#define NPY_UINT128_FMT NPY_ULONGLONG_FMT
#  endif
#  define NPY_MAX_LONGLONG NPY_MAX_INT128
#  define NPY_MIN_LONGLONG NPY_MIN_INT128
#  define NPY_MAX_ULONGLONG NPY_MAX_UINT128
#elif NPY_BITSOF_LONGLONG == 256
#  define NPY_INT256 NPY_LONGLONG
#  define NPY_UINT256 NPY_ULONGLONG
        typedef npy_longlong npy_int256;
        typedef npy_ulonglong npy_uint256;
#  define PyInt256ScalarObject PyLongLongScalarObject
#  define PyInt256ArrType_Type PyLongLongArrType_Type
#  define PyUInt256ScalarObject PyULongLongScalarObject
#  define PyUInt256ArrType_Type PyULongLongArrType_Type
#define NPY_INT256_FMT NPY_LONGLONG_FMT
#define NPY_UINT256_FMT NPY_ULONGLONG_FMT
#  define NPY_MAX_LONGLONG NPY_MAX_INT256
#  define NPY_MIN_LONGLONG NPY_MIN_INT256
#  define NPY_MAX_ULONGLONG NPY_MAX_UINT256
#endif

#if NPY_BITSOF_INT == 8
#ifndef NPY_INT8
#define NPY_INT8 NPY_INT
#define NPY_UINT8 NPY_UINT
        typedef int npy_int8;
        typedef unsigned int npy_uint8;
#    define PyInt8ScalarObject PyIntScalarObject
#    define PyInt8ArrType_Type PyIntArrType_Type
#    define PyUInt8ScalarObject PyUIntScalarObject
#    define PyUInt8ArrType_Type PyUIntArrType_Type
#define NPY_INT8_FMT NPY_INT_FMT
#define NPY_UINT8_FMT NPY_UINT_FMT
#endif
#elif NPY_BITSOF_INT == 16
#ifndef NPY_INT16
#define NPY_INT16 NPY_INT
#define NPY_UINT16 NPY_UINT
        typedef int npy_int16;
        typedef unsigned int npy_uint16;
#    define PyInt16ScalarObject PyIntScalarObject
#    define PyInt16ArrType_Type PyIntArrType_Type
#    define PyUInt16ScalarObject PyIntUScalarObject
#    define PyUInt16ArrType_Type PyIntUArrType_Type
#define NPY_INT16_FMT NPY_INT_FMT
#define NPY_UINT16_FMT NPY_UINT_FMT
#endif
#elif NPY_BITSOF_INT == 32
#ifndef NPY_INT32
#define NPY_INT32 NPY_INT
#define NPY_UINT32 NPY_UINT
        typedef int npy_int32;
        typedef unsigned int npy_uint32;
        typedef unsigned int npy_ucs4;
#    define PyInt32ScalarObject PyIntScalarObject
#    define PyInt32ArrType_Type PyIntArrType_Type
#    define PyUInt32ScalarObject PyUIntScalarObject
#    define PyUInt32ArrType_Type PyUIntArrType_Type
#define NPY_INT32_FMT NPY_INT_FMT
#define NPY_UINT32_FMT NPY_UINT_FMT
#endif
#elif NPY_BITSOF_INT == 64
#ifndef NPY_INT64
#define NPY_INT64 NPY_INT
#define NPY_UINT64 NPY_UINT
        typedef int npy_int64;
        typedef unsigned int npy_uint64;
#    define PyInt64ScalarObject PyIntScalarObject
#    define PyInt64ArrType_Type PyIntArrType_Type
#    define PyUInt64ScalarObject PyUIntScalarObject
#    define PyUInt64ArrType_Type PyUIntArrType_Type
#define NPY_INT64_FMT NPY_INT_FMT
#define NPY_UINT64_FMT NPY_UINT_FMT
#    define MyPyLong_FromInt64 PyLong_FromLong
#    define MyPyLong_AsInt64 PyLong_AsLong
#endif
#elif NPY_BITSOF_INT == 128
#ifndef NPY_INT128
#define NPY_INT128 NPY_INT
#define NPY_UINT128 NPY_UINT
        typedef int npy_int128;
        typedef unsigned int npy_uint128;
#    define PyInt128ScalarObject PyIntScalarObject
#    define PyInt128ArrType_Type PyIntArrType_Type
#    define PyUInt128ScalarObject PyUIntScalarObject
#    define PyUInt128ArrType_Type PyUIntArrType_Type
#define NPY_INT128_FMT NPY_INT_FMT
#define NPY_UINT128_FMT NPY_UINT_FMT
#endif
#endif

#if NPY_BITSOF_SHORT == 8
#ifndef NPY_INT8
#define NPY_INT8 NPY_SHORT
#define NPY_UINT8 NPY_USHORT
        typedef short npy_int8;
        typedef unsigned short npy_uint8;
#    define PyInt8ScalarObject PyShortScalarObject
#    define PyInt8ArrType_Type PyShortArrType_Type
#    define PyUInt8ScalarObject PyUShortScalarObject
#    define PyUInt8ArrType_Type PyUShortArrType_Type
#define NPY_INT8_FMT NPY_SHORT_FMT
#define NPY_UINT8_FMT NPY_USHORT_FMT
#endif
#elif NPY_BITSOF_SHORT == 16
#ifndef NPY_INT16
#define NPY_INT16 NPY_SHORT
#define NPY_UINT16 NPY_USHORT
        typedef short npy_int16;
        typedef unsigned short npy_uint16;
#    define PyInt16ScalarObject PyShortScalarObject
#    define PyInt16ArrType_Type PyShortArrType_Type
#    define PyUInt16ScalarObject PyUShortScalarObject
#    define PyUInt16ArrType_Type PyUShortArrType_Type
#define NPY_INT16_FMT NPY_SHORT_FMT
#define NPY_UINT16_FMT NPY_USHORT_FMT
#endif
#elif NPY_BITSOF_SHORT == 32
#ifndef NPY_INT32
#define NPY_INT32 NPY_SHORT
#define NPY_UINT32 NPY_USHORT
        typedef short npy_int32;
        typedef unsigned short npy_uint32;
        typedef unsigned short npy_ucs4;
#    define PyInt32ScalarObject PyShortScalarObject
#    define PyInt32ArrType_Type PyShortArrType_Type
#    define PyUInt32ScalarObject PyUShortScalarObject
#    define PyUInt32ArrType_Type PyUShortArrType_Type
#define NPY_INT32_FMT NPY_SHORT_FMT
#define NPY_UINT32_FMT NPY_USHORT_FMT
#endif
#elif NPY_BITSOF_SHORT == 64
#ifndef NPY_INT64
#define NPY_INT64 NPY_SHORT
#define NPY_UINT64 NPY_USHORT
        typedef short npy_int64;
        typedef unsigned short npy_uint64;
#    define PyInt64ScalarObject PyShortScalarObject
#    define PyInt64ArrType_Type PyShortArrType_Type
#    define PyUInt64ScalarObject PyUShortScalarObject
#    define PyUInt64ArrType_Type PyUShortArrType_Type
#define NPY_INT64_FMT NPY_SHORT_FMT
#define NPY_UINT64_FMT NPY_USHORT_FMT
#    define MyPyLong_FromInt64 PyLong_FromLong
#    define MyPyLong_AsInt64 PyLong_AsLong
#endif
#elif NPY_BITSOF_SHORT == 128
#ifndef NPY_INT128
#define NPY_INT128 NPY_SHORT
#define NPY_UINT128 NPY_USHORT
        typedef short npy_int128;
        typedef unsigned short npy_uint128;
#    define PyInt128ScalarObject PyShortScalarObject
#    define PyInt128ArrType_Type PyShortArrType_Type
#    define PyUInt128ScalarObject PyUShortScalarObject
#    define PyUInt128ArrType_Type PyUShortArrType_Type
#define NPY_INT128_FMT NPY_SHORT_FMT
#define NPY_UINT128_FMT NPY_USHORT_FMT
#endif
#endif


#if NPY_BITSOF_CHAR == 8
#ifndef NPY_INT8
#define NPY_INT8 NPY_BYTE
#define NPY_UINT8 NPY_UBYTE
        typedef signed char npy_int8;
        typedef unsigned char npy_uint8;
#    define PyInt8ScalarObject PyByteScalarObject
#    define PyInt8ArrType_Type PyByteArrType_Type
#    define PyUInt8ScalarObject PyUByteScalarObject
#    define PyUInt8ArrType_Type PyUByteArrType_Type
#define NPY_INT8_FMT NPY_BYTE_FMT
#define NPY_UINT8_FMT NPY_UBYTE_FMT
#endif
#elif NPY_BITSOF_CHAR == 16
#ifndef NPY_INT16
#define NPY_INT16 NPY_BYTE
#define NPY_UINT16 NPY_UBYTE
        typedef signed char npy_int16;
        typedef unsigned char npy_uint16;
#    define PyInt16ScalarObject PyByteScalarObject
#    define PyInt16ArrType_Type PyByteArrType_Type
#    define PyUInt16ScalarObject PyUByteScalarObject
#    define PyUInt16ArrType_Type PyUByteArrType_Type
#define NPY_INT16_FMT NPY_BYTE_FMT
#define NPY_UINT16_FMT NPY_UBYTE_FMT
#endif
#elif NPY_BITSOF_CHAR == 32
#ifndef NPY_INT32
#define NPY_INT32 NPY_BYTE
#define NPY_UINT32 NPY_UBYTE
        typedef signed char npy_int32;
        typedef unsigned char npy_uint32;
        typedef unsigned char npy_ucs4;
#    define PyInt32ScalarObject PyByteScalarObject
#    define PyInt32ArrType_Type PyByteArrType_Type
#    define PyUInt32ScalarObject PyUByteScalarObject
#    define PyUInt32ArrType_Type PyUByteArrType_Type
#define NPY_INT32_FMT NPY_BYTE_FMT
#define NPY_UINT32_FMT NPY_UBYTE_FMT
#endif
#elif NPY_BITSOF_CHAR == 64
#ifndef NPY_INT64
#define NPY_INT64 NPY_BYTE
#define NPY_UINT64 NPY_UBYTE
        typedef signed char npy_int64;
        typedef unsigned char npy_uint64;
#    define PyInt64ScalarObject PyByteScalarObject
#    define PyInt64ArrType_Type PyByteArrType_Type
#    define PyUInt64ScalarObject PyUByteScalarObject
#    define PyUInt64ArrType_Type PyUByteArrType_Type
#define NPY_INT64_FMT NPY_BYTE_FMT
#define NPY_UINT64_FMT NPY_UBYTE_FMT
#    define MyPyLong_FromInt64 PyLong_FromLong
#    define MyPyLong_AsInt64 PyLong_AsLong
#endif
#elif NPY_BITSOF_CHAR == 128
#ifndef NPY_INT128
#define NPY_INT128 NPY_BYTE
#define NPY_UINT128 NPY_UBYTE
        typedef signed char npy_int128;
        typedef unsigned char npy_uint128;
#    define PyInt128ScalarObject PyByteScalarObject
#    define PyInt128ArrType_Type PyByteArrType_Type
#    define PyUInt128ScalarObject PyUByteScalarObject
#    define PyUInt128ArrType_Type PyUByteArrType_Type
#define NPY_INT128_FMT NPY_BYTE_FMT
#define NPY_UINT128_FMT NPY_UBYTE_FMT
#endif
#endif



#if NPY_BITSOF_DOUBLE == 32
#ifndef NPY_FLOAT32
#define NPY_FLOAT32 NPY_DOUBLE
#define NPY_COMPLEX64 NPY_CDOUBLE
        typedef double npy_float32;
        typedef npy_cdouble npy_complex64;
#    define PyFloat32ScalarObject PyDoubleScalarObject
#    define PyComplex64ScalarObject PyCDoubleScalarObject
#    define PyFloat32ArrType_Type PyDoubleArrType_Type
#    define PyComplex64ArrType_Type PyCDoubleArrType_Type
#define NPY_FLOAT32_FMT NPY_DOUBLE_FMT
#define NPY_COMPLEX64_FMT NPY_CDOUBLE_FMT
#endif
#elif NPY_BITSOF_DOUBLE == 64
#ifndef NPY_FLOAT64
#define NPY_FLOAT64 NPY_DOUBLE
#define NPY_COMPLEX128 NPY_CDOUBLE
        typedef double npy_float64;
        typedef npy_cdouble npy_complex128;
#    define PyFloat64ScalarObject PyDoubleScalarObject
#    define PyComplex128ScalarObject PyCDoubleScalarObject
#    define PyFloat64ArrType_Type PyDoubleArrType_Type
#    define PyComplex128ArrType_Type PyCDoubleArrType_Type
#define NPY_FLOAT64_FMT NPY_DOUBLE_FMT
#define NPY_COMPLEX128_FMT NPY_CDOUBLE_FMT
#endif
#elif NPY_BITSOF_DOUBLE == 80
#ifndef NPY_FLOAT80
#define NPY_FLOAT80 NPY_DOUBLE
#define NPY_COMPLEX160 NPY_CDOUBLE
        typedef double npy_float80;
        typedef npy_cdouble npy_complex160;
#    define PyFloat80ScalarObject PyDoubleScalarObject
#    define PyComplex160ScalarObject PyCDoubleScalarObject
#    define PyFloat80ArrType_Type PyDoubleArrType_Type
#    define PyComplex160ArrType_Type PyCDoubleArrType_Type
#define NPY_FLOAT80_FMT NPY_DOUBLE_FMT
#define NPY_COMPLEX160_FMT NPY_CDOUBLE_FMT
#endif
#elif NPY_BITSOF_DOUBLE == 96
#ifndef NPY_FLOAT96
#define NPY_FLOAT96 NPY_DOUBLE
#define NPY_COMPLEX192 NPY_CDOUBLE
        typedef double npy_float96;
        typedef npy_cdouble npy_complex192;
#    define PyFloat96ScalarObject PyDoubleScalarObject
#    define PyComplex192ScalarObject PyCDoubleScalarObject
#    define PyFloat96ArrType_Type PyDoubleArrType_Type
#    define PyComplex192ArrType_Type PyCDoubleArrType_Type
#define NPY_FLOAT96_FMT NPY_DOUBLE_FMT
#define NPY_COMPLEX192_FMT NPY_CDOUBLE_FMT
#endif
#elif NPY_BITSOF_DOUBLE == 128
#ifndef NPY_FLOAT128
#define NPY_FLOAT128 NPY_DOUBLE
#define NPY_COMPLEX256 NPY_CDOUBLE
        typedef double npy_float128;
        typedef npy_cdouble npy_complex256;
#    define PyFloat128ScalarObject PyDoubleScalarObject
#    define PyComplex256ScalarObject PyCDoubleScalarObject
#    define PyFloat128ArrType_Type PyDoubleArrType_Type
#    define PyComplex256ArrType_Type PyCDoubleArrType_Type
#define NPY_FLOAT128_FMT NPY_DOUBLE_FMT
#define NPY_COMPLEX256_FMT NPY_CDOUBLE_FMT
#endif
#endif



#if NPY_BITSOF_FLOAT == 32
#ifndef NPY_FLOAT32
#define NPY_FLOAT32 NPY_FLOAT
#define NPY_COMPLEX64 NPY_CFLOAT
        typedef float npy_float32;
        typedef npy_cfloat npy_complex64;
#    define PyFloat32ScalarObject PyFloatScalarObject
#    define PyComplex64ScalarObject PyCFloatScalarObject
#    define PyFloat32ArrType_Type PyFloatArrType_Type
#    define PyComplex64ArrType_Type PyCFloatArrType_Type
#define NPY_FLOAT32_FMT NPY_FLOAT_FMT
#define NPY_COMPLEX64_FMT NPY_CFLOAT_FMT
#endif
#elif NPY_BITSOF_FLOAT == 64
#ifndef NPY_FLOAT64
#define NPY_FLOAT64 NPY_FLOAT
#define NPY_COMPLEX128 NPY_CFLOAT
        typedef float npy_float64;
        typedef npy_cfloat npy_complex128;
#    define PyFloat64ScalarObject PyFloatScalarObject
#    define PyComplex128ScalarObject PyCFloatScalarObject
#    define PyFloat64ArrType_Type PyFloatArrType_Type
#    define PyComplex128ArrType_Type PyCFloatArrType_Type
#define NPY_FLOAT64_FMT NPY_FLOAT_FMT
#define NPY_COMPLEX128_FMT NPY_CFLOAT_FMT
#endif
#elif NPY_BITSOF_FLOAT == 80
#ifndef NPY_FLOAT80
#define NPY_FLOAT80 NPY_FLOAT
#define NPY_COMPLEX160 NPY_CFLOAT
        typedef float npy_float80;
        typedef npy_cfloat npy_complex160;
#    define PyFloat80ScalarObject PyFloatScalarObject
#    define PyComplex160ScalarObject PyCFloatScalarObject
#    define PyFloat80ArrType_Type PyFloatArrType_Type
#    define PyComplex160ArrType_Type PyCFloatArrType_Type
#define NPY_FLOAT80_FMT NPY_FLOAT_FMT
#define NPY_COMPLEX160_FMT NPY_CFLOAT_FMT
#endif
#elif NPY_BITSOF_FLOAT == 96
#ifndef NPY_FLOAT96
#define NPY_FLOAT96 NPY_FLOAT
#define NPY_COMPLEX192 NPY_CFLOAT
        typedef float npy_float96;
        typedef npy_cfloat npy_complex192;
#    define PyFloat96ScalarObject PyFloatScalarObject
#    define PyComplex192ScalarObject PyCFloatScalarObject
#    define PyFloat96ArrType_Type PyFloatArrType_Type
#    define PyComplex192ArrType_Type PyCFloatArrType_Type
#define NPY_FLOAT96_FMT NPY_FLOAT_FMT
#define NPY_COMPLEX192_FMT NPY_CFLOAT_FMT
#endif
#elif NPY_BITSOF_FLOAT == 128
#ifndef NPY_FLOAT128
#define NPY_FLOAT128 NPY_FLOAT
#define NPY_COMPLEX256 NPY_CFLOAT
        typedef float npy_float128;
        typedef npy_cfloat npy_complex256;
#    define PyFloat128ScalarObject PyFloatScalarObject
#    define PyComplex256ScalarObject PyCFloatScalarObject
#    define PyFloat128ArrType_Type PyFloatArrType_Type
#    define PyComplex256ArrType_Type PyCFloatArrType_Type
#define NPY_FLOAT128_FMT NPY_FLOAT_FMT
#define NPY_COMPLEX256_FMT NPY_CFLOAT_FMT
#endif
#endif

/* half/float16 isn't a floating-point type in C */
#define NPY_FLOAT16 NPY_HALF
typedef npy_uint16 npy_half;
typedef npy_half npy_float16;

#if NPY_BITSOF_LONGDOUBLE == 32
#ifndef NPY_FLOAT32
#define NPY_FLOAT32 NPY_LONGDOUBLE
#define NPY_COMPLEX64 NPY_CLONGDOUBLE
        typedef npy_longdouble npy_float32;
        typedef npy_clongdouble npy_complex64;
#    define PyFloat32ScalarObject PyLongDoubleScalarObject
#    define PyComplex64ScalarObject PyCLongDoubleScalarObject
#    define PyFloat32ArrType_Type PyLongDoubleArrType_Type
#    define PyComplex64ArrType_Type PyCLongDoubleArrType_Type
#define NPY_FLOAT32_FMT NPY_LONGDOUBLE_FMT
#define NPY_COMPLEX64_FMT NPY_CLONGDOUBLE_FMT
#endif
#elif NPY_BITSOF_LONGDOUBLE == 64
#ifndef NPY_FLOAT64
#define NPY_FLOAT64 NPY_LONGDOUBLE
#define NPY_COMPLEX128 NPY_CLONGDOUBLE
        typedef npy_longdouble npy_float64;
        typedef npy_clongdouble npy_complex128;
#    define PyFloat64ScalarObject PyLongDoubleScalarObject
#    define PyComplex128ScalarObject PyCLongDoubleScalarObject
#    define PyFloat64ArrType_Type PyLongDoubleArrType_Type
#    define PyComplex128ArrType_Type PyCLongDoubleArrType_Type
#define NPY_FLOAT64_FMT NPY_LONGDOUBLE_FMT
#define NPY_COMPLEX128_FMT NPY_CLONGDOUBLE_FMT
#endif
#elif NPY_BITSOF_LONGDOUBLE == 80
#ifndef NPY_FLOAT80
#define NPY_FLOAT80 NPY_LONGDOUBLE
#define NPY_COMPLEX160 NPY_CLONGDOUBLE
        typedef npy_longdouble npy_float80;
        typedef npy_clongdouble npy_complex160;
#    define PyFloat80ScalarObject PyLongDoubleScalarObject
#    define PyComplex160ScalarObject PyCLongDoubleScalarObject
#    define PyFloat80ArrType_Type PyLongDoubleArrType_Type
#    define PyComplex160ArrType_Type PyCLongDoubleArrType_Type
#define NPY_FLOAT80_FMT NPY_LONGDOUBLE_FMT
#define NPY_COMPLEX160_FMT NPY_CLONGDOUBLE_FMT
#endif
#elif NPY_BITSOF_LONGDOUBLE == 96
#ifndef NPY_FLOAT96
#define NPY_FLOAT96 NPY_LONGDOUBLE
#define NPY_COMPLEX192 NPY_CLONGDOUBLE
        typedef npy_longdouble npy_float96;
        typedef npy_clongdouble npy_complex192;
#    define PyFloat96ScalarObject PyLongDoubleScalarObject
#    define PyComplex192ScalarObject PyCLongDoubleScalarObject
#    define PyFloat96ArrType_Type PyLongDoubleArrType_Type
#    define PyComplex192ArrType_Type PyCLongDoubleArrType_Type
#define NPY_FLOAT96_FMT NPY_LONGDOUBLE_FMT
#define NPY_COMPLEX192_FMT NPY_CLONGDOUBLE_FMT
#endif
#elif NPY_BITSOF_LONGDOUBLE == 128
#ifndef NPY_FLOAT128
#define NPY_FLOAT128 NPY_LONGDOUBLE
#define NPY_COMPLEX256 NPY_CLONGDOUBLE
        typedef npy_longdouble npy_float128;
        typedef npy_clongdouble npy_complex256;
#    define PyFloat128ScalarObject PyLongDoubleScalarObject
#    define PyComplex256ScalarObject PyCLongDoubleScalarObject
#    define PyFloat128ArrType_Type PyLongDoubleArrType_Type
#    define PyComplex256ArrType_Type PyCLongDoubleArrType_Type
#define NPY_FLOAT128_FMT NPY_LONGDOUBLE_FMT
#define NPY_COMPLEX256_FMT NPY_CLONGDOUBLE_FMT
#endif
#elif NPY_BITSOF_LONGDOUBLE == 256
#define NPY_FLOAT256 NPY_LONGDOUBLE
#define NPY_COMPLEX512 NPY_CLONGDOUBLE
        typedef npy_longdouble npy_float256;
        typedef npy_clongdouble npy_complex512;
#    define PyFloat256ScalarObject PyLongDoubleScalarObject
#    define PyComplex512ScalarObject PyCLongDoubleScalarObject
#    define PyFloat256ArrType_Type PyLongDoubleArrType_Type
#    define PyComplex512ArrType_Type PyCLongDoubleArrType_Type
#define NPY_FLOAT256_FMT NPY_LONGDOUBLE_FMT
#define NPY_COMPLEX512_FMT NPY_CLONGDOUBLE_FMT
#endif

/* datetime typedefs */
typedef npy_int64 npy_timedelta;
typedef npy_int64 npy_datetime;
#define NPY_DATETIME_FMT NPY_INT64_FMT
#define NPY_TIMEDELTA_FMT NPY_INT64_FMT

/* End of typedefs for numarray style bit-width names */

#endif

                                                                                                                                                                                                                                                                                               npy_cpu.h                                                                                           0100644 0001750 0001750 00000007201 11750317130 041723  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 /*
 * This set (target) cpu specific macros:
 *      - Possible values:
 *              NPY_CPU_X86
 *              NPY_CPU_AMD64
 *              NPY_CPU_PPC
 *              NPY_CPU_PPC64
 *              NPY_CPU_SPARC
 *              NPY_CPU_S390
 *              NPY_CPU_IA64
 *              NPY_CPU_HPPA
 *              NPY_CPU_ALPHA
 *              NPY_CPU_ARMEL
 *              NPY_CPU_ARMEB
 *              NPY_CPU_SH_LE
 *              NPY_CPU_SH_BE
 */
#ifndef _NPY_CPUARCH_H_
#define _NPY_CPUARCH_H_

#include "numpyconfig.h"

#if defined( __i386__ ) || defined(i386) || defined(_M_IX86)
    /*
     * __i386__ is defined by gcc and Intel compiler on Linux,
     * _M_IX86 by VS compiler,
     * i386 by Sun compilers on opensolaris at least
     */
    #define NPY_CPU_X86
#elif defined(__x86_64__) || defined(__amd64__) || defined(__x86_64) || defined(_M_AMD64)
    /*
     * both __x86_64__ and __amd64__ are defined by gcc
     * __x86_64 defined by sun compiler on opensolaris at least
     * _M_AMD64 defined by MS compiler
     */
    #define NPY_CPU_AMD64
#elif defined(__ppc__) || defined(__powerpc__) || defined(_ARCH_PPC)
    /*
     * __ppc__ is defined by gcc, I remember having seen __powerpc__ once,
     * but can't find it ATM
     * _ARCH_PPC is used by at least gcc on AIX
     */
    #define NPY_CPU_PPC
#elif defined(__ppc64__)
    #define NPY_CPU_PPC64
#elif defined(__sparc__) || defined(__sparc)
    /* __sparc__ is defined by gcc and Forte (e.g. Sun) compilers */
    #define NPY_CPU_SPARC
#elif defined(__s390__)
    #define NPY_CPU_S390
#elif defined(__ia64)
    #define NPY_CPU_IA64
#elif defined(__hppa)
    #define NPY_CPU_HPPA
#elif defined(__alpha__)
    #define NPY_CPU_ALPHA
#elif defined(__arm__) && defined(__ARMEL__)
    #define NPY_CPU_ARMEL
#elif defined(__arm__) && defined(__ARMEB__)
    #define NPY_CPU_ARMEB
#elif defined(__sh__) && defined(__LITTLE_ENDIAN__)
    #define NPY_CPU_SH_LE
#elif defined(__sh__) && defined(__BIG_ENDIAN__)
    #define NPY_CPU_SH_BE
#elif defined(__MIPSEL__)
    #define NPY_CPU_MIPSEL
#elif defined(__MIPSEB__)
    #define NPY_CPU_MIPSEB
#else
    #error Unknown CPU, please report this to numpy maintainers with \
    information about your platform (OS, CPU and compiler)
#endif

/*
   This "white-lists" the architectures that we know don't require
   pointer alignment.  We white-list, since the memcpy version will
   work everywhere, whereas assignment will only work where pointer
   dereferencing doesn't require alignment.

   TODO: There may be more architectures we can white list.
*/
#if defined(NPY_CPU_X86) || defined(NPY_CPU_AMD64)
    #define NPY_COPY_PYOBJECT_PTR(dst, src) (*((PyObject **)(dst)) = *((PyObject **)(src)))
#else
    #if NPY_SIZEOF_PY_INTPTR_T == 4
        #define NPY_COPY_PYOBJECT_PTR(dst, src) \
            ((char*)(dst))[0] = ((char*)(src))[0]; \
            ((char*)(dst))[1] = ((char*)(src))[1]; \
            ((char*)(dst))[2] = ((char*)(src))[2]; \
            ((char*)(dst))[3] = ((char*)(src))[3];
    #elif NPY_SIZEOF_PY_INTPTR_T == 8
        #define NPY_COPY_PYOBJECT_PTR(dst, src) \
            ((char*)(dst))[0] = ((char*)(src))[0]; \
            ((char*)(dst))[1] = ((char*)(src))[1]; \
            ((char*)(dst))[2] = ((char*)(src))[2]; \
            ((char*)(dst))[3] = ((char*)(src))[3]; \
            ((char*)(dst))[4] = ((char*)(src))[4]; \
            ((char*)(dst))[5] = ((char*)(src))[5]; \
            ((char*)(dst))[6] = ((char*)(src))[6]; \
            ((char*)(dst))[7] = ((char*)(src))[7];
    #else
        #error Unknown architecture, please report this to numpy maintainers with \
        information about your platform (OS, CPU and compiler)
    #endif
#endif

#endif
                                                                                                                                                                                                                                                                                                                                                                                               npy_endian.h                                                                                        0100644 0001750 0001750 00000002431 11750317130 042372  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef _NPY_ENDIAN_H_
#define _NPY_ENDIAN_H_

/*
 * NPY_BYTE_ORDER is set to the same value as BYTE_ORDER set by glibc in
 * endian.h
 */

#ifdef NPY_HAVE_ENDIAN_H
    /* Use endian.h if available */
    #include <endian.h>

    #define NPY_BYTE_ORDER __BYTE_ORDER
    #define NPY_LITTLE_ENDIAN __LITTLE_ENDIAN
    #define NPY_BIG_ENDIAN __BIG_ENDIAN
#else
    /* Set endianness info using target CPU */
    #include "npy_cpu.h"

    #define NPY_LITTLE_ENDIAN 1234
    #define NPY_BIG_ENDIAN 4321

    #if defined(NPY_CPU_X86)            \
            || defined(NPY_CPU_AMD64)   \
            || defined(NPY_CPU_IA64)    \
            || defined(NPY_CPU_ALPHA)   \
            || defined(NPY_CPU_ARMEL)   \
            || defined(NPY_CPU_SH_LE)   \
            || defined(NPY_CPU_MIPSEL)
        #define NPY_BYTE_ORDER NPY_LITTLE_ENDIAN
    #elif defined(NPY_CPU_PPC)          \
            || defined(NPY_CPU_SPARC)   \
            || defined(NPY_CPU_S390)    \
            || defined(NPY_CPU_HPPA)    \
            || defined(NPY_CPU_PPC64)   \
            || defined(NPY_CPU_ARMEB)   \
            || defined(NPY_CPU_SH_BE)   \
            || defined(NPY_CPU_MIPSEB)
        #define NPY_BYTE_ORDER NPY_BIG_ENDIAN
    #else
        #error Unknown CPU: can not set endianness
    #endif
#endif

#endif
                                                                                                                                                                                                                                       npy_interrupt.h                                                                                     0100644 0001750 0001750 00000006523 11755722571 043214  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 
/* Signal handling:

This header file defines macros that allow your code to handle
interrupts received during processing.  Interrupts that
could reasonably be handled:

SIGINT, SIGABRT, SIGALRM, SIGSEGV

****Warning***************

Do not allow code that creates temporary memory or increases reference
counts of Python objects to be interrupted unless you handle it
differently.

**************************

The mechanism for handling interrupts is conceptually simple:

  - replace the signal handler with our own home-grown version
     and store the old one.
  - run the code to be interrupted -- if an interrupt occurs
     the handler should basically just cause a return to the
     calling function for finish work.
  - restore the old signal handler

Of course, every code that allows interrupts must account for
returning via the interrupt and handle clean-up correctly.  But,
even still, the simple paradigm is complicated by at least three
factors.

 1) platform portability (i.e. Microsoft says not to use longjmp
     to return from signal handling.  They have a __try  and __except
     extension to C instead but what about mingw?).

 2) how to handle threads: apparently whether signals are delivered to
    every thread of the process or the "invoking" thread is platform
    dependent. --- we don't handle threads for now.

 3) do we need to worry about re-entrance.  For now, assume the
    code will not call-back into itself.

Ideas:

 1) Start by implementing an approach that works on platforms that
    can use setjmp and longjmp functionality and does nothing
    on other platforms.

 2) Ignore threads --- i.e. do not mix interrupt handling and threads

 3) Add a default signal_handler function to the C-API but have the rest
    use macros.


Simple Interface:


In your C-extension: around a block of code you want to be interruptable
with a SIGINT

NPY_SIGINT_ON
[code]
NPY_SIGINT_OFF

In order for this to work correctly, the
[code] block must not allocate any memory or alter the reference count of any
Python objects.  In other words [code] must be interruptible so that continuation
after NPY_SIGINT_OFF will only be "missing some computations"

Interrupt handling does not work well with threads.

*/

/* Add signal handling macros
   Make the global variable and signal handler part of the C-API
*/

#ifndef NPY_INTERRUPT_H
#define NPY_INTERRUPT_H

#ifndef NPY_NO_SIGNAL

#include <setjmp.h>
#include <signal.h>

#ifndef sigsetjmp

#define SIGSETJMP(arg1, arg2) setjmp(arg1)
#define SIGLONGJMP(arg1, arg2) longjmp(arg1, arg2)
#define SIGJMP_BUF jmp_buf

#else

#define SIGSETJMP(arg1, arg2) sigsetjmp(arg1, arg2)
#define SIGLONGJMP(arg1, arg2) siglongjmp(arg1, arg2)
#define SIGJMP_BUF sigjmp_buf

#endif

#    define NPY_SIGINT_ON {                                             \
                   PyOS_sighandler_t _npy_sig_save;                     \
                   _npy_sig_save = PyOS_setsig(SIGINT, _PyArray_SigintHandler); \
                   if (SIGSETJMP(*((SIGJMP_BUF *)_PyArray_GetSigintBuf()), \
                                 1) == 0) {                             \

#    define NPY_SIGINT_OFF }                                      \
        PyOS_setsig(SIGINT, _npy_sig_save);                       \
        }

#else /* NPY_NO_SIGNAL  */

#  define NPY_SIGINT_ON
#  define NPY_SIGINT_OFF

#endif /* HAVE_SIGSETJMP */

#endif /* NPY_INTERRUPT_H */
                                                                                                                                                                             npy_math.h                                                                                          0100644 0001750 0001750 00000032723 11750317130 042074  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef __NPY_MATH_C99_H_
#define __NPY_MATH_C99_H_

#include <math.h>
#include <numpy/npy_common.h>

/*
 * NAN and INFINITY like macros (same behavior as glibc for NAN, same as C99
 * for INFINITY)
 *
 * XXX: I should test whether INFINITY and NAN are available on the platform
 */
NPY_INLINE static float __npy_inff(void)
{
    const union { npy_uint32 __i; float __f;} __bint = {0x7f800000UL};
    return __bint.__f;
}

NPY_INLINE static float __npy_nanf(void)
{
    const union { npy_uint32 __i; float __f;} __bint = {0x7fc00000UL};
    return __bint.__f;
}

NPY_INLINE static float __npy_pzerof(void)
{
    const union { npy_uint32 __i; float __f;} __bint = {0x00000000UL};
    return __bint.__f;
}

NPY_INLINE static float __npy_nzerof(void)
{
    const union { npy_uint32 __i; float __f;} __bint = {0x80000000UL};
    return __bint.__f;
}

#define NPY_INFINITYF __npy_inff()
#define NPY_NANF __npy_nanf()
#define NPY_PZEROF __npy_pzerof()
#define NPY_NZEROF __npy_nzerof()

#define NPY_INFINITY ((npy_double)NPY_INFINITYF)
#define NPY_NAN ((npy_double)NPY_NANF)
#define NPY_PZERO ((npy_double)NPY_PZEROF)
#define NPY_NZERO ((npy_double)NPY_NZEROF)

#define NPY_INFINITYL ((npy_longdouble)NPY_INFINITYF)
#define NPY_NANL ((npy_longdouble)NPY_NANF)
#define NPY_PZEROL ((npy_longdouble)NPY_PZEROF)
#define NPY_NZEROL ((npy_longdouble)NPY_NZEROF)

/*
 * Useful constants
 */
#define NPY_E         2.718281828459045235360287471352662498  /* e */
#define NPY_LOG2E     1.442695040888963407359924681001892137  /* log_2 e */
#define NPY_LOG10E    0.434294481903251827651128918916605082  /* log_10 e */
#define NPY_LOGE2     0.693147180559945309417232121458176568  /* log_e 2 */
#define NPY_LOGE10    2.302585092994045684017991454684364208  /* log_e 10 */
#define NPY_PI        3.141592653589793238462643383279502884  /* pi */
#define NPY_PI_2      1.570796326794896619231321691639751442  /* pi/2 */
#define NPY_PI_4      0.785398163397448309615660845819875721  /* pi/4 */
#define NPY_1_PI      0.318309886183790671537767526745028724  /* 1/pi */
#define NPY_2_PI      0.636619772367581343075535053490057448  /* 2/pi */
#define NPY_EULER     0.577215664901532860606512090082402431  /* Euler constant */
#define NPY_SQRT2     1.414213562373095048801688724209698079  /* sqrt(2) */
#define NPY_SQRT1_2   0.707106781186547524400844362104849039  /* 1/sqrt(2) */

#define NPY_Ef        2.718281828459045235360287471352662498F /* e */
#define NPY_LOG2Ef    1.442695040888963407359924681001892137F /* log_2 e */
#define NPY_LOG10Ef   0.434294481903251827651128918916605082F /* log_10 e */
#define NPY_LOGE2f    0.693147180559945309417232121458176568F /* log_e 2 */
#define NPY_LOGE10f   2.302585092994045684017991454684364208F /* log_e 10 */
#define NPY_PIf       3.141592653589793238462643383279502884F /* pi */
#define NPY_PI_2f     1.570796326794896619231321691639751442F /* pi/2 */
#define NPY_PI_4f     0.785398163397448309615660845819875721F /* pi/4 */
#define NPY_1_PIf     0.318309886183790671537767526745028724F /* 1/pi */
#define NPY_2_PIf     0.636619772367581343075535053490057448F /* 2/pi */
#define NPY_EULERf    0.577215664901532860606512090082402431F /* Euler constan*/
#define NPY_SQRT2f    1.414213562373095048801688724209698079F /* sqrt(2) */
#define NPY_SQRT1_2f  0.707106781186547524400844362104849039F /* 1/sqrt(2) */

#define NPY_El        2.718281828459045235360287471352662498L /* e */
#define NPY_LOG2El    1.442695040888963407359924681001892137L /* log_2 e */
#define NPY_LOG10El   0.434294481903251827651128918916605082L /* log_10 e */
#define NPY_LOGE2l    0.693147180559945309417232121458176568L /* log_e 2 */
#define NPY_LOGE10l   2.302585092994045684017991454684364208L /* log_e 10 */
#define NPY_PIl       3.141592653589793238462643383279502884L /* pi */
#define NPY_PI_2l     1.570796326794896619231321691639751442L /* pi/2 */
#define NPY_PI_4l     0.785398163397448309615660845819875721L /* pi/4 */
#define NPY_1_PIl     0.318309886183790671537767526745028724L /* 1/pi */
#define NPY_2_PIl     0.636619772367581343075535053490057448L /* 2/pi */
#define NPY_EULERl    0.577215664901532860606512090082402431L /* Euler constan*/
#define NPY_SQRT2l    1.414213562373095048801688724209698079L /* sqrt(2) */
#define NPY_SQRT1_2l  0.707106781186547524400844362104849039L /* 1/sqrt(2) */

/*
 * C99 double math funcs
 */
double npy_sin(double x);
double npy_cos(double x);
double npy_tan(double x);
double npy_sinh(double x);
double npy_cosh(double x);
double npy_tanh(double x);

double npy_asin(double x);
double npy_acos(double x);
double npy_atan(double x);
double npy_aexp(double x);
double npy_alog(double x);
double npy_asqrt(double x);
double npy_afabs(double x);

double npy_log(double x);
double npy_log10(double x);
double npy_exp(double x);
double npy_sqrt(double x);

double npy_fabs(double x);
double npy_ceil(double x);
double npy_fmod(double x, double y);
double npy_floor(double x);

double npy_expm1(double x);
double npy_log1p(double x);
double npy_hypot(double x, double y);
double npy_acosh(double x);
double npy_asinh(double xx);
double npy_atanh(double x);
double npy_rint(double x);
double npy_trunc(double x);
double npy_exp2(double x);
double npy_log2(double x);

double npy_atan2(double x, double y);
double npy_pow(double x, double y);
double npy_modf(double x, double* y);

double npy_copysign(double x, double y);
double npy_nextafter(double x, double y);
double npy_spacing(double x);

/*
 * IEEE 754 fpu handling. Those are guaranteed to be macros
 */
#ifndef NPY_HAVE_DECL_ISNAN
    #define npy_isnan(x) ((x) != (x))
#else
    #ifdef _MSC_VER
        #define npy_isnan(x) _isnan((x))
    #else
        #define npy_isnan(x) isnan((x))
    #endif
#endif

#ifndef NPY_HAVE_DECL_ISFINITE
    #ifdef _MSC_VER
        #define npy_isfinite(x) _finite((x))
    #else
        #define npy_isfinite(x) !npy_isnan((x) + (-x))
    #endif
#else
    #define npy_isfinite(x) isfinite((x))
#endif

#ifndef NPY_HAVE_DECL_ISINF
    #define npy_isinf(x) (!npy_isfinite(x) && !npy_isnan(x))
#else
    #ifdef _MSC_VER
        #define npy_isinf(x) (!_finite((x)) && !_isnan((x)))
    #else
        #define npy_isinf(x) isinf((x))
    #endif
#endif

#ifndef NPY_HAVE_DECL_SIGNBIT
    int _npy_signbit_f(float x);
    int _npy_signbit_d(double x);
    int _npy_signbit_ld(long double x);
    #define npy_signbit(x) \
        (sizeof (x) == sizeof (long double) ? _npy_signbit_ld (x) \
         : sizeof (x) == sizeof (double) ? _npy_signbit_d (x) \
         : _npy_signbit_f (x))
#else
    #define npy_signbit(x) signbit((x))
#endif

/*
 * float C99 math functions
 */

float npy_sinf(float x);
float npy_cosf(float x);
float npy_tanf(float x);
float npy_sinhf(float x);
float npy_coshf(float x);
float npy_tanhf(float x);
float npy_fabsf(float x);
float npy_floorf(float x);
float npy_ceilf(float x);
float npy_rintf(float x);
float npy_truncf(float x);
float npy_sqrtf(float x);
float npy_log10f(float x);
float npy_logf(float x);
float npy_expf(float x);
float npy_expm1f(float x);
float npy_asinf(float x);
float npy_acosf(float x);
float npy_atanf(float x);
float npy_asinhf(float x);
float npy_acoshf(float x);
float npy_atanhf(float x);
float npy_log1pf(float x);
float npy_exp2f(float x);
float npy_log2f(float x);

float npy_atan2f(float x, float y);
float npy_hypotf(float x, float y);
float npy_powf(float x, float y);
float npy_fmodf(float x, float y);

float npy_modff(float x, float* y);

float npy_copysignf(float x, float y);
float npy_nextafterf(float x, float y);
float npy_spacingf(float x);

/*
 * float C99 math functions
 */

npy_longdouble npy_sinl(npy_longdouble x);
npy_longdouble npy_cosl(npy_longdouble x);
npy_longdouble npy_tanl(npy_longdouble x);
npy_longdouble npy_sinhl(npy_longdouble x);
npy_longdouble npy_coshl(npy_longdouble x);
npy_longdouble npy_tanhl(npy_longdouble x);
npy_longdouble npy_fabsl(npy_longdouble x);
npy_longdouble npy_floorl(npy_longdouble x);
npy_longdouble npy_ceill(npy_longdouble x);
npy_longdouble npy_rintl(npy_longdouble x);
npy_longdouble npy_truncl(npy_longdouble x);
npy_longdouble npy_sqrtl(npy_longdouble x);
npy_longdouble npy_log10l(npy_longdouble x);
npy_longdouble npy_logl(npy_longdouble x);
npy_longdouble npy_expl(npy_longdouble x);
npy_longdouble npy_expm1l(npy_longdouble x);
npy_longdouble npy_asinl(npy_longdouble x);
npy_longdouble npy_acosl(npy_longdouble x);
npy_longdouble npy_atanl(npy_longdouble x);
npy_longdouble npy_asinhl(npy_longdouble x);
npy_longdouble npy_acoshl(npy_longdouble x);
npy_longdouble npy_atanhl(npy_longdouble x);
npy_longdouble npy_log1pl(npy_longdouble x);
npy_longdouble npy_exp2l(npy_longdouble x);
npy_longdouble npy_log2l(npy_longdouble x);

npy_longdouble npy_atan2l(npy_longdouble x, npy_longdouble y);
npy_longdouble npy_hypotl(npy_longdouble x, npy_longdouble y);
npy_longdouble npy_powl(npy_longdouble x, npy_longdouble y);
npy_longdouble npy_fmodl(npy_longdouble x, npy_longdouble y);

npy_longdouble npy_modfl(npy_longdouble x, npy_longdouble* y);

npy_longdouble npy_copysignl(npy_longdouble x, npy_longdouble y);
npy_longdouble npy_nextafterl(npy_longdouble x, npy_longdouble y);
npy_longdouble npy_spacingl(npy_longdouble x);

/*
 * Non standard functions
 */
double npy_deg2rad(double x);
double npy_rad2deg(double x);
double npy_logaddexp(double x, double y);
double npy_logaddexp2(double x, double y);

float npy_deg2radf(float x);
float npy_rad2degf(float x);
float npy_logaddexpf(float x, float y);
float npy_logaddexp2f(float x, float y);

npy_longdouble npy_deg2radl(npy_longdouble x);
npy_longdouble npy_rad2degl(npy_longdouble x);
npy_longdouble npy_logaddexpl(npy_longdouble x, npy_longdouble y);
npy_longdouble npy_logaddexp2l(npy_longdouble x, npy_longdouble y);

#define npy_degrees npy_rad2deg
#define npy_degreesf npy_rad2degf
#define npy_degreesl npy_rad2degl

#define npy_radians npy_deg2rad
#define npy_radiansf npy_deg2radf
#define npy_radiansl npy_deg2radl

/*
 * Complex declarations
 */

/*
 * C99 specifies that complex numbers have the same representation as
 * an array of two elements, where the first element is the real part
 * and the second element is the imaginary part.
 */
#define __NPY_CPACK_IMP(x, y, type, ctype)   \
    union {                                  \
        ctype z;                             \
        type a[2];                           \
    } z1;;                                   \
                                             \
    z1.a[0] = (x);                           \
    z1.a[1] = (y);                           \
                                             \
    return z1.z;

static NPY_INLINE npy_cdouble npy_cpack(double x, double y)
{
    __NPY_CPACK_IMP(x, y, double, npy_cdouble);
}

static NPY_INLINE npy_cfloat npy_cpackf(float x, float y)
{
    __NPY_CPACK_IMP(x, y, float, npy_cfloat);
}

static NPY_INLINE npy_clongdouble npy_cpackl(npy_longdouble x, npy_longdouble y)
{
    __NPY_CPACK_IMP(x, y, npy_longdouble, npy_clongdouble);
}
#undef __NPY_CPACK_IMP

/*
 * Same remark as above, but in the other direction: extract first/second
 * member of complex number, assuming a C99-compatible representation
 *
 * Those are defineds as static inline, and such as a reasonable compiler would
 * most likely compile this to one or two instructions (on CISC at least)
 */
#define __NPY_CEXTRACT_IMP(z, index, type, ctype)   \
    union {                                         \
        ctype z;                                    \
        type a[2];                                  \
    } __z_repr;                                     \
    __z_repr.z = z;                                 \
                                                    \
    return __z_repr.a[index];

static NPY_INLINE double npy_creal(npy_cdouble z)
{
    __NPY_CEXTRACT_IMP(z, 0, double, npy_cdouble);
}

static NPY_INLINE double npy_cimag(npy_cdouble z)
{
    __NPY_CEXTRACT_IMP(z, 1, double, npy_cdouble);
}

static NPY_INLINE float npy_crealf(npy_cfloat z)
{
    __NPY_CEXTRACT_IMP(z, 0, float, npy_cfloat);
}

static NPY_INLINE float npy_cimagf(npy_cfloat z)
{
    __NPY_CEXTRACT_IMP(z, 1, float, npy_cfloat);
}

static NPY_INLINE npy_longdouble npy_creall(npy_clongdouble z)
{
    __NPY_CEXTRACT_IMP(z, 0, npy_longdouble, npy_clongdouble);
}

static NPY_INLINE npy_longdouble npy_cimagl(npy_clongdouble z)
{
    __NPY_CEXTRACT_IMP(z, 1, npy_longdouble, npy_clongdouble);
}
#undef __NPY_CEXTRACT_IMP

/*
 * Double precision complex functions
 */
double npy_cabs(npy_cdouble z);
double npy_carg(npy_cdouble z);

npy_cdouble npy_cexp(npy_cdouble z);
npy_cdouble npy_clog(npy_cdouble z);
npy_cdouble npy_cpow(npy_cdouble x, npy_cdouble y);

npy_cdouble npy_csqrt(npy_cdouble z);

npy_cdouble npy_ccos(npy_cdouble z);
npy_cdouble npy_csin(npy_cdouble z);

/*
 * Single precision complex functions
 */
float npy_cabsf(npy_cfloat z);
float npy_cargf(npy_cfloat z);

npy_cfloat npy_cexpf(npy_cfloat z);
npy_cfloat npy_clogf(npy_cfloat z);
npy_cfloat npy_cpowf(npy_cfloat x, npy_cfloat y);

npy_cfloat npy_csqrtf(npy_cfloat z);

npy_cfloat npy_ccosf(npy_cfloat z);
npy_cfloat npy_csinf(npy_cfloat z);

/*
 * Extended precision complex functions
 */
npy_longdouble npy_cabsl(npy_clongdouble z);
npy_longdouble npy_cargl(npy_clongdouble z);

npy_clongdouble npy_cexpl(npy_clongdouble z);
npy_clongdouble npy_clogl(npy_clongdouble z);
npy_clongdouble npy_cpowl(npy_clongdouble x, npy_clongdouble y);

npy_clongdouble npy_csqrtl(npy_clongdouble z);

npy_clongdouble npy_ccosl(npy_clongdouble z);
npy_clongdouble npy_csinl(npy_clongdouble z);

/*
 * Functions that set the floating point error
 * status word.
 */

void npy_set_floatstatus_divbyzero(void);
void npy_set_floatstatus_overflow(void);
void npy_set_floatstatus_underflow(void);
void npy_set_floatstatus_invalid(void);

#endif
                                             npy_os.h                                                                                            0100644 0001750 0001750 00000001461 11750317130 041557  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef _NPY_OS_H_
#define _NPY_OS_H_

#if defined(linux) || defined(__linux) || defined(__linux__)
    #define NPY_OS_LINUX
#elif defined(__FreeBSD__) || defined(__NetBSD__) || \
            defined(__OpenBSD__) || defined(__DragonFly__)
    #define NPY_OS_BSD
    #ifdef __FreeBSD__
        #define NPY_OS_FREEBSD
    #elif defined(__NetBSD__)
        #define NPY_OS_NETBSD
    #elif defined(__OpenBSD__)
        #define NPY_OS_OPENBSD
    #elif defined(__DragonFly__)
        #define NPY_OS_DRAGONFLY
    #endif
#elif defined(sun) || defined(__sun)
    #define NPY_OS_SOLARIS
#elif defined(__CYGWIN__)
    #define NPY_OS_CYGWIN
#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
    #define NPY_OS_WIN32
#elif defined(__APPLE__)
    #define NPY_OS_DARWIN
#else
    #define NPY_OS_UNKNOWN
#endif

#endif
                                                                                                                                                                                                               numpyconfig.h                                                                                       0100644 0001750 0001750 00000000774 11755722571 042632  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef _NPY_NUMPYCONFIG_H_
#define _NPY_NUMPYCONFIG_H_

#include "_numpyconfig.h"

/* 
 * On Mac OS X, because there is only one configuration stage for all the archs
 * in universal builds, any macro which depends on the arch needs to be
 * harcoded
 */
#ifdef __APPLE__
	#undef NPY_SIZEOF_LONG
	#undef NPY_SIZEOF_PY_INTPTR_T

	#ifdef __LP64__
		#define NPY_SIZEOF_LONG 		8
		#define NPY_SIZEOF_PY_INTPTR_T 	8
	#else
		#define NPY_SIZEOF_LONG 		4
		#define NPY_SIZEOF_PY_INTPTR_T 	4
	#endif
#endif

#endif
    old_defines.h                                                                                       0100644 0001750 0001750 00000013602 11755722571 042541  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #define NDARRAY_VERSION NPY_VERSION

#define PyArray_MIN_BUFSIZE NPY_MIN_BUFSIZE
#define PyArray_MAX_BUFSIZE NPY_MAX_BUFSIZE
#define PyArray_BUFSIZE NPY_BUFSIZE

#define PyArray_PRIORITY NPY_PRIORITY
#define PyArray_SUBTYPE_PRIORITY NPY_PRIORITY
#define PyArray_NUM_FLOATTYPE NPY_NUM_FLOATTYPE

#define NPY_MAX PyArray_MAX
#define NPY_MIN PyArray_MIN

#define PyArray_TYPES       NPY_TYPES
#define PyArray_BOOL        NPY_BOOL
#define PyArray_BYTE        NPY_BYTE
#define PyArray_UBYTE       NPY_UBYTE
#define PyArray_SHORT       NPY_SHORT
#define PyArray_USHORT      NPY_USHORT
#define PyArray_INT         NPY_INT
#define PyArray_UINT        NPY_UINT
#define PyArray_LONG        NPY_LONG
#define PyArray_ULONG       NPY_ULONG
#define PyArray_LONGLONG    NPY_LONGLONG
#define PyArray_ULONGLONG   NPY_ULONGLONG
#define PyArray_HALF        NPY_HALF
#define PyArray_FLOAT       NPY_FLOAT
#define PyArray_DOUBLE      NPY_DOUBLE
#define PyArray_LONGDOUBLE  NPY_LONGDOUBLE
#define PyArray_CFLOAT      NPY_CFLOAT
#define PyArray_CDOUBLE     NPY_CDOUBLE
#define PyArray_CLONGDOUBLE NPY_CLONGDOUBLE
#define PyArray_OBJECT      NPY_OBJECT
#define PyArray_STRING      NPY_STRING
#define PyArray_UNICODE     NPY_UNICODE
#define PyArray_VOID        NPY_VOID
#define PyArray_DATETIME    NPY_DATETIME
#define PyArray_TIMEDELTA   NPY_TIMEDELTA
#define PyArray_NTYPES      NPY_NTYPES
#define PyArray_NOTYPE      NPY_NOTYPE
#define PyArray_CHAR        NPY_CHAR
#define PyArray_USERDEF     NPY_USERDEF
#define PyArray_NUMUSERTYPES NPY_NUMUSERTYPES

#define PyArray_INTP        NPY_INTP
#define PyArray_UINTP       NPY_UINTP

#define PyArray_INT8    NPY_INT8
#define PyArray_UINT8   NPY_UINT8
#define PyArray_INT16   NPY_INT16
#define PyArray_UINT16  NPY_UINT16
#define PyArray_INT32   NPY_INT32
#define PyArray_UINT32  NPY_UINT32

#ifdef NPY_INT64
#define PyArray_INT64   NPY_INT64
#define PyArray_UINT64  NPY_UINT64
#endif

#ifdef NPY_INT128
#define PyArray_INT128 NPY_INT128
#define PyArray_UINT128 NPY_UINT128
#endif

#ifdef NPY_FLOAT16
#define PyArray_FLOAT16  NPY_FLOAT16
#define PyArray_COMPLEX32  NPY_COMPLEX32
#endif

#ifdef NPY_FLOAT80
#define PyArray_FLOAT80  NPY_FLOAT80
#define PyArray_COMPLEX160  NPY_COMPLEX160
#endif

#ifdef NPY_FLOAT96
#define PyArray_FLOAT96  NPY_FLOAT96
#define PyArray_COMPLEX192  NPY_COMPLEX192
#endif

#ifdef NPY_FLOAT128
#define PyArray_FLOAT128  NPY_FLOAT128
#define PyArray_COMPLEX256  NPY_COMPLEX256
#endif

#define PyArray_FLOAT32    NPY_FLOAT32
#define PyArray_COMPLEX64  NPY_COMPLEX64
#define PyArray_FLOAT64    NPY_FLOAT64
#define PyArray_COMPLEX128 NPY_COMPLEX128


#define PyArray_TYPECHAR        NPY_TYPECHAR
#define PyArray_BOOLLTR         NPY_BOOLLTR
#define PyArray_BYTELTR         NPY_BYTELTR
#define PyArray_UBYTELTR        NPY_UBYTELTR
#define PyArray_SHORTLTR        NPY_SHORTLTR
#define PyArray_USHORTLTR       NPY_USHORTLTR
#define PyArray_INTLTR          NPY_INTLTR
#define PyArray_UINTLTR         NPY_UINTLTR
#define PyArray_LONGLTR         NPY_LONGLTR
#define PyArray_ULONGLTR        NPY_ULONGLTR
#define PyArray_LONGLONGLTR     NPY_LONGLONGLTR
#define PyArray_ULONGLONGLTR    NPY_ULONGLONGLTR
#define PyArray_HALFLTR         NPY_HALFLTR
#define PyArray_FLOATLTR        NPY_FLOATLTR
#define PyArray_DOUBLELTR       NPY_DOUBLELTR
#define PyArray_LONGDOUBLELTR   NPY_LONGDOUBLELTR
#define PyArray_CFLOATLTR       NPY_CFLOATLTR
#define PyArray_CDOUBLELTR      NPY_CDOUBLELTR
#define PyArray_CLONGDOUBLELTR  NPY_CLONGDOUBLELTR
#define PyArray_OBJECTLTR       NPY_OBJECTLTR
#define PyArray_STRINGLTR       NPY_STRINGLTR
#define PyArray_STRINGLTR2      NPY_STRINGLTR2
#define PyArray_UNICODELTR      NPY_UNICODELTR
#define PyArray_VOIDLTR         NPY_VOIDLTR
#define PyArray_DATETIMELTR     NPY_DATETIMELTR
#define PyArray_TIMEDELTALTR    NPY_TIMEDELTALTR
#define PyArray_CHARLTR         NPY_CHARLTR
#define PyArray_INTPLTR         NPY_INTPLTR
#define PyArray_UINTPLTR        NPY_UINTPLTR
#define PyArray_GENBOOLLTR      NPY_GENBOOLLTR
#define PyArray_SIGNEDLTR       NPY_SIGNEDLTR
#define PyArray_UNSIGNEDLTR     NPY_UNSIGNEDLTR
#define PyArray_FLOATINGLTR     NPY_FLOATINGLTR
#define PyArray_COMPLEXLTR      NPY_COMPLEXLTR

#define PyArray_QUICKSORT   NPY_QUICKSORT
#define PyArray_HEAPSORT    NPY_HEAPSORT
#define PyArray_MERGESORT   NPY_MERGESORT
#define PyArray_SORTKIND    NPY_SORTKIND
#define PyArray_NSORTS      NPY_NSORTS

#define PyArray_NOSCALAR       NPY_NOSCALAR
#define PyArray_BOOL_SCALAR    NPY_BOOL_SCALAR
#define PyArray_INTPOS_SCALAR  NPY_INTPOS_SCALAR
#define PyArray_INTNEG_SCALAR  NPY_INTNEG_SCALAR
#define PyArray_FLOAT_SCALAR   NPY_FLOAT_SCALAR
#define PyArray_COMPLEX_SCALAR NPY_COMPLEX_SCALAR
#define PyArray_OBJECT_SCALAR  NPY_OBJECT_SCALAR
#define PyArray_SCALARKIND     NPY_SCALARKIND
#define PyArray_NSCALARKINDS   NPY_NSCALARKINDS

#define PyArray_ANYORDER     NPY_ANYORDER
#define PyArray_CORDER       NPY_CORDER
#define PyArray_FORTRANORDER NPY_FORTRANORDER
#define PyArray_ORDER        NPY_ORDER

#define PyDescr_ISBOOL      PyDataType_ISBOOL
#define PyDescr_ISUNSIGNED  PyDataType_ISUNSIGNED
#define PyDescr_ISSIGNED    PyDataType_ISSIGNED
#define PyDescr_ISINTEGER   PyDataType_ISINTEGER
#define PyDescr_ISFLOAT     PyDataType_ISFLOAT
#define PyDescr_ISNUMBER    PyDataType_ISNUMBER
#define PyDescr_ISSTRING    PyDataType_ISSTRING
#define PyDescr_ISCOMPLEX   PyDataType_ISCOMPLEX
#define PyDescr_ISPYTHON    PyDataType_ISPYTHON
#define PyDescr_ISFLEXIBLE  PyDataType_ISFLEXIBLE
#define PyDescr_ISUSERDEF   PyDataType_ISUSERDEF
#define PyDescr_ISEXTENDED  PyDataType_ISEXTENDED
#define PyDescr_ISOBJECT    PyDataType_ISOBJECT
#define PyDescr_HASFIELDS   PyDataType_HASFIELDS

#define PyArray_LITTLE NPY_LITTLE
#define PyArray_BIG NPY_BIG
#define PyArray_NATIVE NPY_NATIVE
#define PyArray_SWAP NPY_SWAP
#define PyArray_IGNORE NPY_IGNORE

#define PyArray_NATBYTE NPY_NATBYTE
#define PyArray_OPPBYTE NPY_OPPBYTE

#define PyArray_MAX_ELSIZE NPY_MAX_ELSIZE

#define PyArray_USE_PYMEM NPY_USE_PYMEM

#define PyArray_RemoveLargest PyArray_RemoveSmallest
                                                                                                                              oldnumeric.h                                                                                        0100644 0001750 0001750 00000001254 11755722571 042427  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #include "arrayobject.h"

#ifndef REFCOUNT
#  define REFCOUNT NPY_REFCOUNT
#  define MAX_ELSIZE 16
#endif

#define PyArray_UNSIGNED_TYPES
#define PyArray_SBYTE PyArray_BYTE
#define PyArray_CopyArray PyArray_CopyInto
#define _PyArray_multiply_list PyArray_MultiplyIntList
#define PyArray_ISSPACESAVER(m) NPY_FALSE
#define PyScalarArray_Check PyArray_CheckScalar

#define CONTIGUOUS NPY_CONTIGUOUS
#define OWN_DIMENSIONS 0
#define OWN_STRIDES 0
#define OWN_DATA NPY_OWNDATA
#define SAVESPACE 0
#define SAVESPACEBIT 0

#undef import_array
#define import_array() { if (_import_array() < 0) {PyErr_Print(); PyErr_SetString(PyExc_ImportError, "numpy.core.multiarray failed to import"); } }
                                                                                                                                                                                                                                                                                                                                                    ufuncobject.h                                                                                       0100644 0001750 0001750 00000022206 11755722571 042575  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef Py_UFUNCOBJECT_H
#define Py_UFUNCOBJECT_H

#include <numpy/npy_math.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*PyUFuncGenericFunction) (char **, npy_intp *, npy_intp *, void *);

typedef struct {
        PyObject_HEAD
        /*
         * nin: Number of inputs
         * nout: Number of outputs
         * nargs: Always nin + nout (Why is it stored?)
         */
        int nin, nout, nargs;

        /* Identity for reduction, either PyUFunc_One or PyUFunc_Zero */
        int identity;

        /* Array of one-dimensional core loops */
        PyUFuncGenericFunction *functions;
        /* Array of funcdata that gets passed into the functions */
        void **data;
        /* The number of elements in 'functions' and 'data' */
        int ntypes;

        /* Does not appear to be used */
        int check_return;

        /* The name of the ufunc */
        char *name;

        /* Array of type numbers, of size ('nargs' * 'ntypes') */
        char *types;

        /* Documentation string */
        char *doc;

        void *ptr;
        PyObject *obj;
        PyObject *userloops;
    
        /* generalized ufunc parameters */

        /* 0 for scalar ufunc; 1 for generalized ufunc */
        int core_enabled;
        /* number of distinct dimension names in signature */
        int core_num_dim_ix;
 
        /*
         * dimension indices of input/output argument k are stored in
         * core_dim_ixs[core_offsets[k]..core_offsets[k]+core_num_dims[k]-1]
         */

        /* numbers of core dimensions of each argument */
        int *core_num_dims;
        /*
         * dimension indices in a flatted form; indices
         * are in the range of [0,core_num_dim_ix)
         */
        int *core_dim_ixs;
        /*
         * positions of 1st core dimensions of each
         * argument in core_dim_ixs
         */
        int *core_offsets;
        /* signature string for printing purpose */
        char *core_signature;
} PyUFuncObject;

#include "arrayobject.h"

#define UFUNC_ERR_IGNORE 0
#define UFUNC_ERR_WARN   1
#define UFUNC_ERR_RAISE  2
#define UFUNC_ERR_CALL   3
#define UFUNC_ERR_PRINT  4
#define UFUNC_ERR_LOG    5

        /* Python side integer mask */

#define UFUNC_MASK_DIVIDEBYZERO 0x07
#define UFUNC_MASK_OVERFLOW 0x3f
#define UFUNC_MASK_UNDERFLOW 0x1ff
#define UFUNC_MASK_INVALID 0xfff

#define UFUNC_SHIFT_DIVIDEBYZERO 0
#define UFUNC_SHIFT_OVERFLOW     3
#define UFUNC_SHIFT_UNDERFLOW    6
#define UFUNC_SHIFT_INVALID      9


/* platform-dependent code translates floating point
   status to an integer sum of these values
*/
#define UFUNC_FPE_DIVIDEBYZERO  1
#define UFUNC_FPE_OVERFLOW      2
#define UFUNC_FPE_UNDERFLOW     4
#define UFUNC_FPE_INVALID       8

/* Error mode that avoids look-up (no checking) */
#define UFUNC_ERR_DEFAULT       0

#define UFUNC_OBJ_ISOBJECT      1
#define UFUNC_OBJ_NEEDS_API     2

   /* Default user error mode */
#define UFUNC_ERR_DEFAULT2                               \
        (UFUNC_ERR_WARN << UFUNC_SHIFT_DIVIDEBYZERO) +  \
        (UFUNC_ERR_WARN << UFUNC_SHIFT_OVERFLOW) +      \
        (UFUNC_ERR_WARN << UFUNC_SHIFT_INVALID)

#if NPY_ALLOW_THREADS
#define NPY_LOOP_BEGIN_THREADS do {if (!(loop->obj & UFUNC_OBJ_NEEDS_API)) _save = PyEval_SaveThread();} while (0)
#define NPY_LOOP_END_THREADS   do {if (!(loop->obj & UFUNC_OBJ_NEEDS_API)) PyEval_RestoreThread(_save);} while (0)
#else
#define NPY_LOOP_BEGIN_THREADS
#define NPY_LOOP_END_THREADS
#endif

#define PyUFunc_One 1
#define PyUFunc_Zero 0
#define PyUFunc_None -1

#define UFUNC_REDUCE 0
#define UFUNC_ACCUMULATE 1
#define UFUNC_REDUCEAT 2
#define UFUNC_OUTER 3


typedef struct {
        int nin;
        int nout;
        PyObject *callable;
} PyUFunc_PyFuncData;

/* A linked-list of function information for
   user-defined 1-d loops.
 */
typedef struct _loop1d_info {
        PyUFuncGenericFunction func;
        void *data;
        int *arg_types;
        struct _loop1d_info *next;
} PyUFunc_Loop1d;


#include "__ufunc_api.h"

#define UFUNC_PYVALS_NAME "UFUNC_PYVALS"

#define UFUNC_CHECK_ERROR(arg)                                          \
        do {if ((((arg)->obj & UFUNC_OBJ_NEEDS_API) && PyErr_Occurred()) ||                         \
            ((arg)->errormask &&                                        \
             PyUFunc_checkfperr((arg)->errormask,                       \
                                (arg)->errobj,                          \
                                &(arg)->first)))                        \
                goto fail;} while (0)

/* This code checks the IEEE status flags in a platform-dependent way */
/* Adapted from Numarray  */

#if (defined(__unix__) || defined(unix)) && !defined(USG)
#include <sys/param.h>
#endif

/*  OSF/Alpha (Tru64)  ---------------------------------------------*/
#if defined(__osf__) && defined(__alpha)

#include <machine/fpu.h>

#define UFUNC_CHECK_STATUS(ret) {               \
        unsigned long fpstatus;                 \
                                                \
        fpstatus = ieee_get_fp_control();                               \
        /* clear status bits as well as disable exception mode if on */ \
        ieee_set_fp_control( 0 );                                       \
        ret = ((IEEE_STATUS_DZE & fpstatus) ? UFUNC_FPE_DIVIDEBYZERO : 0) \
                | ((IEEE_STATUS_OVF & fpstatus) ? UFUNC_FPE_OVERFLOW : 0) \
                | ((IEEE_STATUS_UNF & fpstatus) ? UFUNC_FPE_UNDERFLOW : 0) \
                | ((IEEE_STATUS_INV & fpstatus) ? UFUNC_FPE_INVALID : 0); \
        }

/* MS Windows -----------------------------------------------------*/
#elif defined(_MSC_VER)

#include <float.h>

  /* Clear the floating point exception default of Borland C++ */
#if defined(__BORLANDC__)
#define UFUNC_NOFPE _control87(MCW_EM, MCW_EM);
#endif

#define UFUNC_CHECK_STATUS(ret) {                \
        int fpstatus = (int) _clearfp();                        \
                                                                        \
        ret = ((SW_ZERODIVIDE & fpstatus) ? UFUNC_FPE_DIVIDEBYZERO : 0) \
                | ((SW_OVERFLOW & fpstatus) ? UFUNC_FPE_OVERFLOW : 0)   \
                | ((SW_UNDERFLOW & fpstatus) ? UFUNC_FPE_UNDERFLOW : 0) \
                | ((SW_INVALID & fpstatus) ? UFUNC_FPE_INVALID : 0);    \
        }

/* Solaris --------------------------------------------------------*/
/* --------ignoring SunOS ieee_flags approach, someone else can
**         deal with that! */
#elif defined(sun) || defined(__BSD__) || defined(__OpenBSD__) || \
      (defined(__FreeBSD__) && (__FreeBSD_version < 502114)) || \
      defined(__NetBSD__)
#include <ieeefp.h>

#define UFUNC_CHECK_STATUS(ret) {                               \
        int fpstatus;                                           \
                                                                \
        fpstatus = (int) fpgetsticky();                                 \
        ret = ((FP_X_DZ  & fpstatus) ? UFUNC_FPE_DIVIDEBYZERO : 0)      \
                | ((FP_X_OFL & fpstatus) ? UFUNC_FPE_OVERFLOW : 0)      \
                | ((FP_X_UFL & fpstatus) ? UFUNC_FPE_UNDERFLOW : 0)     \
                | ((FP_X_INV & fpstatus) ? UFUNC_FPE_INVALID : 0);      \
        (void) fpsetsticky(0);                                          \
        }

#elif defined(__GLIBC__) || defined(__APPLE__) || \
      defined(__CYGWIN__) || defined(__MINGW32__) || \
      (defined(__FreeBSD__) && (__FreeBSD_version >= 502114))

#if defined(__GLIBC__) || defined(__APPLE__) || \
    defined(__MINGW32__) || defined(__FreeBSD__)
#include <fenv.h>
#elif defined(__CYGWIN__)
#include "fenv/fenv.c"
#endif

#define UFUNC_CHECK_STATUS(ret) {                                       \
        int fpstatus = (int) fetestexcept(FE_DIVBYZERO | FE_OVERFLOW |  \
                                          FE_UNDERFLOW | FE_INVALID);   \
        ret = ((FE_DIVBYZERO  & fpstatus) ? UFUNC_FPE_DIVIDEBYZERO : 0) \
                | ((FE_OVERFLOW   & fpstatus) ? UFUNC_FPE_OVERFLOW : 0) \
                | ((FE_UNDERFLOW  & fpstatus) ? UFUNC_FPE_UNDERFLOW : 0) \
                | ((FE_INVALID    & fpstatus) ? UFUNC_FPE_INVALID : 0); \
        (void) feclearexcept(FE_DIVBYZERO | FE_OVERFLOW |               \
                             FE_UNDERFLOW | FE_INVALID);                \
}

#elif defined(_AIX)

#include <float.h>
#include <fpxcp.h>

#define UFUNC_CHECK_STATUS(ret) { \
        fpflag_t fpstatus; \
 \
        fpstatus = fp_read_flag(); \
        ret = ((FP_DIV_BY_ZERO & fpstatus) ? UFUNC_FPE_DIVIDEBYZERO : 0) \
                | ((FP_OVERFLOW & fpstatus) ? UFUNC_FPE_OVERFLOW : 0)   \
                | ((FP_UNDERFLOW & fpstatus) ? UFUNC_FPE_UNDERFLOW : 0) \
                | ((FP_INVALID & fpstatus) ? UFUNC_FPE_INVALID : 0); \
        fp_swap_flag(0); \
}

#else

#define NO_FLOATING_POINT_SUPPORT
#define UFUNC_CHECK_STATUS(ret) { \
    ret = 0; \
  }

#endif

/*
 * THESE MACROS ARE DEPRECATED.
 * Use npy_set_floatstatus_* in the npymath library.
 */
#define generate_divbyzero_error() npy_set_floatstatus_divbyzero()
#define generate_overflow_error() npy_set_floatstatus_overflow()

  /* Make sure it gets defined if it isn't already */
#ifndef UFUNC_NOFPE
#define UFUNC_NOFPE
#endif


#ifdef __cplusplus
}
#endif
#endif /* !Py_UFUNCOBJECT_H */
                                                                                                                                                                                                                                                                                                                                                                                          utils.h                                                                                             0100644 0001750 0001750 00000001164 11750317130 041410  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/core/include/numpy                                 #ifndef __NUMPY_UTILS_HEADER__
#define __NUMPY_UTILS_HEADER__

#ifndef __COMP_NPY_UNUSED
        #if defined(__GNUC__)
                #define __COMP_NPY_UNUSED __attribute__ ((__unused__))
        # elif defined(__ICC)
                #define __COMP_NPY_UNUSED __attribute__ ((__unused__))
        #else
                #define __COMP_NPY_UNUSED
        #endif
#endif

/* Use this to tag a variable as not used. It will remove unused variable
 * warning on support platforms (see __COM_NPY_UNUSED) and mangle the variable
 * to avoid accidental use */
#define NPY_UNUSED(x) (__NPY_UNUSED_TAGGED ## x) __COMP_NPY_UNUSED

#endif
                                                                                                                                                                                                                                                                                                                                                                                                            distutils/                                                                                          0040755 0001750 0001750 00000000000 12612224743 036406  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy                                                    tests/                                                                                              0040755 0001750 0001750 00000000000 12612224743 037550  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/distutils                                          swig_ext/                                                                                           0040755 0001750 0001750 00000000000 12612224743 041401  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/distutils/tests                                    src/                                                                                                0040755 0001750 0001750 00000000000 12612224743 042170  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/distutils/tests/swig_ext                           zoo.h                                                                                               0100644 0001750 0001750 00000000161 11472145622 043144  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/distutils/tests/swig_ext/src                       
class Zoo{
		int n;
		char animals[10][50];
public:
		Zoo();
		void shut_up(char *animal);
		void display();
};
                                                                                                                                                                                                                                                                                                                                                                                                               f2py/                                                                                               0040755 0001750 0001750 00000000000 12612224743 035242  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy                                                    src/                                                                                                0040755 0001750 0001750 00000000000 12612224743 036031  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/f2py                                               fortranobject.h                                                                                     0100644 0001750 0001750 00000012050 11472145623 041041  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/f2py/src                                           #ifndef Py_FORTRANOBJECT_H
#define Py_FORTRANOBJECT_H
#ifdef __cplusplus
extern "C" {
#endif

#include "Python.h"

#ifdef FORTRANOBJECT_C
#define NO_IMPORT_ARRAY
#endif
#define PY_ARRAY_UNIQUE_SYMBOL PyArray_API
#include "numpy/arrayobject.h"

/*
 * Python 3 support macros
 */
#if PY_VERSION_HEX >= 0x03000000
#define PyString_Check PyBytes_Check
#define PyString_GET_SIZE PyBytes_GET_SIZE
#define PyString_AS_STRING PyBytes_AS_STRING
#define PyString_FromString PyBytes_FromString
#define PyString_ConcatAndDel PyBytes_ConcatAndDel
#define PyString_AsString PyBytes_AsString

#define PyInt_Check PyLong_Check
#define PyInt_FromLong PyLong_FromLong
#define PyInt_AS_LONG PyLong_AsLong
#define PyInt_AsLong PyLong_AsLong

#define PyNumber_Int PyNumber_Long
#endif

#if (PY_VERSION_HEX < 0x02060000)
#define Py_TYPE(o)    (((PyObject*)(o))->ob_type)
#define Py_REFCNT(o)  (((PyObject*)(o))->ob_refcnt)
#define Py_SIZE(o)    (((PyVarObject*)(o))->ob_size)
#endif

  /*
#ifdef F2PY_REPORT_ATEXIT_DISABLE
#undef F2PY_REPORT_ATEXIT
#else

#ifndef __FreeBSD__
#ifndef __WIN32__
#ifndef __APPLE__
#define F2PY_REPORT_ATEXIT
#endif
#endif
#endif

#endif
  */

#ifdef F2PY_REPORT_ATEXIT
#include <sys/timeb.h>
  extern void f2py_start_clock(void);
  extern void f2py_stop_clock(void);
  extern void f2py_start_call_clock(void);
  extern void f2py_stop_call_clock(void);
  extern void f2py_cb_start_clock(void);
  extern void f2py_cb_stop_clock(void);
  extern void f2py_cb_start_call_clock(void);
  extern void f2py_cb_stop_call_clock(void);
  extern void f2py_report_on_exit(int,void*);
#endif

#ifdef DMALLOC
#include "dmalloc.h"
#endif

/* Fortran object interface */

/*
123456789-123456789-123456789-123456789-123456789-123456789-123456789-12

PyFortranObject represents various Fortran objects:
Fortran (module) routines, COMMON blocks, module data.

Author: Pearu Peterson <pearu@cens.ioc.ee>
*/

#define F2PY_MAX_DIMS 40

typedef void (*f2py_set_data_func)(char*,npy_intp*);
typedef void (*f2py_void_func)(void);
typedef void (*f2py_init_func)(int*,npy_intp*,f2py_set_data_func,int*);

  /*typedef void* (*f2py_c_func)(void*,...);*/

typedef void *(*f2pycfunc)(void);

typedef struct {
  char *name;                /* attribute (array||routine) name */
  int rank;                  /* array rank, 0 for scalar, max is F2PY_MAX_DIMS,
				|| rank=-1 for Fortran routine */
  struct {npy_intp d[F2PY_MAX_DIMS];} dims; /* dimensions of the array, || not used */
  int type;                  /* PyArray_<type> || not used */
  char *data;                /* pointer to array || Fortran routine */
  f2py_init_func func;            /* initialization function for
				allocatable arrays:
				func(&rank,dims,set_ptr_func,name,len(name))
				|| C/API wrapper for Fortran routine */
  char *doc;                 /* documentation string; only recommended
				for routines. */
} FortranDataDef;

typedef struct {
  PyObject_HEAD
  int len;                   /* Number of attributes */
  FortranDataDef *defs;      /* An array of FortranDataDef's */
  PyObject       *dict;      /* Fortran object attribute dictionary */
} PyFortranObject;

#define PyFortran_Check(op) (Py_TYPE(op) == &PyFortran_Type)
#define PyFortran_Check1(op) (0==strcmp(Py_TYPE(op)->tp_name,"fortran"))

  extern PyTypeObject PyFortran_Type;
  extern int F2PyDict_SetItemString(PyObject* dict, char *name, PyObject *obj);
  extern PyObject * PyFortranObject_New(FortranDataDef* defs, f2py_void_func init);
  extern PyObject * PyFortranObject_NewAsAttr(FortranDataDef* defs);

#if PY_VERSION_HEX >= 0x03000000

PyObject * F2PyCapsule_FromVoidPtr(void *ptr, void (*dtor)(PyObject *));
void * F2PyCapsule_AsVoidPtr(PyObject *obj);
int F2PyCapsule_Check(PyObject *ptr);

#else

PyObject * F2PyCapsule_FromVoidPtr(void *ptr, void (*dtor)(void *));
void * F2PyCapsule_AsVoidPtr(PyObject *ptr);
int F2PyCapsule_Check(PyObject *ptr);

#endif

#define ISCONTIGUOUS(m) ((m)->flags & NPY_CONTIGUOUS)
#define F2PY_INTENT_IN 1
#define F2PY_INTENT_INOUT 2
#define F2PY_INTENT_OUT 4
#define F2PY_INTENT_HIDE 8
#define F2PY_INTENT_CACHE 16
#define F2PY_INTENT_COPY 32
#define F2PY_INTENT_C 64
#define F2PY_OPTIONAL 128
#define F2PY_INTENT_INPLACE 256
#define F2PY_INTENT_ALIGNED4 512
#define F2PY_INTENT_ALIGNED8 1024
#define F2PY_INTENT_ALIGNED16 2048

#define ARRAY_ISALIGNED(ARR, SIZE) ((size_t)(PyArray_DATA(ARR)) % (SIZE) == 0)
#define F2PY_ALIGN4(intent) (intent & F2PY_INTENT_ALIGNED4)
#define F2PY_ALIGN8(intent) (intent & F2PY_INTENT_ALIGNED8)
#define F2PY_ALIGN16(intent) (intent & F2PY_INTENT_ALIGNED16)

#define F2PY_GET_ALIGNMENT(intent) \
	(F2PY_ALIGN4(intent) ? 4 : \
	 (F2PY_ALIGN8(intent) ? 8 : \
	  (F2PY_ALIGN16(intent) ? 16 : 1) ))
#define F2PY_CHECK_ALIGNMENT(arr, intent) ARRAY_ISALIGNED(arr, F2PY_GET_ALIGNMENT(intent))

  extern PyArrayObject* array_from_pyobj(const int type_num,
					 npy_intp *dims,
					 const int rank,
					 const int intent,
					 PyObject *obj);
  extern int copy_ND_array(const PyArrayObject *in, PyArrayObject *out);

#ifdef DEBUG_COPY_ND_ARRAY
  extern void dump_attrs(const PyArrayObject* arr);
#endif


#ifdef __cplusplus
}
#endif
#endif /* !Py_FORTRANOBJECT_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        numarray/                                                                                           0040755 0001750 0001750 00000000000 12612224743 036220  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy                                                    include/                                                                                            0040755 0001750 0001750 00000000000 12612224743 037643  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray                                           numpy/                                                                                              0040755 0001750 0001750 00000000000 12612224743 041013  5                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray/include                                   arraybase.h                                                                                         0100644 0001750 0001750 00000003143 11755722573 043146  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray/include/numpy                             #if !defined(__arraybase_h)
#define _arraybase_h 1

#define SZ_BUF  79
#define MAXDIM NPY_MAXDIMS
#define MAXARGS 18

typedef npy_intp maybelong;
typedef npy_bool Bool;
typedef npy_int8 Int8;
typedef npy_uint8 UInt8;
typedef npy_int16 Int16;
typedef npy_uint16 UInt16;
typedef npy_int32 Int32;
typedef npy_uint32 UInt32; 
typedef npy_int64 Int64;
typedef npy_uint64 UInt64;
typedef npy_float32 Float32;
typedef npy_float64 Float64;

typedef enum
{
  tAny=-1,
  tBool=PyArray_BOOL,
  tInt8=PyArray_INT8,
  tUInt8=PyArray_UINT8,
  tInt16=PyArray_INT16,
  tUInt16=PyArray_UINT16,
  tInt32=PyArray_INT32,
  tUInt32=PyArray_UINT32,
  tInt64=PyArray_INT64,
  tUInt64=PyArray_UINT64,
  tFloat32=PyArray_FLOAT32,
  tFloat64=PyArray_FLOAT64,
  tComplex32=PyArray_COMPLEX64,
  tComplex64=PyArray_COMPLEX128,
  tObject=PyArray_OBJECT,        /* placeholder... does nothing */
  tMaxType=PyArray_NTYPES,
  tDefault = tFloat64,
#if NPY_BITSOF_LONG == 64
  tLong = tInt64,
#else
  tLong = tInt32,
#endif
} NumarrayType;

#define nNumarrayType PyArray_NTYPES

#define HAS_UINT64 1

typedef enum
{
        NUM_LITTLE_ENDIAN=0,
        NUM_BIG_ENDIAN = 1
} NumarrayByteOrder;

typedef struct { Float32 r, i; } Complex32;
typedef struct { Float64 r, i; } Complex64;

#define WRITABLE NPY_WRITEABLE
#define CHECKOVERFLOW 0x800
#define UPDATEDICT 0x1000
#define FORTRAN_CONTIGUOUS NPY_FORTRAN
#define IS_CARRAY (NPY_CONTIGUOUS | NPY_ALIGNED)

#define PyArray(m)                      ((PyArrayObject *)(m))
#define PyArray_ISFORTRAN_CONTIGUOUS(m) (((PyArray(m))->flags & FORTRAN_CONTIGUOUS) != 0)
#define PyArray_ISWRITABLE  PyArray_ISWRITEABLE 


#endif 
                                                                                                                                                                                                                                                                                                                                                                                                                             cfunc.h                                                                                             0100644 0001750 0001750 00000006001 11755722573 042267  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray/include/numpy                             #if !defined(__cfunc__)
#define __cfunc__ 1

typedef PyObject *(*CFUNCasPyValue)(void *);
typedef int (*UFUNC)(long, long, long, void **, long*);
/* typedef void (*CFUNC_2ARG)(long, void *, void *); */
/* typedef void (*CFUNC_3ARG)(long, void *, void *, void *); */
typedef int (*CFUNCfromPyValue)(PyObject *, void *);
typedef int (*CFUNC_STRIDE_CONV_FUNC)(long, long, maybelong *, 
	      void *, long, maybelong*, void *, long, maybelong *);

typedef int (*CFUNC_STRIDED_FUNC)(PyObject *, long, PyArrayObject **, 
				  char **data); 

#define MAXARRAYS 16

typedef enum {
	CFUNC_UFUNC,
	CFUNC_STRIDING,
	CFUNC_NSTRIDING,
	CFUNC_AS_PY_VALUE,
	CFUNC_FROM_PY_VALUE
} eCfuncType;

typedef struct {
	char *name;
        void *fptr;            /* Pointer to "un-wrapped" c function */
	eCfuncType type;       /* UFUNC, STRIDING, AsPyValue, FromPyValue */
	Bool chkself;          /* CFUNC does own alignment/bounds checking */
	Bool align;            /* CFUNC requires aligned buffer pointers */
	Int8 wantIn, wantOut;  /* required input/output arg counts. */
	Int8 sizes[MAXARRAYS]; /* array of align/itemsizes. */
	Int8 iters[MAXARRAYS]; /*  array of element counts. 0 --> niter. */
} CfuncDescriptor;

typedef struct {
    PyObject_HEAD
    CfuncDescriptor descr;
} CfuncObject;

#define SELF_CHECKED_CFUNC_DESCR(name, type)                                 \
   static CfuncDescriptor name##_descr = { #name, (void *) name, type, 1 }

#define CHECK_ALIGN 1

#define CFUNC_DESCR(name, type, align, iargs, oargs, s1, s2, s3, i1, i2, i3)  \
  static CfuncDescriptor name##_descr =                                       \
    { #name, (void *)name, type, 0, align, iargs, oargs, {s1, s2, s3}, {i1, i2, i3} }

#define UFUNC_DESCR1(name, s1)                                                \
   CFUNC_DESCR(name, CFUNC_UFUNC, CHECK_ALIGN, 0, 1, s1, 0, 0, 0, 0, 0)

#define UFUNC_DESCR2(name, s1, s2)                                            \
   CFUNC_DESCR(name, CFUNC_UFUNC, CHECK_ALIGN, 1, 1, s1, s2, 0, 0, 0, 0)

#define UFUNC_DESCR3(name, s1, s2, s3)                                        \
   CFUNC_DESCR(name, CFUNC_UFUNC, CHECK_ALIGN, 2, 1, s1, s2, s3, 0, 0, 0)

#define UFUNC_DESCR3sv(name, s1, s2, s3)                                      \
   CFUNC_DESCR(name, CFUNC_UFUNC, CHECK_ALIGN, 2, 1, s1, s2, s3, 1, 0, 0)

#define UFUNC_DESCR3vs(name, s1, s2, s3)                                      \
   CFUNC_DESCR(name, CFUNC_UFUNC, CHECK_ALIGN, 2, 1, s1, s2, s3, 0, 1, 0)

#define STRIDING_DESCR2(name, align, s1, s2)                                  \
   CFUNC_DESCR(name, CFUNC_STRIDING, align, 1, 1, s1, s2, 0, 0, 0, 0)

#define NSTRIDING_DESCR1(name)                                                \
   CFUNC_DESCR(name, CFUNC_NSTRIDING, 0, 0, 1, 0, 0, 0, 0, 0, 0)

#define NSTRIDING_DESCR2(name)                                                \
   CFUNC_DESCR(name, CFUNC_NSTRIDING, 0, 1, 1, 0, 0, 0, 0, 0, 0)

#define NSTRIDING_DESCR3(name)                                                \
   CFUNC_DESCR(name, CFUNC_NSTRIDING, 0, 2, 1, 0, 0, 0, 0, 0, 0)

#endif

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ieeespecial.h                                                                                       0100644 0001750 0001750 00000007264 11750317132 043437  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray/include/numpy                             /* 32-bit special value ranges */

#if defined(_MSC_VER)
#define MKINT(x) (x##UL)
#define MKINT64(x) (x##Ui64)
#define BIT(x) (1Ui64 << (x))
#else
#define MKINT(x) (x##U)
#define MKINT64(x) (x##ULL)
#define BIT(x) (1ULL << (x))
#endif


#define NEG_QUIET_NAN_MIN32    MKINT(0xFFC00001)
#define NEG_QUIET_NAN_MAX32    MKINT(0xFFFFFFFF)

#define INDETERMINATE_MIN32    MKINT(0xFFC00000)
#define INDETERMINATE_MAX32    MKINT(0xFFC00000)

#define NEG_SIGNAL_NAN_MIN32   MKINT(0xFF800001)
#define NEG_SIGNAL_NAN_MAX32   MKINT(0xFFBFFFFF)

#define NEG_INFINITY_MIN32     MKINT(0xFF800000)

#define NEG_NORMALIZED_MIN32   MKINT(0x80800000)
#define NEG_NORMALIZED_MAX32   MKINT(0xFF7FFFFF)

#define NEG_DENORMALIZED_MIN32 MKINT(0x80000001)
#define NEG_DENORMALIZED_MAX32 MKINT(0x807FFFFF)

#define NEG_ZERO_MIN32         MKINT(0x80000000)
#define NEG_ZERO_MAX32         MKINT(0x80000000)

#define POS_ZERO_MIN32         MKINT(0x00000000)
#define POS_ZERO_MAX32         MKINT(0x00000000)

#define POS_DENORMALIZED_MIN32 MKINT(0x00000001)
#define POS_DENORMALIZED_MAX32 MKINT(0x007FFFFF)

#define POS_NORMALIZED_MIN32   MKINT(0x00800000)
#define POS_NORMALIZED_MAX32   MKINT(0x7F7FFFFF)

#define POS_INFINITY_MIN32     MKINT(0x7F800000)
#define POS_INFINITY_MAX32     MKINT(0x7F800000)

#define POS_SIGNAL_NAN_MIN32   MKINT(0x7F800001)
#define POS_SIGNAL_NAN_MAX32   MKINT(0x7FBFFFFF)

#define POS_QUIET_NAN_MIN32    MKINT(0x7FC00000)
#define POS_QUIET_NAN_MAX32    MKINT(0x7FFFFFFF)

/* 64-bit special value ranges */

#define NEG_QUIET_NAN_MIN64    MKINT64(0xFFF8000000000001)
#define NEG_QUIET_NAN_MAX64    MKINT64(0xFFFFFFFFFFFFFFFF)

#define INDETERMINATE_MIN64    MKINT64(0xFFF8000000000000)
#define INDETERMINATE_MAX64    MKINT64(0xFFF8000000000000)

#define NEG_SIGNAL_NAN_MIN64   MKINT64(0xFFF7FFFFFFFFFFFF)
#define NEG_SIGNAL_NAN_MAX64   MKINT64(0xFFF0000000000001)

#define NEG_INFINITY_MIN64     MKINT64(0xFFF0000000000000)

#define NEG_NORMALIZED_MIN64   MKINT64(0xFFEFFFFFFFFFFFFF)
#define NEG_NORMALIZED_MAX64   MKINT64(0x8010000000000000)

#define NEG_DENORMALIZED_MIN64 MKINT64(0x800FFFFFFFFFFFFF)
#define NEG_DENORMALIZED_MAX64 MKINT64(0x8000000000000001)

#define NEG_ZERO_MIN64         MKINT64(0x8000000000000000)
#define NEG_ZERO_MAX64         MKINT64(0x8000000000000000)

#define POS_ZERO_MIN64         MKINT64(0x0000000000000000)
#define POS_ZERO_MAX64         MKINT64(0x0000000000000000)

#define POS_DENORMALIZED_MIN64 MKINT64(0x0000000000000001)
#define POS_DENORMALIZED_MAX64 MKINT64(0x000FFFFFFFFFFFFF)

#define POS_NORMALIZED_MIN64   MKINT64(0x0010000000000000)
#define POS_NORMALIZED_MAX64   MKINT64(0x7FEFFFFFFFFFFFFF)

#define POS_INFINITY_MIN64     MKINT64(0x7FF0000000000000)
#define POS_INFINITY_MAX64     MKINT64(0x7FF0000000000000)

#define POS_SIGNAL_NAN_MIN64   MKINT64(0x7FF0000000000001)
#define POS_SIGNAL_NAN_MAX64   MKINT64(0x7FF7FFFFFFFFFFFF)

#define POS_QUIET_NAN_MIN64    MKINT64(0x7FF8000000000000)
#define POS_QUIET_NAN_MAX64    MKINT64(0x7FFFFFFFFFFFFFFF)

typedef enum
{
	POS_QNAN_BIT,
	NEG_QNAN_BIT,
	POS_SNAN_BIT,
	NEG_SNAN_BIT,
	POS_INF_BIT,
	NEG_INF_BIT,
	POS_DEN_BIT,
	NEG_DEN_BIT,
	POS_NOR_BIT,
	NEG_NOR_BIT,
	POS_ZERO_BIT,
	NEG_ZERO_BIT,
	INDETERM_BIT,
	BUG_BIT
} ieee_selects;

#define MSK_POS_QNAN BIT(POS_QNAN_BIT)
#define MSK_POS_SNAN BIT(POS_SNAN_BIT)
#define MSK_POS_INF  BIT(POS_INF_BIT)
#define MSK_POS_DEN  BIT(POS_DEN_BIT)
#define MSK_POS_NOR  BIT(POS_NOR_BIT)
#define MSK_POS_ZERO BIT(POS_ZERO_BIT)
#define MSK_NEG_QNAN BIT(NEG_QNAN_BIT)
#define MSK_NEG_SNAN BIT(NEG_SNAN_BIT)
#define MSK_NEG_INF  BIT(NEG_INF_BIT)
#define MSK_NEG_DEN  BIT(NEG_DEN_BIT)
#define MSK_NEG_NOR  BIT(NEG_NOR_BIT)
#define MSK_NEG_ZERO BIT(NEG_ZERO_BIT)
#define MSK_INDETERM BIT(INDETERM_BIT)
#define MSK_BUG      BIT(BUG_BIT)

                                                                                                                                                                                                                                                                                                                                            libnumarray.h                                                                                       0100644 0001750 0001750 00000113116 11750317132 043506  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray/include/numpy                             /* Compatibility with numarray.  Do not use in new code.
 */

#ifndef NUMPY_LIBNUMARRAY_H
#define NUMPY_LIBNUMARRAY_H

#include "numpy/arrayobject.h"
#include "arraybase.h"
#include "nummacro.h"
#include "numcomplex.h"
#include "ieeespecial.h"
#include "cfunc.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Header file for libnumarray */

#if !defined(_libnumarray_MODULE)

/*
Extensions constructed from seperate compilation units can access the
C-API defined here by defining "libnumarray_UNIQUE_SYMBOL" to a global
name unique to the extension.  Doing this circumvents the requirement
to import libnumarray into each compilation unit, but is nevertheless
mildly discouraged as "outside the Python norm" and potentially
leading to problems.  Looking around at "existing Python art", most
extension modules are monolithic C files, and likely for good reason.
*/

/* C API address pointer */
#if defined(NO_IMPORT) || defined(NO_IMPORT_ARRAY)
extern void **libnumarray_API;
#else
#if defined(libnumarray_UNIQUE_SYMBOL)
void **libnumarray_API;
#else
static void **libnumarray_API;
#endif
#endif

#if PY_VERSION_HEX >= 0x03000000
#define _import_libnumarray()                                                    \
        {                                                                        \
        PyObject *module = PyImport_ImportModule("numpy.numarray._capi");        \
        if (module != NULL) {                                                    \
          PyObject *module_dict = PyModule_GetDict(module);                      \
          PyObject *c_api_object =                                               \
                 PyDict_GetItemString(module_dict, "_C_API");                    \
          if (c_api_object && PyCapsule_CheckExact(c_api_object)) {              \
            libnumarray_API = (void **)PyCapsule_GetPointer(c_api_object, NULL); \
          } else {                                                               \
            PyErr_Format(PyExc_ImportError,                                      \
                         "Can't get API for module 'numpy.numarray._capi'");     \
          }                                                                      \
        }                                                                        \
      }

#else
#define _import_libnumarray()                                                   \
        {                                                                       \
        PyObject *module = PyImport_ImportModule("numpy.numarray._capi");       \
        if (module != NULL) {                                                   \
          PyObject *module_dict = PyModule_GetDict(module);                     \
          PyObject *c_api_object =                                              \
                 PyDict_GetItemString(module_dict, "_C_API");                   \
          if (c_api_object && PyCObject_Check(c_api_object)) {                  \
            libnumarray_API = (void **)PyCObject_AsVoidPtr(c_api_object);       \
          } else {                                                              \
            PyErr_Format(PyExc_ImportError,                                     \
                         "Can't get API for module 'numpy.numarray._capi'");    \
          }                                                                     \
        }                                                                       \
      }
#endif

#define import_libnumarray() _import_libnumarray(); if (PyErr_Occurred()) { PyErr_Print(); PyErr_SetString(PyExc_ImportError, "numpy.numarray._capi failed to import.\n"); return; }

#endif


#define libnumarray_FatalApiError (Py_FatalError("Call to API function without first calling import_libnumarray() in " __FILE__), NULL)


/* Macros defining components of function prototypes */

#ifdef _libnumarray_MODULE
  /* This section is used when compiling libnumarray */

static PyObject *_Error;

static PyObject*  getBuffer  (PyObject*o);

static int  isBuffer  (PyObject*o);

static int  getWriteBufferDataPtr  (PyObject*o,void**p);

static int  isBufferWriteable  (PyObject*o);

static int  getReadBufferDataPtr  (PyObject*o,void**p);

static int  getBufferSize  (PyObject*o);

static double  num_log  (double x);

static double  num_log10  (double x);

static double  num_pow  (double x, double y);

static double  num_acosh  (double x);

static double  num_asinh  (double x);

static double  num_atanh  (double x);

static double  num_round  (double x);

static int  int_dividebyzero_error  (long value, long unused);

static int  int_overflow_error  (Float64 value);

static int  umult64_overflow  (UInt64 a, UInt64 b);

static int  smult64_overflow  (Int64 a0, Int64 b0);

static void  NA_Done  (void);

static PyArrayObject*  NA_NewAll  (int ndim, maybelong* shape, NumarrayType type, void* buffer, maybelong byteoffset, maybelong bytestride, int byteorder, int aligned, int writeable);

static PyArrayObject*  NA_NewAllStrides  (int ndim, maybelong* shape, maybelong* strides, NumarrayType type, void* buffer, maybelong byteoffset, int byteorder, int aligned, int writeable);

static PyArrayObject*  NA_New  (void* buffer, NumarrayType type, int ndim,...);

static PyArrayObject*  NA_Empty  (int ndim, maybelong* shape, NumarrayType type);

static PyArrayObject*  NA_NewArray  (void* buffer, NumarrayType type, int ndim, ...);

static PyArrayObject*  NA_vNewArray  (void* buffer, NumarrayType type, int ndim, maybelong *shape);

static PyObject*  NA_ReturnOutput  (PyObject*,PyArrayObject*);

static long  NA_getBufferPtrAndSize  (PyObject*,int,void**);

static int  NA_checkIo  (char*,int,int,int,int);

static int  NA_checkOneCBuffer  (char*,long,void*,long,size_t);

static int  NA_checkNCBuffers  (char*,int,long,void**,long*,Int8*,Int8*);

static int  NA_checkOneStriding  (char*,long,maybelong*,long,maybelong*,long,long,int);

static PyObject*  NA_new_cfunc  (CfuncDescriptor*);

static int  NA_add_cfunc  (PyObject*,char*,CfuncDescriptor*);

static PyArrayObject*  NA_InputArray  (PyObject*,NumarrayType,int);

static PyArrayObject*  NA_OutputArray  (PyObject*,NumarrayType,int);

static PyArrayObject*  NA_IoArray  (PyObject*,NumarrayType,int);

static PyArrayObject*  NA_OptionalOutputArray  (PyObject*,NumarrayType,int,PyArrayObject*);

static long  NA_get_offset  (PyArrayObject*,int,...);

static Float64  NA_get_Float64  (PyArrayObject*,long);

static void  NA_set_Float64  (PyArrayObject*,long,Float64);

static Complex64  NA_get_Complex64  (PyArrayObject*,long);

static void  NA_set_Complex64  (PyArrayObject*,long,Complex64);

static Int64  NA_get_Int64  (PyArrayObject*,long);

static void  NA_set_Int64  (PyArrayObject*,long,Int64);

static Float64  NA_get1_Float64  (PyArrayObject*,long);

static Float64  NA_get2_Float64  (PyArrayObject*,long,long);

static Float64  NA_get3_Float64  (PyArrayObject*,long,long,long);

static void  NA_set1_Float64  (PyArrayObject*,long,Float64);

static void  NA_set2_Float64  (PyArrayObject*,long,long,Float64);

static void  NA_set3_Float64  (PyArrayObject*,long,long,long,Float64);

static Complex64  NA_get1_Complex64  (PyArrayObject*,long);

static Complex64  NA_get2_Complex64  (PyArrayObject*,long,long);

static Complex64  NA_get3_Complex64  (PyArrayObject*,long,long,long);

static void  NA_set1_Complex64  (PyArrayObject*,long,Complex64);

static void  NA_set2_Complex64  (PyArrayObject*,long,long,Complex64);

static void  NA_set3_Complex64  (PyArrayObject*,long,long,long,Complex64);

static Int64  NA_get1_Int64  (PyArrayObject*,long);

static Int64  NA_get2_Int64  (PyArrayObject*,long,long);

static Int64  NA_get3_Int64  (PyArrayObject*,long,long,long);

static void  NA_set1_Int64  (PyArrayObject*,long,Int64);

static void  NA_set2_Int64  (PyArrayObject*,long,long,Int64);

static void  NA_set3_Int64  (PyArrayObject*,long,long,long,Int64);

static int  NA_get1D_Float64  (PyArrayObject*,long,int,Float64*);

static int  NA_set1D_Float64  (PyArrayObject*,long,int,Float64*);

static int  NA_get1D_Int64  (PyArrayObject*,long,int,Int64*);

static int  NA_set1D_Int64  (PyArrayObject*,long,int,Int64*);

static int  NA_get1D_Complex64  (PyArrayObject*,long,int,Complex64*);

static int  NA_set1D_Complex64  (PyArrayObject*,long,int,Complex64*);

static int  NA_ShapeEqual  (PyArrayObject*,PyArrayObject*);

static int  NA_ShapeLessThan  (PyArrayObject*,PyArrayObject*);

static int  NA_ByteOrder  (void);

static Bool  NA_IeeeSpecial32  (Float32*,Int32*);

static Bool  NA_IeeeSpecial64  (Float64*,Int32*);

static PyArrayObject*  NA_updateDataPtr  (PyArrayObject*);

static char*  NA_typeNoToName  (int);

static int  NA_nameToTypeNo  (char*);

static PyObject*  NA_typeNoToTypeObject  (int);

static PyObject*  NA_intTupleFromMaybeLongs  (int,maybelong*);

static long  NA_maybeLongsFromIntTuple  (int,maybelong*,PyObject*);

static int  NA_intTupleProduct  (PyObject *obj, long *product);

static long  NA_isIntegerSequence  (PyObject*);

static PyObject*  NA_setArrayFromSequence  (PyArrayObject*,PyObject*);

static int  NA_maxType  (PyObject*);

static int  NA_isPythonScalar  (PyObject *obj);

static PyObject*  NA_getPythonScalar  (PyArrayObject*,long);

static int  NA_setFromPythonScalar  (PyArrayObject*,long,PyObject*);

static int  NA_NDArrayCheck  (PyObject*);

static int  NA_NumArrayCheck  (PyObject*);

static int  NA_ComplexArrayCheck  (PyObject*);

static unsigned long  NA_elements  (PyArrayObject*);

static int  NA_typeObjectToTypeNo  (PyObject*);

static int  NA_copyArray  (PyArrayObject* to, const PyArrayObject* from);

static PyArrayObject*  NA_copy  (PyArrayObject*);

static PyObject*  NA_getType  (PyObject *typeobj_or_name);

static PyObject *  NA_callCUFuncCore  (PyObject *cfunc, long niter, long ninargs, long noutargs, PyObject **BufferObj, long *offset);

static PyObject *  NA_callStrideConvCFuncCore  (PyObject *cfunc, int nshape, maybelong *shape, PyObject *inbuffObj,  long inboffset, int nstrides0, maybelong *inbstrides, PyObject *outbuffObj, long outboffset, int nstrides1, maybelong *outbstrides, long nbytes);

static void  NA_stridesFromShape  (int nshape, maybelong *shape, maybelong bytestride, maybelong *strides);

static int  NA_OperatorCheck  (PyObject *obj);

static int  NA_ConverterCheck  (PyObject *obj);

static int  NA_UfuncCheck  (PyObject *obj);

static int  NA_CfuncCheck  (PyObject *obj);

static int  NA_getByteOffset  (PyArrayObject *array, int nindices, maybelong *indices, long *offset);

static int  NA_swapAxes  (PyArrayObject *array, int x, int y);

static PyObject *  NA_initModuleGlobal  (char *module, char *global);

static NumarrayType  NA_NumarrayType  (PyObject *seq);

static PyArrayObject *  NA_NewAllFromBuffer  (int ndim, maybelong *shape, NumarrayType type, PyObject *bufferObject, maybelong byteoffset, maybelong bytestride, int byteorder, int aligned, int writeable);

static Float64 *  NA_alloc1D_Float64  (PyArrayObject *a, long offset, int cnt);

static Int64 *  NA_alloc1D_Int64  (PyArrayObject *a, long offset, int cnt);

static void  NA_updateAlignment  (PyArrayObject *self);

static void  NA_updateContiguous  (PyArrayObject *self);

static void  NA_updateStatus  (PyArrayObject *self);

static int  NA_NumArrayCheckExact  (PyObject *op);

static int  NA_NDArrayCheckExact  (PyObject *op);

static int  NA_OperatorCheckExact  (PyObject *op);

static int  NA_ConverterCheckExact  (PyObject *op);

static int  NA_UfuncCheckExact  (PyObject *op);

static int  NA_CfuncCheckExact  (PyObject *op);

static char *  NA_getArrayData  (PyArrayObject *ap);

static void  NA_updateByteswap  (PyArrayObject *ap);

static PyArray_Descr *  NA_DescrFromType  (int type);

static PyObject *  NA_Cast  (PyArrayObject *a, int type);

static int  NA_checkFPErrors  (void);

static void  NA_clearFPErrors  (void);

static int  NA_checkAndReportFPErrors  (char *name);

static Bool  NA_IeeeMask32  (Float32,Int32);

static Bool  NA_IeeeMask64  (Float64,Int32);

static int  _NA_callStridingHelper  (PyObject *aux, long dim, long nnumarray, PyArrayObject *numarray[], char *data[], CFUNC_STRIDED_FUNC f);

static PyArrayObject *  NA_FromDimsStridesDescrAndData  (int nd, maybelong *dims, maybelong *strides, PyArray_Descr *descr, char *data);

static PyArrayObject *  NA_FromDimsTypeAndData  (int nd, maybelong *dims, int type, char *data);

static PyArrayObject *  NA_FromDimsStridesTypeAndData  (int nd, maybelong *dims, maybelong *strides, int type, char *data);

static int  NA_scipy_typestr  (NumarrayType t, int byteorder, char *typestr);

static PyArrayObject *  NA_FromArrayStruct  (PyObject *a);


#else
  /* This section is used in modules that use libnumarray */

#define  getBuffer (libnumarray_API ? (*(PyObject* (*)  (PyObject*o) ) libnumarray_API[ 0 ]) : (*(PyObject* (*)  (PyObject*o) ) libnumarray_FatalApiError))

#define  isBuffer (libnumarray_API ? (*(int (*)  (PyObject*o) ) libnumarray_API[ 1 ]) : (*(int (*)  (PyObject*o) ) libnumarray_FatalApiError))

#define  getWriteBufferDataPtr (libnumarray_API ? (*(int (*)  (PyObject*o,void**p) ) libnumarray_API[ 2 ]) : (*(int (*)  (PyObject*o,void**p) ) libnumarray_FatalApiError))

#define  isBufferWriteable (libnumarray_API ? (*(int (*)  (PyObject*o) ) libnumarray_API[ 3 ]) : (*(int (*)  (PyObject*o) ) libnumarray_FatalApiError))

#define  getReadBufferDataPtr (libnumarray_API ? (*(int (*)  (PyObject*o,void**p) ) libnumarray_API[ 4 ]) : (*(int (*)  (PyObject*o,void**p) ) libnumarray_FatalApiError))

#define  getBufferSize (libnumarray_API ? (*(int (*)  (PyObject*o) ) libnumarray_API[ 5 ]) : (*(int (*)  (PyObject*o) ) libnumarray_FatalApiError))

#define  num_log (libnumarray_API ? (*(double (*)  (double x) ) libnumarray_API[ 6 ]) : (*(double (*)  (double x) ) libnumarray_FatalApiError))

#define  num_log10 (libnumarray_API ? (*(double (*)  (double x) ) libnumarray_API[ 7 ]) : (*(double (*)  (double x) ) libnumarray_FatalApiError))

#define  num_pow (libnumarray_API ? (*(double (*)  (double x, double y) ) libnumarray_API[ 8 ]) : (*(double (*)  (double x, double y) ) libnumarray_FatalApiError))

#define  num_acosh (libnumarray_API ? (*(double (*)  (double x) ) libnumarray_API[ 9 ]) : (*(double (*)  (double x) ) libnumarray_FatalApiError))

#define  num_asinh (libnumarray_API ? (*(double (*)  (double x) ) libnumarray_API[ 10 ]) : (*(double (*)  (double x) ) libnumarray_FatalApiError))

#define  num_atanh (libnumarray_API ? (*(double (*)  (double x) ) libnumarray_API[ 11 ]) : (*(double (*)  (double x) ) libnumarray_FatalApiError))

#define  num_round (libnumarray_API ? (*(double (*)  (double x) ) libnumarray_API[ 12 ]) : (*(double (*)  (double x) ) libnumarray_FatalApiError))

#define  int_dividebyzero_error (libnumarray_API ? (*(int (*)  (long value, long unused) ) libnumarray_API[ 13 ]) : (*(int (*)  (long value, long unused) ) libnumarray_FatalApiError))

#define  int_overflow_error (libnumarray_API ? (*(int (*)  (Float64 value) ) libnumarray_API[ 14 ]) : (*(int (*)  (Float64 value) ) libnumarray_FatalApiError))

#define  umult64_overflow (libnumarray_API ? (*(int (*)  (UInt64 a, UInt64 b) ) libnumarray_API[ 15 ]) : (*(int (*)  (UInt64 a, UInt64 b) ) libnumarray_FatalApiError))

#define  smult64_overflow (libnumarray_API ? (*(int (*)  (Int64 a0, Int64 b0) ) libnumarray_API[ 16 ]) : (*(int (*)  (Int64 a0, Int64 b0) ) libnumarray_FatalApiError))

#define  NA_Done (libnumarray_API ? (*(void (*)  (void) ) libnumarray_API[ 17 ]) : (*(void (*)  (void) ) libnumarray_FatalApiError))

#define  NA_NewAll (libnumarray_API ? (*(PyArrayObject* (*)  (int ndim, maybelong* shape, NumarrayType type, void* buffer, maybelong byteoffset, maybelong bytestride, int byteorder, int aligned, int writeable) ) libnumarray_API[ 18 ]) : (*(PyArrayObject* (*)  (int ndim, maybelong* shape, NumarrayType type, void* buffer, maybelong byteoffset, maybelong bytestride, int byteorder, int aligned, int writeable) ) libnumarray_FatalApiError))

#define  NA_NewAllStrides (libnumarray_API ? (*(PyArrayObject* (*)  (int ndim, maybelong* shape, maybelong* strides, NumarrayType type, void* buffer, maybelong byteoffset, int byteorder, int aligned, int writeable) ) libnumarray_API[ 19 ]) : (*(PyArrayObject* (*)  (int ndim, maybelong* shape, maybelong* strides, NumarrayType type, void* buffer, maybelong byteoffset, int byteorder, int aligned, int writeable) ) libnumarray_FatalApiError))

#define  NA_New (libnumarray_API ? (*(PyArrayObject* (*)  (void* buffer, NumarrayType type, int ndim,...) ) libnumarray_API[ 20 ]) : (*(PyArrayObject* (*)  (void* buffer, NumarrayType type, int ndim,...) ) libnumarray_FatalApiError))

#define  NA_Empty (libnumarray_API ? (*(PyArrayObject* (*)  (int ndim, maybelong* shape, NumarrayType type) ) libnumarray_API[ 21 ]) : (*(PyArrayObject* (*)  (int ndim, maybelong* shape, NumarrayType type) ) libnumarray_FatalApiError))

#define  NA_NewArray (libnumarray_API ? (*(PyArrayObject* (*)  (void* buffer, NumarrayType type, int ndim, ...) ) libnumarray_API[ 22 ]) : (*(PyArrayObject* (*)  (void* buffer, NumarrayType type, int ndim, ...) ) libnumarray_FatalApiError))

#define  NA_vNewArray (libnumarray_API ? (*(PyArrayObject* (*)  (void* buffer, NumarrayType type, int ndim, maybelong *shape) ) libnumarray_API[ 23 ]) : (*(PyArrayObject* (*)  (void* buffer, NumarrayType type, int ndim, maybelong *shape) ) libnumarray_FatalApiError))

#define  NA_ReturnOutput (libnumarray_API ? (*(PyObject* (*)  (PyObject*,PyArrayObject*) ) libnumarray_API[ 24 ]) : (*(PyObject* (*)  (PyObject*,PyArrayObject*) ) libnumarray_FatalApiError))

#define  NA_getBufferPtrAndSize (libnumarray_API ? (*(long (*)  (PyObject*,int,void**) ) libnumarray_API[ 25 ]) : (*(long (*)  (PyObject*,int,void**) ) libnumarray_FatalApiError))

#define  NA_checkIo (libnumarray_API ? (*(int (*)  (char*,int,int,int,int) ) libnumarray_API[ 26 ]) : (*(int (*)  (char*,int,int,int,int) ) libnumarray_FatalApiError))

#define  NA_checkOneCBuffer (libnumarray_API ? (*(int (*)  (char*,long,void*,long,size_t) ) libnumarray_API[ 27 ]) : (*(int (*)  (char*,long,void*,long,size_t) ) libnumarray_FatalApiError))

#define  NA_checkNCBuffers (libnumarray_API ? (*(int (*)  (char*,int,long,void**,long*,Int8*,Int8*) ) libnumarray_API[ 28 ]) : (*(int (*)  (char*,int,long,void**,long*,Int8*,Int8*) ) libnumarray_FatalApiError))

#define  NA_checkOneStriding (libnumarray_API ? (*(int (*)  (char*,long,maybelong*,long,maybelong*,long,long,int) ) libnumarray_API[ 29 ]) : (*(int (*)  (char*,long,maybelong*,long,maybelong*,long,long,int) ) libnumarray_FatalApiError))

#define  NA_new_cfunc (libnumarray_API ? (*(PyObject* (*)  (CfuncDescriptor*) ) libnumarray_API[ 30 ]) : (*(PyObject* (*)  (CfuncDescriptor*) ) libnumarray_FatalApiError))

#define  NA_add_cfunc (libnumarray_API ? (*(int (*)  (PyObject*,char*,CfuncDescriptor*) ) libnumarray_API[ 31 ]) : (*(int (*)  (PyObject*,char*,CfuncDescriptor*) ) libnumarray_FatalApiError))

#define  NA_InputArray (libnumarray_API ? (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int) ) libnumarray_API[ 32 ]) : (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int) ) libnumarray_FatalApiError))

#define  NA_OutputArray (libnumarray_API ? (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int) ) libnumarray_API[ 33 ]) : (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int) ) libnumarray_FatalApiError))

#define  NA_IoArray (libnumarray_API ? (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int) ) libnumarray_API[ 34 ]) : (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int) ) libnumarray_FatalApiError))

#define  NA_OptionalOutputArray (libnumarray_API ? (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int,PyArrayObject*) ) libnumarray_API[ 35 ]) : (*(PyArrayObject* (*)  (PyObject*,NumarrayType,int,PyArrayObject*) ) libnumarray_FatalApiError))

#define  NA_get_offset (libnumarray_API ? (*(long (*)  (PyArrayObject*,int,...) ) libnumarray_API[ 36 ]) : (*(long (*)  (PyArrayObject*,int,...) ) libnumarray_FatalApiError))

#define  NA_get_Float64 (libnumarray_API ? (*(Float64 (*)  (PyArrayObject*,long) ) libnumarray_API[ 37 ]) : (*(Float64 (*)  (PyArrayObject*,long) ) libnumarray_FatalApiError))

#define  NA_set_Float64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,Float64) ) libnumarray_API[ 38 ]) : (*(void (*)  (PyArrayObject*,long,Float64) ) libnumarray_FatalApiError))

#define  NA_get_Complex64 (libnumarray_API ? (*(Complex64 (*)  (PyArrayObject*,long) ) libnumarray_API[ 39 ]) : (*(Complex64 (*)  (PyArrayObject*,long) ) libnumarray_FatalApiError))

#define  NA_set_Complex64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,Complex64) ) libnumarray_API[ 40 ]) : (*(void (*)  (PyArrayObject*,long,Complex64) ) libnumarray_FatalApiError))

#define  NA_get_Int64 (libnumarray_API ? (*(Int64 (*)  (PyArrayObject*,long) ) libnumarray_API[ 41 ]) : (*(Int64 (*)  (PyArrayObject*,long) ) libnumarray_FatalApiError))

#define  NA_set_Int64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,Int64) ) libnumarray_API[ 42 ]) : (*(void (*)  (PyArrayObject*,long,Int64) ) libnumarray_FatalApiError))

#define  NA_get1_Float64 (libnumarray_API ? (*(Float64 (*)  (PyArrayObject*,long) ) libnumarray_API[ 43 ]) : (*(Float64 (*)  (PyArrayObject*,long) ) libnumarray_FatalApiError))

#define  NA_get2_Float64 (libnumarray_API ? (*(Float64 (*)  (PyArrayObject*,long,long) ) libnumarray_API[ 44 ]) : (*(Float64 (*)  (PyArrayObject*,long,long) ) libnumarray_FatalApiError))

#define  NA_get3_Float64 (libnumarray_API ? (*(Float64 (*)  (PyArrayObject*,long,long,long) ) libnumarray_API[ 45 ]) : (*(Float64 (*)  (PyArrayObject*,long,long,long) ) libnumarray_FatalApiError))

#define  NA_set1_Float64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,Float64) ) libnumarray_API[ 46 ]) : (*(void (*)  (PyArrayObject*,long,Float64) ) libnumarray_FatalApiError))

#define  NA_set2_Float64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,long,Float64) ) libnumarray_API[ 47 ]) : (*(void (*)  (PyArrayObject*,long,long,Float64) ) libnumarray_FatalApiError))

#define  NA_set3_Float64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,long,long,Float64) ) libnumarray_API[ 48 ]) : (*(void (*)  (PyArrayObject*,long,long,long,Float64) ) libnumarray_FatalApiError))

#define  NA_get1_Complex64 (libnumarray_API ? (*(Complex64 (*)  (PyArrayObject*,long) ) libnumarray_API[ 49 ]) : (*(Complex64 (*)  (PyArrayObject*,long) ) libnumarray_FatalApiError))

#define  NA_get2_Complex64 (libnumarray_API ? (*(Complex64 (*)  (PyArrayObject*,long,long) ) libnumarray_API[ 50 ]) : (*(Complex64 (*)  (PyArrayObject*,long,long) ) libnumarray_FatalApiError))

#define  NA_get3_Complex64 (libnumarray_API ? (*(Complex64 (*)  (PyArrayObject*,long,long,long) ) libnumarray_API[ 51 ]) : (*(Complex64 (*)  (PyArrayObject*,long,long,long) ) libnumarray_FatalApiError))

#define  NA_set1_Complex64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,Complex64) ) libnumarray_API[ 52 ]) : (*(void (*)  (PyArrayObject*,long,Complex64) ) libnumarray_FatalApiError))

#define  NA_set2_Complex64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,long,Complex64) ) libnumarray_API[ 53 ]) : (*(void (*)  (PyArrayObject*,long,long,Complex64) ) libnumarray_FatalApiError))

#define  NA_set3_Complex64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,long,long,Complex64) ) libnumarray_API[ 54 ]) : (*(void (*)  (PyArrayObject*,long,long,long,Complex64) ) libnumarray_FatalApiError))

#define  NA_get1_Int64 (libnumarray_API ? (*(Int64 (*)  (PyArrayObject*,long) ) libnumarray_API[ 55 ]) : (*(Int64 (*)  (PyArrayObject*,long) ) libnumarray_FatalApiError))

#define  NA_get2_Int64 (libnumarray_API ? (*(Int64 (*)  (PyArrayObject*,long,long) ) libnumarray_API[ 56 ]) : (*(Int64 (*)  (PyArrayObject*,long,long) ) libnumarray_FatalApiError))

#define  NA_get3_Int64 (libnumarray_API ? (*(Int64 (*)  (PyArrayObject*,long,long,long) ) libnumarray_API[ 57 ]) : (*(Int64 (*)  (PyArrayObject*,long,long,long) ) libnumarray_FatalApiError))

#define  NA_set1_Int64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,Int64) ) libnumarray_API[ 58 ]) : (*(void (*)  (PyArrayObject*,long,Int64) ) libnumarray_FatalApiError))

#define  NA_set2_Int64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,long,Int64) ) libnumarray_API[ 59 ]) : (*(void (*)  (PyArrayObject*,long,long,Int64) ) libnumarray_FatalApiError))

#define  NA_set3_Int64 (libnumarray_API ? (*(void (*)  (PyArrayObject*,long,long,long,Int64) ) libnumarray_API[ 60 ]) : (*(void (*)  (PyArrayObject*,long,long,long,Int64) ) libnumarray_FatalApiError))

#define  NA_get1D_Float64 (libnumarray_API ? (*(int (*)  (PyArrayObject*,long,int,Float64*) ) libnumarray_API[ 61 ]) : (*(int (*)  (PyArrayObject*,long,int,Float64*) ) libnumarray_FatalApiError))

#define  NA_set1D_Float64 (libnumarray_API ? (*(int (*)  (PyArrayObject*,long,int,Float64*) ) libnumarray_API[ 62 ]) : (*(int (*)  (PyArrayObject*,long,int,Float64*) ) libnumarray_FatalApiError))

#define  NA_get1D_Int64 (libnumarray_API ? (*(int (*)  (PyArrayObject*,long,int,Int64*) ) libnumarray_API[ 63 ]) : (*(int (*)  (PyArrayObject*,long,int,Int64*) ) libnumarray_FatalApiError))

#define  NA_set1D_Int64 (libnumarray_API ? (*(int (*)  (PyArrayObject*,long,int,Int64*) ) libnumarray_API[ 64 ]) : (*(int (*)  (PyArrayObject*,long,int,Int64*) ) libnumarray_FatalApiError))

#define  NA_get1D_Complex64 (libnumarray_API ? (*(int (*)  (PyArrayObject*,long,int,Complex64*) ) libnumarray_API[ 65 ]) : (*(int (*)  (PyArrayObject*,long,int,Complex64*) ) libnumarray_FatalApiError))

#define  NA_set1D_Complex64 (libnumarray_API ? (*(int (*)  (PyArrayObject*,long,int,Complex64*) ) libnumarray_API[ 66 ]) : (*(int (*)  (PyArrayObject*,long,int,Complex64*) ) libnumarray_FatalApiError))

#define  NA_ShapeEqual (libnumarray_API ? (*(int (*)  (PyArrayObject*,PyArrayObject*) ) libnumarray_API[ 67 ]) : (*(int (*)  (PyArrayObject*,PyArrayObject*) ) libnumarray_FatalApiError))

#define  NA_ShapeLessThan (libnumarray_API ? (*(int (*)  (PyArrayObject*,PyArrayObject*) ) libnumarray_API[ 68 ]) : (*(int (*)  (PyArrayObject*,PyArrayObject*) ) libnumarray_FatalApiError))

#define  NA_ByteOrder (libnumarray_API ? (*(int (*)  (void) ) libnumarray_API[ 69 ]) : (*(int (*)  (void) ) libnumarray_FatalApiError))

#define  NA_IeeeSpecial32 (libnumarray_API ? (*(Bool (*)  (Float32*,Int32*) ) libnumarray_API[ 70 ]) : (*(Bool (*)  (Float32*,Int32*) ) libnumarray_FatalApiError))

#define  NA_IeeeSpecial64 (libnumarray_API ? (*(Bool (*)  (Float64*,Int32*) ) libnumarray_API[ 71 ]) : (*(Bool (*)  (Float64*,Int32*) ) libnumarray_FatalApiError))

#define  NA_updateDataPtr (libnumarray_API ? (*(PyArrayObject* (*)  (PyArrayObject*) ) libnumarray_API[ 72 ]) : (*(PyArrayObject* (*)  (PyArrayObject*) ) libnumarray_FatalApiError))

#define  NA_typeNoToName (libnumarray_API ? (*(char* (*)  (int) ) libnumarray_API[ 73 ]) : (*(char* (*)  (int) ) libnumarray_FatalApiError))

#define  NA_nameToTypeNo (libnumarray_API ? (*(int (*)  (char*) ) libnumarray_API[ 74 ]) : (*(int (*)  (char*) ) libnumarray_FatalApiError))

#define  NA_typeNoToTypeObject (libnumarray_API ? (*(PyObject* (*)  (int) ) libnumarray_API[ 75 ]) : (*(PyObject* (*)  (int) ) libnumarray_FatalApiError))

#define  NA_intTupleFromMaybeLongs (libnumarray_API ? (*(PyObject* (*)  (int,maybelong*) ) libnumarray_API[ 76 ]) : (*(PyObject* (*)  (int,maybelong*) ) libnumarray_FatalApiError))

#define  NA_maybeLongsFromIntTuple (libnumarray_API ? (*(long (*)  (int,maybelong*,PyObject*) ) libnumarray_API[ 77 ]) : (*(long (*)  (int,maybelong*,PyObject*) ) libnumarray_FatalApiError))

#define  NA_intTupleProduct (libnumarray_API ? (*(int (*)  (PyObject *obj, long *product) ) libnumarray_API[ 78 ]) : (*(int (*)  (PyObject *obj, long *product) ) libnumarray_FatalApiError))

#define  NA_isIntegerSequence (libnumarray_API ? (*(long (*)  (PyObject*) ) libnumarray_API[ 79 ]) : (*(long (*)  (PyObject*) ) libnumarray_FatalApiError))

#define  NA_setArrayFromSequence (libnumarray_API ? (*(PyObject* (*)  (PyArrayObject*,PyObject*) ) libnumarray_API[ 80 ]) : (*(PyObject* (*)  (PyArrayObject*,PyObject*) ) libnumarray_FatalApiError))

#define  NA_maxType (libnumarray_API ? (*(int (*)  (PyObject*) ) libnumarray_API[ 81 ]) : (*(int (*)  (PyObject*) ) libnumarray_FatalApiError))

#define  NA_isPythonScalar (libnumarray_API ? (*(int (*)  (PyObject *obj) ) libnumarray_API[ 82 ]) : (*(int (*)  (PyObject *obj) ) libnumarray_FatalApiError))

#define  NA_getPythonScalar (libnumarray_API ? (*(PyObject* (*)  (PyArrayObject*,long) ) libnumarray_API[ 83 ]) : (*(PyObject* (*)  (PyArrayObject*,long) ) libnumarray_FatalApiError))

#define  NA_setFromPythonScalar (libnumarray_API ? (*(int (*)  (PyArrayObject*,long,PyObject*) ) libnumarray_API[ 84 ]) : (*(int (*)  (PyArrayObject*,long,PyObject*) ) libnumarray_FatalApiError))

#define  NA_NDArrayCheck (libnumarray_API ? (*(int (*)  (PyObject*) ) libnumarray_API[ 85 ]) : (*(int (*)  (PyObject*) ) libnumarray_FatalApiError))

#define  NA_NumArrayCheck (libnumarray_API ? (*(int (*)  (PyObject*) ) libnumarray_API[ 86 ]) : (*(int (*)  (PyObject*) ) libnumarray_FatalApiError))

#define  NA_ComplexArrayCheck (libnumarray_API ? (*(int (*)  (PyObject*) ) libnumarray_API[ 87 ]) : (*(int (*)  (PyObject*) ) libnumarray_FatalApiError))

#define  NA_elements (libnumarray_API ? (*(unsigned long (*)  (PyArrayObject*) ) libnumarray_API[ 88 ]) : (*(unsigned long (*)  (PyArrayObject*) ) libnumarray_FatalApiError))

#define  NA_typeObjectToTypeNo (libnumarray_API ? (*(int (*)  (PyObject*) ) libnumarray_API[ 89 ]) : (*(int (*)  (PyObject*) ) libnumarray_FatalApiError))

#define  NA_copyArray (libnumarray_API ? (*(int (*)  (PyArrayObject* to, const PyArrayObject* from) ) libnumarray_API[ 90 ]) : (*(int (*)  (PyArrayObject* to, const PyArrayObject* from) ) libnumarray_FatalApiError))

#define  NA_copy (libnumarray_API ? (*(PyArrayObject* (*)  (PyArrayObject*) ) libnumarray_API[ 91 ]) : (*(PyArrayObject* (*)  (PyArrayObject*) ) libnumarray_FatalApiError))

#define  NA_getType (libnumarray_API ? (*(PyObject* (*)  (PyObject *typeobj_or_name) ) libnumarray_API[ 92 ]) : (*(PyObject* (*)  (PyObject *typeobj_or_name) ) libnumarray_FatalApiError))

#define  NA_callCUFuncCore (libnumarray_API ? (*(PyObject * (*)  (PyObject *cfunc, long niter, long ninargs, long noutargs, PyObject **BufferObj, long *offset) ) libnumarray_API[ 93 ]) : (*(PyObject * (*)  (PyObject *cfunc, long niter, long ninargs, long noutargs, PyObject **BufferObj, long *offset) ) libnumarray_FatalApiError))

#define  NA_callStrideConvCFuncCore (libnumarray_API ? (*(PyObject * (*)  (PyObject *cfunc, int nshape, maybelong *shape, PyObject *inbuffObj,  long inboffset, int nstrides0, maybelong *inbstrides, PyObject *outbuffObj, long outboffset, int nstrides1, maybelong *outbstrides, long nbytes) ) libnumarray_API[ 94 ]) : (*(PyObject * (*)  (PyObject *cfunc, int nshape, maybelong *shape, PyObject *inbuffObj,  long inboffset, int nstrides0, maybelong *inbstrides, PyObject *outbuffObj, long outboffset, int nstrides1, maybelong *outbstrides, long nbytes) ) libnumarray_FatalApiError))

#define  NA_stridesFromShape (libnumarray_API ? (*(void (*)  (int nshape, maybelong *shape, maybelong bytestride, maybelong *strides) ) libnumarray_API[ 95 ]) : (*(void (*)  (int nshape, maybelong *shape, maybelong bytestride, maybelong *strides) ) libnumarray_FatalApiError))

#define  NA_OperatorCheck (libnumarray_API ? (*(int (*)  (PyObject *obj) ) libnumarray_API[ 96 ]) : (*(int (*)  (PyObject *obj) ) libnumarray_FatalApiError))

#define  NA_ConverterCheck (libnumarray_API ? (*(int (*)  (PyObject *obj) ) libnumarray_API[ 97 ]) : (*(int (*)  (PyObject *obj) ) libnumarray_FatalApiError))

#define  NA_UfuncCheck (libnumarray_API ? (*(int (*)  (PyObject *obj) ) libnumarray_API[ 98 ]) : (*(int (*)  (PyObject *obj) ) libnumarray_FatalApiError))

#define  NA_CfuncCheck (libnumarray_API ? (*(int (*)  (PyObject *obj) ) libnumarray_API[ 99 ]) : (*(int (*)  (PyObject *obj) ) libnumarray_FatalApiError))

#define  NA_getByteOffset (libnumarray_API ? (*(int (*)  (PyArrayObject *array, int nindices, maybelong *indices, long *offset) ) libnumarray_API[ 100 ]) : (*(int (*)  (PyArrayObject *array, int nindices, maybelong *indices, long *offset) ) libnumarray_FatalApiError))

#define  NA_swapAxes (libnumarray_API ? (*(int (*)  (PyArrayObject *array, int x, int y) ) libnumarray_API[ 101 ]) : (*(int (*)  (PyArrayObject *array, int x, int y) ) libnumarray_FatalApiError))

#define  NA_initModuleGlobal (libnumarray_API ? (*(PyObject * (*)  (char *module, char *global) ) libnumarray_API[ 102 ]) : (*(PyObject * (*)  (char *module, char *global) ) libnumarray_FatalApiError))

#define  NA_NumarrayType (libnumarray_API ? (*(NumarrayType (*)  (PyObject *seq) ) libnumarray_API[ 103 ]) : (*(NumarrayType (*)  (PyObject *seq) ) libnumarray_FatalApiError))

#define  NA_NewAllFromBuffer (libnumarray_API ? (*(PyArrayObject * (*)  (int ndim, maybelong *shape, NumarrayType type, PyObject *bufferObject, maybelong byteoffset, maybelong bytestride, int byteorder, int aligned, int writeable) ) libnumarray_API[ 104 ]) : (*(PyArrayObject * (*)  (int ndim, maybelong *shape, NumarrayType type, PyObject *bufferObject, maybelong byteoffset, maybelong bytestride, int byteorder, int aligned, int writeable) ) libnumarray_FatalApiError))

#define  NA_alloc1D_Float64 (libnumarray_API ? (*(Float64 * (*)  (PyArrayObject *a, long offset, int cnt) ) libnumarray_API[ 105 ]) : (*(Float64 * (*)  (PyArrayObject *a, long offset, int cnt) ) libnumarray_FatalApiError))

#define  NA_alloc1D_Int64 (libnumarray_API ? (*(Int64 * (*)  (PyArrayObject *a, long offset, int cnt) ) libnumarray_API[ 106 ]) : (*(Int64 * (*)  (PyArrayObject *a, long offset, int cnt) ) libnumarray_FatalApiError))

#define  NA_updateAlignment (libnumarray_API ? (*(void (*)  (PyArrayObject *self) ) libnumarray_API[ 107 ]) : (*(void (*)  (PyArrayObject *self) ) libnumarray_FatalApiError))

#define  NA_updateContiguous (libnumarray_API ? (*(void (*)  (PyArrayObject *self) ) libnumarray_API[ 108 ]) : (*(void (*)  (PyArrayObject *self) ) libnumarray_FatalApiError))

#define  NA_updateStatus (libnumarray_API ? (*(void (*)  (PyArrayObject *self) ) libnumarray_API[ 109 ]) : (*(void (*)  (PyArrayObject *self) ) libnumarray_FatalApiError))

#define  NA_NumArrayCheckExact (libnumarray_API ? (*(int (*)  (PyObject *op) ) libnumarray_API[ 110 ]) : (*(int (*)  (PyObject *op) ) libnumarray_FatalApiError))

#define  NA_NDArrayCheckExact (libnumarray_API ? (*(int (*)  (PyObject *op) ) libnumarray_API[ 111 ]) : (*(int (*)  (PyObject *op) ) libnumarray_FatalApiError))

#define  NA_OperatorCheckExact (libnumarray_API ? (*(int (*)  (PyObject *op) ) libnumarray_API[ 112 ]) : (*(int (*)  (PyObject *op) ) libnumarray_FatalApiError))

#define  NA_ConverterCheckExact (libnumarray_API ? (*(int (*)  (PyObject *op) ) libnumarray_API[ 113 ]) : (*(int (*)  (PyObject *op) ) libnumarray_FatalApiError))

#define  NA_UfuncCheckExact (libnumarray_API ? (*(int (*)  (PyObject *op) ) libnumarray_API[ 114 ]) : (*(int (*)  (PyObject *op) ) libnumarray_FatalApiError))

#define  NA_CfuncCheckExact (libnumarray_API ? (*(int (*)  (PyObject *op) ) libnumarray_API[ 115 ]) : (*(int (*)  (PyObject *op) ) libnumarray_FatalApiError))

#define  NA_getArrayData (libnumarray_API ? (*(char * (*)  (PyArrayObject *ap) ) libnumarray_API[ 116 ]) : (*(char * (*)  (PyArrayObject *ap) ) libnumarray_FatalApiError))

#define  NA_updateByteswap (libnumarray_API ? (*(void (*)  (PyArrayObject *ap) ) libnumarray_API[ 117 ]) : (*(void (*)  (PyArrayObject *ap) ) libnumarray_FatalApiError))

#define  NA_DescrFromType (libnumarray_API ? (*(PyArray_Descr * (*)  (int type) ) libnumarray_API[ 118 ]) : (*(PyArray_Descr * (*)  (int type) ) libnumarray_FatalApiError))

#define  NA_Cast (libnumarray_API ? (*(PyObject * (*)  (PyArrayObject *a, int type) ) libnumarray_API[ 119 ]) : (*(PyObject * (*)  (PyArrayObject *a, int type) ) libnumarray_FatalApiError))

#define  NA_checkFPErrors (libnumarray_API ? (*(int (*)  (void) ) libnumarray_API[ 120 ]) : (*(int (*)  (void) ) libnumarray_FatalApiError))

#define  NA_clearFPErrors (libnumarray_API ? (*(void (*)  (void) ) libnumarray_API[ 121 ]) : (*(void (*)  (void) ) libnumarray_FatalApiError))

#define  NA_checkAndReportFPErrors (libnumarray_API ? (*(int (*)  (char *name) ) libnumarray_API[ 122 ]) : (*(int (*)  (char *name) ) libnumarray_FatalApiError))

#define  NA_IeeeMask32 (libnumarray_API ? (*(Bool (*)  (Float32,Int32) ) libnumarray_API[ 123 ]) : (*(Bool (*)  (Float32,Int32) ) libnumarray_FatalApiError))

#define  NA_IeeeMask64 (libnumarray_API ? (*(Bool (*)  (Float64,Int32) ) libnumarray_API[ 124 ]) : (*(Bool (*)  (Float64,Int32) ) libnumarray_FatalApiError))

#define  _NA_callStridingHelper (libnumarray_API ? (*(int (*)  (PyObject *aux, long dim, long nnumarray, PyArrayObject *numarray[], char *data[], CFUNC_STRIDED_FUNC f) ) libnumarray_API[ 125 ]) : (*(int (*)  (PyObject *aux, long dim, long nnumarray, PyArrayObject *numarray[], char *data[], CFUNC_STRIDED_FUNC f) ) libnumarray_FatalApiError))

#define  NA_FromDimsStridesDescrAndData (libnumarray_API ? (*(PyArrayObject * (*)  (int nd, maybelong *dims, maybelong *strides, PyArray_Descr *descr, char *data) ) libnumarray_API[ 126 ]) : (*(PyArrayObject * (*)  (int nd, maybelong *dims, maybelong *strides, PyArray_Descr *descr, char *data) ) libnumarray_FatalApiError))

#define  NA_FromDimsTypeAndData (libnumarray_API ? (*(PyArrayObject * (*)  (int nd, maybelong *dims, int type, char *data) ) libnumarray_API[ 127 ]) : (*(PyArrayObject * (*)  (int nd, maybelong *dims, int type, char *data) ) libnumarray_FatalApiError))

#define  NA_FromDimsStridesTypeAndData (libnumarray_API ? (*(PyArrayObject * (*)  (int nd, maybelong *dims, maybelong *strides, int type, char *data) ) libnumarray_API[ 128 ]) : (*(PyArrayObject * (*)  (int nd, maybelong *dims, maybelong *strides, int type, char *data) ) libnumarray_FatalApiError))

#define  NA_scipy_typestr (libnumarray_API ? (*(int (*)  (NumarrayType t, int byteorder, char *typestr) ) libnumarray_API[ 129 ]) : (*(int (*)  (NumarrayType t, int byteorder, char *typestr) ) libnumarray_FatalApiError))

#define  NA_FromArrayStruct (libnumarray_API ? (*(PyArrayObject * (*)  (PyObject *a) ) libnumarray_API[ 130 ]) : (*(PyArrayObject * (*)  (PyObject *a) ) libnumarray_FatalApiError))

#endif

  /* Total number of C API pointers */
#define libnumarray_API_pointers 131

#ifdef __cplusplus
}
#endif

#endif /* NUMPY_LIBNUMARRAY_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                  numcomplex.h                                                                                        0100644 0001750 0001750 00000032426 11755722573 043372  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray/include/numpy                             /* See numarray.h for Complex32, Complex64:

typedef struct { Float32 r, i; } Complex32;
typedef struct { Float64 r, i; } Complex64;

*/
typedef struct { Float32 a, theta; } PolarComplex32;
typedef struct { Float64 a, theta; } PolarComplex64;

#define NUM_SQ(x)         ((x)*(x))

#define NUM_CABSSQ(p)     (NUM_SQ((p).r) + NUM_SQ((p).i))

#define NUM_CABS(p)       sqrt(NUM_CABSSQ(p))

#define NUM_C_TO_P(c, p)  (p).a = NUM_CABS(c);                                \
                          (p).theta = atan2((c).i, (c).r);

#define NUM_P_TO_C(p, c)  (c).r = (p).a*cos((p).theta);                       \
                          (c).i = (p).a*sin((p).theta);

#define NUM_CASS(p, q)    (q).r = (p).r, (q).i = (p).i

#define NUM_CADD(p, q, s) (s).r = (p).r + (q).r,                              \
                          (s).i = (p).i + (q).i

#define NUM_CSUB(p, q, s) (s).r = (p).r - (q).r,                              \
                          (s).i = (p).i - (q).i

#define NUM_CMUL(p, q, s)                                                     \
          { Float64 rp = (p).r;                                               \
            Float64 rq = (q).r;                                               \
                (s).r = rp*rq - (p).i*(q).i;                                  \
                (s).i = rp*(q).i + rq*(p).i;                                  \
          }

#define NUM_CDIV(p, q, s)                                                     \
          {                                                                   \
	    Float64 rp = (p).r;                                               \
            Float64 ip = (p).i;                                               \
            Float64 rq = (q).r;                                               \
  	    if ((q).i != 0) {                                                 \
                Float64 temp = NUM_CABSSQ(q);                                 \
                (s).r = (rp*rq+(p).i*(q).i)/temp;                             \
                (s).i = (rq*(p).i-(q).i*rp)/temp;                             \
            } else {                                                          \
 	        (s).r = rp/rq;                                                \
		(s).i = ip/rq;                                                \
            }                                                                 \
          }

#define NUM_CREM(p, q, s)                                                     \
          {  Complex64 r;                                                     \
             NUM_CDIV(p, q, r);                                               \
             r.r = floor(r.r);                                                \
             r.i = 0;                                                         \
             NUM_CMUL(r, q, r);                                               \
             NUM_CSUB(p, r, s);                                               \
          }

#define NUM_CMINUS(p, s)  (s).r = -(p).r; (s).i = -(p).i;
#define NUM_CNEG NUM_CMINUS

#define NUM_CEQ(p, q)  (((p).r == (q).r) && ((p).i == (q).i))
#define NUM_CNE(p, q)  (((p).r != (q).r) || ((p).i != (q).i))
#define NUM_CLT(p, q)  ((p).r < (q).r)
#define NUM_CGT(p, q)  ((p).r > (q).r)
#define NUM_CLE(p, q)  ((p).r <= (q).r)
#define NUM_CGE(p, q)  ((p).r >= (q).r)

/* e**z = e**x * (cos(y)+ i*sin(y)) where z = x + i*y 
   so e**z = e**x * cos(y) +  i * e**x * sin(y)
*/
#define NUM_CEXP(p, s)                                                        \
          { Float64 ex = exp((p).r);                                          \
            (s).r = ex * cos((p).i);                                          \
            (s).i = ex * sin((p).i);                                          \
          }

/* e**w = z;     w = u + i*v;     z = r * e**(i*theta);

e**u * e**(i*v) = r * e**(i*theta); 

log(z) = w;  log(z) = log(r) + i*theta;
 */
#define NUM_CLOG(p, s)                                                      \
          { PolarComplex64 temp;   NUM_C_TO_P(p, temp);                     \
            (s).r = num_log(temp.a);                                        \
            (s).i = temp.theta;                                             \
          }

#define NUM_LOG10_E  0.43429448190325182

#define NUM_CLOG10(p, s)                                                    \
          { NUM_CLOG(p, s);                                                 \
            (s).r *= NUM_LOG10_E;                                           \
            (s).i *= NUM_LOG10_E;                                           \
          }

/* s = p ** q  */
#define NUM_CPOW(p, q, s) { if (NUM_CABSSQ(p) == 0) {                        \
	                       if ((q).r == 0 && (q).i == 0) {               \
                                   (s).r = (s).i = 1;                        \
                               } else {                                      \
                                   (s).r = (s).i = 0;                        \
                               }                                             \
                            } else {                                         \
                               NUM_CLOG(p, s);                               \
                               NUM_CMUL(s, q, s);                            \
                               NUM_CEXP(s, s);                               \
                            }                                                \
                          }
  
#define NUM_CSQRT(p, s)   { Complex64 temp; temp.r = 0.5; temp.i=0;           \
                            NUM_CPOW(p, temp, s);                             \
                          }

#define NUM_CSQR(p, s)   { Complex64 temp; temp.r = 2.0; temp.i=0;            \
                            NUM_CPOW(p, temp, s);                             \
                          }

#define NUM_CSIN(p, s) { Float64 sp = sin((p).r);                             \
                         Float64 cp = cos((p).r);                             \
                         (s).r = cosh((p).i) * sp;                            \
                         (s).i = sinh((p).i) * cp;                            \
                       }

#define NUM_CCOS(p, s) { Float64 sp = sin((p).r);                             \
                         Float64 cp = cos((p).r);                             \
                         (s).r = cosh((p).i) * cp;                            \
                         (s).i = -sinh((p).i) * sp;                           \
                       }

#define NUM_CTAN(p, s) { Complex64 ss, cs;                                    \
                         NUM_CSIN(p, ss);                                     \
                         NUM_CCOS(p, cs);                                     \
                         NUM_CDIV(ss, cs, s);                                 \
                       }

#define NUM_CSINH(p, s) { Float64 sp = sin((p).i);                            \
                          Float64 cp = cos((p).i);                            \
                         (s).r = sinh((p).r) * cp;                            \
                         (s).i = cosh((p).r) * sp;                            \
                       }

#define NUM_CCOSH(p, s) { Float64 sp = sin((p).i);                            \
                          Float64 cp = cos((p).i);                            \
                         (s).r = cosh((p).r) * cp;                            \
                         (s).i = sinh((p).r) * sp;                            \
                       }

#define NUM_CTANH(p, s) { Complex64 ss, cs;                                   \
                         NUM_CSINH(p, ss);                                    \
                         NUM_CCOSH(p, cs);                                    \
                         NUM_CDIV(ss, cs, s);                                 \
                       }

#define NUM_CRPOW(p, v, s) { Complex64 cr; cr.r = v; cr.i = 0;                \
                             NUM_CPOW(p,cr,s);                                \
                           }

#define NUM_CRMUL(p, v, s) (s).r = (p).r * v;  (s).i = (p).i * v;

#define NUM_CIMUL(p, s)    { Float64 temp = (s).r;                            \
                             (s).r = -(p).i;  (s).i = temp;                   \
                           }

/* asin(z) = -i * log(i*z + (1 - z**2)**0.5) */
#define NUM_CASIN(p, s) { Complex64 p1;  NUM_CASS(p, p1);                     \
                         NUM_CIMUL(p, p1);                                    \
			 NUM_CMUL(p, p, s);                                   \
                         NUM_CNEG(s, s);                                      \
                         (s).r += 1;                                          \
                         NUM_CRPOW(s, 0.5, s);                                \
                         NUM_CADD(p1, s, s);                                  \
                         NUM_CLOG(s, s);                                      \
                         NUM_CIMUL(s, s);                                     \
                         NUM_CNEG(s, s);                                      \
                       }

/* acos(z) = -i * log(z + i*(1 - z**2)**0.5) */
#define NUM_CACOS(p, s) { Complex64 p1;  NUM_CASS(p, p1);                     \
 			 NUM_CMUL(p, p, s);                                   \
                         NUM_CNEG(s, s);                                      \
                         (s).r += 1;                                          \
                         NUM_CRPOW(s, 0.5, s);                                \
                         NUM_CIMUL(s, s);                                     \
                         NUM_CADD(p1, s, s);                                  \
                         NUM_CLOG(s, s);                                      \
                         NUM_CIMUL(s, s);                                     \
                         NUM_CNEG(s, s);                                      \
                       }

/* atan(z) = i/2 * log( (i+z) / (i - z) )  */
#define NUM_CATAN(p, s) { Complex64 p1, p2;                                   \
                         NUM_CASS(p, p1); NUM_CNEG(p, p2);                    \
                         p1.i += 1;                                           \
                         p2.i += 1;                                           \
                         NUM_CDIV(p1, p2, s);                                 \
                         NUM_CLOG(s, s);                                      \
                         NUM_CIMUL(s, s);                                     \
                         NUM_CRMUL(s, 0.5, s);                                \
                       }
                         
/* asinh(z) = log( z + (z**2 + 1)**0.5 )   */
#define NUM_CASINH(p, s) { Complex64 p1;   NUM_CASS(p, p1);                   \
                          NUM_CMUL(p, p, s);                                  \
                          (s).r += 1;                                         \
                          NUM_CRPOW(s, 0.5, s);                               \
                          NUM_CADD(p1, s, s);                                 \
                          NUM_CLOG(s, s);                                     \
                        }

/* acosh(z) = log( z + (z**2 - 1)**0.5 )   */
#define NUM_CACOSH(p, s) { Complex64 p1;   NUM_CASS(p, p1);                   \
                          NUM_CMUL(p, p, s);                                  \
                          (s).r -= 1;                                         \
                          NUM_CRPOW(s, 0.5, s);                               \
                          NUM_CADD(p1, s, s);                                 \
                          NUM_CLOG(s, s);                                     \
                        }

/* atanh(z) = 1/2 * log( (1+z)/(1-z) )   */
#define NUM_CATANH(p, s) { Complex64 p1, p2;                                  \
                          NUM_CASS(p, p1); NUM_CNEG(p, p2);                   \
                          p1.r += 1;                                          \
                          p2.r += 1;                                          \
                          NUM_CDIV(p1, p2, s);                                \
                          NUM_CLOG(s, s);                                     \
                          NUM_CRMUL(s, 0.5, s);                               \
                        }


#define NUM_CMIN(p, q) (NUM_CLE(p, q) ? p : q)
#define NUM_CMAX(p, q) (NUM_CGE(p, q) ? p : q)

#define NUM_CNZ(p)      (((p).r != 0) || ((p).i != 0))
#define NUM_CLAND(p, q) (NUM_CNZ(p) & NUM_CNZ(q))
#define NUM_CLOR(p, q)  (NUM_CNZ(p)  | NUM_CNZ(q))
#define NUM_CLXOR(p, q) (NUM_CNZ(p) ^ NUM_CNZ(q))
#define NUM_CLNOT(p)    (!NUM_CNZ(p))

#define NUM_CFLOOR(p, s) (s).r = floor((p).r); (s).i = floor((p).i);
#define NUM_CCEIL(p, s) (s).r = ceil((p).r); (s).i = ceil((p).i);

#define NUM_CFABS(p, s)  (s).r = fabs((p).r);  (s).i = fabs((p).i);
#define NUM_CROUND(p, s) (s).r = num_round((p).r); (s).i = num_round((p).i);
#define NUM_CHYPOT(p, q, s) { Complex64 t;                                    \
                              NUM_CSQR(p, s);  NUM_CSQR(q, t);                \
                              NUM_CADD(s, t, s);                              \
                              NUM_CSQRT(s, s);                                \
                            }
                                                                                                                                                                                                                                          nummacro.h                                                                                          0100644 0001750 0001750 00000037343 11755722573 043027  0                                                                                                    ustar 00                                                                0000000 0000000 osxcross/target/SDK/MacOSX10.11.sdk/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/numpy/numarray/include/numpy                             /* Primarily for compatibility with numarray C-API */

#if !defined(_ndarraymacro)
#define _ndarraymacro

/* The structs defined here are private implementation details of numarray
which are subject to change w/o notice.
*/
 
#define PY_BOOL_CHAR "b"
#define PY_INT8_CHAR "b"
#define PY_INT16_CHAR "h"
#define PY_INT32_CHAR "i"
#define PY_FLOAT32_CHAR "f"
#define PY_FLOAT64_CHAR "d"
#define PY_UINT8_CHAR "h"
#define PY_UINT16_CHAR "i"
#define PY_UINT32_CHAR "i" /* Unless longer int available */
#define PY_COMPLEX64_CHAR "D"
#define PY_COMPLEX128_CHAR "D"

#define PY_LONG_CHAR "l"
#define PY_LONG_LONG_CHAR "L"

#define pyFPE_DIVIDE_BY_ZERO  1
#define pyFPE_OVERFLOW        2
#define pyFPE_UNDERFLOW       4
#define pyFPE_INVALID         8

#define isNonZERO(x) (x != 0) /* to convert values to boolean 1's or 0's */

typedef enum
{
	NUM_CONTIGUOUS=1,
	NUM_NOTSWAPPED=0x0200,
	NUM_ALIGNED=0x0100,
	NUM_WRITABLE=0x0400,
	NUM_COPY=0x0020,

	NUM_C_ARRAY  = (NUM_CONTIGUOUS | NUM_ALIGNED | NUM_NOTSWAPPED),
	NUM_UNCONVERTED = 0
} NumRequirements;

#define UNCONVERTED 0
#define C_ARRAY     (NUM_CONTIGUOUS | NUM_NOTSWAPPED | NUM_ALIGNED)

#define MUST_BE_COMPUTED 2   

#define NUM_FLOORDIVIDE(a,b,out) (out) = floor((a)/(b))

#define NA_Begin() Py_Initialize(); import_libnumarray();
#define NA_End()   NA_Done(); Py_Finalize();

#define NA_OFFSETDATA(num) ((void *) PyArray_DATA(num))

/* unaligned NA_COPY functions */
#define NA_COPY1(i, o)  (*(o) = *(i))
#define NA_COPY2(i, o)  NA_COPY1(i, o), NA_COPY1(i+1, o+1)
#define NA_COPY4(i, o)  NA_COPY2(i, o), NA_COPY2(i+2, o+2)
#define NA_COPY8(i, o)  NA_COPY4(i, o), NA_COPY4(i+4, o+4)
#define NA_COPY16(i, o) NA_COPY8(i, o), NA_COPY8(i+8, o+8)

/* byteswapping macros: these fail if i==o */
#define NA_SWAP1(i, o)  NA_COPY1(i, o)
#define NA_SWAP2(i, o)  NA_SWAP1(i, o+1), NA_SWAP1(i+1, o)
#define NA_SWAP4(i, o)  NA_SWAP2(i, o+2), NA_SWAP2(i+2, o)
#define NA_SWAP8(i, o)  NA_SWAP4(i, o+4), NA_SWAP4(i+4, o)
#define NA_SWAP16(i, o) NA_SWAP8(i, o+8), NA_SWAP8(i+8, o)

/* complex byteswaps must swap each part (real, imag) independently */
#define NA_COMPLEX_SWAP8(i, o)  NA_SWAP4(i, o), NA_SWAP4(i+4, o+4)
#define NA_COMPLEX_SWAP16(i, o) NA_SWAP8(i, o), NA_SWAP8(i+8, o+8)

/* byteswapping macros:  these work even if i == o */
#define NA_TSWAP1(i, o, t) NA_COPY1(i, t), NA_SWAP1(t, o)
#define NA_TSWAP2(i, o, t) NA_COPY2(i, t), NA_SWAP2(t, o)
#define NA_TSWAP4(i, o, t) NA_COPY4(i, t), NA_SWAP4(t, o)
#define NA_TSWAP8(i, o, t) NA_COPY8(i, t), NA_SWAP8(t, o)

/* fast copy functions for %N aligned i and o */
#define NA_ACOPY1(i, o) (((Int8    *)o)[0]   = ((Int8    *)i)[0])
#define NA_ACOPY2(i, o) (((Int16   *)o)[0]   = ((Int16   *)i)[0])
#define NA_ACOPY4(i, o) (((Int32   *)o)[0]   = ((Int32   *)i)[0])
#define NA_ACOPY8(i, o) (((Float64 *)o)[0]   = ((Float64 *)i)[0])
#define NA_ACOPY16(i, o) (((Complex64 *)o)[0]   = ((Complex64 *)i)[0])

/* from here down, type("ai") is NDInfo*  */

#define NA_PTR(ai)   ((char *) NA_OFFSETDATA((ai)))
#define NA_PTR1(ai, i)       (NA_PTR(ai) +                                   \
                              (i)*(ai)->strides[0])
#define NA_PTR2(ai, i, j)    (NA_PTR(ai) +                                   \
                              (i)*(ai)->strides[0] +                         \
                              (j)*(ai)->strides[1])
#define NA_PTR3(ai, i, j, k) (NA_PTR(ai) +                                   \
                              (i)*(ai)->strides[0] +                         \
                              (j)*(ai)->strides[1] +                         \
                              (k)*(ai)->strides[2])

#define NA_SET_TEMP(ai, type, v) (((type *) &__temp__)[0] = v)

#define NA_SWAPComplex64 NA_COMPLEX_SWAP16
#define NA_SWAPComplex32 NA_COMPLEX_SWAP8
#define NA_SWAPFloat64   NA_SWAP8
#define NA_SWAPFloat32   NA_SWAP4
#define NA_SWAPInt64     NA_SWAP8
#define NA_SWAPUInt64    NA_SWAP8
#define NA_SWAPInt32     NA_SWAP4
#define NA_SWAPUInt32    NA_SWAP4
#define NA_SWAPInt16     NA_SWAP2
#define NA_SWAPUInt16    NA_SWAP2
#define NA_SWAPInt8      NA_SWAP1
#define NA_SWAPUInt8     NA_SWAP1
#define NA_SWAPBool      NA_SWAP1

#define NA_COPYComplex64 NA_COPY16
#define NA_COPYComplex32 NA_COPY8
#define NA_COPYFloat64   NA_COPY8
#define NA_COPYFloat32   NA_COPY4
#define NA_COPYInt64     NA_COPY8
#define NA_COPYUInt64    NA_COPY8
#define NA_COPYInt32     NA_COPY4
#define NA_COPYUInt32    NA_COPY4
#define NA_COPYInt16     NA_COPY2
#define NA_COPYUInt16    NA_COPY2
#define NA_COPYInt8      NA_COPY1
#define NA_COPYUInt8     NA_COPY1
#define NA_COPYBool      NA_COPY1

#ifdef __cplusplus
extern "C" {
#endif

#define _makeGetPb(type)		\
static type _NA_GETPb_##type(char *ptr)	\
{						\
	type temp;				\
	NA_SWAP##type(ptr, (char *)&temp);	\
	return temp;				\
}

#define _makeGetPa(type)	             	\
static type _NA_GETPa_##type(char *ptr)         \
{						\
	type temp;				\
	NA_COPY##type(ptr, (char *)&temp);	\
	return temp;				\
}

_makeGetPb(Complex64)
_makeGetPb(Complex32)
_makeGetPb(Float64)
_makeGetPb(Float32)
_makeGetPb(Int64)
_makeGetPb(UInt64)
_makeGetPb(Int32)
_makeGetPb(UInt32)
_makeGetPb(Int16)
_makeGetPb(UInt16)
_makeGetPb(Int8)
_makeGetPb(UInt8)
_makeGetPb(Bool)

_makeGetPa(Complex64)
_makeGetPa(Complex32)
_makeGetPa(Float64)
_makeGetPa(Float32)
_makeGetPa(Int64)
_makeGetPa(UInt64)
_makeGetPa(Int32)
_makeGetPa(UInt32)
_makeGetPa(Int16)
_makeGetPa(UInt16)
_makeGetPa(Int8)
_makeGetPa(UInt8)
_makeGetPa(Bool)

#undef _makeGetPb
#undef _makeGetPa

#define _makeSetPb(type)		\
static void _NA_SETPb_##type(char *ptr, type v)	\
{						\
	NA_SWAP##type(((char *)&v), ptr);	\
	return;					\
}

#define _makeSetPa(type) \
static void _NA_SETPa_##type(char *ptr, type v)	\
{						\
	NA_COPY##type(((char *)&v), ptr);	\
	return;					\
}

_makeSetPb(Complex64)
_makeSetPb(Complex32)
_makeSetPb(Float64)
_makeSetPb(Float32)
_makeSetPb(Int64)
_makeSetPb(UInt64)
_makeSetPb(Int32)
_makeSetPb(UInt32)
_makeSetPb(Int16)
_makeSetPb(UInt16)
_makeSetPb(Int8)
_makeSetPb(UInt8)
_makeSetPb(Bool)

_makeSetPa(Complex64)
_makeSetPa(Complex32)
_makeSetPa(Float64)
_makeSetPa(Float32)
_makeSetPa(Int64)
_makeSetPa(UInt64)
_makeSetPa(Int32)
_makeSetPa(UInt32)
_makeSetPa(Int16)
_makeSetPa(UInt16)
_makeSetPa(Int8)
_makeSetPa(UInt8)
_makeSetPa(Bool)

#undef _makeSetPb
#undef _makeSetPa

#ifdef __cplusplus
	}
#endif

/* ========================== ptr get/set ================================ */

/* byteswapping */
#define NA_GETPb(ai, type, ptr) _NA_GETPb_##type(ptr)

/* aligning */
#define NA_GETPa(ai, type, ptr) _NA_GETPa_##type(ptr)

/* fast (aligned, !byteswapped) */
#define NA_GETPf(ai, type, ptr) (*((type *) (ptr)))

#define NA_GETP(ai, type, ptr)                                                \
   (PyArray_ISCARRAY(ai) ? NA_GETPf(ai, type, ptr)                            \
                   : (PyArray_ISBYTESWAPPED(ai) ?                             \
                                      NA_GETPb(ai, type, ptr)                 \
                                    : NA_GETPa(ai, type, ptr)))

/* NOTE:  NA_SET* macros cannot be used as values. */

/* byteswapping */
#define NA_SETPb(ai, type, ptr, v) _NA_SETPb_##type(ptr, v)

/* aligning */
#define NA_SETPa(ai, type, ptr, v) _NA_SETPa_##type(ptr, v)

/* fast (aligned, !byteswapped) */
#define NA_SETPf(ai, type, ptr, v) ((*((type *) ptr)) = (v))

#define NA_SETP(ai, type, ptr, v)                                             \
    if (PyArray_ISCARRAY(ai)) {                                               \
         NA_SETPf((ai), type, (ptr), (v));                                    \
    } else if (PyArray_ISBYTESWAPPED(ai)) {                                   \
	 NA_SETPb((ai), type, (ptr), (v));                                    \
    } else                                                                    \
         NA_SETPa((ai), type, (ptr), (v))

/* ========================== 1 index get/set ============================ */

/* byteswapping */
#define NA_GET1b(ai, type, i)    NA_GETPb(ai, type, NA_PTR1(ai, i))
/* aligning */
#define NA_GET1a(ai, type, i)    NA_GETPa(ai, type, NA_PTR1(ai, i))
/* fast (aligned, !byteswapped) */
#define NA_GET1f(ai, type, i)    NA_GETPf(ai, type, NA_PTR1(ai, i))
/* testing */
#define NA_GET1(ai, type, i)     NA_GETP(ai, type, NA_PTR1(ai, i))

/* byteswapping */
#define NA_SET1b(ai, type, i, v) NA_SETPb(ai, type, NA_PTR1(ai, i), v)
/* aligning */
#define NA_SET1a(ai, type, i, v) NA_SETPa(ai, type, NA_PTR1(ai, i), v)
/* fast (aligned, !byteswapped) */
#define NA_SET1f(ai, type, i, v) NA_SETPf(ai, type, NA_PTR1(ai, i), v)
/* testing */
#define NA_SET1(ai, type, i, v)  NA_SETP(ai, type,  NA_PTR1(ai, i), v)

/* ========================== 2 index get/set ============================= */

/* byteswapping */
#define NA_GET2b(ai, type, i, j)    NA_GETPb(ai, type, NA_PTR2(ai, i, j))
/* aligning */
#define NA_GET2a(ai, type, i, j)    NA_GETPa(ai, type, NA_PTR2(ai, i, j))
/* fast (aligned, !byteswapped) */
#define NA_GET2f(ai, type, i, j)    NA_GETPf(ai, type, NA_PTR2(ai, i, j))
/* testing */
#define NA_GET2(ai, type, i, j)     NA_GETP(ai, type, NA_PTR2(ai, i, j))

/* byteswapping */
#define NA_SET2b(ai, type, i, j, v) NA_SETPb(ai, type, NA_PTR2(ai, i, j), v)
/* aligning */
#define NA_SET2a(ai, type, i, j, v) NA_SETPa(ai, type, NA_PTR2(ai, i, j), v)
/* fast (aligned, !byteswapped) */
#define NA_SET2f(ai, type, i, j, v) NA_SETPf(ai, type, NA_PTR2(ai, i, j), v)

#define NA_SET2(ai, type, i, j,  v)  NA_SETP(ai, type,  NA_PTR2(ai, i, j), v)

/* ========================== 3 index get/set ============================= */

/* byteswapping */
#define NA_GET3b(ai, type, i, j, k)    NA_GETPb(ai, type, NA_PTR3(ai, i, j, k))
/* aligning */
#define NA_GET3a(ai, type, i, j, k)    NA_GETPa(ai, type, NA_PTR3(ai, i, j, k))
/* fast (aligned, !byteswapped) */
#define NA_GET3f(ai, type, i, j, k)    NA_GETPf(ai, type, NA_PTR3(ai, i, j, k))
/* testing */
#define NA_GET3(ai, type, i, j, k)     NA_GETP(ai, type, NA_PTR3(ai, i, j, k))

/* byteswapping */
#define NA_SET3b(ai, type, i, j, k, v)                                        \
        NA_SETPb(ai, type, NA_PTR3(ai, i, j, k), v)
/* aligning */
#define NA_SET3a(ai, type, i, j, k, v)                                        \
        NA_SETPa(ai, type, NA_PTR3(ai, i, j, k), v)
/* fast (aligned, !byteswapped) */
#define NA_SET3f(ai, type, i, j, k, v)                                        \
        NA_SETPf(ai, type, NA_PTR3(ai, i, j, k), v)
#define NA_SET3(ai, type, i, j, k, v)                                         \
        NA_SETP(ai, type,  NA_PTR3(ai, i, j, k), v)

/* ========================== 1D get/set ================================== */

#define NA_GET1Db(ai, type, base, cnt, out)                                   \
        { int i, stride = ai->strides[ai->nd-1];                              \
           for(i=0; i<cnt; i++) {                                             \
               out[i] = NA_GETPb(ai, type, base);                             \
               base += stride;                                                \
           }                                                                  \
        } 

#define NA_GET1Da(ai, type, base, cnt, out)                                   \
        { int i, stride 